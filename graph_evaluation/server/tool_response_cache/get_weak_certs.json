{
    "{'firmware_hash': 'xxxxx'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': 'XXX'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': '<firmware_hash>'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': '1234567890'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': 'device_fw_hash'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': 'sha2_firmware_hash'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': 'XXXXXXXX'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': 'device_firmware_hash'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': 'XXXXX'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': '123456'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': 'device123'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': 'firmware123'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': '52841661d61e00649451cc471e9b56d169df8041926b1252bb3fd0710c27b12c'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': 'e6f5ae1e2d648ea458531c1aa707c5cd'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': 'device1'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': 'xxxxxxxxxxxx'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': 'af88b1aaac0b222df8539f3ae1479b5c8eaeae41f1776b5dd2fa805cb33a1175'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': '0987654321'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': '12345'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': 'sample_firmware_hash'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': 'your_firmware_hash'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': 'firmware456'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': '123abc'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': 'ABC123'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': 'sha256:c99d123f'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': 'sha256:1234567890abcdef01234567890abcdef01234567890abcdef'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': 'FIRMWARE_HASH'}": {
        "error": "",
        "response": {
            "detail": "An API key must be passed in request header"
        }
    },
    "{'firmware_hash': 'f8c6e8f05e7a3536b67047b8c963dff7'}": {
        "error": "",
        "response": "{'detail': 'An API key must be passed in request header'}"
    },
    "{'firmware_hash': '123456', 'api_key': 'YOUR_API_KEY'}": {
        "error": "",
        "response": {
            "certificates": [
                {
                    "subject": "C=US, ST=California, L=Mountain View, O=SomeTech Inc., CN=www.sometech.com",
                    "issuer": "C=US, O=DigiCert Inc, CN=DigiCert SHA2 High Assurance Server CA",
                    "serial_number": "0a818933000000000473",
                    "valid_from": "2016-03-10T00:00:00Z",
                    "valid_until": "2021-03-15T12:00:00Z",
                    "fingerprint": "E6:68:56:46:46:4D:90:BC:1F:FA:79:C4:6E:FD:E8:0F:37:7F:72:68",
                    "weak_signature_algorithm": "sha1WithRSAEncryption"
                },
                {
                    "subject": "C=US, ST=Some State, L=Some City, O=Device Manufacturer Inc., CN=device.manufacturer.com",
                    "issuer": "C=US, O=Example Trust Inc., CN=Example Trust CA",
                    "serial_number": "01:02:03:04:05:06:07:08",
                    "valid_from": "2015-01-01T00:00:00Z",
                    "valid_until": "2025-01-01T23:59:59Z",
                    "fingerprint": "BB:AA:DD:EE:FF:11:22:33:44:55:66:77:88:99:AB:CD:EF:00:11",
                    "weak_signature_algorithm": null
                }
            ],
            "analysis": {
                "total_certificates_found": 2,
                "total_weak_certificates": 1,
                "vulnerabilities_due_to_weak_certs": [
                    {
                        "vulnerability_id": "CVE-2020-0601",
                        "description": "A spoofing vulnerability exists in the way Windows CryptoAPI (Crypt32.dll) validates Elliptic Curve Cryptography (ECC) certificates, which could allow an attacker to load improperly signed executables.",
                        "impact": "High",
                        "remediation_guidance": "Apply the patch provided by Microsoft to address this vulnerability."
                    }
                ]
            }
        }
    },
    "{'firmware_hash': '<firmware_hash>', 'api_key': '<api_key>'}": {
        "error": "",
        "response": "The 'get_weak_certs' API is designed to analyze the security of the certificates used within the firmware of IoT devices. For the firmware identified by the hash '<firmware_hash>', our analysis has identified several certificates that either have weak hashing algorithms, short key lengths, or have been flagged in known databases of compromised certs. It is crucial to update these certificates to stronger ones to prevent potential exploitation. Detailed risk analysis can be provided upon request, where we can guide you through the mitigation process. Additionally, we recommend implementing regular audits of the security measures in place for the IoT devices in your network to prevent future vulnerabilities."
    },
    "{'firmware_hash': 'sample_firmware_hash', 'api_key': 'your_api_key'}": {
        "error": "",
        "response": "The 'get_weak_certs' API has successfully processed your request. Analysis of the IoT device firmware associated with the hash 'sample_firmware_hash' reveals several potentially weak certificates that may pose security risks. These weak certificates have been identified based on known vulnerabilities, expiration issues, and weak encryption algorithms. It is recommended to review the certificates in question and replace them with stronger alternatives that conform to current best practices in IoT security. For a detailed report on each weak certificate, including their respective chain of trust and potential mitigations, please refer to the comprehensive analysis attached within your account dashboard. Remember to regularly audit your IoT devices for such vulnerabilities to maintain a secure network environment."
    },
    "{'firmware_hash': 'sample_firmware_hash', 'api_key': 'generated_api_key'}": {
        "error": "",
        "response": {
            "cert_analysis": {
                "firmware_hash": "sample_firmware_hash",
                "weak_certificates": [
                    {
                        "subject": "C=US, O=Example Corp, CN=example.com",
                        "serial_number": "00:01:02:03:04:05:06:07",
                        "algorithm": "sha1WithRSAEncryption",
                        "issue_date": "2015-01-01",
                        "expiry_date": "2020-01-01",
                        "status": "expired"
                    },
                    {
                        "subject": "C=US, O=Internet Widgits Pty Ltd, CN=*.widgits.com",
                        "serial_number": "11:22:33:44:55:66:77:88",
                        "algorithm": "md5WithRSAEncryption",
                        "issue_date": "2016-06-01",
                        "expiry_date": "2021-06-01",
                        "status": "weak_algorithm"
                    }
                ],
                "assessment": {
                    "total_certs": 2,
                    "weak_certs": 2,
                    "vulnerable_certs_details": [
                        {
                            "description": "The certificate uses a weak signature algorithm that is prone to collision attacks.",
                            "remediation": "Update the certificate to use a stronger signature algorithm such as sha256WithRSAEncryption."
                        },
                        {
                            "description": "The certificate has expired, making it insecure and likely to be rejected by newer devices or systems.",
                            "remediation": "Renew the certificate with a new expiry date and ensure it uses a strong signature algorithm."
                        }
                    ]
                },
                "advice": "Please update all weak or expired certificates to enhance the security posture of the IoT device firmware."
            }
        }
    }
}