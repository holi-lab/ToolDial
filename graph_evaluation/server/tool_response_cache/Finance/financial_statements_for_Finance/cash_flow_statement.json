{
  "{\n\"ticker\": \"XYZ\"\n}": {
    "error": "",
    "response": "\"{'message': 'An uncaught exception happened while servicing this request. You can investigate this with the `zappa tail` command.', 'traceback': ['Traceback (most recent call last):\\\\n', '  File \\\"/var/task/handler.py\\\", line 540, in handler\\\\n    with Response.from_app(self.wsgi_app, environ) as response:\\\\n', '  File \\\"/var/task/werkzeug/wrappers/base_response.py\\\", line 287, in from_app\\\\n    return cls(*_run_wsgi_app(app, environ, buffered))\\\\n', '  File \\\"/var/task/werkzeug/test.py\\\", line 1119, in run_wsgi_app\\\\n    app_rv = app(environ, start_response)\\\\n', '  File \\\"/var/task/zappa/middleware.py\\\", line 55, in __call__\\\\n    response = self.application(environ, encode_response)\\\\n', '  File \\\"/tmp/supply-api/flask/app.py\\\", line 2464, in __call__\\\\n    return self.wsgi_app(environ, start_response)\\\\n', '  File \\\"/tmp/supply-api/flask/app.py\\\", line 2450, in wsgi_app\\\\n    response = self.handle_exception(e)\\\\n', '  File \\\"/tmp/supply-api/flask/app.py\\\", line 1867, in handle_exception\\\\n    reraise(exc_type, exc_value, tb)\\\\n', '  File \\\"/tmp/supply-api/flask/_compat.py\\\", line 39, in reraise\\\\n    raise value\\\\n', '  File \\\"/tmp/supply-api/flask/app.py\\\", line 2447, in wsgi_app\\\\n    response = self.full_dispatch_request()\\\\n', '  File \\\"/tmp/supply-api/flask/app.py\\\", line 1952, in full_dispatch_request\\\\n    rv = self.handle_user_exception(e)\\\\n', '  File \\\"/tmp/supply-api/flask/app.py\\\", line 1821, in handle_user_exception\\\\n    reraise(exc_type, exc_value, tb)\\\\n', '  File \\\"/tmp/supply-api/flask/_compat.py\\\", line 39, in reraise\\\\n    raise value\\\\n', '  File \\\"/tmp/supply-api/flask/app.py\\\", line 1950, in full_dispatch_request\\\\n    rv = self.dispatch_request()\\\\n', '  File \\\"/tmp/supply-api/flask/app.py\\\", line 1936, in dispatch_request\\\\n    return self.view_functions[rule.endpoint](**req.view_args)\\\\n', '  File \\\"/tmp/supply-api/app.py\\\", line 3027, in scrape_cash_flow\\\\n    assert len(table_rows) > 0\\\\n', 'AssertionError\\\\n']}\""
  },
  "{\n  \"ticker\": \"XYZ\"\n}": {
    "error": "",
    "response": "\"{'message': 'An uncaught exception happened while servicing this request. You can investigate this with the `zappa tail` command.', 'traceback': ['Traceback (most recent call last):\\\\n', '  File \\\"/var/task/handler.py\\\", line 540, in handler\\\\n    with Response.from_app(self.wsgi_app, environ) as response:\\\\n', '  File \\\"/var/task/werkzeug/wrappers/base_response.py\\\", line 287, in from_app\\\\n    return cls(*_run_wsgi_app(app, environ, buffered))\\\\n', '  File \\\"/var/task/werkzeug/test.py\\\", line 1119, in run_wsgi_app\\\\n    app_rv = app(environ, start_response)\\\\n', '  File \\\"/var/task/zappa/middleware.py\\\", line 55, in __call__\\\\n    response = self.application(environ, encode_response)\\\\n', '  File \\\"/tmp/supply-api/flask/app.py\\\", line 2464, in __call__\\\\n    return self.wsgi_app(environ, start_response)\\\\n', '  File \\\"/tmp/supply-api/flask/app.py\\\", line 2450, in wsgi_app\\\\n    response = self.handle_exception(e)\\\\n', '  File \\\"/tmp/supply-api/flask/app.py\\\", line 1867, in handle_exception\\\\n    reraise(exc_type, exc_value, tb)\\\\n', '  File \\\"/tmp/supply-api/flask/_compat.py\\\", line 39, in reraise\\\\n    raise value\\\\n', '  File \\\"/tmp/supply-api/flask/app.py\\\", line 2447, in wsgi_app\\\\n    response = self.full_dispatch_request()\\\\n', '  File \\\"/tmp/supply-api/flask/app.py\\\", line 1952, in full_dispatch_request\\\\n    rv = self.handle_user_exception(e)\\\\n', '  File \\\"/tmp/supply-api/flask/app.py\\\", line 1821, in handle_user_exception\\\\n    reraise(exc_type, exc_value, tb)\\\\n', '  File \\\"/tmp/supply-api/flask/_compat.py\\\", line 39, in reraise\\\\n    raise value\\\\n', '  File \\\"/tmp/supply-api/flask/app.py\\\", line 1950, in full_dispatch_request\\\\n    rv = self.dispatch_request()\\\\n', '  File \\\"/tmp/supply-api/flask/app.py\\\", line 1936, in dispatch_request\\\\n    return self.view_functions[rule.endpoint](**req.view_args)\\\\n', '  File \\\"/tmp/supply-api/app.py\\\", line 3027, in scrape_cash_flow\\\\n    assert len(table_rows) > 0\\\\n', 'AssertionError\\\\n']}\""
  },
  "{'ticker': 'MSFT'}": {
    "error": "",
    "response": {
      "6/30/2020": {
        "Capital Expenditure": "-15441000",
        "End Cash Position": "13576000",
        "Financing Cash Flow": "-46031000",
        "Free Cash Flow": "45234000",
        "Investing Cash Flow": "-12223000",
        "Issuance of Capital Stock": "1343000",
        "Issuance of Debt": "0",
        "Operating Cash Flow": "60675000",
        "Repayment of Debt": "-5518000",
        "Repurchase of Capital Stock": "-22968000"
      },
      "6/30/2021": {
        "Capital Expenditure": "-20622000",
        "End Cash Position": "14224000",
        "Financing Cash Flow": "-48486000",
        "Free Cash Flow": "56118000",
        "Investing Cash Flow": "-27577000",
        "Issuance of Capital Stock": "1693000",
        "Issuance of Debt": null,
        "Operating Cash Flow": "76740000",
        "Repayment of Debt": "-3750000",
        "Repurchase of Capital Stock": "-27385000"
      },
      "6/30/2022": {
        "Capital Expenditure": "-23886000",
        "End Cash Position": "13931000",
        "Financing Cash Flow": "-58876000",
        "Free Cash Flow": "65149000",
        "Investing Cash Flow": "-30311000",
        "Issuance of Capital Stock": "1841000",
        "Issuance of Debt": null,
        "Operating Cash Flow": "89035000",
        "Repayment of Debt": "-9023000",
        "Repurchase of Capital Stock": "-32696000"
      },
      "ttm": {
        "Capital Expenditure": "-24768000",
        "End Cash Position": "15962000",
        "Financing Cash Flow": "-52846000",
        "Free Cash Flow": "59618000",
        "Investing Cash Flow": "-36182000",
        "Issuance of Capital Stock": "1756000",
        "Issuance of Debt": null,
        "Operating Cash Flow": "84386000",
        "Repayment of Debt": "-5947000",
        "Repurchase of Capital Stock": "-28611000"
      }
    }
  },
  "{'ticker': 'GOOGL'}": {
    "error": "",
    "response": {
      "12/31/2019": {
        "Capital Expenditure": "-23548000",
        "End Cash Position": "18498000",
        "Financing Cash Flow": "-23209000",
        "Free Cash Flow": "30972000",
        "Income Tax Paid Supplemental Data": "8203000",
        "Investing Cash Flow": "-29491000",
        "Issuance of Debt": "317000",
        "Operating Cash Flow": "54520000",
        "Repayment of Debt": "-585000",
        "Repurchase of Capital Stock": "-18396000"
      },
      "12/31/2020": {
        "Capital Expenditure": "-22281000",
        "End Cash Position": "26465000",
        "Financing Cash Flow": "-24408000",
        "Free Cash Flow": "42843000",
        "Income Tax Paid Supplemental Data": "4990000",
        "Investing Cash Flow": "-32773000",
        "Issuance of Debt": "11761000",
        "Operating Cash Flow": "65124000",
        "Repayment of Debt": "-2100000",
        "Repurchase of Capital Stock": "-31149000"
      },
      "12/31/2021": {
        "Capital Expenditure": "-24640000",
        "End Cash Position": "20945000",
        "Financing Cash Flow": "-61362000",
        "Free Cash Flow": "67012000",
        "Income Tax Paid Supplemental Data": "13412000",
        "Investing Cash Flow": "-35523000",
        "Issuance of Debt": "20199000",
        "Operating Cash Flow": "91652000",
        "Repayment of Debt": "-21435000",
        "Repurchase of Capital Stock": "-50274000"
      },
      "12/31/2022": {
        "Capital Expenditure": "-31485000",
        "End Cash Position": "21879000",
        "Financing Cash Flow": "-69757000",
        "Free Cash Flow": "60010000",
        "Income Tax Paid Supplemental Data": "18892000",
        "Investing Cash Flow": "-20298000",
        "Issuance of Debt": "52872000",
        "Operating Cash Flow": "91495000",
        "Repayment of Debt": "-54068000",
        "Repurchase of Capital Stock": "-59296000"
      },
      "ttm": {
        "Capital Expenditure": "-31485000",
        "End Cash Position": "21879000",
        "Financing Cash Flow": "-69757000",
        "Free Cash Flow": "60010000",
        "Income Tax Paid Supplemental Data": "18892000",
        "Investing Cash Flow": "-20298000",
        "Issuance of Debt": "52872000",
        "Operating Cash Flow": "91495000",
        "Repayment of Debt": "-54068000",
        "Repurchase of Capital Stock": "-59296000"
      }
    }
  },
  "{'ticker': 'XYZ'}": {
    "error": "",
    "response": "{'message': 'An uncaught exception happened while servicing this request. You can investigate this with the `zappa tail` command.', 'traceback': ['Traceback (most recent call last):\\n', '  File \"/var/task/handler.py\", line 540, in handler\\n    with Response.from_app(self.wsgi_app, environ) as response:\\n', '  File \"/var/task/werkzeug/wrappers/base_response.py\", line 287, in from_app\\n    return cls(*_run_wsgi_app(app, environ, buffered))\\n', '  File \"/var/task/werkzeug/test.py\", line 1119, in run_wsgi_app\\n    app_rv = app(environ, start_response)\\n', '  File \"/var/task/zappa/middleware.py\", line 55, in __call__\\n    response = self.application(environ, encode_response)\\n', '  File \"/tmp/supply-api/flask/app.py\", line 2464, in __call__\\n    return self.wsgi_app(environ, start_response)\\n', '  File \"/tmp/supply-api/flask/app.py\", line 2450, in wsgi_app\\n    response = self.handle_exception(e)\\n', '  File \"/tmp/supply-api/flask/app.py\", line 1867, in handle_exception\\n    reraise(exc_type, exc_value, tb)\\n', '  File \"/tmp/supply-api/flask/_compat.py\", line 39, in reraise\\n    raise value\\n', '  File \"/tmp/supply-api/flask/app.py\", line 2447, in wsgi_app\\n    response = self.full_dispatch_request()\\n', '  File \"/tmp/supply-api/flask/app.py\", line 1952, in full_dispatch_request\\n    rv = self.handle_user_exception(e)\\n', '  File \"/tmp/supply-api/flask/app.py\", line 1821, in handle_user_exception\\n    reraise(exc_type, exc_value, tb)\\n', '  File \"/tmp/supply-api/flask/_compat.py\", line 39, in reraise\\n    raise value\\n', '  File \"/tmp/supply-api/flask/app.py\", line 1950, in full_dispatch_request\\n    rv = self.dispatch_request()\\n', '  File \"/tmp/supply-api/flask/app.py\", line 1936, in dispatch_request\\n    return self.view_functions[rule.endpoint](**req.view_args)\\n', '  File \"/tmp/supply-api/app.py\", line 3027, in scrape_cash_flow\\n    assert len(table_rows) > 0\\n', 'AssertionError\\n']}"
  },
  "{'ticker': 'TSLA'}": {
    "error": "",
    "response": {
      "12/31/2019": {
        "Capital Expenditure": "-1437000",
        "End Cash Position": "6783000",
        "Financing Cash Flow": "1529000",
        "Free Cash Flow": "968000",
        "Income Tax Paid Supplemental Data": "54000",
        "Interest Paid Supplemental Data": "455000",
        "Investing Cash Flow": "-1436000",
        "Issuance of Capital Stock": "848000",
        "Issuance of Debt": "10669000",
        "Operating Cash Flow": "2405000",
        "Repayment of Debt": "-389000"
      },
      "12/31/2020": {
        "Capital Expenditure": "-3242000",
        "End Cash Position": "19901000",
        "Financing Cash Flow": "9973000",
        "Free Cash Flow": "2701000",
        "Income Tax Paid Supplemental Data": "115000",
        "Interest Paid Supplemental Data": "444000",
        "Investing Cash Flow": "-3132000",
        "Issuance of Capital Stock": "12269000",
        "Issuance of Debt": "9713000",
        "Operating Cash Flow": "5943000",
        "Repayment of Debt": "-12201000"
      },
      "12/31/2021": {
        "Capital Expenditure": "-8014000",
        "End Cash Position": "18144000",
        "Financing Cash Flow": "-5203000",
        "Free Cash Flow": "3483000",
        "Income Tax Paid Supplemental Data": "561000",
        "Interest Paid Supplemental Data": "266000",
        "Investing Cash Flow": "-7868000",
        "Issuance of Capital Stock": "0",
        "Issuance of Debt": "8883000",
        "Operating Cash Flow": "11497000",
        "Repayment of Debt": "-14615000"
      },
      "12/31/2022": {
        "Capital Expenditure": "-7172000",
        "End Cash Position": "16924000",
        "Financing Cash Flow": "-3527000",
        "Free Cash Flow": "7552000",
        "Income Tax Paid Supplemental Data": "1203000",
        "Interest Paid Supplemental Data": "152000",
        "Investing Cash Flow": "-11973000",
        "Issuance of Capital Stock": "0",
        "Issuance of Debt": "0",
        "Operating Cash Flow": "14724000",
        "Repayment of Debt": "-3866000"
      },
      "ttm": {
        "Capital Expenditure": "-7172000",
        "End Cash Position": "16924000",
        "Financing Cash Flow": "-3527000",
        "Free Cash Flow": "7552000",
        "Income Tax Paid Supplemental Data": "1203000",
        "Interest Paid Supplemental Data": "152000",
        "Investing Cash Flow": "-11973000",
        "Issuance of Capital Stock": "0",
        "Issuance of Debt": "0",
        "Operating Cash Flow": "14724000",
        "Repayment of Debt": "-3866000"
      }
    }
  },
  "{'ticker': 'V'}": {
    "error": "",
    "response": {
      "9/30/2019": {
        "Capital Expenditure": "-756000",
        "End Cash Position": "10832000",
        "Financing Cash Flow": "-12061000",
        "Free Cash Flow": "12028000",
        "Income Tax Paid Supplemental Data": "2648000",
        "Interest Paid Supplemental Data": "537000",
        "Investing Cash Flow": "-591000",
        "Issuance of Debt": "0",
        "Operating Cash Flow": "12784000",
        "Repayment of Debt": "0",
        "Repurchase of Capital Stock": "-8607000"
      },
      "9/30/2020": {
        "Capital Expenditure": "-736000",
        "End Cash Position": "19171000",
        "Financing Cash Flow": "-3968000",
        "Free Cash Flow": "9704000",
        "Income Tax Paid Supplemental Data": "2671000",
        "Interest Paid Supplemental Data": "537000",
        "Investing Cash Flow": "1427000",
        "Issuance of Debt": "7212000",
        "Operating Cash Flow": "10440000",
        "Repayment of Debt": "0",
        "Repurchase of Capital Stock": "-8114000"
      },
      "9/30/2021": {
        "Capital Expenditure": "-705000",
        "End Cash Position": "19799000",
        "Financing Cash Flow": "-14410000",
        "Free Cash Flow": "14522000",
        "Income Tax Paid Supplemental Data": "3012000",
        "Interest Paid Supplemental Data": "643000",
        "Investing Cash Flow": "-152000",
        "Issuance of Debt": "0",
        "Operating Cash Flow": "15227000",
        "Repayment of Debt": "-3000000",
        "Repurchase of Capital Stock": "-8676000"
      },
      "9/30/2022": {
        "Capital Expenditure": "-970000",
        "End Cash Position": "20377000",
        "Financing Cash Flow": "-12696000",
        "Free Cash Flow": "17879000",
        "Income Tax Paid Supplemental Data": "3741000",
        "Interest Paid Supplemental Data": "607000",
        "Investing Cash Flow": "-4288000",
        "Issuance of Debt": "3218000",
        "Operating Cash Flow": "18849000",
        "Repayment of Debt": "-1000000",
        "Repurchase of Capital Stock": "-11589000"
      },
      "ttm": {
        "Capital Expenditure": "-1046000",
        "End Cash Position": "18784000",
        "Financing Cash Flow": "-14076000",
        "Free Cash Flow": "17742000",
        "Income Tax Paid Supplemental Data": "4194000",
        "Interest Paid Supplemental Data": "607000",
        "Investing Cash Flow": "-4251000",
        "Issuance of Debt": "1001000",
        "Operating Cash Flow": "18788000",
        "Repayment of Debt": "-3250000",
        "Repurchase of Capital Stock": "-10600000"
      }
    }
  }
}