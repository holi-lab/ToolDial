{
  "{'ticker': 'AAPL'}": {
    "error": "",
    "response": {
      "AAPL": {
        "Controversy Score": "C",
        "Environment Score": "A",
        "Governance Score": "C",
        "Social Score": "C",
        "Total ESG Score": "B"
      }
    }
  },
  "{'ticker': 'XYZ'}": {
    "error": "",
    "response": "{'message': 'An uncaught exception happened while servicing this request. You can investigate this with the `zappa tail` command.', 'traceback': ['Traceback (most recent call last):\\n', '  File \"/var/task/handler.py\", line 540, in handler\\n    with Response.from_app(self.wsgi_app, environ) as response:\\n', '  File \"/var/task/werkzeug/wrappers/base_response.py\", line 287, in from_app\\n    return cls(*_run_wsgi_app(app, environ, buffered))\\n', '  File \"/var/task/werkzeug/test.py\", line 1119, in run_wsgi_app\\n    app_rv = app(environ, start_response)\\n', '  File \"/var/task/zappa/middleware.py\", line 55, in __call__\\n    response = self.application(environ, encode_response)\\n', '  File \"/tmp/supply-api/flask/app.py\", line 2464, in __call__\\n    return self.wsgi_app(environ, start_response)\\n', '  File \"/tmp/supply-api/flask/app.py\", line 2450, in wsgi_app\\n    response = self.handle_exception(e)\\n', '  File \"/tmp/supply-api/flask/app.py\", line 1867, in handle_exception\\n    reraise(exc_type, exc_value, tb)\\n', '  File \"/tmp/supply-api/flask/_compat.py\", line 39, in reraise\\n    raise value\\n', '  File \"/tmp/supply-api/flask/app.py\", line 2447, in wsgi_app\\n    response = self.full_dispatch_request()\\n', '  File \"/tmp/supply-api/flask/app.py\", line 1952, in full_dispatch_request\\n    rv = self.handle_user_exception(e)\\n', '  File \"/tmp/supply-api/flask/app.py\", line 1821, in handle_user_exception\\n    reraise(exc_type, exc_value, tb)\\n', '  File \"/tmp/supply-api/flask/_compat.py\", line 39, in reraise\\n    raise value\\n', '  File \"/tmp/supply-api/flask/app.py\", line 1950, in full_dispatch_request\\n    rv = self.dispatch_request()\\n', '  File \"/tmp/supply-api/flask/app.py\", line 1936, in dispatch_request\\n    return self.view_functions[rule.endpoint](**req.view_args)\\n', '  File \"/tmp/supply-api/app.py\", line 427, in get_esg_scores\\n    df[\\'Total ESG Score\\'] = df.apply(lambda x: total_esg_grades(x[\\'Total ESG Score\\']), axis=1)\\n', \"UnboundLocalError: local variable 'df' referenced before assignment\\n\"]}"
  },
  "{'ticker': 'GOOGL'}": {
    "error": "",
    "response": {
      "GOOGL": {
        "Controversy Score": "D",
        "Environment Score": "A",
        "Governance Score": "D",
        "Social Score": "D",
        "Total ESG Score": "C"
      }
    }
  },
  "{'ticker': 'MSFT'}": {
    "error": "",
    "response": {
      "MSFT": {
        "Controversy Score": "C",
        "Environment Score": "A",
        "Governance Score": "B",
        "Social Score": "C",
        "Total ESG Score": "B"
      }
    }
  }
}