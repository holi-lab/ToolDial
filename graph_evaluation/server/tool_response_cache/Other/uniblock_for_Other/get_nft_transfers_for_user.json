{
  "{'chainid': 1, 'walletaddress': '0x123456', 'limit': 10}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0x123456/nft?chainId=1&limit=10&direction=both&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-10T05:51:30.424Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0x123abc'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0x123abc/nft?chainId=1&limit=100&direction=both&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-10T05:51:46.786Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0xabcdef', 'limit': 10}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0xabcdef/nft?chainId=1&limit=10&direction=both&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-10T06:32:15.012Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0x789abc', 'limit': 10}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0x789abc/nft?chainId=1&limit=10&direction=both&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-10T06:32:44.009Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0xdef456', 'limit': 10}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0xdef456/nft?chainId=1&limit=10&direction=both&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-10T06:37:44.436Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0xabc123', 'limit': 10}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0xabc123/nft?chainId=1&limit=10&direction=both&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-10T06:38:06.875Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0x123456789', 'nftaddress': '0xabc123', 'limit': 10}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "nftAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0x123456789/nft?nftAddress=0xabc123&direction=both&chainId=1&limit=10&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-10T06:39:32.167Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '<wallet_address>'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/%3Cwallet_address%3E/nft?chainId=1&limit=100&direction=both&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-10T06:41:28.068Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0xwallet123', 'nftaddress': '0xabc123'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "nftAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0xwallet123/nft?nftAddress=0xabc123&direction=both&chainId=1&limit=100&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-10T07:49:08.168Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0x123456', 'nftaddress': '0xabc123', 'limit': 10}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "nftAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0x123456/nft?nftAddress=0xabc123&direction=both&chainId=1&limit=10&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-10T07:51:09.973Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0xwallet123', 'nftaddress': '0xnftabc123', 'limit': 10}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "nftAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0xwallet123/nft?nftAddress=0xnftabc123&direction=both&chainId=1&limit=10&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-10T07:51:29.790Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0x1234567890'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0x1234567890/nft?chainId=1&limit=100&direction=both&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-10T07:52:01.193Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0x123456789'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0x123456789/nft?chainId=1&limit=100&direction=both&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-10T07:52:20.369Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0xabcdef123456789', 'limit': 10}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0xabcdef123456789/nft?chainId=1&limit=10&direction=both&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-10T07:52:47.816Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0xabcdef1234567890abcdef1234567890abcdef12'}": {
    "error": "",
    "response": {
      "walletAddress": "0xabCDEF1234567890ABcDEF1234567890aBCDeF12",
      "count": 0,
      "total": 0,
      "cursor": null,
      "transfers": []
    }
  },
  "{'chainid': 1, 'walletaddress': '0x123456789abc'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0x123456789abc/nft?chainId=1&limit=100&direction=both&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-10T07:53:14.572Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0xabcdef123456', 'limit': 10}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0xabcdef123456/nft?chainId=1&limit=10&direction=both&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-10T07:53:28.419Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0x123abc', 'nftaddress': '0xabc123', 'limit': 10}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "nftAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0x123abc/nft?nftAddress=0xabc123&direction=both&chainId=1&limit=10&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-10T07:57:43.488Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0xwalletaddress'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0xwalletaddress/nft?chainId=1&limit=100&direction=both&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-10T11:14:55.062Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0x1234567890abcdef'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0x1234567890abcdef/nft?chainId=1&limit=100&direction=both&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-10T11:15:13.084Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0xvalidwalletaddress'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0xvalidwalletaddress/nft?chainId=1&limit=100&direction=both&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-10T11:15:24.257Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0xvalidwalletaddress2'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0xvalidwalletaddress2/nft?chainId=1&limit=100&direction=both&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-10T11:15:38.312Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0x1234567890', 'nftaddress': '0xabc123'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "nftAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0x1234567890/nft?nftAddress=0xabc123&direction=both&chainId=1&limit=100&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-10T11:23:23.537Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0xdef456', 'limit': 10, 'direction': 'received', 'sortbydate': 'asc'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0xdef456/nft?chainId=1&limit=10&direction=received&sortByDate=asc",
      "body": {},
      "timestamp": "2023-07-10T11:23:44.692Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0xabc123', 'limit': 10, 'direction': 'received', 'sortbydate': 'asc'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0xabc123/nft?chainId=1&limit=10&direction=received&sortByDate=asc",
      "body": {},
      "timestamp": "2023-07-10T11:23:48.903Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0xwallet123'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0xwallet123/nft?chainId=1&limit=100&direction=both&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-10T11:27:58.583Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0x123456789abcdef', 'limit': 10}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0x123456789abcdef/nft?chainId=1&limit=10&direction=both&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-10T11:29:54.966Z"
    }
  },
  "{'chainid': 1, 'walletaddress': \"0x... (replace with the user's wallet address)\"}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0x...%20(replace%20with%20the%20user%27s%20wallet%20address)/nft?chainId=1&limit=100&direction=both&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-18T07:30:37.857Z"
    }
  },
  "{'chainid': 1, 'walletaddress': \"0x... (replace with the user's wallet address)\", 'nftaddress': '0x... (replace with the NFT contract address)'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "nftAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0x...%20(replace%20with%20the%20user%27s%20wallet%20address)/nft?nftAddress=0x...+(replace+with+the+NFT+contract+address)&direction=both&chainId=1&limit=100&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-18T07:34:02.829Z"
    }
  },
  "{'chainid': 137, 'walletaddress': '0xdef789'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0xdef789/nft?chainId=137&limit=100&direction=both&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-18T08:24:27.159Z"
    }
  },
  "{'chainid': 137, 'walletaddress': '0x123456789'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0x123456789/nft?chainId=137&limit=100&direction=both&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-18T08:25:08.025Z"
    }
  },
  "{'chainid': 137, 'walletaddress': '0x123456789', 'nftaddress': '0xabc123', 'limit': 10}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "nftAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0x123456789/nft?nftAddress=0xabc123&direction=both&chainId=137&limit=10&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-18T08:34:07.609Z"
    }
  },
  "{'chainid': 1, 'walletaddress': 'user_wallet_address'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/user_wallet_address/nft?chainId=1&limit=100&direction=both&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-18T18:04:24.920Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B', 'limit': 5}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "Unsupported wallet address. Is this account a bot? Please contact support if this is a mistake.",
      "method": "GET",
      "path": "/transfer/0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B/nft?chainId=1&limit=5&direction=both&sortByDate=desc",
      "body": {},
      "timestamp": "2023-07-18T23:13:15.843Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0xabc123'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0xabc123/nft?chainId=1&limit=100&direction=both&sortByDate=desc",
      "body": {},
      "timestamp": "2023-08-14T21:31:25.311Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0x12345678'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/transfer/0x12345678/nft?chainId=1&limit=100&direction=both&sortByDate=desc",
      "body": {},
      "timestamp": "2023-08-14T21:31:33.447Z"
    }
  }
}