{
  "{'chainid': 56, 'walletaddress': '0x123456789'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0x123456789/collections?chainId=56&limit=100",
      "body": {},
      "timestamp": "2023-07-18T07:23:27.311Z"
    }
  },
  "{'chainid': 56, 'walletaddress': '0x1234567890'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0x1234567890/collections?chainId=56&limit=100",
      "body": {},
      "timestamp": "2023-07-18T07:23:36.148Z"
    }
  },
  "{'chainid': 1, 'walletaddress': \"0x... (replace with the user's wallet address)\"}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0x...%20(replace%20with%20the%20user%27s%20wallet%20address)/collections?chainId=1&limit=100",
      "body": {},
      "timestamp": "2023-07-18T07:33:35.860Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0x789xyz'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0x789xyz/collections?chainId=1&limit=100",
      "body": {},
      "timestamp": "2023-07-18T16:48:02.835Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0xabc123'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0xabc123/collections?chainId=1&limit=100",
      "body": {},
      "timestamp": "2023-07-18T16:50:04.242Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0x123456789abc'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0x123456789abc/collections?chainId=1&limit=100",
      "body": {},
      "timestamp": "2023-07-18T16:51:34.933Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0x123456789abcdef'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0x123456789abcdef/collections?chainId=1&limit=100",
      "body": {},
      "timestamp": "2023-07-18T16:51:48.509Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0x9876543210abcdef'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0x9876543210abcdef/collections?chainId=1&limit=100",
      "body": {},
      "timestamp": "2023-07-18T16:52:36.215Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0x9876543210abcdef123456'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0x9876543210abcdef123456/collections?chainId=1&limit=100",
      "body": {},
      "timestamp": "2023-07-18T16:52:46.780Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0xabcdef1234567890'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0xabcdef1234567890/collections?chainId=1&limit=100",
      "body": {},
      "timestamp": "2023-07-18T16:52:55.418Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0x987654321fedcba'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0x987654321fedcba/collections?chainId=1&limit=100",
      "body": {},
      "timestamp": "2023-07-18T16:53:09.198Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0xABCDEF123456'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0xABCDEF123456/collections?chainId=1&limit=100",
      "body": {},
      "timestamp": "2023-07-18T16:53:31.701Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0x123456789abcdef123456789abcdef123456789a'}": {
    "error": "",
    "response": {
      "collections": [],
      "count": 0
    }
  },
  "{'chainid': 1, 'walletaddress': 'user_wallet_address'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/user_wallet_address/collections?chainId=1&limit=100",
      "body": {},
      "timestamp": "2023-07-18T18:03:28.087Z"
    }
  },
  "{'chainid': 1, 'walletaddress': 'user_wallet_address_2'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/user_wallet_address_2/collections?chainId=1&limit=100",
      "body": {},
      "timestamp": "2023-07-18T18:05:04.069Z"
    }
  },
  "{'chainid': 1, 'walletaddress': 'valid_wallet_address'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/valid_wallet_address/collections?chainId=1&limit=100",
      "body": {},
      "timestamp": "2023-07-18T18:06:03.272Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0x1234567890abcdef1234567890abcdef12345678'}": {
    "error": "",
    "response": {
      "collections": [],
      "count": 0
    }
  },
  "{'chainid': 1, 'walletaddress': '0x1234567890abcdef'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0x1234567890abcdef/collections?chainId=1&limit=100",
      "body": {},
      "timestamp": "2023-07-18T23:13:34.978Z"
    }
  }
}