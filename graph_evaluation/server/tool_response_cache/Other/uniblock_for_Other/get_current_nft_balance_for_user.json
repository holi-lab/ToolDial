{
  "{'chainid': 1, 'walletaddress': '0xabcdef'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0xabcdef?chainId=1&limit=100",
      "body": {},
      "timestamp": "2023-07-11T05:57:03.820Z"
    }
  },
  "{'chainid': 1, 'walletaddress': \"0x... (replace with the user's wallet address)\"}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0x...%20(replace%20with%20the%20user%27s%20wallet%20address)?chainId=1&limit=100",
      "body": {},
      "timestamp": "2023-07-18T07:29:33.562Z"
    }
  },
  "{'chainid': 1, 'walletaddress': \"0x... (replace with the user's valid Ethereum address)\"}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0x...%20(replace%20with%20the%20user%27s%20valid%20Ethereum%20address)?chainId=1&limit=100",
      "body": {},
      "timestamp": "2023-07-18T07:35:36.818Z"
    }
  },
  "{'chainid': 137, 'walletaddress': '0x1234567890'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0x1234567890?chainId=137&limit=100",
      "body": {},
      "timestamp": "2023-07-18T08:34:35.208Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0x789xyz'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0x789xyz?chainId=1&limit=100",
      "body": {},
      "timestamp": "2023-07-18T16:45:29.452Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0x123abc'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0x123abc?chainId=1&limit=100",
      "body": {},
      "timestamp": "2023-07-18T16:46:13.532Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0x456def'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0x456def?chainId=1&limit=100",
      "body": {},
      "timestamp": "2023-07-18T16:48:54.036Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0x987zyx'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0x987zyx?chainId=1&limit=100",
      "body": {},
      "timestamp": "2023-07-18T16:49:41.174Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0xabc789'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0xabc789?chainId=1&limit=100",
      "body": {},
      "timestamp": "2023-07-18T16:50:16.076Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0xvalidaddress'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0xvalidaddress?chainId=1&limit=100",
      "body": {},
      "timestamp": "2023-07-18T16:51:06.335Z"
    }
  },
  "{'chainid': 56, 'walletaddress': '0x789xyz'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0x789xyz?chainId=56&limit=100",
      "body": {},
      "timestamp": "2023-07-18T21:03:14.562Z"
    }
  },
  "{'chainid': 56, 'walletaddress': '0x789abc'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0x789abc?chainId=56&limit=100",
      "body": {},
      "timestamp": "2023-07-18T21:03:59.722Z"
    }
  },
  "{'chainid': 56, 'walletaddress': '0x123abc'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0x123abc?chainId=56&limit=100",
      "body": {},
      "timestamp": "2023-07-18T21:04:29.402Z"
    }
  },
  "{'chainid': 56, 'walletaddress': '0x123xyz'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "walletAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/0x123xyz?chainId=56&limit=100",
      "body": {},
      "timestamp": "2023-07-18T21:05:10.277Z"
    }
  },
  "{'chainid': 1, 'walletaddress': '0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db'}": {
    "error": "",
    "response": {
      "count": 1,
      "total": 1,
      "cursor": null,
      "assets": [
        {
          "chainId": 1,
          "balance": "1",
          "nftAddress": "0xAfC35BB87d8ce2477f1B647f112bEB165c7CA449",
          "nftId": "1",
          "nftInfo": {
            "tokenURI": "1",
            "nftAddress": "0xAfC35BB87d8ce2477f1B647f112bEB165c7CA449",
            "nftId": "1",
            "totalSupply": "",
            "chainId": 1,
            "contractType": "ERC1155",
            "image": null,
            "externalUrl": null,
            "name": null,
            "animationUrl": null,
            "description": null,
            "metadata": null
          }
        }
      ]
    }
  },
  "{'chainid': 1, 'walletaddress': '0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B', 'limit': 5}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "Unsupported wallet address. Is this account a bot? Please contact support if this is a mistake.",
      "method": "GET",
      "path": "/nft/0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B?chainId=1&limit=5",
      "body": {},
      "timestamp": "2023-07-18T23:12:46.512Z"
    }
  }
}