{
  "{'chainid': 1, 'collectionaddress': '0xabc123'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "collectionAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/collection/0xabc123/metadata?chainId=1",
      "body": {},
      "timestamp": "2023-07-10T06:36:22.787Z"
    }
  },
  "{'chainid': 1, 'collectionaddress': '0x... (replace with the NFT contract address)'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "collectionAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/collection/0x...%20(replace%20with%20the%20NFT%20contract%20address)/metadata?chainId=1",
      "body": {},
      "timestamp": "2023-07-18T07:30:22.215Z"
    }
  },
  "{'chainid': 1, 'collectionaddress': '0x... (replace with the NFT collection contract address)'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "collectionAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/collection/0x...%20(replace%20with%20the%20NFT%20collection%20contract%20address)/metadata?chainId=1",
      "body": {},
      "timestamp": "2023-07-18T07:33:18.555Z"
    }
  },
  "{'chainid': 137, 'collectionaddress': '0xabc123'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "collectionAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/collection/0xabc123/metadata?chainId=137",
      "body": {},
      "timestamp": "2023-07-18T08:24:22.205Z"
    }
  },
  "{'chainid': 137, 'collectionaddress': '0xdef789'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "collectionAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/collection/0xdef789/metadata?chainId=137",
      "body": {},
      "timestamp": "2023-07-18T08:24:36.234Z"
    }
  },
  "{'chainid': 1, 'collectionaddress': '0xABC123'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "collectionAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/collection/0xABC123/metadata?chainId=1",
      "body": {},
      "timestamp": "2023-07-18T16:45:35.022Z"
    }
  },
  "{'chainid': 1, 'collectionaddress': '0x987xyz'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "collectionAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/collection/0x987xyz/metadata?chainId=1",
      "body": {},
      "timestamp": "2023-07-18T16:47:10.751Z"
    }
  },
  "{'chainid': 1, 'collectionaddress': '<specific NFT contract address>'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "collectionAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/collection/%3Cspecific%20NFT%20contract%20address%3E/metadata?chainId=1",
      "body": {},
      "timestamp": "2023-07-18T16:49:18.736Z"
    }
  },
  "{'chainid': 1, 'collectionaddress': '0x789xyz'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "collectionAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/collection/0x789xyz/metadata?chainId=1",
      "body": {},
      "timestamp": "2023-07-18T16:50:33.821Z"
    }
  },
  "{'chainid': 1, 'collectionaddress': '0x123abc'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "collectionAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/collection/0x123abc/metadata?chainId=1",
      "body": {},
      "timestamp": "2023-07-18T16:50:44.665Z"
    }
  },
  "{'chainid': 1, 'collectionaddress': '0xvalidcontractaddress'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "collectionAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/collection/0xvalidcontractaddress/metadata?chainId=1",
      "body": {},
      "timestamp": "2023-07-18T16:51:42.780Z"
    }
  },
  "{'chainid': 56, 'collectionaddress': '0x123abc'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "collectionAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/collection/0x123abc/metadata?chainId=56",
      "body": {},
      "timestamp": "2023-07-18T21:03:22.605Z"
    }
  },
  "{'chainid': 56, 'collectionaddress': '0x456def'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "collectionAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/collection/0x456def/metadata?chainId=56",
      "body": {},
      "timestamp": "2023-07-18T21:04:06.257Z"
    }
  },
  "{'chainid': 56, 'collectionaddress': '0x789xyz'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "collectionAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/collection/0x789xyz/metadata?chainId=56",
      "body": {},
      "timestamp": "2023-07-18T21:04:37.653Z"
    }
  },
  "{'chainid': 1, 'collectionaddress': '0x1234567890abcdef'}": {
    "error": "",
    "response": {
      "statusCode": 400,
      "message": "collectionAddress must be an Ethereum address",
      "method": "GET",
      "path": "/nft/collection/0x1234567890abcdef/metadata?chainId=1",
      "body": {},
      "timestamp": "2023-07-18T23:10:48.010Z"
    }
  },
  "{'chainid': 1, 'collectionaddress': '0x4bbeEB066eD09B7AEd07bF39EEe0460DFa261520'}": {
    "error": "",
    "response": {
      "contractType": null,
      "symbol": "",
      "name": "",
      "totalSupply": null
    }
  }
}