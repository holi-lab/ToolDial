{
    "tool_name": "String Similarity Comparison",
    "tool_description": "Compare strings according to different algorithms like Jaro-Winkler, Dice, Levenshtein.\n\nIf you need any special resource, please contact me.",
    "title": "String Similarity Comparison",
    "pricing": "FREEMIUM",
    "score": {
        "avgServiceLevel": 82,
        "avgLatency": 267,
        "avgSuccessRate": 82,
        "popularityScore": 9.1,
        "__typename": "Score"
    },
    "home_url": "https://rapidapi.com/dexter123/api/string-similarity-comparison/",
    "host": "string-similarity-comparison.p.rapidapi.com",
    "api_list": [
        {
            "name": "String Comparison Algorithm (GET)",
            "url": "https://string-similarity-comparison.p.rapidapi.com/comparison",
            "description": "String Comparison Algorithm\nSend params as string1 and string2",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "string2",
                    "type": "STRING",
                    "description": "",
                    "default": "facebok"
                },
                {
                    "name": "string1",
                    "type": "STRING",
                    "description": "",
                    "default": "facebook"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://string-similarity-comparison.p.rapidapi.com/comparison\"\nquerystring = {\"string2\": string2, \"string1\": string1}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"string-similarity-comparison.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "String Comparison Algorithm (POST)",
            "url": "https://string-similarity-comparison.p.rapidapi.com/comparison",
            "description": "String Comparison Algorithm\nSend params as a JSON payload with string1 and string2",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://string-similarity-comparison.p.rapidapi.com/comparison\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"string-similarity-comparison.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "String Comparison Algorithm (POST)",
            "url": "https://string-similarity-comparison.p.rapidapi.com/comparison",
            "description": "String Comparison Algorithm\nSend params as a JSON payload with string1 and string2",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://string-similarity-comparison.p.rapidapi.com/comparison\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-similarity-comparison.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://string-similarity-comparison.p.rapidapi.com/comparison\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-similarity-comparison.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}