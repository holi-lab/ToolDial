{
    "tool_name": "TextAnalysisAPI",
    "tool_description": "Natural Language API provides natural language understanding technologies to developers, including sentiment analysis, entity analysis, entity sentiment analysis, content classification, and syntax analysis.",
    "title": "TextAnalysisAPI",
    "pricing": "FREEMIUM",
    "score": null,
    "home_url": "https://rapidapi.com/beslogic-ai-inc-beslogic-ai-inc-default/api/textanalysisapi/",
    "host": "textanalysisapi.p.rapidapi.com",
    "api_list": [
        {
            "name": "Language Detection",
            "url": "https://textanalysisapi.p.rapidapi.com/proxy/qaapi/detect-language/",
            "description": "Detects one or many languages a document is written in and returns it in ISO 639-1 format, from among 62 different languages.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "txt",
                    "type": "STRING",
                    "description": "",
                    "default": " Aucun autre d\u00e9tail sur les circonstances entourant cette mort suspecte n\u2019a \u00e9t\u00e9 d\u00e9voil\u00e9"
                },
                {
                    "name": "txt",
                    "type": "STRING",
                    "description": "",
                    "default": "hello"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://textanalysisapi.p.rapidapi.com/proxy/qaapi/detect-language/\"\nquerystring = {\"txt\": txt}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"textanalysisapi.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": [
                {
                    "code": "fr       ",
                    "confidence": 98,
                    "name": "French      ",
                    "read bytes": 968
                },
                {
                    "code": "un       ",
                    "confidence": 0,
                    "name": "un          ",
                    "read bytes": 0
                },
                {
                    "code": "un       ",
                    "confidence": 0,
                    "name": "un          ",
                    "read bytes": 0
                }
            ],
            "headers": {
                "access-control-allow-origin": "*",
                "content-type": "application/json",
                "date": "Sun, 16 May 2021 15:49:08 GMT",
                "server": "RapidAPI-1.2.8",
                "x-rapidapi-region": "AWS - us-east-1",
                "x-rapidapi-version": "1.2.8",
                "content-length": "332",
                "connection": "Close"
            },
            "schema": {}
        },
        {
            "name": "Entity",
            "url": "https://textanalysisapi.p.rapidapi.com/proxy/ner/ner_tag_mix_out_post",
            "description": "Entity Extraction or Named Entity Recognition (NER) classifies tokens in text into up to 18 predefined categories (tags), such as person names, quantity expressions, percentage expressions, location names, organization names, time expressions, and currency. It also features a multilingual model that is available in 104 languages. NER Beslogic may be used as a knowledge extractor when there is a need to derive specific information from text.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "txt",
                    "type": "STRING",
                    "description": "",
                    "default": "    Hello from Montreal ."
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://textanalysisapi.p.rapidapi.com/proxy/ner/ner_tag_mix_out_post\"\nquerystring = {\"txt\": txt}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"textanalysisapi.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "NER_OUT_TAGS_ONLY": {
                    "B-CARDINAL": [],
                    "B-DATE": [],
                    "B-EVENT": [],
                    "B-FAC": [],
                    "B-GPE": [
                        "Montreal"
                    ],
                    "B-LANGUAGE": [],
                    "B-LAW": [],
                    "B-LOC": [],
                    "B-MONEY": [],
                    "B-NORP": [],
                    "B-ORDINAL": [],
                    "B-ORG": [],
                    "B-PERCENT": [],
                    "B-PERSON": [],
                    "B-PRODUCT": [],
                    "B-QUANTITY": [],
                    "B-TIME": [],
                    "B-WORK_OF_ART": []
                },
                "NER_OUT_TOKEN": [
                    [
                        "Hello",
                        "O"
                    ],
                    [
                        "from",
                        "O"
                    ],
                    [
                        "Montreal",
                        "B-GPE"
                    ],
                    [
                        ".",
                        "O"
                    ]
                ]
            },
            "headers": {
                "content-type": "application/json",
                "date": "Tue, 18 May 2021 20:25:52 GMT",
                "server": "RapidAPI-1.2.8",
                "x-rapidapi-region": "AWS - us-east-1",
                "x-rapidapi-version": "1.2.8",
                "content-length": "609",
                "connection": "Close"
            },
            "schema": {
                "type": "object",
                "properties": {
                    "NER_OUT_TAGS_ONLY": {
                        "type": "object",
                        "properties": {
                            "B-CARDINAL": {
                                "type": "array"
                            },
                            "B-DATE": {
                                "type": "array"
                            },
                            "B-EVENT": {
                                "type": "array"
                            },
                            "B-FAC": {
                                "type": "array"
                            },
                            "B-GPE": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "B-LANGUAGE": {
                                "type": "array"
                            },
                            "B-LAW": {
                                "type": "array"
                            },
                            "B-LOC": {
                                "type": "array"
                            },
                            "B-MONEY": {
                                "type": "array"
                            },
                            "B-NORP": {
                                "type": "array"
                            },
                            "B-ORDINAL": {
                                "type": "array"
                            },
                            "B-ORG": {
                                "type": "array"
                            },
                            "B-PERCENT": {
                                "type": "array"
                            },
                            "B-PERSON": {
                                "type": "array"
                            },
                            "B-PRODUCT": {
                                "type": "array"
                            },
                            "B-QUANTITY": {
                                "type": "array"
                            },
                            "B-TIME": {
                                "type": "array"
                            },
                            "B-WORK_OF_ART": {
                                "type": "array"
                            }
                        }
                    },
                    "NER_OUT_TOKEN": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Similarity",
            "url": "https://textanalysisapi.p.rapidapi.com/proxy/qaapi/get-similar/{word}",
            "description": "Returns phrases related to the provided unigram, or bigram.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "word",
                    "type": "string",
                    "description": "",
                    "default": "dog"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://textanalysisapi.p.rapidapi.com/proxy/qaapi/get-similar/{word}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"textanalysisapi.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Language Detection",
            "url": "https://textanalysisapi.p.rapidapi.com/proxy/qaapi/detect-language/",
            "description": "Detects one or many languages a document is written in and returns it in ISO 639-1 format, from among 62 different languages.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "txt",
                    "type": "STRING",
                    "description": "",
                    "default": " Aucun autre d\u00e9tail sur les circonstances entourant cette mort suspecte n\u2019a \u00e9t\u00e9 d\u00e9voil\u00e9"
                },
                {
                    "name": "txt",
                    "type": "STRING",
                    "description": "",
                    "default": "hello"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://textanalysisapi.p.rapidapi.com/proxy/qaapi/detect-language/\"\nquerystring = {\"txt\": \"hello\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysisapi.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysisapi.p.rapidapi.com/proxy/qaapi/detect-language/\"\nquerystring = {\"txt\": \"hello\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysisapi.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Entity",
            "url": "https://textanalysisapi.p.rapidapi.com/proxy/ner/ner_tag_mix_out_post",
            "description": "Entity Extraction or Named Entity Recognition (NER) classifies tokens in text into up to 18 predefined categories (tags), such as person names, quantity expressions, percentage expressions, location names, organization names, time expressions, and currency. It also features a multilingual model that is available in 104 languages. NER Beslogic may be used as a knowledge extractor when there is a need to derive specific information from text.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "txt",
                    "type": "STRING",
                    "description": "",
                    "default": "    Hello from Montreal ."
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://textanalysisapi.p.rapidapi.com/proxy/ner/ner_tag_mix_out_post\"\nquerystring = {\"txt\": \"    Hello from Montreal .\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysisapi.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysisapi.p.rapidapi.com/proxy/ner/ner_tag_mix_out_post\"\nquerystring = {\"txt\": \"    Hello from Montreal .\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysisapi.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "NER_OUT_TAGS_ONLY": {
                        "type": "object",
                        "properties": {
                            "B-CARDINAL": {
                                "type": "array"
                            },
                            "B-DATE": {
                                "type": "array"
                            },
                            "B-EVENT": {
                                "type": "array"
                            },
                            "B-FAC": {
                                "type": "array"
                            },
                            "B-GPE": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "B-LANGUAGE": {
                                "type": "array"
                            },
                            "B-LAW": {
                                "type": "array"
                            },
                            "B-LOC": {
                                "type": "array"
                            },
                            "B-MONEY": {
                                "type": "array"
                            },
                            "B-NORP": {
                                "type": "array"
                            },
                            "B-ORDINAL": {
                                "type": "array"
                            },
                            "B-ORG": {
                                "type": "array"
                            },
                            "B-PERCENT": {
                                "type": "array"
                            },
                            "B-PERSON": {
                                "type": "array"
                            },
                            "B-PRODUCT": {
                                "type": "array"
                            },
                            "B-QUANTITY": {
                                "type": "array"
                            },
                            "B-TIME": {
                                "type": "array"
                            },
                            "B-WORK_OF_ART": {
                                "type": "array"
                            }
                        }
                    },
                    "NER_OUT_TOKEN": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    ]
}