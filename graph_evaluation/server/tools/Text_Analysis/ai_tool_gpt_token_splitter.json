{
    "product_id": "api_e09147c7-581e-4795-ad66-20046bcf259d",
    "tool_description": "This REST API service provides a way to programmatically split GPT-3 text-prompts into user-defined token-sized slices.",
    "home_url": "https://rapidapi.com/roboreadit-roboreadit-default/api/ai-tool-gpt-token-splitter/",
    "name": "AI Tool - GPT Token Splitter",
    "title": "AI Tool - GPT Token Splitter",
    "pricing": "FREEMIUM",
    "tool_name": "AI Tool - GPT Token Splitter",
    "score": {
        "avgServiceLevel": 0,
        "avgLatency": 718,
        "avgSuccessRate": 0,
        "popularityScore": 0,
        "__typename": "Score"
    },
    "host": "ai-tool-gpt-token-splitter.p.rapidapi.com",
    "api_list": [
        {
            "name": "Using Path Parameters",
            "url": "https://ai-tool-gpt-token-splitter.p.rapidapi.com/api/v1/token-splitter/{text}",
            "description": "limited input text size, limited delimiter quantity.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "max_size",
                    "type": "NUMBER",
                    "description": "",
                    "default": 1024
                },
                {
                    "name": "delimiter",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "include_variations",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": "true"
                }
            ],
            "code": "import requests\n\nurl = \"https://ai-tool-gpt-token-splitter.p.rapidapi.com/api/v1/token-splitter/{text}\"\nquerystring = {\"max_size\": 1024, \"text\": \"\", \"delimiter\": \"\", \"include_variations\": \"true\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-tool-gpt-token-splitter.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ai-tool-gpt-token-splitter.p.rapidapi.com/api/v1/token-splitter/{text}\"\nquerystring = {\"max_size\": 1024, \"text\": \"\", \"delimiter\": \"\", \"include_variations\": \"true\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-tool-gpt-token-splitter.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Internal server error"
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Using Body Parameters",
            "url": "https://ai-tool-gpt-token-splitter.p.rapidapi.com/api/v1/token-splitter/",
            "description": "Large input text size, unlimited input delimiters",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ai-tool-gpt-token-splitter.p.rapidapi.com/api/v1/token-splitter/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-tool-gpt-token-splitter.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ai-tool-gpt-token-splitter.p.rapidapi.com/api/v1/token-splitter/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-tool-gpt-token-splitter.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "title": "Response",
                "type": "object",
                "properties": {
                    "status": {
                        "title": "Status",
                        "type": "string",
                        "default": ""
                    },
                    "info": {
                        "title": "Info",
                        "allOf": [
                            {
                                "title": "Info",
                                "type": "object",
                                "properties": {
                                    "status_desc": {
                                        "title": "Status Description",
                                        "type": "string",
                                        "description": "descriptive text on the status of the API service request.",
                                        "default": ""
                                    },
                                    "version": {
                                        "title": "API Version",
                                        "type": "string",
                                        "description": "API version",
                                        "default": "dev-0.0.0"
                                    },
                                    "date_time_start": {
                                        "title": "Time Request Receieved",
                                        "type": "string",
                                        "description": "date and time, format: YYYY-MM-DDT:HH:MM:SS.ms. i.e. 2022-06-17T:12:06.253",
                                        "format": "date-time"
                                    },
                                    "date_time_end": {
                                        "title": "Time Response Sent Back",
                                        "type": "string",
                                        "description": "date and time, format: YYYY-MM-DDT:HH:MM:SS.ms i.e. 2022-06-17T:12:07.585",
                                        "format": "date-time"
                                    }
                                }
                            }
                        ],
                        "description": "A collection of generic API information."
                    },
                    "user_provided": {
                        "title": "UserProvided",
                        "allOf": [
                            {
                                "title": "UserProvided",
                                "type": "object",
                                "properties": {
                                    "delimiters": {
                                        "title": "Delimiters List of Strings",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "see Request.delimiters schema for more information.",
                                        "default": []
                                    },
                                    "max_size": {
                                        "title": "Max Slice Size In Tokens",
                                        "maximum": 1024,
                                        "minimum": 1,
                                        "type": "integer",
                                        "description": "maximum size of each text slice (in tokens). See Request.max_size schema for more information.",
                                        "default": 1024
                                    },
                                    "include_variations": {
                                        "title": "Include Variations Boolean",
                                        "type": "boolean",
                                        "description": "see Request.include_variations schema for more information",
                                        "default": true
                                    }
                                }
                            }
                        ],
                        "description": "A collection of information provided by the user."
                    },
                    "total": {
                        "title": "Total Response Values",
                        "allOf": [
                            {
                                "title": "CountTotal",
                                "type": "object",
                                "properties": {
                                    "n_tokens": {
                                        "title": "Total Number of Tokens",
                                        "minimum": 0,
                                        "type": "integer",
                                        "description": "\"n_tokens\" represents the total # of tokens from the entire input text. In other words, it is the summation of all \"t\" for all \"n_slices\"",
                                        "default": 0
                                    },
                                    "n_chars": {
                                        "title": "Total Number of Characters",
                                        "minimum": 0,
                                        "type": "integer",
                                        "description": "\"n_chars\" represents the total # of characters from the entire input text.  In other words, it is the summation of all \"c\" for all \"n_slices\"",
                                        "default": 0
                                    },
                                    "n_slices": {
                                        "title": "Total Number of Slices",
                                        "minimum": 0,
                                        "type": "integer",
                                        "description": "\"n_slices\" represents the total # of slices from the entire input text.",
                                        "default": 0
                                    }
                                }
                            }
                        ],
                        "description": "A collection of total counts for tokens, characters, and slices calculated from the input parameters."
                    },
                    "slices": {
                        "title": "Slices",
                        "type": "array",
                        "items": {
                            "title": "Slice",
                            "type": "object",
                            "properties": {
                                "t": {
                                    "title": "t - Total Number of Tokens for Slice",
                                    "minimum": 0,
                                    "type": "integer",
                                    "description": "\"t\" represents the total number of tokens in this specific slice of text.                                                    This number should be less than or equal to your \"max_size\" input parameter.                                                    The resulting value will depend on the processing of the input \"text\", the \"max_size\", and the \"delimiters\".",
                                    "default": 0
                                },
                                "c": {
                                    "title": "c - Total Number of Characters for Slice",
                                    "minimum": 0,
                                    "type": "integer",
                                    "description": "\"c\" represents the number of characters in this specific slice of text.                                                    Use this value to split your input text a token slice of size \"t\".  You can also use the provided start and end indexs to split the text into a slice",
                                    "default": 0
                                },
                                "s": {
                                    "title": "Start Index of Slice",
                                    "minimum": 0,
                                    "type": "integer",
                                    "description": "\"s\" represents the start index (in characters, not tokens) of the original text of a given slice",
                                    "default": 0
                                },
                                "e": {
                                    "title": "End Index of Slice",
                                    "minimum": 0,
                                    "type": "integer",
                                    "description": "\"e\" represents the end index (in characters, not tokens) of the original text of a given slice",
                                    "default": 0
                                }
                            }
                        },
                        "description": "A list of Slice objects. See Slice schema description.",
                        "default": []
                    }
                }
            }
        }
    ],
    "standardized_name": "ai_tool_gpt_token_splitter"
}