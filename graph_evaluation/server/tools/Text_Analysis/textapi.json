{
    "tool_name": "TextAPI",
    "tool_description": "A text extraction, manipulation, and analysis api. Putting the power of natural language processing (nlp) in every developers hands.",
    "title": "TextAPI",
    "pricing": "FREEMIUM",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 28394,
        "avgSuccessRate": 97,
        "popularityScore": 9.6,
        "__typename": "Score"
    },
    "home_url": "https://rapidapi.com/textapi/api/textapi/",
    "host": "textapis.p.rapidapi.com",
    "api_list": [
        {
            "name": "Display Entities",
            "url": "https://textapis.p.rapidapi.com/ner/display",
            "description": "Renders the extracted entity types on submitted text or spans defined manually.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "An October post from Dylan that may be saving you a Google search."
                }
            ],
            "optional_parameters": [
                {
                    "name": "model",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "spans",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://textapis.p.rapidapi.com/ner/display\"\nquerystring = {\"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"textapis.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Extract Entities",
            "url": "https://textapis.p.rapidapi.com/ner",
            "description": "Extracts named entities from text.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "U.S. stocks rallied Thursday, with the Dow Jones Industrial Average up 2.9% in a tempestuous first half of the year."
                }
            ],
            "optional_parameters": [
                {
                    "name": "model",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://textapis.p.rapidapi.com/ner\"\nquerystring = {\"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"textapis.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Extract Entities (POST)",
            "url": "https://textapis.p.rapidapi.com/ner",
            "description": "Extracts named entities from text.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://textapis.p.rapidapi.com/ner\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"textapis.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Sentiment",
            "url": "https://textapis.p.rapidapi.com/sentiment",
            "description": "Get the sentiment of submitted text using VADER (Valence Aware Dictionary and sEntiment Reasoner) is a lexicon and rule-based sentiment analysis tool that is specifically attuned to sentiments expressed in social media.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "I really hate this!"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://textapis.p.rapidapi.com/sentiment\"\nquerystring = {\"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"textapis.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Sentiment (POST)",
            "url": "https://textapis.p.rapidapi.com/sentiment",
            "description": "Get the sentiment of submitted text using VADER (Valence Aware Dictionary and sEntiment Reasoner) is a lexicon and rule-based sentiment analysis tool that is specifically attuned to sentiments expressed in social media.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Content-Type",
                    "type": "STRING",
                    "description": "",
                    "default": "application/json"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://textapis.p.rapidapi.com/sentiment\"\nquerystring = {\"Content-Type\": content_type}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"textapis.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Extract Text [From Webpage] (POST)",
            "url": "https://textapis.p.rapidapi.com/text",
            "description": "Extract text from the webpage linked with the url query parameter.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Content-Type",
                    "type": "STRING",
                    "description": "",
                    "default": "application/json"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://textapis.p.rapidapi.com/text\"\nquerystring = {\"Content-Type\": content_type}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"textapis.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Extract Text [From Webpage]",
            "url": "https://textapis.p.rapidapi.com/text",
            "description": "Extract text from the webpage linked with the url query parameter.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.theguardian.com/world/2020/oct/24/thousands-join-poland-protests-against-strict-abortion-laws"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://textapis.p.rapidapi.com/text\"\nquerystring = {\"url\": url}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"textapis.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Display Entities (POST)",
            "url": "https://textapis.p.rapidapi.com/ner/display",
            "description": "Renders the extracted entity types on submitted text or spans defined manually.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "spans",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "model",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://textapis.p.rapidapi.com/ner/display\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"textapis.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Extract Entities (POST)",
            "url": "https://textapis.p.rapidapi.com/ner",
            "description": "Extracts named entities from text.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://textapis.p.rapidapi.com/ner\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textapis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textapis.p.rapidapi.com/ner\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textapis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Sentiment (POST)",
            "url": "https://textapis.p.rapidapi.com/sentiment",
            "description": "Get the sentiment of submitted text using VADER (Valence Aware Dictionary and sEntiment Reasoner) is a lexicon and rule-based sentiment analysis tool that is specifically attuned to sentiments expressed in social media.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://textapis.p.rapidapi.com/sentiment\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textapis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textapis.p.rapidapi.com/sentiment\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textapis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Extract Text [From Webpage] (POST)",
            "url": "https://textapis.p.rapidapi.com/text",
            "description": "Extract text from the webpage linked with the url query parameter.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://textapis.p.rapidapi.com/text\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textapis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textapis.p.rapidapi.com/text\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textapis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Display Entities (POST)",
            "url": "https://textapis.p.rapidapi.com/ner/display",
            "description": "Renders the extracted entity types on submitted text or spans defined manually.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "spans",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "model",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://textapis.p.rapidapi.com/ner/display\"\nquerystring = {\"text\": \"\", \"spans\": \"\", \"model\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textapis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textapis.p.rapidapi.com/ner/display\"\nquerystring = {\"text\": \"\", \"spans\": \"\", \"model\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textapis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}