{
    "product_id": "api_e68cde85-608b-41c7-8dd4-f8b6b4aad683",
    "tool_description": "Detect bad words in your text and mask them. More than 20 languages are supported like Arabic, Chinese, Czech, Danish, Dutch, English, Esperanto, French, German, Hindi, Hungarian, Italian, Japanese, Korean, Norwegian, Persian, Polish, Portuguese, Spanish, Turkish",
    "home_url": "https://rapidapi.com/MrPicasso/api/profanity-cleaner-bad-word-filter/",
    "name": "Profanity Cleaner (Bad Word Filter)",
    "title": "Profanity Cleaner (Bad Word Filter)",
    "pricing": "FREE",
    "tool_name": "Profanity Cleaner (Bad Word Filter)",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 211,
        "avgSuccessRate": 100,
        "popularityScore": 8.5,
        "__typename": "Score"
    },
    "host": "profanity-cleaner-bad-word-filter.p.rapidapi.com",
    "api_list": [
        {
            "name": "Profanity",
            "url": "https://profanity-cleaner-bad-word-filter.p.rapidapi.com/profanity",
            "description": "This endpoint takes your text in a JSON body and tries to detect profanities which are masked by asterisk (*) characters by default. You can pass other mask characters if needed.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://profanity-cleaner-bad-word-filter.p.rapidapi.com/profanity\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"profanity-cleaner-bad-word-filter.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://profanity-cleaner-bad-word-filter.p.rapidapi.com/profanity\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"profanity-cleaner-bad-word-filter.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}