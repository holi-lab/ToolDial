{
    "product_id": "375",
    "tool_description": "Automate text classification with machine learning models.",
    "home_url": "https://rapidapi.com/zakutynsky/api/MonkeyLearn/",
    "name": "MonkeyLearn",
    "title": "MonkeyLearn",
    "pricing": "FREE",
    "tool_name": "MonkeyLearn",
    "score": {
        "avgServiceLevel": 0,
        "avgLatency": 127268,
        "avgSuccessRate": 0,
        "popularityScore": 1.1,
        "__typename": "Score"
    },
    "host": "MonkeyLearnzakutynskyV1.p.rapidapi.com",
    "api_list": [
        {
            "name": "classify",
            "url": "https://MonkeyLearnzakutynskyV1.p.rapidapi.com/classify",
            "description": "This endpoint allows you to perform the classification of many text samples using only one request to a custom or public module.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiToken",
                    "type": "CREDENTIALS",
                    "description": "The api key obtained from Monkey Learn",
                    "default": ""
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "The text that you want to classify",
                    "default": ""
                },
                {
                    "name": "classifierId",
                    "type": "STRING",
                    "description": "ID of the classifier. Example: cl_5icAVzKR",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "debug",
                    "type": "BOOLEAN",
                    "description": "Set this parameter to true if you want to use the debug output.y",
                    "default": ""
                },
                {
                    "name": "sandbox",
                    "type": "BOOLEAN",
                    "description": "Set this parameter to true if you want to use the sandbox to perform the classification.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/classify\"\nquerystring = {\"apiToken\": \"\", \"text\": \"\", \"debug\": \"\", \"sandbox\": \"\", \"classifierId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/classify\"\nquerystring = {\"apiToken\": \"\", \"text\": \"\", \"debug\": \"\", \"sandbox\": \"\", \"classifierId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "classifyMulti",
            "url": "https://MonkeyLearnzakutynskyV1.p.rapidapi.com/classifyMulti",
            "description": "This endpoint allows you to perform the classification of many text samples using only one request to a custom or public module that you have already installed. In order for this endpoint to work, the module has to be set as a Multilabel Module.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiToken",
                    "type": "CREDENTIALS",
                    "description": "The api key obtained from Monkey Learn",
                    "default": ""
                },
                {
                    "name": "classifierId",
                    "type": "STRING",
                    "description": "ID of the classifier",
                    "default": ""
                },
                {
                    "name": "textList",
                    "type": "LIST",
                    "description": "Type: Array. List of the texts which you want to classify. Example: ['First text to classify','Second text to classify']",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sandbox",
                    "type": "BOOLEAN",
                    "description": "Set this parameter to true if you want to use the sandbox to perform the classification.",
                    "default": ""
                },
                {
                    "name": "debug",
                    "type": "BOOLEAN",
                    "description": "Set this parameter to true if you want to use the debug output.y",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/classifyMulti\"\nquerystring = {\"apiToken\": \"\", \"classifierId\": \"\", \"sandbox\": \"\", \"debug\": \"\", \"textList\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/classifyMulti\"\nquerystring = {\"apiToken\": \"\", \"classifierId\": \"\", \"sandbox\": \"\", \"debug\": \"\", \"textList\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createClassifier",
            "url": "https://MonkeyLearnzakutynskyV1.p.rapidapi.com/createClassifier",
            "description": "This endpoint creates a new classifier.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Classifier name",
                    "default": ""
                },
                {
                    "name": "apiToken",
                    "type": "CREDENTIALS",
                    "description": "The api key obtained from Monkey Learn",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "trainState",
                    "type": "SELECT",
                    "description": "Train state. TRAINED or UNTRAINED",
                    "default": ""
                },
                {
                    "name": "stopWords",
                    "type": "STRING",
                    "description": "Stopwords are words that usually do not contribute as classification features. Example: soft,it",
                    "default": ""
                },
                {
                    "name": "normalizeWeights",
                    "type": "BOOLEAN",
                    "description": "Weights normalize",
                    "default": ""
                },
                {
                    "name": "ngramRange",
                    "type": "STRING",
                    "description": "N-gram range sets if features to be used to characterize texts will be Unigrams, Bigrams or Trigrams. Example: 1-1",
                    "default": ""
                },
                {
                    "name": "stripStopwords",
                    "type": "BOOLEAN",
                    "description": "Strip ",
                    "default": ""
                },
                {
                    "name": "classifier",
                    "type": "STRING",
                    "description": "Use this setting to choose which classification algorithm you want to use for this classifier. ",
                    "default": ""
                },
                {
                    "name": "isMultilabel",
                    "type": "BOOLEAN",
                    "description": "Define if the module is single-label (default) or multi-label. You can only set this option when you first create the module and you cannot change it later.",
                    "default": ""
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "Classifier description",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "This setting should match the language in your samples. Default: en",
                    "default": ""
                },
                {
                    "name": "useStemmer",
                    "type": "BOOLEAN",
                    "description": "This setting sets if words should be stemmed. The stemming process transforms words into their root form, so inflected and derived words are grouped together. Default: true",
                    "default": ""
                },
                {
                    "name": "maxFeatures",
                    "type": "NUMBER",
                    "description": "This sets the maximum number of features to be used to characterize texts in the training/classification process. ",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/createClassifier\"\nquerystring = {\"trainState\": \"\", \"stopWords\": \"\", \"normalizeWeights\": \"\", \"name\": \"\", \"ngramRange\": \"\", \"stripStopwords\": \"\", \"classifier\": \"\", \"isMultilabel\": \"\", \"description\": \"\", \"language\": \"\", \"apiToken\": \"\", \"useStemmer\": \"\", \"maxFeatures\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/createClassifier\"\nquerystring = {\"trainState\": \"\", \"stopWords\": \"\", \"normalizeWeights\": \"\", \"name\": \"\", \"ngramRange\": \"\", \"stripStopwords\": \"\", \"classifier\": \"\", \"isMultilabel\": \"\", \"description\": \"\", \"language\": \"\", \"apiToken\": \"\", \"useStemmer\": \"\", \"maxFeatures\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createClassifierCategory",
            "url": "https://MonkeyLearnzakutynskyV1.p.rapidapi.com/createClassifierCategory",
            "description": "This endpoint creates a new category on the tree. You have to select a name and a parent category.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiToken",
                    "type": "CREDENTIALS",
                    "description": "The api key obtained from Monkey Learn",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Category name",
                    "default": ""
                },
                {
                    "name": "parentId",
                    "type": "STRING",
                    "description": "ID of parent category",
                    "default": ""
                },
                {
                    "name": "projectId",
                    "type": "STRING",
                    "description": "ID of the project",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/createClassifierCategory\"\nquerystring = {\"apiToken\": \"\", \"name\": \"\", \"parentId\": \"\", \"projectId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/createClassifierCategory\"\nquerystring = {\"apiToken\": \"\", \"name\": \"\", \"parentId\": \"\", \"projectId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteClassifier",
            "url": "https://MonkeyLearnzakutynskyV1.p.rapidapi.com/deleteClassifier",
            "description": "This endpoint deletes a classifier. This action cannot be undone.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "classifierId",
                    "type": "STRING",
                    "description": "ID of the classifier",
                    "default": ""
                },
                {
                    "name": "apiToken",
                    "type": "CREDENTIALS",
                    "description": "The api key obtained from Monkey Learn",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/deleteClassifier\"\nquerystring = {\"classifierId\": \"\", \"apiToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/deleteClassifier\"\nquerystring = {\"classifierId\": \"\", \"apiToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteClassifierCategory",
            "url": "https://MonkeyLearnzakutynskyV1.p.rapidapi.com/deleteClassifierCategory",
            "description": "This endpoint deletes a category from the tree. This action cannot be undone.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "projectId",
                    "type": "STRING",
                    "description": "ID of the project",
                    "default": ""
                },
                {
                    "name": "samplesStrategy",
                    "type": "SELECT",
                    "description": "Parameter can have 2 values: \u201cmove-to-parent\u201d or \u201cmove-to\u201d. If you select \u201cmove-to\u201d then also have to set the \u201csamples-category-id\u201d paremeter with the id of the category where you want to move the samples.",
                    "default": ""
                },
                {
                    "name": "categoryId",
                    "type": "STRING",
                    "description": "Category id",
                    "default": ""
                },
                {
                    "name": "apiToken",
                    "type": "CREDENTIALS",
                    "description": "The api key obtained from Monkey Learn",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "samplesCategoryId",
                    "type": "STRING",
                    "description": "Category id",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/deleteClassifierCategory\"\nquerystring = {\"projectId\": \"\", \"samplesStrategy\": \"\", \"categoryId\": \"\", \"samplesCategoryId\": \"\", \"apiToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/deleteClassifierCategory\"\nquerystring = {\"projectId\": \"\", \"samplesStrategy\": \"\", \"categoryId\": \"\", \"samplesCategoryId\": \"\", \"apiToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deployClassifier",
            "url": "https://MonkeyLearnzakutynskyV1.p.rapidapi.com/deployClassifier",
            "description": "This endpoint allows you to deploy the current sandbox classifier as the live classifier. Note that the old live classifier will be overwritten.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiToken",
                    "type": "CREDENTIALS",
                    "description": "The api key obtained from Monkey Learn",
                    "default": ""
                },
                {
                    "name": "classifierId",
                    "type": "STRING",
                    "description": "ID of the classifier",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/deployClassifier\"\nquerystring = {\"apiToken\": \"\", \"classifierId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/deployClassifier\"\nquerystring = {\"apiToken\": \"\", \"classifierId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "executePipeline",
            "url": "https://MonkeyLearnzakutynskyV1.p.rapidapi.com/executePipeline",
            "description": "Executes the selected pipeline.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiToken",
                    "type": "CREDENTIALS",
                    "description": "The api key obtained from Monkey Learn",
                    "default": ""
                },
                {
                    "name": "pipelineId",
                    "type": "STRING",
                    "description": "A list of texts from which to extract the entities.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "data",
                    "type": "JSON",
                    "description": "Depends on the pipeline definition. The JSON you post here will be used as the initial state of the Pipeline.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/executePipeline\"\nquerystring = {\"apiToken\": \"\", \"data\": \"\", \"pipelineId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/executePipeline\"\nquerystring = {\"apiToken\": \"\", \"data\": \"\", \"pipelineId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "extractEntities",
            "url": "https://MonkeyLearnzakutynskyV1.p.rapidapi.com/extractEntities",
            "description": "Extract Entities from a list of texts using Named Entity Recognition (NER). NER labels sequences of words in a text which are the names of things, such as person and company names. This implementation labels 3 classes: PERSON, ORGANIZATION and LOCATION.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiToken",
                    "type": "CREDENTIALS",
                    "description": "The api key obtained from Monkey Learn",
                    "default": ""
                },
                {
                    "name": "textList",
                    "type": "LIST",
                    "description": "Type: Array. A list of texts from which to extract the entities. Example: [\"Juan lives in Uruguay.\", \"Monica lives in the USA.\"]",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/extractEntities\"\nquerystring = {\"apiToken\": \"\", \"textList\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/extractEntities\"\nquerystring = {\"apiToken\": \"\", \"textList\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "extractEntitiesInSpanish",
            "url": "https://MonkeyLearnzakutynskyV1.p.rapidapi.com/extractEntitiesInSpanish",
            "description": "Extract Entities from a list of texts in Spanish using Named Entity Recognition (NER). NER labels sequences of words in a text which are the names of things, such as person and company names. This implementation labels 4 classes: PERS, ORG, LUG and OTROS.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiToken",
                    "type": "CREDENTIALS",
                    "description": "The api key obtained from Monkey Learn",
                    "default": ""
                },
                {
                    "name": "textList",
                    "type": "LIST",
                    "description": "Type: Array. A list of texts from which to extract the entities. Example: [\"Juan vive en Uruguay.\", \"Monica vive en USA.\"]",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/extractEntitiesInSpanish\"\nquerystring = {\"apiToken\": \"\", \"textList\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/extractEntitiesInSpanish\"\nquerystring = {\"apiToken\": \"\", \"textList\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "extractKeywordsInEnglish",
            "url": "https://MonkeyLearnzakutynskyV1.p.rapidapi.com/extractKeywordsInEnglish",
            "description": "Extract keywords from a list of texts in English.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiToken",
                    "type": "CREDENTIALS",
                    "description": "The api key obtained from Monkey Learn",
                    "default": ""
                },
                {
                    "name": "textList",
                    "type": "LIST",
                    "description": "Type: List. A list of texts from which to extract keywords. Example: [\"Monkeylearn is a Text Mining toolkit.\", \"This is a very good extractor\"]",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "useStemming",
                    "type": "BOOLEAN",
                    "description": "Take words to their base form in order to get better results , defaults to true.",
                    "default": ""
                },
                {
                    "name": "expandAcronyms",
                    "type": "BOOLEAN",
                    "description": "Expand acronyms to they full form, for example \u2018USA\u2019 to \u2018United States of America\u2019 if both tokens appear in the given text. Defaults to false.",
                    "default": ""
                },
                {
                    "name": "lowercase",
                    "type": "BOOLEAN",
                    "description": "Lowercase all the given text, defaults to false.",
                    "default": ""
                },
                {
                    "name": "useCompanyNames",
                    "type": "BOOLEAN",
                    "description": "Expand company names, if in the text appears the word \u2018Google\u2019 and in other part appears \u2018Google Inc.\u2019, the word \u2018Google\u2019 will be expanded to \u2018Google Inc.\u2019. Defaults to false.",
                    "default": ""
                },
                {
                    "name": "maxKeywords",
                    "type": "NUMBER",
                    "description": "The maximum amount of keywords to extract, defaults to 10.",
                    "default": ""
                },
                {
                    "name": "keepAmpersand",
                    "type": "BOOLEAN",
                    "description": "Keep the \u2018&\u2019 char when it appears inside a name. For example \u2018Ferrara & Wolf\u2019. Defaults to false.",
                    "default": ""
                },
                {
                    "name": "useIdfs",
                    "type": "BOOLEAN",
                    "description": "Use a language model for computing the Inverse Document Frequencies, defaults to true.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/extractKeywordsInEnglish\"\nquerystring = {\"apiToken\": \"\", \"useStemming\": \"\", \"expandAcronyms\": \"\", \"lowercase\": \"\", \"useCompanyNames\": \"\", \"maxKeywords\": \"\", \"keepAmpersand\": \"\", \"useIdfs\": \"\", \"textList\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/extractKeywordsInEnglish\"\nquerystring = {\"apiToken\": \"\", \"useStemming\": \"\", \"expandAcronyms\": \"\", \"lowercase\": \"\", \"useCompanyNames\": \"\", \"maxKeywords\": \"\", \"keepAmpersand\": \"\", \"useIdfs\": \"\", \"textList\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "extractKeywordsInSpanish",
            "url": "https://MonkeyLearnzakutynskyV1.p.rapidapi.com/extractKeywordsInSpanish",
            "description": "Extract keywords from a list of texts in Spanish.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiToken",
                    "type": "CREDENTIALS",
                    "description": "The api key obtained from Monkey Learn",
                    "default": ""
                },
                {
                    "name": "textList",
                    "type": "LIST",
                    "description": "Type: List. A list of texts from which to extract keywords. ",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "maxKeywords",
                    "type": "NUMBER",
                    "description": "The maximum amount of keywords to extract, defaults to 10.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/extractKeywordsInSpanish\"\nquerystring = {\"apiToken\": \"\", \"maxKeywords\": \"\", \"textList\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/extractKeywordsInSpanish\"\nquerystring = {\"apiToken\": \"\", \"maxKeywords\": \"\", \"textList\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "extractTextFromBinary",
            "url": "https://MonkeyLearnzakutynskyV1.p.rapidapi.com/extractTextFromBinary",
            "description": "Extract plain text from binary documents as .doc, .docx, .pdf and .odt.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiToken",
                    "type": "CREDENTIALS",
                    "description": "The api key obtained from Monkey Learn",
                    "default": ""
                },
                {
                    "name": "file",
                    "type": "FILE",
                    "description": "The binary file from which to extract the text.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/extractTextFromBinary\"\nquerystring = {\"apiToken\": \"\", \"file\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/extractTextFromBinary\"\nquerystring = {\"apiToken\": \"\", \"file\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "extractTextFromHTML",
            "url": "https://MonkeyLearnzakutynskyV1.p.rapidapi.com/extractTextFromHTML",
            "description": "Extract relevant text from a list of HTML\u2019s. This algorithm can be used to detect and remove the surplus \u201cclutter\u201d (boilerplate, templates) around the main textual content of a web page.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "html",
                    "type": "STRING",
                    "description": "HTML from which to extract the texts. Example: '<html><body><h1>New products and services are released every month that dramatically change how we can develop products and manage our IT shops. Innovation is everywhere; it can be hard to keep up, but that is part of the fun</h1></body></html>'",
                    "default": ""
                },
                {
                    "name": "apiToken",
                    "type": "CREDENTIALS",
                    "description": "The api key obtained from Monkey Learn",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/extractTextFromHTML\"\nquerystring = {\"html\": \"\", \"apiToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/extractTextFromHTML\"\nquerystring = {\"html\": \"\", \"apiToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getClassifiers",
            "url": "https://MonkeyLearnzakutynskyV1.p.rapidapi.com/getClassifiers",
            "description": "This endpoint returns the classifier and it\u2019s sandbox categories attributes.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiToken",
                    "type": "CREDENTIALS",
                    "description": "The api key obtained from Monkey Learn",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/getClassifiers\"\nquerystring = {\"apiToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/getClassifiers\"\nquerystring = {\"apiToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleClassifier",
            "url": "https://MonkeyLearnzakutynskyV1.p.rapidapi.com/getSingleClassifier",
            "description": "This endpoint returns the classifier and it\u2019s sandbox categories attributes.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "classifierId",
                    "type": "STRING",
                    "description": "ID of the classifier",
                    "default": ""
                },
                {
                    "name": "apiToken",
                    "type": "CREDENTIALS",
                    "description": "The api key obtained from Monkey Learn",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/getSingleClassifier\"\nquerystring = {\"classifierId\": \"\", \"apiToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/getSingleClassifier\"\nquerystring = {\"classifierId\": \"\", \"apiToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "trainClassifier",
            "url": "https://MonkeyLearnzakutynskyV1.p.rapidapi.com/trainClassifier",
            "description": "This endpoint allows you to train a classifier.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "classifierId",
                    "type": "STRING",
                    "description": "ID of the classifier",
                    "default": ""
                },
                {
                    "name": "apiToken",
                    "type": "CREDENTIALS",
                    "description": "The api key obtained from Monkey Learn",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/trainClassifier\"\nquerystring = {\"classifierId\": \"\", \"apiToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/trainClassifier\"\nquerystring = {\"classifierId\": \"\", \"apiToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateClassifierCategory",
            "url": "https://MonkeyLearnzakutynskyV1.p.rapidapi.com/updateClassifierCategory",
            "description": "This endpoint edits a category from the tree on a classifier.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Category name",
                    "default": ""
                },
                {
                    "name": "projectId",
                    "type": "STRING",
                    "description": "ID of the project",
                    "default": ""
                },
                {
                    "name": "apiToken",
                    "type": "CREDENTIALS",
                    "description": "The api key obtained from Monkey Learn",
                    "default": ""
                },
                {
                    "name": "parentId",
                    "type": "STRING",
                    "description": "ID of parent category",
                    "default": ""
                },
                {
                    "name": "categoryId",
                    "type": "STRING",
                    "description": "ID of category",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/updateClassifierCategory\"\nquerystring = {\"name\": \"\", \"projectId\": \"\", \"apiToken\": \"\", \"parentId\": \"\", \"categoryId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/updateClassifierCategory\"\nquerystring = {\"name\": \"\", \"projectId\": \"\", \"apiToken\": \"\", \"parentId\": \"\", \"categoryId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "uploadSamplesToCategory",
            "url": "https://MonkeyLearnzakutynskyV1.p.rapidapi.com/uploadSamplesToCategory",
            "description": "This endpoints allows you to upload samples to the categories.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "projectId",
                    "type": "STRING",
                    "description": "ID of the project",
                    "default": ""
                },
                {
                    "name": "samples",
                    "type": "STRING",
                    "description": "A list of dictionaries with the sample text (text property) and the ID of the category that sample should be saved (category_id property). The category IDs can be retrived using the classifier detail endpoint. Example: [{\"text\":\"Example sample test 1 to category\",\"category_id\":17145562}]",
                    "default": ""
                },
                {
                    "name": "apiToken",
                    "type": "CREDENTIALS",
                    "description": "The api key obtained from Monkey Learn",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/uploadSamplesToCategory\"\nquerystring = {\"projectId\": \"\", \"samples\": \"\", \"apiToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/uploadSamplesToCategory\"\nquerystring = {\"projectId\": \"\", \"samples\": \"\", \"apiToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "uploadSamplesToMultiCategory",
            "url": "https://MonkeyLearnzakutynskyV1.p.rapidapi.com/uploadSamplesToMultiCategory",
            "description": "This endpoints allows you to upload samples to one or more categories.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "projectId",
                    "type": "STRING",
                    "description": "ID of the project",
                    "default": ""
                },
                {
                    "name": "apiToken",
                    "type": "CREDENTIALS",
                    "description": "The api key obtained from Monkey Learn",
                    "default": ""
                },
                {
                    "name": "samples",
                    "type": "STRING",
                    "description": "A list of dictionaries with the sample text (text property) and the ID of the category that sample should be saved (category_id property). The category IDs can be retrived using the classifier detail endpoint. Example: [{\"text\":\"Example sample asdasdasdtest asdasd1 to category\",\"category_id\":[17145562]}]",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/uploadSamplesToMultiCategory\"\nquerystring = {\"projectId\": \"\", \"apiToken\": \"\", \"samples\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://MonkeyLearnzakutynskyV1.p.rapidapi.com/uploadSamplesToMultiCategory\"\nquerystring = {\"projectId\": \"\", \"apiToken\": \"\", \"samples\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"MonkeyLearnzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}