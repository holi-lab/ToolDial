{
    "product_id": "53aa6139e4b051a76d241e65",
    "tool_description": "RussianSentimentAnalyzer (RSA) is a JSON API to detect object level sentiment volume and direction for texts in Russian. Key advantages: very light-weight API, that delivers the quality of sentiment analysis you need",
    "home_url": "https://rapidapi.com/insider-insider-default/api/russiansentimentanalyzer/",
    "name": "RussianSentimentAnalyzer",
    "title": "RussianSentimentAnalyzer",
    "pricing": "FREEMIUM",
    "tool_name": "RussianSentimentAnalyzer",
    "score": null,
    "host": "russiansentimentanalyzer.p.rapidapi.com",
    "api_list": [
        {
            "name": "Input text for subjectivity",
            "url": "https://russiansentimentanalyzer.p.rapidapi.com/sentiment/subjectivity",
            "description": "Check if this text is subjective (contains emotions) or objective (informative, but does not contain emotion colour), optionally for given target object keywords",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://russiansentimentanalyzer.p.rapidapi.com/sentiment/subjectivity\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"russiansentimentanalyzer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://russiansentimentanalyzer.p.rapidapi.com/sentiment/subjectivity\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"russiansentimentanalyzer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "sentimentTag": {
                        "type": "string"
                    }
                }
            }
        },
        {
            "name": "Array of input texts",
            "url": "https://russiansentimentanalyzer.p.rapidapi.com/sentiment/polarity/jsons/",
            "description": "Send array of input texts",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://russiansentimentanalyzer.p.rapidapi.com/sentiment/polarity/jsons/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"russiansentimentanalyzer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://russiansentimentanalyzer.p.rapidapi.com/sentiment/polarity/jsons/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"russiansentimentanalyzer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "sentiment": {
                            "type": "string"
                        },
                        "strength": {
                            "type": "integer"
                        },
                        "article_id": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        {
            "name": "Input text",
            "url": "https://russiansentimentanalyzer.p.rapidapi.com/sentiment/polarity/json/",
            "description": "Supply text and optionally target objects to annotate sentiment for. Also include client_text_id, if you plan to later submit feedback on it.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://russiansentimentanalyzer.p.rapidapi.com/sentiment/polarity/json/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"russiansentimentanalyzer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://russiansentimentanalyzer.p.rapidapi.com/sentiment/polarity/json/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"russiansentimentanalyzer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "sentiment": {
                        "type": "string"
                    }
                }
            }
        },
        {
            "name": "Input text with client_text_id",
            "url": "https://russiansentimentanalyzer.p.rapidapi.com/sentiment/polarity/json/",
            "description": "This text is registered for future feedback on the annotation results",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://russiansentimentanalyzer.p.rapidapi.com/sentiment/polarity/json/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"russiansentimentanalyzer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://russiansentimentanalyzer.p.rapidapi.com/sentiment/polarity/json/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"russiansentimentanalyzer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "sentiment": {
                        "type": "string"
                    },
                    "synonyms": {
                        "type": "string"
                    },
                    "strength": {
                        "type": "integer"
                    }
                }
            }
        },
        {
            "name": "Client feedback",
            "url": "https://russiansentimentanalyzer.p.rapidapi.com/sentiment/polarity/feedback",
            "description": "Use this endpoint to provide feedback on sentiment accuracy: submit your internal text id, auto label and human label.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://russiansentimentanalyzer.p.rapidapi.com/sentiment/polarity/feedback\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"russiansentimentanalyzer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://russiansentimentanalyzer.p.rapidapi.com/sentiment/polarity/feedback\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"russiansentimentanalyzer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            }
        }
    ]
}