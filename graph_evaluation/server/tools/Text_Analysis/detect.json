{
    "tool_name":"Detect",
    "tool_description":"Find intrinsic or extrinsic attributes on a given text",
    "title":"Detect",
    "pricing":"FREEMIUM",
    "score":{
        "avgServiceLevel":0,
        "avgLatency":10463,
        "avgSuccessRate":0,
        "popularityScore":0,
        "__typename":"Score"
    },
    "home_url":"https://rapidapi.com/textkit-textkit-default/api/detect4/",
    "host":"detect4.p.rapidapi.com",
    "api_list":[
        {
            "name":"Emotion Emotion",
            "url":"https://detect4.p.rapidapi.com/detect/emotion/",
            "description":"This model tries to determine the emotion conveyed by the writer on a text, using Ekman's list of emotions as potential results.\n\nAlthough detecting emotion can be very subjective, this model could find patterns after analyzing over 210,000 samples of labeled text of comments made on social media.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"text",
                    "type":"STRING",
                    "description":"",
                    "default":"This is an example text"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://detect4.p.rapidapi.com/detect/emotion/\"\nquerystring = {\"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"detect4.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "prediction":{
                    "emotion":"neutral",
                    "emoji":"üòê"
                },
                "confidence":"0.695",
                "time_ms":673
            },
            "headers":{
                "content-length":"102",
                "content-type":"application/json"
            },
            "schema":{}
        },
        {
            "name":"Sentiment Detector",
            "url":"https://detect4.p.rapidapi.com/detect/sentiment/",
            "description":"Similarly to the Emotions API, this model tries to determine the general sentiment of a given text based on how it was written.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"text",
                    "type":"STRING",
                    "description":"",
                    "default":"This is an example text"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://detect4.p.rapidapi.com/detect/sentiment/\"\nquerystring = {\"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"detect4.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "prediction":{
                    "sentiment":"neutral",
                    "emoji":"üü∞"
                },
                "confidence":"0.955",
                "time_ms":706
            },
            "headers":{
                "content-length":"104",
                "content-type":"application/json"
            },
            "schema":{}
        },
        {
            "name":"Gibberish Detector",
            "url":"https://detect4.p.rapidapi.com/detect/gibberish/",
            "description":"We define as gibberish any text that has the particularity of not being intelligible in the target language of the reader.\n\nUnintelligible can be anything from a random sequence of characters, like `asdasqweqdaczc`, to a series of words that may be valid when analyzed one by one, but that in combination make no sense. For example: `dog boat the yes`.\n\nThe former is somewhat more easily detectable by computers but the latter is much harder as they are existing words that just happen to make no sense in combination.\n\nBecause of this, we introduced the concept of  `mild-gibberish`, which covers the case of sentences having valid words with occurrences of gibberish in it.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"text",
                    "type":"STRING",
                    "description":"",
                    "default":"This is an example text"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://detect4.p.rapidapi.com/detect/gibberish/\"\nquerystring = {\"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"detect4.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "confidence":"0.999",
                "prediction":"normal",
                "time_ms":682
            },
            "headers":{
                "content-length":"63",
                "content-type":"application/json"
            },
            "schema":{}
        },
        {
            "name":"Language Detector",
            "url":"https://detect4.p.rapidapi.com/detect/language/",
            "description":"Our language detector uses SpaCy and FastText to predict what language the input text is written in.\n\nAs many of our models, the longer the input the better the predictions are, especially if the text is written in a language that shares a recent common ancestor with another, like Latin languages do with each other. For example: Spanish, Portuguese and Catalan.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"text",
                    "type":"STRING",
                    "description":"",
                    "default":"This is an example text"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://detect4.p.rapidapi.com/detect/language/\"\nquerystring = {\"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"detect4.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "prediction":{
                    "iso_code":"en",
                    "language":"English"
                },
                "confidence":"0.963",
                "time_ms":28
            },
            "headers":{
                "content-length":"95",
                "content-type":"application/json"
            },
            "schema":{}
        },
        {
            "name":"Names Detector",
            "url":"https://detect4.p.rapidapi.com/detect/names/",
            "description":"This API tries to determine what words in a given input correspond to a first-name and/or last-name.\n\nAlthough this task may seem simple, in many cultures some first names can also be last names, which can cause some confusion. For example, the name Franco can be both a first name as a family name, making it hard to label.\n\nWe recommend using this API in combination with the *Gender API*.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"text",
                    "type":"STRING",
                    "description":"",
                    "default":"Alison Schubert"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://detect4.p.rapidapi.com/detect/names/\"\nquerystring = {\"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"detect4.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "prediction":{
                    "first_name":[
                        "alison"
                    ],
                    "last_name":[
                        "alison",
                        "schubert"
                    ],
                    "unknown":[]
                },
                "confidence":"1",
                "time_ms":11
            },
            "headers":{
                "access-control-allow-credentials":"true",
                "access-control-allow-origin":"*",
                "connection":"keep-alive",
                "content-length":"128",
                "content-type":"application/json",
                "date":"Fri, 26 Nov 2021 22:14:51 GMT",
                "server":"RapidAPI-1.2.8",
                "x-rapidapi-region":"AWS - us-west-2",
                "x-rapidapi-version":"1.2.8"
            },
            "schema":{}
        },
        {
            "name":"Gender Detector",
            "url":"https://detect4.p.rapidapi.com/detect/gender/",
            "description":"This API tries to determine what the gender of a person is based on their name and a database of over 90,000 entries tagged with their reported genders.\n\nWe recommend using this API in combination with the _Names API_.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"text",
                    "type":"STRING",
                    "description":"",
                    "default":"Alison Schubert"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://detect4.p.rapidapi.com/detect/gender/\"\nquerystring = {\"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"detect4.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "prediction":"female",
                "confidence":"0.5",
                "time_ms":14
            },
            "headers":{
                "access-control-allow-credentials":"true",
                "access-control-allow-origin":"*",
                "connection":"keep-alive",
                "content-length":"60",
                "content-type":"application/json",
                "date":"Fri, 26 Nov 2021 22:15:56 GMT",
                "server":"RapidAPI-1.2.8",
                "x-rapidapi-region":"AWS - us-west-2",
                "x-rapidapi-version":"1.2.8"
            },
            "schema":{}
        }
    ]
}