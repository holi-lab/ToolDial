{
    "product_id": "53aa50ade4b008bb2ef86562",
    "tool_description": "Is this comment positive or negative? Find out the tone.",
    "home_url": "https://rapidapi.com/twinword/api/sentiment-analysis/",
    "name": "Sentiment Analysis",
    "title": "Sentiment Analysis",
    "pricing": "FREEMIUM",
    "tool_name": "Sentiment Analysis",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 267,
        "avgSuccessRate": 93,
        "popularityScore": 9.8,
        "__typename": "Score"
    },
    "host": "twinword-sentiment-analysis.p.rapidapi.com",
    "api_list": [
        {
            "name": "Analyze (post)",
            "url": "https://twinword-sentiment-analysis.p.rapidapi.com/analyze/",
            "description": "Return sentiment analysis results with score for the given text.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Enter some text to analyze (maximum 100 words or 1,500 characters)",
                    "default": "great value in its price range!"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://twinword-sentiment-analysis.p.rapidapi.com/analyze/\"\nquerystring = {\"text\": \"great value in its price range!\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twinword-sentiment-analysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twinword-sentiment-analysis.p.rapidapi.com/analyze/\"\nquerystring = {\"text\": \"great value in its price range!\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twinword-sentiment-analysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "author": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "keywords": {
                        "items": {
                            "properties": {
                                "score": {
                                    "type": "number"
                                },
                                "word": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "ratio": {
                        "type": "integer"
                    },
                    "result_code": {
                        "type": "string"
                    },
                    "result_msg": {
                        "type": "string"
                    },
                    "score": {
                        "type": "number"
                    },
                    "type": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    ]
}