{
    "tool_name": "UrlDetector",
    "tool_description": "Better-than-regex, comprehensive and flexible detection of urls in text / HTML / JSON etc. Capable of parsing many schemes, domain formats and input text formats. Need higher usage, custom integration or additional features? Contact us for custom pricing.",
    "title": "UrlDetector",
    "pricing": "FREEMIUM",
    "score": null,
    "home_url": "https://rapidapi.com/integraatio/api/urldetector/",
    "host": "urldetector.p.rapidapi.com",
    "api_list": [
        {
            "name": "List Url Detector Options",
            "url": "https://urldetector.p.rapidapi.com/urls/list-options",
            "description": "List the bitwise additive options for url detection",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Accept",
                    "type": "STRING",
                    "description": "Accept Header",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://urldetector.p.rapidapi.com/urls/list-options\"\nquerystring = {\"Accept\": accept}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"urldetector.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Detect Urls",
            "url": "https://urldetector.p.rapidapi.com/urls/detect",
            "description": "Parse a chunk of text and retrieve the urls detected. Default to 'Default' detection option, request can include multiple Detection Options to customize detection logic.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Accept",
                    "type": "STRING",
                    "description": "Accept Header",
                    "default": "string"
                },
                {
                    "name": "DetectionOptions",
                    "type": "STRING",
                    "description": "One or more bitwise enum labels, used to customize the url parsing logic detection rules.",
                    "default": "Default, HTML, Javascript"
                },
                {
                    "name": "InputText",
                    "type": "STRING",
                    "description": "The text from which to detect urls",
                    "default": "var url = 'www.abc.com'; var url = \"www.def.com\"; and this is a google.com link that should really be http://127.0.0.1:8080?test=bolah <a href=\"http://linkEDEin.com/abc\"&gt;linkedin.com</a> <a href=\"http://liACBedin.com/abc\">linkedXnX.net</a> "
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://urldetector.p.rapidapi.com/urls/detect\"\nquerystring = {\"Accept\": accept, \"DetectionOptions\": detectionoptions, \"InputText\": inputtext}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"urldetector.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "Total": 0,
                "Offset": 0,
                "Results": [
                    {
                        "Scheme": "string",
                        "Username": "string",
                        "Password": "string",
                        "Host": "string",
                        "Port": 0,
                        "Path": "string",
                        "Query": "string",
                        "Fragment": "string",
                        "OriginalUrl": "string"
                    }
                ],
                "ResponseStatus": {
                    "ErrorCode": "string",
                    "Message": "string",
                    "StackTrace": "string",
                    "Errors": [
                        {
                            "ErrorCode": "string",
                            "FieldName": "string",
                            "Message": "string",
                            "Meta": {}
                        }
                    ],
                    "Meta": {}
                }
            },
            "headers": {
                "access-control-allow-credentials": "true",
                "access-control-allow-headers": "Content-Type, Allow, Authorization, Origin, X-Args, X-RapidAPI-Proxy-Secret, X-RapidAPI-User",
                "access-control-allow-methods": "GET",
                "content-type": "application/json; charset=utf-8",
                "date": "Wed, 09 Sep 2020 20:19:49 GMT",
                "server": "RapidAPI-1.2.2",
                "set-cookie": [
                    "ss-pid=fBK0I7ka8zavwaqzM2qh; expires=Sun, 09 Sep 2040 20:19:49 GMT; path=/; secure; samesite=none; httponly",
                    "ss-id=ex0b9jkfo2rszcGXdryM; path=/; secure; samesite=none; httponly"
                ],
                "vary": "Accept",
                "x-powered-by": "ServiceStack/5.92 NetCore/Windows, ASP.NET",
                "x-rapidapi-region": "AWS - eu-central-1",
                "x-rapidapi-version": "1.2.2",
                "transfer-encoding": "chunked",
                "connection": "Close"
            },
            "schema": {
                "properties": {
                    "Offset": {
                        "type": "integer"
                    },
                    "ResponseStatus": {
                        "properties": {
                            "ErrorCode": {
                                "type": "string"
                            },
                            "Errors": {
                                "items": {
                                    "properties": {
                                        "ErrorCode": {
                                            "type": "string"
                                        },
                                        "FieldName": {
                                            "type": "string"
                                        },
                                        "Message": {
                                            "type": "string"
                                        },
                                        "Meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "Message": {
                                "type": "string"
                            },
                            "Meta": {
                                "type": "object"
                            },
                            "StackTrace": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Results": {
                        "items": {
                            "properties": {
                                "Fragment": {
                                    "type": "string"
                                },
                                "Host": {
                                    "type": "string"
                                },
                                "OriginalUrl": {
                                    "type": "string"
                                },
                                "Password": {
                                    "type": "string"
                                },
                                "Path": {
                                    "type": "string"
                                },
                                "Port": {
                                    "type": "integer"
                                },
                                "Query": {
                                    "type": "string"
                                },
                                "Scheme": {
                                    "type": "string"
                                },
                                "Username": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "Detect Urls",
            "url": "https://urldetector.p.rapidapi.com/urls/detect",
            "description": "Parse a chunk of text and retrieve the urls detected. Default to 'Default' detection option, request can include multiple Detection Options to customize detection logic.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "DetectionOptions",
                    "type": "STRING",
                    "description": "One or more bitwise enum labels, used to customize the url parsing logic detection rules.",
                    "default": "Default, HTML, Javascript"
                },
                {
                    "name": "InputText",
                    "type": "STRING",
                    "description": "The text from which to detect urls",
                    "default": "var url = 'www.abc.com'; var url = \"www.def.com\"; and this is a google.com link that should really be http://127.0.0.1:8080?test=bolah <a href=\"http://linkEDEin.com/abc\"&gt;linkedin.com</a> <a href=\"http://liACBedin.com/abc\">linkedXnX.net</a> "
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://urldetector.p.rapidapi.com/urls/detect\"\nquerystring = {\"DetectionOptions\": \"Default, HTML, Javascript\", \"InputText\": \"var url = 'www.abc.com'; var url = \\\"www.def.com\\\"; and this is a google.com link that should really be http://127.0.0.1:8080?test=bolah <a href=\\\"http://linkEDEin.com/abc\\\"&gt;linkedin.com</a> <a href=\\\"http://liACBedin.com/abc\\\">linkedXnX.net</a> \"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"urldetector.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://urldetector.p.rapidapi.com/urls/detect\"\nquerystring = {\"DetectionOptions\": \"Default, HTML, Javascript\", \"InputText\": \"var url = 'www.abc.com'; var url = \\\"www.def.com\\\"; and this is a google.com link that should really be http://127.0.0.1:8080?test=bolah <a href=\\\"http://linkEDEin.com/abc\\\"&gt;linkedin.com</a> <a href=\\\"http://liACBedin.com/abc\\\">linkedXnX.net</a> \"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"urldetector.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "Offset": {
                        "type": "integer"
                    },
                    "ResponseStatus": {
                        "properties": {
                            "ErrorCode": {
                                "type": "string"
                            },
                            "Errors": {
                                "items": {
                                    "properties": {
                                        "ErrorCode": {
                                            "type": "string"
                                        },
                                        "FieldName": {
                                            "type": "string"
                                        },
                                        "Message": {
                                            "type": "string"
                                        },
                                        "Meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "Message": {
                                "type": "string"
                            },
                            "Meta": {
                                "type": "object"
                            },
                            "StackTrace": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Results": {
                        "items": {
                            "properties": {
                                "Fragment": {
                                    "type": "string"
                                },
                                "Host": {
                                    "type": "string"
                                },
                                "OriginalUrl": {
                                    "type": "string"
                                },
                                "Password": {
                                    "type": "string"
                                },
                                "Path": {
                                    "type": "string"
                                },
                                "Port": {
                                    "type": "integer"
                                },
                                "Query": {
                                    "type": "string"
                                },
                                "Scheme": {
                                    "type": "string"
                                },
                                "Username": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        }
    ]
}