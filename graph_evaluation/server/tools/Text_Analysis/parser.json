{
    "product_id": "api_a2a67001-91a0-46e5-ab31-aa1b8acc60ee",
    "tool_description": "JANZZ.technology offers both a Job Advertisement parser and a CV/Resume parser as a fully GDPR/CCPA-compliant, ultra-safe ISO 27001 certified private cloud service \u2013 the perfect tool for anyone who needs to organize large amounts of unstructured and potentially highly sensitive occupation\u2011related data. Using semantic technology and following the OECD Principles on Artificial Intelligence, JANZZparser! extracts all relevant information from data such as job advertisements or CVs / resumes. It ...",
    "home_url": "https://rapidapi.com/janzz-ltd-janzz-ltd-default/api/parser/",
    "name": "Parser",
    "title": "Parser",
    "pricing": "FREEMIUM",
    "tool_name": "Parser",
    "score": null,
    "host": "parser.p.rapidapi.com",
    "api_list": [
        {
            "name": "CV Parsing",
            "url": "https://parser.p.rapidapi.com/parser/parse_cv/",
            "description": "Parse an unstructured resume text in order to extract relevant types of entities.\n\n*************\n- Each supported language is backed by trained deep learning models specific for that language.\n- Currently, English, Spanish, German, Portuguese and French are supported with higher recall/precision.\n- Bulgarian, Croatian, Czech, Danish, Dutch, Norwegian, Italian, Arabic, Chinese, Estonian, Finnish, Greek, Hungarian, Irish, Latvian, Lithuanian, Polish, Romanian, Slovak, Slovenian, Swedish, Catalan, Basque, Thai, Indonesian, Tagalog, Hindi, Urdu, Malay and Vietnamese are also covered with lower recall/precision.\n- Input text does not need to be pre-processed or normalized, as it will be tokenized during parsing, so extra newlines, spaces, punctuation, etc. will be removed, and language does not need to be provided, as it will be automatically detected.\n\n\n- The entities may be related to the candidate's personal profile like:\n    + **Name**: John\n    + **Surname**: Smith\n    + **Marital_status**: Single, married, divorced, widowed, etc.\n    + **Birthplace**: London, UK\n    + **Religion**:  Christian, Muslim, Hindu, etc.\n    + **Title or Degree**:  Dr., Prof., etc.\n    + **Grade_point_average**: 4.5\n    + **Email**:  johnsmith@gmail.com\n    + **Interests**:  Swimming, listening to Jazz, stamp collecting, etc.\n    + **Citizenships**:  US Citizen, German, etc.\n    + **Birthday**: 01.12.1975\n    + **Address**:  23 Park Road, Louisville, KY\n    + **Achievements**:  Employee of the year 2019, design award recipient, etc.\n    + **Gender**: Male, female, etc.\n    + **Age**: Current age eg. 45\n    + **Publications**: Smith J (2020). \"What is the future of job matching?\" J Int HR 35 (4): 125-148.\n    + **Memberships**: Member of the UK Engineering Council, etc.\n    + **ID**: ID card/passport number eg. Passport No: 8459214\n    + **Social tags**: Tags for use within a JANZZ eg. First job, equal opportunity employment, etc.\n    + **References**: Contact details of personal references eg.\tJane Doe, former Line Manager, j.doe@gmail.com, 458-7896\n    + **Characteristics**: Height: 174cm, brown eyes, etc.\n    + **Telephone**: (541) 754-3010\n    + **Social_media**: LinkedIn, Facebook, Twitter, etc. eg. https://www.linkedin.com/in/john-smith-123/\n    + **Portfolio**: Samples of past work eg. www.beautifulwebsite.com\n\n\n\n\n- Also entities related to its professional career like: \n    + **Occupation**: Teacher, Engineer, Medical doctor, etc.\n    + **Company**: company names\n    + **Specialization**: Specific field, for example: Surgery, Administration, etc.\n    + **Function**: Senior director, Manager, etc.\n    + **Contract_type**: Part-time, Full-time, etc.\n    + **Localization**: Switzerland, Toronto ON Canada, etc.\n    + **Skills**: Java, Antenna design, etc.\n    + **Softskills**: Friendly, Fast reaction time, etc.\n    + **Languages**: English, Fluent in Spanish, etc.\n    + **Industry**: Finance, Aerospace, etc.\n    + **Experience**: 5 years, 2 years experience in accounting, etc.\n    + **Availability**: start date, specific date range for job, ASAP, etc.\n    + **Salary**: salary range or description such as \"competitive salary\"\n    + **Authorizations**: HR certifications, IT certifications, Security clearances, etc.\n    + **Working_Permission**: EU Work Permit, US Green Card etc.\n    + **Education**: University degrees, courses, etc.\n    + **Schools_or_training_companies**: State University of New York, Oakfield High School, etc.\n    + **Working_conditions**: Lifting heavy objects, shift work, etc.\n\n****************************\ndescription of output fields\n\n- id\n    - format: integer\n    - description: will always be null, used internally for other processes\n- lang\n    - format: 2-character string \n    - description: the ISO 639-1 language code detected during parsing\n- title\n    - format: string\n    - description: the title provided in the input\n- json\n    - format: JSON object\n    - description: all identified entities\n    - format:\n        \n        ::\n\n            \"Entity class\" : [list of identified texts],\n            \"Description\" : \"tokenized title and description, as used in parser, such that every identified entity appears in its exact form in the description\"\n\n         - the Entity Class list is a list that contains all the different entity types that the parser can detect and their extracted instances, each entity will have a different level of normalization depending on whether the parser mode is set to \"standard\" or \"normalized\".",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "",
                    "default": "Software Developer"
                },
                {
                    "name": "body",
                    "type": "STRING",
                    "description": "Text from the candidate resume",
                    "default": "Software Developer  8+ years professional Internet industry experience in web development, database design, integration, implementation, software development, systems administration and training. Work experience Software Developer Wasi - Armenia - Quind\u00edo, Colombia June 2019 to recent CV \u2022 Laravel 5.x Developer  \u2022 API Integration  \u2022 Backend Developer  \u2022 End to end web development  \u2022 Maintaining / Developing Multi User CRM Real Estate Platform (https://wasi.co/)  \u2022 Project details  \u2022 End to end web development Software Developer (Remote Freelance) NRS Group (Spain) - Armenia quindio August 2018 to June 2019 API services and some other Frontend functionalities  \u25cf Invoices + Billing automation processes  \u25cf Final clients and Companies Routing processes (Calling Routing)  \u25cf Reports + Exporting (csv, pdf, txt mainly) services  \u25cf Routing improvement configuration services (Trying to provide better prices according to market prices changes)  \u25cf End to end web development  \u25cf Laravel Framework, MySQL, jQuery, CSS, AJAX, HTML5  \u25cf Project details Software Development Leader CommunityLab - Cali Valle del Cauca October 2013 to June 2019 Vertical Social Network Developer using Elgg Framework  \u25cf Laravel Framework Developer  \u25cf PHP Developer  \u25cf Frontend + Backend Developer (MySQL, jQuery, CSS, AJAX, HTML5, React.js, Bootstrap 3x)  \u25cf End to end web development  \u25cf Project details Senior Software Developer YUXI PACIFIC LATAM (colombia) - Medellin, Antioquia November 2011 to December 2012 Marklogic 4x / 5.0, XPath, XQuery Developer  \u25cf Laravel 4x Framework Developer  \u25cf PHP, MySQL, CSS, JQuery Developer  \u25cf Project details Software Developer INDRA COMPANY (colombia) - Bogota, Cundinamarca July 2010 to October 2011 PHP + MySQL, javascript, CSS, HTML Developer  \u25cf End to end development  \u25cf Project details  \u25cf Platforms integrations using SOA + IBM Message Broker + Message Queues  \u25cf Project details Education and formation MSC at ENGINEER University of Quind\u00edo 2017 to 2019 System and Computing Engineer Degree in Computing University of Quind\u00edo 2005 Skills and knowledge CSS3 (3 years) jQuery (5 years) MySQL (5 years) PHP (5 years) React.js (2 years) Javascript (2 years) HTML 5 (3 years) Git (1 year)"
                }
            ],
            "optional_parameters": [
                {
                    "name": "output",
                    "type": "STRING",
                    "description": "This parameter will switch between the different processing modes of the API, options include: \\\\\\\"standard\\\\\\\" or \\\\\\\"normalized\\\\\\\", default=\\\\\\\"standard\\\\\\\").\n\n- The standard output will produce a list of tuples, [String, boolean], where String is the entity, boolean is true if the entity exists in the JANZZ concept graph, in the respective branch.  Entities which do not exist in the concept graph can still be identified during parsing, the output is not limited to existing terms. The JSON response has the following format:\n\n- The normalized mode provides a more detailed output of the parser. For example, in elements such as education, it will provide the start and end date, school name, localization, etc. The same for experiences it will provide the associated company, date range, industries, specificity, etc. Various types of normalizations are applied to multiple elements such as language, skills, softskills, etc., therefore, this mode will take longer to process a single query.\n\n",
                    "default": "normalized"
                }
            ],
            "code": "import requests\n\nurl = \"https://parser.p.rapidapi.com/parser/parse_cv/\"\nquerystring = {\"title\": \"Software Developer\", \"body\": \"Software Developer  8+ years professional Internet industry experience in web development, database design, integration, implementation, software development, systems administration and training. Work experience Software Developer Wasi - Armenia - Quind\u00edo, Colombia June 2019 to recent CV \u2022 Laravel 5.x Developer  \u2022 API Integration  \u2022 Backend Developer  \u2022 End to end web development  \u2022 Maintaining / Developing Multi User CRM Real Estate Platform (https://wasi.co/)  \u2022 Project details  \u2022 End to end web development Software Developer (Remote Freelance) NRS Group (Spain) - Armenia quindio August 2018 to June 2019 API services and some other Frontend functionalities  \u25cf Invoices + Billing automation processes  \u25cf Final clients and Companies Routing processes (Calling Routing)  \u25cf Reports + Exporting (csv, pdf, txt mainly) services  \u25cf Routing improvement configuration services (Trying to provide better prices according to market prices changes)  \u25cf End to end web development  \u25cf Laravel Framework, MySQL, jQuery, CSS, AJAX, HTML5  \u25cf Project details Software Development Leader CommunityLab - Cali Valle del Cauca October 2013 to June 2019 Vertical Social Network Developer using Elgg Framework  \u25cf Laravel Framework Developer  \u25cf PHP Developer  \u25cf Frontend + Backend Developer (MySQL, jQuery, CSS, AJAX, HTML5, React.js, Bootstrap 3x)  \u25cf End to end web development  \u25cf Project details Senior Software Developer YUXI PACIFIC LATAM (colombia) - Medellin, Antioquia November 2011 to December 2012 Marklogic 4x / 5.0, XPath, XQuery Developer  \u25cf Laravel 4x Framework Developer  \u25cf PHP, MySQL, CSS, JQuery Developer  \u25cf Project details Software Developer INDRA COMPANY (colombia) - Bogota, Cundinamarca July 2010 to October 2011 PHP + MySQL, javascript, CSS, HTML Developer  \u25cf End to end development  \u25cf Project details  \u25cf Platforms integrations using SOA + IBM Message Broker + Message Queues  \u25cf Project details Education and formation MSC at ENGINEER University of Quind\u00edo 2017 to 2019 System and Computing Engineer Degree in Computing University of Quind\u00edo 2005 Skills and knowledge CSS3 (3 years) jQuery (5 years) MySQL (5 years) PHP (5 years) React.js (2 years) Javascript (2 years) HTML 5 (3 years) Git (1 year)\", \"output\": \"normalized\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"parser.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://parser.p.rapidapi.com/parser/parse_cv/\"\nquerystring = {\"title\": \"Software Developer\", \"body\": \"Software Developer  8+ years professional Internet industry experience in web development, database design, integration, implementation, software development, systems administration and training. Work experience Software Developer Wasi - Armenia - Quind\u00edo, Colombia June 2019 to recent CV \u2022 Laravel 5.x Developer  \u2022 API Integration  \u2022 Backend Developer  \u2022 End to end web development  \u2022 Maintaining / Developing Multi User CRM Real Estate Platform (https://wasi.co/)  \u2022 Project details  \u2022 End to end web development Software Developer (Remote Freelance) NRS Group (Spain) - Armenia quindio August 2018 to June 2019 API services and some other Frontend functionalities  \u25cf Invoices + Billing automation processes  \u25cf Final clients and Companies Routing processes (Calling Routing)  \u25cf Reports + Exporting (csv, pdf, txt mainly) services  \u25cf Routing improvement configuration services (Trying to provide better prices according to market prices changes)  \u25cf End to end web development  \u25cf Laravel Framework, MySQL, jQuery, CSS, AJAX, HTML5  \u25cf Project details Software Development Leader CommunityLab - Cali Valle del Cauca October 2013 to June 2019 Vertical Social Network Developer using Elgg Framework  \u25cf Laravel Framework Developer  \u25cf PHP Developer  \u25cf Frontend + Backend Developer (MySQL, jQuery, CSS, AJAX, HTML5, React.js, Bootstrap 3x)  \u25cf End to end web development  \u25cf Project details Senior Software Developer YUXI PACIFIC LATAM (colombia) - Medellin, Antioquia November 2011 to December 2012 Marklogic 4x / 5.0, XPath, XQuery Developer  \u25cf Laravel 4x Framework Developer  \u25cf PHP, MySQL, CSS, JQuery Developer  \u25cf Project details Software Developer INDRA COMPANY (colombia) - Bogota, Cundinamarca July 2010 to October 2011 PHP + MySQL, javascript, CSS, HTML Developer  \u25cf End to end development  \u25cf Project details  \u25cf Platforms integrations using SOA + IBM Message Broker + Message Queues  \u25cf Project details Education and formation MSC at ENGINEER University of Quind\u00edo 2017 to 2019 System and Computing Engineer Degree in Computing University of Quind\u00edo 2005 Skills and knowledge CSS3 (3 years) jQuery (5 years) MySQL (5 years) PHP (5 years) React.js (2 years) Javascript (2 years) HTML 5 (3 years) Git (1 year)\", \"output\": \"normalized\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"parser.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Occupation Extract",
            "url": "https://parser.p.rapidapi.com/parser/occupation_extract/",
            "description": "Parse the text from a job description in order to identify the most probable occupations that are required.\n\n****************************\n\nFirst, it extracts all occupations present in the text and then predicts a single main occupation for the job advertisement, later returns the list of most similar occupations to this one present in the Janzz's Ontology.\n\nIf no occupation is present in the text, an algorithm will try to predict the list of possible occupations taking into account the information from the entire job advertisement.\n\nThe input language does not need to be provided, as it is automatically detected during parsing.\nCurrently, English, Spanish, Norwegian,  Arabic, Deutsch, Portuguese, French, Italian and Dutch are supported.\n\nInput text does not need to be pre-processed or normalized in any way. It will be tokenized during parsing, so extra newlines, spaces, punctuation, etc. will be removed.\n\nInput it's needed to be only text without HTML tags.\n\n****************************\ndescription of output fields\n\n- lang\n    - format: 2-character string \n    - description: the ISO 639-1 language code detected during parsing\n- results\n    - format: list\n    - description: list of most likely occupations\n    - format:\n    \n        ::\n\n            \"text\" : the occupation\n            \"cid\" : the concept ID of the occupation, or null if the occupation does not exist in the JANZZ Ontology\n            \"score\" : probability of correctness, between 0 and 1\n            \"in_text\" : boolean, whether or not the occupation appears in the input text",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "body",
                    "type": "STRING",
                    "description": "Text from the job description",
                    "default": "Responsibilities: Responsible for helping our customers arrange the financing of their purchases and presenting them with additional products that enhance their vehicle and ownership experience  Proficient at structuring deals for maximum profitability  Fully proficient with title laws and registration process  Accurately desks deal, submits deals to lenders for approval, makes credit decisions, and effectively closes deals  Ensure that all finance paperwork is fully compliant with local, state and federal guidelines prior to submitting completed documentation to lenders for approval. Prepares paperwork  The Finance Manager will also ensure the expeditious funding of all contracts  Familiar with menu presentation and selling to optimize profits while ensuring compliance"
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "Title of the job vacancy",
                    "default": "Ready for the job of your dreams?"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://parser.p.rapidapi.com/parser/occupation_extract/\"\nquerystring = {\"body\": \"Responsibilities: Responsible for helping our customers arrange the financing of their purchases and presenting them with additional products that enhance their vehicle and ownership experience  Proficient at structuring deals for maximum profitability  Fully proficient with title laws and registration process  Accurately desks deal, submits deals to lenders for approval, makes credit decisions, and effectively closes deals  Ensure that all finance paperwork is fully compliant with local, state and federal guidelines prior to submitting completed documentation to lenders for approval. Prepares paperwork  The Finance Manager will also ensure the expeditious funding of all contracts  Familiar with menu presentation and selling to optimize profits while ensuring compliance\", \"title\": \"Ready for the job of your dreams?\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"parser.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://parser.p.rapidapi.com/parser/occupation_extract/\"\nquerystring = {\"body\": \"Responsibilities: Responsible for helping our customers arrange the financing of their purchases and presenting them with additional products that enhance their vehicle and ownership experience  Proficient at structuring deals for maximum profitability  Fully proficient with title laws and registration process  Accurately desks deal, submits deals to lenders for approval, makes credit decisions, and effectively closes deals  Ensure that all finance paperwork is fully compliant with local, state and federal guidelines prior to submitting completed documentation to lenders for approval. Prepares paperwork  The Finance Manager will also ensure the expeditious funding of all contracts  Familiar with menu presentation and selling to optimize profits while ensuring compliance\", \"title\": \"Ready for the job of your dreams?\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"parser.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Job Parsing",
            "url": "https://parser.p.rapidapi.com/parser/parse_job/",
            "description": "Parse an unstructured job description in order to extract relevant types of entities.\n\n*************\n\n- Each supported language is backed by trained deep learning models specific for that language.\n- Currently, English, Spanish, Norwegian, Arabic, German, Japanese, Portuguese, French, Italian, Chinese and Dutch are supported with higher recall/precision.\n- Bulgarian, Croatian, Czech, Danish, Estonian, Finnish, Greek, Hungarian, Irish, Latvian, Lithuanian, Polish, Romanian, Slovak, Slovenian, Swedish, Catalan, Basque, Thai, Indonesian, Tagalog, Hindi, Urdu, Malay and Vietnamese are also covered with lower recall/precision.\n- Input text does not need to be pre-processed or normalized, as it will be tokenized during parsing, so extra newlines, spaces, punctuation, etc. will be removed, and language does not need to be provided, as it will be automatically detected.\n- Available entity classes:\n    \n    + **Occupation**: Teacher, Engineer, Medical doctor, etc.\n    + **Specialization**: Specific field, for example: Surgery, Administration, etc.\n    + **Function**: Senior director, Manager, etc.\n    + **Contract_type**: Part-time, Full-time, etc.\n    + **Localization**: Switzerland, Toronto ON Canada, etc.\n    + **Supervisor**: Unlike occupation, this identifies the occupation/function of the supervisor for this job.\n    + **Skills**: Java, Antenna design, etc.\n    + **Softskills**: Friendly, Fast reaction time, etc.\n    + **Languages**: English, Fluent in Spanish, etc.\n    + **Industry**: Finance, Aerospace, etc.\n    + **Experience**: 5 years, 2 years experience in accounting, etc.\n    + **Availability**: start date, specific date range for job, ASAP, etc.\n    + **Salary**: salary range or description such as \"competitive salary\"\n    + **Authorizations**: HR certifications, IT certifications, Security clearances, etc.\n    + **Education**: University degrees, courses, etc.\n    + **Working_conditions**: Lifting heavy objects, shift work, etc.\n    + **Company**: Company names\n    + **Number of Vacancies**: Amount of open positions\n    + **Social tags**: Special treatments for people with special conditions, first job, over 50 years old, etc.\n\n****************************\ndescription of output fields\n\n- id\n    - format: integer\n    - description: will always be null, used internally for other processes\n- lang\n    - format: 2-character string \n    - description: the ISO 639-1 language code detected during parsing\n- title\n    - format: string\n    - description: the title provided in the input\n- json\n    - format: JSON object\n    - description: all identified entities\n    - format:\n        \n        ::\n\n            \"Entity class\" : [list of identified texts],\n            \"Description\" : \"tokenized title and description, as used in parser, such that every identified entity appears in its exact form in the description\"\n\n         - the Entity Class list is a list that contains all the different entity types that the parser can detect and their extracted instances, each entity will have a different level of normalization depending on whether the parser mode is set to \"standard\" or \"normalized\".",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "Title of the job vacancy",
                    "default": "Senior Python Developer"
                },
                {
                    "name": "body",
                    "type": "STRING",
                    "description": "Text from the job description",
                    "default": "We need individuals who think outside the box, who use cutting-edge ideas and who relish working in a team setting to convert these ideas into game-changing products. As a member of our team, you will design, develop, and demonstrate innovative computing and communications technologies, most of which are patent pending!  Qualifications: Bachelors Degree in: Computer Science, Electrical Engineering, Computer Engineering, Software Development or related field A team leader with exceptional communication skills A expert in client relations Successful candidate will have experience in: One or more programming languages (Java, C, C++, Perl, Python, etc.) Hardware/software interfaces and protocols (low-level device and bus protocols) Linux kernel or drivers projects Systems engineering Reverse engineering"
                }
            ],
            "optional_parameters": [
                {
                    "name": "output",
                    "type": "STRING",
                    "description": "This parameter will switch between the different processing modes of the API, options include: \\\"standard\\\" or \\\"normalized\\\", default=\\\"standard\\\").\n\n- The standard output will produce a list of tuples, [String, boolean], where String is the entity, boolean is true if the entity exists in the JANZZ concept graph, in the respective branch.  Entities which do not exist in the concept graph can still be identified during parsing, the output is not limited to existing terms. The JSON response has the following format:\n\n- This normalized mode provides a more detailed output of the parser. For example, in elements such as languages and skills, it will return the proficiency level on a scale of 1 to 5, with 1 being a beginner and 5 being an expert, for languages this proficiency is subdivided into oral and written levels. For education, it will return their respective education levels for a given title, e.g. \\\"Bachelor's degree degree in technical engineering\\\" its corresponding level is \\\"Bachelor/university primary degree/degree\\\", in addition to the cid of the concept. Various types of normalizations are applied to multiple elements such as contract types, experience, salary, etc, therefore, this mode takes longer to process a query.\n\n",
                    "default": "normalized"
                }
            ],
            "code": "import requests\n\nurl = \"https://parser.p.rapidapi.com/parser/parse_job/\"\nquerystring = {\"title\": \"Senior Python Developer\", \"body\": \"We need individuals who think outside the box, who use cutting-edge ideas and who relish working in a team setting to convert these ideas into game-changing products. As a member of our team, you will design, develop, and demonstrate innovative computing and communications technologies, most of which are patent pending!  Qualifications: Bachelors Degree in: Computer Science, Electrical Engineering, Computer Engineering, Software Development or related field A team leader with exceptional communication skills A expert in client relations Successful candidate will have experience in: One or more programming languages (Java, C, C++, Perl, Python, etc.) Hardware/software interfaces and protocols (low-level device and bus protocols) Linux kernel or drivers projects Systems engineering Reverse engineering\", \"output\": \"normalized\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"parser.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://parser.p.rapidapi.com/parser/parse_job/\"\nquerystring = {\"title\": \"Senior Python Developer\", \"body\": \"We need individuals who think outside the box, who use cutting-edge ideas and who relish working in a team setting to convert these ideas into game-changing products. As a member of our team, you will design, develop, and demonstrate innovative computing and communications technologies, most of which are patent pending!  Qualifications: Bachelors Degree in: Computer Science, Electrical Engineering, Computer Engineering, Software Development or related field A team leader with exceptional communication skills A expert in client relations Successful candidate will have experience in: One or more programming languages (Java, C, C++, Perl, Python, etc.) Hardware/software interfaces and protocols (low-level device and bus protocols) Linux kernel or drivers projects Systems engineering Reverse engineering\", \"output\": \"normalized\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"parser.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "MEJP Classifier",
            "url": "https://parser.p.rapidapi.com/customer_igb/",
            "description": "Multiple Entity Job Posting Classifier\n\n****************************\nParse a free-text job description in order to identify all known entities and classifies certain entities, such as occupation, industry, education, contract, salary into a set of predefined classes.\n\n- The title of the advertisement must contain an occupation, this will be classified according to its Seniority Degree, O*Net, RIASEC, ESCO and ISCO-08 classifications, if the title is empty,  it will classify all the occupations extracted from the job description and return the classifications of all of them.\n- Industry entities will be classified in the ISIC taxonomy and education will be classified in the ISCED classification.\n- The contract terms extracted will be structured according to their type, duration, workload and working percentage, and the salaries terms will be described according to their currency, maximum, minimum and period of payment.\n- Supervised deep learning models were trained as classifiers for each of the entities.\n- Currently, English, Spanish, Norwegian,   Arabic, German,  Dutch, Portuguese, French, Italian and Chinese are supported.\n- Input text does not need to be pre-processed or normalized, as it will be tokenized during parsing, so extra newlines, spaces, punctuation, etc. will be removed, and language does not need to be provided, as it will be automatically detected.\n\n****************************\ndescription of output fields\n\n- Vacancy language\n    - format: 2-character string\n    - description: the detected language used during parsing.\n\n- Occupations, Skills, Softskills, Specializations, Languages, Working_conditions, Number of Vacancies, Experiences, Localizations, Authorizations, Benefits, Companies, Social tags, Supervisor,  Availability\n    - format: list of strings\n    - description: list of entities extracted from each of these categories\n\n- Career level\n    - format: list of strings\n    - description: Seniority degree of the job title if it is not empty, otherwise it will classify all the occupations extracted from the description and will return their associated degrees.\n    - list of possible seniority levels: 'Individual_Contributor_Experienced', 'Individual_Contributor_Entry_Level', 'Individual_Contributor_Senior', 'Entry_Level_Manager', 'Experienced_Manager', 'Executive'.\n\n- ESCO Function, RIASEC Codes, ISCO Functiongroup \n    - format: list of strings\n    - description: List of codes within the ESCO, ISCO-08 or RIASEC classifications associated to the job title if it's not empty, otherwise it will classify all the occupations extracted from the description and will return the predicted codes for each of them.\n\n- O*Net\n    - format: dictionary\n    - description: List of O*Net codes associated with the job title if it is not empty, otherwise it will classify all the occupations extracted from the description and will return the predicted codes for each of them, each result will consist of a dictionary: \n     {'Interests': List of strings, 'Job Zones': List of strings, 'Codes': List of strings, 'Work Values': List of strings, 'Job Family': List of strings}\n\n- ISIC Industries\n    - format: list of strings\n    - description: If the industries to which the job advertisement belongs are explicitly mentioned in the text of the job description, they will be extracted and for each one their respective ISIC codes will be predicted.\n\n- ISCED Educations\n    - format: list of dictionaries\n    - description: for each education that requires the job advertisement and is present in the text of the job description, its corresponding ISCED codes will be predicted, each result will be a dictionary: {'Education': Education string, 'ISCED_code': code string} \n\n- Salary\n    - format: list of dictionaries\n    - description: salary contains a list with all the salaries found in the description with their corresponding min & max salary, currency and period of payments, each result will be a dictionary: {'currency': code string, 'amount': {'max': float, 'min': float}, 'period': duration string }\n    - the currency code is a 2 letter ISO 4217 classification,\n    - the current list of types of periods of payments is: [\"hour\", \"day\", \"week\", \"month\", \"year\"]\n\n\n- Contract information\n    - format: list of dictionaries\n    - description: the contract terms that the job advertisement offers and are present in the text of the job description are grouped and classified in a fixed set of categories, the result is a dictionary: \n     {'contract_type': list of strings, 'duration': list of strings, 'workload': {'amount': float , 'lower_unit': string  , 'higher_unit': string }, 'working percentage': {'max': float, 'min': float}}\n    - list of all possible types of contract: 'Part-Time', 'Full-Time', 'Trial apprenticeship', 'Traineeship/Apprenticeship', 'Internship', 'Student Job', 'Interim Management', 'Mandate/ invoice', 'Supply of staff'.\n    - list of possible duration types: 'Per Day', 'Temporary/Fixed-Term', 'Seasonal', 'Permanent', 'Volunteer', 'Work remotely', 'Freelance/Service Contract/Project', 'Dissertation / Thesis', 'Mini Job/Micro Job/Odd job', 'Performance/artist contract'.\n    - the field 'percentage of work' represents the percentage of time that the job should occupy from a general workday, if it's present will include minimum and maximum values in a scale of [1-100].\n    - the workload refers to the nominal amount of time expressed in the same units of measurements that the employer refers to, example \"40 hours per week\", the list of all available time units is equal to the one used in salary periods.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text from the job description",
                    "default": "We need individuals who think outside the box, who use cutting-edge ideas and who relish working in a team setting to convert these ideas into game-changing products. As a member of our team, you will design, develop, and demonstrate innovative computing and communications technologies, most of which are patent pending!  Qualifications: Bachelors Degree in: Computer Science, Electrical Engineering, Computer Engineering, Software Development or related field A team leader with exceptional communication skills A expert in client relations Successful candidate will have experience in: One or more programming languages (Java, C, C++, Perl, Python, etc.) Hardware/software interfaces and protocols (low-level device and bus protocols) Linux kernel or drivers projects Systems engineering Reverse engineering"
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "Title of the job vacancy",
                    "default": "Senior Python Developer"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://parser.p.rapidapi.com/customer_igb/\"\nquerystring = {\"text\": \"We need individuals who think outside the box, who use cutting-edge ideas and who relish working in a team setting to convert these ideas into game-changing products. As a member of our team, you will design, develop, and demonstrate innovative computing and communications technologies, most of which are patent pending!  Qualifications: Bachelors Degree in: Computer Science, Electrical Engineering, Computer Engineering, Software Development or related field A team leader with exceptional communication skills A expert in client relations Successful candidate will have experience in: One or more programming languages (Java, C, C++, Perl, Python, etc.) Hardware/software interfaces and protocols (low-level device and bus protocols) Linux kernel or drivers projects Systems engineering Reverse engineering\", \"title\": \"Senior Python Developer\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"parser.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://parser.p.rapidapi.com/customer_igb/\"\nquerystring = {\"text\": \"We need individuals who think outside the box, who use cutting-edge ideas and who relish working in a team setting to convert these ideas into game-changing products. As a member of our team, you will design, develop, and demonstrate innovative computing and communications technologies, most of which are patent pending!  Qualifications: Bachelors Degree in: Computer Science, Electrical Engineering, Computer Engineering, Software Development or related field A team leader with exceptional communication skills A expert in client relations Successful candidate will have experience in: One or more programming languages (Java, C, C++, Perl, Python, etc.) Hardware/software interfaces and protocols (low-level device and bus protocols) Linux kernel or drivers projects Systems engineering Reverse engineering\", \"title\": \"Senior Python Developer\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"parser.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}