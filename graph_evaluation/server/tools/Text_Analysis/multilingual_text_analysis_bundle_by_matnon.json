{
    "product_id": "api_232fae56-f024-4cef-ac7a-530d7d68527a",
    "tool_description": "11 Languages, 8 Tasks, One Price. Ultimate Text Analysis Solution with Rock-Solid Infrastructure. Brought to you by Matnon Analytics NLP Team.",
    "home_url": "https://rapidapi.com/matnon-analytics-matnon-analytics-default/api/multilingual-text-analysis-bundle-by-matnon/",
    "name": "Multilingual Text Analysis Bundle by Matnon",
    "title": "Multilingual Text Analysis Bundle by Matnon",
    "pricing": "FREEMIUM",
    "tool_name": "Multilingual Text Analysis Bundle by Matnon",
    "score": null,
    "host": "multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com",
    "api_list": [
        {
            "name": "Multilingual Named Entity Recognition",
            "url": "https://multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com/ner",
            "description": "Extract Named Entities from text. Yes, we included NER service in the bundle for real. No extra fees.\n\nRequires **text** field. Takes **language** as optional. (Default: English)\n\nReturns **entity**,  **label**, **starting character** and **ending character**.\n\n\n\n**LABELS**\n\nCARDINAL\tcardinal value\nDATE\tdate value\nEVENT\tevent name\nFAC\tfacility name\nGPE\tgeo-political entity\nLANGUAGE\tlanguage name\nLAW\tlaw name\nLOC\tlocation name\nMONEY\tmoney name\nNORP\tnationalities or religious or political groups\nORDINAL\tordinal value\nORG\torganization name\nPERCENT\tpercent value\nPERSON\tperson name\nPRODUCT\tproduct name\nQUANTITY\tquantity value\nTIME\ttime value\nWORK_OF_ART\tname of work of art",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "The tacos at Mitla Cafe were a hit. Even civil rights activist Cesar Chavez was a regular when he was in town."
                }
            ],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "",
                    "default": "en"
                }
            ],
            "code": "import requests\n\nurl = \"https://multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com/ner\"\nquerystring = {\"language\": \"en\", \"text\": \"The tacos at Mitla Cafe were a hit. Even civil rights activist Cesar Chavez was a regular when he was in town.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com/ner\"\nquerystring = {\"language\": \"en\", \"text\": \"The tacos at Mitla Cafe were a hit. Even civil rights activist Cesar Chavez was a regular when he was in town.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "entities": [
                    {
                        "text": "Mitla Cafe",
                        "start": 13,
                        "end": 23,
                        "label": "FAC"
                    },
                    {
                        "text": "Cesar Chavez",
                        "start": 63,
                        "end": 75,
                        "label": "PERSON"
                    }
                ]
            }
        },
        {
            "name": "Multilingual Tokenizer",
            "url": "https://multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com/tokenizer",
            "description": "Simple but Robust tokenizer.\n\nRequires **text** field. Takes **language** as optional.\n\nReturns **tokens**.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "From the 18th up to the 20th centuries, canaries and finches were used in the UK, Canada and the US in the coal mining industry to detect carbon monoxide."
                }
            ],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "",
                    "default": "en"
                }
            ],
            "code": "import requests\n\nurl = \"https://multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com/tokenizer\"\nquerystring = {\"text\": \"From the 18th up to the 20th centuries, canaries and finches were used in the UK, Canada and the US in the coal mining industry to detect carbon monoxide.\", \"language\": \"en\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com/tokenizer\"\nquerystring = {\"text\": \"From the 18th up to the 20th centuries, canaries and finches were used in the UK, Canada and the US in the coal mining industry to detect carbon monoxide.\", \"language\": \"en\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "tokens": [
                    "From",
                    "the",
                    "18th",
                    "up",
                    "to",
                    "the",
                    "20th",
                    "centuries",
                    ",",
                    "canaries",
                    "and",
                    "finches",
                    "were",
                    "used",
                    "in",
                    "the",
                    "UK",
                    ",",
                    "Canada",
                    "and",
                    "the",
                    "US",
                    "in",
                    "the",
                    "coal",
                    "mining",
                    "industry",
                    "to",
                    "detect",
                    "carbon",
                    "monoxide",
                    "."
                ]
            }
        },
        {
            "name": "Multilingual Noun Chunk Extractor",
            "url": "https://multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com/nounchunks",
            "description": "Extracts noun chunks from text.\n\nRequires **text** field. Takes **language** as optional. \n\nReturns **noun chunks**, **chunk root**, **dependency**, **head**, **starting character** and **ending character**.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "Khruangbin are an American psychedelic trio based in Houston, Texas, but originally from Burton, Texas, consisting of Laura Lee on bass, Mark Speer on guitar, and Donald \u201cDJ\u201d Johnson Jr. on drums (and sometimes keys)."
                }
            ],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "",
                    "default": "en"
                }
            ],
            "code": "import requests\n\nurl = \"https://multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com/nounchunks\"\nquerystring = {\"text\": \"Khruangbin are an American psychedelic trio based in Houston, Texas, but originally from Burton, Texas, consisting of Laura Lee on bass, Mark Speer on guitar, and Donald \u201cDJ\u201d Johnson Jr. on drums (and sometimes keys).\", \"language\": \"en\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com/nounchunks\"\nquerystring = {\"text\": \"Khruangbin are an American psychedelic trio based in Houston, Texas, but originally from Burton, Texas, consisting of Laura Lee on bass, Mark Speer on guitar, and Donald \u201cDJ\u201d Johnson Jr. on drums (and sometimes keys).\", \"language\": \"en\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "chunks": [
                    {
                        "text": "Khruangbin",
                        "root": "Khruangbin",
                        "dependency": "nsubj",
                        "head": "are",
                        "start": 0,
                        "end": 10
                    },
                    {
                        "text": "an American psychedelic trio",
                        "root": "trio",
                        "dependency": "attr",
                        "head": "are",
                        "start": 15,
                        "end": 43
                    },
                    {
                        "text": "Houston",
                        "root": "Houston",
                        "dependency": "pobj",
                        "head": "in",
                        "start": 53,
                        "end": 60
                    },
                    {
                        "text": "Texas",
                        "root": "Texas",
                        "dependency": "appos",
                        "head": "Houston",
                        "start": 62,
                        "end": 67
                    },
                    {
                        "text": "Burton",
                        "root": "Burton",
                        "dependency": "pobj",
                        "head": "from",
                        "start": 89,
                        "end": 95
                    },
                    {
                        "text": "Texas",
                        "root": "Texas",
                        "dependency": "appos",
                        "head": "Burton",
                        "start": 97,
                        "end": 102
                    },
                    {
                        "text": "Laura Lee",
                        "root": "Lee",
                        "dependency": "pobj",
                        "head": "of",
                        "start": 118,
                        "end": 127
                    },
                    {
                        "text": "bass",
                        "root": "bass",
                        "dependency": "pobj",
                        "head": "on",
                        "start": 131,
                        "end": 135
                    },
                    {
                        "text": "Mark Speer",
                        "root": "Speer",
                        "dependency": "appos",
                        "head": "Burton",
                        "start": 137,
                        "end": 147
                    },
                    {
                        "text": "guitar",
                        "root": "guitar",
                        "dependency": "pobj",
                        "head": "on",
                        "start": 151,
                        "end": 157
                    },
                    {
                        "text": "Donald \u201cDJ\u201d Johnson Jr.",
                        "root": "Jr.",
                        "dependency": "conj",
                        "head": "Speer",
                        "start": 163,
                        "end": 186
                    },
                    {
                        "text": "drums",
                        "root": "drums",
                        "dependency": "pobj",
                        "head": "on",
                        "start": 190,
                        "end": 195
                    },
                    {
                        "text": "sometimes keys",
                        "root": "keys",
                        "dependency": "conj",
                        "head": "drums",
                        "start": 201,
                        "end": 215
                    }
                ]
            }
        },
        {
            "name": "Multilingual Sentence Segmentation",
            "url": "https://multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com/sentenceseg",
            "description": "Splits text into sentence segments. \n\nRequires **text** field. Takes **language** as optional. (Default: English)\n\nReturns **sentence**, **starting character** and **ending character**.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "Matnon, Inc. has a dot inside. The model knows that the dot doesn't end the sentence, though."
                }
            ],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "",
                    "default": "en"
                }
            ],
            "code": "import requests\n\nurl = \"https://multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com/sentenceseg\"\nquerystring = {\"language\": \"en\", \"text\": \"Matnon, Inc. has a dot inside. The model knows that the dot doesn't end the sentence, though.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com/sentenceseg\"\nquerystring = {\"language\": \"en\", \"text\": \"Matnon, Inc. has a dot inside. The model knows that the dot doesn't end the sentence, though.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "sentences": [
                    {
                        "text": "Matnon, Inc. has a dot inside.",
                        "start": 0,
                        "end": 30
                    },
                    {
                        "text": "The model knows that the dot doesn't end the sentence, though.",
                        "start": 31,
                        "end": 93
                    }
                ]
            }
        },
        {
            "name": "Multilingual Stop Words Extractor",
            "url": "https://multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com/stopwords",
            "description": "Extracts stop words from text.\n\nRequires **text** field. Takes **language** as optional.\n\nReturns **token text** and **is_stop boolean**.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "",
                    "default": "en"
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "Mercury was born Farrokh Bulsara in Stone Town in the British protectorate of Zanzibar (now part of Tanzania) on 5 September 1946."
                }
            ],
            "code": "import requests\n\nurl = \"https://multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com/stopwords\"\nquerystring = {\"language\": \"en\", \"text\": \"Mercury was born Farrokh Bulsara in Stone Town in the British protectorate of Zanzibar (now part of Tanzania) on 5 September 1946.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com/stopwords\"\nquerystring = {\"language\": \"en\", \"text\": \"Mercury was born Farrokh Bulsara in Stone Town in the British protectorate of Zanzibar (now part of Tanzania) on 5 September 1946.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "tokens": [
                    {
                        "text": "Mercury",
                        "is_stop": false
                    },
                    {
                        "text": "was",
                        "is_stop": true
                    },
                    {
                        "text": "born",
                        "is_stop": false
                    },
                    {
                        "text": "Farrokh",
                        "is_stop": false
                    },
                    {
                        "text": "Bulsara",
                        "is_stop": false
                    },
                    {
                        "text": "in",
                        "is_stop": true
                    },
                    {
                        "text": "Stone",
                        "is_stop": false
                    },
                    {
                        "text": "Town",
                        "is_stop": false
                    },
                    {
                        "text": "in",
                        "is_stop": true
                    },
                    {
                        "text": "the",
                        "is_stop": true
                    },
                    {
                        "text": "British",
                        "is_stop": false
                    },
                    {
                        "text": "protectorate",
                        "is_stop": false
                    },
                    {
                        "text": "of",
                        "is_stop": true
                    },
                    {
                        "text": "Zanzibar",
                        "is_stop": false
                    },
                    {
                        "text": "(",
                        "is_stop": false
                    },
                    {
                        "text": "now",
                        "is_stop": true
                    },
                    {
                        "text": "part",
                        "is_stop": true
                    },
                    {
                        "text": "of",
                        "is_stop": true
                    },
                    {
                        "text": "Tanzania",
                        "is_stop": false
                    },
                    {
                        "text": ")",
                        "is_stop": false
                    },
                    {
                        "text": "on",
                        "is_stop": true
                    },
                    {
                        "text": "5",
                        "is_stop": false
                    },
                    {
                        "text": "September",
                        "is_stop": false
                    },
                    {
                        "text": "1946",
                        "is_stop": false
                    },
                    {
                        "text": ".",
                        "is_stop": false
                    }
                ]
            }
        },
        {
            "name": "Multilingual Lemmatizer",
            "url": "https://multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com/lemmatizer",
            "description": "Requires **text** field. Takes **language** as optional. (Default: English)\n\nReturns tokenized lemmas.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "Yo estaba perdido, En una casa surreal."
                }
            ],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "",
                    "default": "es"
                }
            ],
            "code": "import requests\n\nurl = \"https://multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com/lemmatizer\"\nquerystring = {\"language\": \"es\", \"text\": \"Yo estaba perdido, En una casa surreal.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com/lemmatizer\"\nquerystring = {\"language\": \"es\", \"text\": \"Yo estaba perdido, En una casa surreal.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "lemmas": [
                    "yo",
                    "estar",
                    "perdido",
                    ",",
                    "En",
                    "uno",
                    "casa",
                    "surreal",
                    "."
                ]
            }
        },
        {
            "name": "Language Detection",
            "url": "https://multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com/languagedetect",
            "description": "Requires **text**. Returns **language** and **score**. \n\nReturned language codes are in ISO 639-1 Language Code format.\n\n**Bonus:** This endpoint works in 55 languages. Yay!",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "**Text** to be analysed. This field will be fed to the language detection model.",
                    "default": "This Matnon API looks neat."
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com/languagedetect\"\nquerystring = {\"text\": \"This Matnon API looks neat.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com/languagedetect\"\nquerystring = {\"text\": \"This Matnon API looks neat.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "language": "en",
                "score": 0.8571403775917661
            }
        },
        {
            "name": "Multilingual Part-of-Speech Tagging",
            "url": "https://multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com/postagging",
            "description": "Part-of-Speech Tagging from text.\n\nRequires **text** field. Takes **language** as optional. (Dafault: English)\n\nReturns **token**, **part-of-speech label** and **part-of-speech tag**.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "RapidAPI was founded in Tel Aviv by Iddo Gino and Mickey Haslavsky on January 2015."
                }
            ],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "",
                    "default": "en"
                }
            ],
            "code": "import requests\n\nurl = \"https://multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com/postagging\"\nquerystring = {\"text\": \"RapidAPI was founded in Tel Aviv by Iddo Gino and Mickey Haslavsky on January 2015.\", \"language\": \"en\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com/postagging\"\nquerystring = {\"text\": \"RapidAPI was founded in Tel Aviv by Iddo Gino and Mickey Haslavsky on January 2015.\", \"language\": \"en\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"multilingual-text-analysis-bundle-by-matnon.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "tokens": [
                    {
                        "text": "RapidAPI",
                        "pos": "NOUN",
                        "tag": "NN"
                    },
                    {
                        "text": "was",
                        "pos": "AUX",
                        "tag": "VBD"
                    },
                    {
                        "text": "founded",
                        "pos": "VERB",
                        "tag": "VBN"
                    },
                    {
                        "text": "in",
                        "pos": "ADP",
                        "tag": "IN"
                    },
                    {
                        "text": "Tel",
                        "pos": "PROPN",
                        "tag": "NNP"
                    },
                    {
                        "text": "Aviv",
                        "pos": "PROPN",
                        "tag": "NNP"
                    },
                    {
                        "text": "by",
                        "pos": "ADP",
                        "tag": "IN"
                    },
                    {
                        "text": "Iddo",
                        "pos": "PROPN",
                        "tag": "NNP"
                    },
                    {
                        "text": "Gino",
                        "pos": "PROPN",
                        "tag": "NNP"
                    },
                    {
                        "text": "and",
                        "pos": "CCONJ",
                        "tag": "CC"
                    },
                    {
                        "text": "Mickey",
                        "pos": "PROPN",
                        "tag": "NNP"
                    },
                    {
                        "text": "Haslavsky",
                        "pos": "PROPN",
                        "tag": "NNP"
                    },
                    {
                        "text": "on",
                        "pos": "ADP",
                        "tag": "IN"
                    },
                    {
                        "text": "January",
                        "pos": "PROPN",
                        "tag": "NNP"
                    },
                    {
                        "text": "2015",
                        "pos": "NUM",
                        "tag": "CD"
                    },
                    {
                        "text": ".",
                        "pos": "PUNCT",
                        "tag": "."
                    }
                ]
            }
        }
    ]
}