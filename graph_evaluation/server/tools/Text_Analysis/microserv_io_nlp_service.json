{
    "product_id": "api_760c7814-3c9d-4115-a204-ff44d7de689d",
    "tool_description": "Implements several basic Natural Language Processing functions.",
    "home_url": "https://rapidapi.com/microserv/api/microserv-io-nlp-service/",
    "name": "Microserv.io NLP Service",
    "title": "Microserv.io NLP Service",
    "pricing": "FREEMIUM",
    "tool_name": "Microserv.io NLP Service",
    "score": null,
    "host": "microserv-io-nlp-service.p.rapidapi.com",
    "api_list": [
        {
            "name": "OSA",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/distance/osa",
            "description": "Returns the \"OSA\" distance between the two submitted strings",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "string1",
                    "type": "STRING",
                    "description": "The first string to be fed to the chosen distance function",
                    "default": "Robert"
                },
                {
                    "name": "string2",
                    "type": "STRING",
                    "description": "The second string to be fed to the chosen distance function",
                    "default": "Rupert"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/distance/osa\"\nquerystring = {\"string1\": \"Robert\", \"string2\": \"Rupert\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/distance/osa\"\nquerystring = {\"string1\": \"Robert\", \"string2\": \"Rupert\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "LixReadability",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/readability/lix",
            "description": "Computes the LIX readability score for the given text/string",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "The text on which you wish to calculate readability indexes/scores",
                    "default": "Mary had a little lamb"
                }
            ],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/readability/lix\"\nquerystring = {\"text\": \"Mary had a little lamb\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/readability/lix\"\nquerystring = {\"text\": \"Mary had a little lamb\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 413,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Counters",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/extract/counters",
            "description": "Returns several counters (number of words, syllables, sentences, ...) on the given text/string",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "The text of which you wish to count words, syllables, ...",
                    "default": "Mary had a little lamb"
                }
            ],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/extract/counters\"\nquerystring = {\"text\": \"Mary had a little lamb\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/extract/counters\"\nquerystring = {\"text\": \"Mary had a little lamb\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 400,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Summary",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/extract/summary",
            "description": "Returns the N most relevant paragraphs in the submitted text/string",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "numParagraphs",
                    "type": "NUMBER",
                    "description": "The number of paragraphs to be returned",
                    "default": 3
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "The text to be summarized",
                    "default": "St. Mark's Church is on 42nd St. near the cafeteria. Let's meet there at 5 P.M."
                }
            ],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/extract/summary\"\nquerystring = {\"numParagraphs\": 3, \"text\": \"St. Mark's Church is on 42nd St. near the cafeteria. Let's meet there at 5 P.M.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/extract/summary\"\nquerystring = {\"numParagraphs\": 3, \"text\": \"St. Mark's Church is on 42nd St. near the cafeteria. Let's meet there at 5 P.M.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 500,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "SmogReadability",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/readability/smog",
            "description": "Computes the SMOG readability score for the given text/string",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "The text on which you wish to calculate readability indexes/scores",
                    "default": "Mary had a little lamb"
                }
            ],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/readability/smog\"\nquerystring = {\"text\": \"Mary had a little lamb\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/readability/smog\"\nquerystring = {\"text\": \"Mary had a little lamb\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Rake",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/extract/rake",
            "description": "RAKE short for Rapid Automatic Keyword Extraction algorithm, is a domain independent keyword extraction algorithm which tries to determine key phrases in a body of text by analyzing the frequency of word appearance and its co-occurance with other words in the text.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "lowerBarrier",
                    "type": "NUMBER",
                    "description": "Raked candidates which score is below this value will not be returned",
                    "default": 1.5
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "The text to be \"raked\"",
                    "default": "Mary had a little lamb"
                }
            ],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/extract/rake\"\nquerystring = {\"lowerBarrier\": 1.5, \"text\": \"Mary had a little lamb\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/extract/rake\"\nquerystring = {\"lowerBarrier\": 1.5, \"text\": \"Mary had a little lamb\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Sentences",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/extract/sentences",
            "description": "Extracts sentences from a given string/text; this API correctly handles texts with typically deceitful punctuation...",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "The text to be split into sentences",
                    "default": "St. Mark's Church is on 42nd St. near the cafeteria. Let's meet there at 5 P.M."
                }
            ],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/extract/sentences\"\nquerystring = {\"text\": \"St. Mark's Church is on 42nd St. near the cafeteria. Let's meet there at 5 P.M.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/extract/sentences\"\nquerystring = {\"text\": \"St. Mark's Church is on 42nd St. near the cafeteria. Let's meet there at 5 P.M.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 500,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "FleschReadingEaseReadability",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/readability/flesch-reading-ease",
            "description": "Computes the Flesch-Reading-Ease readability score for the given text/string",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "The text on which you wish to calculate readability indexes/scores",
                    "default": "Mary had a little lamb"
                }
            ],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/readability/flesch-reading-ease\"\nquerystring = {\"text\": \"Mary had a little lamb\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/readability/flesch-reading-ease\"\nquerystring = {\"text\": \"Mary had a little lamb\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Normalize",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/precis/normalize",
            "description": "Normalizes the submitted text, resolves Unicode conflicts, removes all diacritics, ...",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "The text to be normalzied (normalize Unicode characters, remove diacritics, ...)",
                    "default": "peut \u00eatre appr\u00e9ci\u00e9"
                }
            ],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/precis/normalize\"\nquerystring = {\"text\": \"peut \u00eatre appr\u00e9ci\u00e9\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/precis/normalize\"\nquerystring = {\"text\": \"peut \u00eatre appr\u00e9ci\u00e9\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 413,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "TextFromHTML",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/extract/text-from-html",
            "description": "Extracts the plain-text contents from an HTML document",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "html",
                    "type": "STRING",
                    "description": "The HTML from which you wish to extract the plain-text",
                    "default": "<body><h1>Some title</h1><p>Some paragraph</p></html>"
                }
            ],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/extract/text-from-html\"\nquerystring = {\"html\": \"<body><h1>Some title</h1><p>Some paragraph</p></html>\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/extract/text-from-html\"\nquerystring = {\"html\": \"<body><h1>Some title</h1><p>Some paragraph</p></html>\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 413,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "GunningFogReadability",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/readability/gunning-fog",
            "description": "Computes the Gunning-Fog readability score for the given text/string",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "The text on which you wish to calculate readability indexes/scores",
                    "default": "Mary had a little lamb"
                }
            ],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/readability/gunning-fog\"\nquerystring = {\"text\": \"Mary had a little lamb\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/readability/gunning-fog\"\nquerystring = {\"text\": \"Mary had a little lamb\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 413,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "FleschKincaidReadability",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/readability/flesch-kincaid",
            "description": "Computes the Flesch-Kincaid readability score for the given text/string",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "The text on which you wish to calculate readability indexes/scores",
                    "default": "Mary had a little lamb"
                }
            ],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/readability/flesch-kincaid\"\nquerystring = {\"text\": \"Mary had a little lamb\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/readability/flesch-kincaid\"\nquerystring = {\"text\": \"Mary had a little lamb\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 401,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Compare",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/precis/compare",
            "description": "Normalizes the submitted strings, then compares their normalzied forms and returns the result of this comparison",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text1",
                    "type": "STRING",
                    "description": "The first text to be compared",
                    "default": "peut \u00eatre appr\u00e9ci\u00e9"
                },
                {
                    "name": "text2",
                    "type": "STRING",
                    "description": "The second text to be compared",
                    "default": "p\u00eaut etre appreci\u00e9"
                }
            ],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/precis/compare\"\nquerystring = {\"text1\": \"peut \u00eatre appr\u00e9ci\u00e9\", \"text2\": \"p\u00eaut etre appreci\u00e9\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/precis/compare\"\nquerystring = {\"text1\": \"peut \u00eatre appr\u00e9ci\u00e9\", \"text2\": \"p\u00eaut etre appreci\u00e9\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Tags",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/extract/tags",
            "description": "Extracts tagged/labeled tokens from a given text/string",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "The text to be split into tagged/labeled tokens",
                    "default": "Mary had a little lamb"
                }
            ],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/extract/tags\"\nquerystring = {\"text\": \"Mary had a little lamb\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/extract/tags\"\nquerystring = {\"text\": \"Mary had a little lamb\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Entities",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/extract/entities",
            "description": "Extracts named entities from a given text/string along with their labels",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "The text to be split into named entities",
                    "default": "Mary had a little lamb"
                }
            ],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/extract/entities\"\nquerystring = {\"text\": \"Mary had a little lamb\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/extract/entities\"\nquerystring = {\"text\": \"Mary had a little lamb\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 401,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "DetectLanguage",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/detect/language",
            "description": "Attempts to detect the language of the submitted text/string",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "The text which language you wish to identify",
                    "default": "peut \u00eatre appr\u00e9ci\u00e9"
                }
            ],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/detect/language\"\nquerystring = {\"text\": \"peut \u00eatre appr\u00e9ci\u00e9\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/detect/language\"\nquerystring = {\"text\": \"peut \u00eatre appr\u00e9ci\u00e9\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 401,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Soundex",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/phonetics/soundex",
            "description": "Returns the \"soundex\" phonetic equivalent of the submitted single word",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "word",
                    "type": "STRING",
                    "description": "The single word to transform into its \"soundex\" equivalent",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/phonetics/soundex\"\nquerystring = {\"word\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/phonetics/soundex\"\nquerystring = {\"word\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "DaleChallReadability",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/readability/dale-chall",
            "description": "Computes the Dale-Chall readability score for the given text/string",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "The text on which you wish to calculate readability indexes/scores",
                    "default": "Mary had a little lamb"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/readability/dale-chall\"\nquerystring = {\"text\": \"Mary had a little lamb\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/readability/dale-chall\"\nquerystring = {\"text\": \"Mary had a little lamb\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Tokens",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/extract/tokens",
            "description": "Extracts tokens from a given string/text; this API correctly extract complex and modern tokens like hashtags, email addresses, URLs, ...",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "The text to be tokenized",
                    "default": "We love #APIs at https://microserv.io"
                }
            ],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/extract/tokens\"\nquerystring = {\"text\": \"We love #APIs at https://microserv.io\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/extract/tokens\"\nquerystring = {\"text\": \"We love #APIs at https://microserv.io\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 413,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "AutomatedReadability",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/readability/automated",
            "description": "Computes the automated readability score for the given text/string",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "The text on which you wish to calculate readability indexes/scores",
                    "default": "Mary had a little lamb"
                }
            ],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/readability/automated\"\nquerystring = {\"text\": \"Mary had a little lamb\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/readability/automated\"\nquerystring = {\"text\": \"Mary had a little lamb\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 413,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "ColemanLiauReadability",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/readability/coleman-liau",
            "description": "Computes the Coleman-Liau readability score for the given text/string",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "The text on which you wish to calculate readability indexes/scores",
                    "default": "Mary had a little lamb"
                }
            ],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/readability/coleman-liau\"\nquerystring = {\"text\": \"Mary had a little lamb\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/readability/coleman-liau\"\nquerystring = {\"text\": \"Mary had a little lamb\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 400,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Phonex",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/phonetics/phonex",
            "description": "Returns the \"phonex\" phonetic equivalent of the submitted single word",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "word",
                    "type": "STRING",
                    "description": "The single word to transform into its \"phonex\" equivalent",
                    "default": "Robert"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/phonetics/phonex\"\nquerystring = {\"word\": \"Robert\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/phonetics/phonex\"\nquerystring = {\"word\": \"Robert\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "NYSIIS",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/phonetics/nysiis",
            "description": "Returns the \"NYSIIS\" phonetic equivalent of the submitted single word",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "word",
                    "type": "STRING",
                    "description": "The single word to transform into its \"NYSIIS\" equivalent",
                    "default": "Robert"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/phonetics/nysiis\"\nquerystring = {\"word\": \"Robert\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/phonetics/nysiis\"\nquerystring = {\"word\": \"Robert\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Metaphone",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/phonetics/metaphone",
            "description": "Returns the \"metaphone\" phonetic equivalent of the submitted single word",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "word",
                    "type": "STRING",
                    "description": "The single word to transform into its \"metaphone\" equivalent",
                    "default": "Robert"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/phonetics/metaphone\"\nquerystring = {\"word\": \"Robert\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/phonetics/metaphone\"\nquerystring = {\"word\": \"Robert\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Damerau-Levenshtein",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/distance/damerau-levenshtein",
            "description": "Returns the \"Damerau-Levenshtein\" distance between the two submitted strings",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "string1",
                    "type": "STRING",
                    "description": "The first string to be fed to the chosen distance function",
                    "default": "Robert"
                },
                {
                    "name": "string2",
                    "type": "STRING",
                    "description": "The second string to be fed to the chosen distance function",
                    "default": "Rupert"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/distance/damerau-levenshtein\"\nquerystring = {\"string1\": \"Robert\", \"string2\": \"Rupert\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/distance/damerau-levenshtein\"\nquerystring = {\"string1\": \"Robert\", \"string2\": \"Rupert\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Levenshtein",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/distance/levenshtein",
            "description": "Returns the \"Levenshtein\" distance between the two submitted strings",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "string2",
                    "type": "STRING",
                    "description": "The second string to be fed to the chosen distance function",
                    "default": "Rupert"
                },
                {
                    "name": "string1",
                    "type": "STRING",
                    "description": "The first string to be fed to the chosen distance function",
                    "default": "Robert"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/distance/levenshtein\"\nquerystring = {\"string2\": \"Rupert\", \"string1\": \"Robert\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/distance/levenshtein\"\nquerystring = {\"string2\": \"Rupert\", \"string1\": \"Robert\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Hamming",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/distance/hamming",
            "description": "Returns the \"Hamming\" distance between the two submitted strings",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "string1",
                    "type": "STRING",
                    "description": "The first string to be fed to the chosen distance function",
                    "default": "Robert"
                },
                {
                    "name": "string2",
                    "type": "STRING",
                    "description": "The second string to be fed to the chosen distance function",
                    "default": "Rupert"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/distance/hamming\"\nquerystring = {\"string1\": \"Robert\", \"string2\": \"Rupert\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/distance/hamming\"\nquerystring = {\"string1\": \"Robert\", \"string2\": \"Rupert\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Jaro",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/distance/jaro",
            "description": "Returns the \"Jaro\" distance between the two submitted strings",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "string2",
                    "type": "STRING",
                    "description": "The second string to be fed to the chosen distance function",
                    "default": "Rupert"
                },
                {
                    "name": "string1",
                    "type": "STRING",
                    "description": "The first string to be fed to the chosen distance function",
                    "default": "Robert"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/distance/jaro\"\nquerystring = {\"string2\": \"Rupert\", \"string1\": \"Robert\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/distance/jaro\"\nquerystring = {\"string2\": \"Rupert\", \"string1\": \"Robert\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Jaro-Winkler",
            "url": "https://microserv-io-nlp-service.p.rapidapi.com/distance/jaro-winkler",
            "description": "Returns the \"Jaro-Winkler\" distance between the two submitted strings",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "string1",
                    "type": "STRING",
                    "description": "The first string to be fed to the chosen distance function",
                    "default": "Robert"
                },
                {
                    "name": "string2",
                    "type": "STRING",
                    "description": "The second string to be fed to the chosen distance function",
                    "default": "Rupert"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/distance/jaro-winkler\"\nquerystring = {\"string1\": \"Robert\", \"string2\": \"Rupert\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://microserv-io-nlp-service.p.rapidapi.com/distance/jaro-winkler\"\nquerystring = {\"string1\": \"Robert\", \"string2\": \"Rupert\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"microserv-io-nlp-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    ]
}