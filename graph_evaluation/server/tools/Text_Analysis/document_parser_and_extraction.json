{
    "product_id": "api_2a7febbf-a321-43cb-8eaa-3cf333c85d0b",
    "tool_description": "Extract data from documents and scans",
    "home_url": "https://rapidapi.com/quantxt-inc-theia/api/document-parser-and-extraction/",
    "name": "Document Parser and Extraction",
    "title": "Document Parser and Extraction",
    "pricing": "FREEMIUM",
    "tool_name": "Document Parser and Extraction",
    "score": null,
    "host": "document-parser-and-extraction.p.rapidapi.com",
    "api_list": [
        {
            "name": "Submit Job",
            "url": "https://document-parser-and-extraction.p.rapidapi.com/search/new",
            "description": "Takes a list of up to **30** file uuids and one or more dictionaries and provides extracted data.\n\n`title`: (Optional) Set a name for the job\n`files`: (Required) Array of file uuids received from Data Import end point\n`searchDictionaries`: (Required) Array of dictionaries, set `vocabValueType` to `NUMBER` for extracting numbers or `DATETIME` for extracting dates\n`chunk`: (Required) set to `PAGE` for processing pdf, xls, xlsx and document images (PNG, TIFF) and to `SENTENCE` for plain text documents\n\nThis end point is non-blocking.\n\nIt returns an ** id** which can be used for monitoring the status of the process or retrieving the results upon completion.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://document-parser-and-extraction.p.rapidapi.com/search/new\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"document-parser-and-extraction.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://document-parser-and-extraction.p.rapidapi.com/search/new\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"document-parser-and-extraction.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Create Model",
            "url": "https://document-parser-and-extraction.p.rapidapi.com/search/new",
            "description": "Create a custom extraction model.\nA model is simply a collection of vocabularies and tells the system:\n  1- What properties to look for in the documents to extract\n  2-  What should the property be mapped to",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://document-parser-and-extraction.p.rapidapi.com/search/new\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"document-parser-and-extraction.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://document-parser-and-extraction.p.rapidapi.com/search/new\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"document-parser-and-extraction.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Import data files",
            "url": "https://document-parser-and-extraction.p.rapidapi.com/search/file",
            "description": "Upload document files so they can be processed by the data extraction engine.\n\nSupported file types: .pdf, .jpg/.jpeg or .png.\n\nThe server returns a UUID for each uploaded file. \nFile UUIDs can be provided for the extraction endpoint to process the documents.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://document-parser-and-extraction.p.rapidapi.com/search/file\"\nquerystring = {\"file\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"document-parser-and-extraction.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://document-parser-and-extraction.p.rapidapi.com/search/file\"\nquerystring = {\"file\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"document-parser-and-extraction.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Create",
            "url": "https://document-parser-and-extraction.p.rapidapi.com/dictionaries",
            "description": "Create one or more variations for a field name to be captured from the input documents.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://document-parser-and-extraction.p.rapidapi.com/dictionaries\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"document-parser-and-extraction.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://document-parser-and-extraction.p.rapidapi.com/dictionaries\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"document-parser-and-extraction.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        }
    ]
}