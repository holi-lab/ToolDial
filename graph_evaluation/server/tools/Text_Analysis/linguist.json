{
    "tool_name": "Linguist",
    "tool_description": "Linguist packs all features you need to process text including Counters,  Article Parser, Part of Speech (POS) Tagger, Tokenizer, Stemmer, Bad Words Remover, Stop Words Remover, Sentence Segmentation, Spellchecker, Text Summarizer, Definition and Synonyms, Word Frequency, Lemmatize, Pluralize, Singularize, Rhymes, Sounds Like, Spells Like, and Writing Suggestions.",
    "title": "Linguist",
    "pricing": "FREEMIUM",
    "score": {
        "avgServiceLevel": 60,
        "avgLatency": 146,
        "avgSuccessRate": 60,
        "popularityScore": 8.8,
        "__typename": "Score"
    },
    "home_url": "https://rapidapi.com/dwi.rizki.irawan/api/linguist/",
    "host": "linguist.p.rapidapi.com",
    "api_list": [
        {
            "name": "Article Parser",
            "url": "https://linguist.p.rapidapi.com/v1/article-parser",
            "description": "Parse article from a URL",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.gatesnotes.com/Energy/My-message-to-the-world-at-COP26"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/article-parser\"\nquerystring = {\"url\": url}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {
                "access-control-allow-credentials": "true",
                "access-control-allow-origin": "*",
                "connection": "keep-alive",
                "content-length": "805",
                "content-type": "application/json",
                "date": "Sun, 07 Nov 2021 12:48:20 GMT",
                "server": "RapidAPI-1.2.8",
                "x-rapidapi-mock-response": "true",
                "x-rapidapi-region": "AWS - ap-southeast-1",
                "x-rapidapi-version": "1.2.8"
            },
            "schema": {}
        },
        {
            "name": "Summarizer",
            "url": "https://linguist.p.rapidapi.com/v1/summarizer",
            "description": "Summarize an article or passage to a sentence (or more).",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "Hello from Glasgow, Scotland. I\u2019m here to attend the COP26 climate conference, and it\u2019s been a whirlwind couple of days so far. As I wrote in the Financial Times, one of my top priorities here at COP is making sure that the world prioritizes scaling clean technology innovation. If we\u2019re going to avoid the worst effects of a climate disaster, it\u2019s not enough to invent zero-carbon alternatives\u2014we need to make sure they\u2019re affordable and accessible enough for people all over the world to use them. I\u2019m also spending a lot of time this week talking about climate adaptation. It\u2019s deeply unfair that the world\u2019s poorest people, who contribute the least to climate change, will suffer from its effects the most. Rich and middle-income countries are causing the vast majority of climate change, and we need to be the ones to step up and invest more in adaptation. Earlier today, I had the opportunity to address COP26 delegates at the World Leaders Summit. The session was all about accelerating clean energy innovation and deployment, and I was honored to share the stage with leaders from across government, the private sector, and philanthropy. You can read the full text of my remarks below."
                }
            ],
            "optional_parameters": [
                {
                    "name": "sentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/summarizer\"\nquerystring = {\"text\": text, \"sentences\": sentences}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "results": {
                        "type": "object",
                        "properties": {
                            "summary": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Definition",
            "url": "https://linguist.p.rapidapi.com/v1/definition",
            "description": "Returns array of words with definition, synonyms, part of speech, lemma, and example use. Data taken from WordNet.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "word",
                    "type": "STRING",
                    "description": "",
                    "default": "good"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/definition\"\nquerystring = {\"word\": word}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Lemmatizer",
            "url": "https://linguist.p.rapidapi.com/v1/lemmatizer",
            "description": "Get lemma of particular word",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "word",
                    "type": "STRING",
                    "description": "",
                    "default": "easier"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/lemmatizer\"\nquerystring = {\"word\": word}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Stemmer",
            "url": "https://linguist.p.rapidapi.com/v1/stemmer",
            "description": "Get the stem of a word using Porter2 Stemmer",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "word",
                    "type": "STRING",
                    "description": "",
                    "default": "matched"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/stemmer\"\nquerystring = {\"word\": word}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Rhymes",
            "url": "https://linguist.p.rapidapi.com/v1/rhymes",
            "description": "Get list of words that rhymes with the query.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "word",
                    "type": "STRING",
                    "description": "",
                    "default": "matched"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/rhymes\"\nquerystring = {\"word\": word}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Sounds Like",
            "url": "https://linguist.p.rapidapi.com/v1/sounds-like",
            "description": "Get list of words that sounds like the query.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "word",
                    "type": "STRING",
                    "description": "",
                    "default": "pink"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/sounds-like\"\nquerystring = {\"word\": word}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Spelled Like",
            "url": "https://linguist.p.rapidapi.com/v1/spelled-like",
            "description": "Get list of words that sounds like the query.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "word",
                    "type": "STRING",
                    "description": "",
                    "default": "jumbo"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/spelled-like\"\nquerystring = {\"word\": word}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Singularize",
            "url": "https://linguist.p.rapidapi.com/v1/singularize",
            "description": "Get singular form of a word.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "word",
                    "type": "STRING",
                    "description": "",
                    "default": "mice"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/singularize\"\nquerystring = {\"word\": word}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Pluralize",
            "url": "https://linguist.p.rapidapi.com/v1/pluralize",
            "description": "Get plural form of a word.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "word",
                    "type": "STRING",
                    "description": "",
                    "default": "mouse"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/pluralize\"\nquerystring = {\"word\": word}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Spellcheck",
            "url": "https://linguist.p.rapidapi.com/v1/spellcheck",
            "description": "Turn text into tokens and spellcheck each token then give suggestion (if any).",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "To illustrate soething. To give an exmple."
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/spellcheck\"\nquerystring = {\"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Word Frequency",
            "url": "https://linguist.p.rapidapi.com/v1/word-frequency",
            "description": "Count how many times unique word appear on a text.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "This is just a sample text to show text text text"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/word-frequency\"\nquerystring = {\"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Sentence Segmenter",
            "url": "https://linguist.p.rapidapi.com/v1/sentence-segmenter",
            "description": "Break paragraphs to array of sentences.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "This is a sentence. This is also a sentence. Dr. Strange will test the quality."
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/sentence-segmenter\"\nquerystring = {\"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        {
            "name": "Writing Suggestions",
            "url": "https://linguist.p.rapidapi.com/v1/writing-suggestions",
            "description": "Get writing suggestions. It will check lexical illusion, start with \"so\", there is and there are's, weasel words, adverbs, too wordy sentences, and cliches.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "Hello from Glasgow, Scotland. I\u2019m here to attend the COP26 climate conference, and it\u2019s been a whirlwind couple of days so far. As I wrote in the Financial Times, one of my top priorities here at COP is making sure that the world prioritizes scaling clean technology innovation. If we\u2019re going to avoid the worst effects of a climate disaster, it\u2019s not enough to invent zero-carbon alternatives\u2014we need to make sure they\u2019re affordable and accessible enough for people all over the world to use them. I\u2019m also spending a lot of time this week talking about climate adaptation. It\u2019s deeply unfair that the world\u2019s poorest people, who contribute the least to climate change, will suffer from its effects the most. Rich and middle-income countries are causing the vast majority of climate change, and we need to be the ones to step up and invest more in adaptation. Earlier today, I had the opportunity to address COP26 delegates at the World Leaders Summit. The session was all about accelerating clean energy innovation and deployment, and I was honored to share the stage with leaders from across government, the private sector, and philanthropy. You can read the full text of my remarks below."
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/writing-suggestions\"\nquerystring = {\"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "index": {
                                    "type": "integer"
                                },
                                "offset": {
                                    "type": "integer"
                                },
                                "reason": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Tokenizer",
            "url": "https://linguist.p.rapidapi.com/v1/tokenizer",
            "description": "Tokenize text input",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "my text payload"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/tokenizer\"\nquerystring = {\"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        {
            "name": "PoS Tagger",
            "url": "https://linguist.p.rapidapi.com/v1/pos-tagger",
            "description": "Part of Speech Tagger",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "example string value"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/pos-tagger\"\nquerystring = {\"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Sentiment Analysis",
            "url": "https://linguist.p.rapidapi.com/v1/sentiment-analysis",
            "description": "Analize text and give sentiment analysis score using AFINN method.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "Hello from Glasgow, Scotland. I\u2019m here to attend the COP26 climate conference, and it\u2019s been a whirlwind couple of days so far. As I wrote in the Financial Times, one of my top priorities here at COP is making sure that the world prioritizes scaling clean technology innovation. If we\u2019re going to avoid the worst effects of a climate disaster, it\u2019s not enough to invent zero-carbon alternatives\u2014we need to make sure they\u2019re affordable and accessible enough for people all over the world to use them. I\u2019m also spending a lot of time this week talking about climate adaptation. It's deeply unfair that the world\u2019s poorest people, who contribute the least to climate change, will suffer from its effects the most. Rich and middle-income countries are causing the vast majority of climate change, and we need to be the ones to step up and invest more in adaptation. Earlier today, I had the opportunity to address COP26 delegates at the World Leaders Summit. The session was all about accelerating clean energy innovation and deployment, and I was honored to share the stage with leaders from across government, the private sector, and philanthropy. You can read the full text of my remarks below.\"Hello from Glasgow, Scotland. I\u2019m here to attend the COP26 climate conference, and it\u2019s been a whirlwind couple of days so far. As I wrote in the Financial Times, one of my top priorities here at COP is making sure that the world prioritizes scaling clean technology innovation. If we\u2019re going to avoid the worst effects of a climate disaster, it\u2019s not enough to invent zero-carbon alternatives\u2014we need to make sure they\u2019re affordable and accessible enough for people all over the world to use them. I\u2019m also spending a lot of time this week talking about climate adaptation. It's deeply unfair that the world\u2019s poorest people, who contribute the least to climate change, will suffer from its effects the most. Rich and middle-income countries are causing the vast majority of climate change, and we need to be the ones to step up and invest more in adaptation. Earlier today, I had the opportunity to address COP26 delegates at the World Leaders Summit. The session was all about accelerating clean energy innovation and deployment, and I was honored to share the stage with leaders from across government, the private sector, and philanthropy. You can read the full text of my remarks below."
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/sentiment-analysis\"\nquerystring = {\"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Stop Words Remover",
            "url": "https://linguist.p.rapidapi.com/v1/remove-stop-words",
            "description": "Remove stop words from text.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "This is the text used to test stop words."
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/remove-stop-words\"\nquerystring = {\"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "results": {
                        "type": "object",
                        "properties": {
                            "string": {
                                "type": "string"
                            },
                            "tokenized": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Bad Words Remover",
            "url": "https://linguist.p.rapidapi.com/v1/remove-bad-words",
            "description": "Detect profane words and replace it with *s.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "This is the text used to test bad ass"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/remove-bad-words\"\nquerystring = {\"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "results": {
                        "type": "object",
                        "properties": {
                            "string": {
                                "type": "string"
                            },
                            "tokenized": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Counter",
            "url": "https://linguist.p.rapidapi.com/v1/counter",
            "description": "Count how many words and characters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "This is the text used to test the endpoint"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/counter\"\nquerystring = {\"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {}
        },
        {
            "name": "Article Parser",
            "url": "https://linguist.p.rapidapi.com/v1/article-parser",
            "description": "Parse article from a URL",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.gatesnotes.com/Energy/My-message-to-the-world-at-COP26"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/article-parser\"\nquerystring = {\"url\": \"https://www.gatesnotes.com/Energy/My-message-to-the-world-at-COP26\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/article-parser\"\nquerystring = {\"url\": \"https://www.gatesnotes.com/Energy/My-message-to-the-world-at-COP26\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Summarizer",
            "url": "https://linguist.p.rapidapi.com/v1/summarizer",
            "description": "Summarize an article or passage to a sentence (or more).",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "Hello from Glasgow, Scotland. I\u2019m here to attend the COP26 climate conference, and it\u2019s been a whirlwind couple of days so far. As I wrote in the Financial Times, one of my top priorities here at COP is making sure that the world prioritizes scaling clean technology innovation. If we\u2019re going to avoid the worst effects of a climate disaster, it\u2019s not enough to invent zero-carbon alternatives\u2014we need to make sure they\u2019re affordable and accessible enough for people all over the world to use them. I\u2019m also spending a lot of time this week talking about climate adaptation. It\u2019s deeply unfair that the world\u2019s poorest people, who contribute the least to climate change, will suffer from its effects the most. Rich and middle-income countries are causing the vast majority of climate change, and we need to be the ones to step up and invest more in adaptation. Earlier today, I had the opportunity to address COP26 delegates at the World Leaders Summit. The session was all about accelerating clean energy innovation and deployment, and I was honored to share the stage with leaders from across government, the private sector, and philanthropy. You can read the full text of my remarks below."
                }
            ],
            "optional_parameters": [
                {
                    "name": "sentences",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/summarizer\"\nquerystring = {\"text\": \"Hello from Glasgow, Scotland. I\u2019m here to attend the COP26 climate conference, and it\u2019s been a whirlwind couple of days so far. As I wrote in the Financial Times, one of my top priorities here at COP is making sure that the world prioritizes scaling clean technology innovation. If we\u2019re going to avoid the worst effects of a climate disaster, it\u2019s not enough to invent zero-carbon alternatives\u2014we need to make sure they\u2019re affordable and accessible enough for people all over the world to use them. I\u2019m also spending a lot of time this week talking about climate adaptation. It\u2019s deeply unfair that the world\u2019s poorest people, who contribute the least to climate change, will suffer from its effects the most. Rich and middle-income countries are causing the vast majority of climate change, and we need to be the ones to step up and invest more in adaptation. Earlier today, I had the opportunity to address COP26 delegates at the World Leaders Summit. The session was all about accelerating clean energy innovation and deployment, and I was honored to share the stage with leaders from across government, the private sector, and philanthropy. You can read the full text of my remarks below.\", \"sentences\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/summarizer\"\nquerystring = {\"text\": \"Hello from Glasgow, Scotland. I\u2019m here to attend the COP26 climate conference, and it\u2019s been a whirlwind couple of days so far. As I wrote in the Financial Times, one of my top priorities here at COP is making sure that the world prioritizes scaling clean technology innovation. If we\u2019re going to avoid the worst effects of a climate disaster, it\u2019s not enough to invent zero-carbon alternatives\u2014we need to make sure they\u2019re affordable and accessible enough for people all over the world to use them. I\u2019m also spending a lot of time this week talking about climate adaptation. It\u2019s deeply unfair that the world\u2019s poorest people, who contribute the least to climate change, will suffer from its effects the most. Rich and middle-income countries are causing the vast majority of climate change, and we need to be the ones to step up and invest more in adaptation. Earlier today, I had the opportunity to address COP26 delegates at the World Leaders Summit. The session was all about accelerating clean energy innovation and deployment, and I was honored to share the stage with leaders from across government, the private sector, and philanthropy. You can read the full text of my remarks below.\", \"sentences\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "results": {
                        "type": "object",
                        "properties": {
                            "summary": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Spellcheck",
            "url": "https://linguist.p.rapidapi.com/v1/spellcheck",
            "description": "Turn text into tokens and spellcheck each token then give suggestion (if any).",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "To illustrate soething. To give an exmple."
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/spellcheck\"\nquerystring = {\"text\": \"To illustrate soething. To give an exmple.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/spellcheck\"\nquerystring = {\"text\": \"To illustrate soething. To give an exmple.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Word Frequency",
            "url": "https://linguist.p.rapidapi.com/v1/word-frequency",
            "description": "Count how many times unique word appear on a text.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "This is just a sample text to show text text text"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/word-frequency\"\nquerystring = {\"text\": \"This is just a sample text to show text text text\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/word-frequency\"\nquerystring = {\"text\": \"This is just a sample text to show text text text\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Sentence Segmenter",
            "url": "https://linguist.p.rapidapi.com/v1/sentence-segmenter",
            "description": "Break paragraphs to array of sentences.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "This is a sentence. This is also a sentence. Dr. Strange will test the quality."
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/sentence-segmenter\"\nquerystring = {\"text\": \"This is a sentence. This is also a sentence. Dr. Strange will test the quality.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/sentence-segmenter\"\nquerystring = {\"text\": \"This is a sentence. This is also a sentence. Dr. Strange will test the quality.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        {
            "name": "Writing Suggestions",
            "url": "https://linguist.p.rapidapi.com/v1/writing-suggestions",
            "description": "Get writing suggestions. It will check lexical illusion, start with \"so\", there is and there are's, weasel words, adverbs, too wordy sentences, and cliches.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "Hello from Glasgow, Scotland. I\u2019m here to attend the COP26 climate conference, and it\u2019s been a whirlwind couple of days so far. As I wrote in the Financial Times, one of my top priorities here at COP is making sure that the world prioritizes scaling clean technology innovation. If we\u2019re going to avoid the worst effects of a climate disaster, it\u2019s not enough to invent zero-carbon alternatives\u2014we need to make sure they\u2019re affordable and accessible enough for people all over the world to use them. I\u2019m also spending a lot of time this week talking about climate adaptation. It\u2019s deeply unfair that the world\u2019s poorest people, who contribute the least to climate change, will suffer from its effects the most. Rich and middle-income countries are causing the vast majority of climate change, and we need to be the ones to step up and invest more in adaptation. Earlier today, I had the opportunity to address COP26 delegates at the World Leaders Summit. The session was all about accelerating clean energy innovation and deployment, and I was honored to share the stage with leaders from across government, the private sector, and philanthropy. You can read the full text of my remarks below."
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/writing-suggestions\"\nquerystring = {\"text\": \"Hello from Glasgow, Scotland. I\u2019m here to attend the COP26 climate conference, and it\u2019s been a whirlwind couple of days so far. As I wrote in the Financial Times, one of my top priorities here at COP is making sure that the world prioritizes scaling clean technology innovation. If we\u2019re going to avoid the worst effects of a climate disaster, it\u2019s not enough to invent zero-carbon alternatives\u2014we need to make sure they\u2019re affordable and accessible enough for people all over the world to use them. I\u2019m also spending a lot of time this week talking about climate adaptation. It\u2019s deeply unfair that the world\u2019s poorest people, who contribute the least to climate change, will suffer from its effects the most. Rich and middle-income countries are causing the vast majority of climate change, and we need to be the ones to step up and invest more in adaptation. Earlier today, I had the opportunity to address COP26 delegates at the World Leaders Summit. The session was all about accelerating clean energy innovation and deployment, and I was honored to share the stage with leaders from across government, the private sector, and philanthropy. You can read the full text of my remarks below.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/writing-suggestions\"\nquerystring = {\"text\": \"Hello from Glasgow, Scotland. I\u2019m here to attend the COP26 climate conference, and it\u2019s been a whirlwind couple of days so far. As I wrote in the Financial Times, one of my top priorities here at COP is making sure that the world prioritizes scaling clean technology innovation. If we\u2019re going to avoid the worst effects of a climate disaster, it\u2019s not enough to invent zero-carbon alternatives\u2014we need to make sure they\u2019re affordable and accessible enough for people all over the world to use them. I\u2019m also spending a lot of time this week talking about climate adaptation. It\u2019s deeply unfair that the world\u2019s poorest people, who contribute the least to climate change, will suffer from its effects the most. Rich and middle-income countries are causing the vast majority of climate change, and we need to be the ones to step up and invest more in adaptation. Earlier today, I had the opportunity to address COP26 delegates at the World Leaders Summit. The session was all about accelerating clean energy innovation and deployment, and I was honored to share the stage with leaders from across government, the private sector, and philanthropy. You can read the full text of my remarks below.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "index": {
                                    "type": "integer"
                                },
                                "offset": {
                                    "type": "integer"
                                },
                                "reason": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Tokenizer",
            "url": "https://linguist.p.rapidapi.com/v1/tokenizer",
            "description": "Tokenize text input",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "my text payload"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/tokenizer\"\nquerystring = {\"text\": \"my text payload\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/tokenizer\"\nquerystring = {\"text\": \"my text payload\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        {
            "name": "PoS Tagger",
            "url": "https://linguist.p.rapidapi.com/v1/pos-tagger",
            "description": "Part of Speech Tagger",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "example string value"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/pos-tagger\"\nquerystring = {\"text\": \"example string value\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/pos-tagger\"\nquerystring = {\"text\": \"example string value\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Sentiment Analysis",
            "url": "https://linguist.p.rapidapi.com/v1/sentiment-analysis",
            "description": "Analize text and give sentiment analysis score using AFINN method.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "Hello from Glasgow, Scotland. I\u2019m here to attend the COP26 climate conference, and it\u2019s been a whirlwind couple of days so far. As I wrote in the Financial Times, one of my top priorities here at COP is making sure that the world prioritizes scaling clean technology innovation. If we\u2019re going to avoid the worst effects of a climate disaster, it\u2019s not enough to invent zero-carbon alternatives\u2014we need to make sure they\u2019re affordable and accessible enough for people all over the world to use them. I\u2019m also spending a lot of time this week talking about climate adaptation. It's deeply unfair that the world\u2019s poorest people, who contribute the least to climate change, will suffer from its effects the most. Rich and middle-income countries are causing the vast majority of climate change, and we need to be the ones to step up and invest more in adaptation. Earlier today, I had the opportunity to address COP26 delegates at the World Leaders Summit. The session was all about accelerating clean energy innovation and deployment, and I was honored to share the stage with leaders from across government, the private sector, and philanthropy. You can read the full text of my remarks below.\"Hello from Glasgow, Scotland. I\u2019m here to attend the COP26 climate conference, and it\u2019s been a whirlwind couple of days so far. As I wrote in the Financial Times, one of my top priorities here at COP is making sure that the world prioritizes scaling clean technology innovation. If we\u2019re going to avoid the worst effects of a climate disaster, it\u2019s not enough to invent zero-carbon alternatives\u2014we need to make sure they\u2019re affordable and accessible enough for people all over the world to use them. I\u2019m also spending a lot of time this week talking about climate adaptation. It's deeply unfair that the world\u2019s poorest people, who contribute the least to climate change, will suffer from its effects the most. Rich and middle-income countries are causing the vast majority of climate change, and we need to be the ones to step up and invest more in adaptation. Earlier today, I had the opportunity to address COP26 delegates at the World Leaders Summit. The session was all about accelerating clean energy innovation and deployment, and I was honored to share the stage with leaders from across government, the private sector, and philanthropy. You can read the full text of my remarks below."
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/sentiment-analysis\"\nquerystring = {\"text\": \"Hello from Glasgow, Scotland. I\u2019m here to attend the COP26 climate conference, and it\u2019s been a whirlwind couple of days so far. As I wrote in the Financial Times, one of my top priorities here at COP is making sure that the world prioritizes scaling clean technology innovation. If we\u2019re going to avoid the worst effects of a climate disaster, it\u2019s not enough to invent zero-carbon alternatives\u2014we need to make sure they\u2019re affordable and accessible enough for people all over the world to use them. I\u2019m also spending a lot of time this week talking about climate adaptation. It's deeply unfair that the world\u2019s poorest people, who contribute the least to climate change, will suffer from its effects the most. Rich and middle-income countries are causing the vast majority of climate change, and we need to be the ones to step up and invest more in adaptation. Earlier today, I had the opportunity to address COP26 delegates at the World Leaders Summit. The session was all about accelerating clean energy innovation and deployment, and I was honored to share the stage with leaders from across government, the private sector, and philanthropy. You can read the full text of my remarks below.\\\"Hello from Glasgow, Scotland. I\u2019m here to attend the COP26 climate conference, and it\u2019s been a whirlwind couple of days so far. As I wrote in the Financial Times, one of my top priorities here at COP is making sure that the world prioritizes scaling clean technology innovation. If we\u2019re going to avoid the worst effects of a climate disaster, it\u2019s not enough to invent zero-carbon alternatives\u2014we need to make sure they\u2019re affordable and accessible enough for people all over the world to use them. I\u2019m also spending a lot of time this week talking about climate adaptation. It's deeply unfair that the world\u2019s poorest people, who contribute the least to climate change, will suffer from its effects the most. Rich and middle-income countries are causing the vast majority of climate change, and we need to be the ones to step up and invest more in adaptation. Earlier today, I had the opportunity to address COP26 delegates at the World Leaders Summit. The session was all about accelerating clean energy innovation and deployment, and I was honored to share the stage with leaders from across government, the private sector, and philanthropy. You can read the full text of my remarks below.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/sentiment-analysis\"\nquerystring = {\"text\": \"Hello from Glasgow, Scotland. I\u2019m here to attend the COP26 climate conference, and it\u2019s been a whirlwind couple of days so far. As I wrote in the Financial Times, one of my top priorities here at COP is making sure that the world prioritizes scaling clean technology innovation. If we\u2019re going to avoid the worst effects of a climate disaster, it\u2019s not enough to invent zero-carbon alternatives\u2014we need to make sure they\u2019re affordable and accessible enough for people all over the world to use them. I\u2019m also spending a lot of time this week talking about climate adaptation. It's deeply unfair that the world\u2019s poorest people, who contribute the least to climate change, will suffer from its effects the most. Rich and middle-income countries are causing the vast majority of climate change, and we need to be the ones to step up and invest more in adaptation. Earlier today, I had the opportunity to address COP26 delegates at the World Leaders Summit. The session was all about accelerating clean energy innovation and deployment, and I was honored to share the stage with leaders from across government, the private sector, and philanthropy. You can read the full text of my remarks below.\\\"Hello from Glasgow, Scotland. I\u2019m here to attend the COP26 climate conference, and it\u2019s been a whirlwind couple of days so far. As I wrote in the Financial Times, one of my top priorities here at COP is making sure that the world prioritizes scaling clean technology innovation. If we\u2019re going to avoid the worst effects of a climate disaster, it\u2019s not enough to invent zero-carbon alternatives\u2014we need to make sure they\u2019re affordable and accessible enough for people all over the world to use them. I\u2019m also spending a lot of time this week talking about climate adaptation. It's deeply unfair that the world\u2019s poorest people, who contribute the least to climate change, will suffer from its effects the most. Rich and middle-income countries are causing the vast majority of climate change, and we need to be the ones to step up and invest more in adaptation. Earlier today, I had the opportunity to address COP26 delegates at the World Leaders Summit. The session was all about accelerating clean energy innovation and deployment, and I was honored to share the stage with leaders from across government, the private sector, and philanthropy. You can read the full text of my remarks below.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Stop Words Remover",
            "url": "https://linguist.p.rapidapi.com/v1/remove-stop-words",
            "description": "Remove stop words from text.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "This is the text used to test stop words."
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/remove-stop-words\"\nquerystring = {\"text\": \"This is the text used to test stop words.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/remove-stop-words\"\nquerystring = {\"text\": \"This is the text used to test stop words.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "results": {
                        "type": "object",
                        "properties": {
                            "string": {
                                "type": "string"
                            },
                            "tokenized": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Bad Words Remover",
            "url": "https://linguist.p.rapidapi.com/v1/remove-bad-words",
            "description": "Detect profane words and replace it with *s.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "This is the text used to test bad ass"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/remove-bad-words\"\nquerystring = {\"text\": \"This is the text used to test bad ass\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/remove-bad-words\"\nquerystring = {\"text\": \"This is the text used to test bad ass\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "results": {
                        "type": "object",
                        "properties": {
                            "string": {
                                "type": "string"
                            },
                            "tokenized": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Counter",
            "url": "https://linguist.p.rapidapi.com/v1/counter",
            "description": "Count how many words and characters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "This is the text used to test the endpoint"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/counter\"\nquerystring = {\"text\": \"This is the text used to test the endpoint\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://linguist.p.rapidapi.com/v1/counter\"\nquerystring = {\"text\": \"This is the text used to test the endpoint\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linguist.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        }
    ]
}