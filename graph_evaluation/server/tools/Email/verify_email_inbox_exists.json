{
    "product_id": "api_a82d3313-fed2-415a-acb6-804ef710ad0d",
    "tool_description": "Send us an e-mail address and we'll check if it actually exists or not. This API endpoint is extremely useful to maintain a clean database of email leads, check emails addresses before sending out emails to ensure deliverability and avoiding getting penalised for high bounce rates.",
    "home_url": "https://rapidapi.com/toastyapi-toastyapi-default/api/verify-email-inbox-exists/",
    "name": "Verify Email Inbox Exists",
    "title": "Verify Email Inbox Exists",
    "pricing": "FREEMIUM",
    "tool_name": "Verify Email Inbox Exists",
    "score": null,
    "host": "verify-email-inbox-exists.p.rapidapi.com",
    "api_list": [
        {
            "name": "https://64p479u4t5.execute-api.us-east-1.amazonaws.com/email/verify",
            "url": "https://verify-email-inbox-exists.p.rapidapi.com/email/verify",
            "description": "**Try our examples below, and click \"More Details\" or go to the \"About\" section to read the full endpoint docs.**\n\nThe only endpoint you need to verify if an email inbox exists and is reachable. It returns plenty of information to determine whether or not an email inbox really exists.\n\nWe run multiple checks to determine if an email account exists, and in most cases we can verify with 100% accuracy if an email inbox exists or not. Sometimes, however, it's hard to accurately tell if an email account does indeed exist as not all email servers will tell you.\n\nIn any case, this endpoint will return plenty of information for you to decide if we cannot tell with 100% certainty if an email exists.\n\nAssuming your request is correctly formatted, this will be the response schema:\n\n```\n{\n    \"email_is_valid\": boolean,\n    \"email_format_is_valid\": boolean,\n    \"email_deliverability_description\": string,\n    \"email_will_bounce\": boolean,\n    \"email_recipient_is_reachable\": boolean,\n    \"email_deliverability_is_guaranteed\": boolean\n}\n```\n\n**Worst case scenario:** we cannot accurately tell if an email account exists, or not.\nThis is pretty much the only scenario where you will need to decide for yourself if it's worth trying to send the email (bear in mind many email services will penalise you if you send too many emails to accounts that will bounce)\n\nYou can identify this case by looking at the `email_deliverability_is_guaranteed` field. In this case, it will be false (letting you know we cannot tell with 100% certainty that the email account exists).\n\n**Best case scenarios:** we can accurately tell if an email account exists, or not.\nBy far, the majority of cases will land under this scenario. You will see that the `email_deliverability_is_guaranteed` is equal to true.\n\nIn this case, it's enough to simply look at the `email_is_valid` field. \n\n- If it's equal to **true**, the email exists and deliverability is guaranteed.\n- If it's **false**, the email is guaranteed to not exists and you should refrain from attempting to send emails to that inbox.\n\nThe rest of the fields provide useful information for you to customise your business logic according to finer details:\n\n`email_format_is_valid`: simple email format check to make sure you supplied a well formatted email address. If false, the following fields won't appear in the response: `email_will_bounce`, `email_recipient_is_reachable`, `email_deliverability_is_guaranteed`\n\n`email_is_valid`: tells you if the email address you sent is valid or not (i.e. if the inbox exists, regardless of if deliverability is guaranteed or not)\n\n`email_deliverability_description`: gives you more detail as to the result of our checks. This is an enum an can be one of the following options:\n\n- `EMAIL_FORMAT_IS_INVALID` - Email format is invalid, hence is a bad email address\n- `NO_EMAIL_SERVER_ON_DOMAIN` - The domain for the supplied email does not have any email server on it, hence the email address is bad\n- `CONNECTION_TO_EMAIL_SERVER_FAILED` - The domain has at least 1 email server address associated with it, but we could not connect to it. We recommend trying again later in this case.\n- `EMAIL_ACCOUNT_DOES_NOT_EXIST` - The supplied email address does not exist. Refrain from sending emails to it.\n- `EMAIL_IS_VALID_AND_ACCOUNT_EXISTS` - The supplied email address exists and is reachable.\n- `EMAIL_SERVER_DOESNT_TELL_IF_ACCOUNT_EXISTS` - The mail server will accept your email, but we cannot guarantee it's sent to a real recipient\n\n`email_will_bounce`: tells you whether your email will bounce if you send it to this email address\n\n`email_recipient_is_reachable`: tells you whether the email server will accept your email\n\n`email_deliverability_is_guaranteed`: tells you whether there is a real recipient behind the email address that will ultimately receive the email",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://verify-email-inbox-exists.p.rapidapi.com/email/verify\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"verify-email-inbox-exists.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://verify-email-inbox-exists.p.rapidapi.com/email/verify\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"verify-email-inbox-exists.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        }
    ]
}