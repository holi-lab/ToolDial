{
    "product_id": "5b86d1d3e4b085e3f407eef0",
    "tool_description": "Email sandbox testing API.",
    "home_url": "https://rapidapi.com/jackmahoney/api/mailslurp-email-testing/",
    "name": "MailSlurp Email Testing",
    "title": "MailSlurp Email Testing",
    "pricing": "FREE",
    "tool_name": "MailSlurp Email Testing",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 412,
        "avgSuccessRate": 5,
        "popularityScore": 0.2,
        "__typename": "Score"
    },
    "host": "jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com",
    "api_list": [
        {
            "name": "getAttachmentMetaData",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/attachments/{attachmentId}/metadata",
            "description": "Returns the metadata such as name and content-type for a given attachment and email.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "attachmentId",
                    "type": "STRING",
                    "description": "ID of attachment",
                    "default": ""
                },
                {
                    "name": "emailId",
                    "type": "STRING",
                    "description": "ID of email",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/attachments/{attachmentId}/metadata\"\nquerystring = {\"attachmentId\": \"\", \"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/attachments/{attachmentId}/metadata\"\nquerystring = {\"attachmentId\": \"\", \"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{emailId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-f1392e2f-591a-4889-9d3a-97511920f60c",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getMissedEmail",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/missed-emails/{missedEmailId}",
            "description": "List emails that were missed due to plan limits.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "missedEmailId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/missed-emails/{missedEmailId}\"\nquerystring = {\"missedEmailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/missed-emails/{missedEmailId}\"\nquerystring = {\"missedEmailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{missedEmailId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-9cad9ef3-cc75-4e08-8025-1c0110103883",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getEmailAttachments",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/attachments",
            "description": "Returns an array of attachment metadata such as name and content-type for a given email if present.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "emailId",
                    "type": "STRING",
                    "description": "ID of email",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/attachments\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/attachments\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{emailId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-025205e9-6226-42a9-b500-92030ffa3ff2",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "downloadAttachment",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/attachments/{attachmentId}",
            "description": "Returns the specified attachment for a given email as a stream / array of bytes. You can find attachment ids in email responses endpoint responses. The response type is application/octet-stream.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "emailId",
                    "type": "STRING",
                    "description": "ID of email",
                    "default": ""
                },
                {
                    "name": "attachmentId",
                    "type": "STRING",
                    "description": "ID of attachment",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "apiKey",
                    "type": "STRING",
                    "description": "Can pass apiKey in url for this request if you wish to download the file in a browser. Content type will be set to original content type of the attachment file. This is so that browsers can download the file correctly.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/attachments/{attachmentId}\"\nquerystring = {\"emailId\": \"\", \"attachmentId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/attachments/{attachmentId}\"\nquerystring = {\"emailId\": \"\", \"attachmentId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{emailId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-6c469c8f-3cf7-41bc-a12a-20b586d1d8e3",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            }
        },
        {
            "name": "downloadAttachmentBase64",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/attachments/{attachmentId}/base64",
            "description": "Returns the specified attachment for a given email as a base 64 encoded string. The response type is application/json. This method is similar to the `downloadAttachment` method but allows some clients to get around issues with binary responses.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "attachmentId",
                    "type": "STRING",
                    "description": "ID of attachment",
                    "default": ""
                },
                {
                    "name": "emailId",
                    "type": "STRING",
                    "description": "ID of email",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/attachments/{attachmentId}/base64\"\nquerystring = {\"attachmentId\": \"\", \"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/attachments/{attachmentId}/base64\"\nquerystring = {\"attachmentId\": \"\", \"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{emailId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-85930f36-525c-4493-99e5-9ad1019b74fc",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getEmails",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/emails",
            "description": "List emails that an inbox has received. Only emails that are sent to the inbox's email address will appear in the inbox. It may take several seconds for any email you send to an inbox's email address to appear in the inbox. To make this endpoint wait for a minimum number of emails use the `minCount` parameter. The server will retry the inbox database until the `minCount` is satisfied or the `retryTimeout` is reached",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "Id of inbox that emails belongs to",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "retryTimeout",
                    "type": "NUMBER",
                    "description": "Maximum milliseconds to spend retrying inbox database until minCount emails are returned",
                    "default": ""
                },
                {
                    "name": "unreadOnly",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": true
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Sort the results by received date and direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Exclude emails received before this ISO 8601 date time",
                    "default": ""
                },
                {
                    "name": "minCount",
                    "type": "NUMBER",
                    "description": "Minimum acceptable email count. Will cause request to hang (and retry) until minCount is satisfied or retryTimeout is reached.",
                    "default": ""
                },
                {
                    "name": "delayTimeout",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Exclude emails received after this ISO 8601 date time",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Alias for limit. Assessed first before assessing any passed limit.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set, ordered by received date time sort direction. Maximum 100. For more listing options see the email controller",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/emails\"\nquerystring = {\"retryTimeout\": \"\", \"unreadOnly\": true, \"sort\": \"ASC\", \"since\": \"\", \"minCount\": \"\", \"inboxId\": \"\", \"delayTimeout\": \"\", \"before\": \"\", \"size\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/emails\"\nquerystring = {\"retryTimeout\": \"\", \"unreadOnly\": true, \"sort\": \"ASC\", \"since\": \"\", \"minCount\": \"\", \"inboxId\": \"\", \"delayTimeout\": \"\", \"before\": \"\", \"size\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getRawEmailJson",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/raw/json",
            "description": "Returns a raw, unparsed, and unprocessed email wrapped in a JSON response object for easier handling when compared with the getRawEmail text/plain response",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "emailId",
                    "type": "STRING",
                    "description": "ID of email",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/raw/json\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/raw/json\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{emailId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-c560dbe2-6bc6-4f01-8e80-6384372ff25d",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "downloadBody",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/body",
            "description": "Returns the specified email body for a given email as a string",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "emailId",
                    "type": "STRING",
                    "description": "ID of email",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/body\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/body\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{emailId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-8a36cf4e-317f-4b0d-bddb-d82cd4cea199",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {
                "type": "string"
            }
        },
        {
            "name": "getEmailHTMLQuery",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/htmlQuery",
            "description": "Parse an email body and return the content as an array of text. HTML parsing uses JSoup which supports JQuery/CSS style selectors",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "htmlSelector",
                    "type": "STRING",
                    "description": "HTML selector to search for. Uses JQuery/JSoup/CSS style selector like '.my-div' to match content. See https://jsoup.org/apidocs/org/jsoup/select/Selector.html for more information.",
                    "default": ""
                },
                {
                    "name": "emailId",
                    "type": "STRING",
                    "description": "ID of email to perform HTML query on",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/htmlQuery\"\nquerystring = {\"htmlSelector\": \"\", \"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/htmlQuery\"\nquerystring = {\"htmlSelector\": \"\", \"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{emailId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-4e2a82f0-4a04-479a-a603-ac1d8befe104",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "waitForEmailCount",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/waitForEmailCount",
            "description": "If inbox contains count or more emails at time of request then return count worth of emails. If not wait until the count is reached and return those or return an error if timeout is exceeded.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "Id of the inbox we are fetching emails from",
                    "default": ""
                },
                {
                    "name": "count",
                    "type": "NUMBER",
                    "description": "Number of emails to wait for. Must be greater that 1",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "delay",
                    "type": "NUMBER",
                    "description": "Max milliseconds delay between calls",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Sort direction",
                    "default": "ASC"
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter for emails that were received after the given timestamp",
                    "default": ""
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter for emails that were received before the given timestamp",
                    "default": ""
                },
                {
                    "name": "timeout",
                    "type": "NUMBER",
                    "description": "Max milliseconds to wait",
                    "default": ""
                },
                {
                    "name": "unreadOnly",
                    "type": "BOOLEAN",
                    "description": "Optional filter for unread only",
                    "default": false
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/waitForEmailCount\"\nquerystring = {\"delay\": \"\", \"sort\": \"ASC\", \"since\": \"\", \"inboxId\": \"\", \"before\": \"\", \"timeout\": \"\", \"count\": \"\", \"unreadOnly\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/waitForEmailCount\"\nquerystring = {\"delay\": \"\", \"sort\": \"ASC\", \"since\": \"\", \"inboxId\": \"\", \"before\": \"\", \"timeout\": \"\", \"count\": \"\", \"unreadOnly\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getLatestEmail",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/latest",
            "description": "Get the newest email in all inboxes or in a passed set of inbox IDs",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "inboxIds",
                    "type": "ARRAY",
                    "description": "Optional set of inboxes to filter by. Only get the latest email from these inbox IDs. If not provided will search across all inboxes",
                    "default": "[]"
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/latest\"\nquerystring = {\"inboxIds\": \"[]\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/latest\"\nquerystring = {\"inboxIds\": \"[]\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `[]`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-11fa37cd-4a56-4146-b070-7abd2772652d",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getEmailTextLines",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/textLines",
            "description": "Parse an email body and return the content as an array of strings. HTML parsing uses JSoup and UNIX line separators.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "emailId",
                    "type": "STRING",
                    "description": "ID of email to fetch text for",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "decodeHtmlEntities",
                    "type": "BOOLEAN",
                    "description": "Decode HTML entities",
                    "default": true
                },
                {
                    "name": "lineSeparator",
                    "type": "STRING",
                    "description": "Line separator character",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/textLines\"\nquerystring = {\"emailId\": \"\", \"decodeHtmlEntities\": true, \"lineSeparator\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/textLines\"\nquerystring = {\"emailId\": \"\", \"decodeHtmlEntities\": true, \"lineSeparator\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getEmailPreviewURLs",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/urls",
            "description": "Get a list of URLs for email content as text/html or raw SMTP message for viewing the message in a browser.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "emailId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/urls\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/urls\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{emailId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-168c5fc4-ffef-4e0c-9eb0-d1e36d2380dd",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getUnreadEmailCount",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/unreadCount",
            "description": "Get number of emails unread. Unread means has not been viewed in dashboard or returned in an email API response",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/unreadCount\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/unreadCount\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-897ac9f1-32e3-42f6-b1df-a99eafce96cc",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getEmailLinks",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/links",
            "description": "HTML parsing uses JSoup and UNIX line separators. Searches content for href attributes",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "emailId",
                    "type": "STRING",
                    "description": "ID of email to fetch text for",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/links\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/links\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{emailId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-fe08fbf5-1d8b-47f5-9579-15daa4072806",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getEmailHTML",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/html",
            "description": "Retrieve email content as HTML response for viewing in browsers. Decodes quoted-printable entities and converts charset to UTF-8. Pass your API KEY as a request parameter when viewing in a browser: `?apiKey=xxx`. Returns content-type `text/html;charset=utf-8` so you must call expecting that content response not JSON. For JSON response see the `getEmailHTMLJson` method.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "emailId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "decode",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": false
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/html\"\nquerystring = {\"decode\": false, \"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/html\"\nquerystring = {\"decode\": false, \"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getExpirationDefaults",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/expired/defaults",
            "description": "Return default times used for inbox expiration",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/expired/defaults\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/expired/defaults\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-0c4867e9-46c3-4cfb-b57e-c9c4779055fb",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getAllMissedEmails",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/missed-emails",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "searchFilter",
                    "type": "STRING",
                    "description": "Optional search filter",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in list pagination",
                    "default": 0
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in list pagination",
                    "default": 20
                },
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "Optional inbox ID filter",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/missed-emails\"\nquerystring = {\"searchFilter\": \"\", \"page\": 0, \"since\": \"\", \"sort\": \"ASC\", \"before\": \"\", \"size\": 20, \"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/missed-emails\"\nquerystring = {\"searchFilter\": \"\", \"page\": 0, \"since\": \"\", \"sort\": \"ASC\", \"before\": \"\", \"size\": 20, \"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-58e20daf-9291-4085-ae9b-48cb2719d0be",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "downloadBodyBytes",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/body-bytes",
            "description": "Returns the specified email body for a given email as a stream / array of bytes.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "emailId",
                    "type": "STRING",
                    "description": "ID of email",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/body-bytes\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/body-bytes\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{emailId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-86696e13-ee48-4db8-9430-4f97e0da2bf5",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            }
        },
        {
            "name": "waitForNthEmail",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/waitForNthEmail",
            "description": "If nth email is already present in inbox then return it. If not hold the connection open until timeout expires or the nth email is received and returned.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter for emails that were received before the given timestamp",
                    "default": ""
                },
                {
                    "name": "timeout",
                    "type": "NUMBER",
                    "description": "Max milliseconds to wait for the nth email if not already present",
                    "default": ""
                },
                {
                    "name": "index",
                    "type": "NUMBER",
                    "description": "Zero based index of the email to wait for. If an inbox has 1 email already and you want to wait for the 2nd email pass index=1",
                    "default": 0
                },
                {
                    "name": "unreadOnly",
                    "type": "BOOLEAN",
                    "description": "Optional filter for unread only",
                    "default": false
                },
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "Id of the inbox you are fetching emails from",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Sort direction",
                    "default": "ASC"
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter for emails that were received after the given timestamp",
                    "default": ""
                },
                {
                    "name": "delay",
                    "type": "NUMBER",
                    "description": "Max milliseconds delay between calls",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/waitForNthEmail\"\nquerystring = {\"before\": \"\", \"timeout\": \"\", \"index\": 0, \"unreadOnly\": false, \"inboxId\": \"\", \"sort\": \"ASC\", \"since\": \"\", \"delay\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/waitForNthEmail\"\nquerystring = {\"before\": \"\", \"timeout\": \"\", \"index\": 0, \"unreadOnly\": false, \"inboxId\": \"\", \"sort\": \"ASC\", \"since\": \"\", \"delay\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getTemplate",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/templates/{templateId}",
            "description": "Get email template",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "templateId",
                    "type": "STRING",
                    "description": "Template ID",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/templates/{templateId}\"\nquerystring = {\"templateId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/templates/{templateId}\"\nquerystring = {\"templateId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{templateId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-64943297-d788-47fe-9161-130a39560f06",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getRawSentEmailJson",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/{emailId}/raw/json",
            "description": "Returns a raw, unparsed, and unprocessed sent email wrapped in a JSON response object for easier handling when compared with the getRawSentEmail text/plain response",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "emailId",
                    "type": "STRING",
                    "description": "ID of email",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/{emailId}/raw/json\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/{emailId}/raw/json\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{emailId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-c5f4e1c1-9e81-4640-b30b-459b56fe6ee8",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getInboxByEmailAddress",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/byEmailAddress",
            "description": "Get a inbox result by email address",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "emailAddress",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/byEmailAddress\"\nquerystring = {\"emailAddress\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/byEmailAddress\"\nquerystring = {\"emailAddress\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "getInboxByEmailAddress.emailAddress: must not be blank",
                "caseNumber": "CASE-NF-4664bfce-adc5-4281-aae4-c8fac90481f2",
                "errorClass": "ConstraintViolationException",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getSentDeliveryStatuses",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/delivery-status",
            "description": "Get all sent email delivery statuses",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in delivery status list pagination",
                    "default": 20
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in delivery status list pagination",
                    "default": 0
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/delivery-status\"\nquerystring = {\"before\": \"\", \"since\": \"\", \"sort\": \"ASC\", \"size\": 20, \"page\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/delivery-status\"\nquerystring = {\"before\": \"\", \"since\": \"\", \"sort\": \"ASC\", \"size\": 20, \"page\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-e0b89054-6bc5-4180-90ae-5dec63ddb23d",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getInboxRuleset",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/rulesets/{id}",
            "description": "Get inbox ruleset",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "ID of inbox ruleset",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/rulesets/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/rulesets/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{id}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-fe6b2ab6-f406-42b2-a847-f7dcc26ca183",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "waitForLatestEmail",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/waitForLatestEmail",
            "description": "Will return either the last received email or wait for an email to arrive and return that. If you need to wait for an email for a non-empty inbox set `unreadOnly=true` or see the other receive methods such as `waitForNthEmail` or `waitForEmailCount`.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "Id of the inbox we are fetching emails from",
                    "default": ""
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter for emails that were received after the given timestamp",
                    "default": ""
                },
                {
                    "name": "unreadOnly",
                    "type": "BOOLEAN",
                    "description": "Optional filter for unread only.",
                    "default": false
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter for emails that were before after the given timestamp",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Sort direction",
                    "default": "ASC"
                },
                {
                    "name": "delay",
                    "type": "NUMBER",
                    "description": "Max milliseconds delay between calls",
                    "default": ""
                },
                {
                    "name": "timeout",
                    "type": "NUMBER",
                    "description": "Max milliseconds to wait",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/waitForLatestEmail\"\nquerystring = {\"inboxId\": \"\", \"since\": \"\", \"unreadOnly\": false, \"before\": \"\", \"sort\": \"ASC\", \"delay\": \"\", \"timeout\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/waitForLatestEmail\"\nquerystring = {\"inboxId\": \"\", \"since\": \"\", \"unreadOnly\": false, \"before\": \"\", \"sort\": \"ASC\", \"delay\": \"\", \"timeout\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "doesInboxExist",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/exists",
            "description": "Check if inboxes exist by email address. Useful if you are sending emails to mailslurp addresses",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "emailAddress",
                    "type": "STRING",
                    "description": "Email address",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/exists\"\nquerystring = {\"emailAddress\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/exists\"\nquerystring = {\"emailAddress\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "exists": true
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getEmail",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}",
            "description": "Returns a email summary object with headers and content. To retrieve the raw unparsed email use the getRawEmail endpoints",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "emailId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "decode",
                    "type": "BOOLEAN",
                    "description": "Decode email body quoted-printable encoding to plain text. SMTP servers often encode text using quoted-printable format (for instance `=D7`). This can be a pain for testing",
                    "default": false
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}\"\nquerystring = {\"emailId\": \"\", \"decode\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}\"\nquerystring = {\"emailId\": \"\", \"decode\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getAllInboxes",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/paginated",
            "description": "List inboxes in paginated form. The results are available on the `content` property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative `getInboxes` method returns a full list of inboxes but is limited to 100 results.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in list pagination",
                    "default": 0
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Optional filter by created before given date time",
                    "default": ""
                },
                {
                    "name": "domainId",
                    "type": "STRING",
                    "description": "Optional domain ID filter",
                    "default": ""
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Optional filter by created after given date time",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in list pagination",
                    "default": 20
                },
                {
                    "name": "tag",
                    "type": "STRING",
                    "description": "Optionally filter by tags. Will return inboxes that include given tags",
                    "default": ""
                },
                {
                    "name": "favourite",
                    "type": "BOOLEAN",
                    "description": "Optionally filter results for favourites only",
                    "default": false
                },
                {
                    "name": "search",
                    "type": "STRING",
                    "description": "Optionally filter by search words partial matching ID, tags, name, and email address",
                    "default": ""
                },
                {
                    "name": "inboxType",
                    "type": "STRING",
                    "description": "Optional filter by inbox type",
                    "default": "HTTP_INBOX"
                },
                {
                    "name": "teamAccess",
                    "type": "BOOLEAN",
                    "description": "DEPRECATED. Optionally filter by team access.",
                    "default": true
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/paginated\"\nquerystring = {\"sort\": \"ASC\", \"page\": 0, \"before\": \"\", \"domainId\": \"\", \"since\": \"\", \"size\": 20, \"tag\": \"\", \"favourite\": false, \"search\": \"\", \"inboxType\": \"HTTP_INBOX\", \"teamAccess\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/paginated\"\nquerystring = {\"sort\": \"ASC\", \"page\": 0, \"before\": \"\", \"domainId\": \"\", \"since\": \"\", \"size\": 20, \"tag\": \"\", \"favourite\": false, \"search\": \"\", \"inboxType\": \"HTTP_INBOX\", \"teamAccess\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getExpiredInboxes",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/expired",
            "description": "Inboxes created with an expiration date will expire after the given date. An ExpiredInboxRecord is created that records the inboxes old ID and email address. You can still read emails in the inbox (using the inboxes old ID) but the email address associated with the inbox can no longer send or receive emails. Fetch expired inbox records to view the old inboxes properties",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in inbox sent email list pagination",
                    "default": 20
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in inbox sent email list pagination",
                    "default": 0
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/expired\"\nquerystring = {\"before\": \"\", \"size\": 20, \"sort\": \"ASC\", \"page\": 0, \"since\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/expired\"\nquerystring = {\"before\": \"\", \"size\": 20, \"sort\": \"ASC\", \"page\": 0, \"since\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-bdbc82d9-49f3-486c-ae7e-fefe8c5e58a8",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getContact",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/contacts/{contactId}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "contactId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/contacts/{contactId}\"\nquerystring = {\"contactId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/contacts/{contactId}\"\nquerystring = {\"contactId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{contactId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-07406821-528e-44d2-a213-f3fb9395e576",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getInboxEmailsPaginated",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/emails/paginated",
            "description": "Get a paginated list of emails in an inbox. Does not hold connections open.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "Id of inbox that emails belongs to",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Optional filter by received before given date time",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Optional filter by received after given date time",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in inbox emails list pagination",
                    "default": 0
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in inbox emails list pagination",
                    "default": 20
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/emails/paginated\"\nquerystring = {\"before\": \"\", \"sort\": \"ASC\", \"since\": \"\", \"inboxId\": \"\", \"page\": 0, \"size\": 20}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/emails/paginated\"\nquerystring = {\"before\": \"\", \"sort\": \"ASC\", \"since\": \"\", \"inboxId\": \"\", \"page\": 0, \"size\": 20}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{inboxId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-791417ff-c2d8-4a31-a850-770cacb2dc84",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getAllContacts",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/contacts/paginated",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in list pagination",
                    "default": 20
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in list pagination",
                    "default": 0
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/contacts/paginated\"\nquerystring = {\"since\": \"\", \"size\": 20, \"before\": \"\", \"sort\": \"ASC\", \"page\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/contacts/paginated\"\nquerystring = {\"since\": \"\", \"size\": 20, \"before\": \"\", \"sort\": \"ASC\", \"page\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-a927a2f1-616b-4e5b-af6e-16fb49a48e05",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getAttachments",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/attachments",
            "description": "Get all attachments in paginated response. Each entity contains meta data for the attachment such as `name` and `content-type`. Use the `attachmentId` and the download endpoints to get the file contents.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size for list pagination",
                    "default": 20
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index for list pagination",
                    "default": 0
                },
                {
                    "name": "fileNameFilter",
                    "type": "STRING",
                    "description": "Optional file name and content type search filter",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/attachments\"\nquerystring = {\"since\": \"\", \"before\": \"\", \"size\": 20, \"sort\": \"ASC\", \"page\": 0, \"fileNameFilter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/attachments\"\nquerystring = {\"since\": \"\", \"before\": \"\", \"size\": 20, \"sort\": \"ASC\", \"page\": 0, \"fileNameFilter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-8a252721-9388-4f14-80db-0d6aad3c4049",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getAllTrackingPixels",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/tracking/pixels",
            "description": "List tracking pixels in paginated form",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "searchFilter",
                    "type": "STRING",
                    "description": "Optional search filter",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in list pagination",
                    "default": 20
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in list pagination",
                    "default": 0
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/tracking/pixels\"\nquerystring = {\"since\": \"\", \"before\": \"\", \"searchFilter\": \"\", \"size\": 20, \"sort\": \"ASC\", \"page\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/tracking/pixels\"\nquerystring = {\"since\": \"\", \"before\": \"\", \"searchFilter\": \"\", \"size\": 20, \"sort\": \"ASC\", \"page\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-f06a6003-1e76-460f-b00a-d541e0470768",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getAliasThreads",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/aliases/{aliasId}/threads",
            "description": "Returns threads created for an email alias in paginated form",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "aliasId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in thread list pagination",
                    "default": 0
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in thread list pagination",
                    "default": 20
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Optional filter by sent before given date time",
                    "default": ""
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Optional filter by sent after given date time",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/aliases/{aliasId}/threads\"\nquerystring = {\"page\": 0, \"size\": 20, \"before\": \"\", \"since\": \"\", \"sort\": \"ASC\", \"aliasId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/aliases/{aliasId}/threads\"\nquerystring = {\"page\": 0, \"size\": 20, \"before\": \"\", \"since\": \"\", \"sort\": \"ASC\", \"aliasId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{aliasId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-cb9f3d9f-84ae-445c-bcde-44ee49a47476",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getAliasEmails",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/aliases/{aliasId}/emails",
            "description": "Get paginated emails for an alias by ID",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "aliasId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Optional filter by sent after given date time",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size alias email list pagination",
                    "default": 20
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Optional filter by sent before given date time",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index alias email list pagination",
                    "default": 0
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/aliases/{aliasId}/emails\"\nquerystring = {\"sort\": \"ASC\", \"since\": \"\", \"aliasId\": \"\", \"size\": 20, \"before\": \"\", \"page\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/aliases/{aliasId}/emails\"\nquerystring = {\"sort\": \"ASC\", \"since\": \"\", \"aliasId\": \"\", \"size\": 20, \"before\": \"\", \"page\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{aliasId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-2703ff7b-c03d-4e14-bfbd-769c83dd2f91",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getLatestEmailInInbox_1",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/latestIn",
            "description": "Get the newest email in all inboxes or in a passed set of inbox IDs",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "ID of the inbox you want to get the latest email from",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/latestIn\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/latestIn\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Required request parameter 'inboxId' for method parameter type UUID is present but converted to null",
                "caseNumber": "CASE-NF-ca1a95ae-5877-4d2f-a0e2-cd3a929251e8",
                "errorClass": "MissingServletRequestParameterException",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getTemplatePreviewJson",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/templates/{templateId}/preview/json",
            "description": "Get email template preview with passed template variables in JSON format. Pass template variables as query params.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "templateId",
                    "type": "STRING",
                    "description": "Template ID",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/templates/{templateId}/preview/json\"\nquerystring = {\"templateId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/templates/{templateId}/preview/json\"\nquerystring = {\"templateId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{templateId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-51bc99d4-dec6-447b-85c4-3f222ffa08bb",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getExpiredInboxRecord",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/expired/{expiredId}",
            "description": "Inboxes created with an expiration date will expire after the given date and be moved to an ExpiredInbox entity. You can still read emails in the inbox but it can no longer send or receive emails. Fetch the expired inboxes to view the old inboxes properties",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "expiredId",
                    "type": "STRING",
                    "description": "ID of the ExpiredInboxRecord you want to retrieve. This is different from the ID of the inbox you are interested in. See other methods for getting ExpiredInboxRecord for an inbox inboxId",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/expired/{expiredId}\"\nquerystring = {\"expiredId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/expired/{expiredId}\"\nquerystring = {\"expiredId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{expiredId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-af4cf2bf-4e31-41e3-bcad-58cbf1859b77",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getTemplatePreviewHtml",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/templates/{templateId}/preview/html",
            "description": "Get email template preview with passed template variables in HTML format for browsers. Pass template variables as query params.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "templateId",
                    "type": "STRING",
                    "description": "Template ID",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/templates/{templateId}/preview/html\"\nquerystring = {\"templateId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/templates/{templateId}/preview/html\"\nquerystring = {\"templateId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{templateId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-44693a98-86f6-4da9-9970-3ce6e10024f7",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "listInboxRulesets",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/rulesets",
            "description": "List all rulesets attached to an inbox",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Optional filter by created before given date time",
                    "default": ""
                },
                {
                    "name": "searchFilter",
                    "type": "STRING",
                    "description": "Optional search filter",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in inbox ruleset list pagination",
                    "default": 0
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Optional filter by created after given date time",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in inbox ruleset list pagination",
                    "default": 20
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/rulesets\"\nquerystring = {\"before\": \"\", \"searchFilter\": \"\", \"page\": 0, \"sort\": \"ASC\", \"since\": \"\", \"inboxId\": \"\", \"size\": 20}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/rulesets\"\nquerystring = {\"before\": \"\", \"searchFilter\": \"\", \"page\": 0, \"sort\": \"ASC\", \"since\": \"\", \"inboxId\": \"\", \"size\": 20}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{inboxId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-0f3599a9-b624-4c1a-947c-3c880c7f4504",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getContactVCard",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/contacts/{contactId}/download",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "contactId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/contacts/{contactId}/download\"\nquerystring = {\"contactId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/contacts/{contactId}/download\"\nquerystring = {\"contactId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{contactId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-049e7443-eed7-43e3-b6b3-da6ab405d775",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getBouncedEmails",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/bounce/emails",
            "description": "Bounced emails are email you have sent that were rejected by a recipient",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index",
                    "default": 0
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size ",
                    "default": 20
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/bounce/emails\"\nquerystring = {\"page\": 0, \"size\": 20, \"since\": \"\", \"sort\": \"ASC\", \"before\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/bounce/emails\"\nquerystring = {\"page\": 0, \"size\": 20, \"since\": \"\", \"sort\": \"ASC\", \"before\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-57aca7ff-64c1-4f56-ab6c-26140dacae8a",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getExpiredInboxByInboxId",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/expired/inbox/{inboxId}",
            "description": "Use the inboxId to return an ExpiredInboxRecord if an inbox has expired. Inboxes expire and are disabled if an expiration date is set or plan requires. Returns 404 if no expired inbox is found for the inboxId",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "ID of inbox you want to retrieve (not the inbox ID)",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/expired/inbox/{inboxId}\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/expired/inbox/{inboxId}\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{inboxId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-8e0e51c9-059f-44e8-ae76-8f53af20a7bc",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getGroupWithContactsPaginated",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/groups/{groupId}/contacts-paginated",
            "description": "Get group and paginated contacts belonging to it",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in group contact pagination",
                    "default": 0
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in group contact pagination",
                    "default": 20
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/groups/{groupId}/contacts-paginated\"\nquerystring = {\"sort\": \"ASC\", \"since\": \"\", \"page\": 0, \"before\": \"\", \"size\": 20, \"groupId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/groups/{groupId}/contacts-paginated\"\nquerystring = {\"sort\": \"ASC\", \"since\": \"\", \"page\": 0, \"before\": \"\", \"size\": 20, \"groupId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{groupId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-50dd8c12-c2f1-4b56-b209-f10a066f1b3b",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getSmtpUsername",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/user/smtp/username",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/user/smtp/username\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/user/smtp/username\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getPhoneNumber",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/phone/numbers/{phoneNumberId}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "phoneNumberId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/phone/numbers/{phoneNumberId}\"\nquerystring = {\"phoneNumberId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/phone/numbers/{phoneNumberId}\"\nquerystring = {\"phoneNumberId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{phoneNumberId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-ce71ab53-a85b-4ffb-9acc-84a0a3603c26",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getAttachment",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/attachments/{attachmentId}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "attachmentId",
                    "type": "STRING",
                    "description": "ID of attachment",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/attachments/{attachmentId}\"\nquerystring = {\"attachmentId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/attachments/{attachmentId}\"\nquerystring = {\"attachmentId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-9ec3da69-394c-44eb-a34a-0d086cb71c38",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getGroups",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/groups",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/groups\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/groups\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-4de97519-e048-4b15-bfe3-4d81e2fa63f6",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getAliases",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/aliases",
            "description": "Get all email aliases in paginated form",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in alias list pagination",
                    "default": 20
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in alias list pagination",
                    "default": 0
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/aliases\"\nquerystring = {\"size\": 20, \"since\": \"\", \"sort\": \"ASC\", \"before\": \"\", \"page\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/aliases\"\nquerystring = {\"size\": 20, \"since\": \"\", \"sort\": \"ASC\", \"before\": \"\", \"page\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-1f5966a7-e426-41d8-be5e-aa7b6db38906",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getContacts",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/contacts",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/contacts\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/contacts\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-9072b580-de01-472e-8186-f6d1c5e27905",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getAttachmentInfo",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/attachments/{attachmentId}/metadata",
            "description": "Returns the metadata for an attachment. It is saved separately to the content of the attachment. Contains properties `name` and `content-type` and `content-length` in bytes for a given attachment.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "attachmentId",
                    "type": "STRING",
                    "description": "ID of attachment",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/attachments/{attachmentId}/metadata\"\nquerystring = {\"attachmentId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/attachments/{attachmentId}/metadata\"\nquerystring = {\"attachmentId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-163df4fb-092f-4449-947c-dea79657c930",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "downloadAttachmentAsBase64Encoded",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/attachments/{attachmentId}/base64",
            "description": "Returns the specified attachment for a given email as a base 64 encoded string. The response type is application/json. This method is similar to the `downloadAttachment` method but allows some clients to get around issues with binary responses.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "attachmentId",
                    "type": "STRING",
                    "description": "ID of attachment",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/attachments/{attachmentId}/base64\"\nquerystring = {\"attachmentId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/attachments/{attachmentId}/base64\"\nquerystring = {\"attachmentId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-7ac56b16-95f1-467f-bbea-330d481ecebf",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getTestWebhookPayloadNewAttachment",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/test/new-attachment-payload",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/test/new-attachment-payload\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/test/new-attachment-payload\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "messageId": "test-message-id",
                "webhookId": "6d5843af-ba53-4e87-8cbb-371f84a68d86",
                "webhookName": "webhook-name",
                "eventName": "NEW_ATTACHMENT",
                "attachmentId": "attachment-id",
                "name": "attachment-name",
                "contentType": "text/plain",
                "contentLength": 123
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getGroup",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/groups/{groupId}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/groups/{groupId}\"\nquerystring = {\"groupId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/groups/{groupId}\"\nquerystring = {\"groupId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{groupId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-7970359e-577d-4c7e-80ea-b0d3646af166",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getDomain",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/domains/{id}",
            "description": "Returns domain verification status and tokens for a given domain",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/domains/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/domains/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{id}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-f5190ec3-6e97-44a4-9d0d-9880cef0b2b5",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getAllSentTrackingPixels",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/tracking-pixels",
            "description": "Get all sent email tracking pixels in paginated form",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in sent email tracking pixel list pagination",
                    "default": 20
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in sent email tracking pixel list pagination",
                    "default": 0
                },
                {
                    "name": "searchFilter",
                    "type": "STRING",
                    "description": "Optional search filter",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/tracking-pixels\"\nquerystring = {\"before\": \"\", \"size\": 20, \"since\": \"\", \"sort\": \"ASC\", \"page\": 0, \"searchFilter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/tracking-pixels\"\nquerystring = {\"before\": \"\", \"size\": 20, \"since\": \"\", \"sort\": \"ASC\", \"page\": 0, \"searchFilter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-c256aa1c-5f36-41d7-8ea4-cbb7d792fb3c",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getAllGroups",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/groups/paginated",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in list pagination",
                    "default": 0
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in list pagination",
                    "default": 20
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/groups/paginated\"\nquerystring = {\"page\": 0, \"since\": \"\", \"size\": 20, \"before\": \"\", \"sort\": \"ASC\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/groups/paginated\"\nquerystring = {\"page\": 0, \"since\": \"\", \"size\": 20, \"before\": \"\", \"sort\": \"ASC\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-82cb0b23-f238-4538-9f1f-41dcbbf986c7",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getGroupWithContacts",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/groups/{groupId}/contacts",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/groups/{groupId}/contacts\"\nquerystring = {\"groupId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/groups/{groupId}/contacts\"\nquerystring = {\"groupId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{groupId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-efb643fe-4d41-40db-99f2-6fd29c4a06da",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getSentEmailTrackingPixels",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/{id}/tracking-pixels",
            "description": "Get all tracking pixels for a sent email in paginated form",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "searchFilter",
                    "type": "STRING",
                    "description": "Optional search filter",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in sent email tracking pixel list pagination",
                    "default": 0
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in sent email tracking pixel list pagination",
                    "default": 20
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/{id}/tracking-pixels\"\nquerystring = {\"before\": \"\", \"searchFilter\": \"\", \"page\": 0, \"sort\": \"ASC\", \"since\": \"\", \"id\": \"\", \"size\": 20}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/{id}/tracking-pixels\"\nquerystring = {\"before\": \"\", \"searchFilter\": \"\", \"page\": 0, \"sort\": \"ASC\", \"since\": \"\", \"id\": \"\", \"size\": 20}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{id}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-aebdaf03-04b9-42c0-b422-6b81370427ac",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "downloadAttachmentAsBytes",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/attachments/{attachmentId}/bytes",
            "description": "Returns the specified attachment for a given email as a stream / array of bytes. You can find attachment ids in email responses endpoint responses. The response type is application/octet-stream.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "attachmentId",
                    "type": "STRING",
                    "description": "ID of attachment",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/attachments/{attachmentId}/bytes\"\nquerystring = {\"attachmentId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/attachments/{attachmentId}/bytes\"\nquerystring = {\"attachmentId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-14b84198-d519-47ad-9c91-de24cbacdee7",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            }
        },
        {
            "name": "getSentEmails",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "Optional inboxId to filter sender of sent emails by",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in inbox sent email list pagination",
                    "default": 0
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in inbox sent email list pagination",
                    "default": 20
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                },
                {
                    "name": "searchFilter",
                    "type": "STRING",
                    "description": "Optional search filter",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent\"\nquerystring = {\"inboxId\": \"\", \"page\": 0, \"before\": \"\", \"size\": 20, \"since\": \"\", \"searchFilter\": \"\", \"sort\": \"ASC\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent\"\nquerystring = {\"inboxId\": \"\", \"page\": 0, \"before\": \"\", \"size\": 20, \"since\": \"\", \"searchFilter\": \"\", \"sort\": \"ASC\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-3ac58445-5c7b-4dde-964d-6046dece6ed9",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getSentDeliveryStatus",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/delivery-status/{deliveryId}",
            "description": "Get a sent email delivery status",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "deliveryId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/delivery-status/{deliveryId}\"\nquerystring = {\"deliveryId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/delivery-status/{deliveryId}\"\nquerystring = {\"deliveryId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{deliveryId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-e649ba07-f32c-40a4-bd34-1b1803d794eb",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getDomains",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/domains",
            "description": "List all custom domains you have created",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/domains\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/domains\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-46afe6ad-9548-49ed-bc91-ab6d7deee1b7",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getSentEmailsWithQueueResults",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/queue-results",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in inbox sent email list pagination",
                    "default": 0
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in inbox sent email list pagination",
                    "default": 20
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/queue-results\"\nquerystring = {\"page\": 0, \"size\": 20, \"before\": \"\", \"since\": \"\", \"sort\": \"ASC\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/queue-results\"\nquerystring = {\"page\": 0, \"size\": 20, \"before\": \"\", \"since\": \"\", \"sort\": \"ASC\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-6e53a9a3-4d60-4020-a99f-ea8164f300a6",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getSentEmailPreviewURLs",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/{id}/urls",
            "description": "Get a list of URLs for sent email content as text/html or raw SMTP message for viewing the message in a browser.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/{id}/urls\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/{id}/urls\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{id}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-c9226fdc-bda8-4a84-b768-c7740508b023",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getSentEmailHTMLContent",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/{id}/html",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/{id}/html\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/{id}/html\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{id}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-de9bf626-26b4-462f-aa29-338e0bb1a522",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getSentOrganizationEmails",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/organization",
            "description": "Get all sent organization emails in paginated form",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "Optional inboxId to filter sender of sent emails by",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in sent email list pagination",
                    "default": 20
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                },
                {
                    "name": "searchFilter",
                    "type": "STRING",
                    "description": "Optional search filter",
                    "default": ""
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in sent email list pagination",
                    "default": 0
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/organization\"\nquerystring = {\"inboxId\": \"\", \"size\": 20, \"since\": \"\", \"searchFilter\": \"\", \"before\": \"\", \"page\": 0, \"sort\": \"ASC\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/organization\"\nquerystring = {\"inboxId\": \"\", \"size\": 20, \"since\": \"\", \"searchFilter\": \"\", \"before\": \"\", \"page\": 0, \"sort\": \"ASC\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-5337f8fa-2ccf-4e8e-8703-f86e4fe6445b",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getSentDeliveryStatusesBySentId",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/{sentId}/delivery-status",
            "description": "Get all sent email delivery statuses",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "sentId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in delivery status list pagination",
                    "default": 0
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in delivery status list pagination",
                    "default": 20
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/{sentId}/delivery-status\"\nquerystring = {\"before\": \"\", \"sort\": \"ASC\", \"sentId\": \"\", \"page\": 0, \"since\": \"\", \"size\": 20}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/{sentId}/delivery-status\"\nquerystring = {\"before\": \"\", \"sort\": \"ASC\", \"sentId\": \"\", \"page\": 0, \"since\": \"\", \"size\": 20}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{sentId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-8ec89c24-75e3-4ba2-b9d8-bc544b8bed74",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getRawSentEmailContents",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/{emailId}/raw",
            "description": "Returns a raw, unparsed, and unprocessed sent email. If your client has issues processing the response it is likely due to the response content-type which is text/plain. If you need a JSON response content-type use the getRawSentEmailJson endpoint",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "emailId",
                    "type": "STRING",
                    "description": "ID of email",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/{emailId}/raw\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/{emailId}/raw\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{emailId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-a10cb3db-195c-4b4a-bb40-f457808cc9e3",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {
                "type": "string"
            }
        },
        {
            "name": "getSentEmail",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/{id}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sent/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{id}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-38710609-5873-4877-9ddb-c2eb078d9526",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getInboxRulesets",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/rulesets",
            "description": "List all rulesets attached to an inbox",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "Optional inbox id to get rulesets from",
                    "default": ""
                },
                {
                    "name": "searchFilter",
                    "type": "STRING",
                    "description": "Optional search filter",
                    "default": ""
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in inbox ruleset list pagination",
                    "default": 0
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in inbox ruleset list pagination",
                    "default": 20
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/rulesets\"\nquerystring = {\"inboxId\": \"\", \"searchFilter\": \"\", \"before\": \"\", \"sort\": \"ASC\", \"page\": 0, \"size\": 20, \"since\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/rulesets\"\nquerystring = {\"inboxId\": \"\", \"searchFilter\": \"\", \"before\": \"\", \"sort\": \"ASC\", \"page\": 0, \"size\": 20, \"since\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-9c1cb2c3-b0a0-4855-9cb2-5e7e34582976",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getEmergencyAddresses",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/phone/emergency-addresses",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/phone/emergency-addresses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/phone/emergency-addresses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-4d56c527-5aaa-4211-b088-62e5506c75f8",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getOrganizationInboxes",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/organization",
            "description": "List organization inboxes in paginated form. These are inboxes created with `allowTeamAccess` flag enabled. Organization inboxes are `readOnly` for non-admin users. The results are available on the `content` property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in list pagination",
                    "default": 20
                },
                {
                    "name": "searchFilter",
                    "type": "STRING",
                    "description": "Optional search filter",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in list pagination",
                    "default": 0
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Optional filter by created before given date time",
                    "default": ""
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Optional filter by created after given date time",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/organization\"\nquerystring = {\"sort\": \"ASC\", \"size\": 20, \"searchFilter\": \"\", \"page\": 0, \"before\": \"\", \"since\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/organization\"\nquerystring = {\"sort\": \"ASC\", \"size\": 20, \"searchFilter\": \"\", \"page\": 0, \"before\": \"\", \"since\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-de7454b6-498d-4e5b-9657-e16210fee8c4",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getInboxCount",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/count",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/count\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/count\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-00e4920d-3af0-47ae-b050-2dd32b753f8c",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getInboxIds",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/ids",
            "description": "Get list of inbox IDs",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/ids\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/ids\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-18dda777-9dd6-404f-aebf-c68b4c5ff2f3",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getInboxSentEmails",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/sent",
            "description": "Returns an inbox's sent email receipts. Call individual sent email endpoints for more details. Note for privacy reasons the full body of sent emails is never stored. An MD5 hash hex is available for comparison instead.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Optional filter by sent before given date time",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in inbox sent email list pagination",
                    "default": 20
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Optional filter by sent after given date time",
                    "default": ""
                },
                {
                    "name": "searchFilter",
                    "type": "STRING",
                    "description": "Optional sent email search",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in inbox sent email list pagination",
                    "default": 0
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/sent\"\nquerystring = {\"sort\": \"ASC\", \"before\": \"\", \"size\": 20, \"inboxId\": \"\", \"since\": \"\", \"searchFilter\": \"\", \"page\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/sent\"\nquerystring = {\"sort\": \"ASC\", \"before\": \"\", \"size\": 20, \"inboxId\": \"\", \"since\": \"\", \"searchFilter\": \"\", \"page\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{inboxId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-41f7e09c-a0f7-429a-b52b-e5f49ff82e85",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getImapSmtpAccess",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/imap-smtp-access",
            "description": "Get IMAP and SMTP access usernames and passwords",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "Inbox ID",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/imap-smtp-access\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/imap-smtp-access\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-cbeae26a-f2fa-46cf-8445-eb554bff1e74",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getInboxTags",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/tags",
            "description": "Get all inbox tags",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/tags\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/tags\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-f965ef04-995c-48d7-8cec-f8aae10139b4",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getInboxEmailCount",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/emails/count",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "Id of inbox that emails belongs to",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/emails/count\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/emails/count\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{inboxId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-f3d05603-3d65-47b7-960b-511b69b9f46b",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getDeliveryStatusesByInboxId",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/delivery-status",
            "description": "Get all email delivery statuses for an inbox",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in delivery status list pagination",
                    "default": 0
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in delivery status list pagination",
                    "default": 20
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/delivery-status\"\nquerystring = {\"inboxId\": \"\", \"page\": 0, \"sort\": \"ASC\", \"before\": \"\", \"size\": 20, \"since\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/delivery-status\"\nquerystring = {\"inboxId\": \"\", \"page\": 0, \"sort\": \"ASC\", \"before\": \"\", \"size\": 20, \"since\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{inboxId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-b6347da5-f9e9-4721-a52e-f864fb4b572e",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getInbox",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}",
            "description": "Returns an inbox's properties, including its email address and ID.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{inboxId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-eee7a4c7-f272-4901-81cb-16f17c20f0ce",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getLatestEmailInInbox",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/getLatestEmail",
            "description": "Get the newest email in an inbox or wait for one to arrive",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "timeoutMillis",
                    "type": "NUMBER",
                    "description": "Timeout milliseconds to wait for latest email",
                    "default": ""
                },
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "ID of the inbox you want to get the latest email from",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/getLatestEmail\"\nquerystring = {\"timeoutMillis\": \"\", \"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/getLatestEmail\"\nquerystring = {\"timeoutMillis\": \"\", \"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Required request parameter 'inboxId' for method parameter type UUID is present but converted to null",
                "caseNumber": "CASE-NF-bd93e09d-854b-4bfe-a708-bd73ee24a9d9",
                "errorClass": "MissingServletRequestParameterException",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getInboxByName",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/byName",
            "description": "Get a inbox result by name",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/byName\"\nquerystring = {\"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/byName\"\nquerystring = {\"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "getInboxByName.name: must not be blank",
                "caseNumber": "CASE-NF-baa1459a-4559-476e-95d5-12058b31ee4f",
                "errorClass": "ConstraintViolationException",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getBouncedRecipient",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/bounce/recipients/{id}",
            "description": "Bounced emails are email you have sent that were rejected by a recipient",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "ID of the bounced recipient",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/bounce/recipients/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/bounce/recipients/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{id}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-b1a4cf56-9c36-4ced-a1fe-adf82b973d44",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getInboxes",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes",
            "description": "List the inboxes you have created. Note use of the more advanced `getAllEmails` is recommended and allows paginated access using a limit and sort parameter.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Optional filter by created before given date time",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional result size limit. Note an automatic limit of 100 results is applied. See the paginated `getAllEmails` for larger queries.",
                    "default": 100
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Optional filter by created after given date time",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes\"\nquerystring = {\"before\": \"\", \"size\": 100, \"since\": \"\", \"sort\": \"ASC\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes\"\nquerystring = {\"before\": \"\", \"size\": 100, \"since\": \"\", \"sort\": \"ASC\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-4337630d-34d1-478f-9efa-ddfe30f4a838",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getComplaints",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/bounce/complaints",
            "description": "SMTP complaints made against your account",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index ",
                    "default": 0
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size ",
                    "default": 20
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/bounce/complaints\"\nquerystring = {\"page\": 0, \"sort\": \"ASC\", \"since\": \"\", \"before\": \"\", \"size\": 20}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/bounce/complaints\"\nquerystring = {\"page\": 0, \"sort\": \"ASC\", \"since\": \"\", \"before\": \"\", \"size\": 20}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-83230d73-ca35-4df6-81da-7a7bfa27ef0c",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "listInboxTrackingPixels",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/tracking-pixels",
            "description": "List all tracking pixels sent from an inbox",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "searchFilter",
                    "type": "STRING",
                    "description": "Optional search filter",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in inbox tracking pixel list pagination",
                    "default": 0
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in inbox tracking pixel list pagination",
                    "default": 20
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Optional filter by created before given date time",
                    "default": ""
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Optional filter by created after given date time",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/tracking-pixels\"\nquerystring = {\"sort\": \"ASC\", \"searchFilter\": \"\", \"inboxId\": \"\", \"page\": 0, \"size\": 20, \"before\": \"\", \"since\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/tracking-pixels\"\nquerystring = {\"sort\": \"ASC\", \"searchFilter\": \"\", \"inboxId\": \"\", \"page\": 0, \"size\": 20, \"before\": \"\", \"since\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{inboxId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-d33f2721-2ce4-4c68-ae2c-175faf774098",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getWebhook",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/{webhookId}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "webhookId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/{webhookId}\"\nquerystring = {\"webhookId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/{webhookId}\"\nquerystring = {\"webhookId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{webhookId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-cc7a7e6a-2013-469f-bac0-0c040f4e10e8",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getTemplates",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/templates",
            "description": "Get all templates",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/templates\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/templates\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-8e4b4852-da7b-4664-93d2-a3233dd8f1bd",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getAllTemplates",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/templates/paginated",
            "description": "Get all templates in paginated format",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in list pagination",
                    "default": 0
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in list pagination",
                    "default": 20
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/templates/paginated\"\nquerystring = {\"since\": \"\", \"sort\": \"ASC\", \"page\": 0, \"size\": 20, \"before\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/templates/paginated\"\nquerystring = {\"since\": \"\", \"sort\": \"ASC\", \"page\": 0, \"size\": 20, \"before\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-126b10d1-cb37-40d3-9530-64ee59c076e1",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getRawEmailContents",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/raw",
            "description": "Returns a raw, unparsed, and unprocessed email. If your client has issues processing the response it is likely due to the response content-type which is text/plain. If you need a JSON response content-type use the getRawEmailJson endpoint",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "emailId",
                    "type": "STRING",
                    "description": "ID of email",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/raw\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/raw\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{emailId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-06eae16b-7b1b-47df-95e6-4f53b2ec6867",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {
                "type": "string"
            }
        },
        {
            "name": "getEmailHTMLJson",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/html/json",
            "description": "Retrieve email content as HTML response. Decodes quoted-printable entities and converts charset to UTF-8. Returns content-type `application/json;charset=utf-8` so you must call expecting that content response not JSON.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "emailId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "decode",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": false
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/html/json\"\nquerystring = {\"decode\": false, \"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/html/json\"\nquerystring = {\"decode\": false, \"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getAllUnknownMissedEmails",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/missed-emails/unknown",
            "description": "Unknown missed emails are emails that were sent to MailSlurp but could not be assigned to an existing inbox.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in list pagination",
                    "default": 20
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in list pagination",
                    "default": 0
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "Optional inbox ID filter",
                    "default": ""
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "searchFilter",
                    "type": "STRING",
                    "description": "Optional search filter",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/missed-emails/unknown\"\nquerystring = {\"since\": \"\", \"size\": 20, \"page\": 0, \"sort\": \"ASC\", \"inboxId\": \"\", \"before\": \"\", \"searchFilter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/missed-emails/unknown\"\nquerystring = {\"since\": \"\", \"size\": 20, \"page\": 0, \"sort\": \"ASC\", \"inboxId\": \"\", \"before\": \"\", \"searchFilter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-ac537a78-9d21-4db6-8a49-a06d8766dae5",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getEmailsPaginated",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails",
            "description": "By default returns all emails across all inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "unreadOnly",
                    "type": "BOOLEAN",
                    "description": "Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly",
                    "default": false
                },
                {
                    "name": "searchFilter",
                    "type": "STRING",
                    "description": "Optional search filter. Searches email recipients, sender, subject, email address and ID. Does not search email body",
                    "default": ""
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Optional filter emails received before given date time",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results",
                    "default": 20
                },
                {
                    "name": "inboxId",
                    "type": "ARRAY",
                    "description": "Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account.",
                    "default": "[]"
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Optional filter emails received after given date time",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in email list pagination",
                    "default": 0
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails\"\nquerystring = {\"unreadOnly\": false, \"searchFilter\": \"\", \"before\": \"\", \"sort\": \"ASC\", \"size\": 20, \"inboxId\": \"[]\", \"since\": \"\", \"page\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails\"\nquerystring = {\"unreadOnly\": false, \"searchFilter\": \"\", \"before\": \"\", \"sort\": \"ASC\", \"size\": 20, \"inboxId\": \"[]\", \"since\": \"\", \"page\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getGravatarUrlForEmailAddress",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/gravatarFor",
            "description": "Get gravatar url for email address",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "emailAddress",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "size",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/gravatarFor\"\nquerystring = {\"size\": \"\", \"emailAddress\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/gravatarFor\"\nquerystring = {\"size\": \"\", \"emailAddress\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "getGravatarForEmailAddress.emailAddress: Must be a valid email address containing an @ symbol and one dot. Email addresses are case insensitive",
                "caseNumber": "CASE-NF-17493861-cdff-41d4-bddc-461eaae87044",
                "errorClass": "ConstraintViolationException",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getEmailCount",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/emails/count",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/emails/count\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/emails/count\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-fe75e03f-da95-4fd0-8050-0bb621c503a0",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getAlias",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/aliases/{aliasId}",
            "description": "Get an email alias by ID",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "aliasId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/aliases/{aliasId}\"\nquerystring = {\"aliasId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/aliases/{aliasId}\"\nquerystring = {\"aliasId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{aliasId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-f811cfcd-3a4b-4afc-a3e9-c8de86edf16c",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "waitForNthMissedEmail",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/missed-emails/waitForNthMissedEmail",
            "description": "Wait for 0 based index missed email",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "index",
                    "type": "NUMBER",
                    "description": "Zero based index of the email to wait for. If 1 missed email already and you want to wait for the 2nd email pass index=1",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "timeout",
                    "type": "NUMBER",
                    "description": "Optional timeout milliseconds",
                    "default": ""
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                },
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "Optional inbox ID filter",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/missed-emails/waitForNthMissedEmail\"\nquerystring = {\"index\": \"\", \"timeout\": \"\", \"before\": \"\", \"since\": \"\", \"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/missed-emails/waitForNthMissedEmail\"\nquerystring = {\"index\": \"\", \"timeout\": \"\", \"before\": \"\", \"since\": \"\", \"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: \"\"",
                "caseNumber": "CASE-NF-705312c8-1ccc-4474-8bfc-7804402b0c81",
                "errorClass": "MethodArgumentTypeMismatchException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getOrganizationEmailsPaginated",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/organization",
            "description": "By default returns all emails across all team inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in email list pagination",
                    "default": 0
                },
                {
                    "name": "searchFilter",
                    "type": "STRING",
                    "description": "Optional search filter search filter for emails.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "inboxId",
                    "type": "ARRAY",
                    "description": "Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account.",
                    "default": "[]"
                },
                {
                    "name": "unreadOnly",
                    "type": "BOOLEAN",
                    "description": "Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly",
                    "default": false
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Optional filter emails received after given date time",
                    "default": ""
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Optional filter emails received before given date time",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results",
                    "default": 20
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/organization\"\nquerystring = {\"page\": 0, \"searchFilter\": \"\", \"sort\": \"ASC\", \"inboxId\": \"[]\", \"unreadOnly\": false, \"since\": \"\", \"before\": \"\", \"size\": 20}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/organization\"\nquerystring = {\"page\": 0, \"searchFilter\": \"\", \"sort\": \"ASC\", \"inboxId\": \"[]\", \"unreadOnly\": false, \"since\": \"\", \"before\": \"\", \"size\": 20}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getTestWebhookPayloadNewEmail",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/test/new-email-payload",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/test/new-email-payload\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/test/new-email-payload\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "messageId": "test-message-id",
                "webhookId": "11693e34-a4d6-4d6d-b10c-3b20984b83a4",
                "eventName": "NEW_EMAIL",
                "webhookName": "test-webhook",
                "inboxId": "81d8d143-2dbf-43c4-843b-c7a4a629c546",
                "domainId": null,
                "emailId": "0ec27f32-7009-4554-8a7e-395130b82b51",
                "createdAt": "1970-01-01T00:00:00.000Z",
                "to": [
                    "to@address.com"
                ],
                "from": "from@address.com",
                "cc": [],
                "bcc": [],
                "subject": "test-subject",
                "attachmentMetaDatas": [
                    {
                        "name": "file-name",
                        "contentType": "text/plain",
                        "contentLength": 123,
                        "id": "attachment-id"
                    }
                ]
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getInboxForwarder",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/forwarders/{id}",
            "description": "Get inbox ruleset",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "ID of inbox forwarder",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/forwarders/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/forwarders/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{id}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-a07a532c-3c00-4139-a9d3-2b43070cad73",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getUserInfo",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/user/info",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/user/info\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/user/info\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-408e995a-1f61-4cd7-bcae-417b020acaec",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getSmtpPassword",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/user/smtp/password",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/user/smtp/password\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/user/smtp/password\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getValidationRequests",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/email-verification/validation-requests",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "isValid",
                    "type": "BOOLEAN",
                    "description": "Filter where email is valid is true or false",
                    "default": true
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size for paginated result list.",
                    "default": 20
                },
                {
                    "name": "searchFilter",
                    "type": "STRING",
                    "description": "Optional search filter",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "DESC"
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in list pagination",
                    "default": 0
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/email-verification/validation-requests\"\nquerystring = {\"before\": \"\", \"isValid\": true, \"size\": 20, \"searchFilter\": \"\", \"sort\": \"DESC\", \"since\": \"\", \"page\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/email-verification/validation-requests\"\nquerystring = {\"before\": \"\", \"isValid\": true, \"size\": 20, \"searchFilter\": \"\", \"sort\": \"DESC\", \"since\": \"\", \"page\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getInboxForwarders",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/forwarders",
            "description": "List all forwarders attached to an inbox",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "searchFilter",
                    "type": "STRING",
                    "description": "Optional search filter",
                    "default": ""
                },
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "Optional inbox id to get forwarders from",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in inbox forwarder list pagination",
                    "default": 0
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in inbox forwarder list pagination",
                    "default": 20
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/forwarders\"\nquerystring = {\"searchFilter\": \"\", \"inboxId\": \"\", \"page\": 0, \"size\": 20, \"since\": \"\", \"before\": \"\", \"sort\": \"ASC\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/forwarders\"\nquerystring = {\"searchFilter\": \"\", \"inboxId\": \"\", \"page\": 0, \"size\": 20, \"since\": \"\", \"before\": \"\", \"sort\": \"ASC\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-0b767b95-ff4d-4b19-9cb5-b60691a73133",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getTrackingPixel",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/tracking/pixels/{id}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/tracking/pixels/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/tracking/pixels/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{id}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-0c482f14-9a9d-4ffe-a7dd-b7d265d97c9e",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getTestWebhookPayloadBounceRecipient",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/test/email-bounce-recipient-payload",
            "description": "Get webhook test payload for bounce recipient",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/test/email-bounce-recipient-payload\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/test/email-bounce-recipient-payload\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "messageId": "test-message-id",
                "webhookId": "18221713-4675-4f15-bbf6-5c65a09635d0",
                "eventName": "BOUNCE_RECIPIENT",
                "webhookName": "test-webhook-name",
                "recipient": "test@receiver.com"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getAllWebhooks",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/paginated",
            "description": "List webhooks in paginated form. Allows for page index, page size, and sort direction.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in list pagination",
                    "default": 0
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                },
                {
                    "name": "searchFilter",
                    "type": "STRING",
                    "description": "Optional search filter",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "DESC"
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size for paginated result list.",
                    "default": 20
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/paginated\"\nquerystring = {\"page\": 0, \"since\": \"\", \"searchFilter\": \"\", \"sort\": \"DESC\", \"before\": \"\", \"size\": 20}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/paginated\"\nquerystring = {\"page\": 0, \"since\": \"\", \"searchFilter\": \"\", \"sort\": \"DESC\", \"before\": \"\", \"size\": 20}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-360ea367-e33b-4880-a8d1-f2d19c63153c",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getEmergencyAddress",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/phone/emergency-addresses/{addressId}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "addressId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/phone/emergency-addresses/{addressId}\"\nquerystring = {\"addressId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/phone/emergency-addresses/{addressId}\"\nquerystring = {\"addressId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{addressId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-ff73d23e-65c9-4c97-9f19-7e429731b839",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getTestWebhookPayload",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/test",
            "description": "Get test webhook payload example. Response content depends on eventName passed. Uses `EMAIL_RECEIVED` as default.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "eventName",
                    "type": "STRING",
                    "description": "",
                    "default": "EMAIL_RECEIVED"
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/test\"\nquerystring = {\"eventName\": \"EMAIL_RECEIVED\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/test\"\nquerystring = {\"eventName\": \"EMAIL_RECEIVED\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "messageId": "message-id-123",
                "webhookId": "da794d9c-7138-403c-b3a7-fd15dda4ebb3",
                "webhookName": "test-webhook",
                "eventName": "EMAIL_RECEIVED",
                "inboxId": "beb19f6e-3f66-45a6-9d5f-727a2fa8479a",
                "emailId": "3456568b-312b-4944-81f6-c69dd48ffee0",
                "createdAt": "2023-06-16T14:40:37.644Z",
                "to": [
                    "a@b.com"
                ],
                "from": "test@gmail.com",
                "cc": [],
                "bcc": [],
                "subject": "Test email received",
                "attachmentMetaDatas": []
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getWebhookResults",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/{webhookId}/results",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "webhookId",
                    "type": "STRING",
                    "description": "ID of webhook to get results for",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "unseenOnly",
                    "type": "BOOLEAN",
                    "description": "Filter for unseen exceptions only",
                    "default": true
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "searchFilter",
                    "type": "STRING",
                    "description": "Optional search filter",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in list pagination",
                    "default": 20
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in list pagination",
                    "default": 0
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/{webhookId}/results\"\nquerystring = {\"unseenOnly\": true, \"before\": \"\", \"sort\": \"ASC\", \"searchFilter\": \"\", \"size\": 20, \"webhookId\": \"\", \"since\": \"\", \"page\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/{webhookId}/results\"\nquerystring = {\"unseenOnly\": true, \"before\": \"\", \"sort\": \"ASC\", \"searchFilter\": \"\", \"size\": 20, \"webhookId\": \"\", \"since\": \"\", \"page\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getInboxWebhooksPaginated",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/webhooks/paginated",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "searchFilter",
                    "type": "STRING",
                    "description": "Optional search filter",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in list pagination",
                    "default": 0
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in list pagination",
                    "default": 20
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/webhooks/paginated\"\nquerystring = {\"before\": \"\", \"searchFilter\": \"\", \"page\": 0, \"sort\": \"ASC\", \"size\": 20, \"inboxId\": \"\", \"since\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/webhooks/paginated\"\nquerystring = {\"before\": \"\", \"searchFilter\": \"\", \"page\": 0, \"sort\": \"ASC\", \"size\": 20, \"inboxId\": \"\", \"since\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{inboxId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-464c21a0-834b-4fb1-adbc-2dc206b76355",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getWebhookResult",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/results/{webhookResultId}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "webhookResultId",
                    "type": "STRING",
                    "description": "Webhook Result ID",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/results/{webhookResultId}\"\nquerystring = {\"webhookResultId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/results/{webhookResultId}\"\nquerystring = {\"webhookResultId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{webhookResultId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-c22688d5-a380-44b2-bc4f-d62d43f70482",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getBouncedEmail",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/bounce/emails/{id}",
            "description": "Bounced emails are email you have sent that were rejected by a recipient",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "ID of the bounced email to fetch",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/bounce/emails/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/bounce/emails/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{id}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-d1957a68-279d-460c-b13d-fdf538aa6086",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getTestWebhookPayloadEmailRead",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/test/email-read-payload",
            "description": "Get webhook test payload for email opened event",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/test/email-read-payload\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/test/email-read-payload\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "messageId": "test-message-id",
                "webhookId": "daa9556a-3fe5-46d0-b070-fb8f0b0c8905",
                "eventName": "EMAIL_READ",
                "webhookName": "test-webhook-name",
                "emailId": "72118109-8452-464b-ad10-16cb7631f338",
                "inboxId": "0ccb86e6-cfde-473b-91cd-2575ede27368",
                "emailIsRead": true,
                "createdAt": "1970-01-01T00:00:00.000Z"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getBouncedRecipients",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/bounce/recipients",
            "description": "Bounced recipients are email addresses that you have sent emails to that did not accept the sent email. Once a recipient is bounced you cannot send emails to that address.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size ",
                    "default": 20
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index ",
                    "default": 0
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/bounce/recipients\"\nquerystring = {\"size\": 20, \"before\": \"\", \"sort\": \"ASC\", \"since\": \"\", \"page\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/bounce/recipients\"\nquerystring = {\"size\": 20, \"before\": \"\", \"sort\": \"ASC\", \"since\": \"\", \"page\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-65bbe5d1-bd54-42c8-b4dc-502d373b84af",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getTestWebhookPayloadNewContact",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/test/new-contact-payload",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/test/new-contact-payload\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/test/new-contact-payload\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "messageId": "test-message-id",
                "webhookId": "7a804858-7d26-4fa2-b0d9-5576733c5e4f",
                "webhookName": "webhook-name",
                "eventName": "NEW_CONTACT",
                "contactId": "3d69e247-a237-4ae1-b31c-cf7be22f0480",
                "groupId": "2e1f9d25-7a01-4e01-9882-21799ab82f7c",
                "firstName": "first-name",
                "lastName": "last-name",
                "company": "company",
                "primaryEmailAddress": "test@address.com",
                "emailAddresses": [
                    "test@address.com"
                ],
                "tags": [],
                "metaData": null,
                "optOut": false,
                "createdAt": "1970-01-01T00:00:00.000Z"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getWebhooks",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/webhooks",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/webhooks\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/webhooks\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{inboxId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-b881a458-6f52-4b04-81b4-3b832197c2b6",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getSmsMessage",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sms/{smsId}",
            "description": "Returns a SMS summary object with content.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "smsId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sms/{smsId}\"\nquerystring = {\"smsId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sms/{smsId}\"\nquerystring = {\"smsId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Invalid ID passed `{smsId}`. You must use the full entity ID for api calls. The ID is a UUID with a format like: 'c004d17d-0e20-4728-bbdc-389d143ba1b5'. If the string you are passing is shorter you may be using the shortened displayId that is shown on the dashboard. Please use the UUID that is shown in the URL address bar instead.",
                "caseNumber": "CASE-NF-6fdc318e-0caa-4227-bda8-d07cafb4bc9c",
                "errorClass": "IllegalArgumentException",
                "errorCode": "E_001_UNEXPECTED_ERROR",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getTestWebhookPayloadBounce",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/test/email-bounce-payload",
            "description": "Get webhook test payload for bounce",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/test/email-bounce-payload\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/test/email-bounce-payload\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "messageId": "test-message-id",
                "webhookId": "825db6a2-27ee-4010-9df1-2f45885089ed",
                "eventName": "BOUNCE",
                "webhookName": "test-webhook-name",
                "bounceId": "2dc8dec4-0dc0-40be-90dd-a4c2ebf9ffca",
                "sentToRecipients": [
                    "a@b.com",
                    "c@d.com"
                ],
                "sender": "test@sender.com",
                "bounceRecipients": [
                    "a@b.com"
                ]
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getWebhookResultsUnseenErrorCount",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/results/unseen-count",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/results/unseen-count\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/results/unseen-count\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-49d8b233-fc18-42de-aa86-20f9d243a129",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getTestWebhookPayloadEmailOpened",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/test/email-opened-payload",
            "description": "Get webhook test payload for email opened event",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/test/email-opened-payload\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/test/email-opened-payload\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "messageId": "test-message-id",
                "webhookId": "0cf34cdc-16fa-4bef-b4c2-5dc9cb83ac9a",
                "eventName": "EMAIL_OPENED",
                "webhookName": "test-webhook-name",
                "inboxId": "23851b1b-5973-4ba9-be24-63cebce084c2",
                "pixelId": "71ca3724-6cba-47c8-bf6b-3d9f37b9e422",
                "sentEmailId": "4c49eabf-22d1-42a7-879d-77ac7963e98c",
                "recipient": "test@recipient.com",
                "createdAt": "1970-01-01T00:00:00.000Z"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getSmsMessagesPaginated",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sms",
            "description": "By default returns all SMS messages across all phone numbers sorted by ascending created at date. Responses are paginated. You can restrict results to a list of phone number IDs. You can also filter out read messages",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in SMS list pagination",
                    "default": 0
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Optional filter SMSs received after given date time",
                    "default": ""
                },
                {
                    "name": "unreadOnly",
                    "type": "BOOLEAN",
                    "description": "Optional filter for unread SMS only. All SMS are considered unread until they are viewed in the dashboard or requested directly",
                    "default": false
                },
                {
                    "name": "phoneNumber",
                    "type": "STRING",
                    "description": "Optional receiving phone number to filter SMS messages for",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Optional filter SMSs received before given date time",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in SMS list pagination. Maximum size is 100. Use page index and sort to page through larger results",
                    "default": 20
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sms\"\nquerystring = {\"page\": 0, \"since\": \"\", \"unreadOnly\": false, \"phoneNumber\": \"\", \"sort\": \"ASC\", \"before\": \"\", \"size\": 20}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sms\"\nquerystring = {\"page\": 0, \"since\": \"\", \"unreadOnly\": false, \"phoneNumber\": \"\", \"sort\": \"ASC\", \"before\": \"\", \"size\": 20}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getPhoneNumbers",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/phone/numbers",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index for list pagination",
                    "default": 0
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size for list pagination",
                    "default": 20
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/phone/numbers\"\nquerystring = {\"page\": 0, \"size\": 20, \"sort\": \"ASC\", \"before\": \"\", \"since\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/phone/numbers\"\nquerystring = {\"page\": 0, \"size\": 20, \"sort\": \"ASC\", \"before\": \"\", \"since\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-4dafa1f0-c20c-4586-b4b1-b46538f78f67",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getAllWebhookResults",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/results",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Optional page size in list pagination",
                    "default": 20
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Optional createdAt sort direction ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter by created at after the given timestamp",
                    "default": ""
                },
                {
                    "name": "searchFilter",
                    "type": "STRING",
                    "description": "Optional search filter",
                    "default": ""
                },
                {
                    "name": "unseenOnly",
                    "type": "BOOLEAN",
                    "description": "Filter for unseen exceptions only",
                    "default": true
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Optional page index in list pagination",
                    "default": 0
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter by created at before the given timestamp",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/results\"\nquerystring = {\"size\": 20, \"sort\": \"ASC\", \"since\": \"\", \"searchFilter\": \"\", \"unseenOnly\": true, \"page\": 0, \"before\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/results\"\nquerystring = {\"size\": 20, \"sort\": \"ASC\", \"since\": \"\", \"searchFilter\": \"\", \"unseenOnly\": true, \"page\": 0, \"before\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getPhonePlans",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/phone/plans",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/phone/plans\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/phone/plans\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Unauthenticated request - API key is missing. Please set one of the HTTP headers x-api-key,x-auth-token or one of HTTP request query parameters apiKey to the value of your MailSlurp API Key. If you are using an SDK client make sure you configured it to include your API Key. You can find your API Key in the MailSlurp Dashboard (https://app.mailslurp.com). For more help see https://www.mailslurp.com/guides/api-key/ or contact support.",
                "caseNumber": "CASE-NF-0271dee6-ca5b-4512-a01d-27bbb80a7576",
                "errorClass": "Error400BadRequest",
                "errorCode": "W_400_BAD_REQUEST",
                "comment": "If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "exportEntities",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/export",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "outputFormat",
                    "type": "STRING",
                    "description": "",
                    "default": "CSV_DEFAULT"
                },
                {
                    "name": "apiKey",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "exportType",
                    "type": "STRING",
                    "description": "",
                    "default": "INBOXES"
                }
            ],
            "optional_parameters": [
                {
                    "name": "listSeparatorToken",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "excludePreviouslyExported",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": true
                },
                {
                    "name": "createdOldestTime",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "createdEarliestTime",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "filter",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/export\"\nquerystring = {\"outputFormat\": \"CSV_DEFAULT\", \"listSeparatorToken\": \"\", \"apiKey\": \"\", \"exportType\": \"INBOXES\", \"excludePreviouslyExported\": true, \"createdOldestTime\": \"\", \"createdEarliestTime\": \"\", \"filter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/export\"\nquerystring = {\"outputFormat\": \"CSV_DEFAULT\", \"listSeparatorToken\": \"\", \"apiKey\": \"\", \"exportType\": \"INBOXES\", \"excludePreviouslyExported\": true, \"createdOldestTime\": \"\", \"createdEarliestTime\": \"\", \"filter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "restoreMissedEmails",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/missed-emails/restore",
            "description": "If emails were missed due to a plan limit they are saved as missed emails. If support team enables the canRestore flag these emails can be reload into your account using this method.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/missed-emails/restore\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/missed-emails/restore\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "sendEmailSourceOptional",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails",
            "description": "Alias for `InboxController.sendEmail` method - see original method for full details. Sends an email from a given inbox that you have created. If no inbox is supplied a random inbox will be created for you and used to send the email.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "ID of the inbox you want to send the email from",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "useDomainPool",
                    "type": "BOOLEAN",
                    "description": "Use domain pool. Optionally create inbox to send from using the mailslurp domain pool.",
                    "default": true
                },
                {
                    "name": "virtualSend",
                    "type": "BOOLEAN",
                    "description": "Optionally create inbox to send from that is a virtual inbox and won't send to external addresses",
                    "default": true
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails\"\nquerystring = {\"useDomainPool\": true, \"inboxId\": \"\", \"virtualSend\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails\"\nquerystring = {\"useDomainPool\": true, \"inboxId\": \"\", \"virtualSend\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "getEmailContentMatch",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/contentMatch",
            "description": "Return the matches for a given Java style regex pattern. Do not include the typical `/` at start or end of regex in some languages. Given an example `your code is: 12345` the pattern to extract match looks like `code is: (\\d{6})`. This will return an array of matches with the first matching the entire pattern and the subsequent matching the groups: `['code is: 123456', '123456']` See https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html for more information of available patterns. ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "emailId",
                    "type": "STRING",
                    "description": "ID of email to match against",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/contentMatch\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/contentMatch\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "createTemplate",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/templates",
            "description": "Create an email template with variables for use with templated transactional emails.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/templates\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/templates\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "forwardEmail",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/forward",
            "description": "Forward an existing email to new recipients. The sender of the email will be the inbox that received the email you are forwarding. You can override the sender with the `from` option. Note you must have access to the from address in MailSlurp to use the override. For more control consider fetching the email and sending it a new using the send email endpoints.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "emailId",
                    "type": "STRING",
                    "description": "ID of email",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/forward\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/forward\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "waitForMatchingFirstEmail",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/waitForMatchingFirstEmail",
            "description": "Perform a search of emails in an inbox with the given patterns. If a result if found then return or else retry the search until a result is found or timeout is reached. Match options allow simple CONTAINS or EQUALS filtering on SUBJECT, TO, BCC, CC, and FROM. See the `MatchOptions` object for options. An example payload is `{ matches: [{field: 'SUBJECT',should:'CONTAIN',value:'needle'}] }`. You can use an array of matches and they will be applied sequentially to filter out emails. If you want to perform matches and extractions of content using Regex patterns see the EmailController `getEmailContentMatch` method.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "Id of the inbox we are matching an email for",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter for emails that were received after the given timestamp",
                    "default": ""
                },
                {
                    "name": "unreadOnly",
                    "type": "BOOLEAN",
                    "description": "Optional filter for unread only",
                    "default": false
                },
                {
                    "name": "delay",
                    "type": "NUMBER",
                    "description": "Max milliseconds delay between calls",
                    "default": ""
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter for emails that were received before the given timestamp",
                    "default": ""
                },
                {
                    "name": "timeout",
                    "type": "NUMBER",
                    "description": "Max milliseconds to wait",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Sort direction",
                    "default": "ASC"
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/waitForMatchingFirstEmail\"\nquerystring = {\"inboxId\": \"\", \"since\": \"\", \"unreadOnly\": false, \"delay\": \"\", \"before\": \"\", \"timeout\": \"\", \"sort\": \"ASC\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/waitForMatchingFirstEmail\"\nquerystring = {\"inboxId\": \"\", \"since\": \"\", \"unreadOnly\": false, \"delay\": \"\", \"before\": \"\", \"timeout\": \"\", \"sort\": \"ASC\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "createInbox",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes",
            "description": "Create a new inbox and with a randomized email address to send and receive from. Pass emailAddress parameter if you wish to use a specific email address. Creating an inbox is required before sending or receiving emails. If writing tests it is recommended that you create a new inbox during each test method so that it is unique and empty. ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "allowTeamAccess",
                    "type": "BOOLEAN",
                    "description": "DEPRECATED (team access is always true). Grant team access to this inbox and the emails that belong to it for team members of your organization.",
                    "default": true
                },
                {
                    "name": "expiresAt",
                    "type": "STRING",
                    "description": "Optional inbox expiration date. If null then this inbox is permanent and the emails in it won't be deleted. If an expiration date is provided or is required by your plan the inbox will be closed when the expiration time is reached. Expired inboxes still contain their emails but can no longer send or receive emails. An ExpiredInboxRecord is created when an inbox and the email address and inbox ID are recorded. The expiresAt property is a timestamp string in ISO DateTime Format yyyy-MM-dd'T'HH:mm:ss.SSSXXX.",
                    "default": ""
                },
                {
                    "name": "favourite",
                    "type": "BOOLEAN",
                    "description": "Is the inbox a favorite. Marking an inbox as a favorite is typically done in the dashboard for quick access or filtering",
                    "default": true
                },
                {
                    "name": "inboxType",
                    "type": "STRING",
                    "description": "HTTP (default) or SMTP inbox type. HTTP inboxes are default and best solution for most cases. SMTP inboxes are more reliable for public inbound email consumption (but do not support sending emails). When using custom domains the domain type must match the inbox type. HTTP inboxes are processed by AWS SES while SMTP inboxes use a custom mail server running at `mx.mailslurp.com`.",
                    "default": "HTTP_INBOX"
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "Optional description of the inbox for labelling purposes. Is shown in the dashboard and can be used with",
                    "default": ""
                },
                {
                    "name": "emailAddress",
                    "type": "STRING",
                    "description": "A custom email address to use with the inbox. Defaults to null. When null MailSlurp will assign a random email address to the inbox such as `123@mailslurp.com`. If you use the `useDomainPool` option when the email address is null it will generate an email address with a more varied domain ending such as `123@mailslurp.info` or `123@mailslurp.biz`. When a custom email address is provided the address is split into a domain and the domain is queried against your user. If you have created the domain in the MailSlurp dashboard and verified it you can use any email address that ends with the domain. Note domain types must match the inbox type - so `SMTP` inboxes will only work with `SMTP` type domains. Avoid `SMTP` inboxes if you need to send emails as they can only receive. Send an email to this address and the inbox will receive and store it for you. To retrieve the email use the Inbox and Email Controller endpoints with the inbox ID.",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Optional name of the inbox. Displayed in the dashboard for easier search and used as the sender name when sending emails.",
                    "default": ""
                },
                {
                    "name": "virtualInbox",
                    "type": "BOOLEAN",
                    "description": "Virtual inbox prevents any outbound emails from being sent. It creates sent email records but will never send real emails to recipients. Great for testing and faking email sending.",
                    "default": true
                },
                {
                    "name": "useDomainPool",
                    "type": "BOOLEAN",
                    "description": "Use the MailSlurp domain name pool with this inbox when creating the email address. Defaults to null. If enabled the inbox will be an email address with a domain randomly chosen from a list of the MailSlurp domains. This is useful when the default `@mailslurp.com` email addresses used with inboxes are blocked or considered spam by a provider or receiving service. When domain pool is enabled an email address will be generated ending in `@mailslurp.{world,info,xyz,...}` . This means a TLD is randomly selecting from a list of `.biz`, `.info`, `.xyz` etc to add variance to the generated email addresses. When null or false MailSlurp uses the default behavior of `@mailslurp.com` or custom email address provided by the emailAddress field. Note this feature is only available for `HTTP` inbox types.",
                    "default": true
                },
                {
                    "name": "tags",
                    "type": "ARRAY",
                    "description": "Tags that inbox has been tagged with. Tags can be added to inboxes to group different inboxes within an account. You can also search for inboxes by tag in the dashboard UI.",
                    "default": "[]"
                },
                {
                    "name": "expiresIn",
                    "type": "NUMBER",
                    "description": "Number of milliseconds that inbox should exist for",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes\"\nquerystring = {\"allowTeamAccess\": true, \"expiresAt\": \"\", \"favourite\": true, \"inboxType\": \"HTTP_INBOX\", \"description\": \"\", \"emailAddress\": \"\", \"name\": \"\", \"virtualInbox\": true, \"useDomainPool\": true, \"tags\": \"[]\", \"expiresIn\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes\"\nquerystring = {\"allowTeamAccess\": true, \"expiresAt\": \"\", \"favourite\": true, \"inboxType\": \"HTTP_INBOX\", \"description\": \"\", \"emailAddress\": \"\", \"name\": \"\", \"virtualInbox\": true, \"useDomainPool\": true, \"tags\": \"[]\", \"expiresIn\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "sendEmail",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}",
            "description": "Send an email from an inbox's email address. \nThe request body should contain the `SendEmailOptions` that include recipients, attachments, body etc. See `SendEmailOptions` for all available properties. Note the `inboxId` refers to the inbox's id not the inbox's email address. See https://www.mailslurp.com/guides/ for more information on how to send emails. This method does not return a sent email entity due to legacy reasons. To send and get a sent email as returned response use the sister method `sendEmailAndConfirm`.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "ID of the inbox you want to send the email from",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "createContact",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/contacts",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/contacts\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/contacts\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "sendAliasEmail",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/aliases/{aliasId}/emails",
            "description": "Send an email from an alias. Replies to the email will be forwarded to the alias masked email address",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "aliasId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/aliases/{aliasId}/emails\"\nquerystring = {\"aliasId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/aliases/{aliasId}/emails\"\nquerystring = {\"aliasId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "sendTestData",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/{webhookId}/test",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "webhookId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/{webhookId}/test\"\nquerystring = {\"webhookId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/{webhookId}/test\"\nquerystring = {\"webhookId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "verifyEmailAddress",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/mail-server/verify/email-address",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/mail-server/verify/email-address\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/mail-server/verify/email-address\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "bulkSendEmails",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/bulk/send",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/bulk/send\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/bulk/send\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "uploadAttachment",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/attachments",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/attachments\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/attachments\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "uploadAttachmentBytes",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/attachments/bytes",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "filename",
                    "type": "STRING",
                    "description": "Optional filename to save upload with",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/attachments/bytes\"\nquerystring = {\"filename\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/attachments/bytes\"\nquerystring = {\"filename\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "validateEmail",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/validate",
            "description": "Validate the HTML content of email if HTML is found. Considered valid if no HTML is present.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "emailId",
                    "type": "STRING",
                    "description": "ID of email",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/validate\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/validate\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "waitFor",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/waitFor",
            "description": "Generic waitFor method that will wait until an inbox meets given conditions or return immediately if already met",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/waitFor\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/waitFor\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "sendSmtpEnvelope",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/smtp-envelope",
            "description": "Send email using an SMTP envelope containing RCPT TO, MAIL FROM, and a SMTP BODY.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "ID of the inbox you want to send the email from",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/smtp-envelope\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/smtp-envelope\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "describeMailServerDomain",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/mail-server/describe/domain",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/mail-server/describe/domain\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/mail-server/describe/domain\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getDnsLookup",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/mail-server/describe/dns-lookup",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/mail-server/describe/dns-lookup\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/mail-server/describe/dns-lookup\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getIpAddress",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/mail-server/describe/ip-address",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/mail-server/describe/ip-address\"\nquerystring = {\"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/mail-server/describe/ip-address\"\nquerystring = {\"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "bulkCreateInboxes",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/bulk/inboxes",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "count",
                    "type": "NUMBER",
                    "description": "Number of inboxes to be created in bulk",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/bulk/inboxes\"\nquerystring = {\"count\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/bulk/inboxes\"\nquerystring = {\"count\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "createEmergencyAddress",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/phone/emergency-addresses",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/phone/emergency-addresses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/phone/emergency-addresses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "uploadMultipartForm",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/attachments/multipart",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "contentType",
                    "type": "STRING",
                    "description": "Optional content type of attachment",
                    "default": ""
                },
                {
                    "name": "x-filename",
                    "type": "STRING",
                    "description": "Optional content type header of attachment",
                    "default": ""
                },
                {
                    "name": "filename",
                    "type": "STRING",
                    "description": "Optional name of file",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/attachments/multipart\"\nquerystring = {\"contentType\": \"\", \"x-filename\": \"\", \"filename\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/attachments/multipart\"\nquerystring = {\"contentType\": \"\", \"x-filename\": \"\", \"filename\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "createGroup",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/groups",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/groups\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/groups\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "createNewEmailAddress",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/newEmailAddress",
            "description": "Returns an Inbox with an `id` and an `emailAddress`",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "expiresIn",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "useDomainPool",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": true
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "emailAddress",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "inboxType",
                    "type": "STRING",
                    "description": "",
                    "default": "HTTP_INBOX"
                },
                {
                    "name": "expiresAt",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "virtualInbox",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": true
                },
                {
                    "name": "allowTeamAccess",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": true
                },
                {
                    "name": "tags",
                    "type": "ARRAY",
                    "description": "",
                    "default": "[]"
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "favourite",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": true
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/newEmailAddress\"\nquerystring = {\"expiresIn\": \"\", \"useDomainPool\": true, \"name\": \"\", \"emailAddress\": \"\", \"inboxType\": \"HTTP_INBOX\", \"expiresAt\": \"\", \"virtualInbox\": true, \"allowTeamAccess\": true, \"tags\": \"[]\", \"description\": \"\", \"favourite\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/newEmailAddress\"\nquerystring = {\"expiresIn\": \"\", \"useDomainPool\": true, \"name\": \"\", \"emailAddress\": \"\", \"inboxType\": \"HTTP_INBOX\", \"expiresAt\": \"\", \"virtualInbox\": true, \"allowTeamAccess\": true, \"tags\": \"[]\", \"description\": \"\", \"favourite\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "createInboxRuleset",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/rulesets",
            "description": "Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "inboxId",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/rulesets\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/rulesets\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "createRandomInbox",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/createInbox",
            "description": "Returns an Inbox with an `id` and an `emailAddress`",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "inboxType",
                    "type": "STRING",
                    "description": "",
                    "default": "HTTP_INBOX"
                },
                {
                    "name": "virtualInbox",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": true
                },
                {
                    "name": "favourite",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": true
                },
                {
                    "name": "allowTeamAccess",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": true
                },
                {
                    "name": "expiresAt",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "emailAddress",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "useDomainPool",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": true
                },
                {
                    "name": "expiresIn",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "tags",
                    "type": "ARRAY",
                    "description": "",
                    "default": "[]"
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/createInbox\"\nquerystring = {\"inboxType\": \"HTTP_INBOX\", \"virtualInbox\": true, \"favourite\": true, \"allowTeamAccess\": true, \"expiresAt\": \"\", \"description\": \"\", \"emailAddress\": \"\", \"useDomainPool\": true, \"expiresIn\": \"\", \"tags\": \"[]\", \"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/createInbox\"\nquerystring = {\"inboxType\": \"HTTP_INBOX\", \"virtualInbox\": true, \"favourite\": true, \"allowTeamAccess\": true, \"expiresAt\": \"\", \"description\": \"\", \"emailAddress\": \"\", \"useDomainPool\": true, \"expiresIn\": \"\", \"tags\": \"[]\", \"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "createDomain",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/domains",
            "description": "Link a domain that you own with MailSlurp so you can create email addresses using it. Endpoint returns DNS records used for validation. You must add these verification records to your host provider's DNS setup to verify the domain.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/domains\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/domains\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "testInboxRuleset",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/rulesets/{id}/test",
            "description": "Test an inbox ruleset",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "ID of inbox ruleset",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/rulesets/{id}/test\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/rulesets/{id}/test\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "sendEmailSimple",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sendEmail",
            "description": "If no senderId or inboxId provided a random email address will be used to send from.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sendEmail\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/sendEmail\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "addDomainWildcardCatchAll",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/domains/{id}/wildcard",
            "description": "Add a catch all inbox to a domain so that any emails sent to it that cannot be matched will be sent to the catch all inbox generated",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/domains/{id}/wildcard\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/domains/{id}/wildcard\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getJsonSchemaForWebhookPayload",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/{webhookId}/schema",
            "description": "Get JSON Schema definition for webhook payload",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "webhookId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/{webhookId}/schema\"\nquerystring = {\"webhookId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/{webhookId}/schema\"\nquerystring = {\"webhookId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "filterBouncedRecipient",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/bounce/filter-recipients",
            "description": "Prevent email sending errors by remove recipients who have resulted in past email bounces or complaints",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/bounce/filter-recipients\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/bounce/filter-recipients\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "createInboxWithOptions",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/withOptions",
            "description": "Additional endpoint that allows inbox creation with request body options. Can be more flexible that other methods for some clients.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/withOptions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/withOptions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "createNewInboxRuleset",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/rulesets",
            "description": "Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "Inbox id to attach ruleset to",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/rulesets\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/rulesets\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "sendTestEmail",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/send-test-email",
            "description": "Send an inbox a test email to test email receiving is working",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/send-test-email\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/send-test-email\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "sendEmailAndConfirm",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/confirm",
            "description": "Sister method for standard `sendEmail` method with the benefit of returning a `SentEmail` entity confirming the successful sending of the email with a link to the sent object created for it.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "ID of the inbox you want to send the email from",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/confirm\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/confirm\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "createInboxWithDefaults",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/withDefaults",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/withDefaults\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/withDefaults\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "sendEmailWithQueue",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/with-queue",
            "description": "Send an email using a queue. Will place the email onto a queue that will then be processed and sent. Use this queue method to enable any failed email sending to be recovered. This will prevent lost emails when sending if your account encounters a block or payment issue.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "validateBeforeEnqueue",
                    "type": "BOOLEAN",
                    "description": "Validate before adding to queue",
                    "default": true
                },
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "ID of the inbox you want to send the email from",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/with-queue\"\nquerystring = {\"validateBeforeEnqueue\": true, \"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/with-queue\"\nquerystring = {\"validateBeforeEnqueue\": true, \"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "waitForMatchingEmails",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/waitForMatchingEmails",
            "description": "Perform a search of emails in an inbox with the given patterns. If results match expected count then return or else retry the search until results are found or timeout is reached. Match options allow simple CONTAINS or EQUALS filtering on SUBJECT, TO, BCC, CC, and FROM. See the `MatchOptions` object for options. An example payload is `{ matches: [{field: 'SUBJECT',should:'CONTAIN',value:'needle'}] }`. You can use an array of matches and they will be applied sequentially to filter out emails. If you want to perform matches and extractions of content using Regex patterns see the EmailController `getEmailContentMatch` method.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "count",
                    "type": "NUMBER",
                    "description": "Number of emails to wait for. Must be greater or equal to 1",
                    "default": ""
                },
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "Id of the inbox we are fetching emails from",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "unreadOnly",
                    "type": "BOOLEAN",
                    "description": "Optional filter for unread only",
                    "default": false
                },
                {
                    "name": "delay",
                    "type": "NUMBER",
                    "description": "Max milliseconds delay between calls",
                    "default": ""
                },
                {
                    "name": "before",
                    "type": "STRING",
                    "description": "Filter for emails that were received before the given timestamp",
                    "default": ""
                },
                {
                    "name": "timeout",
                    "type": "NUMBER",
                    "description": "Max milliseconds to wait",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Sort direction",
                    "default": "ASC"
                },
                {
                    "name": "since",
                    "type": "STRING",
                    "description": "Filter for emails that were received after the given timestamp",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/waitForMatchingEmails\"\nquerystring = {\"unreadOnly\": false, \"count\": \"\", \"delay\": \"\", \"before\": \"\", \"timeout\": \"\", \"inboxId\": \"\", \"sort\": \"ASC\", \"since\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/waitForMatchingEmails\"\nquerystring = {\"unreadOnly\": false, \"count\": \"\", \"delay\": \"\", \"before\": \"\", \"timeout\": \"\", \"inboxId\": \"\", \"sort\": \"ASC\", \"since\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "applyImapFlagOperation",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/imap-flag-operation",
            "description": "Apply RFC3501 section-2.3.2 IMAP flag operations on an email",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "emailId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/imap-flag-operation\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/imap-flag-operation\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "createAlias",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/aliases",
            "description": "Email aliases use a MailSlurp randomly generated email address (or a custom domain inbox that you provide) to mask or proxy a real email address. Emails sent to the alias address will be forwarded to the hidden email address it was created for. If you want to send a reply use the threadId attached",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/aliases\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/aliases\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "waitForSms",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/waitForSms",
            "description": "Generic waitFor method that will wait until a phone number meets given conditions or return immediately if already met",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/waitForSms\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/waitForSms\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getJsonSchemaForWebhookEvent",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/schema",
            "description": "Get JSON Schema definition for webhook payload by event",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "event",
                    "type": "STRING",
                    "description": "",
                    "default": "EMAIL_RECEIVED"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/schema\"\nquerystring = {\"event\": \"EMAIL_RECEIVED\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/schema\"\nquerystring = {\"event\": \"EMAIL_RECEIVED\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "createNewInboxForwarder",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/forwarders",
            "description": "Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "Inbox id to attach forwarder to",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/forwarders\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/forwarders\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "createTrackingPixel",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/tracking/pixels",
            "description": "Create a tracking pixel. A tracking pixel is an image that can be embedded in an email. When the email is viewed and the image is seen MailSlurp will mark the pixel as seen. Use tracking pixels to monitor email open events. You can receive open notifications via webhook or by fetching the pixel.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/tracking/pixels\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/tracking/pixels\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "testInboxForwarder",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/forwarders/{id}/test",
            "description": "Test an inbox forwarder",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "ID of inbox forwarder",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/forwarders/{id}/test\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/forwarders/{id}/test\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "validateEmailAddressList",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/email-verification/email-address-list",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/email-verification/email-address-list\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/email-verification/email-address-list\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "createAccountWebhook",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks",
            "description": "Get notified of account level events such as bounce and bounce recipient.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "getTestWebhookPayloadForWebhook",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/{webhookId}/example",
            "description": "Get example payload for webhook",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "webhookId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/{webhookId}/example\"\nquerystring = {\"webhookId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/{webhookId}/example\"\nquerystring = {\"webhookId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "redriveWebhookResult",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/results/{webhookResultId}/redrive",
            "description": "Allows you to resend a webhook payload that was already sent. Webhooks that fail are retried automatically for 24 hours and then put in a dead letter queue. You can retry results manually using this method.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "webhookResultId",
                    "type": "STRING",
                    "description": "Webhook Result ID",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/results/{webhookResultId}/redrive\"\nquerystring = {\"webhookResultId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/results/{webhookResultId}/redrive\"\nquerystring = {\"webhookResultId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "createWebhook",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/webhooks",
            "description": "Get notified whenever an inbox receives an email via a WebHook URL. An emailID will be posted to this URL every time an email is received for this inbox. The URL must be publicly reachable by the MailSlurp server. You can provide basicAuth values if you wish to secure this endpoint.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "inboxId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/webhooks\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/inboxes/{inboxId}/webhooks\"\nquerystring = {\"inboxId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "verifyWebhookSignature",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/verify",
            "description": "Verify a webhook payload using the messageId and signature. This allows you to be sure that MailSlurp sent the payload and not another server.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/verify\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/webhooks/verify\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "submitForm",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/forms",
            "description": "This endpoint allows you to submit HTML forms and receive the field values and files via email. \n\n#### Parameters\nThe endpoint looks for special meta parameters in the form fields OR in the URL request parameters. The meta parameters can be used to specify the behaviour of the email. \n\nYou must provide at-least a `_to` email address to tell the endpoint where the form should be emailed. These can be submitted as hidden HTML input fields with the corresponding `name` attributes or as URL query parameters such as `?_to=test@example.com`\n\nThe endpoint takes all other form fields that are named and includes them in the message body of the email. Files are sent as attachments.\n\n#### Submitting\nThis endpoint accepts form submission via POST method. It accepts `application/x-www-form-urlencoded`, and `multipart/form-data` content-types.\n\n#### HTML Example\n```html\n<form \n  action=\"https://api.mailslurp.com/forms\"\n  method=\"post\"\n>\n  <input name=\"_to\" type=\"hidden\" value=\"test@example.com\"/>\n  <textarea name=\"feedback\"></textarea>\n  <button type=\"submit\">Submit</button>\n</form>\n```\n\n#### URL Example\n```html\n<form \n  action=\"https://api.mailslurp.com/forms?_to=test@example.com\"\n  method=\"post\"\n>\n  <textarea name=\"feedback\"></textarea>\n  <button type=\"submit\">Submit</button>\n</form>\n```\n\n\n\nThe email address is specified by a `_to` field OR is extracted from an email alias specified by a `_toAlias` field (see the alias controller for more information). \nEndpoint accepts . \nYou can specify a content type in HTML forms using the `enctype` attribute, for instance: `<form enctype=\"multipart/form-data\">`.\n\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "otherParameters",
                    "type": "STRING",
                    "description": "All other parameters or fields will be accepted and attached to the sent email. This includes files and any HTML form field with a name. These fields will become the body of the email that is sent.",
                    "default": ""
                },
                {
                    "name": "_successMessage",
                    "type": "STRING",
                    "description": "Optional success message to display if no _redirectTo present.",
                    "default": "Thanks for submitting"
                },
                {
                    "name": "_emailAddress",
                    "type": "STRING",
                    "description": "Email address of the submitting user. Include this if you wish to record the submitters email address and reply to it later.",
                    "default": "test@example.com"
                },
                {
                    "name": "_to",
                    "type": "STRING",
                    "description": "The email address that submitted form should be sent to.",
                    "default": "test@example.com"
                },
                {
                    "name": "_spamCheck",
                    "type": "STRING",
                    "description": "Optional but recommended field that catches spammers out. Include as a hidden form field but LEAVE EMPTY. Spam-bots will usually fill every field. If the _spamCheck field is filled the form submission will be ignored.",
                    "default": ""
                },
                {
                    "name": "_subject",
                    "type": "STRING",
                    "description": "Optional subject of the email that will be sent.",
                    "default": "My form submission"
                },
                {
                    "name": "_redirectTo",
                    "type": "STRING",
                    "description": "Optional URL to redirect form submitter to after submission. If not present user will see a success message.",
                    "default": "https://mysite.com/form-success"
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/forms\"\nquerystring = {\"otherParameters\": \"\", \"_successMessage\": \"Thanks for submitting\", \"_emailAddress\": \"test@example.com\", \"_to\": \"test@example.com\", \"_spamCheck\": \"\", \"_subject\": \"My form submission\", \"_redirectTo\": \"https://mysite.com/form-success\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/forms\"\nquerystring = {\"otherParameters\": \"\", \"_successMessage\": \"Thanks for submitting\", \"_emailAddress\": \"test@example.com\", \"_to\": \"test@example.com\", \"_spamCheck\": \"\", \"_subject\": \"My form submission\", \"_redirectTo\": \"https://mysite.com/form-success\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getExportLink",
            "url": "https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/export",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "exportType",
                    "type": "STRING",
                    "description": "",
                    "default": "INBOXES"
                }
            ],
            "optional_parameters": [
                {
                    "name": "apiKey",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/export\"\nquerystring = {\"apiKey\": \"\", \"exportType\": \"INBOXES\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/export\"\nquerystring = {\"apiKey\": \"\", \"exportType\": \"INBOXES\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        }
    ],
    "standardized_name": "mailslurp_email_testing"
}