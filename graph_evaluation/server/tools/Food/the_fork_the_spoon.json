{
    "tool_name":"The Fork The Spoon",
    "tool_description":"This API helps to query the best restaurant and meal around the world to create a traveling site/application such as thefork.com",
    "title":"The Fork The Spoon",
    "pricing":"FREEMIUM",
    "score":{
        "avgServiceLevel":100,
        "avgLatency":5682,
        "avgSuccessRate":100,
        "popularityScore":9.7,
        "__typename":"Score"
    },
    "home_url":"https://rapidapi.com/apidojo/api/the-fork-the-spoon/",
    "host":"the-fork-the-spoon.p.rapidapi.com",
    "api_list":[
        {
            "name":"restaurants/get-info (Deprecated)",
            "url":"https://the-fork-the-spoon.p.rapidapi.com/restaurants/get-info",
            "description":"Get all available information of specific restaurant",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"id_restaurant",
                    "type":"NUMBER",
                    "description":"The value of data/id field returned in …/restaurants/list endpoint",
                    "default":"522995"
                }
            ],
            "optional_parameters":[
                {
                    "name":"locale",
                    "type":"STRING",
                    "description":"The language code",
                    "default":"en_US"
                }
            ],
            "code":"import requests\n\nurl = \"https://the-fork-the-spoon.p.rapidapi.com/restaurants/get-info\"\nquerystring = {\"locale\": locale, \"id_restaurant\": id_restaurant}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"the-fork-the-spoon.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"restaurants/auto-complete (Deprecated)",
            "url":"https://the-fork-the-spoon.p.rapidapi.com/restaurants/auto-complete",
            "description":"Get suggestion by term or phrase",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"text",
                    "type":"STRING",
                    "description":"City, district,country name, etc any word that you are familiar with",
                    "default":"basara sushi"
                }
            ],
            "optional_parameters":[
                {
                    "name":"latitude",
                    "type":"NUMBER",
                    "description":"The end user's location, used for sorting purpose",
                    "default":""
                },
                {
                    "name":"longitude",
                    "type":"NUMBER",
                    "description":"The end user's location, used for sorting purpose",
                    "default":""
                }
            ],
            "code":"import requests\n\nurl = \"https://the-fork-the-spoon.p.rapidapi.com/restaurants/auto-complete\"\nquerystring = {\"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"the-fork-the-spoon.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"locations/auto-complete (Deprecated)",
            "url":"https://the-fork-the-spoon.p.rapidapi.com/locations/auto-complete",
            "description":"Get suggestion by term or phrase",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"text",
                    "type":"STRING",
                    "description":"City, district,country name, etc any word that you are familiar with",
                    "default":"milan"
                }
            ],
            "optional_parameters":[
                {
                    "name":"latitude",
                    "type":"NUMBER",
                    "description":"The end user's location, used for sorting purpose",
                    "default":""
                },
                {
                    "name":"longitude",
                    "type":"NUMBER",
                    "description":"The end user's location, used for sorting purpose",
                    "default":""
                }
            ],
            "code":"import requests\n\nurl = \"https://the-fork-the-spoon.p.rapidapi.com/locations/auto-complete\"\nquerystring = {\"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"the-fork-the-spoon.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"sale-type-menu/list (Deprecated)",
            "url":"https://the-fork-the-spoon.p.rapidapi.com/sale-type-menu/list",
            "description":"Get menu of specific restaurant",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"id_restaurant",
                    "type":"NUMBER",
                    "description":"The value of data/id field returned in …/restaurants/v2/list endpoint",
                    "default":"522995"
                }
            ],
            "optional_parameters":[
                {
                    "name":"locale",
                    "type":"STRING",
                    "description":"The language code",
                    "default":"en_US"
                }
            ],
            "code":"import requests\n\nurl = \"https://the-fork-the-spoon.p.rapidapi.com/sale-type-menu/list\"\nquerystring = {\"id_restaurant\": id_restaurant, \"locale\": locale}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"the-fork-the-spoon.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"reviews/get-stat",
            "url":"https://the-fork-the-spoon.p.rapidapi.com/reviews/get-stat",
            "description":"Get review stat of specific restaurant",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"id_restaurant",
                    "type":"NUMBER",
                    "description":"The value of data/id field returned in …/restaurants/list endpoint",
                    "default":"522995"
                }
            ],
            "optional_parameters":[
                {
                    "name":"locale",
                    "type":"STRING",
                    "description":"The language code",
                    "default":"en_US"
                }
            ],
            "code":"import requests\n\nurl = \"https://the-fork-the-spoon.p.rapidapi.com/reviews/get-stat\"\nquerystring = {\"id_restaurant\": id_restaurant, \"locale\": locale}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"the-fork-the-spoon.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"reviews/list",
            "url":"https://the-fork-the-spoon.p.rapidapi.com/reviews/list",
            "description":"List reviews of specific restaurant by diners",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"id_restaurant",
                    "type":"NUMBER",
                    "description":"The value of data/id field returned in …/restaurants/v2/list endpoint",
                    "default":"522995"
                }
            ],
            "optional_parameters":[
                {
                    "name":"food_report",
                    "type":"NUMBER",
                    "description":"One of following is allowed 1|0",
                    "default":""
                },
                {
                    "name":"limit",
                    "type":"NUMBER",
                    "description":"For paging purpose",
                    "default":"15"
                },
                {
                    "name":"page",
                    "type":"NUMBER",
                    "description":"For paging purpose",
                    "default":"1"
                },
                {
                    "name":"sort",
                    "type":"STRING",
                    "description":"One of following is allowed AVERAGE&#95;RATING&#95;DESC|AVERAGE&#95;RATING&#95;ASC|MEAL&#95;DATE&#95;DESC|MEAL&#95;DATE&#95;ASC",
                    "default":"MEAL_DATE_DESC"
                },
                {
                    "name":"locale",
                    "type":"STRING",
                    "description":"The language code",
                    "default":"en_US"
                }
            ],
            "code":"import requests\n\nurl = \"https://the-fork-the-spoon.p.rapidapi.com/reviews/list\"\nquerystring = {\"limit\": limit, \"page\": page, \"sort\": sort, \"id_restaurant\": id_restaurant, \"locale\": locale}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"the-fork-the-spoon.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"reviews/list-best",
            "url":"https://the-fork-the-spoon.p.rapidapi.com/reviews/list-best",
            "description":"List all best reviews of specific restaurant by diners",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"id_restaurant",
                    "type":"NUMBER",
                    "description":"The value of data/id field returned in …/restaurants/v2/list endpoint",
                    "default":"522995"
                }
            ],
            "optional_parameters":[
                {
                    "name":"locale",
                    "type":"STRING",
                    "description":"The language code",
                    "default":"en_US"
                }
            ],
            "code":"import requests\n\nurl = \"https://the-fork-the-spoon.p.rapidapi.com/reviews/list-best\"\nquerystring = {\"locale\": locale, \"id_restaurant\": id_restaurant}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"the-fork-the-spoon.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"reviews/v2/list",
            "url":"https://the-fork-the-spoon.p.rapidapi.com/reviews/v2/list",
            "description":"List reviews of specific restaurant by diners",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"restaurantId",
                    "type":"NUMBER",
                    "description":"The value of data/id field returned in …/restaurants/v2/list endpoint",
                    "default":"297409"
                }
            ],
            "optional_parameters":[
                {
                    "name":"withReview",
                    "type":"STRING",
                    "description":"One of the following : WITH_REVIEW|ALL",
                    "default":"WITH_REVIEW"
                },
                {
                    "name":"offset",
                    "type":"NUMBER",
                    "description":"The offset of records to ignore for paging purpose.",
                    "default":"0"
                },
                {
                    "name":"limit",
                    "type":"NUMBER",
                    "description":"For paging purpose",
                    "default":"40"
                },
                {
                    "name":"language",
                    "type":"STRING",
                    "description":"One of the following : en|sv|it|fr|es|nl|de|pt|no|ru|da|lb",
                    "default":""
                },
                {
                    "name":"orderBy",
                    "type":"STRING",
                    "description":"One of following is allowed RATING|MEAL&#95;DATE",
                    "default":"MEAL_DATE"
                },
                {
                    "name":"sortDirection",
                    "type":"STRING",
                    "description":"One of following is allowed ASC|DESC",
                    "default":"DESC"
                },
                {
                    "name":"occasion",
                    "type":"STRING",
                    "description":"One of the following : BUSINESS|FRIENDS|ROMANTIC|FAMILY|ALONE",
                    "default":""
                }
            ],
            "code":"import requests\n\nurl = \"https://the-fork-the-spoon.p.rapidapi.com/reviews/v2/list\"\nquerystring = {\"withReview\": withreview, \"offset\": offset, \"limit\": limit, \"orderBy\": orderby, \"sortDirection\": sortdirection, \"restaurantId\": restaurantid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"the-fork-the-spoon.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"food-report/list (Deprecated)",
            "url":"https://the-fork-the-spoon.p.rapidapi.com/food-report/list",
            "description":"List all available food reported by other diners",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"id_restaurant",
                    "type":"NUMBER",
                    "description":"The value of data/id field returned in …/restaurants/v2/list endpoint",
                    "default":"522995"
                }
            ],
            "optional_parameters":[
                {
                    "name":"locale",
                    "type":"STRING",
                    "description":"The language code",
                    "default":"en_US"
                },
                {
                    "name":"count",
                    "type":"NUMBER",
                    "description":"The number of items returned in each response",
                    "default":"10"
                },
                {
                    "name":"page",
                    "type":"NUMBER",
                    "description":"For paging purpose\n",
                    "default":"1"
                }
            ],
            "code":"import requests\n\nurl = \"https://the-fork-the-spoon.p.rapidapi.com/food-report/list\"\nquerystring = {\"locale\": locale, \"count\": count, \"page\": page, \"id_restaurant\": id_restaurant}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"the-fork-the-spoon.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"sale-type/list (Deprecated)",
            "url":"https://the-fork-the-spoon.p.rapidapi.com/sale-type/list",
            "description":"List all available sale type of specific restaurant",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"id_restaurant",
                    "type":"NUMBER",
                    "description":"The value of data/id field returned in …/restaurants/v2/list endpoint",
                    "default":"522995"
                }
            ],
            "optional_parameters":[
                {
                    "name":"locale",
                    "type":"STRING",
                    "description":"The language code",
                    "default":"en_US"
                }
            ],
            "code":"import requests\n\nurl = \"https://the-fork-the-spoon.p.rapidapi.com/sale-type/list\"\nquerystring = {\"id_restaurant\": id_restaurant, \"locale\": locale}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"the-fork-the-spoon.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"restaurants/v2/list",
            "url":"https://the-fork-the-spoon.p.rapidapi.com/restaurants/v2/list",
            "description":"List restaurants with options and filters",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"queryPlaceValueCityId",
                    "type":"NUMBER",
                    "description":"The value of id_city field returned in …/locations/v2/list endpoint",
                    "default":"348156"
                }
            ],
            "optional_parameters":[
                {
                    "name":"filterPriceStart",
                    "type":"STRING",
                    "description":"Min price of meal",
                    "default":""
                },
                {
                    "name":"queryPlaceValueCoordinatesLatitude",
                    "type":"NUMBER",
                    "description":"The latitude of GEO location to look for around restaurants. Ex : 45.4642035",
                    "default":""
                },
                {
                    "name":"sort",
                    "type":"STRING",
                    "description":"One of following is allowed quality|promotion|price|popularity|avg&#95;rate|new&#95;restaurant",
                    "default":""
                },
                {
                    "name":"queryPromotionOnly",
                    "type":"BOOLEAN",
                    "description":"false/true",
                    "default":""
                },
                {
                    "name":"filterRestaurantTagIdList",
                    "type":"STRING",
                    "description":"Look for suitable value of meta/tagCategories/tags/id returend right in this endpoint, separated by comma for multiple value. Ex : 387,513",
                    "default":""
                },
                {
                    "name":"filterSaleTypeTagIdList",
                    "type":"STRING",
                    "description":"Look for suitable value of meta/filters/saleTypeTag/id returend right in this endpoint, separated by comma for multiple value. Ex : 1,3",
                    "default":""
                },
                {
                    "name":"filterRateStart",
                    "type":"NUMBER",
                    "description":"Min rate",
                    "default":""
                },
                {
                    "name":"filterGroupedPromotion",
                    "type":"STRING",
                    "description":"One of following is allowed 20|25|30|40|50, separated by comma for multiple value. Ex : 20,25,30",
                    "default":""
                },
                {
                    "name":"pageNumber",
                    "type":"NUMBER",
                    "description":"For paging purpose",
                    "default":"1"
                },
                {
                    "name":"queryPlaceValueCoordinatesLongitude",
                    "type":"NUMBER",
                    "description":"The longitude of GEO location to look for around restaurants. Ex : 9.189982",
                    "default":""
                },
                {
                    "name":"pageSize",
                    "type":"NUMBER",
                    "description":"For paging purpose",
                    "default":"10"
                },
                {
                    "name":"filterPriceEnd",
                    "type":"NUMBER",
                    "description":"Max price of meal",
                    "default":""
                }
            ],
            "code":"import requests\n\nurl = \"https://the-fork-the-spoon.p.rapidapi.com/restaurants/v2/list\"\nquerystring = {\"queryPlaceValueCityId\": queryplacevaluecityid, \"pageNumber\": pagenumber, \"pageSize\": pagesize}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"the-fork-the-spoon.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"locations/list (Deprecated)",
            "url":"https://the-fork-the-spoon.p.rapidapi.com/locations/list",
            "description":"List relating locations by Google place id",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"google_place_id",
                    "type":"STRING",
                    "description":"The value of data/geolocation/id/id fields returned in …/locations/auto-complete endpoint",
                    "default":"ChIJ53USP0nBhkcRjQ50xhPN_zw"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://the-fork-the-spoon.p.rapidapi.com/locations/list\"\nquerystring = {\"google_place_id\": google_place_id}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"the-fork-the-spoon.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"locations/v2/list",
            "url":"https://the-fork-the-spoon.p.rapidapi.com/locations/v2/list",
            "description":"List relating locations by Google place id",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"google_place_id",
                    "type":"STRING",
                    "description":"The value of data/geolocation/id/id fields returned in …/locations/auto-complete endpoint",
                    "default":"ChIJu46S-ZZhLxMROG5lkwZ3D7k"
                }
            ],
            "optional_parameters":[
                {
                    "name":"geo_text",
                    "type":"STRING",
                    "description":"The value of 'text' fields returned in .../locations/v2/auto-complete endpoint",
                    "default":"Roma, Metropolitan City of Rome, Italy"
                },
                {
                    "name":"geo_ref",
                    "type":"BOOLEAN",
                    "description":"",
                    "default":"false"
                },
                {
                    "name":"geo_type",
                    "type":"STRING",
                    "description":"The value of 'type' fields returned in .../locations/v2/auto-complete",
                    "default":"locality"
                }
            ],
            "code":"import requests\n\nurl = \"https://the-fork-the-spoon.p.rapidapi.com/locations/v2/list\"\nquerystring = {\"geo_text\": geo_text, \"geo_ref\": geo_ref, \"google_place_id\": google_place_id, \"geo_type\": geo_type}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"the-fork-the-spoon.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"locations/v2/auto-complete",
            "url":"https://the-fork-the-spoon.p.rapidapi.com/locations/v2/auto-complete",
            "description":"Get suggestion for locations by term or phrase",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"text",
                    "type":"STRING",
                    "description":"City, district,country name, etc any word that you are familiar with",
                    "default":"milan"
                }
            ],
            "optional_parameters":[
                {
                    "name":"longitude",
                    "type":"NUMBER",
                    "description":"The end user's location, used for sorting purpose",
                    "default":""
                },
                {
                    "name":"latitude",
                    "type":"NUMBER",
                    "description":"The end user's location, used for sorting purpose",
                    "default":""
                }
            ],
            "code":"import requests\n\nurl = \"https://the-fork-the-spoon.p.rapidapi.com/locations/v2/auto-complete\"\nquerystring = {\"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"the-fork-the-spoon.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"restaurants/v2/get-info",
            "url":"https://the-fork-the-spoon.p.rapidapi.com/restaurants/v2/get-info",
            "description":"Get all available information of specific restaurant",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"restaurantId",
                    "type":"STRING",
                    "description":"The value of data/id field returned in …/restaurants/v2/list endpoint",
                    "default":"522995"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://the-fork-the-spoon.p.rapidapi.com/restaurants/v2/get-info\"\nquerystring = {\"restaurantId\": restaurantid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"the-fork-the-spoon.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"restaurants/list (Deprecated)",
            "url":"https://the-fork-the-spoon.p.rapidapi.com/restaurants/list",
            "description":"List restaurants with options and filters",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"queryPlaceValueCityId",
                    "type":"NUMBER",
                    "description":"The value of id_city field returned in …/locations/list endpoint",
                    "default":"348156"
                }
            ],
            "optional_parameters":[
                {
                    "name":"sort",
                    "type":"STRING",
                    "description":"One of following is allowed quality|promotion|price|popularity|avg&#95;rate|new&#95;restaurant",
                    "default":""
                },
                {
                    "name":"pageSize",
                    "type":"NUMBER",
                    "description":"For paging purpose",
                    "default":"10"
                },
                {
                    "name":"filterSaleTypeTagIdList",
                    "type":"STRING",
                    "description":"Look for suitable value of meta/filters/saleTypeTag/id returend right in this endpoint, separated by comma for multiple value. Ex : 1,3",
                    "default":""
                },
                {
                    "name":"queryPlaceValueCoordinatesLatitude",
                    "type":"NUMBER",
                    "description":"The latitude of GEO location to look for around restaurants. Ex : 45.4642035",
                    "default":""
                },
                {
                    "name":"pageNumber",
                    "type":"NUMBER",
                    "description":"For paging purpose",
                    "default":"1"
                },
                {
                    "name":"queryPlaceValueCoordinatesLongitude",
                    "type":"NUMBER",
                    "description":"The longitude of GEO location to look for around restaurants. Ex : 9.189982",
                    "default":""
                },
                {
                    "name":"filterRestaurantTagIdList",
                    "type":"STRING",
                    "description":"Look for suitable value of meta/tagCategories/tags/id returend right in this endpoint, separated by comma for multiple value. Ex : 387,513",
                    "default":""
                },
                {
                    "name":"filterPriceEnd",
                    "type":"NUMBER",
                    "description":"Max price of meal",
                    "default":""
                },
                {
                    "name":"filterPriceStart",
                    "type":"STRING",
                    "description":"Min price of meal",
                    "default":""
                },
                {
                    "name":"filterGroupedPromotion",
                    "type":"STRING",
                    "description":"One of following is allowed 20|25|30|40|50, separated by comma for multiple value. Ex : 20,25,30",
                    "default":""
                },
                {
                    "name":"queryPromotionOnly",
                    "type":"BOOLEAN",
                    "description":"false/true",
                    "default":""
                },
                {
                    "name":"filterRateStart",
                    "type":"NUMBER",
                    "description":"Min rate",
                    "default":""
                }
            ],
            "code":"import requests\n\nurl = \"https://the-fork-the-spoon.p.rapidapi.com/restaurants/list\"\nquerystring = {\"pageSize\": pagesize, \"pageNumber\": pagenumber, \"queryPlaceValueCityId\": queryplacevaluecityid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"the-fork-the-spoon.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"restaurants/v2/auto-complete",
            "url":"https://the-fork-the-spoon.p.rapidapi.com/restaurants/v2/auto-complete",
            "description":"Get suggestion for restaurants by term or phrase",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"text",
                    "type":"STRING",
                    "description":"City, district,country name, etc any word that you are familiar with",
                    "default":"basara sushi"
                }
            ],
            "optional_parameters":[
                {
                    "name":"longitude",
                    "type":"NUMBER",
                    "description":"The end user's location, used for sorting purpose",
                    "default":""
                },
                {
                    "name":"latitude",
                    "type":"NUMBER",
                    "description":"The end user's location, used for sorting purpose",
                    "default":""
                }
            ],
            "code":"import requests\n\nurl = \"https://the-fork-the-spoon.p.rapidapi.com/restaurants/v2/auto-complete\"\nquerystring = {\"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"the-fork-the-spoon.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        }
    ]
}