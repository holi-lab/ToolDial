{
    "tool_name": "Edamam Food and Grocery Database",
    "tool_description": "This API provides you with tools to find nutrition and diet data for generic foods, packaged foods and restaurant meals. In addition it employs NLP (Natural Language Processing) which allows for extraction of food entities from unstructured text.   \n\nCovered Use Cases: \n    -Search for a food by keyword, food name or UPC/Barcode \n    -Sourcing of nutrition facts for a given food, including: macro and micro nutrients, allergen labels, lifestyle and health labels \n    -Search for a food by give...",
    "title": "Edamam Food and Grocery Database",
    "pricing": "FREEMIUM",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 856,
        "avgSuccessRate": 99,
        "popularityScore": 9.9,
        "__typename": "Score"
    },
    "home_url": "https://rapidapi.com/edamam/api/edamam-food-and-grocery-database/",
    "host": "edamam-food-and-grocery-database.p.rapidapi.com",
    "api_list": [
        {
            "name": "/api/food-database/v2/nutrients",
            "url": "https://edamam-food-and-grocery-database.p.rapidapi.com/api/food-database/v2/nutrients",
            "description": "In the response to your parser request you receive the a food ID for each database match. Using the food ID and the measure URI, which parser provides, you can make a request to the nutrients access point. The nutrients access points returns nutrition with diet and health labels for a given quantity of the food.\n \n <b>Access Point:</b> https://api.edamam.com/api/food-database/v2/nutrients",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://edamam-food-and-grocery-database.p.rapidapi.com/api/food-database/v2/nutrients\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"edamam-food-and-grocery-database.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/api/food-database/v2/parser",
            "url": "https://edamam-food-and-grocery-database.p.rapidapi.com/api/food-database/v2/parser",
            "description": "The parser access point handles text search for foods as well as filters for the foods like presence specific nutrient content or exclusion of allergens. <ul> <li>Search for a phrase or keyword using NLP to get food entities from it.</li> <li> Get basic nutrition facts and ingredients for each food </li> <li> Search for food by given nutrient quantity for 28 nutrients </li> <li> Search for foods within a given brand </li> <li> With the build in food-logging context it allows for requests which do not contain quantity and suggest expected quantities for them. </li> </ul>\n \n <b>Access Point:</b> https://api.edamam.com/api/food-database/v2/parser",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "nutrients[WATER]",
                    "type": "STRING",
                    "description": "Water. Unit: g. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[K]",
                    "type": "STRING",
                    "description": "Potassium, K. Unit: mg. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[SUGAR.added]",
                    "type": "STRING",
                    "description": "Sugars, added. Unit: g. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[FIBTG]",
                    "type": "STRING",
                    "description": "Fiber, total dietary. Unit: g. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[VITK1]",
                    "type": "STRING",
                    "description": "Vitamin K (phylloquinone). Unit: \u00b5g. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[THIA]",
                    "type": "STRING",
                    "description": "Thiamin. Unit: mg. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[FOLAC]",
                    "type": "STRING",
                    "description": "Folic acid. Unit: \u00b5g. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[SUGAR]",
                    "type": "STRING",
                    "description": "Sugars, total. Unit: g. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[VITC]",
                    "type": "STRING",
                    "description": "Vitamin C, total ascorbic acid. Unit: mg. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[RIBF]",
                    "type": "STRING",
                    "description": "Riboflavin. Unit: mg. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[CHOCDF.net]",
                    "type": "STRING",
                    "description": "Carbohydrates (net). Unit: g. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[CHOCDF]",
                    "type": "STRING",
                    "description": "Carbohydrate, by difference. Unit: g. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[VITD]",
                    "type": "STRING",
                    "description": "Vitamin D (D2 + D3). Unit: \u00b5g. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "ingr",
                    "type": "STRING",
                    "description": "A keyword search parameter to be found in the food name. <b>REQUIRED</b> if 'upc' <b>and</b> 'brand' are not specified. <b>NOT REQUIRED</b> if 'brand' is specified. <b>DO NOT POPULATE</b> if 'upc' is specified.",
                    "default": ""
                },
                {
                    "name": "nutrition-type",
                    "type": "STRING",
                    "description": "Select between cooking and food logging processor.",
                    "default": "cooking"
                },
                {
                    "name": "nutrients[FOLDFE]",
                    "type": "STRING",
                    "description": "Folate, DFE. Unit: \u00b5g. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[TOCPHA]",
                    "type": "STRING",
                    "description": "Vitamin E (alpha-tocopherol). Unit: mg. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[MG]",
                    "type": "STRING",
                    "description": "Magnesium. Unit: mg. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[CHOLE]",
                    "type": "STRING",
                    "description": "Cholesterol. Unit: mg. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br>See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[FAT]",
                    "type": "STRING",
                    "description": "Total lipid (fat). Unit: g. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[PROCNT]",
                    "type": "STRING",
                    "description": "Protein. Unit: g. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[FE]",
                    "type": "STRING",
                    "description": "Iron, Fe. Unit: mg. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "category",
                    "type": "ARRAY",
                    "description": "Categories",
                    "default": "[\n  \"generic-foods\"\n]"
                },
                {
                    "name": "nutrients[FATRN]",
                    "type": "STRING",
                    "description": "Fatty acids, total trans. Unit: g. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "calories",
                    "type": "STRING",
                    "description": "The format is calories=RANGE where RANGE is replaced by the value in kcal. RANGE is in one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative integer numbers. The + symbol needs to be properly encoded. Examples: \u201ccalories=100-300\u201d will return all recipes with which have between 100 and 300 kcal per serving.",
                    "default": ""
                },
                {
                    "name": "upc",
                    "type": "STRING",
                    "description": "Valid UPC, EAN, or PLU code. <b>REQUIRED</b> if neither 'ingr' <b>nor</b> 'brand' are specified. <b>DO NOT POPULATE</b> otherwise.",
                    "default": ""
                },
                {
                    "name": "nutrients[VITB6A]",
                    "type": "STRING",
                    "description": "Vitamin B6. Unit: mg. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[FAMS]",
                    "type": "STRING",
                    "description": "Fatty acids, total monounsaturated. Unit: g. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[ENERC_KCAL]",
                    "type": "STRING",
                    "description": "Energy. Unit: kcal. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[FASAT]",
                    "type": "STRING",
                    "description": "Fatty acids, total saturated. Unit: g. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[NA]",
                    "type": "STRING",
                    "description": "Sodium, Na. Unit: mg. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[P]",
                    "type": "STRING",
                    "description": "Phosphorus, P. Unit: mg. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[FAPU]",
                    "type": "STRING",
                    "description": "Fatty acids, total polyunsaturated. Unit: g. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[CA]",
                    "type": "STRING",
                    "description": "Calcium, Ca. Unit: mg. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> For example: nutrients[CA]=50+ means minimum 50mg calcium, where \u201850+\u2019 has to be properly encoded as \u201850%2B\u2019 nutrients[FAT]=30 means maximum 30g fat and nutrients[FE]=5-10 means iron between 5mg and 10mg inclusive",
                    "default": ""
                },
                {
                    "name": "nutrients[VITB12]",
                    "type": "STRING",
                    "description": "Vitamin B12. Unit: \u00b5g. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[ZN]",
                    "type": "STRING",
                    "description": "Zinc, Zn. Unit: mg. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "health",
                    "type": "ARRAY",
                    "description": "Health label",
                    "default": "[\n  \"alcohol-free\"\n]"
                },
                {
                    "name": "nutrients[NIA]",
                    "type": "STRING",
                    "description": "Niacin. Unit: mg. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "brand",
                    "type": "STRING",
                    "description": "A keyword search parameter to be found in the food's brand. <b>REQUIRED</b> if 'ingr' <b>and</b> 'upc' are not specified. <b>NOT REQUIRED</b> if 'ingr' is specified. <b>DO NOT POPULATE</b> if 'upc' is specified.",
                    "default": ""
                },
                {
                    "name": "nutrients[VITA_RAE]",
                    "type": "STRING",
                    "description": "Vitamin A, RAE. Unit: \u00b5g. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[FOLFD]",
                    "type": "STRING",
                    "description": "Folate (food). Unit: \u00b5g. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                },
                {
                    "name": "nutrients[Sugar.alcohol]",
                    "type": "STRING",
                    "description": "Sugar alcohols. Unit: g. Input the range which is one of MIN+, MIN-MAX or MAX, where MIN and MAX are non-negative floating point numbers. <br> <br> See calcium for an example for how to fill in the range.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://edamam-food-and-grocery-database.p.rapidapi.com/api/food-database/v2/parser\"\nquerystring = {\"nutrition-type\": nutrition_type, \"category\": category, \"health\": health}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"edamam-food-and-grocery-database.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/auto-complete",
            "url": "https://edamam-food-and-grocery-database.p.rapidapi.com/auto-complete",
            "description": "Edamam provides a convenient autocomplete functionality which can be implemented for use when searching for ingredients. Just send in the current query as the \"q\" parameter and the number of suggestions you wish to receive as the \"limit\" parameter. \n \n <b>Access Point:</b> https://api.edamam.com/auto-complete",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "Query text. For example q=chi. This or the r parameter are required",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "response limit",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://edamam-food-and-grocery-database.p.rapidapi.com/auto-complete\"\nquerystring = {\"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"edamam-food-and-grocery-database.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/api/food-database/v2/nutrients",
            "url": "https://edamam-food-and-grocery-database.p.rapidapi.com/api/food-database/v2/nutrients",
            "description": "In the response to your parser request you receive the a food ID for each database match. Using the food ID and the measure URI, which parser provides, you can make a request to the nutrients access point. The nutrients access points returns nutrition with diet and health labels for a given quantity of the food.\n \n <b>Access Point:</b> https://api.edamam.com/api/food-database/v2/nutrients",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://edamam-food-and-grocery-database.p.rapidapi.com/api/food-database/v2/nutrients\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"edamam-food-and-grocery-database.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://edamam-food-and-grocery-database.p.rapidapi.com/api/food-database/v2/nutrients\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"edamam-food-and-grocery-database.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        }
    ]
}