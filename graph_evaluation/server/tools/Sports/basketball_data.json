{
    "tool_name":"Basketball Data",
    "tool_description":"Broadage Basketball API can deliver any type of data for a basketball match, tournament or team; including livescores, play-by-play, boxscore, match statistics & many more. Our Basketball Coverage includes 100+ tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.  <br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=soccer_api\" target=”_blank”>Please, click here to start your Free Trial and try the endpoints with live data now!</a>",
    "title":"Basketball Data",
    "pricing":"FREE",
    "score":{
        "avgServiceLevel":100,
        "avgLatency":26,
        "avgSuccessRate":100,
        "popularityScore":9.7,
        "__typename":"Score"
    },
    "home_url":"https://rapidapi.com/BroadageSports/api/basketball-data/",
    "host":"basketball-data.p.rapidapi.com",
    "api_list":[
        {
            "name":"Tournament Info",
            "url":"https://basketball-data.p.rapidapi.com/tournament/info",
            "description":"Current season, stage structure(divisions,conferences etc.), country and many more information about a tournament.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"tournamentId",
                    "type":"NUMBER",
                    "description":"The id of the tournament.",
                    "default":"89"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/tournament/info\"\nquerystring = {\"tournamentId\": tournamentid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Tournament List",
            "url":"https://basketball-data.p.rapidapi.com/tournament/list",
            "description":"List of tournaments in your data coverage.",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/tournament/list\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Tournament Teams",
            "url":"https://basketball-data.p.rapidapi.com/tournament/teams",
            "description":"List of teams participating in a specific tournament.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"tournamentId",
                    "type":"NUMBER",
                    "description":"The id of the tournament.",
                    "default":"89"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/tournament/teams\"\nquerystring = {\"tournamentId\": tournamentid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Daily Match List-Results",
            "url":"https://basketball-data.p.rapidapi.com/match/list/results",
            "description":"Daily match list including finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"date",
                    "type":"STRING",
                    "description":"The date of the matches. The format is {dd/MM/yyyy}. Data can be retrieved for only ± 7 days.",
                    "default":"29/01/2021"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/match/list/results\"\nquerystring = {\"date\": date}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Match Game Leaders",
            "url":"https://basketball-data.p.rapidapi.com/match/gameleaders",
            "description":"Live points, rebounds and assists leaderboards of the game for triple-double hunting.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"348276"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/match/gameleaders\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Match Statistics",
            "url":"https://basketball-data.p.rapidapi.com/match/statistics",
            "description":"Live in match team statistics for each team in a match.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"348276"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/match/statistics\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Rebound Leaderboard",
            "url":"https://basketball-data.p.rapidapi.com/tournament/leaderboard/rebound",
            "description":"Rebounds-per-game leaders of the competition supported with player stats.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"tournamentId",
                    "type":"NUMBER",
                    "description":"The id of the tournament.",
                    "default":"89"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/tournament/leaderboard/rebound\"\nquerystring = {\"tournamentId\": tournamentid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Team Schedule",
            "url":"https://basketball-data.p.rapidapi.com/team/schedule",
            "description":"Team fixtures by all the tournaments a team participates.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"teamId",
                    "type":"NUMBER",
                    "description":"The id of the team.",
                    "default":"1442"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/team/schedule\"\nquerystring = {\"teamId\": teamid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Assist Leaderboard",
            "url":"https://basketball-data.p.rapidapi.com/tournament/leaderboard/assist",
            "description":"Assists-per-game leaders of the competition supported with player stats.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"tournamentId",
                    "type":"NUMBER",
                    "description":"The id of the tournament.",
                    "default":"89"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/tournament/leaderboard/assist\"\nquerystring = {\"tournamentId\": tournamentid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Daily Match List-Live",
            "url":"https://basketball-data.p.rapidapi.com/match/list/live",
            "description":"Daily match list including live matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"date",
                    "type":"STRING",
                    "description":"The date of the matches. The format is {dd/MM/yyyy}. Data can be retrieved for only ± 7 days.",
                    "default":"29/01/2021"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/match/list/live\"\nquerystring = {\"date\": date}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Match Summary",
            "url":"https://basketball-data.p.rapidapi.com/match/summary",
            "description":"Basic summary about the match that includes match scores, match status, team names, venue, and round info.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"348276"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/match/summary\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Team Squad",
            "url":"https://basketball-data.p.rapidapi.com/team/squad",
            "description":"List of players in a team.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"teamId",
                    "type":"NUMBER",
                    "description":"The id of the team.",
                    "default":"1442"
                }
            ],
            "optional_parameters":[
                {
                    "name":"tournamentId",
                    "type":"NUMBER",
                    "description":"The id of the tournament. Tournament id is optional for club teams. However, it is required for national teams.\n",
                    "default":""
                }
            ],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/team/squad\"\nquerystring = {\"teamId\": teamid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Daily Match List-All",
            "url":"https://basketball-data.p.rapidapi.com/match/list",
            "description":"Daily match list including scheduled, live and finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"date",
                    "type":"STRING",
                    "description":"The date of the matches. The format is {dd/MM/yyyy}.  Data can be retrieved for only ± 7 days.",
                    "default":"29/01/2021"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/match/list\"\nquerystring = {\"date\": date}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Daily Match List-Scheduled",
            "url":"https://basketball-data.p.rapidapi.com/match/list/scheduled",
            "description":"Daily match list including scheduled matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"date",
                    "type":"STRING",
                    "description":"The date of the match. The format is {dd/MM/yyyy}. Data can be retrieved for only ± 7 days.",
                    "default":"30/01/2021"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/match/list/scheduled\"\nquerystring = {\"date\": date}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Tournament Standings",
            "url":"https://basketball-data.p.rapidapi.com/tournament/standings",
            "description":"Team rankings for a specific competition.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"tournamentId",
                    "type":"NUMBER",
                    "description":"The id of the tournament.",
                    "default":"89"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/tournament/standings\"\nquerystring = {\"tournamentId\": tournamentid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Point Leaderboard",
            "url":"https://basketball-data.p.rapidapi.com/tournament/leaderboard/point",
            "description":"Points-per-game leaders of the competition supported with player stats.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"tournamentId",
                    "type":"NUMBER",
                    "description":"The id of the tournament.",
                    "default":"89"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/tournament/leaderboard/point\"\nquerystring = {\"tournamentId\": tournamentid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Result Statistics",
            "url":"https://basketball-data.p.rapidapi.com/h2h/match/statistics/result/points",
            "description":"Provides the result list of the last 20 matches between the two teams in overall, with home and away filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"335024"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/h2h/match/statistics/result/points\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Recent Match List",
            "url":"https://basketball-data.p.rapidapi.com/h2h/match/list/recent",
            "description":"Provides the result list of the last 20 matches between the two teams in overall, with home and away filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"350279"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/h2h/match/list/recent\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Tournament Fixture",
            "url":"https://basketball-data.p.rapidapi.com/tournament/fixture",
            "description":"Full match list with quarter, half time and final scores with venue info.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"tournamentId",
                    "type":"NUMBER",
                    "description":"The id of the tournament.",
                    "default":"89"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/tournament/fixture\"\nquerystring = {\"tournamentId\": tournamentid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Seasonal Statistics: Quarter Analysis",
            "url":"https://basketball-data.p.rapidapi.com/h2h/team/quarter-analysis/seasonal",
            "description":"Provides the seasonal quater analysis and statistics of the team in the tournament.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"teamId",
                    "type":"NUMBER",
                    "description":"The id of the team.",
                    "default":"1442"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/h2h/team/quarter-analysis/seasonal\"\nquerystring = {\"teamId\": teamid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Seasonal Market Statistics: Points",
            "url":"https://basketball-data.p.rapidapi.com/h2h/team/statistics/market/seasonal/points",
            "description":"Provides the seasonal market points statistics of the team in the tournament.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"teamId",
                    "type":"NUMBER",
                    "description":"The id of the team.",
                    "default":"1442"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/h2h/team/statistics/market/seasonal/points\"\nquerystring = {\"teamId\": teamid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Match Margins",
            "url":"https://basketball-data.p.rapidapi.com/h2h/team/match-margins",
            "description":"Provides the average match margin statistics of the team in the tournament.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"teamId",
                    "type":"NUMBER",
                    "description":"The id of the team.",
                    "default":"1442"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/h2h/team/match-margins\"\nquerystring = {\"teamId\": teamid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Market Statistics (Points)",
            "url":"https://basketball-data.p.rapidapi.com/h2h/match/statistics/market/points",
            "description":"Provides the market points statistics which are “First Quarter Result”, “Highest Scoring Quarter” and also “Ordinary/Half Time Winning Margins” for both two teams against the other teams in the tournament.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"350279"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/h2h/match/statistics/market/points\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Quarter Analysis",
            "url":"https://basketball-data.p.rapidapi.com/h2h/match/quarter-analysis",
            "description":"Provides the analyst data for each quarters including Quarter Winning Avereages, Quarter Winning Counts, Quarter Winning Percentages with home team / away team filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"350279"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/h2h/match/quarter-analysis\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Seasonal Advanced Team Statistics",
            "url":"https://basketball-data.p.rapidapi.com/h2h/match/statistics/seasonal/teams-advanced",
            "description":"Provides the season-wide advanced team statistics with home team / away team filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"335024"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/h2h/match/statistics/seasonal/teams-advanced\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Under / Over Analysis",
            "url":"https://basketball-data.p.rapidapi.com/h2h/match/under-over-analysis",
            "description":"Provides the under/over score analysis and statistics with the home/away team filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**\n\nP.S.\nFull data is available at Under / Over Analysis endpoint but can not be shown in mock response.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"350279"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/h2h/match/under-over-analysis\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Match Boxscore",
            "url":"https://basketball-data.p.rapidapi.com/match/boxscore",
            "description":"Live, detailed team and player statistics.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"350275"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/match/boxscore\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Match Play by Play",
            "url":"https://basketball-data.p.rapidapi.com/match/playbyplay",
            "description":"Live match events with scores.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"350275"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/match/playbyplay\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Seasonal Statistics: Points",
            "url":"https://basketball-data.p.rapidapi.com/h2h/team/statistics/seasonal/points",
            "description":"Provides the points statistics of the team in the tournament.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"teamId",
                    "type":"NUMBER",
                    "description":"The id of the team.",
                    "default":"1442"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/h2h/team/statistics/seasonal/points\"\nquerystring = {\"teamId\": teamid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        }
    ]
}