{
    "tool_name":"Soccer Data",
    "tool_description":"Broadage Soccer API brings a wide range of data for Soccer in fixtures, livescores, standings and many more. Team, tournament or match, retrieve real time data for any perspective you need. Our Soccer Coverage includes 350+ tournaments from all around the world with in-depth coverage, giving the chance to present the best sports data from users located anywhere. <br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=soccer_api\" target=”_blank”>Please, click here to start your Free Trial and try the endpoints with live data now!</a>",
    "title":"Soccer Data",
    "pricing":"FREE",
    "score":{
        "avgServiceLevel":100,
        "avgLatency":33,
        "avgSuccessRate":100,
        "popularityScore":9.6,
        "__typename":"Score"
    },
    "home_url":"https://rapidapi.com/BroadageSports/api/soccer-data/",
    "host":"soccer-data.p.rapidapi.com",
    "api_list":[
        {
            "name":"Red Card Leaderboard",
            "url":"https://soccer-data.p.rapidapi.com/tournament/leaderboard/red",
            "description":"List of players shown most red cards of the competition supported with player stats.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"tournamentId",
                    "type":"NUMBER",
                    "description":"The id of the tournament.",
                    "default":"14"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/tournament/leaderboard/red\"\nquerystring = {\"tournamentId\": tournamentid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Team Squad",
            "url":"https://soccer-data.p.rapidapi.com/team/squad",
            "description":"List of players in a team.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"teamId",
                    "type":"NUMBER",
                    "description":"The id of the team.",
                    "default":"803"
                }
            ],
            "optional_parameters":[
                {
                    "name":"tournamentId",
                    "type":"NUMBER",
                    "description":"The id of the tournament. Tournament id is optional for club teams. However, it is required for national teams.\n",
                    "default":""
                }
            ],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/team/squad\"\nquerystring = {\"teamId\": teamid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Daily Match List-Results",
            "url":"https://soccer-data.p.rapidapi.com/match/list/results",
            "description":"Daily match list including finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"date",
                    "type":"STRING",
                    "description":"Date of the match. The format is {dd/MM/yyyy}.",
                    "default":"29/01/2021"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/match/list/results\"\nquerystring = {\"date\": date}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Daily Match List-All",
            "url":"https://soccer-data.p.rapidapi.com/match/list",
            "description":"Daily match list including scheduled, live and finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"date",
                    "type":"STRING",
                    "description":"Date of the match. The format is {dd/MM/yyyy}. ",
                    "default":"29/01/2021"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/match/list\"\nquerystring = {\"date\": date}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Yellow Card Leaderboard",
            "url":"https://soccer-data.p.rapidapi.com/tournament/leaderboard/yellow",
            "description":"List of players shown most yellow cards of the competition supported with player stats.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"tournamentId",
                    "type":"NUMBER",
                    "description":"The id of the tournament.",
                    "default":"14"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/tournament/leaderboard/yellow\"\nquerystring = {\"tournamentId\": tournamentid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Tournament Teams",
            "url":"https://soccer-data.p.rapidapi.com/tournament/teams",
            "description":"List of teams participating in a specific tournament.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"tournamentId",
                    "type":"NUMBER",
                    "description":"The id of the tournament.",
                    "default":"14"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/tournament/teams\"\nquerystring = {\"tournamentId\": tournamentid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Tournament Info",
            "url":"https://soccer-data.p.rapidapi.com/tournament/info",
            "description":"Current season, stage structure(groups,knockout stages etc.), country and many more information about a tournament.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"tournamentId",
                    "type":"NUMBER",
                    "description":"The id of the tournament.",
                    "default":"14"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/tournament/info\"\nquerystring = {\"tournamentId\": tournamentid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Daily Match List-Scheduled",
            "url":"https://soccer-data.p.rapidapi.com/match/list/scheduled",
            "description":"Daily match list including scheduled matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"date",
                    "type":"STRING",
                    "description":"Date of the match. The format is {dd/MM/yyyy}.",
                    "default":"29/01/2021"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/match/list/scheduled\"\nquerystring = {\"date\": date}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Goal Leaderboard",
            "url":"https://soccer-data.p.rapidapi.com/tournament/leaderboard/goal",
            "description":"Top scorers of the competition supported with player stats.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"tournamentId",
                    "type":"NUMBER",
                    "description":"The id of the tournament.",
                    "default":"14"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/tournament/leaderboard/goal\"\nquerystring = {\"tournamentId\": tournamentid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Match Events",
            "url":"https://soccer-data.p.rapidapi.com/match/event/basic",
            "description":"Goals, yellow cards, red cards and substitutions in a match.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"1452172"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/match/event/basic\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Tournament Standings",
            "url":"https://soccer-data.p.rapidapi.com/tournament/standings",
            "description":"Team Rankings for a specific competition.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"tournamentId",
                    "type":"NUMBER",
                    "description":"The id of the tournament.",
                    "default":"14"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/tournament/standings\"\nquerystring = {\"tournamentId\": tournamentid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Team Squad with Stats",
            "url":"https://soccer-data.p.rapidapi.com/team/squad/stats",
            "description":"List of players in a team with their respective stats.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"teamId",
                    "type":"NUMBER",
                    "description":"The id of the team.",
                    "default":"803"
                }
            ],
            "optional_parameters":[
                {
                    "name":"tournamentId",
                    "type":"NUMBER",
                    "description":"The id of the tournament. Tournament id is optional for club teams. However, it is required  for National Teams.",
                    "default":""
                }
            ],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/team/squad/stats\"\nquerystring = {\"teamId\": teamid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Team Schedule",
            "url":"https://soccer-data.p.rapidapi.com/team/schedule",
            "description":"Team fixtures by all the tournaments a team participates.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"teamId",
                    "type":"NUMBER",
                    "description":"The id of the team.",
                    "default":"803"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/team/schedule\"\nquerystring = {\"teamId\": teamid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Match Events-All",
            "url":"https://soccer-data.p.rapidapi.com/match/event/all",
            "description":"All of the events occuring in a match.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"1452172"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/match/event/all\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Daily Match List-Live",
            "url":"https://soccer-data.p.rapidapi.com/match/list/live",
            "description":"Daily match list including live matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"date",
                    "type":"STRING",
                    "description":"Date of the match. The format is {dd/MM/yyyy}.",
                    "default":"29/01/2021"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/match/list/live\"\nquerystring = {\"date\": date}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Match Commentary",
            "url":"https://soccer-data.p.rapidapi.com/match/commentary",
            "description":"Live event based commentary with texts and events.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"1487647"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/match/commentary\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Missing Player List",
            "url":"https://soccer-data.p.rapidapi.com/match/missing-players-list",
            "description":"List of injured and suspended players for the matches in a specific date.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today +- 7 days.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"date",
                    "type":"STRING",
                    "description":"Date of the matches. The format is \t{dd/MM/yyyy}.",
                    "default":"14/04/2021"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/match/missing-players-list\"\nquerystring = {\"date\": date}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Match Lineup",
            "url":"https://soccer-data.p.rapidapi.com/match/lineup",
            "description":"Team lineups, formations and head coaches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"1452172"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/match/lineup\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Match Statistics",
            "url":"https://soccer-data.p.rapidapi.com/match/statistics",
            "description":"Live in match team statistics for each team in a match.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"1456548"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/match/statistics\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Match Summary",
            "url":"https://soccer-data.p.rapidapi.com/match/summary",
            "description":"Match scores, match status, team names, stadium, referee and weather forecast.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"1456548"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/match/summary\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Seasonal Market Statistics: Goals",
            "url":"https://soccer-data.p.rapidapi.com/h2h/team/statistics/market/seasonal/goals",
            "description":"Provides under/over, both team to score and also total goals statistics of the team in the tournament.\n\nP.S.\nFull data is available at Seasonal Market Statistics: Goals endpoint but can not be shown in mock response.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"teamId",
                    "type":"NUMBER",
                    "description":"The id of the team.",
                    "default":"803"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/h2h/team/statistics/market/seasonal/goals\"\nquerystring = {\"teamId\": teamid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Market Tables: Under/Over",
            "url":"https://soccer-data.p.rapidapi.com/h2h/tournament/standings/under-over",
            "description":"Provides under/over statistics of the teams in the tournament, ordered by the tournament standings.\n\nP.S.\nFull data is available at Market Tables: Under/Over endpoint but can not be shown in mock response.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"tournamentId",
                    "type":"NUMBER",
                    "description":"The id of the tournament.",
                    "default":"14"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/h2h/tournament/standings/under-over\"\nquerystring = {\"tournamentId\": tournamentid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Market Tables: Total Goals",
            "url":"https://soccer-data.p.rapidapi.com/h2h/tournament/standings/total-goals",
            "description":"Provides total goals statistics of the teams in the tournament, ordered by the tournament standings.\n\nP.S.\nFull data is available at Market Tables: Total Goals endpoint but can not be shown in mock response.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"tournamentId",
                    "type":"NUMBER",
                    "description":"The id of the tournament.",
                    "default":"14"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/h2h/tournament/standings/total-goals\"\nquerystring = {\"tournamentId\": tournamentid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Market Tables: Both Teams to Score",
            "url":"https://soccer-data.p.rapidapi.com/h2h/tournament/standings/both-teams-to-score",
            "description":"Provides both team to score statistics of the teams in the tournament, ordered by the tournament standings.\n\nP.S.\nFull data is available at Market Tables: Both Teams to Score endpoint but can not be shown in mock response.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"tournamentId",
                    "type":"NUMBER",
                    "description":"The id of the tournament.",
                    "default":"14"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/h2h/tournament/standings/both-teams-to-score\"\nquerystring = {\"tournamentId\": tournamentid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Referee Statistics",
            "url":"https://soccer-data.p.rapidapi.com/h2h/match/referee",
            "description":"Provides the information about referee and his/her statistics.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"1452254"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/h2h/match/referee\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Goal Analysis: Scoring First in Between",
            "url":"https://soccer-data.p.rapidapi.com/h2h/match/goal-analysis/scoring-first-between",
            "description":"Provides the scoring first goal statistics of the teams between in the minutes intervals(0-10, 11-20, 21-30...etc.)\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"1452254"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/h2h/match/goal-analysis/scoring-first-between\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Seasonal Goal Analysis: Goal Conceded Minutes",
            "url":"https://soccer-data.p.rapidapi.com/h2h/match/goal-analysis/goal-conceded-minutes/seasonal",
            "description":"Provides the goal conceded goal statistics of the teams against to other teams in the tournament in the minutes intervals(0-10, 11-20, 21-30...etc.)",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"1452254"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/h2h/match/goal-analysis/goal-conceded-minutes/seasonal\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Seasonal Goal Analysis: Goal Minutes",
            "url":"https://soccer-data.p.rapidapi.com/h2h/match/goal-analysis/goal-minutes/seasonal",
            "description":"Provides the goals statistics of the teams against to the other teams(in tournament) in the minutes intervals(0-10, 11-20, 21-30...etc.)\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"1452254"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/h2h/match/goal-analysis/goal-minutes/seasonal\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Recent Match List",
            "url":"https://soccer-data.p.rapidapi.com/h2h/match/list/recent",
            "description":"Provides the result list of the last 20 matches between the two teams in overall, with home and away filters.\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.\n\nP.S.\nFull data is available at Recent Match List endpoint but can not be shown in mock response.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"1452254"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/h2h/match/list/recent\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Market Statistics: Goals",
            "url":"https://soccer-data.p.rapidapi.com/h2h/match/statistics/market/goals",
            "description":"Provides the market goals statistics which are “Both Teams to Score”, “Under/Over” and also “Total Goals” for both two teams against the other teams in the tournament.\n\nP.S.\nFull data is available at Market Statistics: Goals endpoint but can not be shown in mock response.\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"1452254"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/h2h/match/statistics/market/goals\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Seasonal Statistics: Goals",
            "url":"https://soccer-data.p.rapidapi.com/h2h/team/statistics/seasonal/goals",
            "description":"Provides the goal statistics of the team in the tournament.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"teamId",
                    "type":"NUMBER",
                    "description":"The id of the team.",
                    "default":"803"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/h2h/team/statistics/seasonal/goals\"\nquerystring = {\"teamId\": teamid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Seasonal Goal Analysis: Conceding First",
            "url":"https://soccer-data.p.rapidapi.com/h2h/match/goal-analysis/conceding-first/seasonal",
            "description":"Provides the conceding first goal statistics of the teams against to other teams in the tournament in the minutes intervals(0-10, 11-20, 21-30...etc.)\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"1452254"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/h2h/match/goal-analysis/conceding-first/seasonal\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Result Statistics",
            "url":"https://soccer-data.p.rapidapi.com/h2h/match/statistics/result/goals",
            "description":"Provides the result list of the last 20 matches between the two teams in overall, with home and away filters.\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"1452254"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/h2h/match/statistics/result/goals\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Team Streaks",
            "url":"https://soccer-data.p.rapidapi.com/h2h/match/streaks/seasonal",
            "description":"Provides the streaks(winning, draw, losing...etc.) of both two teams in tournament.\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"1452254"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/h2h/match/streaks/seasonal\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Goal Analysis: Goal Minutes in Between",
            "url":"https://soccer-data.p.rapidapi.com/h2h/match/goal-analysis/goal-minutes-between",
            "description":"Provides the goals statistics of the teams between in the minutes intervals(0-10, 11-20, 21-30...etc.)\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"1452254"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/h2h/match/goal-analysis/goal-minutes-between\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Seasonal Goal Analysis: Scoring First",
            "url":"https://soccer-data.p.rapidapi.com/h2h/match/goal-analysis/scoring-first/seasonal",
            "description":"Provides the scoring first goal statistics of the teams against to other teams in tournaments in the minutes intervals(0-10, 11-20, 21-30...etc.)\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.**",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"matchId",
                    "type":"NUMBER",
                    "description":"The id of the match.",
                    "default":"1456548"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/h2h/match/goal-analysis/scoring-first/seasonal\"\nquerystring = {\"matchId\": matchid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Tournament List",
            "url":"https://soccer-data.p.rapidapi.com/tournament/list",
            "description":"Provides list of tournaments.",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/tournament/list\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Tournament Fixture",
            "url":"https://soccer-data.p.rapidapi.com/tournament/fixture",
            "description":"Full match list with half time and final scores, with additional info for each match such as referee and stadium.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"tournamentId",
                    "type":"NUMBER",
                    "description":"The id of the tournament.",
                    "default":"14"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/tournament/fixture\"\nquerystring = {\"tournamentId\": tournamentid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Assist Leaderboard",
            "url":"https://soccer-data.p.rapidapi.com/tournament/leaderboard/assist",
            "description":"Provides assist leaderboard data of the tournament.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"tournamentId",
                    "type":"NUMBER",
                    "description":"The id of the tournament.",
                    "default":"14"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://soccer-data.p.rapidapi.com/tournament/leaderboard/assist\"\nquerystring = {\"tournamentId\": tournamentid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soccer-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        }
    ]
}