{
    "product_id": "c7bf0bef-6826-40f7-ac7a-39bb2da3dc34",
    "tool_description": "Strava is the social network for athletes. ",
    "home_url": "https://rapidapi.com/stefan.skliarov/api/Strava/",
    "name": "Strava",
    "title": "Strava",
    "pricing": "FREE",
    "tool_name": "Strava",
    "score": null,
    "host": "35.188.171.173:8080",
    "api_list": [
        {
            "name": "addWebhook",
            "url": "https://35.188.171.173:8080",
            "description": "Add new webhook",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientSecret",
                    "type": "CREDENTIALS",
                    "description": "Client secret from Strava",
                    "default": ""
                },
                {
                    "name": "webhookUrl",
                    "type": "STRING",
                    "description": "You can use our service as webhookUrl. https://webhooks.rapidapi.io/api/message/Strava/webhookEvent/{projectName}/{projectKey}. See details above",
                    "default": ""
                },
                {
                    "name": "aspectType",
                    "type": "STRING",
                    "description": "Must match one of the supported aspect types. E.g.: create",
                    "default": ""
                },
                {
                    "name": "clientId",
                    "type": "CREDENTIALS",
                    "description": "Client id from Strava",
                    "default": ""
                },
                {
                    "name": "objectType",
                    "type": "STRING",
                    "description": "Must match one of the supported object types. E.g. : activity",
                    "default": ""
                },
                {
                    "name": "verifyToken",
                    "type": "STRING",
                    "description": "User state specified by the user",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"clientSecret\": \"\", \"webhookUrl\": \"\", \"aspectType\": \"\", \"clientId\": \"\", \"objectType\": \"\", \"verifyToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"clientSecret\": \"\", \"webhookUrl\": \"\", \"aspectType\": \"\", \"clientId\": \"\", \"objectType\": \"\", \"verifyToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "checkUploadStatus",
            "url": "https://35.188.171.173:8080",
            "description": "Upon upload, Strava will respond with an upload ID. You may use this ID to poll the status of your upload.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "uploadId",
                    "type": "STRING",
                    "description": "Id of the upload",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"uploadId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"uploadId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createActivity",
            "url": "https://35.188.171.173:8080",
            "description": "Create new activity",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "activityType",
                    "type": "SELECT",
                    "description": "Type of the Strava activity",
                    "default": ""
                },
                {
                    "name": "elapsedTime",
                    "type": "NUMBER",
                    "description": "Elapsed time in seconds of the Strava activity",
                    "default": ""
                },
                {
                    "name": "activityName",
                    "type": "STRING",
                    "description": "Name of the Strava activity",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                },
                {
                    "name": "startDate",
                    "type": "DATEPICKER",
                    "description": "Start date of the Strava activity",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "Description of the Strava activity",
                    "default": ""
                },
                {
                    "name": "commute",
                    "type": "SELECT",
                    "description": "et to true to mark as commute.",
                    "default": ""
                },
                {
                    "name": "private",
                    "type": "SELECT",
                    "description": "Whether this is private activity",
                    "default": ""
                },
                {
                    "name": "trainer",
                    "type": "SELECT",
                    "description": "Whether this is trainer activity",
                    "default": ""
                },
                {
                    "name": "distance",
                    "type": "NUMBER",
                    "description": "Distance of the Strava activity",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"activityType\": \"\", \"description\": \"\", \"elapsedTime\": \"\", \"activityName\": \"\", \"accessToken\": \"\", \"commute\": \"\", \"private\": \"\", \"startDate\": \"\", \"trainer\": \"\", \"distance\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"activityType\": \"\", \"description\": \"\", \"elapsedTime\": \"\", \"activityName\": \"\", \"accessToken\": \"\", \"commute\": \"\", \"private\": \"\", \"startDate\": \"\", \"trainer\": \"\", \"distance\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteGroupEvent",
            "url": "https://35.188.171.173:8080",
            "description": "Delete group event",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "groupEventId",
                    "type": "STRING",
                    "description": "Id of the Strava group event",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"groupEventId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"groupEventId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteWebhook",
            "url": "https://35.188.171.173:8080",
            "description": "Delete existing webhook",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientId",
                    "type": "CREDENTIALS",
                    "description": "Client id from Strava",
                    "default": ""
                },
                {
                    "name": "webhookId",
                    "type": "STRING",
                    "description": "Id of the webhook",
                    "default": ""
                },
                {
                    "name": "clientSecret",
                    "type": "CREDENTIALS",
                    "description": "Client secret from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"clientId\": \"\", \"webhookId\": \"\", \"clientSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"clientId\": \"\", \"webhookId\": \"\", \"clientSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAccessToken",
            "url": "https://35.188.171.173:8080",
            "description": "Get access token",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "code",
                    "type": "STRING",
                    "description": "Code provided by user",
                    "default": ""
                },
                {
                    "name": "clientSecret",
                    "type": "CREDENTIALS",
                    "description": "Client secret from Strava",
                    "default": ""
                },
                {
                    "name": "clientId",
                    "type": "CREDENTIALS",
                    "description": "Client id from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"code\": \"\", \"clientSecret\": \"\", \"clientId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"code\": \"\", \"clientSecret\": \"\", \"clientId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getActivityStreams",
            "url": "https://35.188.171.173:8080",
            "description": "Retrieve details about a specific segment effort. The effort must be public or it must correspond to the current athlete.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                },
                {
                    "name": "activityId",
                    "type": "STRING",
                    "description": "Id of the Strava activity",
                    "default": ""
                },
                {
                    "name": "types",
                    "type": "LIST",
                    "description": ":List of types, if the activity does not have that stream it will not be included in the response",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "seriesType",
                    "type": "SELECT",
                    "description": "Relevant only if using resolution, used to index the streams if the stream is being reduced",
                    "default": ""
                },
                {
                    "name": "resolution",
                    "type": "SELECT",
                    "description": "Default is all, indicates desired number of data points, streams will only be down sampled",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\", \"activityId\": \"\", \"seriesType\": \"\", \"resolution\": \"\", \"types\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\", \"activityId\": \"\", \"seriesType\": \"\", \"resolution\": \"\", \"types\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCurrentAthlete",
            "url": "https://35.188.171.173:8080",
            "description": "This request is used to retrieve information about the currently authenticated athlete.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getGroupEvent",
            "url": "https://35.188.171.173:8080",
            "description": "Retrieve group event",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                },
                {
                    "name": "groupEventId",
                    "type": "STRING",
                    "description": "Id of the Strava group event",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\", \"groupEventId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\", \"groupEventId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getKomsAndQoms",
            "url": "https://35.188.171.173:8080",
            "description": "Returns an array of segment efforts representing Overall KOMs/QOMs and course records held by the given athlete. Yearly KOMs are not included.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                },
                {
                    "name": "athleteId",
                    "type": "STRING",
                    "description": "Id of the Strava athlete",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Number of the page to return",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items per page to return",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\", \"page\": \"\", \"athleteId\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\", \"page\": \"\", \"athleteId\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getRouteStreams",
            "url": "https://35.188.171.173:8080",
            "description": "This resource returns a subset of the activity streams that correspond to route. Distance, altitude and latlng stream types are always returned.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                },
                {
                    "name": "routeId",
                    "type": "STRING",
                    "description": "Id of the Strava route",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\", \"routeId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\", \"routeId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSegmentLeaderboards",
            "url": "https://35.188.171.173:8080",
            "description": "Leaderboards represent the ranking of athletes on specific segments.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                },
                {
                    "name": "segmentId",
                    "type": "STRING",
                    "description": "Id of the Strava segment",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "weightClass",
                    "type": "SELECT",
                    "description": "Weight class of athletes in kg",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items per page to return",
                    "default": ""
                },
                {
                    "name": "dateRange",
                    "type": "SELECT",
                    "description": "Date range of results",
                    "default": ""
                },
                {
                    "name": "following",
                    "type": "SELECT",
                    "description": "Include athletes which are followed",
                    "default": ""
                },
                {
                    "name": "ageGroup",
                    "type": "SELECT",
                    "description": "Age group of athletes",
                    "default": ""
                },
                {
                    "name": "contextEntries",
                    "type": "NUMBER",
                    "description": "Default is 2, max of 15",
                    "default": ""
                },
                {
                    "name": "clubId",
                    "type": "STRING",
                    "description": "Id of the Strava club",
                    "default": ""
                },
                {
                    "name": "gender",
                    "type": "SELECT",
                    "description": "Gender. Male or Female.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Number of the page to return",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items per page to return",
                    "default": ""
                },
                {
                    "name": "weightClass",
                    "type": "SELECT",
                    "description": "Weight class of athletes in kg",
                    "default": ""
                },
                {
                    "name": "clubId",
                    "type": "STRING",
                    "description": "Id of the Strava club",
                    "default": ""
                },
                {
                    "name": "weightClass",
                    "type": "SELECT",
                    "description": "Weight class of athletes in kg",
                    "default": ""
                },
                {
                    "name": "contextEntries",
                    "type": "NUMBER",
                    "description": "Default is 2, max of 15",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Number of the page to return",
                    "default": ""
                },
                {
                    "name": "following",
                    "type": "SELECT",
                    "description": "Include athletes which are followed",
                    "default": ""
                },
                {
                    "name": "clubId",
                    "type": "STRING",
                    "description": "Id of the Strava club",
                    "default": ""
                },
                {
                    "name": "contextEntries",
                    "type": "NUMBER",
                    "description": "Default is 2, max of 15",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items per page to return",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"weightClass\": \"\", \"perPage\": \"\", \"dateRange\": \"\", \"following\": \"\", \"ageGroup\": \"\", \"accessToken\": \"\", \"contextEntries\": \"\", \"clubId\": \"\", \"gender\": \"\", \"segmentId\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"weightClass\": \"\", \"perPage\": \"\", \"dateRange\": \"\", \"following\": \"\", \"ageGroup\": \"\", \"accessToken\": \"\", \"contextEntries\": \"\", \"clubId\": \"\", \"gender\": \"\", \"segmentId\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSegmentStreams",
            "url": "https://35.188.171.173:8080",
            "description": "This resource returns a subset of the activity streams that correspond to segment. Only distance, altitude and latlng stream types are available.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                },
                {
                    "name": "segmentId",
                    "type": "STRING",
                    "description": "Id of the Strava segment",
                    "default": ""
                },
                {
                    "name": "types",
                    "type": "LIST",
                    "description": ":List of types, if the activity does not have that stream it will not be included in the response",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "resolution",
                    "type": "SELECT",
                    "description": "Default is all, indicates desired number of data points, streams will only be down sampled",
                    "default": ""
                },
                {
                    "name": "seriesType",
                    "type": "SELECT",
                    "description": "Relevant only if using resolution, used to index the streams if the stream is being reduced",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\", \"segmentId\": \"\", \"resolution\": \"\", \"seriesType\": \"\", \"types\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\", \"segmentId\": \"\", \"resolution\": \"\", \"seriesType\": \"\", \"types\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSegmentsByCoordinates",
            "url": "https://35.188.171.173:8080",
            "description": "This endpoint can be used to find popular segments within a given area.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                },
                {
                    "name": "swCoordinates",
                    "type": "MAP",
                    "description": "South west corner coordinates of the area",
                    "default": ""
                },
                {
                    "name": "neCoordinates",
                    "type": "MAP",
                    "description": "North east corner coordinates of the area",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "maxCategory",
                    "type": "NUMBER",
                    "description": "Maximum climb category filter",
                    "default": ""
                },
                {
                    "name": "activityType",
                    "type": "SELECT",
                    "description": "Type of activity. Default is riding",
                    "default": ""
                },
                {
                    "name": "minCategory",
                    "type": "NUMBER",
                    "description": "Minimum climb category filter",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"maxCategory\": \"\", \"activityType\": \"\", \"accessToken\": \"\", \"swCoordinates\": \"\", \"minCategory\": \"\", \"neCoordinates\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"maxCategory\": \"\", \"activityType\": \"\", \"accessToken\": \"\", \"swCoordinates\": \"\", \"minCategory\": \"\", \"neCoordinates\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleActivity",
            "url": "https://35.188.171.173:8080",
            "description": "Returns a detailed representation if the activity is owned by the requesting athlete. ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "activityId",
                    "type": "STRING",
                    "description": "Id of the Strava activity",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "includeAllEfforts",
                    "type": "SELECT",
                    "description": "Used to include all segment efforts in the Result",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"activityId\": \"\", \"accessToken\": \"\", \"includeAllEfforts\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"activityId\": \"\", \"accessToken\": \"\", \"includeAllEfforts\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleClub",
            "url": "https://35.188.171.173:8080",
            "description": "Retrieve details about a specific club.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clubId",
                    "type": "STRING",
                    "description": "Id of the Strava club",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"clubId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"clubId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleGear",
            "url": "https://35.188.171.173:8080",
            "description": "Retrieve details about a specific item of gear. The requesting athlete must own the gear. At this time it is not possible to view just anyone\u2019s gear type and usage.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                },
                {
                    "name": "gearId",
                    "type": "STRING",
                    "description": "Id of the Strava gear",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\", \"gearId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\", \"gearId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleRace",
            "url": "https://35.188.171.173:8080",
            "description": "This request is used to retrieve details about a running race.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "raceId",
                    "type": "STRING",
                    "description": "Id of the Strava race",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"raceId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"raceId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleRoute",
            "url": "https://35.188.171.173:8080",
            "description": "Retrieve details about a specific item of gear. The requesting athlete must own the gear. At this time it is not possible to view just anyone\u2019s gear type and usage.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "routeId",
                    "type": "STRING",
                    "description": "Id of the Strava route",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"routeId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"routeId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleSegment",
            "url": "https://35.188.171.173:8080",
            "description": "This request is used to retrieve details about a single segment",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "segmentId",
                    "type": "STRING",
                    "description": "Id of the Strava segment",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"segmentId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"segmentId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getTotalsAndStats",
            "url": "https://35.188.171.173:8080",
            "description": "Returns recent (last 4 weeks), year to date and all time stats for a given athlete.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "athleteId",
                    "type": "STRING",
                    "description": "Id of the Strava athlete. Must match the authenticated athlete",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"athleteId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"athleteId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getZones",
            "url": "https://35.188.171.173:8080",
            "description": "Returns the heart rate and power zones of the requesting athlete.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "joinClub",
            "url": "https://35.188.171.173:8080",
            "description": "Join a club on behalf of the authenticated athlete. If the club is private the join will need to be approved by a club admin unless the authenticated athlete had previously been invited to the club.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clubId",
                    "type": "STRING",
                    "description": "Id of the Strava club",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"clubId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"clubId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "joinGroupEvent",
            "url": "https://35.188.171.173:8080",
            "description": "Join group event",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "groupEventId",
                    "type": "STRING",
                    "description": "Id of the Strava group event",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"groupEventId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"groupEventId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "leaveClub",
            "url": "https://35.188.171.173:8080",
            "description": "Leave a club on behalf of the authenticated user. ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                },
                {
                    "name": "clubId",
                    "type": "STRING",
                    "description": "Id of the Strava club",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\", \"clubId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\", \"clubId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "leaveGroupEvent",
            "url": "https://35.188.171.173:8080",
            "description": "Leave group event",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "groupEventId",
                    "type": "STRING",
                    "description": "Id of the Strava group event",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"groupEventId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"groupEventId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listActivityComments",
            "url": "https://35.188.171.173:8080",
            "description": "The number of comments is included in the activity summary and detail responses.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "activityId",
                    "type": "STRING",
                    "description": "Id of the Strava activity",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Number of the page to return",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items per page to return",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"page\": \"\", \"activityId\": \"\", \"accessToken\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"page\": \"\", \"activityId\": \"\", \"accessToken\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listActivityKudos",
            "url": "https://35.188.171.173:8080",
            "description": "A kudos is Strava\u2019s version of a \u2018Like\u2019 or a \u2018+1\u2019. The number of kudos on an activity is returned with the activity summary.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "activityId",
                    "type": "STRING",
                    "description": "Id of the Strava activity",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items per page to return",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Number of the page to return",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"activityId\": \"\", \"perPage\": \"\", \"accessToken\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"activityId\": \"\", \"perPage\": \"\", \"accessToken\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listActivityLaps",
            "url": "https://35.188.171.173:8080",
            "description": "This resource will return all laps for an activity. Laps are triggered by athletes using their respective devices, such as Garmin watches.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                },
                {
                    "name": "activityId",
                    "type": "STRING",
                    "description": "Id of the Strava activity",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\", \"activityId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\", \"activityId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "unstarSingleSegment",
            "url": "https://35.188.171.173:8080",
            "description": "This request is used to unstar single segment",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "segmentId",
                    "type": "STRING",
                    "description": "Id of the Strava segment",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"segmentId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"segmentId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listActivityPhotos",
            "url": "https://35.188.171.173:8080",
            "description": "The number of photos is included in the activity summary and detail responses. Use this endpoint to retrieve a list of photos associated with this activity. This endpoint can only be accessed by the owner of the activity.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                },
                {
                    "name": "activityId",
                    "type": "STRING",
                    "description": "Id of the Strava activity",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items per page to return",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Number of the page to return",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"perPage\": \"\", \"page\": \"\", \"accessToken\": \"\", \"activityId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"perPage\": \"\", \"page\": \"\", \"accessToken\": \"\", \"activityId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listActivityZones",
            "url": "https://35.188.171.173:8080",
            "description": "Heartrate and power zones are set by the athlete. This endpoint returns the time (seconds) in each zone.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                },
                {
                    "name": "activityId",
                    "type": "STRING",
                    "description": "Id of the Strava activity",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\", \"activityId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\", \"activityId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listClubActivities",
            "url": "https://35.188.171.173:8080",
            "description": "Retrieve summary information about activities of a specific club.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clubId",
                    "type": "STRING",
                    "description": "Id of the Strava club",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "before",
                    "type": "DATEPICKER",
                    "description": "Result will start with activities whose startDate is before this value",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Number of the page to return",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items per page to return",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"clubId\": \"\", \"before\": \"\", \"page\": \"\", \"perPage\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"clubId\": \"\", \"before\": \"\", \"page\": \"\", \"perPage\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listClubAdmins",
            "url": "https://35.188.171.173:8080",
            "description": "Retrieve summary information about admins of a specific club.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                },
                {
                    "name": "clubId",
                    "type": "STRING",
                    "description": "Id of the Strava club",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items per page to return",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Number of the page to return",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"perPage\": \"\", \"page\": \"\", \"accessToken\": \"\", \"clubId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"perPage\": \"\", \"page\": \"\", \"accessToken\": \"\", \"clubId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listClubGroupEvents",
            "url": "https://35.188.171.173:8080",
            "description": "Returns an array of club group event summary representations ordered by occurrence time.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clubId",
                    "type": "STRING",
                    "description": "Id of the Strava club",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "upcoming",
                    "type": "SELECT",
                    "description": "Only include future events if true",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"clubId\": \"\", \"accessToken\": \"\", \"upcoming\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"clubId\": \"\", \"accessToken\": \"\", \"upcoming\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listClubMembers",
            "url": "https://35.188.171.173:8080",
            "description": "Retrieve summary information about members of a specific club.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clubId",
                    "type": "STRING",
                    "description": "Id of the Strava club",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Number of the page to return",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items per page to return",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"clubId\": \"\", \"page\": \"\", \"perPage\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"clubId\": \"\", \"page\": \"\", \"perPage\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listJoinedAthletes",
            "url": "https://35.188.171.173:8080",
            "description": "Retrieve summary information about athletes joined a specific group event, or the upcoming occurrence for recurring events.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "groupEventId",
                    "type": "STRING",
                    "description": "Id of the Strava group event",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items per page to return",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Number of the page to return",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"groupEventId\": \"\", \"accessToken\": \"\", \"perPage\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"groupEventId\": \"\", \"accessToken\": \"\", \"perPage\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listMyActivities",
            "url": "https://35.188.171.173:8080",
            "description": "This endpoint returns a list of activities for the authenticated user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items per page to return",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Number of the page to return",
                    "default": ""
                },
                {
                    "name": "before",
                    "type": "DATEPICKER",
                    "description": "Result will start with activities whose startDate is before this value",
                    "default": ""
                },
                {
                    "name": "after",
                    "type": "DATEPICKER",
                    "description": "Result will start with activities whose startDate is after this value",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"perPage\": \"\", \"page\": \"\", \"accessToken\": \"\", \"before\": \"\", \"after\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"perPage\": \"\", \"page\": \"\", \"accessToken\": \"\", \"before\": \"\", \"after\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listMyClubs",
            "url": "https://35.188.171.173:8080",
            "description": "Fetch an array of clubs that the currently authenticated athlete is a member of.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listRaces",
            "url": "https://35.188.171.173:8080",
            "description": "This request is used to retrieve a list of races occurring in a year, ordered by occurrence date from oldest to most recent.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "year",
                    "type": "NUMBER",
                    "description": "Defaults to the current year",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"year\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"year\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listRoutes",
            "url": "https://35.188.171.173:8080",
            "description": "Lists a specific athlete\u2019s routes. Private routes will only be included if the authenticating user is viewing their own routes and the token has view_private permissions.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                },
                {
                    "name": "athleteId",
                    "type": "STRING",
                    "description": "Id of the Strava athlete",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "after",
                    "type": "DATEPICKER",
                    "description": "Result will start with activities whose startDate is after this value",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items per page to return",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Number of the page to return",
                    "default": ""
                },
                {
                    "name": "type",
                    "type": "SELECT",
                    "description": "Route type",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"after\": \"\", \"perPage\": \"\", \"page\": \"\", \"accessToken\": \"\", \"type\": \"\", \"athleteId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"after\": \"\", \"perPage\": \"\", \"page\": \"\", \"accessToken\": \"\", \"type\": \"\", \"athleteId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listSegmentEfforts",
            "url": "https://35.188.171.173:8080",
            "description": "Retrieve an array of segment efforts, for a given segment, filtered by athlete and/or a date range.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "segmentId",
                    "type": "STRING",
                    "description": "Id of the Strava segment",
                    "default": ""
                },
                {
                    "name": "endDate",
                    "type": "DATEPICKER",
                    "description": "Date range filtering is accomplished using an inclusive start and end time, thus startDate and endDate must be sent together. ",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                },
                {
                    "name": "startDate",
                    "type": "DATEPICKER",
                    "description": "Date range filtering is accomplished using an inclusive start and end time, thus startDate and endDate must be sent together. ",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items per page to return",
                    "default": ""
                },
                {
                    "name": "athleteId",
                    "type": "STRING",
                    "description": "Id of the Strava athlete",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Number of the page to return",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"segmentId\": \"\", \"perPage\": \"\", \"athleteId\": \"\", \"endDate\": \"\", \"accessToken\": \"\", \"page\": \"\", \"startDate\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"segmentId\": \"\", \"perPage\": \"\", \"athleteId\": \"\", \"endDate\": \"\", \"accessToken\": \"\", \"page\": \"\", \"startDate\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listStarredSegments",
            "url": "https://35.188.171.173:8080",
            "description": "Returns a summary representation of the segments starred by the authenticated user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Number of the page to return",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items per page to return",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\", \"page\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\", \"page\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listWebhooks",
            "url": "https://35.188.171.173:8080",
            "description": "This request is used to retrieve the summary representations of the push subscriptions in place for the current application.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientId",
                    "type": "CREDENTIALS",
                    "description": "Client id from Strava",
                    "default": ""
                },
                {
                    "name": "clientSecret",
                    "type": "CREDENTIALS",
                    "description": "Client secret from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"clientId\": \"\", \"clientSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"clientId\": \"\", \"clientSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "revokeAccessToken",
            "url": "https://35.188.171.173:8080",
            "description": "Revoke access token",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "starSingleSegment",
            "url": "https://35.188.171.173:8080",
            "description": "This request is used to star single segment",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                },
                {
                    "name": "segmentId",
                    "type": "STRING",
                    "description": "Id of the Strava segment",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\", \"segmentId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"accessToken\": \"\", \"segmentId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateActivity",
            "url": "https://35.188.171.173:8080",
            "description": "Update existing activity",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "activityId",
                    "type": "STRING",
                    "description": "Id of the Strava activity",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "gearId",
                    "type": "STRING",
                    "description": "Gear ID of the Strava activity",
                    "default": ""
                },
                {
                    "name": "activityName",
                    "type": "STRING",
                    "description": "Name of the Strava activity",
                    "default": ""
                },
                {
                    "name": "trainer",
                    "type": "SELECT",
                    "description": "Whether this is trainer activity",
                    "default": ""
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "Description of the Strava activity",
                    "default": ""
                },
                {
                    "name": "private",
                    "type": "SELECT",
                    "description": "Whether this is private activity",
                    "default": ""
                },
                {
                    "name": "activityType",
                    "type": "SELECT",
                    "description": "Type of the Strava activity",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"gearId\": \"\", \"activityName\": \"\", \"activityId\": \"\", \"trainer\": \"\", \"description\": \"\", \"private\": \"\", \"accessToken\": \"\", \"activityType\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"gearId\": \"\", \"activityName\": \"\", \"activityId\": \"\", \"trainer\": \"\", \"description\": \"\", \"private\": \"\", \"accessToken\": \"\", \"activityType\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateCurrentAthlete",
            "url": "https://35.188.171.173:8080",
            "description": "Update current athlete's information on Strava.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "weight",
                    "type": "STRING",
                    "description": "Athlete's weight",
                    "default": ""
                },
                {
                    "name": "sex",
                    "type": "SELECT",
                    "description": "Athlete's sex",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Athlete's country",
                    "default": ""
                },
                {
                    "name": "state",
                    "type": "STRING",
                    "description": "Athlete's state",
                    "default": ""
                },
                {
                    "name": "city",
                    "type": "STRING",
                    "description": "Athlete's city",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"weight\": \"\", \"sex\": \"\", \"country\": \"\", \"state\": \"\", \"accessToken\": \"\", \"city\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"weight\": \"\", \"sex\": \"\", \"country\": \"\", \"state\": \"\", \"accessToken\": \"\", \"city\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "uploadActivity",
            "url": "https://35.188.171.173:8080",
            "description": "Posting a file for upload will enqueue it for processing. Initial checks will be done for malformed data and duplicates.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token provided received from Strava",
                    "default": ""
                },
                {
                    "name": "activityFile",
                    "type": "FILE",
                    "description": "The actual activity data, if gzipped the data_type must end with .gz",
                    "default": ""
                },
                {
                    "name": "dataType",
                    "type": "SELECT",
                    "description": "Data type of the file",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "Activity description.",
                    "default": ""
                },
                {
                    "name": "trainer",
                    "type": "SELECT",
                    "description": "Whether this is trainer activity. activities without lat/lng info in the file are auto marked as stationary, set to true to force",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Activity name. If not provided, will be populated using start date and location, if available",
                    "default": ""
                },
                {
                    "name": "externalId",
                    "type": "STRING",
                    "description": "Data filename will be used by default but should be a unique identifie",
                    "default": ""
                },
                {
                    "name": "private",
                    "type": "SELECT",
                    "description": "Whether this is private activity",
                    "default": ""
                },
                {
                    "name": "commute",
                    "type": "SELECT",
                    "description": "et to true to mark as commute.",
                    "default": ""
                },
                {
                    "name": "activityType",
                    "type": "SELECT",
                    "description": "Type of the Strava activity",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"description\": \"\", \"accessToken\": \"\", \"trainer\": \"\", \"name\": \"\", \"externalId\": \"\", \"activityFile\": \"\", \"private\": \"\", \"commute\": \"\", \"dataType\": \"\", \"activityType\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"description\": \"\", \"accessToken\": \"\", \"trainer\": \"\", \"name\": \"\", \"externalId\": \"\", \"activityFile\": \"\", \"private\": \"\", \"commute\": \"\", \"dataType\": \"\", \"activityType\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "webhookEvent",
            "url": "https://35.188.171.173:8080",
            "description": "This method is called every time a Strava webhook event occurs",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "Token sent on each message",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://35.188.171.173:8080\"\nquerystring = {\"token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"35.188.171.173:8080\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}