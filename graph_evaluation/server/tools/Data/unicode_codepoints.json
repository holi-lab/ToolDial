{
    "product_id": "53aa5219e4b07e1f4ebeb599",
    "tool_description": "A RESTful Interface to Unicode Data, this API gives easy and standardized access to all information from Codepoints.net. The detailed documentation is [available on Github](https://github.com/Boldewyn/Codepoints.net/wiki/API).",
    "home_url": "https://rapidapi.com/boldewyn/api/unicode-codepoints/",
    "name": "Unicode Codepoints",
    "title": "Unicode Codepoints",
    "pricing": "FREE",
    "tool_name": "Unicode Codepoints",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 510,
        "avgSuccessRate": 100,
        "popularityScore": 7.7,
        "__typename": "Score"
    },
    "host": "codepoints.p.rapidapi.com",
    "api_list": [
        {
            "name": "Search",
            "url": "https://codepoints.p.rapidapi.com/search",
            "description": "Search for Codepoints. This API exposes the functionality of the main site\u2019s search.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "properties",
                    "type": "STRING",
                    "description": "one or several key/value pairs of Unicode properties or int for decimal codepoint values or q for free text search.",
                    "default": "age=1.1&gc=Na"
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Page number for paginated results",
                    "default": "2"
                },
                {
                    "name": "per_page",
                    "type": "STRING",
                    "description": "results per page",
                    "default": "10"
                },
                {
                    "name": "callback",
                    "type": "STRING",
                    "description": "JSON-P return function name",
                    "default": "foo"
                }
            ],
            "code": "import requests\n\nurl = \"https://codepoints.p.rapidapi.com/search\"\nquerystring = {\"properties\": \"age=1.1&gc=Na\", \"page\": \"2\", \"per_page\": \"10\", \"callback\": \"foo\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"codepoints.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://codepoints.p.rapidapi.com/search\"\nquerystring = {\"properties\": \"age=1.1&gc=Na\", \"page\": \"2\", \"per_page\": \"10\", \"callback\": \"foo\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"codepoints.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "page": 1,
                "last_page": 1,
                "per_page": 10,
                "count": 0,
                "result": []
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Property",
            "url": "https://codepoints.p.rapidapi.com/property/block",
            "description": "Show one Property for All Codepoints",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "property",
                    "type": "STRING",
                    "description": "The Unicode property to render",
                    "default": "block"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://codepoints.p.rapidapi.com/property/block\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"codepoints.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://codepoints.p.rapidapi.com/property/{property}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"codepoints.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Glyph",
            "url": "https://codepoints.p.rapidapi.com/glyph/0A2F",
            "description": "Request a Sample Glyph",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "codepoint",
                    "type": "STRING",
                    "description": "hexadecimal codepoint",
                    "default": "0A2F"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://codepoints.p.rapidapi.com/glyph/0A2F\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"codepoints.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://codepoints.p.rapidapi.com/glyph/{codepoint}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"codepoints.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Filter",
            "url": "https://codepoints.p.rapidapi.com/filter/abcde",
            "description": "Filter a String, e.g. , by Unicode version or only uppercase letters",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "properties",
                    "type": "STRING",
                    "description": "any Unicode property. Appending a \"!\" negates it.",
                    "default": "age=1.1&gc!=Nd"
                },
                {
                    "name": "data",
                    "type": "STRING",
                    "description": "an UTF-8 encoded string",
                    "default": "abcde"
                }
            ],
            "optional_parameters": [
                {
                    "name": "callback",
                    "type": "STRING",
                    "description": "JSON-P return function name",
                    "default": "foo"
                }
            ],
            "code": "import requests\n\nurl = \"https://codepoints.p.rapidapi.com/filter/abcde\"\nquerystring = {\"properties\": \"age=1.1&gc!=Nd\", \"callback\": \"foo\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"codepoints.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://codepoints.p.rapidapi.com/filter/{data}\"\nquerystring = {\"properties\": \"age=1.1&gc!=Nd\", \"callback\": \"foo\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"codepoints.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Name",
            "url": "https://codepoints.p.rapidapi.com/name/{codepoint}",
            "description": "Request a Codepoint\u2019s Name",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "codepoint",
                    "type": "STRING",
                    "description": "Hexadecimal codepoint",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "callback",
                    "type": "STRING",
                    "description": "JSON-P function name",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://codepoints.p.rapidapi.com/name/{codepoint}\"\nquerystring = {\"callback\": \"\", \"codepoint\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"codepoints.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://codepoints.p.rapidapi.com/name/{codepoint}\"\nquerystring = {\"callback\": \"\", \"codepoint\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"codepoints.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Codepoint",
            "url": "https://codepoints.p.rapidapi.com/codepoint/0A2F",
            "description": "show detailed information about a single codepoint. You can specify fields of interest with the \u201cproperty\u201d parameter: codepoint/1234?property=age,uc,lc",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "codepoint",
                    "type": "STRING",
                    "description": "The hex number of the codepoint",
                    "default": "0A2F"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://codepoints.p.rapidapi.com/codepoint/0A2F\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"codepoints.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://codepoints.p.rapidapi.com/codepoint/{codepoint}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"codepoints.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "cp": 2607,
                "age": "1.1",
                "na": "GURMUKHI LETTER YA",
                "na1": "",
                "blk": "Gurmukhi",
                "gc": "Lo",
                "sc": "Guru",
                "bc": "L",
                "ccc": 0,
                "dt": "none",
                "dm": 2607,
                "Lower": 0,
                "slc": 2607,
                "lc": 2607,
                "Upper": 0,
                "suc": 2607,
                "uc": 2607,
                "stc": 2607,
                "tc": 2607,
                "cf": 2607,
                "AHex": 0,
                "Alpha": 1,
                "Bidi_C": 0,
                "Bidi_M": 0,
                "CE": 0,
                "CI": 0,
                "CWCF": 0,
                "CWCM": 0,
                "CWKCF": 0,
                "CWL": 0,
                "CWT": 0,
                "CWU": 0,
                "Cased": 0,
                "Comp_Ex": 0,
                "DI": 0,
                "Dash": 0,
                "Dep": 0,
                "Dia": 0,
                "EBase": 0,
                "EComp": 0,
                "EMod": 0,
                "EPres": 0,
                "Emoji": 0,
                "Ext": 0,
                "ExtPict": 0,
                "FC_NFKC": 2607,
                "GCB": "XX",
                "Gr_Base": 1,
                "Gr_Ext": 0,
                "Gr_Link": 0,
                "Hex": 0,
                "Hyphen": 0,
                "IDC": 1,
                "IDS": 1,
                "IDSB": 0,
                "IDST": 0,
                "Ideo": 0,
                "InMC": null,
                "InPC": "NA",
                "InSC": "Consonant",
                "JSN": "",
                "Join_C": 0,
                "LOE": 0,
                "Math": 0,
                "NChar": 0,
                "NFC_QC": "Y",
                "NFD_QC": "Y",
                "NFKC_CF": 2607,
                "NFKC_QC": "Y",
                "NFKD_QC": "Y",
                "OAlpha": 0,
                "ODI": 0,
                "OGr_Ext": 0,
                "OIDC": 0,
                "OIDS": 0,
                "OLower": 0,
                "OMath": 0,
                "OUpper": 0,
                "PCM": 0,
                "Pat_Syn": 0,
                "Pat_WS": 0,
                "QMark": 0,
                "RI": 0,
                "Radical": 0,
                "SB": "LE",
                "SD": 0,
                "STerm": 0,
                "Term": 0,
                "UIdeo": 0,
                "VS": 0,
                "WB": "LE",
                "WSpace": 0,
                "XIDC": 1,
                "XIDS": 1,
                "XO_NFC": 0,
                "XO_NFD": 0,
                "XO_NFKC": 0,
                "XO_NFKD": 0,
                "bpb": 2607,
                "bpt": "n",
                "ea": "N",
                "hst": "NA",
                "isc": "",
                "jg": "No_Joining_Group",
                "jt": "U",
                "lb": "AL",
                "nt": "None",
                "nv": "NaN",
                "scf": 2607,
                "scx": [],
                "vo": "R",
                "kAccountingNumeric": null,
                "kAlternateHanYu": null,
                "kAlternateJEF": null,
                "kAlternateKangXi": null,
                "kAlternateMorohashi": null,
                "kAlternateTotalStrokes": null,
                "kBigFive": null,
                "kCCCII": null,
                "kCNS1986": null,
                "kCNS1992": null,
                "kCangjie": null,
                "kCantonese": null,
                "kCheungBauer": null,
                "kCheungBauerIndex": null,
                "kCihaiT": null,
                "kCompatibilityVariant": null,
                "kCowles": null,
                "kDaeJaweon": null,
                "kDefinition": null,
                "kEACC": null,
                "kFenn": null,
                "kFennIndex": null,
                "kFourCornerCode": null,
                "kFrequency": null,
                "kGB0": null,
                "kGB1": null,
                "kGB3": null,
                "kGB5": null,
                "kGB7": null,
                "kGB8": null,
                "kGSR": null,
                "kGradeLevel": null,
                "kHDZRadBreak": null,
                "kHKGlyph": null,
                "kHKSCS": null,
                "kHanYu": null,
                "kHangul": null,
                "kHanyuPinlu": null,
                "kHanyuPinyin": null,
                "kIBMJapan": null,
                "kIICore": null,
                "kIRGDaeJaweon": null,
                "kIRGDaiKanwaZiten": null,
                "kIRGHanyuDaZidian": null,
                "kIRGKangXi": null,
                "kIRG_GSource": null,
                "kIRG_HSource": null,
                "kIRG_JSource": null,
                "kIRG_KPSource": null,
                "kIRG_KSource": null,
                "kIRG_MSource": null,
                "kIRG_SSource": null,
                "kIRG_TSource": null,
                "kIRG_UKSource": null,
                "kIRG_USource": null,
                "kIRG_VSource": null,
                "kJHJ": null,
                "kJIS0213": null,
                "kJa": null,
                "kJapaneseKun": null,
                "kJapaneseOn": null,
                "kJinmeiyoKanji": null,
                "kJis0": null,
                "kJis1": null,
                "kJoyoKanji": null,
                "kKPS0": null,
                "kKPS1": null,
                "kKSC0": null,
                "kKSC1": null,
                "kKangXi": null,
                "kKarlgren": null,
                "kKorean": null,
                "kKoreanEducationHanja": null,
                "kKoreanName": null,
                "kLau": null,
                "kMainlandTelegraph": null,
                "kMandarin": null,
                "kMatthews": null,
                "kMeyerWempe": null,
                "kMorohashi": null,
                "kNelson": null,
                "kOtherNumeric": null,
                "kPhonetic": null,
                "kPrimaryNumeric": null,
                "kPseudoGB1": null,
                "kRSAdobe_Japan1_6": null,
                "kRSJapanese": null,
                "kRSKanWa": null,
                "kRSKangXi": null,
                "kRSKorean": null,
                "kRSMerged": null,
                "kRSTUnicode": null,
                "kRSUnicode": null,
                "kReading": null,
                "kSBGY": null,
                "kSemanticVariant": null,
                "kSimplifiedVariant": null,
                "kSpecializedSemanticVariant": null,
                "kSpoofingVariant": null,
                "kSrc_NushuDuben": null,
                "kStrange": null,
                "kTGH": null,
                "kTGHZ2013": null,
                "kTGT_MergedSrc": null,
                "kTaiwanTelegraph": null,
                "kTang": null,
                "kTotalStrokes": null,
                "kTraditionalVariant": null,
                "kUnihanCore2020": null,
                "kVietnamese": null,
                "kXHC1983": null,
                "kXerox": null,
                "kZVariant": null,
                "_": {
                    "description": "<!-- codepoint -->\n<p>U+0A2F was added to Unicode in version <a rel=\"nofollow\" href=\"/search?age=1.1\">1.1</a> (1993). It belongs to the block <a class=\"ln bl\" rel=\"up\" href=\"/gurmukhi\"><span class=\"meta\">U+0A00 to U+0A7F</span> <svg width=\"16\" height=\"16\"><svg viewBox=\"194 97 1960 1960\" width=\"100%\" height=\"100%\"><use xlink:href=\"/static/images/LastResort.svg#gurmukhi\"/></svg></svg> <span class=\"title\">Gurmukhi</span></a> in the <a class=\"ln pl\" rel=\"up\" href=\"/basic_multilingual_plane\"><span class=\"meta\">U+0000 to U+FFFF</span> <svg width=\"16\" height=\"16\"><svg viewBox=\"194 97 1960 1960\" width=\"100%\" height=\"100%\"><use xlink:href=\"/static/images/LastResort.svg#notdefplanezero\"/></svg></svg> <span class=\"title\">Basic Multilingual Plane</span></a>.</p>\n\n<!-- character -->\n<p>This character is a <a rel=\"nofollow\" href=\"/search?gc=Lo\">Other Letter</a> and is mainly used in the <a rel=\"nofollow\" href=\"/search?sc=Guru\">Gurmukhi</a> script. </p>\n\n<!-- glyph -->\n<p>The glyph is <a rel=\"nofollow\" href=\"/search?dt=none\">not a composition</a>. It has a <a rel=\"nofollow\" href=\"/search?ea=N\">Neutral</a> East Asian Width. In bidirectional context it acts as <a rel=\"nofollow\" href=\"/search?bc=L\">Left To Right</a> and is <a rel=\"nofollow\" href=\"/search?bc=L&amp;bm=0\">not mirrored</a>. In text U+0A2F behaves as <a rel=\"nofollow\" href=\"/search?lb=AL\">Alphabetic</a> regarding line breaks. It has type <a rel=\"nofollow\" href=\"/search?SB=LE\">Other Letter</a> for sentence and <a rel=\"nofollow\" href=\"/search?WB=LE\">Alphabetic Letter</a> for word breaks. The Grapheme Cluster Break is <a rel=\"nofollow\" href=\"/search?GCB=XX\">Any</a>.</p>\n\n\n",
                    "image": "<svg width=\"16\" height=\"16\" class=\"cpfig__img cpfig__img--Lo\"><title>Glyph for U+0A2F</title><use href=\"/image/0A00.svg#U0A2F\"/></svg>",
                    "imagesource": "Noto Sans Gurmukhi",
                    "wikipedia": {
                        "abstract": "<p><b>Gurmukh\u012b</b> (Punjabi: <span lang=\"pa\">\u0a17\u0a41\u0a30\u0a2e\u0a41\u0a16\u0a40</span>, <small>Punjabi pronunciation:\u00a0</small><span title=\"Representation in the International Phonetic Alphabet (IPA)\" lang=\"pa-Latn-fonipa\">[\u02c8\u0261\u028a\u027e\u1d4am\u028ak\u02b0i\u02d0]</span>, <small>Shahmukhi: <span title=\"Punjabi-language text\"><span lang=\"pa\" dir=\"rtl\"><span dir=\"rtl\" title=\"Nastaliq\">\u06af\u064f\u0631\u0645\u064f\u06a9\u06be\u06cc</span></span></span></small>) is an abugida developed from the La\u1e47\u1e0d\u0101 scripts, standardized and used by the second Sikh guru, Guru Angad (1504\u20131552). Commonly regarded as a Sikh script, Gurmukhi is used in Punjab, India as the official script of the Punjabi language.</p><p>The primary scripture of Sikhism, the Guru Granth Sahib, is written in Gurmukh\u012b, in various dialects and languages often subsumed under the generic title <i>Sant Bhasha</i> or <i>saint language</i>, in addition to other languages like Persian and various phases of Indo-Aryan languages.\n</p><p>Modern Gurmukh\u012b has thirty-five original letters, hence its common alternative term <i>paint\u012b</i> or \"the thirty-five,\" plus six additional consonants, nine vowel diacritics, two diacritics for nasal sounds, one diacritic that geminates consonants and three subscript characters.\n</p>",
                        "lang": "en",
                        "src": "https://en.wikipedia.org/wiki/%E0%A8%AF"
                    }
                }
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Script",
            "url": "https://codepoints.p.rapidapi.com/script/Latn",
            "description": "Information about a Script",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "callback",
                    "type": "STRING",
                    "description": "JSON-P response function name",
                    "default": "foo"
                },
                {
                    "name": "script",
                    "type": "STRING",
                    "description": "One or more ISO 15924 script codes separated by comma",
                    "default": "Latn"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://codepoints.p.rapidapi.com/script/Latn\"\nquerystring = {\"callback\": \"foo\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"codepoints.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://codepoints.p.rapidapi.com/script/{script}\"\nquerystring = {\"callback\": \"foo\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"codepoints.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": [
                {
                    "name": "Latin",
                    "abstract": "<p>The <b>Latin script</b>, also known as <b>Roman script</b>, is an alphabetic writing system based on the letters of the classical Latin alphabet, derived from a form of the Cumaean Greek version of the Greek alphabet used by the Etruscans. Several Latin-script alphabets exist, which differ in graphemes, collation and phonetic values from the classical Latin alphabet.</p>",
                    "src": "https://en.wikipedia.org/wiki/Latin_script"
                }
            ],
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Block",
            "url": "https://codepoints.p.rapidapi.com/block/basic_latin",
            "description": "Information about a Unicode block",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "block",
                    "type": "STRING",
                    "description": "Name of the Unicode block",
                    "default": "basic_latin"
                }
            ],
            "optional_parameters": [
                {
                    "name": "callback",
                    "type": "STRING",
                    "description": "JSON-P function name",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://codepoints.p.rapidapi.com/block/basic_latin\"\nquerystring = {\"callback\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"codepoints.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://codepoints.p.rapidapi.com/block/{block}\"\nquerystring = {\"callback\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"codepoints.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "name": "Basic Latin",
                "first": 0,
                "last": 127,
                "next_block": "Latin-1 Supplement"
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Transform",
            "url": "https://codepoints.p.rapidapi.com/transform/upper/abcde",
            "description": "Transform a String, e.g. , to upper-case, NFC, NFD, \u2026",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "action",
                    "type": "STRING",
                    "description": "the action to be applied to {data}, one of 'lower', 'upper', 'title', 'mirror', 'nfc', 'nfd', 'nfkc', 'nfkd'",
                    "default": "upper"
                },
                {
                    "name": "data",
                    "type": "STRING",
                    "description": "The string to apply the transformation",
                    "default": "abcde"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://codepoints.p.rapidapi.com/transform/upper/abcde\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"codepoints.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://codepoints.p.rapidapi.com/transform/{action}/{data}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"codepoints.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "ABCDE",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Plane",
            "url": "https://codepoints.p.rapidapi.com/plane/Basic_Multilingual_Plane",
            "description": "Information about a Unicode plane",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "plane",
                    "type": "STRING",
                    "description": "Name of the Unicode plane",
                    "default": "Basic_Multilingual_Plane"
                }
            ],
            "optional_parameters": [
                {
                    "name": "callback",
                    "type": "STRING",
                    "description": "JSON-P function name",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://codepoints.p.rapidapi.com/plane/Basic_Multilingual_Plane\"\nquerystring = {\"callback\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"codepoints.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://codepoints.p.rapidapi.com/plane/{plane}\"\nquerystring = {\"callback\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"codepoints.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "name": "Basic Multilingual Plane",
                "first": 0,
                "last": 65535,
                "blocks": [
                    "Basic Latin",
                    "Latin-1 Supplement",
                    "Latin Extended-A",
                    "Latin Extended-B",
                    "IPA Extensions",
                    "Spacing Modifier Letters",
                    "Combining Diacritical Marks",
                    "Greek and Coptic",
                    "Cyrillic",
                    "Cyrillic Supplement",
                    "Armenian",
                    "Hebrew",
                    "Arabic",
                    "Syriac",
                    "Arabic Supplement",
                    "Thaana",
                    "NKo",
                    "Samaritan",
                    "Mandaic",
                    "Syriac Supplement",
                    "Arabic Extended-B",
                    "Arabic Extended-A",
                    "Devanagari",
                    "Bengali",
                    "Gurmukhi",
                    "Gujarati",
                    "Oriya",
                    "Tamil",
                    "Telugu",
                    "Kannada",
                    "Malayalam",
                    "Sinhala",
                    "Thai",
                    "Lao",
                    "Tibetan",
                    "Myanmar",
                    "Georgian",
                    "Hangul Jamo",
                    "Ethiopic",
                    "Ethiopic Supplement",
                    "Cherokee",
                    "Unified Canadian Aboriginal Syllabics",
                    "Ogham",
                    "Runic",
                    "Tagalog",
                    "Hanunoo",
                    "Buhid",
                    "Tagbanwa",
                    "Khmer",
                    "Mongolian",
                    "Unified Canadian Aboriginal Syllabics Extended",
                    "Limbu",
                    "Tai Le",
                    "New Tai Lue",
                    "Khmer Symbols",
                    "Buginese",
                    "Tai Tham",
                    "Combining Diacritical Marks Extended",
                    "Balinese",
                    "Sundanese",
                    "Batak",
                    "Lepcha",
                    "Ol Chiki",
                    "Cyrillic Extended-C",
                    "Georgian Extended",
                    "Sundanese Supplement",
                    "Vedic Extensions",
                    "Phonetic Extensions",
                    "Phonetic Extensions Supplement",
                    "Combining Diacritical Marks Supplement",
                    "Latin Extended Additional",
                    "Greek Extended",
                    "General Punctuation",
                    "Superscripts and Subscripts",
                    "Currency Symbols",
                    "Combining Diacritical Marks for Symbols",
                    "Letterlike Symbols",
                    "Number Forms",
                    "Arrows",
                    "Mathematical Operators",
                    "Miscellaneous Technical",
                    "Control Pictures",
                    "Optical Character Recognition",
                    "Enclosed Alphanumerics",
                    "Box Drawing",
                    "Block Elements",
                    "Geometric Shapes",
                    "Miscellaneous Symbols",
                    "Dingbats",
                    "Miscellaneous Mathematical Symbols-A",
                    "Supplemental Arrows-A",
                    "Braille Patterns",
                    "Supplemental Arrows-B",
                    "Miscellaneous Mathematical Symbols-B",
                    "Supplemental Mathematical Operators",
                    "Miscellaneous Symbols and Arrows",
                    "Glagolitic",
                    "Latin Extended-C",
                    "Coptic",
                    "Georgian Supplement",
                    "Tifinagh",
                    "Ethiopic Extended",
                    "Cyrillic Extended-A",
                    "Supplemental Punctuation",
                    "CJK Radicals Supplement",
                    "Kangxi Radicals",
                    "Ideographic Description Characters",
                    "CJK Symbols and Punctuation",
                    "Hiragana",
                    "Katakana",
                    "Bopomofo",
                    "Hangul Compatibility Jamo",
                    "Kanbun",
                    "Bopomofo Extended",
                    "CJK Strokes",
                    "Katakana Phonetic Extensions",
                    "Enclosed CJK Letters and Months",
                    "CJK Compatibility",
                    "CJK Unified Ideographs Extension A",
                    "Yijing Hexagram Symbols",
                    "CJK Unified Ideographs",
                    "Yi Syllables",
                    "Yi Radicals",
                    "Lisu",
                    "Vai",
                    "Cyrillic Extended-B",
                    "Bamum",
                    "Modifier Tone Letters",
                    "Latin Extended-D",
                    "Syloti Nagri",
                    "Common Indic Number Forms",
                    "Phags-pa",
                    "Saurashtra",
                    "Devanagari Extended",
                    "Kayah Li",
                    "Rejang",
                    "Hangul Jamo Extended-A",
                    "Javanese",
                    "Myanmar Extended-B",
                    "Cham",
                    "Myanmar Extended-A",
                    "Tai Viet",
                    "Meetei Mayek Extensions",
                    "Ethiopic Extended-A",
                    "Latin Extended-E",
                    "Cherokee Supplement",
                    "Meetei Mayek",
                    "Hangul Syllables",
                    "Hangul Jamo Extended-B",
                    "High Surrogates",
                    "High Private Use Surrogates",
                    "Low Surrogates",
                    "Private Use Area",
                    "CJK Compatibility Ideographs",
                    "Alphabetic Presentation Forms",
                    "Arabic Presentation Forms-A",
                    "Variation Selectors",
                    "Vertical Forms",
                    "Combining Half Marks",
                    "CJK Compatibility Forms",
                    "Small Form Variants",
                    "Arabic Presentation Forms-B",
                    "Halfwidth and Fullwidth Forms",
                    "Specials"
                ],
                "next_plane": "Supplementary Multilingual Plane"
            },
            "statuscode": 1,
            "schema": ""
        }
    ],
    "standardized_name": "unicode_codepoints"
}