{
    "product_id": "543e985ae4b04d1987eba56f",
    "tool_description": "Worldwide forward and reverse address geocoding. Uses multiple geocoders, based on open data.",
    "home_url": "https://rapidapi.com/opencage/api/opencage-geocoder/",
    "name": "Opencage geocoder",
    "title": "Opencage geocoder",
    "pricing": "FREE",
    "tool_name": "Opencage geocoder",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 906,
        "avgSuccessRate": 96,
        "popularityScore": 9.5,
        "__typename": "Score"
    },
    "host": "opencage-geocoder.p.rapidapi.com",
    "api_list": [
        {
            "name": "/geocode/v1/json",
            "url": "https://opencage-geocoder.p.rapidapi.com/geocode/v1/json",
            "description": "geocode an address",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "\"latitude,longitude\" or \"address\" (without \")",
                    "default": "Berlin"
                },
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "The API key you got when registering on https://geocoder.opencagedata.com/",
                    "default": "OPENCAGE-API-Key"
                }
            ],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "an IETF format language code (such as es for Spanish or pt-BR for Brazilian Portuguese); if this is omitted a code of en (English) will be assumed",
                    "default": "en"
                }
            ],
            "code": "import requests\n\nurl = \"https://opencage-geocoder.p.rapidapi.com/geocode/v1/json\"\nquerystring = {\"language\": \"en\", \"q\": \"Berlin\", \"key\": \"OPENCAGE-API-Key\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"opencage-geocoder.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://opencage-geocoder.p.rapidapi.com/geocode/v1/json\"\nquerystring = {\"language\": \"en\", \"q\": \"Berlin\", \"key\": \"OPENCAGE-API-Key\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"opencage-geocoder.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "documentation": "https://opencagedata.com/api",
                "licenses": [
                    {
                        "name": "see attribution guide",
                        "url": "https://opencagedata.com/credits"
                    }
                ],
                "results": [],
                "status": {
                    "code": 401,
                    "message": "invalid API key"
                },
                "stay_informed": {
                    "blog": "https://blog.opencagedata.com",
                    "mastodon": "https://en.osm.town/@opencage",
                    "twitter": "https://twitter.com/OpenCage"
                },
                "thanks": "For using an OpenCage API",
                "timestamp": {
                    "created_http": "Fri, 16 Jun 2023 23:37:40 GMT",
                    "created_unix": 1686958660
                },
                "total_results": 0
            },
            "statuscode": 1,
            "schema": ""
        }
    ],
    "standardized_name": "opencage_geocoder"
}