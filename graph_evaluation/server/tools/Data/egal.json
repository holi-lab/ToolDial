{
    "product_id": "api_c3b97f95-7198-4f08-a86d-7d1f49795658",
    "tool_description": "An API for linear regression and data visualization. You will only need to provide the URL for csv file and then you can get scatter plot, linear regression and statistics about your dataset. You can easily integrate this with your existing web, desktop or mobile for quick and easy data visualization. ",
    "home_url": "https://rapidapi.com/monashrobotics/api/egal/",
    "name": "egal",
    "title": "egal",
    "pricing": "FREE",
    "tool_name": "egal",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 10863,
        "avgSuccessRate": 100,
        "popularityScore": 8.1,
        "__typename": "Score"
    },
    "host": "egal.p.rapidapi.com",
    "api_list": [
        {
            "name": "linear/regressionplot",
            "url": "https://egal.p.rapidapi.com/linear/regressionplot",
            "description": "The end-point provides us with the scatter plot along with linear regression curve overlaid on top of the plot. This is useful to visualise how best the linear regression fits according to base data.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://egal.p.rapidapi.com/linear/regressionplot\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"egal.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://egal.p.rapidapi.com/linear/regressionplot\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"egal.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "linear/stats",
            "url": "https://egal.p.rapidapi.com/linear/stats",
            "description": "This end-point gives us some statistics about each axis. These include the mean, standard deviation, min and max values.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://egal.p.rapidapi.com/linear/stats\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"egal.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://egal.p.rapidapi.com/linear/stats\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"egal.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "linear/regression",
            "url": "https://egal.p.rapidapi.com/linear/regression",
            "description": "Get the linear regression result for the dataset. This will return the result in the form of `y = mx + c` because linear regression is actually a straight line curve. *x_samples* and *y_samples* are a set of sample values in this curve so we can plot it offline using a graph tool such as MS Excel. In the result we have the ***coefficent*** and ***y_interceptor*** values which represents the ***m*** and ***c*** of the ***y = mx + c***. So with these values we can predict any y value for a given value in x dimension. \n\nFor example, imagine we have a data set with x axis representing the GDP of country and y axis has the happiness score. Using the ***coefficent*** and ***y_interceptor*** (m and c in y = mx + c), we can predict how happy is a country quantitatively by supplying the GDP value to x.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://egal.p.rapidapi.com/linear/regression\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"egal.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://egal.p.rapidapi.com/linear/regression\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"egal.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "linear/hist",
            "url": "https://egal.p.rapidapi.com/linear/hist",
            "description": "Gets the histogram (frequency distribution) for x-axis. When submitting our dataset egal-api considers the x-axis to be its training features (for the back-end machine learning algorithm). This means x-axis values must be clean and free from spurious data points. If the histogram is not in good shape it means the data is not equally distributed and the population has invalid data points.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://egal.p.rapidapi.com/linear/hist\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"egal.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://egal.p.rapidapi.com/linear/hist\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"egal.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "linear/plot",
            "url": "https://egal.p.rapidapi.com/linear/plot",
            "description": "Gets the 2D graph (scatter plot) for the given dataset. This method is useful to see if our dataset actually bear any linear correlations. Linear regression only comes into handy if we have a linear correlation.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://egal.p.rapidapi.com/linear/plot\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"egal.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://egal.p.rapidapi.com/linear/plot\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"egal.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}