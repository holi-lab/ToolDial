{
    "tool_name": "Encryption-Api",
    "tool_description": "Encrypt/Decrypt String/File Using these Algorithms (AES, DES, TripleDES, RC2, Rijndael).",
    "title": "Encryption-Api",
    "pricing": "FREEMIUM",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 1063,
        "avgSuccessRate": 97,
        "popularityScore": 9.2,
        "__typename": "Score"
    },
    "home_url": "https://rapidapi.com/ezzatelbadrawy/api/encryption-api1/",
    "host": "encryption-api1.p.rapidapi.com",
    "api_list": [
        {
            "name": "EncryptFile",
            "url": "https://encryption-api1.p.rapidapi.com/api/Cryptor/encryptfile",
            "description": "Encrypt plain-file using input secret-key according to selected crypt-algorithm and cipher-mode (optional with CBC as default value).\n\nFor success (200): return the binary data of encrypted file on response body.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "plainfile",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "secretKey",
                    "type": "STRING",
                    "description": "Secret-Key string which will be used on encryption process.",
                    "default": "my-secret-key"
                },
                {
                    "name": "cryptAlgorithm",
                    "type": "STRING",
                    "description": "Encryption Algorithm (AES [default], DES, TripleDES, RC2, Rijndael).",
                    "default": "AES"
                }
            ],
            "optional_parameters": [
                {
                    "name": "cipherMode",
                    "type": "STRING",
                    "description": "Encryption Cipher-Mode (CBC [default], ECB, CFB).",
                    "default": "CBC"
                }
            ],
            "code": "import requests\n\nurl = \"https://encryption-api1.p.rapidapi.com/api/Cryptor/encryptfile\"\nquerystring = {\"plainfile\": plainfile, \"secretKey\": secretkey, \"cipherMode\": ciphermode, \"cryptAlgorithm\": cryptalgorithm}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"encryption-api1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "DecryptString",
            "url": "https://encryption-api1.p.rapidapi.com/api/Cryptor/decryptstring",
            "description": "Decrypt encrypted-text (base64-format) using input secret-key according to selected crypt-algorithm and cipher-mode (optional with CBC as default value).",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "cryptAlgorithm",
                    "type": "STRING",
                    "description": "Decryption Algorithm (AES [default], DES, TripleDES, RC2, Rijndael).",
                    "default": "AES"
                },
                {
                    "name": "secretKey",
                    "type": "STRING",
                    "description": "Secret-Key string which will be used on decryption process, and it should be same secret-key which used on encryption process.",
                    "default": "my-secret-key"
                },
                {
                    "name": "encryptedText",
                    "type": "STRING",
                    "description": "Encrypted text on base64-string format.",
                    "default": "base64-encrypted-text"
                }
            ],
            "optional_parameters": [
                {
                    "name": "cipherMode",
                    "type": "STRING",
                    "description": "Decryption Cipher-Mode (CBC [default], ECB, CFB).",
                    "default": "CBC"
                }
            ],
            "code": "import requests\n\nurl = \"https://encryption-api1.p.rapidapi.com/api/Cryptor/decryptstring\"\nquerystring = {\"cryptAlgorithm\": cryptalgorithm, \"secretKey\": secretkey, \"cipherMode\": ciphermode, \"encryptedText\": encryptedtext}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"encryption-api1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": "{\n\t\"status\": \"Success\",\n\t\"result\": \"decrypted plain text\"\n}",
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Response Status : Success/Failure"
                    },
                    "result": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Respons Result : Expected output with 'Success' status OR error description with 'Failure' status"
                    }
                },
                "additionalProperties": false,
                "description": "Custom Response Object"
            }
        },
        {
            "name": "DecryptString",
            "url": "https://encryption-api1.p.rapidapi.com/api/Cryptor/decryptstring",
            "description": "Decrypt encrypted-text (base64-format) using input secret-key according to selected crypt-algorithm and cipher-mode (optional with CBC as default value).",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "cryptAlgorithm",
                    "type": "STRING",
                    "description": "Decryption Algorithm (AES [default], DES, TripleDES, RC2, Rijndael).",
                    "default": "AES"
                },
                {
                    "name": "secretKey",
                    "type": "STRING",
                    "description": "Secret-Key string which will be used on decryption process, and it should be same secret-key which used on encryption process.",
                    "default": "my-secret-key"
                },
                {
                    "name": "encryptedText",
                    "type": "STRING",
                    "description": "Encrypted text on base64-string format.",
                    "default": "base64-encrypted-text"
                }
            ],
            "optional_parameters": [
                {
                    "name": "cipherMode",
                    "type": "STRING",
                    "description": "Decryption Cipher-Mode (CBC [default], ECB, CFB).",
                    "default": "CBC"
                }
            ],
            "code": "import requests\n\nurl = \"https://encryption-api1.p.rapidapi.com/api/Cryptor/decryptstring\"\nquerystring = {\"cryptAlgorithm\": cryptalgorithm, \"secretKey\": secretkey, \"cipherMode\": ciphermode, \"encryptedText\": encryptedtext}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"encryption-api1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "status": "Success",
                "result": "decrypted-text"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Response Status : Success/Failure"
                    },
                    "result": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Respons Result : Expected output with 'Success' status OR error description with 'Failure' status"
                    }
                },
                "additionalProperties": false,
                "description": "Custom Response Object"
            }
        },
        {
            "name": "EncryptString",
            "url": "https://encryption-api1.p.rapidapi.com/api/Cryptor/encryptstring",
            "description": "Encrypt plain-text using input secret-key according to selected crypt-algorithm and cipher-mode (optional with CBC as default value).",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "secretKey",
                    "type": "STRING",
                    "description": "Secret-Key string which will be used on encryption process.",
                    "default": "my-secret-key"
                },
                {
                    "name": "plainText",
                    "type": "STRING",
                    "description": "Plain text which you want to encrypt.",
                    "default": "plain-text"
                },
                {
                    "name": "cryptAlgorithm",
                    "type": "STRING",
                    "description": "Encryption Algorithm (AES [default], DES, TripleDES, RC2, Rijndael).",
                    "default": "AES"
                }
            ],
            "optional_parameters": [
                {
                    "name": "cipherMode",
                    "type": "STRING",
                    "description": "Encryption Cipher-Mode (CBC [default], ECB, CFB).",
                    "default": "CBC"
                }
            ],
            "code": "import requests\n\nurl = \"https://encryption-api1.p.rapidapi.com/api/Cryptor/encryptstring\"\nquerystring = {\"secretKey\": secretkey, \"plainText\": plaintext, \"cryptAlgorithm\": cryptalgorithm, \"cipherMode\": ciphermode}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"encryption-api1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": "{\n\t\"status\": \"\",\n\t\"result\": \"\"\n}",
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Response Status : Success/Failure"
                    },
                    "result": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Respons Result : Expected output with 'Success' status OR error description with 'Failure' status"
                    }
                },
                "additionalProperties": false,
                "description": "Custom Response Object"
            }
        },
        {
            "name": "EncryptString",
            "url": "https://encryption-api1.p.rapidapi.com/api/Cryptor/encryptstring",
            "description": "Encrypt plain-text using input secret-key according to selected crypt-algorithm and cipher-mode (optional with CBC as default value).",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "secretKey",
                    "type": "STRING",
                    "description": "Secret-Key string which will be used on encryption process.",
                    "default": "my-secret-key"
                },
                {
                    "name": "plainText",
                    "type": "STRING",
                    "description": "Plain text which you want to encrypt.",
                    "default": "plain-text"
                },
                {
                    "name": "cryptAlgorithm",
                    "type": "STRING",
                    "description": "Encryption Algorithm (AES [default], DES, TripleDES, RC2, Rijndael).",
                    "default": "AES"
                }
            ],
            "optional_parameters": [
                {
                    "name": "cipherMode",
                    "type": "STRING",
                    "description": "Encryption Cipher-Mode (CBC [default], ECB, CFB).",
                    "default": "CBC"
                }
            ],
            "code": "import requests\n\nurl = \"https://encryption-api1.p.rapidapi.com/api/Cryptor/encryptstring\"\nquerystring = {\"secretKey\": secretkey, \"plainText\": plaintext, \"cryptAlgorithm\": cryptalgorithm, \"cipherMode\": ciphermode}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"encryption-api1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "status": "Success",
                "result": "encrypted-text-in-base64-format"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Response Status : Success/Failure"
                    },
                    "result": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Respons Result : Expected output with 'Success' status OR error description with 'Failure' status"
                    }
                },
                "additionalProperties": false,
                "description": "Custom Response Object"
            }
        },
        {
            "name": "DecryptFile",
            "url": "https://encryption-api1.p.rapidapi.com/api/Cryptor/decryptfile",
            "description": "Decrypt encrypted-file using input secret-key according to selected crypt-algorithm and cipher-mode (optional with CBC as default value).\n\nFor success (200): return the binary data of decrypted file on response body.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "encfile",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "secretKey",
                    "type": "STRING",
                    "description": "Secret-Key string which will be used on encryption process.",
                    "default": "my-secret-key"
                },
                {
                    "name": "cryptAlgorithm",
                    "type": "STRING",
                    "description": "Encryption Algorithm (AES [default], DES, TripleDES, RC2, Rijndael).",
                    "default": "AES"
                }
            ],
            "optional_parameters": [
                {
                    "name": "cipherMode",
                    "type": "STRING",
                    "description": "Encryption Cipher-Mode (CBC [default], ECB, CFB).",
                    "default": "CBC"
                }
            ],
            "code": "import requests\n\nurl = \"https://encryption-api1.p.rapidapi.com/api/Cryptor/decryptfile\"\nquerystring = {\"encfile\": encfile, \"secretKey\": secretkey, \"cipherMode\": ciphermode, \"cryptAlgorithm\": cryptalgorithm}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"encryption-api1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": [],
            "headers": {},
            "schema": {}
        },
        {
            "name": "EncryptString",
            "url": "https://encryption-api1.p.rapidapi.com/api/Cryptor/encryptstring",
            "description": "Encrypt plain-text using input secret-key according to selected crypt-algorithm and cipher-mode (optional with CBC as default value).",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://encryption-api1.p.rapidapi.com/api/Cryptor/encryptstring\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"encryption-api1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "status": "Success",
                "result": "encrypted-text-in-base64-format"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Response Status : Success/Failure"
                    },
                    "result": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Respons Result : Expected output with 'Success' status OR error description with 'Failure' status"
                    }
                },
                "additionalProperties": false,
                "description": "Custom Response Object"
            }
        },
        {
            "name": "EncryptString",
            "url": "https://encryption-api1.p.rapidapi.com/api/Cryptor/encryptstring",
            "description": "Encrypt plain-text using input secret-key according to selected crypt-algorithm and cipher-mode (optional with CBC as default value).",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://encryption-api1.p.rapidapi.com/api/Cryptor/encryptstring\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"encryption-api1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": "{\n\t\"status\": \"Success\",\n\t\"result\": \"encrypted-text-in-base64-format\"\n}",
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Response Status : Success/Failure"
                    },
                    "result": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Respons Result : Expected output with 'Success' status OR error description with 'Failure' status"
                    }
                },
                "additionalProperties": false,
                "description": "Custom Response Object"
            }
        },
        {
            "name": "DecryptString",
            "url": "https://encryption-api1.p.rapidapi.com/api/Cryptor/decryptstring",
            "description": "Decrypt encrypted-text (base64-format) using input secret-key according to selected crypt-algorithm and cipher-mode (optional with CBC as default value).",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://encryption-api1.p.rapidapi.com/api/Cryptor/decryptstring\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"encryption-api1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "status": "",
                "result": ""
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Response Status : Success/Failure"
                    },
                    "result": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Respons Result : Expected output with 'Success' status OR error description with 'Failure' status"
                    }
                },
                "additionalProperties": false,
                "description": "Custom Response Object"
            }
        },
        {
            "name": "DecryptString",
            "url": "https://encryption-api1.p.rapidapi.com/api/Cryptor/decryptstring",
            "description": "Decrypt encrypted-text (base64-format) using input secret-key according to selected crypt-algorithm and cipher-mode (optional with CBC as default value).",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://encryption-api1.p.rapidapi.com/api/Cryptor/decryptstring\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"encryption-api1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": "{\n\t\"status\": \"Success\",\n\t\"result\": \"decrypted-text\"\n}",
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Response Status : Success/Failure"
                    },
                    "result": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Respons Result : Expected output with 'Success' status OR error description with 'Failure' status"
                    }
                },
                "additionalProperties": false,
                "description": "Custom Response Object"
            }
        },
        {
            "name": "EncryptFile",
            "url": "https://encryption-api1.p.rapidapi.com/api/Cryptor/encryptfile",
            "description": "Encrypt plain-file using input secret-key according to selected crypt-algorithm and cipher-mode (optional with CBC as default value).\n\nFor success (200): return the binary data of encrypted file on response body.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "plainfile",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "secretKey",
                    "type": "STRING",
                    "description": "Secret-Key string which will be used on encryption process.",
                    "default": "my-secret-key"
                },
                {
                    "name": "cryptAlgorithm",
                    "type": "STRING",
                    "description": "Encryption Algorithm (AES [default], DES, TripleDES, RC2, Rijndael).",
                    "default": "AES"
                }
            ],
            "optional_parameters": [
                {
                    "name": "cipherMode",
                    "type": "STRING",
                    "description": "Encryption Cipher-Mode (CBC [default], ECB, CFB).",
                    "default": "CBC"
                }
            ],
            "code": "import requests\n\nurl = \"https://encryption-api1.p.rapidapi.com/api/Cryptor/encryptfile\"\nquerystring = {\"plainfile\": \"\", \"secretKey\": \"my-secret-key\", \"cipherMode\": \"CBC\", \"cryptAlgorithm\": \"AES\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"encryption-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://encryption-api1.p.rapidapi.com/api/Cryptor/encryptfile\"\nquerystring = {\"plainfile\": \"\", \"secretKey\": \"my-secret-key\", \"cipherMode\": \"CBC\", \"cryptAlgorithm\": \"AES\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"encryption-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "DecryptFile",
            "url": "https://encryption-api1.p.rapidapi.com/api/Cryptor/decryptfile",
            "description": "Decrypt encrypted-file using input secret-key according to selected crypt-algorithm and cipher-mode (optional with CBC as default value).\n\nFor success (200): return the binary data of decrypted file on response body.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "encfile",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "secretKey",
                    "type": "STRING",
                    "description": "Secret-Key string which will be used on encryption process.",
                    "default": "my-secret-key"
                },
                {
                    "name": "cryptAlgorithm",
                    "type": "STRING",
                    "description": "Encryption Algorithm (AES [default], DES, TripleDES, RC2, Rijndael).",
                    "default": "AES"
                }
            ],
            "optional_parameters": [
                {
                    "name": "cipherMode",
                    "type": "STRING",
                    "description": "Encryption Cipher-Mode (CBC [default], ECB, CFB).",
                    "default": "CBC"
                }
            ],
            "code": "import requests\n\nurl = \"https://encryption-api1.p.rapidapi.com/api/Cryptor/decryptfile\"\nquerystring = {\"encfile\": \"\", \"secretKey\": \"my-secret-key\", \"cipherMode\": \"CBC\", \"cryptAlgorithm\": \"AES\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"encryption-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://encryption-api1.p.rapidapi.com/api/Cryptor/decryptfile\"\nquerystring = {\"encfile\": \"\", \"secretKey\": \"my-secret-key\", \"cipherMode\": \"CBC\", \"cryptAlgorithm\": \"AES\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"encryption-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "EncryptString",
            "url": "https://encryption-api1.p.rapidapi.com/api/Cryptor/encryptstring",
            "description": "Encrypt plain-text using input secret-key according to selected crypt-algorithm and cipher-mode (optional with CBC as default value).",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://encryption-api1.p.rapidapi.com/api/Cryptor/encryptstring\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"encryption-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://encryption-api1.p.rapidapi.com/api/Cryptor/encryptstring\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"encryption-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Response Status : Success/Failure"
                    },
                    "result": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Respons Result : Expected output with 'Success' status OR error description with 'Failure' status"
                    }
                },
                "additionalProperties": false,
                "description": "Custom Response Object"
            }
        },
        {
            "name": "DecryptString",
            "url": "https://encryption-api1.p.rapidapi.com/api/Cryptor/decryptstring",
            "description": "Decrypt encrypted-text (base64-format) using input secret-key according to selected crypt-algorithm and cipher-mode (optional with CBC as default value).",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://encryption-api1.p.rapidapi.com/api/Cryptor/decryptstring\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"encryption-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://encryption-api1.p.rapidapi.com/api/Cryptor/decryptstring\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"encryption-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Response Status : Success/Failure"
                    },
                    "result": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Respons Result : Expected output with 'Success' status OR error description with 'Failure' status"
                    }
                },
                "additionalProperties": false,
                "description": "Custom Response Object"
            }
        }
    ]
}