{
    "product_id": "596a5c70e4b03e024df91b10",
    "tool_description": "Get global city, region, and country data. Filter and display results in multiple languages.",
    "home_url": "https://rapidapi.com/wirefreethought/api/geodb-cities/",
    "name": "GeoDB Cities",
    "title": "GeoDB Cities",
    "pricing": "FREEMIUM",
    "tool_name": "GeoDB Cities",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 56,
        "avgSuccessRate": 99,
        "popularityScore": 9.9,
        "__typename": "Score"
    },
    "host": "wft-geo-db.p.rapidapi.com",
    "api_list": [
        {
            "name": "Place Distance",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/places/{placeId}/distance",
            "description": "Gets this place's distance to the given place.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "placeId",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "distanceUnit",
                    "type": "STRING",
                    "description": "The unit of distance: KM | MI [default]",
                    "default": ""
                },
                {
                    "name": "toPlaceId",
                    "type": "STRING",
                    "description": "The distance to this place",
                    "default": "Q60"
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/places/{placeId}/distance\"\nquerystring = {\"placeId\": \"\", \"distanceUnit\": \"\", \"toPlaceId\": \"Q60\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/places/{placeId}/distance\"\nquerystring = {\"placeId\": \"\", \"distanceUnit\": \"\", \"toPlaceId\": \"Q60\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "errors": [
                    {
                        "code": "ENTITY_NOT_FOUND",
                        "message": "Place with id '{placeId}' not found"
                    }
                ]
            },
            "statuscode": 200,
            "schema": {
                "properties": {
                    "data": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "Place Time",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/places/{placeId}/time",
            "description": "Get this place's current time in ISO-8601 format: HHmmss.SSSZ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "placeId",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/places/{placeId}/time\"\nquerystring = {\"placeId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/places/{placeId}/time\"\nquerystring = {\"placeId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Place Date-Time",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/places/{placeId}/dateTime",
            "description": "Get this place's current date-time in ISO-6801 format: yyyyMMdd'T'HHmmssZ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "placeId",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/places/{placeId}/dateTime\"\nquerystring = {\"placeId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/places/{placeId}/dateTime\"\nquerystring = {\"placeId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Place Located In",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/places/{placeId}/locatedIn",
            "description": "Get the details for the containing populated place (e.g., its county or other administrative division), including location coordinates, population, and elevation above sea-level  (if available). \n\nCurrently, this data is highly dependent on whether the Wikidata **locatedIn** relation is properly defined. If you see an issue, please propose a change to the corresponding Wikidata entry.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "placeId",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/places/{placeId}/locatedIn\"\nquerystring = {\"placeId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/places/{placeId}/locatedIn\"\nquerystring = {\"placeId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Place Details",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/places/{placeId}",
            "description": "Get the details for a specific place, including location coordinates, population, and elevation above sea-level (if available).",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "placeId",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "asciiMode",
                    "type": "BOOLEAN",
                    "description": "Display results using ASCII characters",
                    "default": ""
                },
                {
                    "name": "languageCode",
                    "type": "STRING",
                    "description": "Display results in this language",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/places/{placeId}\"\nquerystring = {\"asciiMode\": \"\", \"languageCode\": \"\", \"placeId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/places/{placeId}\"\nquerystring = {\"asciiMode\": \"\", \"languageCode\": \"\", \"placeId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "wikiDataId": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "city": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "country": {
                                "type": "string"
                            },
                            "countryCode": {
                                "type": "string"
                            },
                            "region": {
                                "type": "string"
                            },
                            "regionCode": {
                                "type": "string"
                            },
                            "elevationMeters": {
                                "type": "integer"
                            },
                            "latitude": {
                                "type": "number"
                            },
                            "longitude": {
                                "type": "number"
                            },
                            "population": {
                                "type": "integer"
                            },
                            "timezone": {
                                "type": "string"
                            },
                            "deleted": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "City Date-Time",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/cities/Q60/dateTime",
            "description": "Get the city current date-time in ISO-6801 format: yyyyMMdd'T'HHmmssZ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "cityid",
                    "type": "STRING",
                    "description": "The city id (either native id or wikiDataId)",
                    "default": "Q60"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/cities/Q60/dateTime\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/cities/{cityid}/dateTime\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "City Located In",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/cities/Q65/locatedIn",
            "description": "Get the details for the containing populated place (e.g., its county or other administrative division), including location coordinates, population, and elevation above sea-level  (if available). \n\nCurrently, this data is highly dependent on whether the Wikidata **locatedIn** relation is properly defined. If you see an issue, please propose a change to the corresponding Wikidata entry.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "cityId",
                    "type": "string",
                    "description": "",
                    "default": "Q65"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/cities/Q65/locatedIn\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/cities/{cityid}/locatedIn\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Cities",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/cities",
            "description": "Find cities, filtering by optional criteria. If no criteria are set, you will get back all known cities with a population of at least 1000.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The maximum number of results to retrieve",
                    "default": ""
                },
                {
                    "name": "location",
                    "type": "STRING",
                    "description": "Only cities near this location. Latitude/longitude in ISO-6709 format: \u00b1DD.DDDD\u00b1DDD.DDDD",
                    "default": ""
                },
                {
                    "name": "radius",
                    "type": "NUMBER",
                    "description": "The location radius within which to find cities",
                    "default": ""
                },
                {
                    "name": "minPopulation",
                    "type": "NUMBER",
                    "description": "Only cities having at least this population",
                    "default": ""
                },
                {
                    "name": "languageCode",
                    "type": "STRING",
                    "description": "Display results in this language",
                    "default": ""
                },
                {
                    "name": "asciiMode",
                    "type": "BOOLEAN",
                    "description": "Display results using ASCII characters",
                    "default": ""
                },
                {
                    "name": "distanceUnit",
                    "type": "STRING",
                    "description": "The unit of distance to use: MI | KM",
                    "default": ""
                },
                {
                    "name": "timeZoneIds",
                    "type": "STRING",
                    "description": "Only cities in these time-zones",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "How to sort the results. Format: \u00b1SORT_FIELD,\u00b1SORT_FIELD where SORT_FIELD = countryCode | elevation | name | population",
                    "default": ""
                },
                {
                    "name": "hateoasMode",
                    "type": "BOOLEAN",
                    "description": "Include HATEOAS-style links in results",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "The zero-ary offset into the results",
                    "default": ""
                },
                {
                    "name": "types",
                    "type": "STRING",
                    "description": "Only cities for these types (comma-delimited): CITY | ADM2",
                    "default": ""
                },
                {
                    "name": "countryIds",
                    "type": "STRING",
                    "description": "Only cities in these countries (comma-delimited country codes or WikiData ids)",
                    "default": ""
                },
                {
                    "name": "excludedCountryIds",
                    "type": "STRING",
                    "description": "Only cities NOT in these countries (comma-delimited country codes or WikiData ids)",
                    "default": ""
                },
                {
                    "name": "includeDeleted",
                    "type": "STRING",
                    "description": "Whether to include any cities marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
                    "default": ""
                },
                {
                    "name": "namePrefixDefaultLangResults",
                    "type": "BOOLEAN",
                    "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default language is requested.",
                    "default": ""
                },
                {
                    "name": "namePrefix",
                    "type": "STRING",
                    "description": "Only cities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name as it appears in that language.",
                    "default": ""
                },
                {
                    "name": "maxPopulation",
                    "type": "NUMBER",
                    "description": "Only cities having no more than this population",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/cities\"\nquerystring = {\"limit\": \"\", \"location\": \"\", \"radius\": \"\", \"minPopulation\": \"\", \"languageCode\": \"\", \"asciiMode\": \"\", \"distanceUnit\": \"\", \"timeZoneIds\": \"\", \"sort\": \"\", \"hateoasMode\": \"\", \"offset\": \"\", \"types\": \"\", \"countryIds\": \"\", \"excludedCountryIds\": \"\", \"includeDeleted\": \"\", \"namePrefixDefaultLangResults\": \"\", \"namePrefix\": \"\", \"maxPopulation\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/cities\"\nquerystring = {\"limit\": \"\", \"location\": \"\", \"radius\": \"\", \"minPopulation\": \"\", \"languageCode\": \"\", \"asciiMode\": \"\", \"distanceUnit\": \"\", \"timeZoneIds\": \"\", \"sort\": \"\", \"hateoasMode\": \"\", \"offset\": \"\", \"types\": \"\", \"countryIds\": \"\", \"excludedCountryIds\": \"\", \"includeDeleted\": \"\", \"namePrefixDefaultLangResults\": \"\", \"namePrefix\": \"\", \"maxPopulation\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Places Near Location",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/locations/33.832213-118.387099/nearbyPlaces",
            "description": "Get places near the given location, filtering by optional criteria.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "radius",
                    "type": "STRING",
                    "description": "The location radius within which to find places",
                    "default": "100"
                },
                {
                    "name": "locationid",
                    "type": "STRING",
                    "description": "Only cities near this location. Latitude/longitude in ISO-6709 format: \u00b1DD.DDDD\u00b1DDD.DDDD",
                    "default": "33.832213-118.387099"
                }
            ],
            "optional_parameters": [
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "The zero-ary offset into the results",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The maximum number of results to retrieve",
                    "default": ""
                },
                {
                    "name": "languageCode",
                    "type": "STRING",
                    "description": "Display results in this language",
                    "default": ""
                },
                {
                    "name": "timeZoneIds",
                    "type": "STRING",
                    "description": "Only places in these time-zones",
                    "default": ""
                },
                {
                    "name": "asciiMode",
                    "type": "BOOLEAN",
                    "description": "Display results using ASCII characters",
                    "default": ""
                },
                {
                    "name": "includeDeleted",
                    "type": "STRING",
                    "description": "Whether to include any places marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
                    "default": ""
                },
                {
                    "name": "maxPopulation",
                    "type": "NUMBER",
                    "description": "Only places having no more than this population",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "How to sort the results. Format: \u00b1SORT_FIELD,\u00b1SORT_FIELD where SORT_FIELD = countryCode | elevation | name | population",
                    "default": ""
                },
                {
                    "name": "hateoasMode",
                    "type": "BOOLEAN",
                    "description": "Include HATEOAS-style links in results",
                    "default": ""
                },
                {
                    "name": "excludedCountryIds",
                    "type": "STRING",
                    "description": "Only places NOT in these countries (comma-delimited country codes or WikiData ids)",
                    "default": ""
                },
                {
                    "name": "namePrefixDefaultLangResults",
                    "type": "BOOLEAN",
                    "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default language is requested",
                    "default": ""
                },
                {
                    "name": "countryIds",
                    "type": "STRING",
                    "description": "Only places in these countries (comma-delimited country codes or WikiData ids)",
                    "default": ""
                },
                {
                    "name": "distanceUnit",
                    "type": "STRING",
                    "description": "The unit of distance to use: MI | KM",
                    "default": ""
                },
                {
                    "name": "namePrefix",
                    "type": "STRING",
                    "description": "Only places whose names start with this prefix. If languageCode is set, the prefix will be matched on the name as it appears in that language.",
                    "default": ""
                },
                {
                    "name": "types",
                    "type": "STRING",
                    "description": "Only places for these types (comma-delimited): ADM2 | CITY | ISLAND",
                    "default": ""
                },
                {
                    "name": "minPopulation",
                    "type": "NUMBER",
                    "description": "Only places having at least this population",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/locations/33.832213-118.387099/nearbyPlaces\"\nquerystring = {\"offset\": \"\", \"limit\": \"\", \"languageCode\": \"\", \"timeZoneIds\": \"\", \"asciiMode\": \"\", \"includeDeleted\": \"\", \"maxPopulation\": \"\", \"radius\": \"100\", \"sort\": \"\", \"hateoasMode\": \"\", \"excludedCountryIds\": \"\", \"namePrefixDefaultLangResults\": \"\", \"countryIds\": \"\", \"distanceUnit\": \"\", \"namePrefix\": \"\", \"types\": \"\", \"minPopulation\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/locations/{locationid}/nearbyPlaces\"\nquerystring = {\"offset\": \"\", \"limit\": \"\", \"languageCode\": \"\", \"timeZoneIds\": \"\", \"asciiMode\": \"\", \"includeDeleted\": \"\", \"maxPopulation\": \"\", \"radius\": \"100\", \"sort\": \"\", \"hateoasMode\": \"\", \"excludedCountryIds\": \"\", \"namePrefixDefaultLangResults\": \"\", \"countryIds\": \"\", \"distanceUnit\": \"\", \"namePrefix\": \"\", \"types\": \"\", \"minPopulation\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Places Near Place",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/places/{placeId}/nearbyPlaces",
            "description": "Get places near the given place, filtering by optional criteria.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "placeId",
                    "type": "string",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "radius",
                    "type": "NUMBER",
                    "description": "The location radius within which to find places",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "asciiMode",
                    "type": "BOOLEAN",
                    "description": "Display results using ASCII characters",
                    "default": ""
                },
                {
                    "name": "languageCode",
                    "type": "STRING",
                    "description": "Display results in this language",
                    "default": ""
                },
                {
                    "name": "includeDeleted",
                    "type": "STRING",
                    "description": "Whether to include any places marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
                    "default": ""
                },
                {
                    "name": "minPopulation",
                    "type": "NUMBER",
                    "description": "Only places having at least this population",
                    "default": ""
                },
                {
                    "name": "distanceUnit",
                    "type": "STRING",
                    "description": "The unit of distance to use: MI | KM",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "How to sort the results. Format: \u00b1SORT_FIELD,\u00b1SORT_FIELD where SORT_FIELD = countryCode | elevation | name | population",
                    "default": ""
                },
                {
                    "name": "hateoasMode",
                    "type": "BOOLEAN",
                    "description": "Include HATEOAS-style links in results",
                    "default": ""
                },
                {
                    "name": "namePrefixDefaultLangResults",
                    "type": "BOOLEAN",
                    "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default language is requested",
                    "default": ""
                },
                {
                    "name": "namePrefix",
                    "type": "STRING",
                    "description": "Only places whose names start with this prefix. If languageCode is set, the prefix will be matched on the name as it appears in that language.",
                    "default": ""
                },
                {
                    "name": "types",
                    "type": "STRING",
                    "description": "Only places for these types (comma-delimited): ADM2 | CITY | ISLAND",
                    "default": ""
                },
                {
                    "name": "countryIds",
                    "type": "STRING",
                    "description": "Only places in these countries (comma-delimited country codes or WikiData ids)",
                    "default": ""
                },
                {
                    "name": "timeZoneIds",
                    "type": "STRING",
                    "description": "Only places in these time-zones",
                    "default": ""
                },
                {
                    "name": "excludedCountryIds",
                    "type": "STRING",
                    "description": "Only places NOT in these countries (comma-delimited country codes or WikiData ids)",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "The zero-ary offset into the results",
                    "default": ""
                },
                {
                    "name": "maxPopulation",
                    "type": "NUMBER",
                    "description": "Only places having no more than this population",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/places/{placeId}/nearbyPlaces\"\nquerystring = {\"asciiMode\": \"\", \"languageCode\": \"\", \"placeId\": \"\", \"includeDeleted\": \"\", \"minPopulation\": \"\", \"distanceUnit\": \"\", \"sort\": \"\", \"hateoasMode\": \"\", \"namePrefixDefaultLangResults\": \"\", \"namePrefix\": \"\", \"radius\": \"\", \"types\": \"\", \"countryIds\": \"\", \"timeZoneIds\": \"\", \"excludedCountryIds\": \"\", \"offset\": \"\", \"maxPopulation\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/places/{placeId}/nearbyPlaces\"\nquerystring = {\"asciiMode\": \"\", \"languageCode\": \"\", \"placeId\": \"\", \"includeDeleted\": \"\", \"minPopulation\": \"\", \"distanceUnit\": \"\", \"sort\": \"\", \"hateoasMode\": \"\", \"namePrefixDefaultLangResults\": \"\", \"namePrefix\": \"\", \"radius\": \"\", \"types\": \"\", \"countryIds\": \"\", \"timeZoneIds\": \"\", \"excludedCountryIds\": \"\", \"offset\": \"\", \"maxPopulation\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {
                "properties": {
                    "data": {
                        "items": {
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "currentOffset": {
                                "type": "integer"
                            },
                            "totalCount": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "Country Places",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/countries/US/places",
            "description": "Get the places in the given country.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "countryId",
                    "type": "string",
                    "description": "",
                    "default": "US"
                }
            ],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The maximum number of results to retrieve",
                    "default": ""
                },
                {
                    "name": "languageCode",
                    "type": "STRING",
                    "description": "Display results in this language",
                    "default": ""
                },
                {
                    "name": "hateoasMode",
                    "type": "BOOLEAN",
                    "description": "Include HATEOAS-style links in results",
                    "default": ""
                },
                {
                    "name": "asciiMode",
                    "type": "BOOLEAN",
                    "description": "Display results using ASCII characters",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "The zero-ary offset into the results",
                    "default": ""
                },
                {
                    "name": "maxPopulation",
                    "type": "NUMBER",
                    "description": "Only places having no more than this population",
                    "default": ""
                },
                {
                    "name": "timeZoneIds",
                    "type": "STRING",
                    "description": "Only places in these time-zones",
                    "default": ""
                },
                {
                    "name": "types",
                    "type": "STRING",
                    "description": "Only cities for these types (comma-delimited): ADM2 | CITY | ISLAND",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "How to sort the results. Format: \u00b1SORT_FIELD,\u00b1SORT_FIELD where SORT_FIELD =  elevation | name | population",
                    "default": ""
                },
                {
                    "name": "namePrefixDefaultLangResults",
                    "type": "BOOLEAN",
                    "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default language is requested",
                    "default": ""
                },
                {
                    "name": "includeDeleted",
                    "type": "STRING",
                    "description": "Whether to include any cities marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
                    "default": ""
                },
                {
                    "name": "minPopulation",
                    "type": "NUMBER",
                    "description": "Only places having at least this population",
                    "default": ""
                },
                {
                    "name": "namePrefix",
                    "type": "STRING",
                    "description": "Only places whose names start with this prefix. If languageCode is set, the prefix will be matched on the name as it appears in that language.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/countries/US/places\"\nquerystring = {\"limit\": \"\", \"languageCode\": \"\", \"hateoasMode\": \"\", \"asciiMode\": \"\", \"offset\": \"\", \"maxPopulation\": \"\", \"timeZoneIds\": \"\", \"types\": \"\", \"sort\": \"\", \"namePrefixDefaultLangResults\": \"\", \"includeDeleted\": \"\", \"minPopulation\": \"\", \"namePrefix\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/countries/{countryid}/places\"\nquerystring = {\"limit\": \"\", \"languageCode\": \"\", \"hateoasMode\": \"\", \"asciiMode\": \"\", \"offset\": \"\", \"maxPopulation\": \"\", \"timeZoneIds\": \"\", \"types\": \"\", \"sort\": \"\", \"namePrefixDefaultLangResults\": \"\", \"includeDeleted\": \"\", \"minPopulation\": \"\", \"namePrefix\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "wikiDataId": {
                                    "type": "string"
                                },
                                "city": {
                                    "type": "string"
                                },
                                "latitude": {
                                    "type": "number"
                                },
                                "longitude": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "rel": {
                                    "type": "string"
                                },
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "metadata": {
                        "type": "object",
                        "properties": {
                            "currentOffset": {
                                "type": "integer"
                            },
                            "totalCount": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Country Region Divisions",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/countries/US/regions/CA/adminDivisions",
            "description": "Get the administrative divisions in the given region.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "regioncode",
                    "type": "STRING",
                    "description": "An ISO-3166 or FIPS region code",
                    "default": "CA"
                },
                {
                    "name": "countryid",
                    "type": "STRING",
                    "description": "An ISO-3166 country code or WikiData id",
                    "default": "US"
                }
            ],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The maximum number of results to retrieve",
                    "default": ""
                },
                {
                    "name": "minPopulation",
                    "type": "NUMBER",
                    "description": "Only cities having at least this population",
                    "default": ""
                },
                {
                    "name": "namePrefixDefaultLangResults",
                    "type": "BOOLEAN",
                    "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default language is requested",
                    "default": ""
                },
                {
                    "name": "languageCode",
                    "type": "STRING",
                    "description": "Display results in this language",
                    "default": ""
                },
                {
                    "name": "maxPopulation",
                    "type": "NUMBER",
                    "description": "Only divisions having no more than this population",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "How to sort the results. Format: \u00b1SORT_FIELD,\u00b1SORT_FIELD where SORT_FIELD =  elevation | name | population",
                    "default": ""
                },
                {
                    "name": "namePrefix",
                    "type": "STRING",
                    "description": "Only divisions whose names start with this prefix. If languageCode is set, the prefix will be matched on the name as it appears in that language.",
                    "default": ""
                },
                {
                    "name": "includeDeleted",
                    "type": "STRING",
                    "description": "Whether to include any cities marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
                    "default": ""
                },
                {
                    "name": "asciiMode",
                    "type": "BOOLEAN",
                    "description": "Display results using ASCII characters",
                    "default": ""
                },
                {
                    "name": "hateoasMode",
                    "type": "BOOLEAN",
                    "description": "Include HATEOAS-style links in results",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "The zero-ary offset into the results",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/countries/US/regions/CA/adminDivisions\"\nquerystring = {\"limit\": \"\", \"minPopulation\": \"\", \"namePrefixDefaultLangResults\": \"\", \"languageCode\": \"\", \"maxPopulation\": \"\", \"sort\": \"\", \"namePrefix\": \"\", \"includeDeleted\": \"\", \"asciiMode\": \"\", \"hateoasMode\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/countries/{countryid}/regions/{regioncode}/adminDivisions\"\nquerystring = {\"limit\": \"\", \"minPopulation\": \"\", \"namePrefixDefaultLangResults\": \"\", \"languageCode\": \"\", \"maxPopulation\": \"\", \"sort\": \"\", \"namePrefix\": \"\", \"includeDeleted\": \"\", \"asciiMode\": \"\", \"hateoasMode\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Country Region Cities",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/countries/US/regions/CA/cities",
            "description": "Get the cities in the given region.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "countryid",
                    "type": "STRING",
                    "description": "An ISO-3166 country code or WikiData id",
                    "default": "US"
                },
                {
                    "name": "regioncode",
                    "type": "STRING",
                    "description": "An ISO-3166 or FIPS region code",
                    "default": "CA"
                }
            ],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The maximum number of results to retrieve",
                    "default": ""
                },
                {
                    "name": "hateoasMode",
                    "type": "BOOLEAN",
                    "description": "Include HATEOAS-style links in results",
                    "default": ""
                },
                {
                    "name": "asciiMode",
                    "type": "BOOLEAN",
                    "description": "Display results using ASCII characters",
                    "default": ""
                },
                {
                    "name": "namePrefixDefaultLangResults",
                    "type": "BOOLEAN",
                    "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default language is requested",
                    "default": ""
                },
                {
                    "name": "timeZoneIds",
                    "type": "STRING",
                    "description": "Only cities in these time-zones",
                    "default": ""
                },
                {
                    "name": "namePrefix",
                    "type": "STRING",
                    "description": "Only cities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name as it appears in that language.",
                    "default": ""
                },
                {
                    "name": "types",
                    "type": "STRING",
                    "description": "Only cities for these types (comma-delimited): CITY | ADM2",
                    "default": ""
                },
                {
                    "name": "minPopulation",
                    "type": "NUMBER",
                    "description": "Only cities having at least this population",
                    "default": ""
                },
                {
                    "name": "languageCode",
                    "type": "STRING",
                    "description": "Display results in this language",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "The zero-ary offset into the results",
                    "default": ""
                },
                {
                    "name": "maxPopulation",
                    "type": "NUMBER",
                    "description": "Only cities having no more than this population",
                    "default": ""
                },
                {
                    "name": "includeDeleted",
                    "type": "STRING",
                    "description": "Whether to include any cities marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "How to sort the results. Format: \u00b1SORT_FIELD,\u00b1SORT_FIELD where SORT_FIELD =  elevation | name | population",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/countries/US/regions/CA/cities\"\nquerystring = {\"limit\": \"\", \"hateoasMode\": \"\", \"asciiMode\": \"\", \"namePrefixDefaultLangResults\": \"\", \"timeZoneIds\": \"\", \"namePrefix\": \"\", \"types\": \"\", \"minPopulation\": \"\", \"languageCode\": \"\", \"offset\": \"\", \"maxPopulation\": \"\", \"includeDeleted\": \"\", \"sort\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/countries/{countryid}/regions/{regioncode}/cities\"\nquerystring = {\"limit\": \"\", \"hateoasMode\": \"\", \"asciiMode\": \"\", \"namePrefixDefaultLangResults\": \"\", \"timeZoneIds\": \"\", \"namePrefix\": \"\", \"types\": \"\", \"minPopulation\": \"\", \"languageCode\": \"\", \"offset\": \"\", \"maxPopulation\": \"\", \"includeDeleted\": \"\", \"sort\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "wikiDataId": {
                                    "type": "string"
                                },
                                "city": {
                                    "type": "string"
                                },
                                "latitude": {
                                    "type": "number"
                                },
                                "longitude": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "rel": {
                                    "type": "string"
                                },
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "metadata": {
                        "type": "object",
                        "properties": {
                            "currentOffset": {
                                "type": "integer"
                            },
                            "totalCount": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Country Region Details",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/countries/US/regions/CA",
            "description": "Get the details of a specific country region, including number of cities.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "regioncode",
                    "type": "STRING",
                    "description": "An ISO-3166 or FIPS region code",
                    "default": "CA"
                },
                {
                    "name": "countryid",
                    "type": "STRING",
                    "description": "An ISO-3166 country code or WikiData id",
                    "default": "US"
                }
            ],
            "optional_parameters": [
                {
                    "name": "asciiMode",
                    "type": "BOOLEAN",
                    "description": "Display results using ASCII characters",
                    "default": ""
                },
                {
                    "name": "languageCode",
                    "type": "STRING",
                    "description": "Display results in this language",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/countries/US/regions/CA\"\nquerystring = {\"asciiMode\": \"\", \"languageCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/countries/{countryid}/regions/{regioncode}\"\nquerystring = {\"asciiMode\": \"\", \"languageCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {
                "data": {
                    "properties": {
                        "capital": {
                            "type": "string"
                        },
                        "countryCode": {
                            "type": "string"
                        },
                        "fipsCode": {
                            "format": "utc-millisec",
                            "type": "string"
                        },
                        "isoCode": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "numCities": {
                            "type": "integer"
                        },
                        "wikiDataId": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            }
        },
        {
            "name": "Country Regions",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/countries/US/regions",
            "description": "Find regions in a specific country, filtering by optional criteria. Regions can be states, provinces, districts, or otherwise major political divisions.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "countryid",
                    "type": "STRING",
                    "description": "An ISO-3166 country code or WikiData id",
                    "default": "US"
                }
            ],
            "optional_parameters": [
                {
                    "name": "asciiMode",
                    "type": "BOOLEAN",
                    "description": "Display results using ASCII characters",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "How to sort the results. Format: \u00b1SORT_FIELD where SORT_FIELD = fipsCode | isoCode | name",
                    "default": ""
                },
                {
                    "name": "languageCode",
                    "type": "STRING",
                    "description": "Display results in this language",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The maximum number of results to retrieve",
                    "default": ""
                },
                {
                    "name": "hateoasMode",
                    "type": "BOOLEAN",
                    "description": "Include HATEOAS-style links in results",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "The zero-ary offset index into the results",
                    "default": ""
                },
                {
                    "name": "namePrefix",
                    "type": "STRING",
                    "description": "Only regions whose names start with this prefix. If languageCode is set, the prefix will be matched on the name as it appears in that language.",
                    "default": ""
                },
                {
                    "name": "namePrefixDefaultLangResults",
                    "type": "BOOLEAN",
                    "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default language is requested",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/countries/US/regions\"\nquerystring = {\"asciiMode\": \"\", \"sort\": \"\", \"languageCode\": \"\", \"limit\": \"\", \"hateoasMode\": \"\", \"offset\": \"\", \"namePrefix\": \"\", \"namePrefixDefaultLangResults\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/countries/{countryid}/regions\"\nquerystring = {\"asciiMode\": \"\", \"sort\": \"\", \"languageCode\": \"\", \"limit\": \"\", \"hateoasMode\": \"\", \"offset\": \"\", \"namePrefix\": \"\", \"namePrefixDefaultLangResults\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {
                "properties": {
                    "data": {
                        "items": {
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "currentOffset": {
                                "type": "integer"
                            },
                            "totalCount": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "Country Details",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/countries/US",
            "description": "Get the details for a specific country, including number of regions.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "countryid",
                    "type": "STRING",
                    "description": "An ISO-3166 country code or WikiData id",
                    "default": "US"
                }
            ],
            "optional_parameters": [
                {
                    "name": "asciiMode",
                    "type": "BOOLEAN",
                    "description": "Display results using ASCII characters",
                    "default": ""
                },
                {
                    "name": "languageCode",
                    "type": "STRING",
                    "description": "Display results in this language",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/countries/US\"\nquerystring = {\"asciiMode\": \"\", \"languageCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/countries/{countryid}\"\nquerystring = {\"asciiMode\": \"\", \"languageCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "code": {
                                "type": "string"
                            },
                            "callingCode": {
                                "type": "string"
                            },
                            "currencyCodes": {
                                "type": "array"
                            },
                            "flagImageUri": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "numRegions": {
                                "type": "integer"
                            },
                            "wikiDataId": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "City Time",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/cities/{cityid}/time",
            "description": "Get the city current time in ISO-8601 format: HHmmss.SSSZ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "cityid",
                    "type": "STRING",
                    "description": "The city id (either native id or wikiDataId)",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/cities/{cityid}/time\"\nquerystring = {\"cityid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/cities/{cityid}/time\"\nquerystring = {\"cityid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "City Distance",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/cities/Q65/distance",
            "description": "Gets the distance to the given city.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "cityid",
                    "type": "STRING",
                    "description": "The city id (either native id or wikiDataId)",
                    "default": "Q65"
                }
            ],
            "optional_parameters": [
                {
                    "name": "fromCityId",
                    "type": "STRING",
                    "description": "The distance from this city",
                    "default": ""
                },
                {
                    "name": "distanceUnit",
                    "type": "STRING",
                    "description": "The unit of distance: KM | MI [default]",
                    "default": ""
                },
                {
                    "name": "toCityId",
                    "type": "STRING",
                    "description": "The distance to this city",
                    "default": "Q60"
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/cities/Q65/distance\"\nquerystring = {\"fromCityId\": \"\", \"distanceUnit\": \"\", \"toCityId\": \"Q60\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/cities/{cityid}/distance\"\nquerystring = {\"fromCityId\": \"\", \"distanceUnit\": \"\", \"toCityId\": \"Q60\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {
                "properties": {
                    "data": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "Cities Near Location",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/locations/33.832213-118.387099/nearbyCities",
            "description": "Get cities near the given location, filtering by optional criteria.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "locationid",
                    "type": "STRING",
                    "description": "Only cities near this location. Latitude/longitude in ISO-6709 format: \u00b1DD.DDDD\u00b1DDD.DDDD",
                    "default": "33.832213-118.387099"
                },
                {
                    "name": "radius",
                    "type": "STRING",
                    "description": "The location radius within which to find cities",
                    "default": "100"
                }
            ],
            "optional_parameters": [
                {
                    "name": "languageCode",
                    "type": "STRING",
                    "description": "Display results in this language",
                    "default": ""
                },
                {
                    "name": "maxPopulation",
                    "type": "NUMBER",
                    "description": "Only cities having no more than this population",
                    "default": ""
                },
                {
                    "name": "excludedCountryIds",
                    "type": "STRING",
                    "description": "Only cities NOT in these countries (comma-delimited country codes or WikiData ids)",
                    "default": ""
                },
                {
                    "name": "namePrefix",
                    "type": "STRING",
                    "description": "Only cities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name as it appears in that language.",
                    "default": ""
                },
                {
                    "name": "distanceUnit",
                    "type": "STRING",
                    "description": "The unit of distance to use: MI | KM",
                    "default": ""
                },
                {
                    "name": "types",
                    "type": "STRING",
                    "description": "Only cities for these types (comma-delimited): CITY | ADM2",
                    "default": ""
                },
                {
                    "name": "minPopulation",
                    "type": "NUMBER",
                    "description": "Only cities having at least this population",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The maximum number of results to retrieve",
                    "default": ""
                },
                {
                    "name": "asciiMode",
                    "type": "BOOLEAN",
                    "description": "Display results using ASCII characters",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "The zero-ary offset into the results",
                    "default": ""
                },
                {
                    "name": "timeZoneIds",
                    "type": "STRING",
                    "description": "Only cities in these time-zones",
                    "default": ""
                },
                {
                    "name": "hateoasMode",
                    "type": "BOOLEAN",
                    "description": "Include HATEOAS-style links in results",
                    "default": ""
                },
                {
                    "name": "countryIds",
                    "type": "STRING",
                    "description": "Only cities in these countries (comma-delimited country codes or WikiData ids)",
                    "default": ""
                },
                {
                    "name": "includeDeleted",
                    "type": "STRING",
                    "description": "Whether to include any cities marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "How to sort the results. Format: \u00b1SORT_FIELD,\u00b1SORT_FIELD where SORT_FIELD = countryCode | elevation | name | population",
                    "default": ""
                },
                {
                    "name": "namePrefixDefaultLangResults",
                    "type": "BOOLEAN",
                    "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default language is requested",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/locations/33.832213-118.387099/nearbyCities\"\nquerystring = {\"languageCode\": \"\", \"maxPopulation\": \"\", \"excludedCountryIds\": \"\", \"namePrefix\": \"\", \"distanceUnit\": \"\", \"types\": \"\", \"minPopulation\": \"\", \"radius\": \"100\", \"limit\": \"\", \"asciiMode\": \"\", \"offset\": \"\", \"timeZoneIds\": \"\", \"hateoasMode\": \"\", \"countryIds\": \"\", \"includeDeleted\": \"\", \"sort\": \"\", \"namePrefixDefaultLangResults\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/locations/{locationid}/nearbyCities\"\nquerystring = {\"languageCode\": \"\", \"maxPopulation\": \"\", \"excludedCountryIds\": \"\", \"namePrefix\": \"\", \"distanceUnit\": \"\", \"types\": \"\", \"minPopulation\": \"\", \"radius\": \"100\", \"limit\": \"\", \"asciiMode\": \"\", \"offset\": \"\", \"timeZoneIds\": \"\", \"hateoasMode\": \"\", \"countryIds\": \"\", \"includeDeleted\": \"\", \"sort\": \"\", \"namePrefixDefaultLangResults\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Admin Division Details",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/adminDivisions/Q104994",
            "description": "Get the details for a specific administrative division, including location coordinates, population, and elevation above sea-level (if available).",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "divisionId",
                    "type": "STRING",
                    "description": "",
                    "default": "Q104994"
                }
            ],
            "optional_parameters": [
                {
                    "name": "asciiMode",
                    "type": "BOOLEAN",
                    "description": "Display results using ASCII characters",
                    "default": ""
                },
                {
                    "name": "languageCode",
                    "type": "STRING",
                    "description": "Display results in this language",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/adminDivisions/Q104994\"\nquerystring = {\"asciiMode\": \"\", \"languageCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/adminDivisions/{divisionid}\"\nquerystring = {\"asciiMode\": \"\", \"languageCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "wikiDataId": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "country": {
                                "type": "string"
                            },
                            "countryCode": {
                                "type": "string"
                            },
                            "region": {
                                "type": "string"
                            },
                            "regionCode": {
                                "type": "string"
                            },
                            "latitude": {
                                "type": "number"
                            },
                            "longitude": {
                                "type": "number"
                            },
                            "population": {
                                "type": "integer"
                            },
                            "timezone": {
                                "type": "string"
                            },
                            "deleted": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Cities Near Division",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/adminDivisions/Q104994/nearbyCities",
            "description": "Get cities near the given administrative division, filtering by optional criteria.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "divisionId",
                    "type": "STRING",
                    "description": "",
                    "default": "Q104994"
                },
                {
                    "name": "radius",
                    "type": "NUMBER",
                    "description": "The location radius within which to find cities",
                    "default": "100"
                }
            ],
            "optional_parameters": [
                {
                    "name": "excludedCountryIds",
                    "type": "STRING",
                    "description": "Only cities NOT in these countries (comma-delimited country codes or WikiData ids)",
                    "default": ""
                },
                {
                    "name": "hateoasMode",
                    "type": "BOOLEAN",
                    "description": "Include HATEOAS-style links in results",
                    "default": ""
                },
                {
                    "name": "distanceUnit",
                    "type": "STRING",
                    "description": "The unit of distance to use: MI | KM",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "How to sort the results. Format: \u00b1SORT_FIELD,\u00b1SORT_FIELD where SORT_FIELD = countryCode | elevation | name | population",
                    "default": ""
                },
                {
                    "name": "maxPopulation",
                    "type": "NUMBER",
                    "description": "Only cities having no more than this population",
                    "default": ""
                },
                {
                    "name": "timeZoneIds",
                    "type": "STRING",
                    "description": "Only cities in these time-zones",
                    "default": ""
                },
                {
                    "name": "types",
                    "type": "STRING",
                    "description": "Only cities for these types (comma-delimited): CITY | ADM2",
                    "default": ""
                },
                {
                    "name": "countryIds",
                    "type": "STRING",
                    "description": "Only cities in these countries (comma-delimited country codes or WikiData ids)",
                    "default": ""
                },
                {
                    "name": "minPopulation",
                    "type": "NUMBER",
                    "description": "Only cities having at least this population",
                    "default": ""
                },
                {
                    "name": "namePrefix",
                    "type": "STRING",
                    "description": "Only cities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name as it appears in that language.",
                    "default": ""
                },
                {
                    "name": "namePrefixDefaultLangResults",
                    "type": "BOOLEAN",
                    "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default language is requested",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The maximum number of results to retrieve",
                    "default": ""
                },
                {
                    "name": "asciiMode",
                    "type": "BOOLEAN",
                    "description": "Display results using ASCII characters",
                    "default": ""
                },
                {
                    "name": "includeDeleted",
                    "type": "STRING",
                    "description": "Whether to include any cities marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
                    "default": ""
                },
                {
                    "name": "languageCode",
                    "type": "STRING",
                    "description": "Display results in this language",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "The zero-ary offset into the results",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/adminDivisions/Q104994/nearbyCities\"\nquerystring = {\"excludedCountryIds\": \"\", \"hateoasMode\": \"\", \"distanceUnit\": \"\", \"sort\": \"\", \"maxPopulation\": \"\", \"timeZoneIds\": \"\", \"types\": \"\", \"radius\": \"100\", \"countryIds\": \"\", \"minPopulation\": \"\", \"namePrefix\": \"\", \"namePrefixDefaultLangResults\": \"\", \"limit\": \"\", \"asciiMode\": \"\", \"includeDeleted\": \"\", \"languageCode\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/adminDivisions/{divisionid}/nearbyCities\"\nquerystring = {\"excludedCountryIds\": \"\", \"hateoasMode\": \"\", \"distanceUnit\": \"\", \"sort\": \"\", \"maxPopulation\": \"\", \"timeZoneIds\": \"\", \"types\": \"\", \"radius\": \"100\", \"countryIds\": \"\", \"minPopulation\": \"\", \"namePrefix\": \"\", \"namePrefixDefaultLangResults\": \"\", \"limit\": \"\", \"asciiMode\": \"\", \"includeDeleted\": \"\", \"languageCode\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Admin Divisions",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/adminDivisions",
            "description": "Find administrative divisions, filtering by optional criteria. If no criteria are set, you will get back all known divisions with a population of at least 1000",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "How to sort the results. Format: \u00b1SORT_FIELD,\u00b1SORT_FIELD where SORT_FIELD = countryCode | elevation | name | population",
                    "default": ""
                },
                {
                    "name": "excludedCountryIds",
                    "type": "STRING",
                    "description": "Only divisions NOT in these countries (comma-delimited country codes or WikiData ids)",
                    "default": ""
                },
                {
                    "name": "radius",
                    "type": "NUMBER",
                    "description": "The location radius within which to find divisions",
                    "default": ""
                },
                {
                    "name": "timeZoneIds",
                    "type": "STRING",
                    "description": "Only divisions in these time-zones",
                    "default": ""
                },
                {
                    "name": "distanceUnit",
                    "type": "STRING",
                    "description": "The unit of distance to use: MI | KM",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "The zero-ary offset into the results",
                    "default": ""
                },
                {
                    "name": "location",
                    "type": "STRING",
                    "description": "Only divisions near this location. Latitude/longitude in ISO-6709 format: \u00b1DD.DDDD\u00b1DDD.DDDD",
                    "default": ""
                },
                {
                    "name": "namePrefix",
                    "type": "STRING",
                    "description": "Only divisions whose names start with this prefix. If languageCode is set, the prefix will be matched on the name as it appears in that language.",
                    "default": ""
                },
                {
                    "name": "maxPopulation",
                    "type": "NUMBER",
                    "description": "Only divisions having no more than this population",
                    "default": ""
                },
                {
                    "name": "countryIds",
                    "type": "STRING",
                    "description": "Only divisions in these countries (comma-delimited country codes or WikiData ids)",
                    "default": ""
                },
                {
                    "name": "asciiMode",
                    "type": "BOOLEAN",
                    "description": "Display results using ASCII characters",
                    "default": ""
                },
                {
                    "name": "namePrefixDefaultLangResults",
                    "type": "BOOLEAN",
                    "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default language is requested",
                    "default": ""
                },
                {
                    "name": "minPopulation",
                    "type": "NUMBER",
                    "description": "Only divisions having at least this population",
                    "default": ""
                },
                {
                    "name": "includeDeleted",
                    "type": "STRING",
                    "description": "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The maximum number of results to retrieve",
                    "default": ""
                },
                {
                    "name": "languageCode",
                    "type": "STRING",
                    "description": "Display results in this language",
                    "default": ""
                },
                {
                    "name": "hateoasMode",
                    "type": "BOOLEAN",
                    "description": "Include HATEOAS-style links in results",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/adminDivisions\"\nquerystring = {\"sort\": \"\", \"excludedCountryIds\": \"\", \"radius\": \"\", \"timeZoneIds\": \"\", \"distanceUnit\": \"\", \"offset\": \"\", \"location\": \"\", \"namePrefix\": \"\", \"maxPopulation\": \"\", \"countryIds\": \"\", \"asciiMode\": \"\", \"namePrefixDefaultLangResults\": \"\", \"minPopulation\": \"\", \"includeDeleted\": \"\", \"limit\": \"\", \"languageCode\": \"\", \"hateoasMode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/adminDivisions\"\nquerystring = {\"sort\": \"\", \"excludedCountryIds\": \"\", \"radius\": \"\", \"timeZoneIds\": \"\", \"distanceUnit\": \"\", \"offset\": \"\", \"location\": \"\", \"namePrefix\": \"\", \"maxPopulation\": \"\", \"countryIds\": \"\", \"asciiMode\": \"\", \"namePrefixDefaultLangResults\": \"\", \"minPopulation\": \"\", \"includeDeleted\": \"\", \"limit\": \"\", \"languageCode\": \"\", \"hateoasMode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Country Region Places",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/countries/US/regions/CA/places",
            "description": "Get the places in the given region.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "regionId",
                    "type": "string",
                    "description": "",
                    "default": "CA"
                },
                {
                    "name": "countryid",
                    "type": "STRING",
                    "description": "An ISO-3166 country code or WikiData id",
                    "default": "US"
                }
            ],
            "optional_parameters": [
                {
                    "name": "hateoasMode",
                    "type": "BOOLEAN",
                    "description": "Include HATEOAS-style links in results",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The maximum number of results to retrieve",
                    "default": ""
                },
                {
                    "name": "languageCode",
                    "type": "STRING",
                    "description": "Display results in this language",
                    "default": ""
                },
                {
                    "name": "asciiMode",
                    "type": "BOOLEAN",
                    "description": "Display results using ASCII characters",
                    "default": ""
                },
                {
                    "name": "namePrefix",
                    "type": "STRING",
                    "description": "Only places whose names start with this prefix. If languageCode is set, the prefix will be matched on the name as it appears in that language.",
                    "default": ""
                },
                {
                    "name": "timeZoneIds",
                    "type": "STRING",
                    "description": "Only places in these time-zones",
                    "default": ""
                },
                {
                    "name": "types",
                    "type": "STRING",
                    "description": "Only cities for these types (comma-delimited): ADM2 | CITY | ISLAND",
                    "default": ""
                },
                {
                    "name": "minPopulation",
                    "type": "NUMBER",
                    "description": "Only places having at least this population",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "How to sort the results. Format: \u00b1SORT_FIELD,\u00b1SORT_FIELD where SORT_FIELD =  elevation | name | population",
                    "default": ""
                },
                {
                    "name": "maxPopulation",
                    "type": "NUMBER",
                    "description": "Only places having no more than this population",
                    "default": ""
                },
                {
                    "name": "includeDeleted",
                    "type": "STRING",
                    "description": "Whether to include any cities marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "The zero-ary offset into the results",
                    "default": ""
                },
                {
                    "name": "namePrefixDefaultLangResults",
                    "type": "BOOLEAN",
                    "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default language is requested",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/countries/US/regions/CA/places\"\nquerystring = {\"hateoasMode\": \"\", \"limit\": \"\", \"languageCode\": \"\", \"asciiMode\": \"\", \"namePrefix\": \"\", \"timeZoneIds\": \"\", \"types\": \"\", \"minPopulation\": \"\", \"sort\": \"\", \"maxPopulation\": \"\", \"includeDeleted\": \"\", \"offset\": \"\", \"namePrefixDefaultLangResults\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/countries/{countryid}/regions/{regionid}/places\"\nquerystring = {\"hateoasMode\": \"\", \"limit\": \"\", \"languageCode\": \"\", \"asciiMode\": \"\", \"namePrefix\": \"\", \"timeZoneIds\": \"\", \"types\": \"\", \"minPopulation\": \"\", \"sort\": \"\", \"maxPopulation\": \"\", \"includeDeleted\": \"\", \"offset\": \"\", \"namePrefixDefaultLangResults\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "wikiDataId": {
                                    "type": "string"
                                },
                                "city": {
                                    "type": "string"
                                },
                                "latitude": {
                                    "type": "number"
                                },
                                "longitude": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "rel": {
                                    "type": "string"
                                },
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "metadata": {
                        "type": "object",
                        "properties": {
                            "currentOffset": {
                                "type": "integer"
                            },
                            "totalCount": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Places",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/places",
            "description": "Find places, filtering by optional criteria. If no criteria are set, you will get back all known places.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The maximum number of results to retrieve",
                    "default": ""
                },
                {
                    "name": "languageCode",
                    "type": "STRING",
                    "description": "Display results in this language",
                    "default": ""
                },
                {
                    "name": "timeZoneIds",
                    "type": "STRING",
                    "description": "Only places in these time-zones",
                    "default": ""
                },
                {
                    "name": "asciiMode",
                    "type": "BOOLEAN",
                    "description": "Display results using ASCII characters",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "The zero-ary offset into the results",
                    "default": ""
                },
                {
                    "name": "excludedCountryIds",
                    "type": "STRING",
                    "description": "Only places NOT in these countries (comma-delimited country codes or WikiData ids)",
                    "default": ""
                },
                {
                    "name": "countryIds",
                    "type": "STRING",
                    "description": "Only places in these countries (comma-delimited country codes or WikiData ids)",
                    "default": ""
                },
                {
                    "name": "includeDeleted",
                    "type": "STRING",
                    "description": "Whether to include any places marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
                    "default": ""
                },
                {
                    "name": "namePrefix",
                    "type": "STRING",
                    "description": "Only places whose names start with this prefix. If languageCode is set, the prefix will be matched on the name as it appears in that language.",
                    "default": ""
                },
                {
                    "name": "maxPopulation",
                    "type": "NUMBER",
                    "description": "Only places having no more than this population",
                    "default": ""
                },
                {
                    "name": "distanceUnit",
                    "type": "STRING",
                    "description": "The unit of distance to use: MI | KM",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "How to sort the results. Format: \u00b1SORT_FIELD,\u00b1SORT_FIELD where SORT_FIELD = countryCode | elevation | name | population",
                    "default": ""
                },
                {
                    "name": "types",
                    "type": "STRING",
                    "description": "Only places for these types (comma-delimited): ADM2 | CITY | ISLAND",
                    "default": ""
                },
                {
                    "name": "hateoasMode",
                    "type": "BOOLEAN",
                    "description": "Include HATEOAS-style links in results",
                    "default": ""
                },
                {
                    "name": "radius",
                    "type": "NUMBER",
                    "description": "The location radius within which to find places",
                    "default": ""
                },
                {
                    "name": "minPopulation",
                    "type": "NUMBER",
                    "description": "Only places having at least this population",
                    "default": ""
                },
                {
                    "name": "namePrefixDefaultLangResults",
                    "type": "BOOLEAN",
                    "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default language is requested.",
                    "default": ""
                },
                {
                    "name": "location",
                    "type": "STRING",
                    "description": "Only places near this location. Latitude/longitude in ISO-6709 format: \u00b1DD.DDDD\u00b1DDD.DDDD",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/places\"\nquerystring = {\"limit\": \"\", \"languageCode\": \"\", \"timeZoneIds\": \"\", \"asciiMode\": \"\", \"offset\": \"\", \"excludedCountryIds\": \"\", \"countryIds\": \"\", \"includeDeleted\": \"\", \"namePrefix\": \"\", \"maxPopulation\": \"\", \"distanceUnit\": \"\", \"sort\": \"\", \"types\": \"\", \"hateoasMode\": \"\", \"radius\": \"\", \"minPopulation\": \"\", \"namePrefixDefaultLangResults\": \"\", \"location\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/places\"\nquerystring = {\"limit\": \"\", \"languageCode\": \"\", \"timeZoneIds\": \"\", \"asciiMode\": \"\", \"offset\": \"\", \"excludedCountryIds\": \"\", \"countryIds\": \"\", \"includeDeleted\": \"\", \"namePrefix\": \"\", \"maxPopulation\": \"\", \"distanceUnit\": \"\", \"sort\": \"\", \"types\": \"\", \"hateoasMode\": \"\", \"radius\": \"\", \"minPopulation\": \"\", \"namePrefixDefaultLangResults\": \"\", \"location\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Countries",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/countries",
            "description": "Find countries, filtering by optional criteria. If no criteria are set, you will get back all known countries.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "asciiMode",
                    "type": "BOOLEAN",
                    "description": "Display results using ASCII characters",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The maximum number of results to retrieve",
                    "default": ""
                },
                {
                    "name": "hateoasMode",
                    "type": "BOOLEAN",
                    "description": "Include HATEOAS-style links in results",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "The zero-ary offset index into the results",
                    "default": ""
                },
                {
                    "name": "currencyCode",
                    "type": "STRING",
                    "description": "Only countries supporting this currency",
                    "default": ""
                },
                {
                    "name": "languageCode",
                    "type": "STRING",
                    "description": "Display results in this language",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "How to sort the results. Format: \u00b1SORT_FIELD where SORT_FIELD = code | name",
                    "default": ""
                },
                {
                    "name": "namePrefixDefaultLangResults",
                    "type": "BOOLEAN",
                    "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default language is requested",
                    "default": ""
                },
                {
                    "name": "namePrefix",
                    "type": "STRING",
                    "description": "Only countries whose names start with this prefix. If languageCode is set, the prefix will be matched on the name as it appears in that language.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/countries\"\nquerystring = {\"asciiMode\": \"\", \"limit\": \"\", \"hateoasMode\": \"\", \"offset\": \"\", \"currencyCode\": \"\", \"languageCode\": \"\", \"sort\": \"\", \"namePrefixDefaultLangResults\": \"\", \"namePrefix\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/countries\"\nquerystring = {\"asciiMode\": \"\", \"limit\": \"\", \"hateoasMode\": \"\", \"offset\": \"\", \"currencyCode\": \"\", \"languageCode\": \"\", \"sort\": \"\", \"namePrefixDefaultLangResults\": \"\", \"namePrefix\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "data": [
                    {
                        "code": "AF",
                        "currencyCodes": [
                            "AFN"
                        ],
                        "name": "Afghanistan",
                        "wikiDataId": "Q889"
                    },
                    {
                        "code": "AL",
                        "currencyCodes": [
                            "ALL"
                        ],
                        "name": "Albania",
                        "wikiDataId": "Q222"
                    },
                    {
                        "code": "DZ",
                        "currencyCodes": [
                            "DZD"
                        ],
                        "name": "Algeria",
                        "wikiDataId": "Q262"
                    },
                    {
                        "code": "AD",
                        "currencyCodes": [
                            "EUR"
                        ],
                        "name": "Andorra",
                        "wikiDataId": "Q228"
                    },
                    {
                        "code": "AO",
                        "currencyCodes": [
                            "AOA"
                        ],
                        "name": "Angola",
                        "wikiDataId": "Q916"
                    }
                ],
                "links": [
                    {
                        "rel": "first",
                        "href": "/v1/geo/countries?offset=0&limit=5&asciiMode=&sort=&languageCode=&currencyCode=&namePrefix=&hateoasMode=&namePrefixDefaultLangResults="
                    },
                    {
                        "rel": "next",
                        "href": "/v1/geo/countries?offset=5&limit=5&asciiMode=&sort=&languageCode=&currencyCode=&namePrefix=&hateoasMode=&namePrefixDefaultLangResults="
                    },
                    {
                        "rel": "last",
                        "href": "/v1/geo/countries?offset=195&limit=5&asciiMode=&sort=&languageCode=&currencyCode=&namePrefix=&hateoasMode=&namePrefixDefaultLangResults="
                    }
                ],
                "metadata": {
                    "currentOffset": 0,
                    "totalCount": 198
                }
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string"
                                },
                                "currencyCodes": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "name": {
                                    "type": "string"
                                },
                                "wikiDataId": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "rel": {
                                    "type": "string"
                                },
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "metadata": {
                        "type": "object",
                        "properties": {
                            "currentOffset": {
                                "type": "integer"
                            },
                            "totalCount": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Time-Zone",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/locale/timezones/America__Los_Angeles",
            "description": "Get the time-zone current time in ISO-6801 format: HHmmss.SSSZ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "zoneid",
                    "type": "STRING",
                    "description": "The time-zone id",
                    "default": "America__Los_Angeles"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/locale/timezones/America__Los_Angeles\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/locale/timezones/{zoneid}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Time-Zones",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/locale/timezones",
            "description": "Get all known time-zones.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "offset",
                    "type": "STRING",
                    "description": "The zero-ary offset index into the results",
                    "default": ""
                },
                {
                    "name": "hateoasMode",
                    "type": "BOOLEAN",
                    "description": "Include HATEOAS-style links in results",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The maximum number of results to retrieve",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/locale/timezones\"\nquerystring = {\"offset\": \"\", \"hateoasMode\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/locale/timezones\"\nquerystring = {\"offset\": \"\", \"hateoasMode\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "rawUtcOffsetHours": {
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "rel": {
                                    "type": "string"
                                },
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "metadata": {
                        "type": "object",
                        "properties": {
                            "currentOffset": {
                                "type": "integer"
                            },
                            "totalCount": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Currencies",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/locale/currencies",
            "description": "Get currencies, filtering by optional criteria. If no criteria are set, you will get back all known currencies.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "countryId",
                    "type": "STRING",
                    "description": "Only currencies supported by this country",
                    "default": "US"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The maximum number of results to retrieve",
                    "default": ""
                },
                {
                    "name": "hateoasMode",
                    "type": "BOOLEAN",
                    "description": "Include HATEOAS-style links in results",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "The zero-ary offset index into the results",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/locale/currencies\"\nquerystring = {\"countryId\": \"US\", \"limit\": \"\", \"hateoasMode\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/locale/currencies\"\nquerystring = {\"countryId\": \"US\", \"limit\": \"\", \"hateoasMode\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {
                "properties": {
                    "data": {
                        "items": {
                            "properties": {
                                "code": {
                                    "type": "string"
                                },
                                "countryCodes": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "currentOffset": {
                                "type": "integer"
                            },
                            "totalCount": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "City Details",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/cities/Q60",
            "description": "Get the details for a specific city, including location coordinates, population, and elevation above sea-level (if available).",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "cityid",
                    "type": "STRING",
                    "description": "The city id (either native id or wikiDataId)",
                    "default": "Q60"
                }
            ],
            "optional_parameters": [
                {
                    "name": "languageCode",
                    "type": "STRING",
                    "description": "Display results in this language",
                    "default": ""
                },
                {
                    "name": "asciiMode",
                    "type": "BOOLEAN",
                    "description": "Display results using ASCII characters",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/cities/Q60\"\nquerystring = {\"languageCode\": \"\", \"asciiMode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/cities/{cityid}\"\nquerystring = {\"languageCode\": \"\", \"asciiMode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "wikiDataId": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "city": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "country": {
                                "type": "string"
                            },
                            "countryCode": {
                                "type": "string"
                            },
                            "region": {
                                "type": "string"
                            },
                            "regionCode": {
                                "type": "string"
                            },
                            "elevationMeters": {
                                "type": "integer"
                            },
                            "latitude": {
                                "type": "number"
                            },
                            "longitude": {
                                "type": "number"
                            },
                            "population": {
                                "type": "integer"
                            },
                            "timezone": {
                                "type": "string"
                            },
                            "deleted": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Admin Divisions Near Location",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/locations/33.832213-118.387099/nearbyDivisions",
            "description": "Get administrative divisions near the given location, filtering by optional criteria.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "locationid",
                    "type": "STRING",
                    "description": "Only divisions near this location. Latitude/longitude in ISO-6709 format: \u00b1DD.DDDD\u00b1DDD.DDDD",
                    "default": "33.832213-118.387099"
                },
                {
                    "name": "radius",
                    "type": "STRING",
                    "description": "The location radius within which to find divisions",
                    "default": "100"
                }
            ],
            "optional_parameters": [
                {
                    "name": "excludedCountryIds",
                    "type": "STRING",
                    "description": "Only divisions NOT in these countries (comma-delimited country codes or WikiData ids)",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "The zero-ary offset into the results",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The maximum number of results to retrieve",
                    "default": ""
                },
                {
                    "name": "languageCode",
                    "type": "STRING",
                    "description": "Display results in this language",
                    "default": ""
                },
                {
                    "name": "hateoasMode",
                    "type": "BOOLEAN",
                    "description": "Include HATEOAS-style links in results",
                    "default": ""
                },
                {
                    "name": "asciiMode",
                    "type": "BOOLEAN",
                    "description": "Display results using ASCII characters",
                    "default": ""
                },
                {
                    "name": "namePrefixDefaultLangResults",
                    "type": "BOOLEAN",
                    "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default language is requested",
                    "default": ""
                },
                {
                    "name": "countryIds",
                    "type": "STRING",
                    "description": "Only divisions in these countries (comma-delimited country codes or WikiData ids)",
                    "default": ""
                },
                {
                    "name": "minPopulation",
                    "type": "NUMBER",
                    "description": "Only divisions having at least this population",
                    "default": ""
                },
                {
                    "name": "includeDeleted",
                    "type": "STRING",
                    "description": "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
                    "default": ""
                },
                {
                    "name": "maxPopulation",
                    "type": "NUMBER",
                    "description": "Only divisions having no more than this population",
                    "default": ""
                },
                {
                    "name": "distanceUnit",
                    "type": "STRING",
                    "description": "The unit of distance to use: MI | KM",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "How to sort the results. Format: \u00b1SORT_FIELD,\u00b1SORT_FIELD where SORT_FIELD = countryCode | elevation | name | population",
                    "default": ""
                },
                {
                    "name": "timeZoneIds",
                    "type": "STRING",
                    "description": "Only divisions in these time-zones",
                    "default": ""
                },
                {
                    "name": "namePrefix",
                    "type": "STRING",
                    "description": "Only divisions whose names start with this prefix. If languageCode is set, the prefix will be matched on the name as it appears in that language.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/locations/33.832213-118.387099/nearbyDivisions\"\nquerystring = {\"excludedCountryIds\": \"\", \"offset\": \"\", \"limit\": \"\", \"languageCode\": \"\", \"hateoasMode\": \"\", \"asciiMode\": \"\", \"namePrefixDefaultLangResults\": \"\", \"radius\": \"100\", \"countryIds\": \"\", \"minPopulation\": \"\", \"includeDeleted\": \"\", \"maxPopulation\": \"\", \"distanceUnit\": \"\", \"sort\": \"\", \"timeZoneIds\": \"\", \"namePrefix\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/locations/{locationid}/nearbyDivisions\"\nquerystring = {\"excludedCountryIds\": \"\", \"offset\": \"\", \"limit\": \"\", \"languageCode\": \"\", \"hateoasMode\": \"\", \"asciiMode\": \"\", \"namePrefixDefaultLangResults\": \"\", \"radius\": \"100\", \"countryIds\": \"\", \"minPopulation\": \"\", \"includeDeleted\": \"\", \"maxPopulation\": \"\", \"distanceUnit\": \"\", \"sort\": \"\", \"timeZoneIds\": \"\", \"namePrefix\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Admin Divisions Near Division",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/adminDivisions/Q104994/nearbyDivisions",
            "description": "Get divisions near the given administrative division, filtering by optional criteria.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "divisionId",
                    "type": "STRING",
                    "description": "",
                    "default": "Q104994"
                },
                {
                    "name": "radius",
                    "type": "NUMBER",
                    "description": "The location radius within which to find divisions",
                    "default": "100"
                }
            ],
            "optional_parameters": [
                {
                    "name": "minPopulation",
                    "type": "NUMBER",
                    "description": "Only divisions having at least this population",
                    "default": ""
                },
                {
                    "name": "hateoasMode",
                    "type": "BOOLEAN",
                    "description": "Include HATEOAS-style links in results",
                    "default": ""
                },
                {
                    "name": "namePrefixDefaultLangResults",
                    "type": "BOOLEAN",
                    "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default language is requested",
                    "default": ""
                },
                {
                    "name": "maxPopulation",
                    "type": "NUMBER",
                    "description": "Only divisions having no more than this population",
                    "default": ""
                },
                {
                    "name": "distanceUnit",
                    "type": "STRING",
                    "description": "The unit of distance to use: MI | KM",
                    "default": ""
                },
                {
                    "name": "asciiMode",
                    "type": "BOOLEAN",
                    "description": "Display results using ASCII characters",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "The zero-ary offset into the results",
                    "default": ""
                },
                {
                    "name": "excludedCountryIds",
                    "type": "STRING",
                    "description": "Only divisions NOT in these countries (comma-delimited country codes or WikiData ids)",
                    "default": ""
                },
                {
                    "name": "languageCode",
                    "type": "STRING",
                    "description": "Display results in this language",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The maximum number of results to retrieve",
                    "default": ""
                },
                {
                    "name": "countryIds",
                    "type": "STRING",
                    "description": "Only divisions in these countries (comma-delimited country codes or WikiData ids)",
                    "default": ""
                },
                {
                    "name": "namePrefix",
                    "type": "STRING",
                    "description": "Only divisions whose names start with this prefix. If languageCode is set, the prefix will be matched on the name as it appears in that language.",
                    "default": ""
                },
                {
                    "name": "timeZoneIds",
                    "type": "STRING",
                    "description": "Only divisions in these time-zones",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "How to sort the results. Format: \u00b1SORT_FIELD,\u00b1SORT_FIELD where SORT_FIELD = countryCode | elevation | name | population",
                    "default": ""
                },
                {
                    "name": "includeDeleted",
                    "type": "STRING",
                    "description": "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/adminDivisions/Q104994/nearbyDivisions\"\nquerystring = {\"minPopulation\": \"\", \"hateoasMode\": \"\", \"namePrefixDefaultLangResults\": \"\", \"maxPopulation\": \"\", \"distanceUnit\": \"\", \"asciiMode\": \"\", \"offset\": \"\", \"radius\": \"100\", \"excludedCountryIds\": \"\", \"languageCode\": \"\", \"limit\": \"\", \"countryIds\": \"\", \"namePrefix\": \"\", \"timeZoneIds\": \"\", \"sort\": \"\", \"includeDeleted\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/adminDivisions/{divisionid}/nearbyDivisions\"\nquerystring = {\"minPopulation\": \"\", \"hateoasMode\": \"\", \"namePrefixDefaultLangResults\": \"\", \"maxPopulation\": \"\", \"distanceUnit\": \"\", \"asciiMode\": \"\", \"offset\": \"\", \"radius\": \"100\", \"excludedCountryIds\": \"\", \"languageCode\": \"\", \"limit\": \"\", \"countryIds\": \"\", \"namePrefix\": \"\", \"timeZoneIds\": \"\", \"sort\": \"\", \"includeDeleted\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Time-Zone Time",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/locale/timezones/America__Los_Angeles/time",
            "description": "Get the time-zone current time in ISO-6801 format: HHmmss.SSSZ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "zoneid",
                    "type": "STRING",
                    "description": "The time-zone id",
                    "default": "America__Los_Angeles"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/locale/timezones/America__Los_Angeles/time\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/locale/timezones/{zoneid}/time\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Time-Zone Date-Time",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/locale/timezones/America__Los_Angeles/dateTime",
            "description": "Get the timezone current date-time in ISO-6801 format: yyyyMMdd'T'HHmmssZ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "zoneid",
                    "type": "STRING",
                    "description": "The time-zone id",
                    "default": "America__Los_Angeles"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/locale/timezones/America__Los_Angeles/dateTime\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/locale/timezones/{zoneid}/dateTime\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "data": "2023-06-16T02:32:20.174483932-07:00"
            },
            "statuscode": 200,
            "schema": {
                "properties": {
                    "data": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "Languages",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/locale/languages",
            "description": "Get all supported languages",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "hateoasMode",
                    "type": "BOOLEAN",
                    "description": "Include HATEOAS-style links in results",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "The zero-ary offset index into the results",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The maximum number of results to retrieve",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/locale/languages\"\nquerystring = {\"hateoasMode\": \"\", \"offset\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/locale/languages\"\nquerystring = {\"hateoasMode\": \"\", \"offset\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "rel": {
                                    "type": "string"
                                },
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "metadata": {
                        "type": "object",
                        "properties": {
                            "currentOffset": {
                                "type": "integer"
                            },
                            "totalCount": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Locales",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/locale/locales",
            "description": "Get all known locales.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "hateoasMode",
                    "type": "BOOLEAN",
                    "description": "Include HATEOAS-style links in results",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The maximum number of results to retrieve",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "The zero-ary offset index into the results",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/locale/locales\"\nquerystring = {\"hateoasMode\": \"\", \"limit\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/locale/locales\"\nquerystring = {\"hateoasMode\": \"\", \"limit\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "rel": {
                                    "type": "string"
                                },
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "metadata": {
                        "type": "object",
                        "properties": {
                            "currentOffset": {
                                "type": "integer"
                            },
                            "totalCount": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Cities Near City",
            "url": "https://wft-geo-db.p.rapidapi.com/v1/geo/cities/Q60/nearbyCities",
            "description": "Get cities near the given city, filtering by optional criteria.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "cityid",
                    "type": "STRING",
                    "description": "The city id (either native id or wikiDataId)",
                    "default": "Q60"
                },
                {
                    "name": "radius",
                    "type": "NUMBER",
                    "description": "The location radius within which to find cities",
                    "default": "100"
                }
            ],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The maximum number of results to retrieve",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "The zero-ary offset into the results",
                    "default": ""
                },
                {
                    "name": "timeZoneIds",
                    "type": "STRING",
                    "description": "Only cities in these time-zones",
                    "default": ""
                },
                {
                    "name": "minPopulation",
                    "type": "NUMBER",
                    "description": "Only cities having at least this population",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "How to sort the results. Format: \u00b1SORT_FIELD,\u00b1SORT_FIELD where SORT_FIELD = countryCode | elevation | name | population",
                    "default": ""
                },
                {
                    "name": "languageCode",
                    "type": "STRING",
                    "description": "Display results in this language",
                    "default": ""
                },
                {
                    "name": "asciiMode",
                    "type": "BOOLEAN",
                    "description": "Display results using ASCII characters",
                    "default": ""
                },
                {
                    "name": "maxPopulation",
                    "type": "NUMBER",
                    "description": "Only cities having no more than this population",
                    "default": ""
                },
                {
                    "name": "namePrefix",
                    "type": "STRING",
                    "description": "Only cities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name as it appears in that language.",
                    "default": ""
                },
                {
                    "name": "namePrefixDefaultLangResults",
                    "type": "BOOLEAN",
                    "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default language is requested",
                    "default": ""
                },
                {
                    "name": "types",
                    "type": "STRING",
                    "description": "Only cities for these types (comma-delimited): CITY | ADM2",
                    "default": ""
                },
                {
                    "name": "distanceUnit",
                    "type": "STRING",
                    "description": "The unit of distance to use: MI | KM",
                    "default": ""
                },
                {
                    "name": "hateoasMode",
                    "type": "BOOLEAN",
                    "description": "Include HATEOAS-style links in results",
                    "default": ""
                },
                {
                    "name": "countryIds",
                    "type": "STRING",
                    "description": "Only cities in these countries (comma-delimited country codes or WikiData ids)",
                    "default": ""
                },
                {
                    "name": "excludedCountryIds",
                    "type": "STRING",
                    "description": "Only cities NOT in these countries (comma-delimited country codes or WikiData ids)",
                    "default": ""
                },
                {
                    "name": "includeDeleted",
                    "type": "STRING",
                    "description": "Whether to include any cities marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/cities/Q60/nearbyCities\"\nquerystring = {\"limit\": \"\", \"offset\": \"\", \"timeZoneIds\": \"\", \"minPopulation\": \"\", \"sort\": \"\", \"languageCode\": \"\", \"asciiMode\": \"\", \"maxPopulation\": \"\", \"namePrefix\": \"\", \"namePrefixDefaultLangResults\": \"\", \"types\": \"\", \"radius\": \"100\", \"distanceUnit\": \"\", \"hateoasMode\": \"\", \"countryIds\": \"\", \"excludedCountryIds\": \"\", \"includeDeleted\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/cities/{cityid}/nearbyCities\"\nquerystring = {\"limit\": \"\", \"offset\": \"\", \"timeZoneIds\": \"\", \"minPopulation\": \"\", \"sort\": \"\", \"languageCode\": \"\", \"asciiMode\": \"\", \"maxPopulation\": \"\", \"namePrefix\": \"\", \"namePrefixDefaultLangResults\": \"\", \"types\": \"\", \"radius\": \"100\", \"distanceUnit\": \"\", \"hateoasMode\": \"\", \"countryIds\": \"\", \"excludedCountryIds\": \"\", \"includeDeleted\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {
                "properties": {
                    "data": {
                        "items": {
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "properties": {
                            "currentOffset": {
                                "type": "integer"
                            },
                            "totalCount": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        }
    ],
    "standardized_name": "geodb_cities"
}