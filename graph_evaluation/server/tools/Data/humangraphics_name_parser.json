{
    "product_id": "api_455daaf1-eea1-4364-864b-881d55851e81",
    "tool_description": "HumanGraphics Name Parser parses personal names into their constituent parts and appends demographic estimates.",
    "home_url": "https://rapidapi.com/aleph0-foobar/api/humangraphics-name-parser1/",
    "name": "HumanGraphics Name Parser",
    "title": "HumanGraphics Name Parser",
    "pricing": "FREEMIUM",
    "tool_name": "HumanGraphics Name Parser",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 284,
        "avgSuccessRate": 100,
        "popularityScore": 8.4,
        "__typename": "Score"
    },
    "host": "humangraphics-name-parser1.p.rapidapi.com",
    "api_list": [
        {
            "name": "analyzeHumanNameBulk",
            "url": "https://humangraphics-name-parser1.p.rapidapi.com/v1/humans/names/analyze/bulk",
            "description": "Analyze a list of up to 10 human names provided in parts, i.e., given name and family name, in one operation. Note that bulk operations are intended to increase throughput, not reduce cost.\n\nCost: 1 credit per name, regardless of whether or not each match succeeds.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://humangraphics-name-parser1.p.rapidapi.com/v1/humans/names/analyze/bulk\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"humangraphics-name-parser1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://humangraphics-name-parser1.p.rapidapi.com/v1/humans/names/analyze/bulk\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"humangraphics-name-parser1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "multiparseHumanNames",
            "url": "https://humangraphics-name-parser1.p.rapidapi.com/v1/humans/names/multiparse",
            "description": "Parses one or more human names from the given string. This is intended for byline-style text (i.e., lists of names) as opposed to plain text (i.e., named entity recognition).\n\nCost: 1 credit, regardless of whether or not the match succeeds and the number of names returned.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://humangraphics-name-parser1.p.rapidapi.com/v1/humans/names/multiparse\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"humangraphics-name-parser1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://humangraphics-name-parser1.p.rapidapi.com/v1/humans/names/multiparse\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"humangraphics-name-parser1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "parseHumanName",
            "url": "https://humangraphics-name-parser1.p.rapidapi.com/v1/humans/names/parse",
            "description": "Parses a human name string (e.g., \"George Washington\") into its most likely parts (e.g., forename \"George\", surname \"Washington\"), with demographic estimates (i.e., age, sex, race, and country of origin). A name has at most six components:\n\n1. **Given Name** - In most cultures, a person's given name is a name given to them at birth by parents. Given names are also called first names, forenames, and Christian names. In \"John Ronald Reuel Tolkien,\" \"John\" is the given name.\n2. **Middle Name** - In many cultures, people also receive one or more \"middle names.\" These names are typically either just a second given name, a woman's [maiden name](https://en.wikipedia.org/wiki/Maiden_and_married_names), a name of family significance (e.g., the mother's maiden name), or a [patronymic](https://en.wikipedia.org/wiki/Patronymic)/[matronymic](https://en.wikipedia.org/wiki/Matronymic) name. In \"John Ronald Reuel Tolkien,\" \"Ronald\" is the middle name.\n3. **Second Middle Name** - In some cultures, children are given two middle names, either at birth or at a young age, as in Catholic confirmation (e.g., [George R. R. Martin](https://en.wikipedia.org/wiki/George_R._R._Martin#Early_life)). In \"John Ronald Reuel Tolkien,\" \"Reuel\" is the second middle name.\n4. **Nickname** - It's not uncommon for people to accumulate various and sundry sobriquets throughout their lives, or simply to prefer to go by a name different from their given name. In \"Pete 'Maverick' Mitchell,\" \"Maverick\" is the nickname.\n5. **Family Name** - In most cultures, a person's family name is inherited from one or both of their parents. Family names are also called last names and surnames. In \"John Ronald Reuel Tolkien,\" \"Tolkien\" is the family name.\n6. **Second Family Name** - In some cultures (particularly [hispanic](https://en.wikipedia.org/wiki/Spanish_naming_customs) cultures), children receive two surnames at birth. In \"Jos\u00e9 Fern\u00e1ndez Mart\u00ednez,\" \"Fern\u00e1ndez\" is the family name, and \"Mart\u00ednez\" is the second family name.\n\nMore components may be added to the name model over time, e.g., titles.\n\nNote that while individual parts of a name held separately are not PII (e.g., \"John\" and \"Tolkien,\" separately), a full name (e.g., \"John Ronald Reuel Tolkien\") is PII.\n\nCost: 1 credit, whether the match is successful or not.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://humangraphics-name-parser1.p.rapidapi.com/v1/humans/names/parse\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"humangraphics-name-parser1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://humangraphics-name-parser1.p.rapidapi.com/v1/humans/names/parse\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"humangraphics-name-parser1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "description": "A response from the `parseHumanName` endpoint.",
                "properties": {
                    "confidence": {
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "maximum": 1,
                        "description": "The likelihood that the match is the correct parse among all valid, successful parses for this name"
                    },
                    "match": {
                        "type": "object",
                        "description": "A match of one human name",
                        "properties": {
                            "template": {
                                "type": "object",
                                "description": "The name syntax that was matched during this parse",
                                "properties": {
                                    "text": {
                                        "description": "**Omitted**"
                                    }
                                }
                            },
                            "givenName": {
                                "type": "object",
                                "description": "One part of a name match",
                                "required": [
                                    "type",
                                    "matchedText"
                                ],
                                "properties": {
                                    "type": {
                                        "description": "**Omitted**"
                                    },
                                    "matchedText": {
                                        "description": "**Omitted**"
                                    }
                                }
                            },
                            "middleName": {
                                "type": "object",
                                "description": "One part of a name match",
                                "required": [
                                    "type",
                                    "matchedText"
                                ],
                                "properties": {
                                    "type": {
                                        "description": "**Omitted**"
                                    },
                                    "matchedText": {
                                        "description": "**Omitted**"
                                    }
                                }
                            },
                            "secondMiddleName": {
                                "type": "object",
                                "description": "One part of a name match",
                                "required": [
                                    "type",
                                    "matchedText"
                                ],
                                "properties": {
                                    "type": {
                                        "description": "**Omitted**"
                                    },
                                    "matchedText": {
                                        "description": "**Omitted**"
                                    }
                                }
                            },
                            "nickName": {
                                "type": "object",
                                "description": "One part of a name match",
                                "required": [
                                    "type",
                                    "matchedText"
                                ],
                                "properties": {
                                    "type": {
                                        "description": "**Omitted**"
                                    },
                                    "matchedText": {
                                        "description": "**Omitted**"
                                    }
                                }
                            },
                            "familyName": {
                                "type": "object",
                                "description": "One part of a name match",
                                "required": [
                                    "type",
                                    "matchedText"
                                ],
                                "properties": {
                                    "type": {
                                        "description": "**Omitted**"
                                    },
                                    "matchedText": {
                                        "description": "**Omitted**"
                                    }
                                }
                            },
                            "secondFamilyName": {
                                "type": "object",
                                "description": "One part of a name match",
                                "required": [
                                    "type",
                                    "matchedText"
                                ],
                                "properties": {
                                    "type": {
                                        "description": "**Omitted**"
                                    },
                                    "matchedText": {
                                        "description": "**Omitted**"
                                    }
                                }
                            }
                        }
                    },
                    "age": {
                        "type": "string",
                        "description": "A person's age in whole years",
                        "enum": [
                            "under18",
                            "from18To24",
                            "from25To34",
                            "from35To44",
                            "from45To54",
                            "from55To64",
                            "over65"
                        ]
                    },
                    "ageEstimate": {
                        "type": "object",
                        "description": "A discrete probability distribution modeling one person's likely age",
                        "properties": {
                            "under18": {
                                "description": "**Omitted**"
                            },
                            "from18To24": {
                                "description": "**Omitted**"
                            },
                            "from25To34": {
                                "description": "**Omitted**"
                            },
                            "from35To44": {
                                "description": "**Omitted**"
                            },
                            "from45To54": {
                                "description": "**Omitted**"
                            },
                            "from55To64": {
                                "description": "**Omitted**"
                            },
                            "over65": {
                                "description": "**Omitted**"
                            }
                        }
                    },
                    "gender": {
                        "type": "string",
                        "description": "One person's [gender](https://en.wikipedia.org/wiki/Gender",
                        "enum": [
                            "male",
                            "female"
                        ]
                    },
                    "genderEstimate": {
                        "type": "object",
                        "description": "A discrete probability distribution modeling one person's likely self-identified gender",
                        "properties": {
                            "male": {
                                "description": "**Omitted**"
                            },
                            "female": {
                                "description": "**Omitted**"
                            }
                        }
                    },
                    "race": {
                        "type": "string",
                        "description": "One person's [race](https://en.wikipedia.org/wiki/Race_%28human_categorization%29). These values follow [the labels and definitions laid out in the 2010 US Census](https://www.census.gov/content/dam/Census/library/publications/2011/dec/c2010br-02.pdf), and can be interpreted as:\n\n* `white` - Non-Hispanic White Alone\n* `black` - Non-Hispanic Black or African American Alone,\n* `asianPacificIslander` - Non-Hispanic American Indian and Alaska Native Alone\n* `americanIndian` - Non-Hispanic Asian and Native Hawaiian and Other Pacific Islander Alone\n* `twoPlusRaces` - Non-Hispanic Two or More Races\n* `hispanic` - Hispanic or Latino origin\n",
                        "enum": [
                            "white",
                            "black",
                            "asianPacificIslander",
                            "americanIndian",
                            "twoPlusRaces",
                            "hispanic"
                        ]
                    },
                    "raceEstimate": {
                        "type": "object",
                        "description": "A discrete probability distribution modeling one person's likely race",
                        "properties": {
                            "hispanic": {
                                "description": "**Omitted**"
                            },
                            "white": {
                                "description": "**Omitted**"
                            },
                            "black": {
                                "description": "**Omitted**"
                            },
                            "asianPacificIslander": {
                                "description": "**Omitted**"
                            },
                            "americanIndian": {
                                "description": "**Omitted**"
                            },
                            "twoPlusRaces": {
                                "description": "**Omitted**"
                            }
                        }
                    },
                    "country": {
                        "type": "string",
                        "description": "An ISO 3166-1 alpha-2 country code.",
                        "format": "country"
                    },
                    "countryEstimate": {
                        "type": "object",
                        "description": "A discrete probability distribution modeling one person's likely country of origin. Keys are [ISO 3166-1 alpha-2 codes](https://en.wikipedia.org/wiki/ISO_3166-1), e.g., `US`.",
                        "additionalProperties": {
                            "description": "**Omitted**"
                        }
                    }
                }
            }
        },
        {
            "name": "analyzeHumanName",
            "url": "https://humangraphics-name-parser1.p.rapidapi.com/v1/humans/names/analyze",
            "description": "Analyze a human name provided in parts, i.e., given name and family name.\n\nCost: 1 credit, regardless of whether or not the match succeeds.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://humangraphics-name-parser1.p.rapidapi.com/v1/humans/names/analyze\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"humangraphics-name-parser1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://humangraphics-name-parser1.p.rapidapi.com/v1/humans/names/analyze\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"humangraphics-name-parser1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "parseHumanNameBulk",
            "url": "https://humangraphics-name-parser1.p.rapidapi.com/v1/humans/names/parse/bulk",
            "description": "Parse a list of up to 10 human names in one operation. Note that bulk operations are intended to increase throughput, not reduce cost.\n\nCost: 1 credit per name, whether each match is successful or not.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://humangraphics-name-parser1.p.rapidapi.com/v1/humans/names/parse/bulk\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"humangraphics-name-parser1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://humangraphics-name-parser1.p.rapidapi.com/v1/humans/names/parse/bulk\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"humangraphics-name-parser1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "multiparseHumanNamesBulk",
            "url": "https://humangraphics-name-parser1.p.rapidapi.com/v1/humans/names/multiparse/bulk",
            "description": "Parse a list of up to 10 human name(s) in one operation",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://humangraphics-name-parser1.p.rapidapi.com/v1/humans/names/multiparse/bulk\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"humangraphics-name-parser1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://humangraphics-name-parser1.p.rapidapi.com/v1/humans/names/multiparse/bulk\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"humangraphics-name-parser1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        }
    ]
}