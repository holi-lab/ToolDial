{
    "tool_name": "Scraper's Proxy",
    "tool_description": "Simple HTTP proxy API made for scrapers.  Scrape anonymously without having to worry about restrictions, blocks or captchas. Our goal is to provide you with faster response times and higher success rates.",
    "title": "Scraper's Proxy",
    "pricing": "FREEMIUM",
    "score": {
        "avgServiceLevel": 99,
        "avgLatency": 5147,
        "avgSuccessRate": 99,
        "popularityScore": 9.7,
        "__typename": "Score"
    },
    "home_url": "https://rapidapi.com/scapers-proxy-scapers-proxy-default/api/scrapers-proxy2/",
    "host": "scrapers-proxy2.p.rapidapi.com",
    "api_list": [
        {
            "name": "Tor GET",
            "url": "https://scrapers-proxy2.p.rapidapi.com/tor",
            "description": "Send request to the [Tor network](//www.torproject.org/). Use [Standard GET](//rapidapi.com/scapers-proxy-scapers-proxy-default/api/scrapers-proxy2) instead for better performance and reliability for normal websites. Only recommended to access websites that are only accessible from the Tor network (e.g. websites with a \".onion\" top level domain), since this enpoint is slower than other endpoints.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "user_agent",
                    "type": "STRING",
                    "description": "Pass in `user_agent` if the page you are trying to scrape requires a specific user agent. If the page does not require a specific user agent, but a user agent from a type of device using `device` is recommended",
                    "default": ""
                },
                {
                    "name": "device",
                    "type": "STRING",
                    "description": "Pass in `device` to specify the type of web page you would like to see without needing to specify a user agent. This is recommended as an alternative to using `user_agent ` since it has a higher success rate",
                    "default": ""
                },
                {
                    "name": "params",
                    "type": "OBJECT",
                    "description": " Pass in `params` as json serialized object to specify url query parameters. This is an alternative to adding a query string to the `url` parameter",
                    "default": ""
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "http://expyuzz4wqqyqhjn.onion/about/history/"
                }
            ],
            "code": "import requests\n\nurl = \"https://scrapers-proxy2.p.rapidapi.com/tor\"\nquerystring = {\"url\": url}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"scrapers-proxy2.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": "<!doctype html>\n<html>\n<head>\n    <title>Example Domain</title>\n\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <style type=\"text/css\">\n    body {\n        background-color: #f0f0f2;\n        margin: 0;\n        padding: 0;\n        font-family: -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", \"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n        \n    }\n    div {\n        width: 600px;\n        margin: 5em auto;\n        padding: 2em;\n        background-color: #fdfdff;\n        border-radius: 0.5em;\n        box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);\n    }\n    a:link, a:visited {\n        color: #38488f;\n        text-decoration: none;\n    }\n    @media (max-width: 700px) {\n        div {\n            margin: 0 auto;\n            width: auto;\n        }\n    }\n    </style>    \n</head>\n\n<body>\n<div>\n    <h1>Example Domain</h1>\n    <p>This domain is for use in illustrative examples in documents. You may use this\n    domain in literature without prior coordination or asking for permission.</p>\n    <p><a href=\"https://www.iana.org/domains/example\">More information...</a></p>\n</div>\n</body>\n</html>\n",
            "headers": {
                "access-control-allow-origin": "*",
                "content-type": "text/html; charset=UTF-8",
                "date": "Mon, 31 Aug 2020 02:35:33 GMT",
                "original_accept_ranges": "bytes",
                "original_age": "282729",
                "original_cache_control": "max-age=604800",
                "original_connection": "close",
                "original_content_encoding": "gzip",
                "original_content_length": "648",
                "original_content_type": "text/html; charset=UTF-8",
                "original_etag": "\"3147526947+gzip\"",
                "original_expires": "Mon, 07 Sep 2020 02:35:33 GMT",
                "original_last_modified": "Thu, 17 Oct 2019 07:18:26 GMT",
                "original_server": "ECS (ord/573B)",
                "original_status": "200",
                "original_vary": "Accept-Encoding",
                "original_x_cache": "HIT",
                "scrapers_proxy_status": "200",
                "scrapers_proxy_version": "1.2.7",
                "server": "RapidAPI-1.1.24",
                "x-rapidapi-region": "AWS - us-west-2",
                "x-rapidapi-version": "1.1.24",
                "content-length": "1256",
                "connection": "Close"
            },
            "schema": {}
        },
        {
            "name": "JavaScript Rendered Page GET",
            "url": "https://scrapers-proxy2.p.rapidapi.com/javascript",
            "description": "Render html using a real browser. Useful for if content is loaded asynchronously or generated dynamically in the browser. JavaScript rendering is usually required to scrape websites that use React, Angular or Vue. For websites that do not need javascript rendering use [Standard GET](//rapidapi.com/scapers-proxy-scapers-proxy-default/api/scrapers-proxy2) instead for better performance and reliability.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": " Pass in `url` to specify the url that you want to fetch. If you require  query parameters you can include a query string in the url or specify a json serialized object in the `params` parameter",
                    "default": "https://example.com"
                }
            ],
            "optional_parameters": [
                {
                    "name": "session",
                    "type": "STRING",
                    "description": "Pass in `session` to keep cookies and ip address (if necessary) for future requests. You can obtain a session token from the response header `scrapers_proxy_session` after sending a request to the api. Session tokens will expire after 30 seconds of inactivity",
                    "default": ""
                },
                {
                    "name": "user_agent",
                    "type": "STRING",
                    "description": "Pass in `user_agent` if the page you are trying to scrape requires a specific user agent. If the page does not require a specific user agent, but a user agent from a type of device using `device` is recommended",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Pass in `country` for requests that require geolocation to route requests to proxies in specific country. Note: using `country` parameter can increase latency and decrease success rate for certain domains",
                    "default": ""
                },
                {
                    "name": "device",
                    "type": "STRING",
                    "description": "Pass in `device` to specify the type of web page you would like to see without needing to specify a user agent. This is recommended as an alternative to using `user_agent ` since it has a higher success rate",
                    "default": ""
                },
                {
                    "name": "click_selector",
                    "type": "STRING",
                    "description": "Pass in `click_selector` as a css selector to specify an element that the browser should click on before  capturing the html of the page",
                    "default": ""
                },
                {
                    "name": "params",
                    "type": "OBJECT",
                    "description": " Pass in `params` as json serialized object to specify url query parameters. This is an alternative to adding a query string to the `url` parameter",
                    "default": ""
                },
                {
                    "name": "wait_ajax",
                    "type": "STRING",
                    "description": "Pass in `wait_ajax` to specify if the browser should wait for ajax requests to finish before capturing the html of the page.",
                    "default": ""
                },
                {
                    "name": "wait_time",
                    "type": "NUMBER",
                    "description": "Pass in `wait_time` to specify the time in milliseconds to wait before capturing the resulting html of the page.",
                    "default": "10000"
                }
            ],
            "code": "import requests\n\nurl = \"https://scrapers-proxy2.p.rapidapi.com/javascript\"\nquerystring = {\"url\": url, \"wait_time\": wait_time}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"scrapers-proxy2.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": "<html><head>\n    <title>Example Domain</title>\n\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <style type=\"text/css\">\n    body {\n        background-color: #f0f0f2;\n        margin: 0;\n        padding: 0;\n        font-family: -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", \"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n        \n    }\n    div {\n        width: 600px;\n        margin: 5em auto;\n        padding: 2em;\n        background-color: #fdfdff;\n        border-radius: 0.5em;\n        box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);\n    }\n    a:link, a:visited {\n        color: #38488f;\n        text-decoration: none;\n    }\n    @media (max-width: 700px) {\n        div {\n            margin: 0 auto;\n            width: auto;\n        }\n    }\n    </style>    \n</head>\n\n<body>\n<div>\n    <h1>Example Domain</h1>\n    <p>This domain is for use in illustrative examples in documents. You may use this\n    domain in literature without prior coordination or asking for permission.</p>\n    <p><a href=\"https://www.iana.org/domains/example\">More information...</a></p>\n</div>\n\n\n</body></html>",
            "headers": {
                "access-control-allow-origin": "*",
                "content-type": "text/html; charset=UTF-8",
                "date": "Mon, 31 Aug 2020 02:33:20 GMT",
                "original_accept_ranges": "bytes",
                "original_age": "556528",
                "original_cache_control": "max-age=604800",
                "original_content_encoding": "gzip",
                "original_content_length": "648",
                "original_content_type": "text/html; charset=UTF-8",
                "original_etag": "\"3147526947\"",
                "original_expires": "Mon, 07 Sep 2020 02:33:18 GMT",
                "original_last_modified": "Thu, 17 Oct 2019 07:18:26 GMT",
                "original_server": "ECS (dcb/7F3B)",
                "original_status": "200",
                "original_vary": "Accept-Encoding",
                "original_x_cache": "HIT",
                "scrapers_proxy_session": "s0-468ac1c1-5294-4369-b372-5bc860f53012",
                "scrapers_proxy_status": "200",
                "scrapers_proxy_version": "1.2.7",
                "server": "RapidAPI-1.1.24",
                "x-rapidapi-region": "AWS - us-west-2",
                "x-rapidapi-version": "1.1.24",
                "content-length": "1233",
                "connection": "Close"
            },
            "schema": {}
        },
        {
            "name": "Standard GET",
            "url": "https://scrapers-proxy2.p.rapidapi.com/standard",
            "description": "Basic proxy GET request",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": " Pass in `url` to specify the url that you want to fetch. If you require  query parameters you can include a query string in the url or specify a json serialized object in the `params` parameter",
                    "default": "https://example.com"
                }
            ],
            "optional_parameters": [
                {
                    "name": "device",
                    "type": "STRING",
                    "description": "Pass in `device` to specify the type of web page you would like to see without needing to specify a user agent. This is recommended as an alternative to using `user_agent ` since it has a higher success rate",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Pass in `country` for requests that require geolocation to route requests to proxies in specific country. Note: using `country` parameter can increase latency and decrease success rate for certain domains",
                    "default": ""
                },
                {
                    "name": "session",
                    "type": "STRING",
                    "description": "Pass in `session` to keep cookies and ip address (if necessary) for future requests. You can obtain a session token from the response header `scrapers_proxy_session` after sending a request to the api. Session tokens will expire after 30 seconds of inactivity",
                    "default": ""
                },
                {
                    "name": "params",
                    "type": "OBJECT",
                    "description": " Pass in `params` as json serialized object to specify url query parameters. This is an alternative to adding a query string to the `url` parameter",
                    "default": ""
                },
                {
                    "name": "user_agent",
                    "type": "STRING",
                    "description": "Pass in `user_agent` if the page you are trying to scrape requires a specific user agent. If the page does not require a specific user agent, but a user agent from a type of device using `device` is recommended",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://scrapers-proxy2.p.rapidapi.com/standard\"\nquerystring = {\"url\": url}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"scrapers-proxy2.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": "<!doctype html>\n<html>\n<head>\n    <title>Example Domain</title>\n\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <style type=\"text/css\">\n    body {\n        background-color: #f0f0f2;\n        margin: 0;\n        padding: 0;\n        font-family: -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", \"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n        \n    }\n    div {\n        width: 600px;\n        margin: 5em auto;\n        padding: 2em;\n        background-color: #fdfdff;\n        border-radius: 0.5em;\n        box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);\n    }\n    a:link, a:visited {\n        color: #38488f;\n        text-decoration: none;\n    }\n    @media (max-width: 700px) {\n        div {\n            margin: 0 auto;\n            width: auto;\n        }\n    }\n    </style>    \n</head>\n\n<body>\n<div>\n    <h1>Example Domain</h1>\n    <p>This domain is for use in illustrative examples in documents. You may use this\n    domain in literature without prior coordination or asking for permission.</p>\n    <p><a href=\"https://www.iana.org/domains/example\">More information...</a></p>\n</div>\n</body>\n</html>\n",
            "headers": {
                "access-control-allow-origin": "*",
                "content-encoding": "gzip",
                "content-type": "text/html; charset=UTF-8",
                "original_accept_ranges": "bytes",
                "original_age": "543169",
                "original_cache_control": "max-age=604800",
                "original_connection": "close",
                "original_content_encoding": "gzip",
                "original_content_length": "648",
                "original_content_type": "text/html; charset=UTF-8",
                "original_etag": "\"3147526947\"",
                "original_expires": "Sun, 26 Jul 2020 22:50:39 GMT",
                "original_last_modified": "Thu, 17 Oct 2019 07:18:26 GMT",
                "original_server": "ECS (dcb/7FA5)",
                "original_status": "200",
                "original_vary": "Accept-Encoding",
                "original_x_cache": "HIT",
                "scrapers_proxy_session": "s0-bb89a210-7481-43c5-a0e7-07657e98eac6",
                "scrapers_proxy_status": "200",
                "scrapers_proxy_version": "1.0.16"
            },
            "schema": {}
        },
        {
            "name": "Standard POST",
            "url": "https://scrapers-proxy2.p.rapidapi.com/standard",
            "description": "Basic proxy POST request\nNote: Misuse of this endpoint to cause harm to other websites (e.g. spam, denial of service, etc.) will result in suspension service to your account",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": " Pass in `url` to specify the url that you want to fetch. If you require  query parameters you can include a query string in the url or specify a json serialized object in the `params` parameter",
                    "default": "https://example.com"
                }
            ],
            "optional_parameters": [
                {
                    "name": "content-type",
                    "type": "STRING",
                    "description": " Pass in `content-type` header to specify content type of your request payload. This will overridden by the `content_type` query parameter",
                    "default": ""
                },
                {
                    "name": "device",
                    "type": "STRING",
                    "description": "Pass in `device` to specify the type of web page you would like to see without needing to specify a user agent. This is recommended as an alternative to using `user_agent ` since it has a higher success rate",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Pass in `country` for requests that require geolocation to route requests to proxies in specific country. Note: using `country` parameter can increase latency and decrease success rate for certain domains",
                    "default": ""
                },
                {
                    "name": "content_type",
                    "type": "STRING",
                    "description": " Pass in `content_type` to specify the content type of your request payload. This will override the `content-type` request header",
                    "default": "application/json"
                },
                {
                    "name": "session",
                    "type": "STRING",
                    "description": "Pass in `session` to keep cookies and ip address (if necessary) for future requests. You can obtain a session token from the response header `scrapers_proxy_session` after sending a request to the api. Session tokens will expire after 30 seconds of inactivity",
                    "default": ""
                },
                {
                    "name": "user_agent",
                    "type": "STRING",
                    "description": "Pass in `user_agent` if the page you are trying to scrape requires a specific user agent. If the page does not require a specific user agent, but a user agent from a type of device using `device` is recommended",
                    "default": ""
                },
                {
                    "name": "params",
                    "type": "OBJECT",
                    "description": " Pass in `params` as json serialized object to specify url query parameters. This is an alternative to adding a query string to the `url` parameter",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://scrapers-proxy2.p.rapidapi.com/standard\"\nquerystring = {\"url\": url, \"content_type\": content_type}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"scrapers-proxy2.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": "<!doctype html>\n<html>\n<head>\n    <title>Example Domain</title>\n\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <style type=\"text/css\">\n    body {\n        background-color: #f0f0f2;\n        margin: 0;\n        padding: 0;\n        font-family: -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", \"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n        \n    }\n    div {\n        width: 600px;\n        margin: 5em auto;\n        padding: 2em;\n        background-color: #fdfdff;\n        border-radius: 0.5em;\n        box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);\n    }\n    a:link, a:visited {\n        color: #38488f;\n        text-decoration: none;\n    }\n    @media (max-width: 700px) {\n        div {\n            margin: 0 auto;\n            width: auto;\n        }\n    }\n    </style>    \n</head>\n\n<body>\n<div>\n    <h1>Example Domain</h1>\n    <p>This domain is for use in illustrative examples in documents. You may use this\n    domain in literature without prior coordination or asking for permission.</p>\n    <p><a href=\"https://www.iana.org/domains/example\">More information...</a></p>\n</div>\n</body>\n</html>\n",
            "headers": {
                "access-control-allow-origin": "*",
                "content-encoding": "gzip",
                "content-type": "text/html; charset=UTF-8",
                "original_accept_ranges": "bytes",
                "original_age": "543169",
                "original_cache_control": "max-age=604800",
                "original_connection": "close",
                "original_content_encoding": "gzip",
                "original_content_length": "648",
                "original_content_type": "text/html; charset=UTF-8",
                "original_etag": "\"3147526947\"",
                "original_expires": "Sun, 26 Jul 2020 22:50:39 GMT",
                "original_last_modified": "Thu, 17 Oct 2019 07:18:26 GMT",
                "original_server": "ECS (dcb/7FA5)",
                "original_status": "200",
                "original_vary": "Accept-Encoding",
                "original_x_cache": "HIT",
                "scrapers_proxy_session": "s0-bb89a210-7481-43c5-a0e7-07657e98eac6",
                "scrapers_proxy_status": "200",
                "scrapers_proxy_version": "1.0.16"
            },
            "schema": {}
        },
        {
            "name": "Parser GET",
            "url": "https://scrapers-proxy2.p.rapidapi.com/parser",
            "description": "Automatically parses html into an easily processable json format",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": " Pass in `url` to specify the url that you want to fetch. If you require  query parameters you can include a query string in the url or specify a json serialized object in the `params` parameter",
                    "default": "https://example.com"
                }
            ],
            "optional_parameters": [
                {
                    "name": "auto_detect",
                    "type": "BOOLEAN",
                    "description": "Pass in `auto_detect` to get our system to automatically detect which parser to use.",
                    "default": "true"
                },
                {
                    "name": "parser",
                    "type": "STRING",
                    "description": "Pass in `parser` to specify how to parse the page. For example, pass in `generic-extractor` to extract basic information from any page. For more options please contact support.",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Pass in `country` for requests that require geolocation to route requests to proxies in specific country. Note: using `country` parameter can increase latency and decrease success rate for certain domains",
                    "default": ""
                },
                {
                    "name": "user_agent",
                    "type": "STRING",
                    "description": "Pass in `user_agent` if the page you are trying to scrape requires a specific user agent. If the page does not require a specific user agent, but a user agent from a type of device using `device` is recommended",
                    "default": ""
                },
                {
                    "name": "device",
                    "type": "STRING",
                    "description": "Pass in `device` to specify the type of web page you would like to see without needing to specify a user agent. This is recommended as an alternative to using `user_agent ` since it has a higher success rate",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://scrapers-proxy2.p.rapidapi.com/parser\"\nquerystring = {\"auto_detect\": auto_detect, \"url\": url}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"scrapers-proxy2.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "title": "Example Domain",
                "links": [
                    "https://www.iana.org/domains/example"
                ],
                "images": {},
                "content": "Example Domain.This domain is for use in illustrative examples in documents. You may use this domain in literature without prior coordination or asking for permission.",
                "canonical": null,
                "alert": "A generic web scraper has been selected. Please contact support if you require a more detailed scraper for your given URL.",
                "meta": {
                    "keywords": "",
                    "description": ""
                }
            },
            "headers": {
                "access-control-allow-origin": "*",
                "alt-svc": "h3-27=\":443\"; ma=86400, h3-28=\":443\"; ma=86400, h3-29=\":443\"; ma=86400, h3=\":443\"; ma=86400",
                "content-type": "application/json",
                "date": "Mon, 26 Jul 2021 00:20:19 GMT",
                "nel": "{\"report_to\":\"cf-nel\",\"max_age\":604800}",
                "scrapers_proxy_status": "200",
                "scrapers_proxy_version": "2.1.10",
                "content-length": "461"
            },
            "schema": {}
        },
        {
            "name": "Standard POST",
            "url": "https://scrapers-proxy2.p.rapidapi.com/standard",
            "description": "Basic proxy POST request\nNote: Misuse of this endpoint to cause harm to other websites (e.g. spam, denial of service, etc.) will result in suspension service to your account",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": " Pass in `url` to specify the url that you want to fetch. If you require  query parameters you can include a query string in the url or specify a json serialized object in the `params` parameter",
                    "default": "https://example.com"
                }
            ],
            "optional_parameters": [
                {
                    "name": "device",
                    "type": "STRING",
                    "description": "Pass in `device` to specify the type of web page you would like to see without needing to specify a user agent. This is recommended as an alternative to using `user_agent ` since it has a higher success rate",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Pass in `country` for requests that require geolocation to route requests to proxies in specific country. Note: using `country` parameter can increase latency and decrease success rate for certain domains",
                    "default": ""
                },
                {
                    "name": "content_type",
                    "type": "STRING",
                    "description": " Pass in `content_type` to specify the content type of your request payload. This will override the `content-type` request header",
                    "default": "application/json"
                },
                {
                    "name": "session",
                    "type": "STRING",
                    "description": "Pass in `session` to keep cookies and ip address (if necessary) for future requests. You can obtain a session token from the response header `scrapers_proxy_session` after sending a request to the api. Session tokens will expire after 30 seconds of inactivity",
                    "default": ""
                },
                {
                    "name": "user_agent",
                    "type": "STRING",
                    "description": "Pass in `user_agent` if the page you are trying to scrape requires a specific user agent. If the page does not require a specific user agent, but a user agent from a type of device using `device` is recommended",
                    "default": ""
                },
                {
                    "name": "params",
                    "type": "OBJECT",
                    "description": " Pass in `params` as json serialized object to specify url query parameters. This is an alternative to adding a query string to the `url` parameter",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://scrapers-proxy2.p.rapidapi.com/standard\"\nquerystring = {\"url\": \"https://example.com\", \"device\": \"\", \"country\": \"\", \"content_type\": \"application/json\", \"session\": \"\", \"user_agent\": \"\", \"params\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"scrapers-proxy2.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://scrapers-proxy2.p.rapidapi.com/standard\"\nquerystring = {\"url\": \"https://example.com\", \"device\": \"\", \"country\": \"\", \"content_type\": \"application/json\", \"session\": \"\", \"user_agent\": \"\", \"params\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"scrapers-proxy2.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        }
    ]
}