{
    "product_id": "api_dd1bf117-1224-4700-895b-fd9123109520",
    "tool_description": "Semantic search for quotes. Wondering which celebrities have said something similar? Look no more, this API gives you the power to search for quotes semantically from over 1M+ quotes. The Artificial Intelligence (NLP) engine behind the scene seeks to understand the meaning of your query rather than simply matching keywords. We allows user to flexibly filter the results by the length of the quote, and/or by a large variety of tags.",
    "home_url": "https://rapidapi.com/dfskGT/api/semantic-quotes/",
    "name": "Semantic Quotes",
    "title": "Semantic Quotes",
    "pricing": "FREEMIUM",
    "tool_name": "Semantic Quotes",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 1889,
        "avgSuccessRate": 100,
        "popularityScore": 8.3,
        "__typename": "Score"
    },
    "host": "semantic-quotes.p.rapidapi.com",
    "api_list": [
        {
            "name": "Random Quote",
            "url": "https://semantic-quotes.p.rapidapi.com/random",
            "description": "Get random quotes by length and/or tags.  **NOTE:** up to 10 results can be returned, they may have similar meanings. If you want want absolute random, just pick the first result (or set `limit` to 1) and call this API again to get another quote.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "max_length",
                    "type": "NUMBER",
                    "description": "Maximum length of the quote.",
                    "default": 4000
                },
                {
                    "name": "tags",
                    "type": "STRING",
                    "description": "Comma seperated tags for filtering, for example, \n                `faith`,\n                `god`,\n                `humor`, \n                `hope`,\n                `inspirational`, \n                `love`, \n                `life`,\n                `motivational`,\n                `philosophy`,\n                `religion`,\n                `science`,\n                `spirituality`,\n                `success`,\n                `truth`,\n                `wisdom`,\n                `poetry`,\n                and much more.\n        ",
                    "default": "inspirational,motivational"
                },
                {
                    "name": "min_length",
                    "type": "NUMBER",
                    "description": "Minimum length of the quote.",
                    "default": "0"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Number of results returned.",
                    "default": 3
                }
            ],
            "code": "import requests\n\nurl = \"https://semantic-quotes.p.rapidapi.com/random\"\nquerystring = {\"max_length\": 4000, \"tags\": \"inspirational,motivational\", \"min_length\": \"0\", \"limit\": 3}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"semantic-quotes.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://semantic-quotes.p.rapidapi.com/random\"\nquerystring = {\"max_length\": 4000, \"tags\": \"inspirational,motivational\", \"min_length\": \"0\", \"limit\": 3}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"semantic-quotes.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "response": [
                    {
                        "author": "Scot McKnight",
                        "tags": [
                            "christianity",
                            "discipleship",
                            "inspirational",
                            "religion"
                        ],
                        "quote": "\"Why do so many today want to wander off to South Africa or Kenya or India or Russia or Honduras or Costa Rica or Peru to help with justice issues but not spend the same effort in their own neighborhood or community or state? Why do young suburbanites, say in Chicago, want to go to Kentucky or Tennessee to help people but not want to spend that same time to go to the inner city in their own area to help with justice issues? I asked this question to a mature student in my office one day, and he thought he had a partial explanation: 'Because my generation is searching for experiences, and the more exotic and extreme the better. Going down the street to help at a food shelter is good and it is just and some of us are doing that, but it's not an experience. We want experiences.\""
                    },
                    {
                        "author": "Charlena E.  Jackson",
                        "title": "Dear fathers of the fatherless children",
                        "tags": [
                            "fatherhood-parenting",
                            "fatherless",
                            "fatherless-homes",
                            "fathers-and-daughters",
                            "fathers-and-sons",
                            "inspirational",
                            "love",
                            "motivational-quotes",
                            "single-mothers",
                            "truth-quotes"
                        ],
                        "quote": "\"Dear Fathers of the Fatherless Children, It is a shame that single mothers are living in poverty. There shouldn't be a reason why our children have to suffer because of the \"lack of\" not having what they need. Each day, a single mother has to make a decision about what has to be sacrificed to get through the day and/or maybe the month. Many times, a single mother has to play \"catch up\" on bills because her income isn't enough to pay all the bills and take care of her responsibilities.\""
                    },
                    {
                        "author": "Tim Ingold",
                        "tags": [
                            "anthropological-method",
                            "ellipse",
                            "ethnography",
                            "hyperbole",
                            "ingold",
                            "inspirational",
                            "observation-with-participation",
                            "science",
                            "social-anthropology",
                            "theory",
                            "tim-ingold"
                        ],
                        "quote": "\"Indeed ethnography and theory resemble nothing so much as the two arcs of a hyperbola, which cast their beams in opposite directions, lighting up the surfaces, respectively, of mind and world. They are back to back, and darkness reigns between them. But what if each arc were to reverse its orientation, so as to embrace the other in an encompassing, brightly illuminated ellipse? We would then have neither ethnography nor theory, nor even a compound of both. What we would have is an undivided, interstitial field of anthropology. If ethnographic theory is the hyperbola, anthropology is the ellipse. For ethnography, when it turns, is no longer ethnography but the educational correspondences of real life. And theory, when it turns, is no longer theory, but an imagination nourished by its observational engagements with the world. The rupture between reality and imagination\u2014the one annexed to fact, the other to theory\u2014has been the source of much havoc in the history of consciousness. It needs to be repaired. It is surely the task of anthropology, before all else, to repair it. In calling a halt to the proliferation of ethnography, I am not asking for more theory. My plea is for a return to anthropology.\""
                    }
                ]
            },
            "statuscode": 200,
            "schema": {
                "title": "QuotesResponse",
                "required": [
                    "response"
                ],
                "type": "object",
                "properties": {
                    "response": {
                        "title": "Response",
                        "type": "array",
                        "items": {
                            "title": "Quote",
                            "required": [
                                "quote"
                            ],
                            "type": "object",
                            "properties": {
                                "score": {
                                    "title": "Score",
                                    "type": "number"
                                },
                                "author": {
                                    "title": "Author",
                                    "type": "string"
                                },
                                "title": {
                                    "title": "Title",
                                    "type": "string"
                                },
                                "tags": {
                                    "title": "Tags",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "quote": {
                                    "title": "Quote",
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Search Quotes",
            "url": "https://semantic-quotes.p.rapidapi.com/search",
            "description": "Search quotes which have similar meaning/intent to the query sentences/words. We allow user to flexibly filter the results by the length of the quote, and by a large variety of tags. The results are returned in order of similarity.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "Search term.",
                    "default": "Don't give up."
                }
            ],
            "optional_parameters": [
                {
                    "name": "tags",
                    "type": "STRING",
                    "description": "Comma seperated tags for filtering, for example, \n                `faith`,\n                `god`,\n                `humor`, \n                `hope`,\n                `inspirational`, \n                `love`, \n                `life`,\n                `motivational`,\n                `philosophy`,\n                `religion`,\n                `science`,\n                `spirituality`,\n                `success`,\n                `truth`,\n                `wisdom`,\n                `poetry`,\n                and much more.\n        ",
                    "default": "inspirational,motivational"
                },
                {
                    "name": "max_length",
                    "type": "NUMBER",
                    "description": "Maximum length of the quote.",
                    "default": 4000
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Number of results returned.",
                    "default": 3
                },
                {
                    "name": "min_length",
                    "type": "NUMBER",
                    "description": "Minimum length of the quote.",
                    "default": "0"
                }
            ],
            "code": "import requests\n\nurl = \"https://semantic-quotes.p.rapidapi.com/search\"\nquerystring = {\"q\": \"Don't give up.\", \"tags\": \"inspirational,motivational\", \"max_length\": 4000, \"limit\": 3, \"min_length\": \"0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"semantic-quotes.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://semantic-quotes.p.rapidapi.com/search\"\nquerystring = {\"q\": \"Don't give up.\", \"tags\": \"inspirational,motivational\", \"max_length\": 4000, \"limit\": 3, \"min_length\": \"0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"semantic-quotes.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "response": [
                    {
                        "author": "Richelle E. Goodrich",
                        "title": "Eena, The Tempter's Snare",
                        "tags": [
                            "commitment",
                            "dedication",
                            "drive",
                            "eena",
                            "inspirational",
                            "perserverance",
                            "persistence",
                            "resolve",
                            "richelle",
                            "richelle-goodrich"
                        ],
                        "quote": "\"Don't ever give up. Don't ever give in. Don't ever stop trying. Don't ever sell out. And if you find yourself succumbing to one of the above for a brief moment, pick yourself up, brush yourself off, whisper a prayer, and start where you left off. But never, ever, ever give up.\""
                    },
                    {
                        "author": "Kristopher Morris",
                        "tags": [
                            "faith",
                            "hope",
                            "inspirational",
                            "strength"
                        ],
                        "quote": "\"Give up isn't going to help Keep going on will help\""
                    },
                    {
                        "author": "Timothy Pina",
                        "title": "Hearts for Haiti: Book of Poetry & Inspiration",
                        "tags": [
                            "bullying-ben",
                            "inspirational"
                        ],
                        "quote": "\"Don't give up hope...Don't ever give up hope!\""
                    }
                ]
            },
            "statuscode": 200,
            "schema": {
                "title": "QuotesResponse",
                "required": [
                    "response"
                ],
                "type": "object",
                "properties": {
                    "response": {
                        "title": "Response",
                        "type": "array",
                        "items": {
                            "title": "Quote",
                            "required": [
                                "quote"
                            ],
                            "type": "object",
                            "properties": {
                                "score": {
                                    "title": "Score",
                                    "type": "number"
                                },
                                "author": {
                                    "title": "Author",
                                    "type": "string"
                                },
                                "title": {
                                    "title": "Title",
                                    "type": "string"
                                },
                                "tags": {
                                    "title": "Tags",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "quote": {
                                    "title": "Quote",
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    ],
    "standardized_name": "semantic_quotes"
}