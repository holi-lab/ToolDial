{
    "product_id": "api_37d7ae7f-07ea-48c3-9456-8293598074a6",
    "tool_description": "YouTube Data v3 API is a tool for developers to access and manipulate YouTube data, including videos, channels, and playlists, so they can create custom experiences for users.",
    "home_url": "https://rapidapi.com/Glavier/api/youtube-v311/",
    "name": "YouTube v3_v3",
    "title": "YouTube v3",
    "pricing": "FREEMIUM",
    "tool_name": "YouTube v3_v3",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 1074,
        "avgSuccessRate": 99,
        "popularityScore": 9.6,
        "__typename": "Score"
    },
    "host": "youtube-v311.p.rapidapi.com",
    "api_list": [
        {
            "name": "Subscriptions",
            "url": "https://youtube-v311.p.rapidapi.com/subscriptions/",
            "description": "Returns subscription resources that match the API request criteria.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "part",
                    "type": "STRING",
                    "description": "The **part** parameter specifies a comma-separated list of one or more **subscription** resource properties that the API response will include.\n\nIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a **subscription** resource, the **snippet** property contains other properties, such as a display title for the subscription. If you set **part=snippet**, the API response will also contain all of those nested properties.\n\nThe following list contains the **part** names that you can include in the parameter value:\n\n- contentDetails\n- id\n- snippet\n- subscriberSnippet",
                    "default": "snippet,contentDetails"
                }
            ],
            "optional_parameters": [
                {
                    "name": "maxResults",
                    "type": "NUMBER",
                    "description": "The **maxResults** parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are **0** to **50**, inclusive. The default value is **5**.",
                    "default": "5"
                },
                {
                    "name": "pageToken",
                    "type": "STRING",
                    "description": "The **pageToken** parameter identifies a specific page in the result set that should be returned. In an API response, the **nextPageToken** and **prevPageToken** properties identify other pages that could be retrieved.",
                    "default": ""
                },
                {
                    "name": "forChannelId",
                    "type": "STRING",
                    "description": "The **forChannelId** parameter specifies a comma-separated list of channel IDs. The API response will then only contain subscriptions matching those channels.",
                    "default": ""
                },
                {
                    "name": "order",
                    "type": "STRING",
                    "description": "The **order** parameter specifies the method that will be used to sort resources in the API response. The default value is **SUBSCRIPTION_ORDER_RELEVANCE**.\n\nAcceptable values are:\n\n- **alphabetical** \u2013 Sort alphabetically.\n- **relevance** \u2013 Sort by relevance.\n- **unread** \u2013 Sort by order of activity.",
                    "default": "relevance"
                },
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The **id** parameter specifies a comma-separated list of the YouTube subscription ID(s) for the resource(s) that are being retrieved. In a **subscription** resource, the **id** property specifies the YouTube subscription ID.",
                    "default": ""
                },
                {
                    "name": "channelId",
                    "type": "STRING",
                    "description": "The **channelId** parameter specifies a YouTube channel ID. The API will only return that channel's subscriptions.",
                    "default": "UCP4bf6IHJJQehibu6ai__cg"
                }
            ],
            "code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/subscriptions/\"\nquerystring = {\"maxResults\": \"5\", \"pageToken\": \"\", \"forChannelId\": \"\", \"order\": \"relevance\", \"id\": \"\", \"channelId\": \"UCP4bf6IHJJQehibu6ai__cg\", \"part\": \"snippet,contentDetails\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/subscriptions/\"\nquerystring = {\"maxResults\": \"5\", \"pageToken\": \"\", \"forChannelId\": \"\", \"order\": \"relevance\", \"id\": \"\", \"channelId\": \"UCP4bf6IHJJQehibu6ai__cg\", \"part\": \"snippet,contentDetails\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "ChannelSections",
            "url": "https://youtube-v311.p.rapidapi.com/channelSections/",
            "description": "Returns a list of `channelSection` resources that match the API request criteria.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "part",
                    "type": "STRING",
                    "description": "The **part** parameter specifies a comma-separated list of one or more **channelSection** resource properties that the API response will include.\n\nIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a **channelSection** resource, the **snippet** property contains other properties, such as a display title for the section. If you set **part=snippet**, the API response will also contain all of those nested properties.\n\nThe following list contains the **part** names that you can include in the parameter value:\n\n- contentDetails\n- id\n- snippet",
                    "default": "snippet"
                }
            ],
            "optional_parameters": [
                {
                    "name": "channelId",
                    "type": "STRING",
                    "description": "The **channelId** parameter specifies a YouTube channel ID. If a request specifies a value for this parameter, the API will only return the specified channel's sections.",
                    "default": "UC_x5XG1OV2P6uZZ5FSM9Ttw"
                },
                {
                    "name": "hl",
                    "type": "STRING",
                    "description": "*This parameter has been deprecated.* The **hl** parameter provided support for retrieving localized metadata for a channel section. However, this functionality has been deprecated in YouTube Studio and in the YouTube app.",
                    "default": ""
                },
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The **id** parameter specifies a comma-separated list of IDs that uniquely identify the **channelSection** resources that are being retrieved. In a **channelSection** resource, the **id** property specifies the section's ID.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/channelSections/\"\nquerystring = {\"channelId\": \"UC_x5XG1OV2P6uZZ5FSM9Ttw\", \"part\": \"snippet\", \"hl\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/channelSections/\"\nquerystring = {\"channelId\": \"UC_x5XG1OV2P6uZZ5FSM9Ttw\", \"part\": \"snippet\", \"hl\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Channels",
            "url": "https://youtube-v311.p.rapidapi.com/channels/",
            "description": "Returns a collection of zero or more `channel` resources that match the request criteria.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "part",
                    "type": "STRING",
                    "description": "The **part** parameter specifies a comma-separated list of one or more **channel** resource properties that the API response will include.\n\nIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a **channel** resource, the **contentDetails** property contains other properties, such as the **uploads** properties. As such, if you set **part=contentDetails**, the API response will also contain all of those nested properties.\n\nThe following list contains the **part** names that you can include in the parameter value:\n\n- auditDetails\n- brandingSettings\n- contentDetails\n- contentOwnerDetails\n- id\n- localizations\n- snippet\n- statistics\n- status\n- topicDetails",
                    "default": "snippet"
                }
            ],
            "optional_parameters": [
                {
                    "name": "hl",
                    "type": "STRING",
                    "description": "The **hl** parameter instructs the API to retrieve localized resource metadata for a specific application language that the YouTube website supports. The parameter value must be a language code included in the list returned by the `i18nLanguages` method.\n\nIf localized resource details are available in that language, the resource's **snippet.localized** object will contain the localized values. However, if localized details are not available, the **snippet.localized** object will contain resource details in the resource's default language.",
                    "default": ""
                },
                {
                    "name": "categoryId",
                    "type": "STRING",
                    "description": "*This parameter has been deprecated.* The **categoryId** parameter specified a YouTube guide category and could be used to request YouTube channels associated with that category.",
                    "default": ""
                },
                {
                    "name": "maxResults",
                    "type": "NUMBER",
                    "description": "The **maxResults** parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are **0** to **50**, inclusive. The default value is **5**.",
                    "default": "5"
                },
                {
                    "name": "forUsername",
                    "type": "STRING",
                    "description": "The **forUsername** parameter specifies a YouTube username, thereby requesting the channel associated with that username.",
                    "default": "GoogleDevelopers"
                },
                {
                    "name": "pageToken",
                    "type": "STRING",
                    "description": "The **pageToken** parameter identifies a specific page in the result set that should be returned. In an API response, the **nextPageToken** and **prevPageToken** properties identify other pages that could be retrieved.",
                    "default": ""
                },
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The **id** parameter specifies a comma-separated list of the YouTube channel ID(s) for the resource(s) that are being retrieved. In a **channel** resource, the **id** property specifies the channel's YouTube channel ID.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/channels/\"\nquerystring = {\"hl\": \"\", \"part\": \"snippet\", \"categoryId\": \"\", \"maxResults\": \"5\", \"forUsername\": \"GoogleDevelopers\", \"pageToken\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/channels/\"\nquerystring = {\"hl\": \"\", \"part\": \"snippet\", \"categoryId\": \"\", \"maxResults\": \"5\", \"forUsername\": \"GoogleDevelopers\", \"pageToken\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Activities",
            "url": "https://youtube-v311.p.rapidapi.com/activities/",
            "description": "Returns a list of channel activity events that match the request criteria. For example, you can retrieve events associated with a particular channel or with the user's own channel.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "part",
                    "type": "STRING",
                    "description": "The **part** parameter specifies a comma-separated list of one or more **activity** resource properties that the API response will include.\n\nIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in an **activity** resource, the **snippet** property contains other properties that identify the type of activity, a display title for the activity, and so forth. If you set **part=snippet**, the API response will also contain all of those nested properties.\n\nThe following list contains the part names that you can include in the parameter value:\n\n- contentDetails\n- id\n- snippet",
                    "default": "snippet"
                },
                {
                    "name": "channelId",
                    "type": "STRING",
                    "description": "The **channelId** parameter specifies a unique YouTube channel ID. The API will then return a list of that channel's activities.",
                    "default": "UC_x5XG1OV2P6uZZ5FSM9Ttw"
                }
            ],
            "optional_parameters": [
                {
                    "name": "regionCode",
                    "type": "STRING",
                    "description": "The **regionCode** parameter instructs the API to return results for the specified country. The parameter value is an [ISO 3166-1 alpha-2](http://www.iso.org/iso/country_codes/iso_3166_code_lists/country_names_and_code_elements.htm) country code. YouTube uses this value when the authorized user's previous activity on YouTube does not provide enough information to generate the activity feed.",
                    "default": ""
                },
                {
                    "name": "publishedBefore",
                    "type": "STRING",
                    "description": "The publishedBefore parameter specifies the date and time before which an activity must have occurred for that activity to be included in the API response. If the parameter value specifies a day, but not a time, then any activities that occurred that day will be excluded from the result set. The value is specified in [ISO 8601](https://www.w3.org/TR/NOTE-datetime) (**YYYY-MM-DDThh:mm:ss.sZ**) format.",
                    "default": ""
                },
                {
                    "name": "maxResults",
                    "type": "NUMBER",
                    "description": "The **maxResults** parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are **0** to **50**, inclusive. The default value is **5**.",
                    "default": "5"
                },
                {
                    "name": "publishedAfter",
                    "type": "STRING",
                    "description": "The **publishedAfter** parameter specifies the earliest date and time that an activity could have occurred for that activity to be included in the API response. If the parameter value specifies a day, but not a time, then any activities that occurred that day will be included in the result set. The value is specified in [ISO 8601](https://www.w3.org/TR/NOTE-datetime) (**YYYY-MM-DDThh:mm:ss.sZ**) format.",
                    "default": ""
                },
                {
                    "name": "pageToken",
                    "type": "STRING",
                    "description": "The **pageToken** parameter identifies a specific page in the result set that should be returned. In an API response, the **nextPageToken** and **prevPageToken** properties identify other pages that could be retrieved.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/activities/\"\nquerystring = {\"part\": \"snippet\", \"regionCode\": \"\", \"publishedBefore\": \"\", \"maxResults\": \"5\", \"publishedAfter\": \"\", \"pageToken\": \"\", \"channelId\": \"UC_x5XG1OV2P6uZZ5FSM9Ttw\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/activities/\"\nquerystring = {\"part\": \"snippet\", \"regionCode\": \"\", \"publishedBefore\": \"\", \"maxResults\": \"5\", \"publishedAfter\": \"\", \"pageToken\": \"\", \"channelId\": \"UC_x5XG1OV2P6uZZ5FSM9Ttw\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Videos",
            "url": "https://youtube-v311.p.rapidapi.com/videos/",
            "description": "Returns a list of videos that match the API request parameters.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "part",
                    "type": "STRING",
                    "description": "The **part** parameter specifies a comma-separated list of one or more **video** resource properties that the API response will include.\n\nIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a **video** resource, the **snippet** property contains the **channelId**, **title**, **description**, **tags** and **categoryId** properties. As such, if you set **part=snippet**, the API response will contain all of those properties.\n\nThe following list contains the **part** names that you can include in the parameter value:\n\n- contentDetails\n- fileDetails\n- id\n- liveStreamingDetails\n- localizations\n- player\n- processingDetails\n- recordingDetails\n- snippet\n- statistics\n- status\n- suggestions\n- topicDetails",
                    "default": "snippet,contentDetails,statistics"
                }
            ],
            "optional_parameters": [
                {
                    "name": "videoCategoryId",
                    "type": "STRING",
                    "description": "The **videoCategoryId** parameter identifies the video category for which the chart should be retrieved. This parameter can only be used in conjunction with the **chart** parameter. By default, charts are not restricted to a particular category. The default value is **0**.",
                    "default": ""
                },
                {
                    "name": "maxHeight",
                    "type": "NUMBER",
                    "description": "The **maxHeight** parameter specifies the maximum height of the embedded player returned in the **player.embedHtml** property. You can use this parameter to specify that instead of the default dimensions, the embed code should use a height appropriate for your application layout. If the **maxWidth** parameter is also provided, the player may be shorter than the **maxHeight** in order to not violate the maximum width. Acceptable values are **72** to **8192**, inclusive.",
                    "default": ""
                },
                {
                    "name": "maxResults",
                    "type": "NUMBER",
                    "description": "The **maxResults** parameter specifies the maximum number of items that should be returned in the result set.\n\n**Note:** This parameter is supported for use in conjunction with the **myRating** parameter, but it is not supported for use in conjunction with the **id** parameter. Acceptable values are **1** to **50**, inclusive. The default value is **5**.",
                    "default": "5"
                },
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The **id** parameter specifies a comma-separated list of the YouTube video ID(s) for the resource(s) that are being retrieved. In a **video** resource, the **id** property specifies the video's ID.",
                    "default": "Q8TXgCzxEnw"
                },
                {
                    "name": "pageToken",
                    "type": "STRING",
                    "description": "The **pageToken** parameter identifies a specific page in the result set that should be returned. In an API response, the **nextPageToken** and **prevPageToken** properties identify other pages that could be retrieved.\n\n**Note:** This parameter is supported for use in conjunction with the **myRating** parameter, but it is not supported for use in conjunction with the **id** parameter.",
                    "default": ""
                },
                {
                    "name": "regionCode",
                    "type": "STRING",
                    "description": "The **regionCode** parameter instructs the API to select a video chart available in the specified region. This parameter can only be used in conjunction with the **chart** parameter. The parameter value is an ISO 3166-1 alpha-2 country code.",
                    "default": ""
                },
                {
                    "name": "maxWidth",
                    "type": "NUMBER",
                    "description": "The **maxWidth** parameter specifies the maximum width of the embedded player returned in the **player.embedHtml** property. You can use this parameter to specify that instead of the default dimensions, the embed code should use a width appropriate for your application layout.\n\nIf the **maxHeight** parameter is also provided, the player may be narrower than **maxWidth** in order to not violate the maximum height. Acceptable values are **72** to **8192**, inclusive.",
                    "default": ""
                },
                {
                    "name": "chart",
                    "type": "STRING",
                    "description": "The **chart** parameter identifies the chart that you want to retrieve.\n\nAcceptable values are:\n\n- **mostPopular** \u2013 Return the most popular videos for the specified content region and video category.",
                    "default": ""
                },
                {
                    "name": "hl",
                    "type": "STRING",
                    "description": "The **hl** parameter instructs the API to retrieve localized resource metadata for a specific application language that the YouTube website supports. The parameter value must be a language code included in the list returned by the `i18nLanguages` method.\n\nIf localized resource details are available in that language, the resource's **snippet.localized** object will contain the localized values. However, if localized details are not available, the **snippet.localized** object will contain resource details in the resource's default language.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/videos/\"\nquerystring = {\"videoCategoryId\": \"\", \"maxHeight\": \"\", \"maxResults\": \"5\", \"id\": \"Q8TXgCzxEnw\", \"part\": \"snippet,contentDetails,statistics\", \"pageToken\": \"\", \"regionCode\": \"\", \"maxWidth\": \"\", \"chart\": \"\", \"hl\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/videos/\"\nquerystring = {\"videoCategoryId\": \"\", \"maxHeight\": \"\", \"maxResults\": \"5\", \"id\": \"Q8TXgCzxEnw\", \"part\": \"snippet,contentDetails,statistics\", \"pageToken\": \"\", \"regionCode\": \"\", \"maxWidth\": \"\", \"chart\": \"\", \"hl\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Search",
            "url": "https://youtube-v311.p.rapidapi.com/search/",
            "description": "Returns a collection of search results that match the query parameters specified in the API request. By default, a search result set identifies matching `video`, `channel` and `playlist` resources, but you can also configure queries to only retrieve a specific type of resource.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "part",
                    "type": "STRING",
                    "description": "The **part** parameter specifies a comma-separated list of one or more **search** resource properties that the API response will include. Set the parameter value to **snippet**.",
                    "default": "snippet"
                }
            ],
            "optional_parameters": [
                {
                    "name": "videoLicense",
                    "type": "STRING",
                    "description": "The **videoLicense** parameter filters search results to only include videos with a particular license. YouTube lets video uploaders choose to attach either the Creative Commons license or the standard YouTube license to each of their videos. If you specify a value for this parameter, you must also set the **type** parameter's value to **video**.\n\nAcceptable values are:\n\n- **any** \u2013 Return all videos, regardless of which license they have, that match the query parameters.\n- **creativeCommon** \u2013 Only return videos that have a Creative Commons license. Users can reuse videos with this license in other videos that they create. [Learn more](http://www.google.com/support/youtube/bin/answer.py?answer=1284989).\n- **youtube** \u2013 Only return videos that have the standard YouTube license.",
                    "default": ""
                },
                {
                    "name": "relatedToVideoId",
                    "type": "STRING",
                    "description": "The **relatedToVideoId** parameter retrieves a list of videos that are related to the video that the parameter value identifies. The parameter value must be set to a YouTube video ID and, if you are using this parameter, the **type** parameter must be set to **video**.\n\nNote that if the **relatedToVideoId** parameter is set, the only other supported parameters are **part**, **maxResults**, **pageToken**, **regionCode**, **relevanceLanguage**, **safeSearch**, **type** (which must be set to **video**) and **fields**.",
                    "default": ""
                },
                {
                    "name": "videoType",
                    "type": "STRING",
                    "description": "The **videoType** parameter lets you restrict a search to a particular type of videos. If you specify a value for this parameter, you must also set the **type** parameter's value to **video**.\n\nAcceptable values are:\n\n- **any** \u2013 Return all videos.\n- **episode** \u2013 Only retrieve episodes of shows.\n- **movie** \u2013 Only retrieve movies.",
                    "default": ""
                },
                {
                    "name": "videoSyndicated",
                    "type": "STRING",
                    "description": "The **videoSyndicated** parameter lets you to restrict a search to only videos that can be played outside youtube.com. If you specify a value for this parameter, you must also set the **type** parameter's value to **video**.\n\nAcceptable values are:\n\n- **any** \u2013 Return all videos, syndicated or not.\n- **true** \u2013 Only retrieve syndicated videos.2",
                    "default": ""
                },
                {
                    "name": "videoEmbeddable",
                    "type": "STRING",
                    "description": "The **videoEmbeddable** parameter lets you to restrict a search to only videos that can be embedded into a webpage. If you specify a value for this parameter, you must also set the **type** parameter's value to **video**.\n\nAcceptable values are:\n\n- **any** \u2013 Return all videos, embeddable or not.\n- **true** \u2013 Only retrieve embeddable videos.",
                    "default": ""
                },
                {
                    "name": "videoDuration",
                    "type": "STRING",
                    "description": "The **videoDuration** parameter filters video search results based on their duration. If you specify a value for this parameter, you must also set the **type** parameter's value to **video**.\n\nAcceptable values are:\n\n- **any** \u2013 Do not filter video search results based on their duration. This is the default value.\n- **long** \u2013 Only include videos longer than 20 minutes.\n- **medium** \u2013 Only include videos that are between four and 20 minutes long (inclusive).\n- **short** \u2013 Only include videos that are less than four minutes long.",
                    "default": ""
                },
                {
                    "name": "videoDimension",
                    "type": "STRING",
                    "description": "The **videoDimension** parameter lets you restrict a search to only retrieve 2D or 3D videos. If you specify a value for this parameter, you must also set the **type** parameter's value to **video**.\n\nAcceptable values are:\n\n- **2d** \u2013 Restrict search results to exclude 3D videos.\n- **3d** \u2013 Restrict search results to only include 3D videos.\n- **any** \u2013 Include both 3D and non-3D videos in returned results. This is the default value.",
                    "default": ""
                },
                {
                    "name": "videoDefinition",
                    "type": "STRING",
                    "description": "The **videoDefinition** parameter lets you restrict a search to only include either high definition (HD) or standard definition (SD) videos. HD videos are available for playback in at least 720p, though higher resolutions, like 1080p, might also be available. If you specify a value for this parameter, you must also set the **type** parameter's value to **video**.\n\nAcceptable values are:\n\n- **any** \u2013 Return all videos, regardless of their resolution.\n- **high** \u2013 Only retrieve HD videos.\n- **standard** \u2013 Only retrieve videos in standard definition.",
                    "default": ""
                },
                {
                    "name": "safeSearch",
                    "type": "STRING",
                    "description": "The **safeSearch** parameter indicates whether the search results should include restricted content as well as standard content.\n\nAcceptable values are:\n\n- **moderate** \u2013 YouTube will filter some content from search results and, at the least, will filter content that is restricted in your locale. Based on their content, search results could be removed from search results or demoted in search results. This is the default parameter value.\n- **none** \u2013 YouTube will not filter the search result set.\n- **strict** \u2013 YouTube will try to exclude all restricted content from the search result set. Based on their content, search results could be removed from search results or demoted in search results.",
                    "default": "moderate"
                },
                {
                    "name": "topicId",
                    "type": "STRING",
                    "description": "The **topicId** parameter indicates that the API response should only contain resources associated with the specified topic. The value identifies a Freebase topic ID.\n\n**Important:** Due to the deprecation of Freebase and the Freebase API, the **topicId** parameter started working differently as of February 27, 2017. At that time, YouTube started supporting a small set of curated topic IDs, and you can only use that smaller set of IDs as values for this parameter.",
                    "default": ""
                },
                {
                    "name": "videoCaption",
                    "type": "STRING",
                    "description": "The **videoCaption** parameter indicates whether the API should filter video search results based on whether they have captions. If you specify a value for this parameter, you must also set the **type** parameter's value to **video**.\n\nAcceptable values are:\n\n- **any** \u2013 Do not filter results based on caption availability.\n- **closedCaption** \u2013 Only include videos that have captions.\n- **none** \u2013 Only include videos that do not have captions.",
                    "default": ""
                },
                {
                    "name": "pageToken",
                    "type": "STRING",
                    "description": "The **pageToken** parameter identifies a specific page in the result set that should be returned. In an API response, the **nextPageToken** and **prevPageToken** properties identify other pages that could be retrieved.",
                    "default": ""
                },
                {
                    "name": "videoCategoryId",
                    "type": "STRING",
                    "description": "The **videoCategoryId** parameter filters video search results based on their category. If you specify a value for this parameter, you must also set the **type** parameter's value to **video**.",
                    "default": ""
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "The **type** parameter restricts a search query to only retrieve a particular type of resource. The value is a comma-separated list of resource types. The default value is **video,channel,playlist**.\n\nAcceptable values are:\n\n- channel\n- playlist\n- video",
                    "default": "video,channel,playlist"
                },
                {
                    "name": "regionCode",
                    "type": "STRING",
                    "description": "The **regionCode** parameter instructs the API to return search results for videos that can be viewed in the specified country. The parameter value is an [ISO 3166-1 alpha-2](http://www.iso.org/iso/country_codes/iso_3166_code_lists/country_names_and_code_elements.htm) country code.",
                    "default": ""
                },
                {
                    "name": "relevanceLanguage",
                    "type": "STRING",
                    "description": "The **relevanceLanguage** parameter instructs the API to return search results that are most relevant to the specified language. The parameter value is typically an [ISO 639-1 two-letter language code](http://www.loc.gov/standards/iso639-2/php/code_list.php). However, you should use the values **zh-Hans** for simplified Chinese and **zh-Hant** for traditional Chinese. Please note that results in other languages will still be returned if they are highly relevant to the search query term.",
                    "default": ""
                },
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "The **q** parameter specifies the query term to search for.\n\nYour request can also use the Boolean NOT (-) and OR (|) operators to exclude videos or to find videos that are associated with one of several search terms. For example, to search for videos matching either 'boating' or 'sailing', set the **q** parameter value to **boating|sailing**. Similarly, to search for videos matching either 'boating' or 'sailing' but not 'fishing', set the **q** parameter value to **boating|sailing -fishing**. Note that the pipe character must be URL-escaped when it is sent in your API request. The URL-escaped value for the pipe character is **%7C**.",
                    "default": ""
                },
                {
                    "name": "publishedBefore",
                    "type": "STRING",
                    "description": "The **publishedBefore** parameter indicates that the API response should only contain resources created before or at the specified time. The value is an RFC 3339 formatted date-time value (1970-01-01T00:00:00Z).",
                    "default": ""
                },
                {
                    "name": "publishedAfter",
                    "type": "STRING",
                    "description": "The **publishedAfter** parameter indicates that the API response should only contain resources created at or after the specified time. The value is an RFC 3339 formatted date-time value (1970-01-01T00:00:00Z).",
                    "default": ""
                },
                {
                    "name": "order",
                    "type": "STRING",
                    "description": "The **order** parameter specifies the method that will be used to order resources in the API response. The default value is **relevance**.\n\nAcceptable values are:\n\n- **date** \u2013 Resources are sorted in reverse chronological order based on the date they were created.\n- **rating** \u2013 Resources are sorted from highest to lowest rating.\n- **relevance** \u2013 Resources are sorted based on their relevance to the search query. This is the default value for this parameter.\n- **title** \u2013 Resources are sorted alphabetically by title.\n- **videoCount** \u2013 Channels are sorted in descending order of their number of uploaded videos.\n- **viewCount** \u2013 Resources are sorted from highest to lowest number of views. For live broadcasts, videos are sorted by number of concurrent viewers while the broadcasts are ongoing.",
                    "default": "relevance"
                },
                {
                    "name": "maxResults",
                    "type": "NUMBER",
                    "description": "The **maxResults** parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are **0** to **50**, inclusive. The default value is **5**.",
                    "default": "5"
                },
                {
                    "name": "locationRadius",
                    "type": "STRING",
                    "description": "The **locationRadius** parameter, in conjunction with the **location** parameter, defines a circular geographic area.\n\nThe parameter value must be a floating point number followed by a measurement unit. Valid measurement units are **m**, **km**, **ft** and **mi**. For example, valid parameter values include **1500m**, **5km**, **10000ft** and **0.75mi**. The API does not support **locationRadius** parameter values larger than 1000 kilometers.\n\n**Note:** See the definition of the **location** parameter for more information.",
                    "default": ""
                },
                {
                    "name": "channelType",
                    "type": "STRING",
                    "description": "The **channelType** parameter lets you restrict a search to a particular type of channel.\n\nAcceptable values are:\n\n- **any** \u2013 Return all channels.\n- **show** \u2013 Only retrieve shows.",
                    "default": ""
                },
                {
                    "name": "eventType",
                    "type": "STRING",
                    "description": "The **eventType** parameter restricts a search to broadcast events. If you specify a value for this parameter, you must also set the **type** parameter's value to **video**.\n\nAcceptable values are:\n\n- **completed** \u2013 Only include completed broadcasts.\n- **live** \u2013 Only include active broadcasts.\n- **upcoming** \u2013 Only include upcoming broadcasts.",
                    "default": ""
                },
                {
                    "name": "channelId",
                    "type": "STRING",
                    "description": "The **channelId** parameter indicates that the API response should only contain resources created by the channel.\n\n**Note:** Search results are constrained to a maximum of 500 videos if your request specifies a value for the **channelId** parameter and sets the **type** parameter value to **video**, but it does not also set one of the **forContentOwner**, **forDeveloper** or **forMine** filters.",
                    "default": ""
                },
                {
                    "name": "location",
                    "type": "STRING",
                    "description": "The **location** parameter, in conjunction with the **locationRadius** parameter, defines a circular geographic area and also restricts a search to videos that specify, in their metadata, a geographic location that falls within that area. The parameter value is a string that specifies latitude/longitude coordinates e.g. (**37.42307,-122.08427**).\n\n- The **location** parameter value identifies the point at the center of the area.\n- The **locationRadius** parameter specifies the maximum distance that the location associated with a video can be from that point for the video to still be included in the search results.\n\nThe API returns an error if your request specifies a value for the **location** parameter but does not also specify a value for the **locationRadius** parameter.\n\nNote: If you specify a value for this parameter, you must also set the **type** parameter's value to **video**.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/search/\"\nquerystring = {\"videoLicense\": \"\", \"relatedToVideoId\": \"\", \"videoType\": \"\", \"videoSyndicated\": \"\", \"videoEmbeddable\": \"\", \"videoDuration\": \"\", \"videoDimension\": \"\", \"videoDefinition\": \"\", \"safeSearch\": \"moderate\", \"topicId\": \"\", \"videoCaption\": \"\", \"pageToken\": \"\", \"videoCategoryId\": \"\", \"type\": \"video,channel,playlist\", \"regionCode\": \"\", \"relevanceLanguage\": \"\", \"q\": \"\", \"publishedBefore\": \"\", \"publishedAfter\": \"\", \"order\": \"relevance\", \"maxResults\": \"5\", \"locationRadius\": \"\", \"part\": \"snippet\", \"channelType\": \"\", \"eventType\": \"\", \"channelId\": \"\", \"location\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/search/\"\nquerystring = {\"videoLicense\": \"\", \"relatedToVideoId\": \"\", \"videoType\": \"\", \"videoSyndicated\": \"\", \"videoEmbeddable\": \"\", \"videoDuration\": \"\", \"videoDimension\": \"\", \"videoDefinition\": \"\", \"safeSearch\": \"moderate\", \"topicId\": \"\", \"videoCaption\": \"\", \"pageToken\": \"\", \"videoCategoryId\": \"\", \"type\": \"video,channel,playlist\", \"regionCode\": \"\", \"relevanceLanguage\": \"\", \"q\": \"\", \"publishedBefore\": \"\", \"publishedAfter\": \"\", \"order\": \"relevance\", \"maxResults\": \"5\", \"locationRadius\": \"\", \"part\": \"snippet\", \"channelType\": \"\", \"eventType\": \"\", \"channelId\": \"\", \"location\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Playlists",
            "url": "https://youtube-v311.p.rapidapi.com/playlists/",
            "description": "Returns a collection of playlists that match the API request parameters. For example, you can retrieve all playlists that the authenticated user owns, or you can retrieve one or more playlists by their unique IDs.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "part",
                    "type": "STRING",
                    "description": "The **part** parameter specifies a comma-separated list of one or more **playlist** resource properties that the API response will include.\n\nIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a **playlist** resource, the **snippet** property contains properties like **author**, **title**, **description** and **timeCreated**. As such, if you set **part=snippet**, the API response will contain all of those properties.\n\nThe following list contains the **part** names that you can include in the parameter value:\n\n- contentDetails\n- id\n- localizations\n- player\n- snippet\n- status",
                    "default": "snippet"
                }
            ],
            "optional_parameters": [
                {
                    "name": "maxResults",
                    "type": "NUMBER",
                    "description": "The **maxResults** parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are **0** to **50**, inclusive. The default value is **5**.",
                    "default": "5"
                },
                {
                    "name": "pageToken",
                    "type": "STRING",
                    "description": "The **pageToken** parameter identifies a specific page in the result set that should be returned. In an API response, the **nextPageToken** and **prevPageToken** properties identify other pages that could be retrieved.",
                    "default": ""
                },
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The **id** parameter specifies a comma-separated list of the YouTube playlist ID(s) for the resource(s) that are being retrieved. In a **playlist** resource, the **id** property specifies the playlist's YouTube playlist ID.",
                    "default": ""
                },
                {
                    "name": "channelId",
                    "type": "STRING",
                    "description": "This value indicates that the API should only return the specified channel's playlists.",
                    "default": "UC_x5XG1OV2P6uZZ5FSM9Ttw"
                },
                {
                    "name": "hl",
                    "type": "STRING",
                    "description": "The **hl** parameter instructs the API to retrieve localized resource metadata for a specific application language that the YouTube website supports. The parameter value must be a language code included in the list returned by the `i18nLanguages` method.\n\nIf localized resource details are available in that language, the resource's **snippet.localized** object will contain the localized values. However, if localized details are not available, the **snippet.localized** object will contain resource details in the resource's default language.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/playlists/\"\nquerystring = {\"maxResults\": \"5\", \"pageToken\": \"\", \"id\": \"\", \"channelId\": \"UC_x5XG1OV2P6uZZ5FSM9Ttw\", \"hl\": \"\", \"part\": \"snippet\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/playlists/\"\nquerystring = {\"maxResults\": \"5\", \"pageToken\": \"\", \"id\": \"\", \"channelId\": \"UC_x5XG1OV2P6uZZ5FSM9Ttw\", \"hl\": \"\", \"part\": \"snippet\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "PlaylistItems",
            "url": "https://youtube-v311.p.rapidapi.com/playlistItems/",
            "description": "Returns a collection of playlist items that match the API request parameters. You can retrieve all of the playlist items in a specified playlist or retrieve one or more playlist items by their unique IDs.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "part",
                    "type": "STRING",
                    "description": "The **part** parameter specifies a comma-separated list of one or more **playlistItem** resource properties that the API response will include.\n\nIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a **playlistItem** resource, the **snippet** property contains numerous fields, including the **title**, **description**, **position** and **resourceId** properties. As such, if you set **part=snippet**, the API response will contain all of those properties.\n\nThe following list contains the **part** names that you can include in the parameter value:\n\n- contentDetails\n- id\n- snippet\n- status",
                    "default": "snippet"
                }
            ],
            "optional_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "The **videoId** parameter specifies that the request should return only the playlist items that contain the specified video.",
                    "default": ""
                },
                {
                    "name": "pageToken",
                    "type": "STRING",
                    "description": "The **pageToken** parameter identifies a specific page in the result set that should be returned. In an API response, the **nextPageToken** and **prevPageToken** properties identify other pages that could be retrieved.",
                    "default": ""
                },
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The **id** parameter specifies a comma-separated list of one or more unique playlist item IDs.",
                    "default": ""
                },
                {
                    "name": "maxResults",
                    "type": "NUMBER",
                    "description": "The **maxResults** parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are **0** to **50**, inclusive. The default value is **5**.",
                    "default": "5"
                },
                {
                    "name": "playlistId",
                    "type": "STRING",
                    "description": "The **playlistId** parameter specifies the unique ID of the playlist for which you want to retrieve playlist items. Note that even though this is an optional parameter, every request to retrieve playlist items must specify a value for either the **id** parameter or the **playlistId** parameter.",
                    "default": "PLOU2XLYxmsILMUsDRrVoRRlL29p8LHFIT"
                }
            ],
            "code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/playlistItems/\"\nquerystring = {\"videoId\": \"\", \"part\": \"snippet\", \"pageToken\": \"\", \"id\": \"\", \"maxResults\": \"5\", \"playlistId\": \"PLOU2XLYxmsILMUsDRrVoRRlL29p8LHFIT\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/playlistItems/\"\nquerystring = {\"videoId\": \"\", \"part\": \"snippet\", \"pageToken\": \"\", \"id\": \"\", \"maxResults\": \"5\", \"playlistId\": \"PLOU2XLYxmsILMUsDRrVoRRlL29p8LHFIT\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "CommentThreads",
            "url": "https://youtube-v311.p.rapidapi.com/commentThreads/",
            "description": "Returns a list of comment threads that match the API request parameters.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "part",
                    "type": "STRING",
                    "description": "The **part** parameter specifies a comma-separated list of one or more **commentThread** resource properties that the API response will include.\n\nThe following list contains the **part** names that you can include in the parameter value:\n\n- id\n- replies\n- snippet",
                    "default": "snippet"
                }
            ],
            "optional_parameters": [
                {
                    "name": "searchTerms",
                    "type": "STRING",
                    "description": "The **searchTerms** parameter instructs the API to limit the API response to only contain comments that contain the specified search terms.\n\n**Note:** This parameter is not supported for use in conjunction with the **id** parameter.",
                    "default": ""
                },
                {
                    "name": "textFormat",
                    "type": "STRING",
                    "description": "Set this parameter's value to **html** or **plainText** to instruct the API to return the comments left by users in html formatted or in plain text. The default value is **html**.\n\nAcceptable values are:\n\n- **html** \u2013 Returns the comments in HTML format. This is the default value.\n- **plainText** \u2013 Returns the comments in plain text format.",
                    "default": "html"
                },
                {
                    "name": "pageToken",
                    "type": "STRING",
                    "description": "The **pageToken** parameter identifies a specific page in the result set that should be returned. In an API response, the **nextPageToken** property identifies the next page of the result that can be retrieved.\n\n**Note:** This parameter is not supported for use in conjunction with the **id** parameter.",
                    "default": ""
                },
                {
                    "name": "channelId",
                    "type": "STRING",
                    "description": "The **channelId** parameter instructs the API to return comment threads containing comments about the specified channel. (The response will not include comments left on videos that the channel uploaded.)",
                    "default": ""
                },
                {
                    "name": "maxResults",
                    "type": "NUMBER",
                    "description": "The **maxResults** parameter specifies the maximum number of items that should be returned in the result set.\n\n**Note:** This parameter is not supported for use in conjunction with the **id** parameter. Acceptable values are **1** to **100**, inclusive. The default value is **20**.",
                    "default": "20"
                },
                {
                    "name": "order",
                    "type": "STRING",
                    "description": "The **order** parameter specifies the order in which the API response should list comment threads. Valid values are:\n\n- **time** - Comment threads are ordered by time. This is the default behavior.\n- **relevance** - Comment threads are ordered by relevance.\n\n**Note:** This parameter is not supported for use in conjunction with the **id** parameter.",
                    "default": "time"
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "The **videoId** parameter instructs the API to return comment threads associated with the specified video ID.",
                    "default": "Q8TXgCzxEnw"
                },
                {
                    "name": "allThreadsRelatedToChannelId",
                    "type": "STRING",
                    "description": "The **allThreadsRelatedToChannelId** parameter instructs the API to return all comment threads associated with the specified channel. The response can include comments about the channel or about the channel's videos.",
                    "default": ""
                },
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The **id** parameter specifies a comma-separated list of comment thread IDs for the resources that should be retrieved.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/commentThreads/\"\nquerystring = {\"searchTerms\": \"\", \"textFormat\": \"html\", \"pageToken\": \"\", \"channelId\": \"\", \"maxResults\": \"20\", \"part\": \"snippet\", \"order\": \"time\", \"videoId\": \"Q8TXgCzxEnw\", \"allThreadsRelatedToChannelId\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/commentThreads/\"\nquerystring = {\"searchTerms\": \"\", \"textFormat\": \"html\", \"pageToken\": \"\", \"channelId\": \"\", \"maxResults\": \"20\", \"part\": \"snippet\", \"order\": \"time\", \"videoId\": \"Q8TXgCzxEnw\", \"allThreadsRelatedToChannelId\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "I18nLanguages",
            "url": "https://youtube-v311.p.rapidapi.com/i18nLanguages/",
            "description": "Returns a list of application languages that the YouTube website supports.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "part",
                    "type": "STRING",
                    "description": "The **part** parameter specifies the **i18nLanguage** resource properties that the API response will include. Set the parameter value to **snippet**.",
                    "default": "snippet"
                }
            ],
            "optional_parameters": [
                {
                    "name": "hl",
                    "type": "STRING",
                    "description": "The **hl** parameter specifies the language that should be used for text values in the API response. The default value is **en_US**.",
                    "default": "en_US"
                }
            ],
            "code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/i18nLanguages/\"\nquerystring = {\"hl\": \"en_US\", \"part\": \"snippet\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/i18nLanguages/\"\nquerystring = {\"hl\": \"en_US\", \"part\": \"snippet\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Comments",
            "url": "https://youtube-v311.p.rapidapi.com/comments/",
            "description": "Returns a list of comments that match the API request parameters.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "part",
                    "type": "STRING",
                    "description": "The **part** parameter specifies a comma-separated list of one or more `comment` resource properties that the API response will include.\n\nThe following list contains the **part** names that you can include in the parameter value:\n\n- id\n- snippet",
                    "default": "snippet"
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageToken",
                    "type": "STRING",
                    "description": "The **pageToken** parameter identifies a specific page in the result set that should be returned. In an API response, the **nextPageToken** property identifies the next page of the result that can be retrieved.\n\n**Note:** This parameter is not supported for use in conjunction with the **id** parameter.",
                    "default": ""
                },
                {
                    "name": "textFormat",
                    "type": "STRING",
                    "description": "This parameter indicates whether the API should return comments formatted as HTML or as plain text. The default value is **html**.\n\nAcceptable values are:\n\n- **html** \u2013 Returns the comments in HTML format. This is the default value.\n- **plainText** \u2013 Returns the comments in plain text format.",
                    "default": "html"
                },
                {
                    "name": "parentId",
                    "type": "STRING",
                    "description": "The **parentId** parameter specifies the ID of the comment for which replies should be retrieved.\n\n**Note:** YouTube currently supports replies only for top-level comments. However, replies to replies may be supported in the future.",
                    "default": "Ugi79__QZLYRu3gCoAEC"
                },
                {
                    "name": "maxResults",
                    "type": "NUMBER",
                    "description": "The **maxResults** parameter specifies the maximum number of items that should be returned in the result set.\n\n**Note:** This parameter is not supported for use in conjunction with the **id** parameter. Acceptable values are **1** to **100**, inclusive. The default value is **20**.",
                    "default": "20"
                },
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The **id** parameter specifies a comma-separated list of comment IDs for the resources that are being retrieved. In a **comment** resource, the **id** property specifies the comment's ID.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/comments/\"\nquerystring = {\"pageToken\": \"\", \"textFormat\": \"html\", \"part\": \"snippet\", \"parentId\": \"Ugi79__QZLYRu3gCoAEC\", \"maxResults\": \"20\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/comments/\"\nquerystring = {\"pageToken\": \"\", \"textFormat\": \"html\", \"part\": \"snippet\", \"parentId\": \"Ugi79__QZLYRu3gCoAEC\", \"maxResults\": \"20\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "I18nRegions",
            "url": "https://youtube-v311.p.rapidapi.com/i18nRegions/",
            "description": "Returns a list of content regions that the YouTube website supports.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "part",
                    "type": "STRING",
                    "description": "The **part** parameter specifies the **i18nRegion** resource properties that the API response will include. Set the parameter value to **snippet**.",
                    "default": "snippet"
                }
            ],
            "optional_parameters": [
                {
                    "name": "hl",
                    "type": "STRING",
                    "description": "The **hl** parameter specifies the language that should be used for text values in the API response. The default value is **en_US**.",
                    "default": "en_US"
                }
            ],
            "code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/i18nRegions/\"\nquerystring = {\"hl\": \"en_US\", \"part\": \"snippet\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/i18nRegions/\"\nquerystring = {\"hl\": \"en_US\", \"part\": \"snippet\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "VideoCategories",
            "url": "https://youtube-v311.p.rapidapi.com/videoCategories/",
            "description": "Returns a list of categories that can be associated with YouTube videos.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "part",
                    "type": "STRING",
                    "description": "The **part** parameter specifies the **videoCategory** resource properties that the API response will include. Set the parameter value to **snippet**.",
                    "default": "snippet"
                }
            ],
            "optional_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The **id** parameter specifies a comma-separated list of video category IDs for the resources that you are retrieving.",
                    "default": ""
                },
                {
                    "name": "regionCode",
                    "type": "STRING",
                    "description": "The **regionCode** parameter instructs the API to return the list of video categories available in the specified country. The parameter value is an [ISO 3166-1 alpha-2](http://www.iso.org/iso/country_codes/iso_3166_code_lists/country_names_and_code_elements.htm) country code.",
                    "default": "US"
                },
                {
                    "name": "hl",
                    "type": "STRING",
                    "description": "The **hl** parameter specifies the language that should be used for text values in the API response. The default value is **en_US**.",
                    "default": "en_US"
                }
            ],
            "code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/videoCategories/\"\nquerystring = {\"id\": \"\", \"regionCode\": \"US\", \"part\": \"snippet\", \"hl\": \"en_US\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/videoCategories/\"\nquerystring = {\"id\": \"\", \"regionCode\": \"US\", \"part\": \"snippet\", \"hl\": \"en_US\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Captions",
            "url": "https://youtube-v311.p.rapidapi.com/captions/",
            "description": "Returns a list of caption tracks that are associated with a specified video.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "part",
                    "type": "STRING",
                    "description": "The **part** parameter specifies the **caption** resource parts that the API response will include.\n\nThe list below contains the **part** names that you can include in the parameter value:\n\n- id\n- snippet",
                    "default": "snippet"
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "The **videoId** parameter specifies the YouTube video ID of the video for which the API should return caption tracks.",
                    "default": "Q8TXgCzxEnw"
                }
            ],
            "optional_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The **id** parameter specifies a comma-separated list of IDs that identify the **caption** resources that should be retrieved. Each ID must identify a caption track associated with the specified video.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/captions/\"\nquerystring = {\"part\": \"snippet\", \"id\": \"\", \"videoId\": \"Q8TXgCzxEnw\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/captions/\"\nquerystring = {\"part\": \"snippet\", \"id\": \"\", \"videoId\": \"Q8TXgCzxEnw\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        }
    ],
    "standardized_name": "youtube_v3_v3"
}