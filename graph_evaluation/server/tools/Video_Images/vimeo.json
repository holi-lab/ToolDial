{
    "product_id": "593",
    "tool_description": "Most supportive community of creators and get high-quality tools for hosting, sharing, and streaming videos.",
    "home_url": "https://rapidapi.com/stefan.skliarov/api/Vimeo/",
    "name": "Vimeo",
    "title": "Vimeo",
    "pricing": "FREE",
    "tool_name": "Vimeo",
    "score": {
        "avgServiceLevel": 0,
        "avgLatency": 127252,
        "avgSuccessRate": 0,
        "popularityScore": 4.7,
        "__typename": "Score"
    },
    "host": "Vimeostefan-skliarovV1.p.rapidapi.com",
    "api_list": [
        {
            "name": "addCommentToVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/addCommentToVideo",
            "description": "Add a comment to a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text of the comment",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addCommentToVideo\"\nquerystring = {\"text\": \"\", \"videoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addCommentToVideo\"\nquerystring = {\"text\": \"\", \"videoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addCreditToVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/addCreditToVideo",
            "description": "Add a credit to a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "The email address of the person being credited.",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "role",
                    "type": "STRING",
                    "description": "The role address of the person being credited.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "The name address of the person being credited.",
                    "default": ""
                },
                {
                    "name": "userUri",
                    "type": "STRING",
                    "description": "The userUri address of the person being credited.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addCreditToVideo\"\nquerystring = {\"email\": \"\", \"videoId\": \"\", \"role\": \"\", \"accessToken\": \"\", \"name\": \"\", \"userUri\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addCreditToVideo\"\nquerystring = {\"email\": \"\", \"videoId\": \"\", \"role\": \"\", \"accessToken\": \"\", \"name\": \"\", \"userUri\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addGenreToOnDemandPage",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/addGenreToOnDemandPage",
            "description": "Add a genre to an On Demand page",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "genreId",
                    "type": "STRING",
                    "description": "Id of the genre",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addGenreToOnDemandPage\"\nquerystring = {\"ondemandId\": \"\", \"accessToken\": \"\", \"genreId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addGenreToOnDemandPage\"\nquerystring = {\"ondemandId\": \"\", \"accessToken\": \"\", \"genreId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addPosterToOnDemandPage",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/addPosterToOnDemandPage",
            "description": "Add a poster to an On Demand page",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "posterId",
                    "type": "STRING",
                    "description": "Id of the poster",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addPosterToOnDemandPage\"\nquerystring = {\"ondemandId\": \"\", \"accessToken\": \"\", \"posterId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addPosterToOnDemandPage\"\nquerystring = {\"ondemandId\": \"\", \"accessToken\": \"\", \"posterId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addPromotionToOnDemandPage",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/addPromotionToOnDemandPage",
            "description": "Add a promotion to an On Demand page",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                },
                {
                    "name": "download",
                    "type": "BOOLEAN",
                    "description": "Whether this promotion grants download access to vod content. This is only necessary when not defined on the On Demand Container, and creating promotions with the \"vip\" accesstype and \"buy\" producttype",
                    "default": ""
                },
                {
                    "name": "promotionCode",
                    "type": "STRING",
                    "description": "Promotion code value",
                    "default": ""
                },
                {
                    "name": "total",
                    "type": "STRING",
                    "description": "Number of promotions to generate if type is batch. The amount of uses for the promotion if type is single.",
                    "default": ""
                },
                {
                    "name": "streamPeriod",
                    "type": "SELECT",
                    "description": "The amount of time a user will have access to the vod content upon redeeming a promo code. This is only necessary when not defined on the On Demand Container, and creating promotions with the \"vip\" accesstype and \"rent\" producttype.",
                    "default": ""
                },
                {
                    "name": "type",
                    "type": "SELECT",
                    "description": "Type of promotions to use. If the access type is vip, the only possible value for this field is batch.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "percentOff",
                    "type": "STRING",
                    "description": "The percentage saved by using this promo code. This field is required, and only applicable if the field discountType is set to percent.",
                    "default": ""
                },
                {
                    "name": "label",
                    "type": "STRING",
                    "description": "If you are creating a batch promotion, you can describe it here. This field will be rejected for single promotions.",
                    "default": ""
                },
                {
                    "name": "startTime",
                    "type": "DATEPICKER",
                    "description": "The earliest time this promotion is valid. If startTime is not specified, it will default to the time the promotion was created.",
                    "default": ""
                },
                {
                    "name": "productType",
                    "type": "SELECT",
                    "description": "Restricts the promotion to a particular type of transaction. Defaults to \"any\" when accessType is \"default\", and to \"rent\" if the accessType is \"vip\". Only \"buy\" and \"rent\" are valid if the accessType is \"vip\".",
                    "default": ""
                },
                {
                    "name": "discountType",
                    "type": "SELECT",
                    "description": "Describes the type of discount offered by this promo code. Note: When providing an accesstype of \"vip\", this field only accepts the \"free\" discounttype.",
                    "default": ""
                },
                {
                    "name": "endTime",
                    "type": "DATEPICKER",
                    "description": "The latest time this promotion is valid. If not specified, the promotion will never expire.",
                    "default": ""
                },
                {
                    "name": "accessType",
                    "type": "SELECT",
                    "description": "Promotion access type a purchase option that is not available on the container. \"vip\" promotions will always make the content free, and must be further defined with the download or streamPeriod fields.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addPromotionToOnDemandPage\"\nquerystring = {\"ondemandId\": \"\", \"download\": \"\", \"percentOff\": \"\", \"label\": \"\", \"promotionCode\": \"\", \"startTime\": \"\", \"total\": \"\", \"productType\": \"\", \"discountType\": \"\", \"streamPeriod\": \"\", \"endTime\": \"\", \"accessType\": \"\", \"type\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addPromotionToOnDemandPage\"\nquerystring = {\"ondemandId\": \"\", \"download\": \"\", \"percentOff\": \"\", \"label\": \"\", \"promotionCode\": \"\", \"startTime\": \"\", \"total\": \"\", \"productType\": \"\", \"discountType\": \"\", \"streamPeriod\": \"\", \"endTime\": \"\", \"accessType\": \"\", \"type\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addRegionToOnDemandPage",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/addRegionToOnDemandPage",
            "description": "Add a region to an On Demand page",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                },
                {
                    "name": "countryList",
                    "type": "LIST",
                    "description": "Regions to remove",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addRegionToOnDemandPage\"\nquerystring = {\"accessToken\": \"\", \"ondemandId\": \"\", \"countryList\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addRegionToOnDemandPage\"\nquerystring = {\"accessToken\": \"\", \"ondemandId\": \"\", \"countryList\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addReplyToCommentOnVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/addReplyToCommentOnVideo",
            "description": "Add a reply to comment to a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "commentId",
                    "type": "STRING",
                    "description": "Id of the comment",
                    "default": ""
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text of the comment",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addReplyToCommentOnVideo\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\", \"commentId\": \"\", \"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addReplyToCommentOnVideo\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\", \"commentId\": \"\", \"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addTagToVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/addTagToVideo",
            "description": "Add a tag to a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "tag",
                    "type": "STRING",
                    "description": "Tag to add",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addTagToVideo\"\nquerystring = {\"videoId\": \"\", \"tag\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addTagToVideo\"\nquerystring = {\"videoId\": \"\", \"tag\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addTextTrackToVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/addTextTrackToVideo",
            "description": "Add a text track to a video.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Text track name",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "Text track language",
                    "default": ""
                },
                {
                    "name": "type",
                    "type": "SELECT",
                    "description": "Text track type",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "active",
                    "type": "BOOLEAN",
                    "description": "Text tracks marked active will be visible to other users, and will show up in the player. Only one text track per language can be active.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addTextTrackToVideo\"\nquerystring = {\"name\": \"\", \"active\": \"\", \"videoId\": \"\", \"language\": \"\", \"type\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addTextTrackToVideo\"\nquerystring = {\"name\": \"\", \"active\": \"\", \"videoId\": \"\", \"language\": \"\", \"type\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addVideoToAlbum",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/addVideoToAlbum",
            "description": "Add a video to an album",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "albumId",
                    "type": "STRING",
                    "description": "Id of the album",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addVideoToAlbum\"\nquerystring = {\"albumId\": \"\", \"userId\": \"\", \"accessToken\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addVideoToAlbum\"\nquerystring = {\"albumId\": \"\", \"userId\": \"\", \"accessToken\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addVideoToChannel",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/addVideoToChannel",
            "description": "Add a video to a channel",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "channelId",
                    "type": "STRING",
                    "description": "Id of the channel",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addVideoToChannel\"\nquerystring = {\"videoId\": \"\", \"channelId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addVideoToChannel\"\nquerystring = {\"videoId\": \"\", \"channelId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addVideoToGroup",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/addVideoToGroup",
            "description": "Add a video to a group",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "Id of the group",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addVideoToGroup\"\nquerystring = {\"groupId\": \"\", \"accessToken\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addVideoToGroup\"\nquerystring = {\"groupId\": \"\", \"accessToken\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addVideoToOnDemandPage",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/addVideoToOnDemandPage",
            "description": "Add a video to an On Demand page",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                },
                {
                    "name": "type",
                    "type": "SELECT",
                    "description": "The type of video you are associating with the On Demand page.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "rentPriceCHF",
                    "type": "STRING",
                    "description": "The rental price of this video in CHF.",
                    "default": ""
                },
                {
                    "name": "releaseYear",
                    "type": "STRING",
                    "description": "The video release year.",
                    "default": ""
                },
                {
                    "name": "rentPriceDKK",
                    "type": "STRING",
                    "description": "The rental price of this video in DKK.",
                    "default": ""
                },
                {
                    "name": "rentPriceCAD",
                    "type": "STRING",
                    "description": "The rental price of this video in CAD.",
                    "default": ""
                },
                {
                    "name": "rentPriceGBP",
                    "type": "STRING",
                    "description": "The rental price of this video in GBP.",
                    "default": ""
                },
                {
                    "name": "buyPriceKRW",
                    "type": "STRING",
                    "description": "The purchase price of this video in KRW.",
                    "default": ""
                },
                {
                    "name": "buyPriceCAD",
                    "type": "STRING",
                    "description": "The purchase price of this video in CAD.",
                    "default": ""
                },
                {
                    "name": "buyPricePLN",
                    "type": "STRING",
                    "description": "The purchase price of this video in PLN.",
                    "default": ""
                },
                {
                    "name": "buyPriceDKK",
                    "type": "STRING",
                    "description": "The purchase price of this video in DKK.",
                    "default": ""
                },
                {
                    "name": "buyPriceUSD",
                    "type": "STRING",
                    "description": "The purchase price of this video in USD.",
                    "default": ""
                },
                {
                    "name": "rentPricePLN",
                    "type": "STRING",
                    "description": "The rental price of this video in PLN.",
                    "default": ""
                },
                {
                    "name": "rentPriceUSD",
                    "type": "STRING",
                    "description": "The rental price of this video in USD.",
                    "default": ""
                },
                {
                    "name": "buyPriceGBP",
                    "type": "STRING",
                    "description": "The purchase price of this video in GBP.",
                    "default": ""
                },
                {
                    "name": "rentPriceKRW",
                    "type": "STRING",
                    "description": "The rental price of this video in KRW.",
                    "default": ""
                },
                {
                    "name": "buyPriceCHF",
                    "type": "STRING",
                    "description": "The purchase price of this video in CHF.",
                    "default": ""
                },
                {
                    "name": "rentPriceSEK",
                    "type": "STRING",
                    "description": "The rental price of this video in SEK.",
                    "default": ""
                },
                {
                    "name": "buyPriceEUR",
                    "type": "STRING",
                    "description": "The purchase price of this video in EUR.",
                    "default": ""
                },
                {
                    "name": "buyPriceNOK",
                    "type": "STRING",
                    "description": "The purchase price of this video in NOK.",
                    "default": ""
                },
                {
                    "name": "buyPriceSEK",
                    "type": "STRING",
                    "description": "The purchase price of this video in SEK.",
                    "default": ""
                },
                {
                    "name": "buyPriceAUD",
                    "type": "STRING",
                    "description": "The purchase price of this video in AUD.",
                    "default": ""
                },
                {
                    "name": "buyPriceJPY",
                    "type": "STRING",
                    "description": "The purchase price of this video in JPY.",
                    "default": ""
                },
                {
                    "name": "rentPriceAUD",
                    "type": "STRING",
                    "description": "The rental price of this video in AUD.",
                    "default": ""
                },
                {
                    "name": "rentPriceNOK",
                    "type": "STRING",
                    "description": "The rental price of this video in NOK.",
                    "default": ""
                },
                {
                    "name": "rentPriceEUR",
                    "type": "STRING",
                    "description": "The rental price of this video in EUR.",
                    "default": ""
                },
                {
                    "name": "position",
                    "type": "STRING",
                    "description": "The position this video will appear in this On Demand's video collection.",
                    "default": ""
                },
                {
                    "name": "rentPriceJPY",
                    "type": "STRING",
                    "description": "The rental price of this video in JPY.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addVideoToOnDemandPage\"\nquerystring = {\"rentPriceCHF\": \"\", \"videoId\": \"\", \"releaseYear\": \"\", \"rentPriceDKK\": \"\", \"rentPriceCAD\": \"\", \"rentPriceGBP\": \"\", \"accessToken\": \"\", \"buyPriceKRW\": \"\", \"buyPriceCAD\": \"\", \"buyPricePLN\": \"\", \"buyPriceDKK\": \"\", \"buyPriceUSD\": \"\", \"rentPricePLN\": \"\", \"rentPriceUSD\": \"\", \"buyPriceGBP\": \"\", \"rentPriceKRW\": \"\", \"buyPriceCHF\": \"\", \"ondemandId\": \"\", \"rentPriceSEK\": \"\", \"buyPriceEUR\": \"\", \"buyPriceNOK\": \"\", \"buyPriceSEK\": \"\", \"buyPriceAUD\": \"\", \"buyPriceJPY\": \"\", \"type\": \"\", \"rentPriceAUD\": \"\", \"rentPriceNOK\": \"\", \"rentPriceEUR\": \"\", \"position\": \"\", \"rentPriceJPY\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addVideoToOnDemandPage\"\nquerystring = {\"rentPriceCHF\": \"\", \"videoId\": \"\", \"releaseYear\": \"\", \"rentPriceDKK\": \"\", \"rentPriceCAD\": \"\", \"rentPriceGBP\": \"\", \"accessToken\": \"\", \"buyPriceKRW\": \"\", \"buyPriceCAD\": \"\", \"buyPricePLN\": \"\", \"buyPriceDKK\": \"\", \"buyPriceUSD\": \"\", \"rentPricePLN\": \"\", \"rentPriceUSD\": \"\", \"buyPriceGBP\": \"\", \"rentPriceKRW\": \"\", \"buyPriceCHF\": \"\", \"ondemandId\": \"\", \"rentPriceSEK\": \"\", \"buyPriceEUR\": \"\", \"buyPriceNOK\": \"\", \"buyPriceSEK\": \"\", \"buyPriceAUD\": \"\", \"buyPriceJPY\": \"\", \"type\": \"\", \"rentPriceAUD\": \"\", \"rentPriceNOK\": \"\", \"rentPriceEUR\": \"\", \"position\": \"\", \"rentPriceJPY\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addVideoToUserPortfolio",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/addVideoToUserPortfolio",
            "description": "Add a video to a users' portfolio",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "portfolioId",
                    "type": "STRING",
                    "description": "Id of the portfolio",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addVideoToUserPortfolio\"\nquerystring = {\"portfolioId\": \"\", \"accessToken\": \"\", \"userId\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addVideoToUserPortfolio\"\nquerystring = {\"portfolioId\": \"\", \"accessToken\": \"\", \"userId\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addVideoToWatchLaterQueue",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/addVideoToWatchLaterQueue",
            "description": "Add a video to a users' Watch Later queue",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addVideoToWatchLaterQueue\"\nquerystring = {\"videoId\": \"\", \"userId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/addVideoToWatchLaterQueue\"\nquerystring = {\"videoId\": \"\", \"userId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "allowSingleUserToViewPrivateVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/allowSingleUserToViewPrivateVideo",
            "description": "Allow a single user to view a private video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/allowSingleUserToViewPrivateVideo\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/allowSingleUserToViewPrivateVideo\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "allowUsersViewPrivateVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/allowUsersViewPrivateVideo",
            "description": "Allow a list of users to view a private video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "userUris",
                    "type": "JSON",
                    "description": "An array of either user URI's or user IDs.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/allowUsersViewPrivateVideo\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\", \"userUris\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/allowUsersViewPrivateVideo\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\", \"userUris\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "allowVideoEmbedding",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/allowVideoEmbedding",
            "description": "Allow embedding of a video on a domain",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "Domain to allow embedding",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/allowVideoEmbedding\"\nquerystring = {\"accessToken\": \"\", \"videoId\": \"\", \"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/allowVideoEmbedding\"\nquerystring = {\"accessToken\": \"\", \"videoId\": \"\", \"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "assignEmbedPresetToVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/assignEmbedPresetToVideo",
            "description": "Assign an embed preset to a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "presetId",
                    "type": "STRING",
                    "description": "Id of the preset",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/assignEmbedPresetToVideo\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\", \"presetId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/assignEmbedPresetToVideo\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\", \"presetId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "assignTagsToVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/assignTagsToVideo",
            "description": "Add a tags to a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "tag",
                    "type": "JSON",
                    "description": "Tag to add",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/assignTagsToVideo\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\", \"tag\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/assignTagsToVideo\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\", \"tag\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "categorizeVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/categorizeVideo",
            "description": "Add up to two categories and a subcategory to a video. This is merely a suggestion, and does not ensure that the video will added to the category.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "category",
                    "type": "STRING",
                    "description": "Id of the category",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/categorizeVideo\"\nquerystring = {\"videoId\": \"\", \"category\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/categorizeVideo\"\nquerystring = {\"videoId\": \"\", \"category\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "checkForVideoInCategory",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/checkForVideoInCategory",
            "description": "Check for a video in a category",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "categoryName",
                    "type": "STRING",
                    "description": "Name of the category",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkForVideoInCategory\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\", \"categoryName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkForVideoInCategory\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\", \"categoryName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "checkGroupHasVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/checkGroupHasVideo",
            "description": "Check if this group contains a video.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "Id of the group",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkGroupHasVideo\"\nquerystring = {\"videoId\": \"\", \"groupId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkGroupHasVideo\"\nquerystring = {\"videoId\": \"\", \"groupId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteTagFromVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteTagFromVideo",
            "description": "Delete a tag from a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "tag",
                    "type": "STRING",
                    "description": "Tag to delete",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteTagFromVideo\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\", \"tag\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteTagFromVideo\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\", \"tag\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "checkOnDemandPageHasGenre",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/checkOnDemandPageHasGenre",
            "description": "Check whether an On Demand page has a genre.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "genreId",
                    "type": "STRING",
                    "description": "Id of the genre",
                    "default": ""
                },
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkOnDemandPageHasGenre\"\nquerystring = {\"accessToken\": \"\", \"genreId\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkOnDemandPageHasGenre\"\nquerystring = {\"accessToken\": \"\", \"genreId\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "checkOnDemandPageHasRegion",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/checkOnDemandPageHasRegion",
            "description": "Get an On Demand pages' region",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Region to add",
                    "default": ""
                },
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkOnDemandPageHasRegion\"\nquerystring = {\"accessToken\": \"\", \"country\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkOnDemandPageHasRegion\"\nquerystring = {\"accessToken\": \"\", \"country\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "checkPortfolioContainsVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/checkPortfolioContainsVideo",
            "description": "Check if a portfolio contains a video.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "portfolioId",
                    "type": "STRING",
                    "description": "Id of the portfolio",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkPortfolioContainsVideo\"\nquerystring = {\"userId\": \"\", \"portfolioId\": \"\", \"accessToken\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkPortfolioContainsVideo\"\nquerystring = {\"userId\": \"\", \"portfolioId\": \"\", \"accessToken\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "checkPurchasedOnDemandPage",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/checkPurchasedOnDemandPage",
            "description": "Check if user have purchased an On Demand page",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkPurchasedOnDemandPage\"\nquerystring = {\"ondemandId\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkPurchasedOnDemandPage\"\nquerystring = {\"ondemandId\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "checkSingleUserLikedVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/checkSingleUserLikedVideo",
            "description": "Check if a user has liked a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkSingleUserLikedVideo\"\nquerystring = {\"accessToken\": \"\", \"userId\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkSingleUserLikedVideo\"\nquerystring = {\"accessToken\": \"\", \"userId\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "checkTagAddedToVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/checkTagAddedToVideo",
            "description": "Check if a tag has been added to a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "tag",
                    "type": "STRING",
                    "description": "Tag to check",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkTagAddedToVideo\"\nquerystring = {\"accessToken\": \"\", \"tag\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkTagAddedToVideo\"\nquerystring = {\"accessToken\": \"\", \"tag\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "checkUserFollowingUser",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/checkUserFollowingUser",
            "description": "Check if a user is following another user",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "followingUserId",
                    "type": "STRING",
                    "description": "Id of the user which is followed",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkUserFollowingUser\"\nquerystring = {\"userId\": \"\", \"accessToken\": \"\", \"followingUserId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkUserFollowingUser\"\nquerystring = {\"userId\": \"\", \"accessToken\": \"\", \"followingUserId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "checkUserFollowsCategory",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/checkUserFollowsCategory",
            "description": "Check if a user follows a category",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "categoryName",
                    "type": "STRING",
                    "description": "Name of the category",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkUserFollowsCategory\"\nquerystring = {\"categoryName\": \"\", \"userId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkUserFollowsCategory\"\nquerystring = {\"categoryName\": \"\", \"userId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "checkUserFollowsChannel",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/checkUserFollowsChannel",
            "description": "Check if a user follows a channel",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "channelId",
                    "type": "STRING",
                    "description": "Id of the channel",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkUserFollowsChannel\"\nquerystring = {\"channelId\": \"\", \"userId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkUserFollowsChannel\"\nquerystring = {\"channelId\": \"\", \"userId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "checkUserHasVideoInWatchLaterQueue",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/checkUserHasVideoInWatchLaterQueue",
            "description": "Check if a user has a video in their Watch Later queue",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkUserHasVideoInWatchLaterQueue\"\nquerystring = {\"userId\": \"\", \"accessToken\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkUserHasVideoInWatchLaterQueue\"\nquerystring = {\"userId\": \"\", \"accessToken\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "checkUserJoinedGroup",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/checkUserJoinedGroup",
            "description": "Check if user has joined a group",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "Id of the group",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkUserJoinedGroup\"\nquerystring = {\"groupId\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkUserJoinedGroup\"\nquerystring = {\"groupId\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "checkUserOwnsVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/checkUserOwnsVideo",
            "description": "Check if a user owns a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkUserOwnsVideo\"\nquerystring = {\"accessToken\": \"\", \"userId\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/checkUserOwnsVideo\"\nquerystring = {\"accessToken\": \"\", \"userId\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "clearAlbumVideos",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/clearAlbumVideos",
            "description": "Clear or replace the videos in an album.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "albumId",
                    "type": "STRING",
                    "description": "Id of the album",
                    "default": ""
                },
                {
                    "name": "videoIds",
                    "type": "LIST",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/clearAlbumVideos\"\nquerystring = {\"userId\": \"\", \"accessToken\": \"\", \"albumId\": \"\", \"videoIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/clearAlbumVideos\"\nquerystring = {\"userId\": \"\", \"accessToken\": \"\", \"albumId\": \"\", \"videoIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "completeUserStreamingUpload",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/completeUserStreamingUpload",
            "description": "Complete a users' streaming upload",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "signature",
                    "type": "STRING",
                    "description": "The crypto signature of the completed upload.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoFileId",
                    "type": "STRING",
                    "description": "The ID of the uploaded file.",
                    "default": ""
                },
                {
                    "name": "ticketId",
                    "type": "STRING",
                    "description": "Id of the ticket",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/completeUserStreamingUpload\"\nquerystring = {\"signature\": \"\", \"userId\": \"\", \"accessToken\": \"\", \"videoFileId\": \"\", \"ticketId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/completeUserStreamingUpload\"\nquerystring = {\"signature\": \"\", \"userId\": \"\", \"accessToken\": \"\", \"videoFileId\": \"\", \"ticketId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createAlbum",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/createAlbum",
            "description": "Create an album",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Album name",
                    "default": ""
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "Album description",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "The default sort order of an album's videos.",
                    "default": ""
                },
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "The album's password. Required if privacy=password.",
                    "default": ""
                },
                {
                    "name": "privacy",
                    "type": "SELECT",
                    "description": "The album's privacy level.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/createAlbum\"\nquerystring = {\"sort\": \"\", \"name\": \"\", \"password\": \"\", \"description\": \"\", \"privacy\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/createAlbum\"\nquerystring = {\"sort\": \"\", \"name\": \"\", \"password\": \"\", \"description\": \"\", \"privacy\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createBackgroundForOnDemandPage",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/createBackgroundForOnDemandPage",
            "description": "Create a new background for an On Demand page",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                },
                {
                    "name": "backgroundId",
                    "type": "STRING",
                    "description": "Id of the background",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/createBackgroundForOnDemandPage\"\nquerystring = {\"ondemandId\": \"\", \"backgroundId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/createBackgroundForOnDemandPage\"\nquerystring = {\"ondemandId\": \"\", \"backgroundId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createChannel",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/createChannel",
            "description": "Create new channel",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "privacy",
                    "type": "SELECT",
                    "description": "The privacy level of the new channel",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Name of the channel",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "Description of the channel",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/createChannel\"\nquerystring = {\"privacy\": \"\", \"name\": \"\", \"accessToken\": \"\", \"description\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/createChannel\"\nquerystring = {\"privacy\": \"\", \"name\": \"\", \"accessToken\": \"\", \"description\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createGroup",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/createGroup",
            "description": "Create new group",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "Description of the channel",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Name of the channel",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/createGroup\"\nquerystring = {\"accessToken\": \"\", \"description\": \"\", \"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/createGroup\"\nquerystring = {\"accessToken\": \"\", \"description\": \"\", \"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createOnDemandPage",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/createOnDemandPage",
            "description": "Create an On Demand page",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "The On Demand page description.",
                    "default": ""
                },
                {
                    "name": "type",
                    "type": "SELECT",
                    "description": "The On Demand page type.",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "The On Demand page name.",
                    "default": ""
                },
                {
                    "name": "contentRating",
                    "type": "LIST",
                    "description": "Rating of the page",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "buyPriceUSD",
                    "type": "STRING",
                    "description": "The purchase price of this video in USD.",
                    "default": ""
                },
                {
                    "name": "buyPriceGBP",
                    "type": "STRING",
                    "description": "The purchase price of this video in GBP.",
                    "default": ""
                },
                {
                    "name": "buyDownload",
                    "type": "BOOLEAN",
                    "description": "If download is available to purchasers who buy the film.",
                    "default": ""
                },
                {
                    "name": "buyPriceDKK",
                    "type": "STRING",
                    "description": "The purchase price of this video in DKK.",
                    "default": ""
                },
                {
                    "name": "buyPriceCAD",
                    "type": "STRING",
                    "description": "The purchase price of this video in CAD.",
                    "default": ""
                },
                {
                    "name": "buyPriceKRW",
                    "type": "STRING",
                    "description": "The purchase price of this video in KRW.",
                    "default": ""
                },
                {
                    "name": "buyPricePLN",
                    "type": "STRING",
                    "description": "The purchase price of this video in PLN.",
                    "default": ""
                },
                {
                    "name": "buyPriceSEK",
                    "type": "STRING",
                    "description": "The purchase price of this video in SEK.",
                    "default": ""
                },
                {
                    "name": "buyPriceEUR",
                    "type": "STRING",
                    "description": "The purchase price of this video in EUR.",
                    "default": ""
                },
                {
                    "name": "buyPriceAUD",
                    "type": "STRING",
                    "description": "The purchase price of this video in AUD.",
                    "default": ""
                },
                {
                    "name": "buyPriceNOK",
                    "type": "STRING",
                    "description": "The purchase price of this video in NOK.",
                    "default": ""
                },
                {
                    "name": "buyPriceJPY",
                    "type": "STRING",
                    "description": "The purchase price of this video in JPY.",
                    "default": ""
                },
                {
                    "name": "buyPriceCHF",
                    "type": "STRING",
                    "description": "The purchase price of this video in CHF.",
                    "default": ""
                },
                {
                    "name": "buyActive",
                    "type": "BOOLEAN",
                    "description": "Required if rent.active is false.",
                    "default": ""
                },
                {
                    "name": "rentPriceSEK",
                    "type": "STRING",
                    "description": "The rental price of this video in SEK.",
                    "default": ""
                },
                {
                    "name": "rentPriceCHF",
                    "type": "STRING",
                    "description": "The rental price of this video in CHF.",
                    "default": ""
                },
                {
                    "name": "link",
                    "type": "STRING",
                    "description": "The custom string to use in this On Demand page's Vimeo URL.",
                    "default": ""
                },
                {
                    "name": "episodesBuyPriceUSD",
                    "type": "STRING",
                    "description": "Required if episodes.buy.active is true.",
                    "default": ""
                },
                {
                    "name": "rentPriceEUR",
                    "type": "STRING",
                    "description": "The rental price of this video in EUR.",
                    "default": ""
                },
                {
                    "name": "episodesBuyActive",
                    "type": "BOOLEAN",
                    "description": "Whether episodes can be bought",
                    "default": ""
                },
                {
                    "name": "rentPriceAUD",
                    "type": "STRING",
                    "description": "The rental price of this video in AUD.",
                    "default": ""
                },
                {
                    "name": "subscriptionMonthlyActive",
                    "type": "BOOLEAN",
                    "description": "Required if rent.active and buy.active are false.",
                    "default": ""
                },
                {
                    "name": "episodesRentPeriod",
                    "type": "STRING",
                    "description": "Required if episodes.rent.active is true.",
                    "default": ""
                },
                {
                    "name": "rentActive",
                    "type": "STRING",
                    "description": "Required if buy.active is false.",
                    "default": ""
                },
                {
                    "name": "rentPriceJPY",
                    "type": "STRING",
                    "description": "The rental price of this video in JPY.",
                    "default": ""
                },
                {
                    "name": "rentPriceNOK",
                    "type": "STRING",
                    "description": "The rental price of this video in NOK.",
                    "default": ""
                },
                {
                    "name": "domainLink",
                    "type": "STRING",
                    "description": "The On Demand page's custom domain.",
                    "default": ""
                },
                {
                    "name": "episodesRentActive",
                    "type": "BOOLEAN",
                    "description": "Whether episodes can be rented",
                    "default": ""
                },
                {
                    "name": "episodesBuyDownload",
                    "type": "BOOLEAN",
                    "description": "If download is available to purchasers who buy the episode.",
                    "default": ""
                },
                {
                    "name": "rentPriceGBP",
                    "type": "STRING",
                    "description": "The rental price of this video in GBP.",
                    "default": ""
                },
                {
                    "name": "episodesRentPriceUSD",
                    "type": "STRING",
                    "description": "Required if episodes.rent.active is true. Only applicable if this On Demand page is a series. This is the default price for each individual episode.",
                    "default": ""
                },
                {
                    "name": "rentPriceDKK",
                    "type": "STRING",
                    "description": "The rental price of this video in DKK.",
                    "default": ""
                },
                {
                    "name": "rentPriceKRW",
                    "type": "STRING",
                    "description": "The rental price of this video in KRW.",
                    "default": ""
                },
                {
                    "name": "subscriptionMonthlyPriceUSD",
                    "type": "STRING",
                    "description": "Required if subscription.active is true.",
                    "default": ""
                },
                {
                    "name": "rentPeriod",
                    "type": "STRING",
                    "description": "Required if rent.active is true.",
                    "default": ""
                },
                {
                    "name": "rentPricePLN",
                    "type": "STRING",
                    "description": "The rental price of this video in PLN.",
                    "default": ""
                },
                {
                    "name": "rentPriceUSD",
                    "type": "STRING",
                    "description": "The rental price of this video in USD.",
                    "default": ""
                },
                {
                    "name": "rentPriceCAD",
                    "type": "STRING",
                    "description": "The rental price of this video in CAD.",
                    "default": ""
                },
                {
                    "name": "acceptedCurrencies",
                    "type": "LIST",
                    "description": "Array of accepted currencies.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/createOnDemandPage\"\nquerystring = {\"accessToken\": \"\", \"buyPriceUSD\": \"\", \"buyPriceGBP\": \"\", \"buyDownload\": \"\", \"buyPriceDKK\": \"\", \"buyPriceCAD\": \"\", \"buyPriceKRW\": \"\", \"buyPricePLN\": \"\", \"buyPriceSEK\": \"\", \"buyPriceEUR\": \"\", \"buyPriceAUD\": \"\", \"buyPriceNOK\": \"\", \"buyPriceJPY\": \"\", \"buyPriceCHF\": \"\", \"buyActive\": \"\", \"rentPriceSEK\": \"\", \"description\": \"\", \"rentPriceCHF\": \"\", \"type\": \"\", \"link\": \"\", \"episodesBuyPriceUSD\": \"\", \"rentPriceEUR\": \"\", \"episodesBuyActive\": \"\", \"rentPriceAUD\": \"\", \"subscriptionMonthlyActive\": \"\", \"episodesRentPeriod\": \"\", \"rentActive\": \"\", \"rentPriceJPY\": \"\", \"rentPriceNOK\": \"\", \"domainLink\": \"\", \"episodesRentActive\": \"\", \"episodesBuyDownload\": \"\", \"rentPriceGBP\": \"\", \"episodesRentPriceUSD\": \"\", \"rentPriceDKK\": \"\", \"rentPriceKRW\": \"\", \"subscriptionMonthlyPriceUSD\": \"\", \"rentPeriod\": \"\", \"rentPricePLN\": \"\", \"name\": \"\", \"rentPriceUSD\": \"\", \"rentPriceCAD\": \"\", \"acceptedCurrencies\": \"\", \"contentRating\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/createOnDemandPage\"\nquerystring = {\"accessToken\": \"\", \"buyPriceUSD\": \"\", \"buyPriceGBP\": \"\", \"buyDownload\": \"\", \"buyPriceDKK\": \"\", \"buyPriceCAD\": \"\", \"buyPriceKRW\": \"\", \"buyPricePLN\": \"\", \"buyPriceSEK\": \"\", \"buyPriceEUR\": \"\", \"buyPriceAUD\": \"\", \"buyPriceNOK\": \"\", \"buyPriceJPY\": \"\", \"buyPriceCHF\": \"\", \"buyActive\": \"\", \"rentPriceSEK\": \"\", \"description\": \"\", \"rentPriceCHF\": \"\", \"type\": \"\", \"link\": \"\", \"episodesBuyPriceUSD\": \"\", \"rentPriceEUR\": \"\", \"episodesBuyActive\": \"\", \"rentPriceAUD\": \"\", \"subscriptionMonthlyActive\": \"\", \"episodesRentPeriod\": \"\", \"rentActive\": \"\", \"rentPriceJPY\": \"\", \"rentPriceNOK\": \"\", \"domainLink\": \"\", \"episodesRentActive\": \"\", \"episodesBuyDownload\": \"\", \"rentPriceGBP\": \"\", \"episodesRentPriceUSD\": \"\", \"rentPriceDKK\": \"\", \"rentPriceKRW\": \"\", \"subscriptionMonthlyPriceUSD\": \"\", \"rentPeriod\": \"\", \"rentPricePLN\": \"\", \"name\": \"\", \"rentPriceUSD\": \"\", \"rentPriceCAD\": \"\", \"acceptedCurrencies\": \"\", \"contentRating\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createVideoThumbnail",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/createVideoThumbnail",
            "description": "Check if a user owns a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "active",
                    "type": "BOOLEAN",
                    "description": "Make this picture the default picture if you have created a picture response from video at given time offset.",
                    "default": ""
                },
                {
                    "name": "time",
                    "type": "STRING",
                    "description": "If set will create a picture resource from video at given time offset.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/createVideoThumbnail\"\nquerystring = {\"accessToken\": \"\", \"active\": \"\", \"time\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/createVideoThumbnail\"\nquerystring = {\"accessToken\": \"\", \"active\": \"\", \"time\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteAlbum",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteAlbum",
            "description": "Delete an album",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "albumId",
                    "type": "STRING",
                    "description": "Id of the album",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteAlbum\"\nquerystring = {\"albumId\": \"\", \"userId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteAlbum\"\nquerystring = {\"albumId\": \"\", \"userId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteChannel",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteChannel",
            "description": "Delete a channel",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "channelId",
                    "type": "STRING",
                    "description": "Id of the channel",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteChannel\"\nquerystring = {\"channelId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteChannel\"\nquerystring = {\"channelId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteCommentFromVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteCommentFromVideo",
            "description": "Delete a comment from a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "commentId",
                    "type": "STRING",
                    "description": "Id of the comment",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteCommentFromVideo\"\nquerystring = {\"videoId\": \"\", \"commentId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteCommentFromVideo\"\nquerystring = {\"videoId\": \"\", \"commentId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteCreditOnVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteCreditOnVideo",
            "description": "Delete a credit from a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "creditId",
                    "type": "STRING",
                    "description": "Id of the credit",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteCreditOnVideo\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\", \"creditId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteCreditOnVideo\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\", \"creditId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteGenreFromOnDemandPage",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteGenreFromOnDemandPage",
            "description": "Delete a genre from an On Demand page",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "genreId",
                    "type": "STRING",
                    "description": "Id of the genre",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteGenreFromOnDemandPage\"\nquerystring = {\"genreId\": \"\", \"accessToken\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteGenreFromOnDemandPage\"\nquerystring = {\"genreId\": \"\", \"accessToken\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteGroup",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteGroup",
            "description": "Delete a group",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "Id of the group",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteGroup\"\nquerystring = {\"groupId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteGroup\"\nquerystring = {\"groupId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteOnDemandPage",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteOnDemandPage",
            "description": "Delete an On Demand page",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteOnDemandPage\"\nquerystring = {\"ondemandId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteOnDemandPage\"\nquerystring = {\"ondemandId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteOnDemandPageBackground",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteOnDemandPageBackground",
            "description": "Delete a background from an On Demand page",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "backgroundId",
                    "type": "STRING",
                    "description": "Id of the background",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteOnDemandPageBackground\"\nquerystring = {\"backgroundId\": \"\", \"accessToken\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteOnDemandPageBackground\"\nquerystring = {\"backgroundId\": \"\", \"accessToken\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteOnDemandPagePromotion",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteOnDemandPagePromotion",
            "description": "Delete a promotion from an On Demand page",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "promotionId",
                    "type": "STRING",
                    "description": "Id of the promotion",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteOnDemandPagePromotion\"\nquerystring = {\"promotionId\": \"\", \"accessToken\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteOnDemandPagePromotion\"\nquerystring = {\"promotionId\": \"\", \"accessToken\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteRegionsFromOnDemandPage",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteRegionsFromOnDemandPage",
            "description": "Delete regions from an On Demand page",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "LIST",
                    "description": "Regions to remove",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteRegionsFromOnDemandPage\"\nquerystring = {\"ondemandId\": \"\", \"accessToken\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteRegionsFromOnDemandPage\"\nquerystring = {\"ondemandId\": \"\", \"accessToken\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteSingleRegionFromOnDemandPage",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteSingleRegionFromOnDemandPage",
            "description": "Delete a region from an On Demand page",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Region to remove",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteSingleRegionFromOnDemandPage\"\nquerystring = {\"ondemandId\": \"\", \"accessToken\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteSingleRegionFromOnDemandPage\"\nquerystring = {\"ondemandId\": \"\", \"accessToken\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "editVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/editVideo",
            "description": "Edit a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "The video description.",
                    "default": ""
                },
                {
                    "name": "embedColor",
                    "type": "STRING",
                    "description": "A primary color used by the embed player.",
                    "default": ""
                },
                {
                    "name": "embedLogosVimeo",
                    "type": "BOOLEAN",
                    "description": "Show or hide the vimeo logo.",
                    "default": ""
                },
                {
                    "name": "embedButtonsShare",
                    "type": "BOOLEAN",
                    "description": "Show or hide the share button.",
                    "default": ""
                },
                {
                    "name": "embedTitlePortrait",
                    "type": "SELECT",
                    "description": "Show, hide, or let the user decide if the owners portrait shows on the video.",
                    "default": ""
                },
                {
                    "name": "embedButtonsFullscreen",
                    "type": "BOOLEAN",
                    "description": "Show or hide the fullscreen button.",
                    "default": ""
                },
                {
                    "name": "embedLogosCustomLink",
                    "type": "STRING",
                    "description": "A url that your user will navigate to if they click your custom logo.",
                    "default": ""
                },
                {
                    "name": "embedTitleName",
                    "type": "SELECT",
                    "description": "Show, hide, or let the user decide if the video title shows on the video",
                    "default": ""
                },
                {
                    "name": "externalLinksImdb",
                    "type": "STRING",
                    "description": "External data from imdb",
                    "default": ""
                },
                {
                    "name": "license",
                    "type": "SELECT",
                    "description": "Set the Creative Commons license",
                    "default": ""
                },
                {
                    "name": "embedButtonsLike",
                    "type": "BOOLEAN",
                    "description": "Show or hide the like button.",
                    "default": ""
                },
                {
                    "name": "ratingsMpaaReason",
                    "type": "SELECT",
                    "description": "Set MPAA rating reason for a video.",
                    "default": ""
                },
                {
                    "name": "privacyDownload",
                    "type": "BOOLEAN",
                    "description": "Enable or disable the ability for anyone to download video.",
                    "default": ""
                },
                {
                    "name": "spatialDirectorTimeline",
                    "type": "JSON",
                    "description": "360 director timeline. The arrays in this should include a \"time_code\", \"pitch\", \"yaw\", and optionally \"roll\". For pitch, the minimum allowed is -90, and the max of 90. For yaw, the minimum is 0, and a maximum of 360.",
                    "default": ""
                },
                {
                    "name": "privacyAdd",
                    "type": "BOOLEAN",
                    "description": "Enable or disable the ability for anyone to add the video to an album, channel, or group.",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "The new title for the video",
                    "default": ""
                },
                {
                    "name": "privacyView",
                    "type": "SELECT",
                    "description": "The new privacy setting for the video. Content-type application/json is the only valid type for type \"users\", basic users can not set privacy to unlisted.",
                    "default": ""
                },
                {
                    "name": "ratingTvReason",
                    "type": "SELECT",
                    "description": "Set TV rating reason for a video.",
                    "default": ""
                },
                {
                    "name": "spatialProjection",
                    "type": "SELECT",
                    "description": "360 spatial projection.",
                    "default": ""
                },
                {
                    "name": "privacyComments",
                    "type": "SELECT",
                    "description": "The privacy for who can comment on the video.",
                    "default": ""
                },
                {
                    "name": "spatialFieldOfView",
                    "type": "NUMBER",
                    "description": "360 field of view. Default 50, min 30, max 90.",
                    "default": ""
                },
                {
                    "name": "embedTitleOwner",
                    "type": "SELECT",
                    "description": "Show, hide, or let the user decide if the owners information shows on the video.",
                    "default": ""
                },
                {
                    "name": "ratingTvRating",
                    "type": "SELECT",
                    "description": "Set TV rating for a video.",
                    "default": ""
                },
                {
                    "name": "ratingsMpaaRating",
                    "type": "SELECT",
                    "description": "Set MPAA rating for a video.",
                    "default": ""
                },
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "When you set privacy.view to password, you must provide the password as an additional parameter.",
                    "default": ""
                },
                {
                    "name": "privacyEmbed",
                    "type": "SELECT",
                    "description": "The videos new embed settings. Whitelist allows you to define all valid embed domains. Check out our docs for adding and removing domains.",
                    "default": ""
                },
                {
                    "name": "embedButtonsHd",
                    "type": "BOOLEAN",
                    "description": "Show or hide the HD button.",
                    "default": ""
                },
                {
                    "name": "embedVolume",
                    "type": "BOOLEAN",
                    "description": "Show or hide the volume selector.",
                    "default": ""
                },
                {
                    "name": "spatialStereoFormat",
                    "type": "SELECT",
                    "description": "360 spatial stereo format.",
                    "default": ""
                },
                {
                    "name": "embedButtonsEmbed",
                    "type": "BOOLEAN",
                    "description": "Show or hide the embed button.",
                    "default": ""
                },
                {
                    "name": "embedLogosCustomSticky",
                    "type": "BOOLEAN",
                    "description": "Always show the custom logo, or hide it after time with the rest of the UI.",
                    "default": ""
                },
                {
                    "name": "externalLinksRottenTomatoes",
                    "type": "STRING",
                    "description": "External data from rotten tomatoes",
                    "default": ""
                },
                {
                    "name": "reviewLink",
                    "type": "BOOLEAN",
                    "description": "Enable or disable the review page.",
                    "default": ""
                },
                {
                    "name": "embedLogosCustomActive",
                    "type": "BOOLEAN",
                    "description": "Show or hide your custom logo.",
                    "default": ""
                },
                {
                    "name": "embedPlaybar",
                    "type": "BOOLEAN",
                    "description": "Show or hide the playbar.",
                    "default": ""
                },
                {
                    "name": "embedButtonsWatchlater",
                    "type": "BOOLEAN",
                    "description": "Show or hide the watch later button.",
                    "default": ""
                },
                {
                    "name": "embedButtonsScaling",
                    "type": "BOOLEAN",
                    "description": "Show or hide the scaling button (shown only in fullscreen mode).",
                    "default": ""
                },
                {
                    "name": "locale",
                    "type": "STRING",
                    "description": "Set the default language for this video. For a full list of valid languages use the \"/languages?filter=texttracks\" endpoint.",
                    "default": ""
                },
                {
                    "name": "contentRating",
                    "type": "LIST",
                    "description": "Rating of the video",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/editVideo\"\nquerystring = {\"accessToken\": \"\", \"videoId\": \"\", \"description\": \"\", \"embedColor\": \"\", \"embedLogosVimeo\": \"\", \"embedButtonsShare\": \"\", \"embedTitlePortrait\": \"\", \"embedButtonsFullscreen\": \"\", \"embedLogosCustomLink\": \"\", \"embedTitleName\": \"\", \"externalLinksImdb\": \"\", \"license\": \"\", \"embedButtonsLike\": \"\", \"ratingsMpaaReason\": \"\", \"privacyDownload\": \"\", \"spatialDirectorTimeline\": \"\", \"privacyAdd\": \"\", \"name\": \"\", \"privacyView\": \"\", \"ratingTvReason\": \"\", \"spatialProjection\": \"\", \"privacyComments\": \"\", \"spatialFieldOfView\": \"\", \"embedTitleOwner\": \"\", \"ratingTvRating\": \"\", \"ratingsMpaaRating\": \"\", \"password\": \"\", \"privacyEmbed\": \"\", \"embedButtonsHd\": \"\", \"embedVolume\": \"\", \"spatialStereoFormat\": \"\", \"embedButtonsEmbed\": \"\", \"embedLogosCustomSticky\": \"\", \"externalLinksRottenTomatoes\": \"\", \"reviewLink\": \"\", \"embedLogosCustomActive\": \"\", \"embedPlaybar\": \"\", \"embedButtonsWatchlater\": \"\", \"embedButtonsScaling\": \"\", \"locale\": \"\", \"contentRating\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/editVideo\"\nquerystring = {\"accessToken\": \"\", \"videoId\": \"\", \"description\": \"\", \"embedColor\": \"\", \"embedLogosVimeo\": \"\", \"embedButtonsShare\": \"\", \"embedTitlePortrait\": \"\", \"embedButtonsFullscreen\": \"\", \"embedLogosCustomLink\": \"\", \"embedTitleName\": \"\", \"externalLinksImdb\": \"\", \"license\": \"\", \"embedButtonsLike\": \"\", \"ratingsMpaaReason\": \"\", \"privacyDownload\": \"\", \"spatialDirectorTimeline\": \"\", \"privacyAdd\": \"\", \"name\": \"\", \"privacyView\": \"\", \"ratingTvReason\": \"\", \"spatialProjection\": \"\", \"privacyComments\": \"\", \"spatialFieldOfView\": \"\", \"embedTitleOwner\": \"\", \"ratingTvRating\": \"\", \"ratingsMpaaRating\": \"\", \"password\": \"\", \"privacyEmbed\": \"\", \"embedButtonsHd\": \"\", \"embedVolume\": \"\", \"spatialStereoFormat\": \"\", \"embedButtonsEmbed\": \"\", \"embedLogosCustomSticky\": \"\", \"externalLinksRottenTomatoes\": \"\", \"reviewLink\": \"\", \"embedLogosCustomActive\": \"\", \"embedPlaybar\": \"\", \"embedButtonsWatchlater\": \"\", \"embedButtonsScaling\": \"\", \"locale\": \"\", \"contentRating\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteUserPicture",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteUserPicture",
            "description": "Delete a users' picture",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "pictureId",
                    "type": "STRING",
                    "description": "Id of the picture",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteUserPicture\"\nquerystring = {\"userId\": \"\", \"accessToken\": \"\", \"pictureId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteUserPicture\"\nquerystring = {\"userId\": \"\", \"accessToken\": \"\", \"pictureId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteUsersEntireWatchHistory",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteUsersEntireWatchHistory",
            "description": "Delete a users' entire watch history",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteUsersEntireWatchHistory\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteUsersEntireWatchHistory\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideo",
            "description": "Delete a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideo\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideo\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteVideoFromAlbum",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoFromAlbum",
            "description": "Delete a video from an album",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "albumId",
                    "type": "STRING",
                    "description": "Id of the album",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoFromAlbum\"\nquerystring = {\"accessToken\": \"\", \"videoId\": \"\", \"albumId\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoFromAlbum\"\nquerystring = {\"accessToken\": \"\", \"videoId\": \"\", \"albumId\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteVideoFromChannel",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoFromChannel",
            "description": "Delete a video from a channel",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "channelId",
                    "type": "STRING",
                    "description": "Id of the channel",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoFromChannel\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\", \"channelId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoFromChannel\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\", \"channelId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteVideoFromGroup",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoFromGroup",
            "description": "Delete a video from a group",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "Id of the group",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoFromGroup\"\nquerystring = {\"videoId\": \"\", \"groupId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoFromGroup\"\nquerystring = {\"videoId\": \"\", \"groupId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteVideoFromOnDemandPage",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoFromOnDemandPage",
            "description": "Delete a video from an On Demand page",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoFromOnDemandPage\"\nquerystring = {\"ondemandId\": \"\", \"videoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoFromOnDemandPage\"\nquerystring = {\"ondemandId\": \"\", \"videoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteVideoFromUserPortfolio",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoFromUserPortfolio",
            "description": "Delete a video from a users' portfolio",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "portfolioId",
                    "type": "STRING",
                    "description": "Id of the portfolio",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoFromUserPortfolio\"\nquerystring = {\"portfolioId\": \"\", \"accessToken\": \"\", \"videoId\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoFromUserPortfolio\"\nquerystring = {\"portfolioId\": \"\", \"accessToken\": \"\", \"videoId\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteVideoFromWatchHistory",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoFromWatchHistory",
            "description": "Delete a video from your watch history",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoFromWatchHistory\"\nquerystring = {\"accessToken\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoFromWatchHistory\"\nquerystring = {\"accessToken\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteVideoFromWatchLaterQueue",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoFromWatchLaterQueue",
            "description": "Delete a video from a users' Watch Later queue",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoFromWatchLaterQueue\"\nquerystring = {\"accessToken\": \"\", \"userId\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoFromWatchLaterQueue\"\nquerystring = {\"accessToken\": \"\", \"userId\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteVideoTextTrack",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoTextTrack",
            "description": "Delete a text track from a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "texttrackId",
                    "type": "STRING",
                    "description": "Id of the text track",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoTextTrack\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\", \"texttrackId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoTextTrack\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\", \"texttrackId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteVideoThumbnail",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoThumbnail",
            "description": "Delete a thumbnail for video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "pictureId",
                    "type": "STRING",
                    "description": "Id of the thumbnail",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoThumbnail\"\nquerystring = {\"videoId\": \"\", \"pictureId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/deleteVideoThumbnail\"\nquerystring = {\"videoId\": \"\", \"pictureId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "disallowUserFromViewingPrivateVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/disallowUserFromViewingPrivateVideo",
            "description": "Disallow a single user to view a private video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/disallowUserFromViewingPrivateVideo\"\nquerystring = {\"userId\": \"\", \"videoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/disallowUserFromViewingPrivateVideo\"\nquerystring = {\"userId\": \"\", \"videoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "disallowVideoEmbedding",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/disallowVideoEmbedding",
            "description": "Disallow embedding of a video on a domain",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "Domain to disallow embedding",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/disallowVideoEmbedding\"\nquerystring = {\"domain\": \"\", \"videoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/disallowVideoEmbedding\"\nquerystring = {\"domain\": \"\", \"videoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "editCommentOnVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/editCommentOnVideo",
            "description": "Edit a comment on a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "commentId",
                    "type": "STRING",
                    "description": "Id of the comment",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text of the comment",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/editCommentOnVideo\"\nquerystring = {\"text\": \"\", \"commentId\": \"\", \"accessToken\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/editCommentOnVideo\"\nquerystring = {\"text\": \"\", \"commentId\": \"\", \"accessToken\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "editCreditOnVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/editCreditOnVideo",
            "description": "Edit a credit on a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "creditId",
                    "type": "STRING",
                    "description": "Id of the credit",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "The email address of the person being credited.",
                    "default": ""
                },
                {
                    "name": "role",
                    "type": "STRING",
                    "description": "The role address of the person being credited.",
                    "default": ""
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text of the comment",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "The name address of the person being credited.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/editCreditOnVideo\"\nquerystring = {\"accessToken\": \"\", \"email\": \"\", \"videoId\": \"\", \"role\": \"\", \"text\": \"\", \"name\": \"\", \"creditId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/editCreditOnVideo\"\nquerystring = {\"accessToken\": \"\", \"email\": \"\", \"videoId\": \"\", \"role\": \"\", \"text\": \"\", \"name\": \"\", \"creditId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "editVideoTextTrack",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/editVideoTextTrack",
            "description": "Edit a video text track",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "texttrackId",
                    "type": "STRING",
                    "description": "Id of the text track",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "active",
                    "type": "BOOLEAN",
                    "description": "Text tracks marked active will be visible to other users, and will show up in the player. Only one text track per language can be active.",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Text track name",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "Text track language",
                    "default": ""
                },
                {
                    "name": "type",
                    "type": "SELECT",
                    "description": "Text track type",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/editVideoTextTrack\"\nquerystring = {\"texttrackId\": \"\", \"accessToken\": \"\", \"active\": \"\", \"name\": \"\", \"language\": \"\", \"videoId\": \"\", \"type\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/editVideoTextTrack\"\nquerystring = {\"texttrackId\": \"\", \"accessToken\": \"\", \"active\": \"\", \"name\": \"\", \"language\": \"\", \"videoId\": \"\", \"type\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "editVideoThumbnail",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/editVideoThumbnail",
            "description": "Edit a thumbnail for video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "pictureId",
                    "type": "STRING",
                    "description": "Id of the thumbnail",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "active",
                    "type": "BOOLEAN",
                    "description": "Make this picture the default picture.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/editVideoThumbnail\"\nquerystring = {\"pictureId\": \"\", \"accessToken\": \"\", \"videoId\": \"\", \"active\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/editVideoThumbnail\"\nquerystring = {\"pictureId\": \"\", \"accessToken\": \"\", \"videoId\": \"\", \"active\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "followUser",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/followUser",
            "description": "Follow user",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "followUser",
                    "type": "STRING",
                    "description": "Id of the user to follow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/followUser\"\nquerystring = {\"followUser\": \"\", \"userId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/followUser\"\nquerystring = {\"followUser\": \"\", \"userId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "followUsers",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/followUsers",
            "description": "Follow a list of users",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "userUris",
                    "type": "JSON",
                    "description": "Ids of the users to follow",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/followUsers\"\nquerystring = {\"accessToken\": \"\", \"userId\": \"\", \"userUris\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/followUsers\"\nquerystring = {\"accessToken\": \"\", \"userId\": \"\", \"userUris\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAccessToken",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getAccessToken",
            "description": "Get access token",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientId",
                    "type": "CREDENTIALS",
                    "description": "Client Id received from Vimeo",
                    "default": ""
                },
                {
                    "name": "code",
                    "type": "STRING",
                    "description": "Code provided by client",
                    "default": ""
                },
                {
                    "name": "redirectUri",
                    "type": "STRING",
                    "description": "Redirect uri for your application",
                    "default": ""
                },
                {
                    "name": "clientSecret",
                    "type": "CREDENTIALS",
                    "description": "Client secret received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getAccessToken\"\nquerystring = {\"clientId\": \"\", \"code\": \"\", \"redirectUri\": \"\", \"clientSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getAccessToken\"\nquerystring = {\"clientId\": \"\", \"code\": \"\", \"redirectUri\": \"\", \"clientSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAlbumSingleVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getAlbumSingleVideo",
            "description": "Check if an album contains a video.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "albumId",
                    "type": "STRING",
                    "description": "Id of the album",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getAlbumSingleVideo\"\nquerystring = {\"accessToken\": \"\", \"videoId\": \"\", \"userId\": \"\", \"albumId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getAlbumSingleVideo\"\nquerystring = {\"accessToken\": \"\", \"videoId\": \"\", \"userId\": \"\", \"albumId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAlbumVideos",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getAlbumVideos",
            "description": "Get all videos in the album",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "albumId",
                    "type": "STRING",
                    "description": "Id of the album",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getAlbumVideos\"\nquerystring = {\"albumId\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getAlbumVideos\"\nquerystring = {\"albumId\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAllOnDemandGenres",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getAllOnDemandGenres",
            "description": "Get all On Demand genres",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getAllOnDemandGenres\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getAllOnDemandGenres\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAllOnDemandPagesWithinGenre",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getAllOnDemandPagesWithinGenre",
            "description": "Get all On Demand pages within a genre",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "genreId",
                    "type": "STRING",
                    "description": "Id of the genre",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "filter",
                    "type": "SELECT",
                    "description": "Filter to apply to the results.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getAllOnDemandPagesWithinGenre\"\nquerystring = {\"sort\": \"\", \"genreId\": \"\", \"filter\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getAllOnDemandPagesWithinGenre\"\nquerystring = {\"sort\": \"\", \"genreId\": \"\", \"filter\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAllOnDemandRegions",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getAllOnDemandRegions",
            "description": "Get all On Demand regions",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getAllOnDemandRegions\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getAllOnDemandRegions\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAllPostersForOnDemandPage",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getAllPostersForOnDemandPage",
            "description": "Get all posters for an On Demand page",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getAllPostersForOnDemandPage\"\nquerystring = {\"ondemandId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getAllPostersForOnDemandPage\"\nquerystring = {\"ondemandId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAllVideosInOnDemandPage",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getAllVideosInOnDemandPage",
            "description": "Get all videos in an On Demand page",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "filter",
                    "type": "SELECT",
                    "description": "Filter to apply to the results.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getAllVideosInOnDemandPage\"\nquerystring = {\"filter\": \"\", \"accessToken\": \"\", \"sort\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getAllVideosInOnDemandPage\"\nquerystring = {\"filter\": \"\", \"accessToken\": \"\", \"sort\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCategories",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getCategories",
            "description": "Get all categories",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getCategories\"\nquerystring = {\"perPage\": \"\", \"sort\": \"\", \"accessToken\": \"\", \"direction\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getCategories\"\nquerystring = {\"perPage\": \"\", \"sort\": \"\", \"accessToken\": \"\", \"direction\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCategoriesUserFollows",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getCategoriesUserFollows",
            "description": "Get all categories a user follows",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getCategoriesUserFollows\"\nquerystring = {\"page\": \"\", \"userId\": \"\", \"direction\": \"\", \"accessToken\": \"\", \"sort\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getCategoriesUserFollows\"\nquerystring = {\"page\": \"\", \"userId\": \"\", \"direction\": \"\", \"accessToken\": \"\", \"sort\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCategoriesVideoIsIn",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getCategoriesVideoIsIn",
            "description": "Get all categories a video is in",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getCategoriesVideoIsIn\"\nquerystring = {\"accessToken\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getCategoriesVideoIsIn\"\nquerystring = {\"accessToken\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getChannelFollowers",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getChannelFollowers",
            "description": "Get all followers of a channel",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "channelId",
                    "type": "STRING",
                    "description": "Id of the channel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                },
                {
                    "name": "filter",
                    "type": "SELECT",
                    "description": "Filter to apply to the results.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getChannelFollowers\"\nquerystring = {\"sort\": \"\", \"perPage\": \"\", \"query\": \"\", \"accessToken\": \"\", \"page\": \"\", \"direction\": \"\", \"channelId\": \"\", \"filter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getChannelFollowers\"\nquerystring = {\"sort\": \"\", \"perPage\": \"\", \"query\": \"\", \"accessToken\": \"\", \"page\": \"\", \"direction\": \"\", \"channelId\": \"\", \"filter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getChannels",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getChannels",
            "description": "Get all channels",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "filter",
                    "type": "SELECT",
                    "description": "Filter to apply to the results.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getChannels\"\nquerystring = {\"perPage\": \"\", \"accessToken\": \"\", \"direction\": \"\", \"page\": \"\", \"query\": \"\", \"sort\": \"\", \"filter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getChannels\"\nquerystring = {\"perPage\": \"\", \"accessToken\": \"\", \"direction\": \"\", \"page\": \"\", \"query\": \"\", \"sort\": \"\", \"filter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getChannelsForCategory",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getChannelsForCategory",
            "description": "Get all channels for a category",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "categoryName",
                    "type": "STRING",
                    "description": "Name of the category",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getChannelsForCategory\"\nquerystring = {\"perPage\": \"\", \"sort\": \"\", \"categoryName\": \"\", \"accessToken\": \"\", \"direction\": \"\", \"page\": \"\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getChannelsForCategory\"\nquerystring = {\"perPage\": \"\", \"sort\": \"\", \"categoryName\": \"\", \"accessToken\": \"\", \"direction\": \"\", \"page\": \"\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getChannelsUserSubscribed",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getChannelsUserSubscribed",
            "description": "Get all channels a user is subscribed to",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "filter",
                    "type": "SELECT",
                    "description": "Filter to apply to the results.",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getChannelsUserSubscribed\"\nquerystring = {\"direction\": \"\", \"page\": \"\", \"filter\": \"\", \"query\": \"\", \"userId\": \"\", \"accessToken\": \"\", \"perPage\": \"\", \"sort\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getChannelsUserSubscribed\"\nquerystring = {\"direction\": \"\", \"page\": \"\", \"filter\": \"\", \"query\": \"\", \"userId\": \"\", \"accessToken\": \"\", \"perPage\": \"\", \"sort\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCodesForOnDemandPagesPromotion",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getCodesForOnDemandPagesPromotion",
            "description": "Get all codes for an On Demand pages' promotion",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                },
                {
                    "name": "promotionId",
                    "type": "STRING",
                    "description": "Id of the promotion",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getCodesForOnDemandPagesPromotion\"\nquerystring = {\"page\": \"\", \"ondemandId\": \"\", \"promotionId\": \"\", \"accessToken\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getCodesForOnDemandPagesPromotion\"\nquerystring = {\"page\": \"\", \"ondemandId\": \"\", \"promotionId\": \"\", \"accessToken\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getDomainsVideoEmbeddedOn",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getDomainsVideoEmbeddedOn",
            "description": "Get all domains a video can be embedded on",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getDomainsVideoEmbeddedOn\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getDomainsVideoEmbeddedOn\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getEmbedPresetsForVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getEmbedPresetsForVideo",
            "description": "Check if a video has a specific embed preset.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "presetId",
                    "type": "STRING",
                    "description": "Id of the preset",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getEmbedPresetsForVideo\"\nquerystring = {\"accessToken\": \"\", \"presetId\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getEmbedPresetsForVideo\"\nquerystring = {\"accessToken\": \"\", \"presetId\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getGenresOfOnDemandPage",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getGenresOfOnDemandPage",
            "description": "Get genres of an On Demand page",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getGenresOfOnDemandPage\"\nquerystring = {\"ondemandId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getGenresOfOnDemandPage\"\nquerystring = {\"ondemandId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getGroupMembers",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getGroupMembers",
            "description": "Get all groups a user has joined",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "Id of the group",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "filter",
                    "type": "SELECT",
                    "description": "Filter to apply to the results.",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getGroupMembers\"\nquerystring = {\"direction\": \"\", \"perPage\": \"\", \"page\": \"\", \"filter\": \"\", \"groupId\": \"\", \"query\": \"\", \"accessToken\": \"\", \"sort\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getGroupMembers\"\nquerystring = {\"direction\": \"\", \"perPage\": \"\", \"page\": \"\", \"filter\": \"\", \"groupId\": \"\", \"query\": \"\", \"accessToken\": \"\", \"sort\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getGroups",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getGroups",
            "description": "Get all groups",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "filter",
                    "type": "SELECT",
                    "description": "Filter to apply to the results.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getGroups\"\nquerystring = {\"sort\": \"\", \"accessToken\": \"\", \"perPage\": \"\", \"filter\": \"\", \"page\": \"\", \"query\": \"\", \"direction\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getGroups\"\nquerystring = {\"sort\": \"\", \"accessToken\": \"\", \"perPage\": \"\", \"filter\": \"\", \"page\": \"\", \"query\": \"\", \"direction\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getGroupsForCategory",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getGroupsForCategory",
            "description": "Get all groups for a category",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "categoryName",
                    "type": "STRING",
                    "description": "Name of the category",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getGroupsForCategory\"\nquerystring = {\"page\": \"\", \"query\": \"\", \"sort\": \"\", \"categoryName\": \"\", \"perPage\": \"\", \"accessToken\": \"\", \"direction\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getGroupsForCategory\"\nquerystring = {\"page\": \"\", \"query\": \"\", \"sort\": \"\", \"categoryName\": \"\", \"perPage\": \"\", \"accessToken\": \"\", \"direction\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getGroupsUserJoined",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getGroupsUserJoined",
            "description": "Get all members for a group",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "filter",
                    "type": "SELECT",
                    "description": "Filter to apply to the results.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getGroupsUserJoined\"\nquerystring = {\"filter\": \"\", \"accessToken\": \"\", \"perPage\": \"\", \"direction\": \"\", \"sort\": \"\", \"query\": \"\", \"userId\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getGroupsUserJoined\"\nquerystring = {\"filter\": \"\", \"accessToken\": \"\", \"perPage\": \"\", \"direction\": \"\", \"sort\": \"\", \"query\": \"\", \"userId\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getOnDemandPageBackgrounds",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getOnDemandPageBackgrounds",
            "description": "Get an On Demand pages' backgrounds",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getOnDemandPageBackgrounds\"\nquerystring = {\"ondemandId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getOnDemandPageBackgrounds\"\nquerystring = {\"ondemandId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getOnDemandPageInGenre",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getOnDemandPageInGenre",
            "description": "Get an On Demand page in a genre",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "genreId",
                    "type": "STRING",
                    "description": "Id of the genre",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getOnDemandPageInGenre\"\nquerystring = {\"genreId\": \"\", \"accessToken\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getOnDemandPageInGenre\"\nquerystring = {\"genreId\": \"\", \"accessToken\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getOnDemandPageSingleBackground",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getOnDemandPageSingleBackground",
            "description": "Get an On Demand page background",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                },
                {
                    "name": "backgroundId",
                    "type": "STRING",
                    "description": "Id of the background",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getOnDemandPageSingleBackground\"\nquerystring = {\"ondemandId\": \"\", \"backgroundId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getOnDemandPageSingleBackground\"\nquerystring = {\"ondemandId\": \"\", \"backgroundId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getOnDemandPagesPoster",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getOnDemandPagesPoster",
            "description": "Get an On Demand pages' poster",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "posterId",
                    "type": "STRING",
                    "description": "Id of the poster",
                    "default": ""
                },
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getOnDemandPagesPoster\"\nquerystring = {\"accessToken\": \"\", \"posterId\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getOnDemandPagesPoster\"\nquerystring = {\"accessToken\": \"\", \"posterId\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getOnDemandPagesPromotion",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getOnDemandPagesPromotion",
            "description": "Get an On Demand pages' promotion",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "promotionId",
                    "type": "STRING",
                    "description": "Id of the promotion",
                    "default": ""
                },
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getOnDemandPagesPromotion\"\nquerystring = {\"accessToken\": \"\", \"promotionId\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getOnDemandPagesPromotion\"\nquerystring = {\"accessToken\": \"\", \"promotionId\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getOnDemandSingleGenre",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getOnDemandSingleGenre",
            "description": "Get an On Demand genre",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "genreId",
                    "type": "STRING",
                    "description": "Id of the genre",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getOnDemandSingleGenre\"\nquerystring = {\"genreId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getOnDemandSingleGenre\"\nquerystring = {\"genreId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getOnDemandSingleRegion",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getOnDemandSingleRegion",
            "description": "Get an On Demand region",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Region to add",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getOnDemandSingleRegion\"\nquerystring = {\"accessToken\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getOnDemandSingleRegion\"\nquerystring = {\"accessToken\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getRegionsForOnDemandPage",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getRegionsForOnDemandPage",
            "description": "Get regions of an On Demand page",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getRegionsForOnDemandPage\"\nquerystring = {\"accessToken\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getRegionsForOnDemandPage\"\nquerystring = {\"accessToken\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getRelatedVideosToSingleVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getRelatedVideosToSingleVideo",
            "description": "View related videos to a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getRelatedVideosToSingleVideo\"\nquerystring = {\"accessToken\": \"\", \"page\": \"\", \"perPage\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getRelatedVideosToSingleVideo\"\nquerystring = {\"accessToken\": \"\", \"page\": \"\", \"perPage\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getRepliesToCommentOnVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getRepliesToCommentOnVideo",
            "description": "Get all replies to a comment on a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "commentId",
                    "type": "STRING",
                    "description": "Id of the comment",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getRepliesToCommentOnVideo\"\nquerystring = {\"commentId\": \"\", \"perPage\": \"\", \"accessToken\": \"\", \"videoId\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getRepliesToCommentOnVideo\"\nquerystring = {\"commentId\": \"\", \"perPage\": \"\", \"accessToken\": \"\", \"videoId\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSeasonOfOnDemandPage",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getSeasonOfOnDemandPage",
            "description": "Get a season of an On Demand page",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                },
                {
                    "name": "seasonId",
                    "type": "STRING",
                    "description": "Id of the season",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getSeasonOfOnDemandPage\"\nquerystring = {\"ondemandId\": \"\", \"seasonId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getSeasonOfOnDemandPage\"\nquerystring = {\"ondemandId\": \"\", \"seasonId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSeasonsInOnDemandPage",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getSeasonsInOnDemandPage",
            "description": "Get seasons in an On Demand page",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                },
                {
                    "name": "filter",
                    "type": "SELECT",
                    "description": "Filter to apply to the results.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getSeasonsInOnDemandPage\"\nquerystring = {\"ondemandId\": \"\", \"query\": \"\", \"filter\": \"\", \"page\": \"\", \"sort\": \"\", \"direction\": \"\", \"perPage\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getSeasonsInOnDemandPage\"\nquerystring = {\"ondemandId\": \"\", \"query\": \"\", \"filter\": \"\", \"page\": \"\", \"sort\": \"\", \"direction\": \"\", \"perPage\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleAlbum",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getSingleAlbum",
            "description": "Get single users' album",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "albumId",
                    "type": "STRING",
                    "description": "Id of the album",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getSingleAlbum\"\nquerystring = {\"albumId\": \"\", \"userId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getSingleAlbum\"\nquerystring = {\"albumId\": \"\", \"userId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleCategory",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getSingleCategory",
            "description": "Get a category",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "categoryName",
                    "type": "STRING",
                    "description": "Name of the category",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getSingleCategory\"\nquerystring = {\"accessToken\": \"\", \"categoryName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getSingleCategory\"\nquerystring = {\"accessToken\": \"\", \"categoryName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleChannel",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getSingleChannel",
            "description": "Get a channel",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "channelId",
                    "type": "STRING",
                    "description": "Id of the channel",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getSingleChannel\"\nquerystring = {\"accessToken\": \"\", \"channelId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getSingleChannel\"\nquerystring = {\"accessToken\": \"\", \"channelId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleGroup",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getSingleGroup",
            "description": "Get a group",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "If og the group",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getSingleGroup\"\nquerystring = {\"accessToken\": \"\", \"groupId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getSingleGroup\"\nquerystring = {\"accessToken\": \"\", \"groupId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleOnDemandPage",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getSingleOnDemandPage",
            "description": "Get an On Demand single page",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getSingleOnDemandPage\"\nquerystring = {\"accessToken\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getSingleOnDemandPage\"\nquerystring = {\"accessToken\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleTag",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getSingleTag",
            "description": "Get a tag",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "tag",
                    "type": "STRING",
                    "description": "Tag to get",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getSingleTag\"\nquerystring = {\"accessToken\": \"\", \"tag\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getSingleTag\"\nquerystring = {\"accessToken\": \"\", \"tag\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getSingleVideo",
            "description": "Get a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getSingleVideo\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getSingleVideo\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getTextTracksForVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getTextTracksForVideo",
            "description": "Get all the text tracks for a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getTextTracksForVideo\"\nquerystring = {\"accessToken\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getTextTracksForVideo\"\nquerystring = {\"accessToken\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getThumbnailsOnVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getThumbnailsOnVideo",
            "description": "Get all the thumbnails for a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getThumbnailsOnVideo\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getThumbnailsOnVideo\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUser",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getUser",
            "description": "Get a user",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUser\"\nquerystring = {\"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUser\"\nquerystring = {\"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserAlbums",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserAlbums",
            "description": "Get all users' albums",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserAlbums\"\nquerystring = {\"page\": \"\", \"query\": \"\", \"direction\": \"\", \"perPage\": \"\", \"accessToken\": \"\", \"sort\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserAlbums\"\nquerystring = {\"page\": \"\", \"query\": \"\", \"direction\": \"\", \"perPage\": \"\", \"accessToken\": \"\", \"sort\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserAllPortfolios",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserAllPortfolios",
            "description": "Get all users' portfolios",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserAllPortfolios\"\nquerystring = {\"page\": \"\", \"direction\": \"\", \"query\": \"\", \"userId\": \"\", \"accessToken\": \"\", \"sort\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserAllPortfolios\"\nquerystring = {\"page\": \"\", \"direction\": \"\", \"query\": \"\", \"userId\": \"\", \"accessToken\": \"\", \"sort\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserEmbedPreset",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserEmbedPreset",
            "description": "Get single embed preset",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "presetId",
                    "type": "STRING",
                    "description": "Id of the preset",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserEmbedPreset\"\nquerystring = {\"userId\": \"\", \"accessToken\": \"\", \"presetId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserEmbedPreset\"\nquerystring = {\"userId\": \"\", \"accessToken\": \"\", \"presetId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserEmbedPresets",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserEmbedPresets",
            "description": "Get all embed presets a user has created",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserEmbedPresets\"\nquerystring = {\"query\": \"\", \"perPage\": \"\", \"accessToken\": \"\", \"page\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserEmbedPresets\"\nquerystring = {\"query\": \"\", \"perPage\": \"\", \"accessToken\": \"\", \"page\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserFollowers",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserFollowers",
            "description": "Get all users that follow a user",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserFollowers\"\nquerystring = {\"accessToken\": \"\", \"direction\": \"\", \"userId\": \"\", \"perPage\": \"\", \"sort\": \"\", \"page\": \"\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserFollowers\"\nquerystring = {\"accessToken\": \"\", \"direction\": \"\", \"userId\": \"\", \"perPage\": \"\", \"sort\": \"\", \"page\": \"\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserFollowings",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserFollowings",
            "description": "Get all users that a user is following",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "filter",
                    "type": "SELECT",
                    "description": "Filter to apply to the results.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserFollowings\"\nquerystring = {\"filter\": \"\", \"userId\": \"\", \"sort\": \"\", \"perPage\": \"\", \"page\": \"\", \"direction\": \"\", \"accessToken\": \"\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserFollowings\"\nquerystring = {\"filter\": \"\", \"userId\": \"\", \"sort\": \"\", \"perPage\": \"\", \"page\": \"\", \"direction\": \"\", \"accessToken\": \"\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserOnDemandPages",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserOnDemandPages",
            "description": "Get a users' On Demand pages",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "The default sort order of an album's videos.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "filter",
                    "type": "SELECT",
                    "description": "Filter to apply to the results.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserOnDemandPages\"\nquerystring = {\"sort\": \"\", \"userId\": \"\", \"page\": \"\", \"perPage\": \"\", \"accessToken\": \"\", \"filter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserOnDemandPages\"\nquerystring = {\"sort\": \"\", \"userId\": \"\", \"page\": \"\", \"perPage\": \"\", \"accessToken\": \"\", \"filter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserSinglePortfolio",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserSinglePortfolio",
            "description": "Get a users' portfolio",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "portfolioId",
                    "type": "STRING",
                    "description": "Id of the portfolio",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserSinglePortfolio\"\nquerystring = {\"portfolioId\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserSinglePortfolio\"\nquerystring = {\"portfolioId\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserUploadTicket",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserUploadTicket",
            "description": "Get a users' upload ticket",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticketId",
                    "type": "STRING",
                    "description": "Id of the ticket",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserUploadTicket\"\nquerystring = {\"ticketId\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUserUploadTicket\"\nquerystring = {\"ticketId\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUsersCanViewPrivateVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getUsersCanViewPrivateVideo",
            "description": "Get all users that can view a private video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUsersCanViewPrivateVideo\"\nquerystring = {\"accessToken\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUsersCanViewPrivateVideo\"\nquerystring = {\"accessToken\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUsersCreditedInVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getUsersCreditedInVideo",
            "description": "Get all users credited in a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUsersCreditedInVideo\"\nquerystring = {\"sort\": \"\", \"accessToken\": \"\", \"direction\": \"\", \"perPage\": \"\", \"videoId\": \"\", \"query\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUsersCreditedInVideo\"\nquerystring = {\"sort\": \"\", \"accessToken\": \"\", \"direction\": \"\", \"perPage\": \"\", \"videoId\": \"\", \"query\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUsersLikedVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getUsersLikedVideo",
            "description": "Get all users who have liked this video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUsersLikedVideo\"\nquerystring = {\"query\": \"\", \"direction\": \"\", \"accessToken\": \"\", \"page\": \"\", \"videoId\": \"\", \"sort\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUsersLikedVideo\"\nquerystring = {\"query\": \"\", \"direction\": \"\", \"accessToken\": \"\", \"page\": \"\", \"videoId\": \"\", \"sort\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUsersLikedVideosOnDemandPage",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getUsersLikedVideosOnDemandPage",
            "description": "Get all users who liked videos in an On Demand page",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the video ondemand",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "filter",
                    "type": "SELECT",
                    "description": "Filter to apply to the results.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUsersLikedVideosOnDemandPage\"\nquerystring = {\"filter\": \"\", \"perPage\": \"\", \"accessToken\": \"\", \"ondemandId\": \"\", \"direction\": \"\", \"page\": \"\", \"sort\": \"\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUsersLikedVideosOnDemandPage\"\nquerystring = {\"filter\": \"\", \"perPage\": \"\", \"accessToken\": \"\", \"ondemandId\": \"\", \"direction\": \"\", \"page\": \"\", \"sort\": \"\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUsersOnDemandPurchasesAndRentals",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getUsersOnDemandPurchasesAndRentals",
            "description": "Get users' On Demand purchases and rentals",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "filter",
                    "type": "SELECT",
                    "description": "Filter to apply to the results.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUsersOnDemandPurchasesAndRentals\"\nquerystring = {\"accessToken\": \"\", \"sort\": \"\", \"filter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getUsersOnDemandPurchasesAndRentals\"\nquerystring = {\"accessToken\": \"\", \"sort\": \"\", \"filter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVideoComment",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideoComment",
            "description": "Get a comment from a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "commentId",
                    "type": "STRING",
                    "description": "Id of the comment",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideoComment\"\nquerystring = {\"videoId\": \"\", \"commentId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideoComment\"\nquerystring = {\"videoId\": \"\", \"commentId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVideoComments",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideoComments",
            "description": "Get all comments on a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideoComments\"\nquerystring = {\"accessToken\": \"\", \"perPage\": \"\", \"direction\": \"\", \"page\": \"\", \"query\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideoComments\"\nquerystring = {\"accessToken\": \"\", \"perPage\": \"\", \"direction\": \"\", \"page\": \"\", \"query\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVideoCredit",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideoCredit",
            "description": "Get a credit from a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "creditId",
                    "type": "STRING",
                    "description": "Id of the credit",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideoCredit\"\nquerystring = {\"videoId\": \"\", \"creditId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideoCredit\"\nquerystring = {\"videoId\": \"\", \"creditId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVideoInChannel",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideoInChannel",
            "description": "Check if this channel contains a video.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "channelId",
                    "type": "STRING",
                    "description": "Id of the channel",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideoInChannel\"\nquerystring = {\"channelId\": \"\", \"accessToken\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideoInChannel\"\nquerystring = {\"channelId\": \"\", \"accessToken\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVideoInOnDemandPage",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideoInOnDemandPage",
            "description": "Check if an On Demand page contains a video.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideoInOnDemandPage\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideoInOnDemandPage\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVideoTags",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideoTags",
            "description": "List a videos' tags",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideoTags\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideoTags\"\nquerystring = {\"videoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVideoTextTrack",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideoTextTrack",
            "description": "Get a text track from a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "texttrackId",
                    "type": "STRING",
                    "description": "Id of the text track",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideoTextTrack\"\nquerystring = {\"accessToken\": \"\", \"texttrackId\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideoTextTrack\"\nquerystring = {\"accessToken\": \"\", \"texttrackId\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVideoThumbnail",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideoThumbnail",
            "description": "Get a thumbnail for video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "pictureId",
                    "type": "STRING",
                    "description": "Id of the thumbnail",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideoThumbnail\"\nquerystring = {\"pictureId\": \"\", \"accessToken\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideoThumbnail\"\nquerystring = {\"pictureId\": \"\", \"accessToken\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVideosFromUserFeed",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosFromUserFeed",
            "description": "Get all videos in a users' feed",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "STRING",
                    "description": "This is necessary for proper pagination. Do not provide this value yourself, just use the pagination links provided in the feed response.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosFromUserFeed\"\nquerystring = {\"page\": \"\", \"offset\": \"\", \"accessToken\": \"\", \"userId\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosFromUserFeed\"\nquerystring = {\"page\": \"\", \"offset\": \"\", \"accessToken\": \"\", \"userId\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVideosFromUserPortfolio",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosFromUserPortfolio",
            "description": "Get all videos within a users' portfolio",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "portfolioId",
                    "type": "STRING",
                    "description": "Id of the portfolio",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "filter",
                    "type": "SELECT",
                    "description": "Filter to apply to the results.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "filterEmbeddable",
                    "type": "BOOLEAN",
                    "description": "Choose between only videos that are embeddable, and only videos that are not embeddable.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosFromUserPortfolio\"\nquerystring = {\"accessToken\": \"\", \"filter\": \"\", \"perPage\": \"\", \"userId\": \"\", \"sort\": \"\", \"direction\": \"\", \"page\": \"\", \"filterEmbeddable\": \"\", \"portfolioId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosFromUserPortfolio\"\nquerystring = {\"accessToken\": \"\", \"filter\": \"\", \"perPage\": \"\", \"userId\": \"\", \"sort\": \"\", \"direction\": \"\", \"page\": \"\", \"filterEmbeddable\": \"\", \"portfolioId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVideosFromWatchLaterQueue",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosFromWatchLaterQueue",
            "description": "Get all videos in a users' Watch Later queue",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "filterEmbeddable",
                    "type": "BOOLEAN",
                    "description": "Choose between only videos that are embeddable, and only videos that are not embeddable.",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "filter",
                    "type": "SELECT",
                    "description": "Filter to apply to the results.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosFromWatchLaterQueue\"\nquerystring = {\"accessToken\": \"\", \"filterEmbeddable\": \"\", \"query\": \"\", \"direction\": \"\", \"page\": \"\", \"perPage\": \"\", \"sort\": \"\", \"filter\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosFromWatchLaterQueue\"\nquerystring = {\"accessToken\": \"\", \"filterEmbeddable\": \"\", \"query\": \"\", \"direction\": \"\", \"page\": \"\", \"perPage\": \"\", \"sort\": \"\", \"filter\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVideosInCategory",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosInCategory",
            "description": "Get all videos for a category",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "categoryName",
                    "type": "STRING",
                    "description": "Name of the category",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "filter",
                    "type": "SELECT",
                    "description": "Filter to apply to the results.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                },
                {
                    "name": "filterEmbeddable",
                    "type": "BOOLEAN",
                    "description": "Choose between only videos that are embeddable, and only videos that are not embeddable.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosInCategory\"\nquerystring = {\"perPage\": \"\", \"filter\": \"\", \"categoryName\": \"\", \"sort\": \"\", \"direction\": \"\", \"page\": \"\", \"query\": \"\", \"accessToken\": \"\", \"filterEmbeddable\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosInCategory\"\nquerystring = {\"perPage\": \"\", \"filter\": \"\", \"categoryName\": \"\", \"sort\": \"\", \"direction\": \"\", \"page\": \"\", \"query\": \"\", \"accessToken\": \"\", \"filterEmbeddable\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVideosInChannel",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosInChannel",
            "description": "Get all videos for a channel",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "channelId",
                    "type": "STRING",
                    "description": "Id of the channel",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "filter",
                    "type": "SELECT",
                    "description": "Filter to apply to the results.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "filterEmbeddable",
                    "type": "BOOLEAN",
                    "description": "Choose between only videos that are embeddable, and only videos that are not embeddable.",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosInChannel\"\nquerystring = {\"channelId\": \"\", \"perPage\": \"\", \"filter\": \"\", \"sort\": \"\", \"filterEmbeddable\": \"\", \"query\": \"\", \"page\": \"\", \"accessToken\": \"\", \"direction\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosInChannel\"\nquerystring = {\"channelId\": \"\", \"perPage\": \"\", \"filter\": \"\", \"sort\": \"\", \"filterEmbeddable\": \"\", \"query\": \"\", \"page\": \"\", \"accessToken\": \"\", \"direction\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVideosInGroup",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosInGroup",
            "description": "Get all videos for a group",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "Id of the group",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                },
                {
                    "name": "filterEmbeddable",
                    "type": "BOOLEAN",
                    "description": "Choose between only videos that are embeddable, and only videos that are not embeddable.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "filter",
                    "type": "SELECT",
                    "description": "Filter to apply to the results.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosInGroup\"\nquerystring = {\"perPage\": \"\", \"accessToken\": \"\", \"query\": \"\", \"direction\": \"\", \"filterEmbeddable\": \"\", \"groupId\": \"\", \"sort\": \"\", \"filter\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosInGroup\"\nquerystring = {\"perPage\": \"\", \"accessToken\": \"\", \"query\": \"\", \"direction\": \"\", \"filterEmbeddable\": \"\", \"groupId\": \"\", \"sort\": \"\", \"filter\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVideosInSeasonOfOnDemandPage",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosInSeasonOfOnDemandPage",
            "description": "Get all videos in a season of an On Demand page",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "seasonId",
                    "type": "STRING",
                    "description": "Id of the season",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "filter",
                    "type": "SELECT",
                    "description": "Filter to apply to the results.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosInSeasonOfOnDemandPage\"\nquerystring = {\"seasonId\": \"\", \"sort\": \"\", \"accessToken\": \"\", \"filter\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosInSeasonOfOnDemandPage\"\nquerystring = {\"seasonId\": \"\", \"sort\": \"\", \"accessToken\": \"\", \"filter\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVideosTaggedWithWord",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosTaggedWithWord",
            "description": "Get all videos tagged with a specific word",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tag",
                    "type": "STRING",
                    "description": "Tag to get",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosTaggedWithWord\"\nquerystring = {\"sort\": \"\", \"tag\": \"\", \"perPage\": \"\", \"accessToken\": \"\", \"page\": \"\", \"direction\": \"\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosTaggedWithWord\"\nquerystring = {\"sort\": \"\", \"tag\": \"\", \"perPage\": \"\", \"accessToken\": \"\", \"page\": \"\", \"direction\": \"\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVideosUploadedByUser",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosUploadedByUser",
            "description": "Get all videos uploaded by a user",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "weakSearch",
                    "type": "BOOLEAN",
                    "description": "This forces the query parameter to use a separate search service that includes private videos. It will only perform a partial text search on the video's name. In the future the standard search will include private videos, and this parameter won't be necessary.",
                    "default": ""
                },
                {
                    "name": "filterEmbeddable",
                    "type": "BOOLEAN",
                    "description": "Choose between only videos that are embeddable, and only videos that are not embeddable.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                },
                {
                    "name": "filter",
                    "type": "SELECT",
                    "description": "Filter to apply to the results.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                },
                {
                    "name": "filterPlayable",
                    "type": "BOOLEAN",
                    "description": "Default true. Choose between only videos that are playable, and only videos that are not playable.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosUploadedByUser\"\nquerystring = {\"accessToken\": \"\", \"sort\": \"\", \"weakSearch\": \"\", \"filterEmbeddable\": \"\", \"perPage\": \"\", \"direction\": \"\", \"filter\": \"\", \"page\": \"\", \"query\": \"\", \"userId\": \"\", \"filterPlayable\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosUploadedByUser\"\nquerystring = {\"accessToken\": \"\", \"sort\": \"\", \"weakSearch\": \"\", \"filterEmbeddable\": \"\", \"perPage\": \"\", \"direction\": \"\", \"filter\": \"\", \"page\": \"\", \"query\": \"\", \"userId\": \"\", \"filterPlayable\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVideosUserAppearsIn",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosUserAppearsIn",
            "description": "Get all videos a user appears in",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "filterEmbeddable",
                    "type": "BOOLEAN",
                    "description": "Choose between only videos that are embeddable, and only videos that are not embeddable.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "filter",
                    "type": "SELECT",
                    "description": "Filter to apply to the results.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosUserAppearsIn\"\nquerystring = {\"filterEmbeddable\": \"\", \"page\": \"\", \"query\": \"\", \"accessToken\": \"\", \"direction\": \"\", \"sort\": \"\", \"filter\": \"\", \"userId\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosUserAppearsIn\"\nquerystring = {\"filterEmbeddable\": \"\", \"page\": \"\", \"query\": \"\", \"accessToken\": \"\", \"direction\": \"\", \"sort\": \"\", \"filter\": \"\", \"userId\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVideosUserHasLiked",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosUserHasLiked",
            "description": "Get all videos a user has liked",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "filterEmbeddable",
                    "type": "BOOLEAN",
                    "description": "Choose between only videos that are embeddable, and only videos that are not embeddable.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "filter",
                    "type": "SELECT",
                    "description": "Filter to apply to the results.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosUserHasLiked\"\nquerystring = {\"direction\": \"\", \"query\": \"\", \"page\": \"\", \"accessToken\": \"\", \"filterEmbeddable\": \"\", \"sort\": \"\", \"filter\": \"\", \"userId\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosUserHasLiked\"\nquerystring = {\"direction\": \"\", \"query\": \"\", \"page\": \"\", \"accessToken\": \"\", \"filterEmbeddable\": \"\", \"sort\": \"\", \"filter\": \"\", \"userId\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVideosUserHasWatched",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosUserHasWatched",
            "description": "Get all videos a user has watched",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosUserHasWatched\"\nquerystring = {\"userId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosUserHasWatched\"\nquerystring = {\"userId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVideosWithUserEmbedPreset",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosWithUserEmbedPreset",
            "description": "Get all videos with a users' embed preset",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "presetId",
                    "type": "STRING",
                    "description": "Id of the preset",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosWithUserEmbedPreset\"\nquerystring = {\"userId\": \"\", \"accessToken\": \"\", \"presetId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/getVideosWithUserEmbedPreset\"\nquerystring = {\"userId\": \"\", \"accessToken\": \"\", \"presetId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "joinGroup",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/joinGroup",
            "description": "Join a group",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "Id of the group",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/joinGroup\"\nquerystring = {\"groupId\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/joinGroup\"\nquerystring = {\"groupId\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "leaveGroup",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/leaveGroup",
            "description": "Leave a group",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "Id of the group",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/leaveGroup\"\nquerystring = {\"groupId\": \"\", \"userId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/leaveGroup\"\nquerystring = {\"groupId\": \"\", \"userId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "likeVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/likeVideo",
            "description": "Like a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/likeVideo\"\nquerystring = {\"userId\": \"\", \"accessToken\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/likeVideo\"\nquerystring = {\"userId\": \"\", \"accessToken\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "replaceVideoSourceFile",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/replaceVideoSourceFile",
            "description": "Get an upload ticket to replace this video file.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "link",
                    "type": "STRING",
                    "description": "If your upload type is pull, Vimeo will download the video hosted at this public URL. This URL must be valid for at least 24 hours.",
                    "default": ""
                },
                {
                    "name": "type",
                    "type": "SELECT",
                    "description": "Filter to apply to the results.",
                    "default": ""
                },
                {
                    "name": "redirectUri",
                    "type": "STRING",
                    "description": "The app redirect URL. Required for POST upload types.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/replaceVideoSourceFile\"\nquerystring = {\"link\": \"\", \"accessToken\": \"\", \"type\": \"\", \"redirectUri\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/replaceVideoSourceFile\"\nquerystring = {\"link\": \"\", \"accessToken\": \"\", \"type\": \"\", \"redirectUri\": \"\", \"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "revokeAccessToken",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/revokeAccessToken",
            "description": "Revoke user access token",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/revokeAccessToken\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/revokeAccessToken\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchUsers",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/searchUsers",
            "description": "Search for users",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/searchUsers\"\nquerystring = {\"query\": \"\", \"perPage\": \"\", \"accessToken\": \"\", \"sort\": \"\", \"page\": \"\", \"direction\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/searchUsers\"\nquerystring = {\"query\": \"\", \"perPage\": \"\", \"accessToken\": \"\", \"sort\": \"\", \"page\": \"\", \"direction\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchVideos",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/searchVideos",
            "description": "Search for videos",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "filterPlayable",
                    "type": "BOOLEAN",
                    "description": "Default true. Choose between only videos that are playable, and only videos that are not playable.",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.",
                    "default": ""
                },
                {
                    "name": "filter",
                    "type": "SELECT",
                    "description": "Filter to apply to the results.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page number to show.",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "SELECT",
                    "description": "The direction that the results are sorted.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to show on each page. Max 100.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Technique used to sort the results.",
                    "default": ""
                },
                {
                    "name": "filterEmbeddable",
                    "type": "BOOLEAN",
                    "description": "Choose between only videos that are embeddable, and only videos that are not embeddable.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/searchVideos\"\nquerystring = {\"accessToken\": \"\", \"filterPlayable\": \"\", \"query\": \"\", \"filter\": \"\", \"page\": \"\", \"direction\": \"\", \"perPage\": \"\", \"sort\": \"\", \"filterEmbeddable\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/searchVideos\"\nquerystring = {\"accessToken\": \"\", \"filterPlayable\": \"\", \"query\": \"\", \"filter\": \"\", \"page\": \"\", \"direction\": \"\", \"perPage\": \"\", \"sort\": \"\", \"filterEmbeddable\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "subscribeUserToCategory",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/subscribeUserToCategory",
            "description": "Subscribe a user to a category",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "categoryName",
                    "type": "STRING",
                    "description": "Name of the category",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/subscribeUserToCategory\"\nquerystring = {\"categoryName\": \"\", \"userId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/subscribeUserToCategory\"\nquerystring = {\"categoryName\": \"\", \"userId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "subscribeUserToChannel",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/subscribeUserToChannel",
            "description": "Subscribe a user to a channel",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "channelId",
                    "type": "STRING",
                    "description": "Id of the channel",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/subscribeUserToChannel\"\nquerystring = {\"channelId\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/subscribeUserToChannel\"\nquerystring = {\"channelId\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "unfollowUser",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/unfollowUser",
            "description": "Unfollow user",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "followUser",
                    "type": "STRING",
                    "description": "Id of the user to unfollow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/unfollowUser\"\nquerystring = {\"followUser\": \"\", \"userId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/unfollowUser\"\nquerystring = {\"followUser\": \"\", \"userId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "unlikeVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/unlikeVideo",
            "description": "Unlike a video",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "Id of the video",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/unlikeVideo\"\nquerystring = {\"videoId\": \"\", \"userId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/unlikeVideo\"\nquerystring = {\"videoId\": \"\", \"userId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "unsubscribeUserFromCategory",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/unsubscribeUserFromCategory",
            "description": "Unsubscribe a user from a category",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "categoryName",
                    "type": "STRING",
                    "description": "Name of the category",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/unsubscribeUserFromCategory\"\nquerystring = {\"categoryName\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/unsubscribeUserFromCategory\"\nquerystring = {\"categoryName\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "unsubscribeUserFromChannel",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/unsubscribeUserFromChannel",
            "description": "Unsubscribe a user to a channel",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "channelId",
                    "type": "STRING",
                    "description": "Id of the channel",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/unsubscribeUserFromChannel\"\nquerystring = {\"channelId\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/unsubscribeUserFromChannel\"\nquerystring = {\"channelId\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateAlbum",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/updateAlbum",
            "description": "Update existing users' album",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "albumId",
                    "type": "STRING",
                    "description": "Id of the album",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Album new name",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                },
                {
                    "name": "privacy",
                    "type": "SELECT",
                    "description": "The album's privacy level.",
                    "default": ""
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "Album new description",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "The default sort order of an album's videos.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/updateAlbum\"\nquerystring = {\"name\": \"\", \"userId\": \"\", \"privacy\": \"\", \"accessToken\": \"\", \"albumId\": \"\", \"description\": \"\", \"sort\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/updateAlbum\"\nquerystring = {\"name\": \"\", \"userId\": \"\", \"privacy\": \"\", \"accessToken\": \"\", \"albumId\": \"\", \"description\": \"\", \"sort\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateChannel",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/updateChannel",
            "description": "Check if a user follows a channel",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "channelId",
                    "type": "STRING",
                    "description": "Id of the channel",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "Description of the channel",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Name of the channel",
                    "default": ""
                },
                {
                    "name": "privacy",
                    "type": "SELECT",
                    "description": "The privacy level of the new channel",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/updateChannel\"\nquerystring = {\"channelId\": \"\", \"description\": \"\", \"name\": \"\", \"accessToken\": \"\", \"privacy\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/updateChannel\"\nquerystring = {\"channelId\": \"\", \"description\": \"\", \"name\": \"\", \"accessToken\": \"\", \"privacy\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateOnDemandPage",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/updateOnDemandPage",
            "description": "Edit an On Demand page",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "publishWhenReady",
                    "type": "BOOLEAN",
                    "description": "This On Demand page will be automatically published when all videos are finished transcoding.",
                    "default": ""
                },
                {
                    "name": "preorderPublishTime",
                    "type": "BOOLEAN",
                    "description": "Required if \"preorder.active\" is true. The time that the On Demand page will be published.",
                    "default": ""
                },
                {
                    "name": "link",
                    "type": "STRING",
                    "description": "The custom string to use in this On Demand page's Vimeo URL.",
                    "default": ""
                },
                {
                    "name": "preorderActive",
                    "type": "BOOLEAN",
                    "description": "If set to true, you will enable pre-orders on the On Demand page.",
                    "default": ""
                },
                {
                    "name": "publishActive",
                    "type": "BOOLEAN",
                    "description": "If set to true, you will publish the On Demand page.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/updateOnDemandPage\"\nquerystring = {\"accessToken\": \"\", \"publishWhenReady\": \"\", \"preorderPublishTime\": \"\", \"link\": \"\", \"ondemandId\": \"\", \"preorderActive\": \"\", \"publishActive\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/updateOnDemandPage\"\nquerystring = {\"accessToken\": \"\", \"publishWhenReady\": \"\", \"preorderPublishTime\": \"\", \"link\": \"\", \"ondemandId\": \"\", \"preorderActive\": \"\", \"publishActive\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateOnDemandPageBackground",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/updateOnDemandPageBackground",
            "description": "Edit an On Demand pages' background",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "backgroundId",
                    "type": "STRING",
                    "description": "Id of the background",
                    "default": ""
                },
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/updateOnDemandPageBackground\"\nquerystring = {\"accessToken\": \"\", \"backgroundId\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/updateOnDemandPageBackground\"\nquerystring = {\"accessToken\": \"\", \"backgroundId\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateOnDemandPagePoster",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/updateOnDemandPagePoster",
            "description": "Edit an On Demand pages' poster",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "posterId",
                    "type": "STRING",
                    "description": "Id of the poster",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                },
                {
                    "name": "ondemandId",
                    "type": "STRING",
                    "description": "Id of the ondemand page",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "active",
                    "type": "BOOLEAN",
                    "description": "Set this picture as the active picture.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/updateOnDemandPagePoster\"\nquerystring = {\"posterId\": \"\", \"accessToken\": \"\", \"active\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/updateOnDemandPagePoster\"\nquerystring = {\"posterId\": \"\", \"accessToken\": \"\", \"active\": \"\", \"ondemandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateUser",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/updateUser",
            "description": "Edit a user",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "bio",
                    "type": "STRING",
                    "description": "The user's bio",
                    "default": ""
                },
                {
                    "name": "videosPrivacyComments",
                    "type": "SELECT",
                    "description": "Sets the default comment setting for all future videos uploaded by this user. It specifies who can comment on the video.",
                    "default": ""
                },
                {
                    "name": "videosPrivacyEmbed",
                    "type": "SELECT",
                    "description": "Sets the default comment setting for all future videos uploaded by this user. It specifies who can comment on the video.",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "The user's name",
                    "default": ""
                },
                {
                    "name": "videosPrivacyView",
                    "type": "SELECT",
                    "description": "Sets the default comment setting for all future videos uploaded by this user. It specifies who can comment on the video.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                },
                {
                    "name": "videosPrivacyAdd",
                    "type": "BOOLEAN",
                    "description": "Sets the default add setting for all future videos uploaded by this user. If true, anyone can add the video to an album, channel, or group.",
                    "default": ""
                },
                {
                    "name": "location",
                    "type": "STRING",
                    "description": "The user's location",
                    "default": ""
                },
                {
                    "name": "videosPrivacyDownload",
                    "type": "BOOLEAN",
                    "description": "Sets the default download setting for all future videos uploaded by this user. If true, the video can be downloaded by any user",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/updateUser\"\nquerystring = {\"bio\": \"\", \"videosPrivacyComments\": \"\", \"videosPrivacyEmbed\": \"\", \"accessToken\": \"\", \"name\": \"\", \"videosPrivacyView\": \"\", \"userId\": \"\", \"videosPrivacyAdd\": \"\", \"location\": \"\", \"videosPrivacyDownload\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/updateUser\"\nquerystring = {\"bio\": \"\", \"videosPrivacyComments\": \"\", \"videosPrivacyEmbed\": \"\", \"accessToken\": \"\", \"name\": \"\", \"videosPrivacyView\": \"\", \"userId\": \"\", \"videosPrivacyAdd\": \"\", \"location\": \"\", \"videosPrivacyDownload\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateUserEmbedPreset",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/updateUserEmbedPreset",
            "description": "Edit a user",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "presetId",
                    "type": "STRING",
                    "description": "Id of the preset",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "outro",
                    "type": "SELECT",
                    "description": "Disable the outro. Currently we only support disabling outros, let us know if you need additional features!",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/updateUserEmbedPreset\"\nquerystring = {\"presetId\": \"\", \"outro\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/updateUserEmbedPreset\"\nquerystring = {\"presetId\": \"\", \"outro\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "uploadVideo",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/uploadVideo",
            "description": "Begin the video upload process.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "link",
                    "type": "STRING",
                    "description": "If your upload type is pull, Vimeo will download the video hosted at this public URL. This URL must be valid for at least 24 hours.",
                    "default": ""
                },
                {
                    "name": "type",
                    "type": "SELECT",
                    "description": "Filter to apply to the results.",
                    "default": ""
                },
                {
                    "name": "redirectUri",
                    "type": "STRING",
                    "description": "The app redirect URL. Required for POST upload types.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user to act on behalf of (default  = me)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/uploadVideo\"\nquerystring = {\"accessToken\": \"\", \"link\": \"\", \"type\": \"\", \"redirectUri\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/uploadVideo\"\nquerystring = {\"accessToken\": \"\", \"link\": \"\", \"type\": \"\", \"redirectUri\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "verifyAccessToken",
            "url": "https://Vimeostefan-skliarovV1.p.rapidapi.com/verifyAccessToken",
            "description": "Verify user access token",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token received from Vimeo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/verifyAccessToken\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Vimeostefan-skliarovV1.p.rapidapi.com/verifyAccessToken\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Vimeostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}