{
    "product_id": "647",
    "tool_description": "Getty Images is among the world\u2019s leading creators and distributors of award-winning still imagery, video, music and multimedia products.",
    "home_url": "https://rapidapi.com/raygorodskij/api/GettyImages/",
    "name": "GettyImages",
    "title": "GettyImages",
    "pricing": "FREE",
    "tool_name": "GettyImages",
    "score": {
        "avgServiceLevel": 0,
        "avgLatency": 127208,
        "avgSuccessRate": 0,
        "popularityScore": 4.5,
        "__typename": "Score"
    },
    "host": "GettyImagesraygorodskijV1.p.rapidapi.com",
    "api_list": [
        {
            "name": "GetPreviousPurchases",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/GetPreviousPurchases",
            "description": "This endpoint returns a list of all images purchased on gettyimages.com by the username used for authentication. Use of this endpoint requires configuration changes to your API key. Please contact developersupport@gettyimages.com to learn more.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Request results starting at a page number (default is 1, maximum is 50).",
                    "default": ""
                },
                {
                    "name": "dateFrom",
                    "type": "DATEPICKER",
                    "description": "If specified, retrieves previous purchases on or after this date.",
                    "default": ""
                },
                {
                    "name": "dateTo",
                    "type": "DATEPICKER",
                    "description": "If specified, retrieves previous purchases on or before this date.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Request number of images to return in each page.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/GetPreviousPurchases\"\nquerystring = {\"page\": \"\", \"apiKey\": \"\", \"dateFrom\": \"\", \"dateTo\": \"\", \"pageSize\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/GetPreviousPurchases\"\nquerystring = {\"page\": \"\", \"apiKey\": \"\", \"dateFrom\": \"\", \"dateTo\": \"\", \"pageSize\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addAssetToBoard",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/addAssetToBoard",
            "description": "Boards are where you collect, curate, collaborate on and manage photo and video assets in one place. More information on the Boards FAQ. Use this endpoint to add an asset to a board.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                },
                {
                    "name": "assetId",
                    "type": "STRING",
                    "description": "Specify the asset to add to the board. If it is already in the board's asset collection, no action is taken. ",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                },
                {
                    "name": "boardId",
                    "type": "STRING",
                    "description": "Specify the board to add an asset to.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/addAssetToBoard\"\nquerystring = {\"apiKey\": \"\", \"acceptLanguage\": \"\", \"assetId\": \"\", \"accessToken\": \"\", \"boardId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/addAssetToBoard\"\nquerystring = {\"apiKey\": \"\", \"acceptLanguage\": \"\", \"assetId\": \"\", \"accessToken\": \"\", \"boardId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createBoard",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/createBoard",
            "description": "Boards are where you collect, curate, collaborate on and manage photo and video assets in one place. More information on the Board FAQ. Use this endpoint to create a Board by a specific id.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Board name.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                },
                {
                    "name": "boardDescription",
                    "type": "STRING",
                    "description": "Board description.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/createBoard\"\nquerystring = {\"accessToken\": \"\", \"name\": \"\", \"apiKey\": \"\", \"acceptLanguage\": \"\", \"boardDescription\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/createBoard\"\nquerystring = {\"accessToken\": \"\", \"name\": \"\", \"apiKey\": \"\", \"acceptLanguage\": \"\", \"boardDescription\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteAssetFromBoard",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/deleteAssetFromBoard",
            "description": "Boards are where you collect, curate, collaborate on and manage photo and video assets in one place. More information on the Boards FAQ. Use this endpoint to remove an asset from a board.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "assetId",
                    "type": "STRING",
                    "description": "Specify the asset to add to the board. If it is already in the board's asset collection, no action is taken. ",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                },
                {
                    "name": "boardId",
                    "type": "STRING",
                    "description": "Specify the board to remove an asset from.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/deleteAssetFromBoard\"\nquerystring = {\"acceptLanguage\": \"\", \"assetId\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"boardId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/deleteAssetFromBoard\"\nquerystring = {\"acceptLanguage\": \"\", \"assetId\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"boardId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteBoard",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/deleteBoard",
            "description": "Boards are where you collect, curate, collaborate on and manage photo and video assets in one place. More information on the Boards FAQ. Use this endpoint to delete a Board by a specific id.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "boardId",
                    "type": "STRING",
                    "description": "Specify the board to delete.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/deleteBoard\"\nquerystring = {\"boardId\": \"\", \"accessToken\": \"\", \"acceptLanguage\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/deleteBoard\"\nquerystring = {\"boardId\": \"\", \"accessToken\": \"\", \"acceptLanguage\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "downloadImage",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/downloadImage",
            "description": "Use this endpoint to generate download URLs and related data for images you are authorized to download.Most product offerings have enforced periodic download limits such as monthly, weekly, and daily. When this operation executes, the count of allowed downloads is decremented by one for the product offering. Once the download limit is reached for a given product offering, no further downloads may be requested for that product offering until the next download period.The download limit for a given download period is covered in your product agreement established with Getty Images.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                },
                {
                    "name": "imageId",
                    "type": "NUMBER",
                    "description": "Id of image to download.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fileType",
                    "type": "SELECT",
                    "description": "File Type expressed with three character file extension.",
                    "default": ""
                },
                {
                    "name": "projectCode",
                    "type": "STRING",
                    "description": "Specifies the associated project code saved with the downloaded of an image.",
                    "default": ""
                },
                {
                    "name": "productId",
                    "type": "STRING",
                    "description": "Identifier of the instance for the selected product offering type.",
                    "default": ""
                },
                {
                    "name": "productType",
                    "type": "SELECT",
                    "description": "Specifies product type to be included in the previous download results.",
                    "default": ""
                },
                {
                    "name": "height",
                    "type": "STRING",
                    "description": "Specifies the pixel height of the particular image to download. Available heights can be found in the images/{ids} response for the specific image. If left blank, it will return the largest available size.",
                    "default": ""
                },
                {
                    "name": "downloadNotes",
                    "type": "STRING",
                    "description": "Associate a note with the download of an image.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/downloadImage\"\nquerystring = {\"fileType\": \"\", \"projectCode\": \"\", \"productId\": \"\", \"accessToken\": \"\", \"productType\": \"\", \"height\": \"\", \"imageId\": \"\", \"downloadNotes\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/downloadImage\"\nquerystring = {\"fileType\": \"\", \"projectCode\": \"\", \"productId\": \"\", \"accessToken\": \"\", \"productType\": \"\", \"height\": \"\", \"imageId\": \"\", \"downloadNotes\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getEditorialImagesBySearchQuery",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/getEditorialImagesBySearchQuery",
            "description": "Use this endpoint to search our editorial stock photos, illustrations and archival images. Editorial images represent newsworthy events or illustrate matters of general interest, such as news, sport and entertainment and are generally intended for editorial use.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                },
                {
                    "name": "collectionsFilterType",
                    "type": "SELECT",
                    "description": "Provides searching based on specified collection(s).",
                    "default": ""
                },
                {
                    "name": "dateFrom",
                    "type": "DATEPICKER",
                    "description": "Filters to events that start on or after this date.",
                    "default": ""
                },
                {
                    "name": "dateTo",
                    "type": "DATEPICKER",
                    "description": "Filters to events that start on or before this date.",
                    "default": ""
                },
                {
                    "name": "embedContentOnly",
                    "type": "SELECT",
                    "description": "Restrict search results to embeddable images. The default is false.",
                    "default": ""
                },
                {
                    "name": "minimumSize",
                    "type": "SELECT",
                    "description": "Filter based on minimum size requested",
                    "default": ""
                },
                {
                    "name": "phrase",
                    "type": "STRING",
                    "description": "Search images using a search phrase.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Request results starting at a page number (default is 1, maximum is 50).",
                    "default": ""
                },
                {
                    "name": "sortOrder",
                    "type": "SELECT",
                    "description": "Select sort order of results.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Request number of images to return in each page.",
                    "default": ""
                },
                {
                    "name": "minimumQualityRank",
                    "type": "NUMBER",
                    "description": "Filter search results based on minimum quality ranking. Possible values 1, 2, 3 with 1 being best.",
                    "default": ""
                },
                {
                    "name": "excludeNudity",
                    "type": "SELECT",
                    "description": "Excludes images containing nudity. The default is false.",
                    "default": ""
                },
                {
                    "name": "ageOfPeople",
                    "type": "LIST",
                    "description": "Filter based on the age of individuals in an image.",
                    "default": ""
                },
                {
                    "name": "artists",
                    "type": "LIST",
                    "description": "Search for images by specific artists.",
                    "default": ""
                },
                {
                    "name": "collectionCodes",
                    "type": "LIST",
                    "description": "Filter by collection codes. Include or exclude based on collections_filter_type.",
                    "default": ""
                },
                {
                    "name": "compositions",
                    "type": "LIST",
                    "description": "Filter based on image composition.",
                    "default": ""
                },
                {
                    "name": "ethnicity",
                    "type": "LIST",
                    "description": "Filter search results based on the ethnicity of individuals in an image.",
                    "default": ""
                },
                {
                    "name": "editorialSegments",
                    "type": "LIST",
                    "description": "Return only events with a matching editorial segment.",
                    "default": ""
                },
                {
                    "name": "fields",
                    "type": "LIST",
                    "description": "Specifies fields to return. Defaults to 'summary_set'.",
                    "default": ""
                },
                {
                    "name": "fileTypes",
                    "type": "LIST",
                    "description": "Return only images having a specific file type.",
                    "default": ""
                },
                {
                    "name": "graphicalStyles",
                    "type": "LIST",
                    "description": "Filter based on graphical style of the image.",
                    "default": ""
                },
                {
                    "name": "keywordIds",
                    "type": "LIST",
                    "description": "Return only images tagged with specific keyword(s). If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned.",
                    "default": ""
                },
                {
                    "name": "entityUris",
                    "type": "LIST",
                    "description": "Specify linked data entity uri.",
                    "default": ""
                },
                {
                    "name": "licenseModels",
                    "type": "LIST",
                    "description": "Specifies the image licensing model(s).",
                    "default": ""
                },
                {
                    "name": "numberOfPeople",
                    "type": "LIST",
                    "description": "Filter based on the number of people in the image.",
                    "default": ""
                },
                {
                    "name": "orientations",
                    "type": "LIST",
                    "description": "Return only images with selected aspect ratios.",
                    "default": ""
                },
                {
                    "name": "productTypes",
                    "type": "LIST",
                    "description": "Filter images to those having product types from the selected list.",
                    "default": ""
                },
                {
                    "name": "specificPeople",
                    "type": "LIST",
                    "description": "Return only images associated with specific people.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getEditorialImagesBySearchQuery\"\nquerystring = {\"acceptLanguage\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"collectionsFilterType\": \"\", \"dateFrom\": \"\", \"dateTo\": \"\", \"embedContentOnly\": \"\", \"minimumSize\": \"\", \"phrase\": \"\", \"page\": \"\", \"sortOrder\": \"\", \"pageSize\": \"\", \"minimumQualityRank\": \"\", \"excludeNudity\": \"\", \"ageOfPeople\": \"\", \"artists\": \"\", \"collectionCodes\": \"\", \"compositions\": \"\", \"ethnicity\": \"\", \"editorialSegments\": \"\", \"fields\": \"\", \"fileTypes\": \"\", \"graphicalStyles\": \"\", \"keywordIds\": \"\", \"entityUris\": \"\", \"licenseModels\": \"\", \"numberOfPeople\": \"\", \"orientations\": \"\", \"productTypes\": \"\", \"specificPeople\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getEditorialImagesBySearchQuery\"\nquerystring = {\"acceptLanguage\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"collectionsFilterType\": \"\", \"dateFrom\": \"\", \"dateTo\": \"\", \"embedContentOnly\": \"\", \"minimumSize\": \"\", \"phrase\": \"\", \"page\": \"\", \"sortOrder\": \"\", \"pageSize\": \"\", \"minimumQualityRank\": \"\", \"excludeNudity\": \"\", \"ageOfPeople\": \"\", \"artists\": \"\", \"collectionCodes\": \"\", \"compositions\": \"\", \"ethnicity\": \"\", \"editorialSegments\": \"\", \"fields\": \"\", \"fileTypes\": \"\", \"graphicalStyles\": \"\", \"keywordIds\": \"\", \"entityUris\": \"\", \"licenseModels\": \"\", \"numberOfPeople\": \"\", \"orientations\": \"\", \"productTypes\": \"\", \"specificPeople\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "downloadVideo",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/downloadVideo",
            "description": "Use this endpoint to generate download URLs and related data for videos you are authorized to download.Most product offerings have enforced periodic download limits such as monthly, weekly, and daily. When this operation executes, the count of allowed downloads is decremented by one for the product offering. Once the download limit is reached for a given product offering, no further downloads may be requested for that product offering until the next download period.The download limit for a given download period is covered in your product agreement established with Getty Images.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "NUMBER",
                    "description": "Id of video to download.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "productId",
                    "type": "STRING",
                    "description": "Identifier of the instance for the selected product offering type.",
                    "default": ""
                },
                {
                    "name": "productType",
                    "type": "SELECT",
                    "description": "Specifies product type to be included in the previous download results.",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "STRING",
                    "description": "Specifies the size to be downloaded.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/downloadVideo\"\nquerystring = {\"apiKey\": \"\", \"videoId\": \"\", \"productId\": \"\", \"accessToken\": \"\", \"productType\": \"\", \"size\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/downloadVideo\"\nquerystring = {\"apiKey\": \"\", \"videoId\": \"\", \"productId\": \"\", \"accessToken\": \"\", \"productType\": \"\", \"size\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAccessToken",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/getAccessToken",
            "description": "Client Credentials grant is for client applications that will not have individual users. An application token is created and limits the client application to operations that do not need user credentials. A Sandbox application (for trial development and without a licensing agreement) can only use the Client Credential grant type.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Client API Secret.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client API Key.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getAccessToken\"\nquerystring = {\"apiSecret\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getAccessToken\"\nquerystring = {\"apiSecret\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getBoard",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/getBoard",
            "description": "Boards are where you collect, curate, collaborate on and manage photo and video assets in one place. More information on the Boards FAQ. Use this endpoint to retrieve a Board by a specific id.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                },
                {
                    "name": "boardId",
                    "type": "STRING",
                    "description": "Retrieve details for a specific board.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getBoard\"\nquerystring = {\"apiKey\": \"\", \"acceptLanguage\": \"\", \"boardId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getBoard\"\nquerystring = {\"apiKey\": \"\", \"acceptLanguage\": \"\", \"boardId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getBoards",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/getBoards",
            "description": "Boards are where you collect, curate, collaborate on and manage photo and video assets in one place. More information on the Boards FAQ. Use this endpoint to retrieve all Boards available for a user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "boardRelationship",
                    "type": "SELECT",
                    "description": "Search for boards the user owns or has been invited to as an editor.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Request number of images to return in each page.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Request results starting at a page number (default is 1, maximum is 50).",
                    "default": ""
                },
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                },
                {
                    "name": "sortOrder",
                    "type": "SELECT",
                    "description": "Sort the list of boards by last update date or name. Defaults to date_last_updated_descending.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getBoards\"\nquerystring = {\"boardRelationship\": \"\", \"pageSize\": \"\", \"accessToken\": \"\", \"page\": \"\", \"acceptLanguage\": \"\", \"apiKey\": \"\", \"sortOrder\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getBoards\"\nquerystring = {\"boardRelationship\": \"\", \"pageSize\": \"\", \"accessToken\": \"\", \"page\": \"\", \"acceptLanguage\": \"\", \"apiKey\": \"\", \"sortOrder\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCollection",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/getCollection",
            "description": "Use this endpoint to retrieve collections associated with your Getty Images account. To browse available collections see our Image collections page.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getCollection\"\nquerystring = {\"apiKey\": \"\", \"acceptLanguage\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getCollection\"\nquerystring = {\"apiKey\": \"\", \"acceptLanguage\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCountriesList",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/getCountriesList",
            "description": "Returns a list of country objects that contains country name, two letter ISO abbreviation and three letter ISO abbreviation.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getCountriesList\"\nquerystring = {\"apiKey\": \"\", \"acceptLanguage\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getCountriesList\"\nquerystring = {\"apiKey\": \"\", \"acceptLanguage\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCreativeImagesBySearchQuery",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/getCreativeImagesBySearchQuery",
            "description": "Use this endpoint to search our contemporary stock photos, illustrations and archival images.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                },
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                },
                {
                    "name": "color",
                    "type": "STRING",
                    "description": "Filter based on predominant color in an image. Use 6 character hexidecimal format (e.g., #002244). Note: when specified, results will not contain editorial images",
                    "default": ""
                },
                {
                    "name": "collectionsFilterType",
                    "type": "SELECT",
                    "description": "Provides searching based on specified collection(s).",
                    "default": ""
                },
                {
                    "name": "embedContentOnly",
                    "type": "SELECT",
                    "description": "Restrict search results to embeddable images. The default is false.",
                    "default": ""
                },
                {
                    "name": "excludeNudity",
                    "type": "SELECT",
                    "description": "Excludes images containing nudity. The default is false.",
                    "default": ""
                },
                {
                    "name": "minimumSize",
                    "type": "SELECT",
                    "description": "Filter based on minimum size requested",
                    "default": ""
                },
                {
                    "name": "prestigeContentOnly",
                    "type": "SELECT",
                    "description": "Restrict search results to prestige images. The default is false.",
                    "default": ""
                },
                {
                    "name": "phrase",
                    "type": "STRING",
                    "description": "Search images using a search phrase.",
                    "default": ""
                },
                {
                    "name": "sortOrder",
                    "type": "SELECT",
                    "description": "Select sort order of results.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Request results starting at a page number (default is 1, maximum is 50).",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Request number of images to return in each page.",
                    "default": ""
                },
                {
                    "name": "ageOfPeople",
                    "type": "LIST",
                    "description": "Filter based on the age of individuals in an image.",
                    "default": ""
                },
                {
                    "name": "artists",
                    "type": "LIST",
                    "description": "Search for images by specific artists.",
                    "default": ""
                },
                {
                    "name": "collectionCodes",
                    "type": "LIST",
                    "description": "Filter by collection codes. Include or exclude based on collections_filter_type.",
                    "default": ""
                },
                {
                    "name": "compositions",
                    "type": "LIST",
                    "description": "Filter based on image composition.",
                    "default": ""
                },
                {
                    "name": "ethnicity",
                    "type": "LIST",
                    "description": "Filter search results based on the ethnicity of individuals in an image.",
                    "default": ""
                },
                {
                    "name": "fields",
                    "type": "LIST",
                    "description": "Specifies fields to return. Defaults to 'summary_set'.",
                    "default": ""
                },
                {
                    "name": "fileTypes",
                    "type": "LIST",
                    "description": "Return only images having a specific file type.",
                    "default": ""
                },
                {
                    "name": "graphicalStyles",
                    "type": "LIST",
                    "description": "Filter based on graphical style of the image.",
                    "default": ""
                },
                {
                    "name": "keywordIds",
                    "type": "LIST",
                    "description": "Return only images tagged with specific keyword(s). If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned.",
                    "default": ""
                },
                {
                    "name": "licenseModels",
                    "type": "LIST",
                    "description": "Specifies the image licensing model(s).",
                    "default": ""
                },
                {
                    "name": "numberOfPeople",
                    "type": "LIST",
                    "description": "Filter based on the number of people in the image.",
                    "default": ""
                },
                {
                    "name": "orientations",
                    "type": "LIST",
                    "description": "Return only images with selected aspect ratios.",
                    "default": ""
                },
                {
                    "name": "productTypes",
                    "type": "LIST",
                    "description": "Filter images to those having product types from the selected list.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getCreativeImagesBySearchQuery\"\nquerystring = {\"apiKey\": \"\", \"accessToken\": \"\", \"acceptLanguage\": \"\", \"color\": \"\", \"collectionsFilterType\": \"\", \"embedContentOnly\": \"\", \"excludeNudity\": \"\", \"minimumSize\": \"\", \"prestigeContentOnly\": \"\", \"phrase\": \"\", \"sortOrder\": \"\", \"page\": \"\", \"pageSize\": \"\", \"ageOfPeople\": \"\", \"artists\": \"\", \"collectionCodes\": \"\", \"compositions\": \"\", \"ethnicity\": \"\", \"fields\": \"\", \"fileTypes\": \"\", \"graphicalStyles\": \"\", \"keywordIds\": \"\", \"licenseModels\": \"\", \"numberOfPeople\": \"\", \"orientations\": \"\", \"productTypes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getCreativeImagesBySearchQuery\"\nquerystring = {\"apiKey\": \"\", \"accessToken\": \"\", \"acceptLanguage\": \"\", \"color\": \"\", \"collectionsFilterType\": \"\", \"embedContentOnly\": \"\", \"excludeNudity\": \"\", \"minimumSize\": \"\", \"prestigeContentOnly\": \"\", \"phrase\": \"\", \"sortOrder\": \"\", \"page\": \"\", \"pageSize\": \"\", \"ageOfPeople\": \"\", \"artists\": \"\", \"collectionCodes\": \"\", \"compositions\": \"\", \"ethnicity\": \"\", \"fields\": \"\", \"fileTypes\": \"\", \"graphicalStyles\": \"\", \"keywordIds\": \"\", \"licenseModels\": \"\", \"numberOfPeople\": \"\", \"orientations\": \"\", \"productTypes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCreativeVideoBySearchQuery",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/getCreativeVideoBySearchQuery",
            "description": "Use this endpoint to search premium stock video, from archival film to contemporary 4K and HD footage.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                },
                {
                    "name": "excludeNudity",
                    "type": "SELECT",
                    "description": "Excludes images containing nudity. The default is false.",
                    "default": ""
                },
                {
                    "name": "collectionsFilterType",
                    "type": "SELECT",
                    "description": "Provides searching based on specified collection(s).",
                    "default": ""
                },
                {
                    "name": "phrase",
                    "type": "STRING",
                    "description": "Search images using a search phrase.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Request results starting at a page number (default is 1, maximum is 50).",
                    "default": ""
                },
                {
                    "name": "sortOrder",
                    "type": "SELECT",
                    "description": "Select sort order of results.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Request number of images to return in each page.",
                    "default": ""
                },
                {
                    "name": "formatAvailable",
                    "type": "SELECT",
                    "description": "Filters according to the digital video format available on a film asset.",
                    "default": ""
                },
                {
                    "name": "ageOfPeople",
                    "type": "LIST",
                    "description": "Filter based on the age of individuals in an image.",
                    "default": ""
                },
                {
                    "name": "collectionCodes",
                    "type": "LIST",
                    "description": "Filter by collection codes. Include or exclude based on collections_filter_type.",
                    "default": ""
                },
                {
                    "name": "fields",
                    "type": "LIST",
                    "description": "Specifies fields to return. Defaults to 'summary_set'.",
                    "default": ""
                },
                {
                    "name": "keywordIds",
                    "type": "LIST",
                    "description": "Return only images tagged with specific keyword(s). If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned.",
                    "default": ""
                },
                {
                    "name": "licenseModels",
                    "type": "LIST",
                    "description": "Specifies the image licensing model(s).",
                    "default": ""
                },
                {
                    "name": "productTypes",
                    "type": "LIST",
                    "description": "Filter images to those having product types from the selected list.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getCreativeVideoBySearchQuery\"\nquerystring = {\"apiKey\": \"\", \"acceptLanguage\": \"\", \"accessToken\": \"\", \"excludeNudity\": \"\", \"collectionsFilterType\": \"\", \"phrase\": \"\", \"page\": \"\", \"sortOrder\": \"\", \"pageSize\": \"\", \"formatAvailable\": \"\", \"ageOfPeople\": \"\", \"collectionCodes\": \"\", \"fields\": \"\", \"keywordIds\": \"\", \"licenseModels\": \"\", \"productTypes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getCreativeVideoBySearchQuery\"\nquerystring = {\"apiKey\": \"\", \"acceptLanguage\": \"\", \"accessToken\": \"\", \"excludeNudity\": \"\", \"collectionsFilterType\": \"\", \"phrase\": \"\", \"page\": \"\", \"sortOrder\": \"\", \"pageSize\": \"\", \"formatAvailable\": \"\", \"ageOfPeople\": \"\", \"collectionCodes\": \"\", \"fields\": \"\", \"keywordIds\": \"\", \"licenseModels\": \"\", \"productTypes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getEditorialVideoBySearchQuery",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/getEditorialVideoBySearchQuery",
            "description": "Use this endpoint to search current and archival video clips of celebrities, newsmakers, and events.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                },
                {
                    "name": "excludeNudity",
                    "type": "SELECT",
                    "description": "Excludes images containing nudity. The default is false.",
                    "default": ""
                },
                {
                    "name": "collectionsFilterType",
                    "type": "SELECT",
                    "description": "Provides searching based on specified collection(s).",
                    "default": ""
                },
                {
                    "name": "phrase",
                    "type": "STRING",
                    "description": "Search images using a search phrase.",
                    "default": ""
                },
                {
                    "name": "sortOrder",
                    "type": "SELECT",
                    "description": "Select sort order of results.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Request results starting at a page number (default is 1, maximum is 50).",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Request number of images to return in each page.",
                    "default": ""
                },
                {
                    "name": "formatAvailable",
                    "type": "SELECT",
                    "description": "Filters according to the digital video format available on a film asset.",
                    "default": ""
                },
                {
                    "name": "ageOfPeople",
                    "type": "LIST",
                    "description": "Filter based on the age of individuals in an image.",
                    "default": ""
                },
                {
                    "name": "collectionCodes",
                    "type": "LIST",
                    "description": "Filter by collection codes. Include or exclude based on collections_filter_type.",
                    "default": ""
                },
                {
                    "name": "fields",
                    "type": "LIST",
                    "description": "Specifies fields to return. Defaults to 'summary_set'.",
                    "default": ""
                },
                {
                    "name": "keywordIds",
                    "type": "LIST",
                    "description": "Return only images tagged with specific keyword(s). If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned.",
                    "default": ""
                },
                {
                    "name": "productTypes",
                    "type": "LIST",
                    "description": "Filter images to those having product types from the selected list.",
                    "default": ""
                },
                {
                    "name": "specificPeople",
                    "type": "LIST",
                    "description": "Return only images associated with specific people.",
                    "default": ""
                },
                {
                    "name": "specificPeople",
                    "type": "LIST",
                    "description": "Return only images associated with specific people.",
                    "default": ""
                },
                {
                    "name": "entityUris",
                    "type": "LIST",
                    "description": "Specify linked data entity uri.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getEditorialVideoBySearchQuery\"\nquerystring = {\"acceptLanguage\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"excludeNudity\": \"\", \"collectionsFilterType\": \"\", \"phrase\": \"\", \"sortOrder\": \"\", \"page\": \"\", \"pageSize\": \"\", \"formatAvailable\": \"\", \"ageOfPeople\": \"\", \"collectionCodes\": \"\", \"fields\": \"\", \"keywordIds\": \"\", \"productTypes\": \"\", \"specificPeople\": \"\", \"entityUris\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getEditorialVideoBySearchQuery\"\nquerystring = {\"acceptLanguage\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"excludeNudity\": \"\", \"collectionsFilterType\": \"\", \"phrase\": \"\", \"sortOrder\": \"\", \"page\": \"\", \"pageSize\": \"\", \"formatAvailable\": \"\", \"ageOfPeople\": \"\", \"collectionCodes\": \"\", \"fields\": \"\", \"keywordIds\": \"\", \"productTypes\": \"\", \"specificPeople\": \"\", \"entityUris\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getEvent",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/getEvent",
            "description": "This endpoint returns the detailed event metadata for a specified event. Getty Images news, sports and entertainment photographers and videographers cover editorially relevant events occurring around the world. See more in readme.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                },
                {
                    "name": "eventId",
                    "type": "NUMBER",
                    "description": "An event id.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                },
                {
                    "name": "fields",
                    "type": "LIST",
                    "description": "list of fields to return in the response.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getEvent\"\nquerystring = {\"apiKey\": \"\", \"acceptLanguage\": \"\", \"accessToken\": \"\", \"eventId\": \"\", \"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getEvent\"\nquerystring = {\"apiKey\": \"\", \"acceptLanguage\": \"\", \"accessToken\": \"\", \"eventId\": \"\", \"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getEvents",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/getEvents",
            "description": "This endpoint returns the detailed event metadata for all specified events. Getty Images news, sports and entertainment photographers and videographers cover editorially relevant events occurring around the world.See more in readme.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                },
                {
                    "name": "eventIds",
                    "type": "LIST",
                    "description": " list of event ids.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                },
                {
                    "name": "fields",
                    "type": "LIST",
                    "description": "list of fields to return in the response.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getEvents\"\nquerystring = {\"apiKey\": \"\", \"acceptLanguage\": \"\", \"accessToken\": \"\", \"fields\": \"\", \"eventIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getEvents\"\nquerystring = {\"apiKey\": \"\", \"acceptLanguage\": \"\", \"accessToken\": \"\", \"fields\": \"\", \"eventIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getEventsBySearchQuery",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/getEventsBySearchQuery",
            "description": "Use this endpoint to search Getty Images news, sports and entertainment events. Getty Images photographers and videographers cover editorially relevant events occurring around the world.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                },
                {
                    "name": "dateFrom",
                    "type": "DATEPICKER",
                    "description": "Filters to events that start on or after this date.",
                    "default": ""
                },
                {
                    "name": "editorialSegment",
                    "type": "SELECT",
                    "description": "Filters to events with a matching editorial segment.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                },
                {
                    "name": "dateTo",
                    "type": "DATEPICKER",
                    "description": "Filters to events that start on or before this date.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Request results starting at a page number (default is 1, maximum is 50).",
                    "default": ""
                },
                {
                    "name": "phrase",
                    "type": "STRING",
                    "description": "Filters to events related to this phrase.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Request number of images to return in each page.",
                    "default": ""
                },
                {
                    "name": "fields",
                    "type": "LIST",
                    "description": "Specifies fields to return.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getEventsBySearchQuery\"\nquerystring = {\"acceptLanguage\": \"\", \"dateFrom\": \"\", \"editorialSegment\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"dateTo\": \"\", \"page\": \"\", \"phrase\": \"\", \"pageSize\": \"\", \"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getEventsBySearchQuery\"\nquerystring = {\"acceptLanguage\": \"\", \"dateFrom\": \"\", \"editorialSegment\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"dateTo\": \"\", \"page\": \"\", \"phrase\": \"\", \"pageSize\": \"\", \"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getImage",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/getImage",
            "description": "This endpoint returns the detailed image metadata for a specified image. Due to a wide variety of available image resolutions, the images are grouped into a handful of size categories for simplicity.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                },
                {
                    "name": "imageId",
                    "type": "NUMBER",
                    "description": "An image id. For more than one image please use the /v3/images endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                },
                {
                    "name": "fields",
                    "type": "LIST",
                    "description": "Specifies fields to return. Defaults to 'summary_set'.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getImage\"\nquerystring = {\"acceptLanguage\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"imageId\": \"\", \"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getImage\"\nquerystring = {\"acceptLanguage\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"imageId\": \"\", \"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getImages",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/getImages",
            "description": "This endpoint returns the detailed image metadata for all specified images. Due to a wide variety of available image resolutions, the images are grouped into a handful of size categories for simplicity.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                },
                {
                    "name": "imageIds",
                    "type": "LIST",
                    "description": "Specifies one or more image ids to return.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                },
                {
                    "name": "fields",
                    "type": "LIST",
                    "description": "Specifies fields to return. Defaults to 'summary_set'.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getImages\"\nquerystring = {\"apiKey\": \"\", \"acceptLanguage\": \"\", \"accessToken\": \"\", \"fields\": \"\", \"imageIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getImages\"\nquerystring = {\"apiKey\": \"\", \"acceptLanguage\": \"\", \"accessToken\": \"\", \"fields\": \"\", \"imageIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getImagesByArtistName",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/getImagesByArtistName",
            "description": "Get images by artist name.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "artistName",
                    "type": "STRING",
                    "description": "Name of artist for desired images",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Request number of images to return in each page.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Request results starting at a page number (default is 1, maximum is 50).",
                    "default": ""
                },
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                },
                {
                    "name": "fields",
                    "type": "LIST",
                    "description": "Specifies fields to return. Default set is 'id','name','start_date'.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getImagesByArtistName\"\nquerystring = {\"pageSize\": \"\", \"accessToken\": \"\", \"artistName\": \"\", \"apiKey\": \"\", \"page\": \"\", \"acceptLanguage\": \"\", \"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getImagesByArtistName\"\nquerystring = {\"pageSize\": \"\", \"accessToken\": \"\", \"artistName\": \"\", \"apiKey\": \"\", \"page\": \"\", \"acceptLanguage\": \"\", \"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getImagesBySearchQuery",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/getImagesBySearchQuery",
            "description": "Use this endpoint to search over a blend of our contemporary stock photos, illustrations, archival images, editorial photos, illustrations and archival images.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                },
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                },
                {
                    "name": "color",
                    "type": "STRING",
                    "description": "Filter based on predominant color in an image. Use 6 character hexidecimal format (e.g., #002244). Note: when specified, results will not contain editorial images",
                    "default": ""
                },
                {
                    "name": "collectionsFilterType",
                    "type": "SELECT",
                    "description": "Provides searching based on specified collection(s).",
                    "default": ""
                },
                {
                    "name": "embedContentOnly",
                    "type": "SELECT",
                    "description": "Restrict search results to embeddable images. The default is false.",
                    "default": ""
                },
                {
                    "name": "excludeNudity",
                    "type": "SELECT",
                    "description": "Excludes images containing nudity. The default is false.",
                    "default": ""
                },
                {
                    "name": "minimumSize",
                    "type": "SELECT",
                    "description": "Filter based on minimum size requested",
                    "default": ""
                },
                {
                    "name": "prestigeContentOnly",
                    "type": "SELECT",
                    "description": "Restrict search results to prestige images. The default is false.",
                    "default": ""
                },
                {
                    "name": "phrase",
                    "type": "STRING",
                    "description": "Search images using a search phrase.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Request number of images to return in each page.",
                    "default": ""
                },
                {
                    "name": "sortOrder",
                    "type": "SELECT",
                    "description": "Select sort order of results.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Request results starting at a page number (default is 1, maximum is 50).",
                    "default": ""
                },
                {
                    "name": "ageOfPeople",
                    "type": "LIST",
                    "description": "Filter based on the age of individuals in an image.",
                    "default": ""
                },
                {
                    "name": "artists",
                    "type": "LIST",
                    "description": "Search for images by specific artists.",
                    "default": ""
                },
                {
                    "name": "collectionCodes",
                    "type": "LIST",
                    "description": "Filter by collection codes. Include or exclude based on collections_filter_type.",
                    "default": ""
                },
                {
                    "name": "compositions",
                    "type": "LIST",
                    "description": "Filter based on image composition.",
                    "default": ""
                },
                {
                    "name": "ethnicity",
                    "type": "LIST",
                    "description": "Filter search results based on the ethnicity of individuals in an image.",
                    "default": ""
                },
                {
                    "name": "eventIds",
                    "type": "LIST",
                    "description": "Filter based on specific events",
                    "default": ""
                },
                {
                    "name": "fields",
                    "type": "LIST",
                    "description": "Specifies fields to return. Defaults to 'summary_set'.",
                    "default": ""
                },
                {
                    "name": "fileTypes",
                    "type": "LIST",
                    "description": "Return only images having a specific file type.",
                    "default": ""
                },
                {
                    "name": "graphicalStyles",
                    "type": "LIST",
                    "description": "Filter based on graphical style of the image.",
                    "default": ""
                },
                {
                    "name": "keywordIds",
                    "type": "LIST",
                    "description": "Return only images tagged with specific keyword(s). If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned.",
                    "default": ""
                },
                {
                    "name": "licenseModels",
                    "type": "LIST",
                    "description": "Specifies the image licensing model(s).",
                    "default": ""
                },
                {
                    "name": "numberOfPeople",
                    "type": "LIST",
                    "description": "Filter based on the number of people in the image.",
                    "default": ""
                },
                {
                    "name": "orientations",
                    "type": "LIST",
                    "description": "Return only images with selected aspect ratios.",
                    "default": ""
                },
                {
                    "name": "productTypes",
                    "type": "LIST",
                    "description": "Filter images to those having product types from the selected list.",
                    "default": ""
                },
                {
                    "name": "specificPeople",
                    "type": "LIST",
                    "description": "Return only images associated with specific people.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getImagesBySearchQuery\"\nquerystring = {\"accessToken\": \"\", \"acceptLanguage\": \"\", \"apiKey\": \"\", \"color\": \"\", \"collectionsFilterType\": \"\", \"embedContentOnly\": \"\", \"excludeNudity\": \"\", \"minimumSize\": \"\", \"prestigeContentOnly\": \"\", \"phrase\": \"\", \"pageSize\": \"\", \"sortOrder\": \"\", \"page\": \"\", \"ageOfPeople\": \"\", \"artists\": \"\", \"collectionCodes\": \"\", \"compositions\": \"\", \"ethnicity\": \"\", \"eventIds\": \"\", \"fields\": \"\", \"fileTypes\": \"\", \"graphicalStyles\": \"\", \"keywordIds\": \"\", \"licenseModels\": \"\", \"numberOfPeople\": \"\", \"orientations\": \"\", \"productTypes\": \"\", \"specificPeople\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getImagesBySearchQuery\"\nquerystring = {\"accessToken\": \"\", \"acceptLanguage\": \"\", \"apiKey\": \"\", \"color\": \"\", \"collectionsFilterType\": \"\", \"embedContentOnly\": \"\", \"excludeNudity\": \"\", \"minimumSize\": \"\", \"prestigeContentOnly\": \"\", \"phrase\": \"\", \"pageSize\": \"\", \"sortOrder\": \"\", \"page\": \"\", \"ageOfPeople\": \"\", \"artists\": \"\", \"collectionCodes\": \"\", \"compositions\": \"\", \"ethnicity\": \"\", \"eventIds\": \"\", \"fields\": \"\", \"fileTypes\": \"\", \"graphicalStyles\": \"\", \"keywordIds\": \"\", \"licenseModels\": \"\", \"numberOfPeople\": \"\", \"orientations\": \"\", \"productTypes\": \"\", \"specificPeople\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPreviousDownloadsInfo",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/getPreviousDownloadsInfo",
            "description": "Returns information about a customer's previously downloaded assets.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "productType",
                    "type": "SELECT",
                    "description": "Specifies product type to be included in the previous download results.",
                    "default": ""
                },
                {
                    "name": "companyDownloads",
                    "type": "SELECT",
                    "description": "If specified, returns the list of previously downloaded images for all users in your company. Your account must be enabled for this functionality. Contact your Getty Images account rep for more information. Default is false.",
                    "default": ""
                },
                {
                    "name": "dateFrom",
                    "type": "DATEPICKER",
                    "description": "Filters to events that start on or after this date.",
                    "default": ""
                },
                {
                    "name": "dateTo",
                    "type": "DATEPICKER",
                    "description": "Filters to events that start on or before this date.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Request number of images to return in each page.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Request results starting at a page number (default is 1, maximum is 50).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getPreviousDownloadsInfo\"\nquerystring = {\"apiKey\": \"\", \"productType\": \"\", \"companyDownloads\": \"\", \"dateFrom\": \"\", \"dateTo\": \"\", \"accessToken\": \"\", \"pageSize\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getPreviousDownloadsInfo\"\nquerystring = {\"apiKey\": \"\", \"productType\": \"\", \"companyDownloads\": \"\", \"dateFrom\": \"\", \"dateTo\": \"\", \"accessToken\": \"\", \"pageSize\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPreviouslyPurchasedAssets",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/getPreviouslyPurchasedAssets",
            "description": "This endpoint returns a list of all assets purchased on gettyimages.com by the username used for authentication. Use of this endpoint requires configuration changes to your API key. Please contact developersupport@gettyimages.com to learn more.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "dateTo",
                    "type": "DATEPICKER",
                    "description": "If specified, retrieves previous purchases on or before this date.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Request number of images to return in each page.",
                    "default": ""
                },
                {
                    "name": "dateFrom",
                    "type": "DATEPICKER",
                    "description": "If specified, retrieves previous purchases on or after this date.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Request results starting at a page number (default is 1, maximum is 50).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getPreviouslyPurchasedAssets\"\nquerystring = {\"dateTo\": \"\", \"pageSize\": \"\", \"accessToken\": \"\", \"dateFrom\": \"\", \"apiKey\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getPreviouslyPurchasedAssets\"\nquerystring = {\"dateTo\": \"\", \"pageSize\": \"\", \"accessToken\": \"\", \"dateFrom\": \"\", \"apiKey\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getProducts",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/getProducts",
            "description": "This endpoint returns all products available to the username used during authentication. As such, this endpoint requires the use of a fully authorized access_token. The product data can then be used as search filters, restricting results to images from a specific product.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                },
                {
                    "name": "fields",
                    "type": "LIST",
                    "description": "list of fields to return in the response.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getProducts\"\nquerystring = {\"apiKey\": \"\", \"acceptLanguage\": \"\", \"accessToken\": \"\", \"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getProducts\"\nquerystring = {\"apiKey\": \"\", \"acceptLanguage\": \"\", \"accessToken\": \"\", \"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getResourceOwnerGrant",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/getResourceOwnerGrant",
            "description": "The Resource Owner grant is only for Getty Images and Getty Images partner applications. This grant type is suitable for clients capable of obtaining the resource owner's credentials.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "User Name.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client API Key.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Client API Secret.",
                    "default": ""
                },
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "User Password.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getResourceOwnerGrant\"\nquerystring = {\"username\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"password\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getResourceOwnerGrant\"\nquerystring = {\"username\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"password\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSimilarImage",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/getSimilarImage",
            "description": "This endpoint will search our asset database for images similar to the specified asset id. Due to a wide variety of available image resolutions, the images are grouped into a handful of size categories for simplicity.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                },
                {
                    "name": "imageId",
                    "type": "NUMBER",
                    "description": "An image id. For more than one image please use the /v3/images endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Request results starting at a page number (default is 1, maximum is 50).",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Request number of images to return in each page.",
                    "default": ""
                },
                {
                    "name": "fields",
                    "type": "LIST",
                    "description": "Specifies fields to return. Defaults to 'summary_set'.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getSimilarImage\"\nquerystring = {\"acceptLanguage\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"page\": \"\", \"pageSize\": \"\", \"imageId\": \"\", \"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getSimilarImage\"\nquerystring = {\"acceptLanguage\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"page\": \"\", \"pageSize\": \"\", \"imageId\": \"\", \"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVideo",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/getVideo",
            "description": "Use this endpoint to return detailed video metadata for the specified video id.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                },
                {
                    "name": "videoId",
                    "type": "NUMBER",
                    "description": "A video id.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                },
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                },
                {
                    "name": "fields",
                    "type": "LIST",
                    "description": "List of fields to retrive for the video.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getVideo\"\nquerystring = {\"accessToken\": \"\", \"apiKey\": \"\", \"acceptLanguage\": \"\", \"videoId\": \"\", \"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getVideo\"\nquerystring = {\"accessToken\": \"\", \"apiKey\": \"\", \"acceptLanguage\": \"\", \"videoId\": \"\", \"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVideoBySearchQuery",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/getVideoBySearchQuery",
            "description": "Use this endpoint to search over a blend of our premium stock, contemporary 4K and HD footage, celebrities, news, newsmakers, entertainment, events and archival videos.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                },
                {
                    "name": "excludeNudity",
                    "type": "SELECT",
                    "description": "Excludes images containing nudity. The default is false.",
                    "default": ""
                },
                {
                    "name": "collectionsFilterType",
                    "type": "SELECT",
                    "description": "Provides searching based on specified collection(s).",
                    "default": ""
                },
                {
                    "name": "phrase",
                    "type": "STRING",
                    "description": "Search images using a search phrase.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Request number of images to return in each page.",
                    "default": ""
                },
                {
                    "name": "formatAvailable",
                    "type": "SELECT",
                    "description": "Filters according to the digital video format available on a film asset.",
                    "default": ""
                },
                {
                    "name": "sortOrder",
                    "type": "SELECT",
                    "description": "Select sort order of results.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Request results starting at a page number (default is 1, maximum is 50).",
                    "default": ""
                },
                {
                    "name": "ageOfPeople",
                    "type": "LIST",
                    "description": "Filter based on the age of individuals in an image.",
                    "default": ""
                },
                {
                    "name": "collectionCodes",
                    "type": "LIST",
                    "description": "Filter by collection codes. Include or exclude based on collections_filter_type.",
                    "default": ""
                },
                {
                    "name": "fields",
                    "type": "LIST",
                    "description": "Specifies fields to return. Defaults to 'summary_set'.",
                    "default": ""
                },
                {
                    "name": "keywordIds",
                    "type": "LIST",
                    "description": "Return only images tagged with specific keyword(s). If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned.",
                    "default": ""
                },
                {
                    "name": "licenseModels",
                    "type": "LIST",
                    "description": "Specifies the image licensing model(s).",
                    "default": ""
                },
                {
                    "name": "productTypes",
                    "type": "LIST",
                    "description": "Filter images to those having product types from the selected list.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getVideoBySearchQuery\"\nquerystring = {\"acceptLanguage\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"excludeNudity\": \"\", \"collectionsFilterType\": \"\", \"phrase\": \"\", \"pageSize\": \"\", \"formatAvailable\": \"\", \"sortOrder\": \"\", \"page\": \"\", \"ageOfPeople\": \"\", \"collectionCodes\": \"\", \"fields\": \"\", \"keywordIds\": \"\", \"licenseModels\": \"\", \"productTypes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getVideoBySearchQuery\"\nquerystring = {\"acceptLanguage\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"excludeNudity\": \"\", \"collectionsFilterType\": \"\", \"phrase\": \"\", \"pageSize\": \"\", \"formatAvailable\": \"\", \"sortOrder\": \"\", \"page\": \"\", \"ageOfPeople\": \"\", \"collectionCodes\": \"\", \"fields\": \"\", \"keywordIds\": \"\", \"licenseModels\": \"\", \"productTypes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVideos",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/getVideos",
            "description": "Use this endpoint to return detailed video metadata for all the specified video ids.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                },
                {
                    "name": "videoIds",
                    "type": "LIST",
                    "description": "Specifies one or more video ids to return.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                },
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                },
                {
                    "name": "fields",
                    "type": "LIST",
                    "description": "Specifies fields to return. Defaults to 'summary_set'.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getVideos\"\nquerystring = {\"apiKey\": \"\", \"accessToken\": \"\", \"acceptLanguage\": \"\", \"fields\": \"\", \"videoIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getVideos\"\nquerystring = {\"apiKey\": \"\", \"accessToken\": \"\", \"acceptLanguage\": \"\", \"fields\": \"\", \"videoIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVideosByArtistName",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/getVideosByArtistName",
            "description": "Get videos by artist name.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "artistName",
                    "type": "STRING",
                    "description": "Name of artist for desired images",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Request number of images to return in each page.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Request results starting at a page number (default is 1, maximum is 50).",
                    "default": ""
                },
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                },
                {
                    "name": "fields",
                    "type": "LIST",
                    "description": "Specifies fields to return.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getVideosByArtistName\"\nquerystring = {\"accessToken\": \"\", \"artistName\": \"\", \"pageSize\": \"\", \"apiKey\": \"\", \"page\": \"\", \"acceptLanguage\": \"\", \"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/getVideosByArtistName\"\nquerystring = {\"accessToken\": \"\", \"artistName\": \"\", \"pageSize\": \"\", \"apiKey\": \"\", \"page\": \"\", \"acceptLanguage\": \"\", \"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "refreshToken",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/refreshToken",
            "description": "A refresh token is obtained when authorizing through the the Resource Owner grant. The refresh token is good for one year and can be used to retrieve another 30-minute access token by calling the token endpoint.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Client API Secret.",
                    "default": ""
                },
                {
                    "name": "refreshToken",
                    "type": "STRING",
                    "description": "Refresh token obtained from Resource Owner grant call.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client API Key.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/refreshToken\"\nquerystring = {\"apiSecret\": \"\", \"refreshToken\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/refreshToken\"\nquerystring = {\"apiSecret\": \"\", \"refreshToken\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "registerAssets",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/registerAssets",
            "description": "Registers a list of assets that a customer has stored in their system.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                },
                {
                    "name": "assetsIds",
                    "type": "LIST",
                    "description": "Specifies the list of asset ids you want to register.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/registerAssets\"\nquerystring = {\"accessToken\": \"\", \"apiKey\": \"\", \"acceptLanguage\": \"\", \"assetsIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/registerAssets\"\nquerystring = {\"accessToken\": \"\", \"apiKey\": \"\", \"acceptLanguage\": \"\", \"assetsIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateBoard",
            "url": "https://GettyImagesraygorodskijV1.p.rapidapi.com/updateBoard",
            "description": "Boards are where you collect, curate, collaborate on and manage photo and video assets in one place. More information on the Boards FAQ. Use this endpoint to update a Board by a specific id.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Provide access token.",
                    "default": ""
                },
                {
                    "name": "boardId",
                    "type": "STRING",
                    "description": "Specify the board to update.",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "New board name.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Provide your API key.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "boardDescription",
                    "type": "STRING",
                    "description": "new board description.",
                    "default": ""
                },
                {
                    "name": "acceptLanguage",
                    "type": "STRING",
                    "description": "Provide a header to specify the language of result values.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/updateBoard\"\nquerystring = {\"boardDescription\": \"\", \"accessToken\": \"\", \"boardId\": \"\", \"acceptLanguage\": \"\", \"name\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GettyImagesraygorodskijV1.p.rapidapi.com/updateBoard\"\nquerystring = {\"boardDescription\": \"\", \"accessToken\": \"\", \"boardId\": \"\", \"acceptLanguage\": \"\", \"name\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GettyImagesraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}