{
    "product_id": "api_c99f599e-55b9-4948-a5e6-a20762d8a53c",
    "tool_description": "Automatically identify over-stretched images and restore the image content to normal proportions.",
    "home_url": "https://rapidapi.com/ailabapi-ailabapi-default/api/restore-distorted-image/",
    "name": "Restore Distorted Image",
    "title": "Restore Distorted Image",
    "pricing": "FREEMIUM",
    "tool_name": "Restore Distorted Image",
    "score": null,
    "host": "restore-distorted-image.p.rapidapi.com",
    "api_list": [
        {
            "name": "Restore Distorted Image",
            "url": "https://restore-distorted-image.p.rapidapi.com/image/enhance/stretch_restore",
            "description": "Restore Distorted Image",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image",
                    "type": "BINARY",
                    "description": "- **Image format**: `PNG` `JPG` `JPEG` `BMP`\n- **Image size**: No more than 8 MB.\n- **Image resolution**: Larger than 10x10px, smaller than 5000x5000px.\n- **Image aspect ratio**: Aspect ratio within 4:1.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://restore-distorted-image.p.rapidapi.com/image/enhance/stretch_restore\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"restore-distorted-image.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://restore-distorted-image.p.rapidapi.com/image/enhance/stretch_restore\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"restore-distorted-image.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "request_id": {
                    "type": "string",
                    "required": false,
                    "description": "Request ID."
                },
                "log_id": {
                    "type": "string",
                    "required": false,
                    "description": "Log ID."
                },
                "error_code": {
                    "type": "integer",
                    "required": false,
                    "description": "Error Code."
                },
                "error_code_str": {
                    "type": "string",
                    "required": false,
                    "description": "Error Code."
                },
                "error_msg": {
                    "type": "string",
                    "required": false,
                    "description": "Error Message."
                },
                "image": {
                    "type": "string",
                    "required": false,
                    "description": "base64 encoded picture."
                },
                "ratio": {
                    "type": "double",
                    "required": false,
                    "description": "Recover ratio."
                }
            }
        }
    ]
}