{
    "product_id": "api_0a1e2a1f-15bd-4b04-b318-30cb3c0d18ea",
    "tool_description": "Aspose.Imaging Cloud provides the most demanding imaging routines such as Re-sizing, Cropping, Rotation, and Conversion. It supports the most common raster file-formats including PSD, PNG, JPG, BMP, TIFF, and GIF.",
    "home_url": "https://rapidapi.com/asposecloud/api/aspose-imaging-cloud1/",
    "name": "Aspose.Imaging Cloud",
    "title": "Aspose.Imaging Cloud",
    "pricing": "FREEMIUM",
    "tool_name": "Aspose.Imaging Cloud",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 412,
        "avgSuccessRate": 0,
        "popularityScore": 0.2,
        "__typename": "Score"
    },
    "host": "aspose-imaging-cloud1.p.rapidapi.com",
    "api_list": [
        {
            "name": "ModifyWmf",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/wmf",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "pageHeight",
                    "type": "NUMBER",
                    "description": "Height of the page.",
                    "default": ""
                },
                {
                    "name": "pageWidth",
                    "type": "NUMBER",
                    "description": "Width of the page.",
                    "default": ""
                },
                {
                    "name": "borderY",
                    "type": "NUMBER",
                    "description": "Border height.",
                    "default": ""
                },
                {
                    "name": "bkColor",
                    "type": "STRING",
                    "description": "Color of the background.",
                    "default": ""
                },
                {
                    "name": "borderX",
                    "type": "NUMBER",
                    "description": "Border width.",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filename of image.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fromScratch",
                    "type": "BOOLEAN",
                    "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false.",
                    "default": false
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Export format (PNG is the default one). Please, refer to the export table from https://docs.aspose.cloud/display/imagingcloud/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases.",
                    "default": "png"
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder with image to process.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/wmf\"\nquerystring = {\"pageHeight\": \"\", \"fromScratch\": false, \"storage\": \"\", \"pageWidth\": \"\", \"borderY\": \"\", \"bkColor\": \"\", \"format\": \"png\", \"borderX\": \"\", \"folder\": \"\", \"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/wmf\"\nquerystring = {\"pageHeight\": \"\", \"fromScratch\": false, \"storage\": \"\", \"pageWidth\": \"\", \"borderY\": \"\", \"bkColor\": \"\", \"format\": \"png\", \"borderX\": \"\", \"folder\": \"\", \"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "ConvertImage",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/convert",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Resulting image format. Please, refer to https://docs.aspose.cloud/display/imagingcloud/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases.",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filename of image.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder with image to process.",
                    "default": ""
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/convert\"\nquerystring = {\"folder\": \"\", \"storage\": \"\", \"format\": \"\", \"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/convert\"\nquerystring = {\"folder\": \"\", \"storage\": \"\", \"format\": \"\", \"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "string",
                "format": "binary"
            }
        },
        {
            "name": "ModifyEmf",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/emf",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filename of image.",
                    "default": ""
                },
                {
                    "name": "bkColor",
                    "type": "STRING",
                    "description": "Color of the background.",
                    "default": ""
                },
                {
                    "name": "borderX",
                    "type": "NUMBER",
                    "description": "Border width.",
                    "default": ""
                },
                {
                    "name": "borderY",
                    "type": "NUMBER",
                    "description": "Border height.",
                    "default": ""
                },
                {
                    "name": "pageHeight",
                    "type": "NUMBER",
                    "description": "Height of the page.",
                    "default": ""
                },
                {
                    "name": "pageWidth",
                    "type": "NUMBER",
                    "description": "Width of the page.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Export format (PNG is the default one). Please, refer to the export table from https://docs.aspose.cloud/display/imagingcloud/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases.",
                    "default": "png"
                },
                {
                    "name": "fromScratch",
                    "type": "BOOLEAN",
                    "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false.",
                    "default": false
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder with image to process.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/emf\"\nquerystring = {\"format\": \"png\", \"fromScratch\": false, \"storage\": \"\", \"name\": \"\", \"bkColor\": \"\", \"borderX\": \"\", \"borderY\": \"\", \"folder\": \"\", \"pageHeight\": \"\", \"pageWidth\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/emf\"\nquerystring = {\"format\": \"png\", \"fromScratch\": false, \"storage\": \"\", \"name\": \"\", \"bkColor\": \"\", \"borderX\": \"\", \"borderY\": \"\", \"folder\": \"\", \"pageHeight\": \"\", \"pageWidth\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "string",
                "format": "binary"
            }
        },
        {
            "name": "ModifyBmp",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/bmp",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filename of image.",
                    "default": ""
                },
                {
                    "name": "horizontalResolution",
                    "type": "NUMBER",
                    "description": "New horizontal resolution.",
                    "default": ""
                },
                {
                    "name": "bitsPerPixel",
                    "type": "NUMBER",
                    "description": "Color depth.",
                    "default": ""
                },
                {
                    "name": "verticalResolution",
                    "type": "NUMBER",
                    "description": "New vertical resolution.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder with image to process.",
                    "default": ""
                },
                {
                    "name": "fromScratch",
                    "type": "BOOLEAN",
                    "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false.",
                    "default": false
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/bmp\"\nquerystring = {\"name\": \"\", \"storage\": \"\", \"folder\": \"\", \"horizontalResolution\": \"\", \"bitsPerPixel\": \"\", \"verticalResolution\": \"\", \"fromScratch\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/bmp\"\nquerystring = {\"name\": \"\", \"storage\": \"\", \"folder\": \"\", \"horizontalResolution\": \"\", \"bitsPerPixel\": \"\", \"verticalResolution\": \"\", \"fromScratch\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "ModifyJpeg",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/jpg",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filename of image.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder with image to process.",
                    "default": ""
                },
                {
                    "name": "compressionType",
                    "type": "STRING",
                    "description": "Compression type: baseline (default), progressive, lossless or jpegls.",
                    "default": "baseline"
                },
                {
                    "name": "quality",
                    "type": "NUMBER",
                    "description": "Quality of an image from 0 to 100. Default is 75.",
                    "default": 75
                },
                {
                    "name": "fromScratch",
                    "type": "BOOLEAN",
                    "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false.",
                    "default": false
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/jpg\"\nquerystring = {\"name\": \"\", \"folder\": \"\", \"compressionType\": \"baseline\", \"quality\": 75, \"fromScratch\": false, \"storage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/jpg\"\nquerystring = {\"name\": \"\", \"folder\": \"\", \"compressionType\": \"baseline\", \"quality\": 75, \"fromScratch\": false, \"storage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "ModifyPsd",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/psd",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filename of image.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder with image to process.",
                    "default": ""
                },
                {
                    "name": "compressionMethod",
                    "type": "STRING",
                    "description": "Compression method (for now, raw and RLE are supported).",
                    "default": "rle"
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "channelsCount",
                    "type": "NUMBER",
                    "description": "Count of color channels.",
                    "default": 4
                },
                {
                    "name": "fromScratch",
                    "type": "BOOLEAN",
                    "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false.",
                    "default": false
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/psd\"\nquerystring = {\"folder\": \"\", \"compressionMethod\": \"rle\", \"storage\": \"\", \"name\": \"\", \"channelsCount\": 4, \"fromScratch\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/psd\"\nquerystring = {\"folder\": \"\", \"compressionMethod\": \"rle\", \"storage\": \"\", \"name\": \"\", \"channelsCount\": 4, \"fromScratch\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "string",
                "format": "binary"
            }
        },
        {
            "name": "CropImage",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/crop",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "x",
                    "type": "NUMBER",
                    "description": "X position of start point for cropping rectangle.",
                    "default": ""
                },
                {
                    "name": "y",
                    "type": "NUMBER",
                    "description": "Y position of start point for cropping rectangle.",
                    "default": ""
                },
                {
                    "name": "width",
                    "type": "NUMBER",
                    "description": "Width of cropping rectangle",
                    "default": ""
                },
                {
                    "name": "height",
                    "type": "NUMBER",
                    "description": "Height of cropping rectangle.",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filename of an image.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder with image to process.",
                    "default": ""
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Resulting image format. Please, refer to https://docs.aspose.cloud/display/imagingcloud/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/crop\"\nquerystring = {\"x\": \"\", \"y\": \"\", \"storage\": \"\", \"width\": \"\", \"height\": \"\", \"name\": \"\", \"folder\": \"\", \"format\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/crop\"\nquerystring = {\"x\": \"\", \"y\": \"\", \"storage\": \"\", \"width\": \"\", \"height\": \"\", \"name\": \"\", \"folder\": \"\", \"format\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GetImageProperties",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/properties",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filename of an image.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder with image to process.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/properties\"\nquerystring = {\"name\": \"\", \"storage\": \"\", \"folder\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/properties\"\nquerystring = {\"name\": \"\", \"storage\": \"\", \"folder\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GetImageFrameRange",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/frames/range",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filename of image.",
                    "default": ""
                },
                {
                    "name": "endFrameId",
                    "type": "NUMBER",
                    "description": "Index of the last frame in range.",
                    "default": ""
                },
                {
                    "name": "startFrameId",
                    "type": "NUMBER",
                    "description": "Index of the first frame in range.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "x",
                    "type": "NUMBER",
                    "description": "X position of start point for cropping rectangle.",
                    "default": ""
                },
                {
                    "name": "rectHeight",
                    "type": "NUMBER",
                    "description": "Height of cropping rectangle.",
                    "default": ""
                },
                {
                    "name": "newWidth",
                    "type": "NUMBER",
                    "description": "New width.",
                    "default": ""
                },
                {
                    "name": "saveOtherFrames",
                    "type": "BOOLEAN",
                    "description": "If result will include all other frames or just a specified frame.",
                    "default": false
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "y",
                    "type": "NUMBER",
                    "description": "Y position of start point for cropping rectangle.",
                    "default": ""
                },
                {
                    "name": "rotateFlipMethod",
                    "type": "STRING",
                    "description": "RotateFlip method (Rotate180FlipNone, Rotate180FlipX, Rotate180FlipXY, Rotate180FlipY, Rotate270FlipNone, Rotate270FlipX, Rotate270FlipXY, Rotate270FlipY, Rotate90FlipNone, Rotate90FlipX, Rotate90FlipXY, Rotate90FlipY, RotateNoneFlipNone, RotateNoneFlipX, RotateNoneFlipXY, RotateNoneFlipY). Default is RotateNoneFlipNone.",
                    "default": ""
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder with image to process.",
                    "default": ""
                },
                {
                    "name": "newHeight",
                    "type": "NUMBER",
                    "description": "New height.",
                    "default": ""
                },
                {
                    "name": "rectWidth",
                    "type": "NUMBER",
                    "description": "Width of cropping rectangle.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/frames/range\"\nquerystring = {\"x\": \"\", \"name\": \"\", \"rectHeight\": \"\", \"endFrameId\": \"\", \"newWidth\": \"\", \"saveOtherFrames\": false, \"storage\": \"\", \"y\": \"\", \"rotateFlipMethod\": \"\", \"folder\": \"\", \"newHeight\": \"\", \"rectWidth\": \"\", \"startFrameId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/frames/range\"\nquerystring = {\"x\": \"\", \"name\": \"\", \"rectHeight\": \"\", \"endFrameId\": \"\", \"newWidth\": \"\", \"saveOtherFrames\": false, \"storage\": \"\", \"y\": \"\", \"rotateFlipMethod\": \"\", \"folder\": \"\", \"newHeight\": \"\", \"rectWidth\": \"\", \"startFrameId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GetAvailableLabels",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/objectdetection/availablelabels/{method}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "method",
                    "type": "STRING",
                    "description": "Object detection method",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/objectdetection/availablelabels/{method}\"\nquerystring = {\"method\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/objectdetection/availablelabels/{method}\"\nquerystring = {\"method\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "DeskewImage",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/deskew",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "resizeProportionally",
                    "type": "BOOLEAN",
                    "description": "Resize proportionally",
                    "default": true
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Image file name.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "bkColor",
                    "type": "STRING",
                    "description": "Background color",
                    "default": ""
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Storage",
                    "default": ""
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/deskew\"\nquerystring = {\"bkColor\": \"\", \"resizeProportionally\": true, \"storage\": \"\", \"folder\": \"\", \"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/deskew\"\nquerystring = {\"bkColor\": \"\", \"resizeProportionally\": true, \"storage\": \"\", \"folder\": \"\", \"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "ModifyTiff",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/tiff",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filename of image.",
                    "default": ""
                },
                {
                    "name": "bitDepth",
                    "type": "NUMBER",
                    "description": "Bit depth.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "resolutionUnit",
                    "type": "STRING",
                    "description": "New resolution unit (none - the default one, inch or centimeter).",
                    "default": ""
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder with image to process.",
                    "default": ""
                },
                {
                    "name": "compression",
                    "type": "STRING",
                    "description": "Compression (none is default). Please, refer to https://apireference.aspose.com/net/imaging/aspose.imaging.fileformats.tiff.enums/tiffcompressions for all possible values.",
                    "default": ""
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "horizontalResolution",
                    "type": "NUMBER",
                    "description": "New horizontal resolution.",
                    "default": 0
                },
                {
                    "name": "fromScratch",
                    "type": "BOOLEAN",
                    "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false.",
                    "default": false
                },
                {
                    "name": "verticalResolution",
                    "type": "NUMBER",
                    "description": "New vertical resolution.",
                    "default": 0
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/tiff\"\nquerystring = {\"name\": \"\", \"resolutionUnit\": \"\", \"folder\": \"\", \"compression\": \"\", \"storage\": \"\", \"bitDepth\": \"\", \"horizontalResolution\": 0, \"fromScratch\": false, \"verticalResolution\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/tiff\"\nquerystring = {\"name\": \"\", \"resolutionUnit\": \"\", \"folder\": \"\", \"compression\": \"\", \"storage\": \"\", \"bitDepth\": \"\", \"horizontalResolution\": 0, \"fromScratch\": false, \"verticalResolution\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GetImageFeatures",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/features",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "searchContextId",
                    "type": "STRING",
                    "description": "The search context identifier.",
                    "default": ""
                },
                {
                    "name": "imageId",
                    "type": "STRING",
                    "description": "The image identifier.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "The storage.",
                    "default": ""
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "The folder.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/features\"\nquerystring = {\"searchContextId\": \"\", \"storage\": \"\", \"imageId\": \"\", \"folder\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/features\"\nquerystring = {\"searchContextId\": \"\", \"storage\": \"\", \"imageId\": \"\", \"folder\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GetVisualObjectBounds",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/objectdetection/{name}/visualbounds",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "The image features detector.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "includeScore",
                    "type": "BOOLEAN",
                    "description": "Draw detected objects scores",
                    "default": false
                },
                {
                    "name": "method",
                    "type": "STRING",
                    "description": "Object detection method",
                    "default": "ssd"
                },
                {
                    "name": "color",
                    "type": "STRING",
                    "description": "Bounds, labels, and scores text color",
                    "default": ""
                },
                {
                    "name": "threshold",
                    "type": "NUMBER",
                    "description": "Object detection probability threshold in percents",
                    "default": 50
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "The storage.",
                    "default": ""
                },
                {
                    "name": "includeLabel",
                    "type": "BOOLEAN",
                    "description": "Draw detected objects labels",
                    "default": false
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "The folder.",
                    "default": ""
                },
                {
                    "name": "blockedLabels",
                    "type": "STRING",
                    "description": "Comma-separated list of blocked labels",
                    "default": ""
                },
                {
                    "name": "allowedLabels",
                    "type": "STRING",
                    "description": "Comma-separated list of allowed labels",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/objectdetection/{name}/visualbounds\"\nquerystring = {\"includeScore\": false, \"method\": \"ssd\", \"color\": \"\", \"threshold\": 50, \"storage\": \"\", \"name\": \"\", \"includeLabel\": false, \"folder\": \"\", \"blockedLabels\": \"\", \"allowedLabels\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/objectdetection/{name}/visualbounds\"\nquerystring = {\"includeScore\": false, \"method\": \"ssd\", \"color\": \"\", \"threshold\": 50, \"storage\": \"\", \"name\": \"\", \"includeLabel\": false, \"folder\": \"\", \"blockedLabels\": \"\", \"allowedLabels\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "FindSimilarImages",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/findSimilar",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "similarityThreshold",
                    "type": "NUMBER",
                    "description": "The similarity threshold.",
                    "default": ""
                },
                {
                    "name": "maxCount",
                    "type": "NUMBER",
                    "description": "The maximum count.",
                    "default": ""
                },
                {
                    "name": "searchContextId",
                    "type": "STRING",
                    "description": "The search context identifier.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "The folder.",
                    "default": ""
                },
                {
                    "name": "imageId",
                    "type": "STRING",
                    "description": "The search image identifier.",
                    "default": ""
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "The storage.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/findSimilar\"\nquerystring = {\"imageData\": \"\", \"folder\": \"\", \"imageId\": \"\", \"similarityThreshold\": \"\", \"storage\": \"\", \"maxCount\": \"\", \"searchContextId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/findSimilar\"\nquerystring = {\"imageData\": \"\", \"folder\": \"\", \"imageId\": \"\", \"similarityThreshold\": \"\", \"storage\": \"\", \"maxCount\": \"\", \"searchContextId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "ModifySvg",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/svg",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filename of image.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "colorType",
                    "type": "STRING",
                    "description": "Color type for SVG image. Only RGB is supported for now.",
                    "default": "Rgb"
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder with image to process.",
                    "default": ""
                },
                {
                    "name": "borderY",
                    "type": "NUMBER",
                    "description": "Border height. Only 0 is supported for now.",
                    "default": ""
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "bkColor",
                    "type": "STRING",
                    "description": "Background color (Default is white).",
                    "default": "white"
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Export format (PNG is the default one). Please, refer to the export table from https://docs.aspose.cloud/display/imagingcloud/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases.",
                    "default": "svg"
                },
                {
                    "name": "borderX",
                    "type": "NUMBER",
                    "description": "Border width. Only 0 is supported for now.",
                    "default": ""
                },
                {
                    "name": "pageWidth",
                    "type": "NUMBER",
                    "description": "Width of the page.",
                    "default": ""
                },
                {
                    "name": "textAsShapes",
                    "type": "BOOLEAN",
                    "description": "Whether text must be converted as shapes. true if all text is turned into SVG shapes in the convertion; otherwise, false",
                    "default": false
                },
                {
                    "name": "scaleY",
                    "type": "NUMBER",
                    "description": "Scale Y.",
                    "default": 0
                },
                {
                    "name": "pageHeight",
                    "type": "NUMBER",
                    "description": "Height of the page.",
                    "default": ""
                },
                {
                    "name": "scaleX",
                    "type": "NUMBER",
                    "description": "Scale X.",
                    "default": 0
                },
                {
                    "name": "fromScratch",
                    "type": "BOOLEAN",
                    "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false.",
                    "default": false
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/svg\"\nquerystring = {\"colorType\": \"Rgb\", \"folder\": \"\", \"borderY\": \"\", \"name\": \"\", \"storage\": \"\", \"bkColor\": \"white\", \"format\": \"svg\", \"borderX\": \"\", \"pageWidth\": \"\", \"textAsShapes\": false, \"scaleY\": 0, \"pageHeight\": \"\", \"scaleX\": 0, \"fromScratch\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/svg\"\nquerystring = {\"colorType\": \"Rgb\", \"folder\": \"\", \"borderY\": \"\", \"name\": \"\", \"storage\": \"\", \"bkColor\": \"white\", \"format\": \"svg\", \"borderX\": \"\", \"pageWidth\": \"\", \"textAsShapes\": false, \"scaleY\": 0, \"pageHeight\": \"\", \"scaleX\": 0, \"fromScratch\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GetFilesList",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/storage/folder/{path}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "Folder path e.g. '/folder'",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/storage/folder/{path}\"\nquerystring = {\"path\": \"\", \"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/storage/folder/{path}\"\nquerystring = {\"path\": \"\", \"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "ModifyGif",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/gif",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filename of image.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "backgroundColorIndex",
                    "type": "NUMBER",
                    "description": "Index of the background color.",
                    "default": 32
                },
                {
                    "name": "hasTrailer",
                    "type": "BOOLEAN",
                    "description": "Specifies if image has trailer.",
                    "default": true
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder with image to process.",
                    "default": ""
                },
                {
                    "name": "fromScratch",
                    "type": "BOOLEAN",
                    "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false.",
                    "default": true
                },
                {
                    "name": "colorResolution",
                    "type": "NUMBER",
                    "description": "Color resolution.",
                    "default": 3
                },
                {
                    "name": "pixelAspectRatio",
                    "type": "NUMBER",
                    "description": "Pixel aspect ratio.",
                    "default": 3
                },
                {
                    "name": "isPaletteSorted",
                    "type": "BOOLEAN",
                    "description": "Specifies if palette is sorted.",
                    "default": false
                },
                {
                    "name": "interlaced",
                    "type": "BOOLEAN",
                    "description": "Specifies if image is interlaced.",
                    "default": true
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/gif\"\nquerystring = {\"storage\": \"\", \"backgroundColorIndex\": 32, \"name\": \"\", \"hasTrailer\": true, \"folder\": \"\", \"fromScratch\": true, \"colorResolution\": 3, \"pixelAspectRatio\": 3, \"isPaletteSorted\": false, \"interlaced\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/gif\"\nquerystring = {\"storage\": \"\", \"backgroundColorIndex\": 32, \"name\": \"\", \"hasTrailer\": true, \"folder\": \"\", \"fromScratch\": true, \"colorResolution\": 3, \"pixelAspectRatio\": 3, \"isPaletteSorted\": false, \"interlaced\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GrayscaleImage",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/grayscale",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Image file name.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder",
                    "default": ""
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Storage",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/grayscale\"\nquerystring = {\"folder\": \"\", \"storage\": \"\", \"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/grayscale\"\nquerystring = {\"folder\": \"\", \"storage\": \"\", \"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GetObjectBounds",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/objectdetection/{name}/bounds",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Image file name.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Storage",
                    "default": ""
                },
                {
                    "name": "blockedLabels",
                    "type": "STRING",
                    "description": "Comma-separated list of blocked labels",
                    "default": ""
                },
                {
                    "name": "method",
                    "type": "STRING",
                    "description": "Object detection method",
                    "default": "ssd"
                },
                {
                    "name": "includeScore",
                    "type": "BOOLEAN",
                    "description": "Return detected objects score",
                    "default": false
                },
                {
                    "name": "allowedLabels",
                    "type": "STRING",
                    "description": "Comma-separated list of allowed labels",
                    "default": ""
                },
                {
                    "name": "threshold",
                    "type": "NUMBER",
                    "description": "Object detection probability threshold in percents",
                    "default": 50
                },
                {
                    "name": "includeLabel",
                    "type": "BOOLEAN",
                    "description": "Return detected objects labels",
                    "default": false
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/objectdetection/{name}/bounds\"\nquerystring = {\"storage\": \"\", \"blockedLabels\": \"\", \"name\": \"\", \"method\": \"ssd\", \"includeScore\": false, \"allowedLabels\": \"\", \"threshold\": 50, \"includeLabel\": false, \"folder\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/objectdetection/{name}/bounds\"\nquerystring = {\"storage\": \"\", \"blockedLabels\": \"\", \"name\": \"\", \"method\": \"ssd\", \"includeScore\": false, \"allowedLabels\": \"\", \"threshold\": 50, \"includeLabel\": false, \"folder\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "ResizeImage",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/resize",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "newWidth",
                    "type": "NUMBER",
                    "description": "New width.",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filename of an image.",
                    "default": ""
                },
                {
                    "name": "newHeight",
                    "type": "NUMBER",
                    "description": "New height.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder with image to process.",
                    "default": ""
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Resulting image format. Please, refer to https://docs.aspose.cloud/display/imagingcloud/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/resize\"\nquerystring = {\"newWidth\": \"\", \"folder\": \"\", \"name\": \"\", \"storage\": \"\", \"format\": \"\", \"newHeight\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/resize\"\nquerystring = {\"newWidth\": \"\", \"folder\": \"\", \"name\": \"\", \"storage\": \"\", \"format\": \"\", \"newHeight\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "UpdateImage",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/updateImage",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "x",
                    "type": "NUMBER",
                    "description": "X position of start point for cropping rectangle.",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filename of an image.",
                    "default": ""
                },
                {
                    "name": "rectWidth",
                    "type": "NUMBER",
                    "description": "Width of cropping rectangle.",
                    "default": ""
                },
                {
                    "name": "y",
                    "type": "NUMBER",
                    "description": "Y position of start point for cropping rectangle.",
                    "default": ""
                },
                {
                    "name": "rectHeight",
                    "type": "NUMBER",
                    "description": "Height of cropping rectangle.",
                    "default": ""
                },
                {
                    "name": "newHeight",
                    "type": "NUMBER",
                    "description": "New height of the scaled image.",
                    "default": ""
                },
                {
                    "name": "newWidth",
                    "type": "NUMBER",
                    "description": "New width of the scaled image.",
                    "default": ""
                },
                {
                    "name": "rotateFlipMethod",
                    "type": "STRING",
                    "description": "RotateFlip method (Rotate180FlipNone, Rotate180FlipX, Rotate180FlipXY, Rotate180FlipY, Rotate270FlipNone, Rotate270FlipX, Rotate270FlipXY, Rotate270FlipY, Rotate90FlipNone, Rotate90FlipX, Rotate90FlipXY, Rotate90FlipY, RotateNoneFlipNone, RotateNoneFlipX, RotateNoneFlipXY, RotateNoneFlipY). Default is RotateNoneFlipNone.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder with image to process.",
                    "default": ""
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Resulting image format. Please, refer to https://docs.aspose.cloud/display/imagingcloud/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/updateImage\"\nquerystring = {\"x\": \"\", \"name\": \"\", \"storage\": \"\", \"rectWidth\": \"\", \"folder\": \"\", \"format\": \"\", \"y\": \"\", \"rectHeight\": \"\", \"newHeight\": \"\", \"newWidth\": \"\", \"rotateFlipMethod\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/updateImage\"\nquerystring = {\"x\": \"\", \"name\": \"\", \"storage\": \"\", \"rectWidth\": \"\", \"folder\": \"\", \"format\": \"\", \"y\": \"\", \"rectHeight\": \"\", \"newHeight\": \"\", \"newWidth\": \"\", \"rotateFlipMethod\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "string",
                "format": "binary"
            }
        },
        {
            "name": "GetFileVersions",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/storage/version/{path}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "File path e.g. '/file.ext'",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/storage/version/{path}\"\nquerystring = {\"path\": \"\", \"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/storage/version/{path}\"\nquerystring = {\"path\": \"\", \"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "ModifyWebP",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/webp",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filename of image.",
                    "default": ""
                },
                {
                    "name": "animBackgroundColor",
                    "type": "STRING",
                    "description": "Color of the animation background.",
                    "default": ""
                },
                {
                    "name": "quality",
                    "type": "NUMBER",
                    "description": "Quality (0-100).",
                    "default": ""
                },
                {
                    "name": "animLoopCount",
                    "type": "NUMBER",
                    "description": "The animation loop count.",
                    "default": ""
                },
                {
                    "name": "lossLess",
                    "type": "BOOLEAN",
                    "description": "If WEBP should be in lossless format.",
                    "default": true
                }
            ],
            "optional_parameters": [
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "fromScratch",
                    "type": "BOOLEAN",
                    "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false.",
                    "default": false
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder with image to process.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/webp\"\nquerystring = {\"name\": \"\", \"storage\": \"\", \"animBackgroundColor\": \"\", \"fromScratch\": false, \"quality\": \"\", \"animLoopCount\": \"\", \"folder\": \"\", \"lossLess\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/webp\"\nquerystring = {\"name\": \"\", \"storage\": \"\", \"animBackgroundColor\": \"\", \"fromScratch\": false, \"quality\": \"\", \"animLoopCount\": \"\", \"folder\": \"\", \"lossLess\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GetDiscUsage",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/storage/disc",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/storage/disc\"\nquerystring = {\"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/storage/disc\"\nquerystring = {\"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GetSearchImage",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/image",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "searchContextId",
                    "type": "STRING",
                    "description": "Search context identifier.",
                    "default": ""
                },
                {
                    "name": "imageId",
                    "type": "STRING",
                    "description": "Image identifier.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder.",
                    "default": ""
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Storage",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/image\"\nquerystring = {\"searchContextId\": \"\", \"folder\": \"\", \"imageId\": \"\", \"storage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/image\"\nquerystring = {\"searchContextId\": \"\", \"folder\": \"\", \"imageId\": \"\", \"storage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "StorageExists",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/storage/{storageName}/exist",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/storage/{storageName}/exist\"\nquerystring = {\"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/storage/{storageName}/exist\"\nquerystring = {\"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "ConvertTiffToFax",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/tiff/{name}/toFax",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filename of image.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder with image to process.",
                    "default": ""
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/tiff/{name}/toFax\"\nquerystring = {\"folder\": \"\", \"name\": \"\", \"storage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/tiff/{name}/toFax\"\nquerystring = {\"folder\": \"\", \"name\": \"\", \"storage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "ExtractImageFeatures",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/image2features",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "imageId",
                    "type": "STRING",
                    "description": "The image identifier.",
                    "default": ""
                },
                {
                    "name": "searchContextId",
                    "type": "STRING",
                    "description": "The search context identifier.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "The folder.",
                    "default": ""
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "The storage.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/image2features\"\nquerystring = {\"imageData\": \"\", \"folder\": \"\", \"imageId\": \"\", \"searchContextId\": \"\", \"storage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/image2features\"\nquerystring = {\"imageData\": \"\", \"folder\": \"\", \"imageId\": \"\", \"searchContextId\": \"\", \"storage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "ModifyJpeg2000",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/jpg2000",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filename of image.",
                    "default": ""
                },
                {
                    "name": "comment",
                    "type": "STRING",
                    "description": "The comment (can be either single or comma-separated).",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "fromScratch",
                    "type": "BOOLEAN",
                    "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false.",
                    "default": false
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder with image to process.",
                    "default": ""
                },
                {
                    "name": "codec",
                    "type": "STRING",
                    "description": "The codec (j2k or jp2).",
                    "default": "j2k"
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/jpg2000\"\nquerystring = {\"name\": \"\", \"storage\": \"\", \"fromScratch\": false, \"comment\": \"\", \"folder\": \"\", \"codec\": \"j2k\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/jpg2000\"\nquerystring = {\"name\": \"\", \"storage\": \"\", \"fromScratch\": false, \"comment\": \"\", \"folder\": \"\", \"codec\": \"j2k\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "string",
                "format": "binary"
            }
        },
        {
            "name": "FindImageDuplicates",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/findDuplicates",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "searchContextId",
                    "type": "STRING",
                    "description": "The search context identifier.",
                    "default": ""
                },
                {
                    "name": "similarityThreshold",
                    "type": "NUMBER",
                    "description": "The similarity threshold.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "The folder.",
                    "default": ""
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "The storage.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/findDuplicates\"\nquerystring = {\"folder\": \"\", \"storage\": \"\", \"searchContextId\": \"\", \"similarityThreshold\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/findDuplicates\"\nquerystring = {\"folder\": \"\", \"storage\": \"\", \"searchContextId\": \"\", \"similarityThreshold\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "RotateFlipImage",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/rotateflip",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "method",
                    "type": "STRING",
                    "description": "RotateFlip method (Rotate180FlipNone, Rotate180FlipX, Rotate180FlipXY, Rotate180FlipY, Rotate270FlipNone, Rotate270FlipX, Rotate270FlipXY, Rotate270FlipY, Rotate90FlipNone, Rotate90FlipX, Rotate90FlipXY, Rotate90FlipY, RotateNoneFlipNone, RotateNoneFlipX, RotateNoneFlipXY, RotateNoneFlipY).",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filename of an image.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder with image to process.",
                    "default": ""
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Resulting image format. Please, refer to https://docs.aspose.cloud/display/imagingcloud/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/rotateflip\"\nquerystring = {\"method\": \"\", \"name\": \"\", \"storage\": \"\", \"folder\": \"\", \"format\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/rotateflip\"\nquerystring = {\"method\": \"\", \"name\": \"\", \"storage\": \"\", \"folder\": \"\", \"format\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "DownloadFile",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/storage/file/{path}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "File path e.g. '/folder/file.ext'",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                },
                {
                    "name": "versionId",
                    "type": "STRING",
                    "description": "File version ID to download",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/storage/file/{path}\"\nquerystring = {\"path\": \"\", \"storageName\": \"\", \"versionId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/storage/file/{path}\"\nquerystring = {\"path\": \"\", \"storageName\": \"\", \"versionId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GetImageFrame",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/frames/{frameId}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filename of image.",
                    "default": ""
                },
                {
                    "name": "frameId",
                    "type": "NUMBER",
                    "description": "Number of a frame.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder with image to process.",
                    "default": ""
                },
                {
                    "name": "x",
                    "type": "NUMBER",
                    "description": "X position of start point for cropping rectangle.",
                    "default": ""
                },
                {
                    "name": "rotateFlipMethod",
                    "type": "STRING",
                    "description": "RotateFlip method (Rotate180FlipNone, Rotate180FlipX, Rotate180FlipXY, Rotate180FlipY, Rotate270FlipNone, Rotate270FlipX, Rotate270FlipXY, Rotate270FlipY, Rotate90FlipNone, Rotate90FlipX, Rotate90FlipXY, Rotate90FlipY, RotateNoneFlipNone, RotateNoneFlipX, RotateNoneFlipXY, RotateNoneFlipY). Default is RotateNoneFlipNone.",
                    "default": ""
                },
                {
                    "name": "newHeight",
                    "type": "NUMBER",
                    "description": "New height.",
                    "default": ""
                },
                {
                    "name": "saveOtherFrames",
                    "type": "BOOLEAN",
                    "description": "If result will include all other frames or just a specified frame.",
                    "default": false
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "newWidth",
                    "type": "NUMBER",
                    "description": "New width.",
                    "default": ""
                },
                {
                    "name": "rectWidth",
                    "type": "NUMBER",
                    "description": "Width of cropping rectangle.",
                    "default": ""
                },
                {
                    "name": "rectHeight",
                    "type": "NUMBER",
                    "description": "Height of cropping rectangle.",
                    "default": ""
                },
                {
                    "name": "y",
                    "type": "NUMBER",
                    "description": "Y position of start point for cropping rectangle.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/frames/{frameId}\"\nquerystring = {\"name\": \"\", \"folder\": \"\", \"x\": \"\", \"rotateFlipMethod\": \"\", \"newHeight\": \"\", \"saveOtherFrames\": false, \"storage\": \"\", \"frameId\": \"\", \"newWidth\": \"\", \"rectWidth\": \"\", \"rectHeight\": \"\", \"y\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/frames/{frameId}\"\nquerystring = {\"name\": \"\", \"folder\": \"\", \"x\": \"\", \"rotateFlipMethod\": \"\", \"newHeight\": \"\", \"saveOtherFrames\": false, \"storage\": \"\", \"frameId\": \"\", \"newWidth\": \"\", \"rectWidth\": \"\", \"rectHeight\": \"\", \"y\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "ObjectExists",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/storage/exist/{path}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "File or folder path e.g. '/file.ext' or '/folder'",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "versionId",
                    "type": "STRING",
                    "description": "File version ID",
                    "default": ""
                },
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/storage/exist/{path}\"\nquerystring = {\"versionId\": \"\", \"path\": \"\", \"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/storage/exist/{path}\"\nquerystring = {\"versionId\": \"\", \"path\": \"\", \"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "description": "Object exists",
                "additionalProperties": false,
                "required": [
                    "Exists",
                    "IsFolder"
                ],
                "properties": {
                    "Exists": {
                        "type": "boolean",
                        "description": "Indicates that the file or folder exists."
                    },
                    "IsFolder": {
                        "type": "boolean",
                        "description": "True if it is a folder, false if it is a file."
                    }
                }
            }
        },
        {
            "name": "GetImageSearchStatus",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/status",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "searchContextId",
                    "type": "STRING",
                    "description": "The search context identifier.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "The storage.",
                    "default": ""
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "The folder.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/status\"\nquerystring = {\"storage\": \"\", \"searchContextId\": \"\", \"folder\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/status\"\nquerystring = {\"storage\": \"\", \"searchContextId\": \"\", \"folder\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GetImageFrameProperties",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/frames/{frameId}/properties",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filename with image.",
                    "default": ""
                },
                {
                    "name": "frameId",
                    "type": "NUMBER",
                    "description": "Number of a frame.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder with image to process.",
                    "default": ""
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/frames/{frameId}/properties\"\nquerystring = {\"folder\": \"\", \"storage\": \"\", \"name\": \"\", \"frameId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/frames/{frameId}/properties\"\nquerystring = {\"folder\": \"\", \"storage\": \"\", \"name\": \"\", \"frameId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "CreateModifiedJpeg2000",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/jpg2000",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                },
                {
                    "name": "comment",
                    "type": "STRING",
                    "description": "The comment (can be either single or comma-separated).",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "codec",
                    "type": "STRING",
                    "description": "The codec (j2k or jp2).",
                    "default": "j2k"
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "outPath",
                    "type": "STRING",
                    "description": "Path to updated file (if this is empty, response contains streamed image).",
                    "default": ""
                },
                {
                    "name": "fromScratch",
                    "type": "BOOLEAN",
                    "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false.",
                    "default": false
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/jpg2000\"\nquerystring = {\"imageData\": \"\", \"comment\": \"\", \"codec\": \"j2k\", \"storage\": \"\", \"outPath\": \"\", \"fromScratch\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/jpg2000\"\nquerystring = {\"imageData\": \"\", \"comment\": \"\", \"codec\": \"j2k\", \"storage\": \"\", \"outPath\": \"\", \"fromScratch\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "string",
                "format": "binary"
            }
        },
        {
            "name": "CreateFaxTiff",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/tiff/toFax",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "outPath",
                    "type": "STRING",
                    "description": "Path to updated file (if this is empty, response contains streamed image).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/tiff/toFax\"\nquerystring = {\"imageData\": \"\", \"storage\": \"\", \"outPath\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/tiff/toFax\"\nquerystring = {\"imageData\": \"\", \"storage\": \"\", \"outPath\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "string",
                "format": "binary"
            }
        },
        {
            "name": "CreateModifiedGif",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/gif",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "outPath",
                    "type": "STRING",
                    "description": "Path to updated file (if this is empty, response contains streamed image).",
                    "default": ""
                },
                {
                    "name": "hasTrailer",
                    "type": "BOOLEAN",
                    "description": "Specifies if image has trailer.",
                    "default": true
                },
                {
                    "name": "interlaced",
                    "type": "BOOLEAN",
                    "description": "Specifies if image is interlaced.",
                    "default": true
                },
                {
                    "name": "backgroundColorIndex",
                    "type": "NUMBER",
                    "description": "Index of the background color.",
                    "default": 32
                },
                {
                    "name": "fromScratch",
                    "type": "BOOLEAN",
                    "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false.",
                    "default": true
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "pixelAspectRatio",
                    "type": "NUMBER",
                    "description": "Pixel aspect ratio.",
                    "default": 3
                },
                {
                    "name": "colorResolution",
                    "type": "NUMBER",
                    "description": "Color resolution.",
                    "default": 3
                },
                {
                    "name": "isPaletteSorted",
                    "type": "BOOLEAN",
                    "description": "Specifies if palette is sorted.",
                    "default": false
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/gif\"\nquerystring = {\"imageData\": \"\", \"outPath\": \"\", \"hasTrailer\": true, \"interlaced\": true, \"backgroundColorIndex\": 32, \"fromScratch\": true, \"storage\": \"\", \"pixelAspectRatio\": 3, \"colorResolution\": 3, \"isPaletteSorted\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/gif\"\nquerystring = {\"imageData\": \"\", \"outPath\": \"\", \"hasTrailer\": true, \"interlaced\": true, \"backgroundColorIndex\": 32, \"fromScratch\": true, \"storage\": \"\", \"pixelAspectRatio\": 3, \"colorResolution\": 3, \"isPaletteSorted\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "CreateModifiedEmf",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/emf",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                },
                {
                    "name": "borderY",
                    "type": "NUMBER",
                    "description": "Border height.",
                    "default": ""
                },
                {
                    "name": "pageHeight",
                    "type": "NUMBER",
                    "description": "Height of the page.",
                    "default": ""
                },
                {
                    "name": "borderX",
                    "type": "NUMBER",
                    "description": "Border width.",
                    "default": ""
                },
                {
                    "name": "bkColor",
                    "type": "STRING",
                    "description": "Color of the background.",
                    "default": ""
                },
                {
                    "name": "pageWidth",
                    "type": "NUMBER",
                    "description": "Width of the page.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Export format (PNG is the default one). Please, refer to the export table from https://docs.aspose.cloud/display/imagingcloud/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases.",
                    "default": "png"
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "outPath",
                    "type": "STRING",
                    "description": "Path to updated file (if this is empty, response contains streamed image).",
                    "default": ""
                },
                {
                    "name": "fromScratch",
                    "type": "BOOLEAN",
                    "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false.",
                    "default": false
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/emf\"\nquerystring = {\"imageData\": \"\", \"borderY\": \"\", \"format\": \"png\", \"pageHeight\": \"\", \"storage\": \"\", \"borderX\": \"\", \"bkColor\": \"\", \"pageWidth\": \"\", \"outPath\": \"\", \"fromScratch\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/emf\"\nquerystring = {\"imageData\": \"\", \"borderY\": \"\", \"format\": \"png\", \"pageHeight\": \"\", \"storage\": \"\", \"borderX\": \"\", \"bkColor\": \"\", \"pageWidth\": \"\", \"outPath\": \"\", \"fromScratch\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "string",
                "format": "binary"
            }
        },
        {
            "name": "AppendTiff",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/tiff/{name}/appendTiff",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Original image file name.",
                    "default": ""
                },
                {
                    "name": "appendFile",
                    "type": "STRING",
                    "description": "Image file name to be appended to original one.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder with images to process.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/tiff/{name}/appendTiff\"\nquerystring = {\"storage\": \"\", \"folder\": \"\", \"name\": \"\", \"appendFile\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/tiff/{name}/appendTiff\"\nquerystring = {\"storage\": \"\", \"folder\": \"\", \"name\": \"\", \"appendFile\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "CreateResizedImage",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/resize",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                },
                {
                    "name": "newHeight",
                    "type": "NUMBER",
                    "description": "New height.",
                    "default": ""
                },
                {
                    "name": "newWidth",
                    "type": "NUMBER",
                    "description": "New width.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Resulting image format. Please, refer to https://docs.aspose.cloud/display/imagingcloud/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases.",
                    "default": ""
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "outPath",
                    "type": "STRING",
                    "description": "Path to updated file (if this is empty, response contains streamed image).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/resize\"\nquerystring = {\"imageData\": \"\", \"format\": \"\", \"storage\": \"\", \"newHeight\": \"\", \"outPath\": \"\", \"newWidth\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/resize\"\nquerystring = {\"imageData\": \"\", \"format\": \"\", \"storage\": \"\", \"newHeight\": \"\", \"outPath\": \"\", \"newWidth\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "CreateWebSiteImageFeatures",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/features/web",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "searchContextId",
                    "type": "STRING",
                    "description": "The search context identifier.",
                    "default": ""
                },
                {
                    "name": "imagesSource",
                    "type": "STRING",
                    "description": "Images source - a web page",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "The storage.",
                    "default": ""
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "The folder.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/features/web\"\nquerystring = {\"searchContextId\": \"\", \"storage\": \"\", \"imagesSource\": \"\", \"folder\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/features/web\"\nquerystring = {\"searchContextId\": \"\", \"storage\": \"\", \"imagesSource\": \"\", \"folder\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "CreateImageFrame",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/frames/{frameId}",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                },
                {
                    "name": "frameId",
                    "type": "NUMBER",
                    "description": "Number of a frame.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "x",
                    "type": "NUMBER",
                    "description": "X position of start point for cropping rectangle.",
                    "default": ""
                },
                {
                    "name": "saveOtherFrames",
                    "type": "BOOLEAN",
                    "description": "If result will include all other frames or just a specified frame.",
                    "default": false
                },
                {
                    "name": "newWidth",
                    "type": "NUMBER",
                    "description": "New width.",
                    "default": ""
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "outPath",
                    "type": "STRING",
                    "description": "Path to updated file (if this is empty, response contains streamed image).",
                    "default": ""
                },
                {
                    "name": "rectHeight",
                    "type": "NUMBER",
                    "description": "Height of cropping rectangle.",
                    "default": ""
                },
                {
                    "name": "rectWidth",
                    "type": "NUMBER",
                    "description": "Width of cropping rectangle.",
                    "default": ""
                },
                {
                    "name": "newHeight",
                    "type": "NUMBER",
                    "description": "New height.",
                    "default": ""
                },
                {
                    "name": "y",
                    "type": "NUMBER",
                    "description": "Y position of start point for cropping rectangle.",
                    "default": ""
                },
                {
                    "name": "rotateFlipMethod",
                    "type": "STRING",
                    "description": "RotateFlip method (Rotate180FlipNone, Rotate180FlipX, Rotate180FlipXY, Rotate180FlipY, Rotate270FlipNone, Rotate270FlipX, Rotate270FlipXY, Rotate270FlipY, Rotate90FlipNone, Rotate90FlipX, Rotate90FlipXY, Rotate90FlipY, RotateNoneFlipNone, RotateNoneFlipX, RotateNoneFlipXY, RotateNoneFlipY). Default is RotateNoneFlipNone.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/frames/{frameId}\"\nquerystring = {\"imageData\": \"\", \"frameId\": \"\", \"x\": \"\", \"saveOtherFrames\": false, \"newWidth\": \"\", \"storage\": \"\", \"outPath\": \"\", \"rectHeight\": \"\", \"rectWidth\": \"\", \"newHeight\": \"\", \"y\": \"\", \"rotateFlipMethod\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/frames/{frameId}\"\nquerystring = {\"imageData\": \"\", \"frameId\": \"\", \"x\": \"\", \"saveOtherFrames\": false, \"newWidth\": \"\", \"storage\": \"\", \"outPath\": \"\", \"rectHeight\": \"\", \"rectWidth\": \"\", \"newHeight\": \"\", \"y\": \"\", \"rotateFlipMethod\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "CreateImageSearch",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/create",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "The folder.",
                    "default": ""
                },
                {
                    "name": "detector",
                    "type": "STRING",
                    "description": "The image features detector.",
                    "default": "akaze"
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "The storage.",
                    "default": ""
                },
                {
                    "name": "matchingAlgorithm",
                    "type": "STRING",
                    "description": "The matching algorithm.",
                    "default": "randomBinaryTree"
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/create\"\nquerystring = {\"folder\": \"\", \"detector\": \"akaze\", \"storage\": \"\", \"matchingAlgorithm\": \"randomBinaryTree\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/create\"\nquerystring = {\"folder\": \"\", \"detector\": \"akaze\", \"storage\": \"\", \"matchingAlgorithm\": \"randomBinaryTree\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "CompareImages",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/compare",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "searchContextId",
                    "type": "STRING",
                    "description": "The search context identifier.",
                    "default": ""
                },
                {
                    "name": "imageId1",
                    "type": "STRING",
                    "description": "The first image Id in storage.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                },
                {
                    "name": "imageId2",
                    "type": "STRING",
                    "description": "The second image Id in storage or null (if image loading in request).",
                    "default": ""
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "The folder.",
                    "default": ""
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "The storage.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/compare\"\nquerystring = {\"imageData\": \"\", \"searchContextId\": \"\", \"imageId2\": \"\", \"imageId1\": \"\", \"folder\": \"\", \"storage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/compare\"\nquerystring = {\"imageData\": \"\", \"searchContextId\": \"\", \"imageId2\": \"\", \"imageId1\": \"\", \"folder\": \"\", \"storage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "description": "Search results set.",
                "additionalProperties": false,
                "properties": {
                    "Results": {
                        "type": "array",
                        "description": "Gets the results.",
                        "items": {
                            "type": "object",
                            "description": "Image search result.",
                            "additionalProperties": false,
                            "required": [
                                "Similarity"
                            ],
                            "properties": {
                                "ImageId": {
                                    "type": "string",
                                    "description": "Gets or sets the image identifier."
                                },
                                "Similarity": {
                                    "type": "number",
                                    "description": "Gets or sets the similarity.",
                                    "format": "double",
                                    "minimum": -1.7976931348623157e+308,
                                    "maximum": 1.7976931348623157e+308
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "CreateModifiedJpeg",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/jpg",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "quality",
                    "type": "NUMBER",
                    "description": "Quality of an image from 0 to 100. Default is 75.",
                    "default": 75
                },
                {
                    "name": "fromScratch",
                    "type": "BOOLEAN",
                    "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false.",
                    "default": false
                },
                {
                    "name": "outPath",
                    "type": "STRING",
                    "description": "Path to updated file (if this is empty, response contains streamed image).",
                    "default": ""
                },
                {
                    "name": "compressionType",
                    "type": "STRING",
                    "description": "Compression type: baseline (default), progressive, lossless or jpegls.",
                    "default": "baseline"
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/jpg\"\nquerystring = {\"imageData\": \"\", \"quality\": 75, \"fromScratch\": false, \"outPath\": \"\", \"compressionType\": \"baseline\", \"storage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/jpg\"\nquerystring = {\"imageData\": \"\", \"quality\": 75, \"fromScratch\": false, \"outPath\": \"\", \"compressionType\": \"baseline\", \"storage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "CreateModifiedWebP",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/webp",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                },
                {
                    "name": "animLoopCount",
                    "type": "NUMBER",
                    "description": "The animation loop count.",
                    "default": ""
                },
                {
                    "name": "lossLess",
                    "type": "BOOLEAN",
                    "description": "If WEBP should be in lossless format.",
                    "default": true
                },
                {
                    "name": "animBackgroundColor",
                    "type": "STRING",
                    "description": "Color of the animation background.",
                    "default": ""
                },
                {
                    "name": "quality",
                    "type": "NUMBER",
                    "description": "Quality (0-100).",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fromScratch",
                    "type": "BOOLEAN",
                    "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false.",
                    "default": false
                },
                {
                    "name": "outPath",
                    "type": "STRING",
                    "description": "Path to updated file (if this is empty, response contains streamed image).",
                    "default": ""
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/webp\"\nquerystring = {\"imageData\": \"\", \"fromScratch\": false, \"outPath\": \"\", \"animLoopCount\": \"\", \"storage\": \"\", \"lossLess\": true, \"animBackgroundColor\": \"\", \"quality\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/webp\"\nquerystring = {\"imageData\": \"\", \"fromScratch\": false, \"outPath\": \"\", \"animLoopCount\": \"\", \"storage\": \"\", \"lossLess\": true, \"animBackgroundColor\": \"\", \"quality\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "CreateModifiedTiff",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/tiff",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                },
                {
                    "name": "bitDepth",
                    "type": "NUMBER",
                    "description": "Bit depth.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "outPath",
                    "type": "STRING",
                    "description": "Path to updated file (if this is empty, response contains streamed image).",
                    "default": ""
                },
                {
                    "name": "fromScratch",
                    "type": "BOOLEAN",
                    "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false.",
                    "default": false
                },
                {
                    "name": "horizontalResolution",
                    "type": "NUMBER",
                    "description": "New horizontal resolution.",
                    "default": 0
                },
                {
                    "name": "verticalResolution",
                    "type": "NUMBER",
                    "description": "New vertical resolution.",
                    "default": 0
                },
                {
                    "name": "resolutionUnit",
                    "type": "STRING",
                    "description": "New resolution unit (none - the default one, inch or centimeter).",
                    "default": ""
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "compression",
                    "type": "STRING",
                    "description": "Compression (none is default). Please, refer to https://apireference.aspose.com/net/imaging/aspose.imaging.fileformats.tiff.enums/tiffcompressions for all possible values.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/tiff\"\nquerystring = {\"imageData\": \"\", \"bitDepth\": \"\", \"outPath\": \"\", \"fromScratch\": false, \"horizontalResolution\": 0, \"verticalResolution\": 0, \"resolutionUnit\": \"\", \"storage\": \"\", \"compression\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/tiff\"\nquerystring = {\"imageData\": \"\", \"bitDepth\": \"\", \"outPath\": \"\", \"fromScratch\": false, \"horizontalResolution\": 0, \"verticalResolution\": 0, \"resolutionUnit\": \"\", \"storage\": \"\", \"compression\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "string",
                "format": "binary"
            }
        },
        {
            "name": "CreateModifiedPsd",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/psd",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "compressionMethod",
                    "type": "STRING",
                    "description": "Compression method (for now, raw and RLE are supported).",
                    "default": "rle"
                },
                {
                    "name": "outPath",
                    "type": "STRING",
                    "description": "Path to updated file (if this is empty, response contains streamed image).",
                    "default": ""
                },
                {
                    "name": "fromScratch",
                    "type": "BOOLEAN",
                    "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false.",
                    "default": false
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "channelsCount",
                    "type": "NUMBER",
                    "description": "Count of color channels.",
                    "default": 4
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/psd\"\nquerystring = {\"imageData\": \"\", \"compressionMethod\": \"rle\", \"outPath\": \"\", \"fromScratch\": false, \"storage\": \"\", \"channelsCount\": 4}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/psd\"\nquerystring = {\"imageData\": \"\", \"compressionMethod\": \"rle\", \"outPath\": \"\", \"fromScratch\": false, \"storage\": \"\", \"channelsCount\": 4}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "AddSearchImage",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/image",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageId",
                    "type": "STRING",
                    "description": "Image identifier.",
                    "default": ""
                },
                {
                    "name": "searchContextId",
                    "type": "STRING",
                    "description": "Search context identifier.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Storage",
                    "default": ""
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/image\"\nquerystring = {\"imageData\": \"\", \"storage\": \"\", \"imageId\": \"\", \"searchContextId\": \"\", \"folder\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/image\"\nquerystring = {\"imageData\": \"\", \"storage\": \"\", \"imageId\": \"\", \"searchContextId\": \"\", \"folder\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "CreateGrayscaledImage",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/grayscale",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "outPath",
                    "type": "STRING",
                    "description": "Path to updated file (if this is empty, response contains streamed image)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/grayscale\"\nquerystring = {\"imageData\": \"\", \"storage\": \"\", \"outPath\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/grayscale\"\nquerystring = {\"imageData\": \"\", \"storage\": \"\", \"outPath\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "CreateImageFrameRange",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/frames/range",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                },
                {
                    "name": "startFrameId",
                    "type": "NUMBER",
                    "description": "Index of the first frame in range.",
                    "default": ""
                },
                {
                    "name": "endFrameId",
                    "type": "NUMBER",
                    "description": "Index of the last frame in range.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "rectHeight",
                    "type": "NUMBER",
                    "description": "Height of cropping rectangle.",
                    "default": ""
                },
                {
                    "name": "newHeight",
                    "type": "NUMBER",
                    "description": "New height.",
                    "default": ""
                },
                {
                    "name": "newWidth",
                    "type": "NUMBER",
                    "description": "New width.",
                    "default": ""
                },
                {
                    "name": "rotateFlipMethod",
                    "type": "STRING",
                    "description": "RotateFlip method (Rotate180FlipNone, Rotate180FlipX, Rotate180FlipXY, Rotate180FlipY, Rotate270FlipNone, Rotate270FlipX, Rotate270FlipXY, Rotate270FlipY, Rotate90FlipNone, Rotate90FlipX, Rotate90FlipXY, Rotate90FlipY, RotateNoneFlipNone, RotateNoneFlipX, RotateNoneFlipXY, RotateNoneFlipY). Default is RotateNoneFlipNone.",
                    "default": ""
                },
                {
                    "name": "y",
                    "type": "NUMBER",
                    "description": "Y position of start point for cropping rectangle.",
                    "default": ""
                },
                {
                    "name": "outPath",
                    "type": "STRING",
                    "description": "Path to updated file (if this is empty, response contains streamed image).",
                    "default": ""
                },
                {
                    "name": "saveOtherFrames",
                    "type": "BOOLEAN",
                    "description": "If result will include all other frames or just a specified frame.",
                    "default": false
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "x",
                    "type": "NUMBER",
                    "description": "X position of start point for cropping rectangle.",
                    "default": ""
                },
                {
                    "name": "rectWidth",
                    "type": "NUMBER",
                    "description": "Width of cropping rectangle.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/frames/range\"\nquerystring = {\"imageData\": \"\", \"startFrameId\": \"\", \"rectHeight\": \"\", \"endFrameId\": \"\", \"newHeight\": \"\", \"newWidth\": \"\", \"rotateFlipMethod\": \"\", \"y\": \"\", \"outPath\": \"\", \"saveOtherFrames\": false, \"storage\": \"\", \"x\": \"\", \"rectWidth\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/frames/range\"\nquerystring = {\"imageData\": \"\", \"startFrameId\": \"\", \"rectHeight\": \"\", \"endFrameId\": \"\", \"newHeight\": \"\", \"newWidth\": \"\", \"rotateFlipMethod\": \"\", \"y\": \"\", \"outPath\": \"\", \"saveOtherFrames\": false, \"storage\": \"\", \"x\": \"\", \"rectWidth\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "CreateImageTag",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/addTag",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                },
                {
                    "name": "tagName",
                    "type": "STRING",
                    "description": "The tag.",
                    "default": ""
                },
                {
                    "name": "searchContextId",
                    "type": "STRING",
                    "description": "The search context identifier.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "The storage.",
                    "default": ""
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "The folder.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/addTag\"\nquerystring = {\"imageData\": \"\", \"storage\": \"\", \"folder\": \"\", \"tagName\": \"\", \"searchContextId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/addTag\"\nquerystring = {\"imageData\": \"\", \"storage\": \"\", \"folder\": \"\", \"tagName\": \"\", \"searchContextId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "CreateDeskewedImage",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/deskew",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                },
                {
                    "name": "resizeProportionally",
                    "type": "BOOLEAN",
                    "description": "Resize proportionally",
                    "default": true
                }
            ],
            "optional_parameters": [
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "bkColor",
                    "type": "STRING",
                    "description": "Background color",
                    "default": ""
                },
                {
                    "name": "outPath",
                    "type": "STRING",
                    "description": "Path to updated file (if this is empty, response contains streamed image)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/deskew\"\nquerystring = {\"imageData\": \"\", \"storage\": \"\", \"resizeProportionally\": true, \"bkColor\": \"\", \"outPath\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/deskew\"\nquerystring = {\"imageData\": \"\", \"storage\": \"\", \"resizeProportionally\": true, \"bkColor\": \"\", \"outPath\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "CreateCroppedImage",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/crop",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                },
                {
                    "name": "y",
                    "type": "NUMBER",
                    "description": "Y position of start point for cropping rectangle.",
                    "default": ""
                },
                {
                    "name": "height",
                    "type": "NUMBER",
                    "description": "Height of cropping rectangle.",
                    "default": ""
                },
                {
                    "name": "x",
                    "type": "NUMBER",
                    "description": "X position of start point for cropping rectangle.",
                    "default": ""
                },
                {
                    "name": "width",
                    "type": "NUMBER",
                    "description": "Width of cropping rectangle.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Resulting image format. Please, refer to https://docs.aspose.cloud/display/imagingcloud/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases.",
                    "default": ""
                },
                {
                    "name": "outPath",
                    "type": "STRING",
                    "description": "Path to updated file (if this is empty, response contains streamed image).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/crop\"\nquerystring = {\"imageData\": \"\", \"y\": \"\", \"height\": \"\", \"x\": \"\", \"width\": \"\", \"storage\": \"\", \"format\": \"\", \"outPath\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/crop\"\nquerystring = {\"imageData\": \"\", \"y\": \"\", \"height\": \"\", \"x\": \"\", \"width\": \"\", \"storage\": \"\", \"format\": \"\", \"outPath\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "string",
                "format": "binary"
            }
        },
        {
            "name": "CreateImageFeatures",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/features",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "searchContextId",
                    "type": "STRING",
                    "description": "The search context identifier.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "The folder.",
                    "default": ""
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "The storage.",
                    "default": ""
                },
                {
                    "name": "imageId",
                    "type": "STRING",
                    "description": "The image identifier.",
                    "default": ""
                },
                {
                    "name": "imagesFolder",
                    "type": "STRING",
                    "description": "Images source - a folder",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/features\"\nquerystring = {\"imageData\": \"\", \"folder\": \"\", \"storage\": \"\", \"imageId\": \"\", \"imagesFolder\": \"\", \"searchContextId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/features\"\nquerystring = {\"imageData\": \"\", \"folder\": \"\", \"storage\": \"\", \"imageId\": \"\", \"imagesFolder\": \"\", \"searchContextId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "CreateConvertedImage",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/convert",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Resulting image format. Please, refer to https://docs.aspose.cloud/display/imagingcloud/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "outPath",
                    "type": "STRING",
                    "description": "Path to updated file (if this is empty, response contains streamed image).",
                    "default": ""
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/convert\"\nquerystring = {\"imageData\": \"\", \"format\": \"\", \"outPath\": \"\", \"storage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/convert\"\nquerystring = {\"imageData\": \"\", \"format\": \"\", \"outPath\": \"\", \"storage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "CreateUpdatedImage",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/updateImage",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                },
                {
                    "name": "rectWidth",
                    "type": "NUMBER",
                    "description": "Width of cropping rectangle.",
                    "default": ""
                },
                {
                    "name": "rectHeight",
                    "type": "NUMBER",
                    "description": "Height of cropping rectangle.",
                    "default": ""
                },
                {
                    "name": "y",
                    "type": "NUMBER",
                    "description": "Y position of start point for cropping rectangle.",
                    "default": ""
                },
                {
                    "name": "newHeight",
                    "type": "NUMBER",
                    "description": "New height of the scaled image.",
                    "default": ""
                },
                {
                    "name": "rotateFlipMethod",
                    "type": "STRING",
                    "description": "RotateFlip method (Rotate180FlipNone, Rotate180FlipX, Rotate180FlipXY, Rotate180FlipY, Rotate270FlipNone, Rotate270FlipX, Rotate270FlipXY, Rotate270FlipY, Rotate90FlipNone, Rotate90FlipX, Rotate90FlipXY, Rotate90FlipY, RotateNoneFlipNone, RotateNoneFlipX, RotateNoneFlipXY, RotateNoneFlipY). Default is RotateNoneFlipNone.",
                    "default": ""
                },
                {
                    "name": "newWidth",
                    "type": "NUMBER",
                    "description": "New width of the scaled image.",
                    "default": ""
                },
                {
                    "name": "x",
                    "type": "NUMBER",
                    "description": "X position of start point for cropping rectangle.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "outPath",
                    "type": "STRING",
                    "description": "Path to updated file (if this is empty, response contains streamed image).",
                    "default": ""
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Resulting image format. Please, refer to https://docs.aspose.cloud/display/imagingcloud/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases.",
                    "default": ""
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/updateImage\"\nquerystring = {\"imageData\": \"\", \"rectWidth\": \"\", \"rectHeight\": \"\", \"y\": \"\", \"newHeight\": \"\", \"outPath\": \"\", \"format\": \"\", \"rotateFlipMethod\": \"\", \"newWidth\": \"\", \"storage\": \"\", \"x\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/updateImage\"\nquerystring = {\"imageData\": \"\", \"rectWidth\": \"\", \"rectHeight\": \"\", \"y\": \"\", \"newHeight\": \"\", \"outPath\": \"\", \"format\": \"\", \"rotateFlipMethod\": \"\", \"newWidth\": \"\", \"storage\": \"\", \"x\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "CreateVisualObjectBounds",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/objectdetection/visualbounds",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "includeLabel",
                    "type": "BOOLEAN",
                    "description": "Draw detected objects classes",
                    "default": false
                },
                {
                    "name": "includeScore",
                    "type": "BOOLEAN",
                    "description": "Draw detected objects scores",
                    "default": false
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "color",
                    "type": "STRING",
                    "description": "Bounds, labels, and scores text color",
                    "default": ""
                },
                {
                    "name": "allowedLabels",
                    "type": "STRING",
                    "description": "Comma-separated list of allowed labels",
                    "default": ""
                },
                {
                    "name": "blockedLabels",
                    "type": "STRING",
                    "description": "Comma-separated list of blocked labels",
                    "default": ""
                },
                {
                    "name": "outPath",
                    "type": "STRING",
                    "description": "Path to updated file (if this is empty, response contains streamed image)",
                    "default": ""
                },
                {
                    "name": "threshold",
                    "type": "NUMBER",
                    "description": "Object detection probability threshold in percents",
                    "default": 50
                },
                {
                    "name": "method",
                    "type": "STRING",
                    "description": "Object detection method",
                    "default": "ssd"
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/objectdetection/visualbounds\"\nquerystring = {\"imageData\": \"\", \"includeLabel\": false, \"includeScore\": false, \"storage\": \"\", \"color\": \"\", \"allowedLabels\": \"\", \"blockedLabels\": \"\", \"outPath\": \"\", \"threshold\": 50, \"method\": \"ssd\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/objectdetection/visualbounds\"\nquerystring = {\"imageData\": \"\", \"includeLabel\": false, \"includeScore\": false, \"storage\": \"\", \"color\": \"\", \"allowedLabels\": \"\", \"blockedLabels\": \"\", \"outPath\": \"\", \"threshold\": 50, \"method\": \"ssd\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "string",
                "format": "binary"
            }
        },
        {
            "name": "CreateObjectBounds",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/objectdetection/bounds",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "allowedLabels",
                    "type": "STRING",
                    "description": "Comma-separated list of allowed labels",
                    "default": ""
                },
                {
                    "name": "method",
                    "type": "STRING",
                    "description": "Object detection method",
                    "default": "ssd"
                },
                {
                    "name": "blockedLabels",
                    "type": "STRING",
                    "description": "Comma-separated list of blocked labels",
                    "default": ""
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "includeScore",
                    "type": "BOOLEAN",
                    "description": "Draw detected objects scores",
                    "default": false
                },
                {
                    "name": "threshold",
                    "type": "NUMBER",
                    "description": "Object detection probability threshold in percents",
                    "default": 50
                },
                {
                    "name": "outPath",
                    "type": "STRING",
                    "description": "Path to updated file (if this is empty, response contains streamed image)",
                    "default": ""
                },
                {
                    "name": "includeLabel",
                    "type": "BOOLEAN",
                    "description": "Draw detected objects labels",
                    "default": false
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/objectdetection/bounds\"\nquerystring = {\"imageData\": \"\", \"allowedLabels\": \"\", \"method\": \"ssd\", \"blockedLabels\": \"\", \"storage\": \"\", \"includeScore\": false, \"threshold\": 50, \"outPath\": \"\", \"includeLabel\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/objectdetection/bounds\"\nquerystring = {\"imageData\": \"\", \"allowedLabels\": \"\", \"method\": \"ssd\", \"blockedLabels\": \"\", \"storage\": \"\", \"includeScore\": false, \"threshold\": 50, \"outPath\": \"\", \"includeLabel\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "CreateRotateFlippedImage",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/rotateflip",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                },
                {
                    "name": "method",
                    "type": "STRING",
                    "description": "RotateFlip method (Rotate180FlipNone, Rotate180FlipX, Rotate180FlipXY, Rotate180FlipY, Rotate270FlipNone, Rotate270FlipX, Rotate270FlipXY, Rotate270FlipY, Rotate90FlipNone, Rotate90FlipX, Rotate90FlipXY, Rotate90FlipY, RotateNoneFlipNone, RotateNoneFlipX, RotateNoneFlipXY, RotateNoneFlipY).",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Resulting image format. Please, refer to https://docs.aspose.cloud/display/imagingcloud/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases.",
                    "default": ""
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "outPath",
                    "type": "STRING",
                    "description": "Path to updated file (if this is empty, response contains streamed image).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/rotateflip\"\nquerystring = {\"imageData\": \"\", \"format\": \"\", \"method\": \"\", \"storage\": \"\", \"outPath\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/rotateflip\"\nquerystring = {\"imageData\": \"\", \"format\": \"\", \"method\": \"\", \"storage\": \"\", \"outPath\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "ExtractImageFrameProperties",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/frames/{frameId}/properties",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                },
                {
                    "name": "frameId",
                    "type": "NUMBER",
                    "description": "Number of a frame.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/frames/{frameId}/properties\"\nquerystring = {\"imageData\": \"\", \"frameId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/frames/{frameId}/properties\"\nquerystring = {\"imageData\": \"\", \"frameId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "FindImagesByTags",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/findByTags",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tags",
                    "type": "STRING",
                    "description": "Tags array for searching",
                    "default": ""
                },
                {
                    "name": "similarityThreshold",
                    "type": "NUMBER",
                    "description": "The similarity threshold.",
                    "default": ""
                },
                {
                    "name": "maxCount",
                    "type": "NUMBER",
                    "description": "The maximum count.",
                    "default": ""
                },
                {
                    "name": "searchContextId",
                    "type": "STRING",
                    "description": "The search context identifier.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "The folder.",
                    "default": ""
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "The storage.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/findByTags\"\nquerystring = {\"tags\": \"\", \"similarityThreshold\": \"\", \"folder\": \"\", \"maxCount\": \"\", \"searchContextId\": \"\", \"storage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/ai/imageSearch/{searchContextId}/findByTags\"\nquerystring = {\"tags\": \"\", \"similarityThreshold\": \"\", \"folder\": \"\", \"maxCount\": \"\", \"searchContextId\": \"\", \"storage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "CreateModifiedWmf",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/wmf",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                },
                {
                    "name": "pageWidth",
                    "type": "NUMBER",
                    "description": "Width of the page.",
                    "default": ""
                },
                {
                    "name": "pageHeight",
                    "type": "NUMBER",
                    "description": "Height of the page.",
                    "default": ""
                },
                {
                    "name": "borderY",
                    "type": "NUMBER",
                    "description": "Border height.",
                    "default": ""
                },
                {
                    "name": "bkColor",
                    "type": "STRING",
                    "description": "Color of the background.",
                    "default": ""
                },
                {
                    "name": "borderX",
                    "type": "NUMBER",
                    "description": "Border width.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "outPath",
                    "type": "STRING",
                    "description": "Path to updated file (if this is empty, response contains streamed image).",
                    "default": ""
                },
                {
                    "name": "fromScratch",
                    "type": "BOOLEAN",
                    "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false.",
                    "default": false
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Export format (PNG is the default one). Please, refer to the export table from https://docs.aspose.cloud/display/imagingcloud/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases.",
                    "default": "png"
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/wmf\"\nquerystring = {\"imageData\": \"\", \"outPath\": \"\", \"pageWidth\": \"\", \"pageHeight\": \"\", \"fromScratch\": false, \"borderY\": \"\", \"bkColor\": \"\", \"storage\": \"\", \"format\": \"png\", \"borderX\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/wmf\"\nquerystring = {\"imageData\": \"\", \"outPath\": \"\", \"pageWidth\": \"\", \"pageHeight\": \"\", \"fromScratch\": false, \"borderY\": \"\", \"bkColor\": \"\", \"storage\": \"\", \"format\": \"png\", \"borderX\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "ExtractImageProperties",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/properties",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/properties\"\nquerystring = {\"imageData\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/properties\"\nquerystring = {\"imageData\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "description": "Represents information about image.",
                "additionalProperties": false,
                "required": [
                    "Height",
                    "Width",
                    "BitsPerPixel",
                    "HorizontalResolution",
                    "VerticalResolution",
                    "IsCached"
                ],
                "properties": {
                    "Height": {
                        "type": "integer",
                        "description": "Gets or sets the height of image.",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "Width": {
                        "type": "integer",
                        "description": "Gets or sets the width of image.",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "BitsPerPixel": {
                        "type": "integer",
                        "description": "Gets or sets the bits per pixel for image.",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "BmpProperties": {
                        "type": "object",
                        "description": "Represents information about image in bmp format.",
                        "additionalProperties": false,
                        "properties": {
                            "Compression": {
                                "type": "string",
                                "description": "Gets or sets compression of bitmap."
                            }
                        }
                    },
                    "GifProperties": {
                        "type": "object",
                        "description": "Represents information about image in GIF format.",
                        "additionalProperties": false,
                        "required": [
                            "HasBackgroundColor",
                            "HasTrailer",
                            "PixelAspectRatio"
                        ],
                        "properties": {
                            "BackgroundColor": {
                                "type": "string",
                                "description": "Gets or sets the background color."
                            },
                            "HasBackgroundColor": {
                                "type": "boolean",
                                "description": "Gets or sets a value indicating whether background color is used."
                            },
                            "HasTrailer": {
                                "type": "boolean",
                                "description": "Gets or sets a value indicating whether image has trailer."
                            },
                            "PixelAspectRatio": {
                                "type": "integer",
                                "description": "Gets or sets the pixel aspect ratio.",
                                "format": "byte",
                                "pattern": "^[\\w\\d+\\/=]*$"
                            }
                        }
                    },
                    "JpegProperties": {
                        "type": "object",
                        "description": "Represents information about image in JPEG format.",
                        "additionalProperties": false,
                        "properties": {
                            "Comment": {
                                "type": "string",
                                "description": "Gets or sets the comment."
                            },
                            "JpegExifData": {
                                "type": "object",
                                "description": "Represents EXIF data for JPEG",
                                "additionalProperties": false,
                                "allOf": [
                                    {
                                        "type": "object",
                                        "description": "Represents common EXIF data section.",
                                        "additionalProperties": false,
                                        "required": [
                                            "ApertureValue",
                                            "BrightnessValue",
                                            "CompressedBitsPerPixel",
                                            "DigitalZoomRatio",
                                            "ExposureBiasValue",
                                            "ExposureIndex",
                                            "ExposureTime",
                                            "FNumber",
                                            "FlashEnergy",
                                            "FocalLength",
                                            "FocalLengthIn35MmFilm",
                                            "FocalPlaneXResolution",
                                            "FocalPlaneYResolution",
                                            "GPSAltitude",
                                            "GPSDOP",
                                            "GPSDestBearing",
                                            "GPSDestDistance",
                                            "GPSDifferential",
                                            "GPSImgDirection",
                                            "GPSSpeed",
                                            "Gamma",
                                            "ISOSpeed",
                                            "ISOSpeedLatitudeYYY",
                                            "ISOSpeedLatitudeZZZ",
                                            "PhotographicSensitivity",
                                            "MaxApertureValue",
                                            "PixelXDimension",
                                            "PixelYDimension",
                                            "RecommendedExposureIndex",
                                            "SceneType",
                                            "SensitivityType",
                                            "Sharpness",
                                            "ShutterSpeedValue",
                                            "StandardOutputSensitivity",
                                            "SubjectDistance"
                                        ],
                                        "properties": {
                                            "ApertureValue": {
                                                "type": "number",
                                                "description": "Gets or sets the aperture.",
                                                "format": "double",
                                                "minimum": -1.7976931348623157e+308,
                                                "maximum": 1.7976931348623157e+308
                                            },
                                            "BodySerialNumber": {
                                                "type": "string",
                                                "description": "Gets or sets the body serial number."
                                            },
                                            "BrightnessValue": {
                                                "type": "number",
                                                "description": "Gets or sets the brightness.",
                                                "format": "double",
                                                "minimum": -1.7976931348623157e+308,
                                                "maximum": 1.7976931348623157e+308
                                            },
                                            "CFAPattern": {
                                                "type": "string",
                                                "description": "Gets or sets the CFA pattern.",
                                                "format": "byte",
                                                "pattern": "^[\\w\\d+\\/=]*$"
                                            },
                                            "CameraOwnerName": {
                                                "type": "string",
                                                "description": "Gets or sets the camera owner name."
                                            },
                                            "ColorSpace": {
                                                "type": "string",
                                                "description": "Gets or sets the color space."
                                            },
                                            "ComponentsConfiguration": {
                                                "type": "string",
                                                "description": "Gets or sets the components configuration.",
                                                "format": "byte",
                                                "pattern": "^[\\w\\d+\\/=]*$"
                                            },
                                            "CompressedBitsPerPixel": {
                                                "type": "number",
                                                "description": "Gets or sets the compressed bits per pixel.",
                                                "format": "double",
                                                "minimum": -1.7976931348623157e+308,
                                                "maximum": 1.7976931348623157e+308
                                            },
                                            "Contrast": {
                                                "type": "string",
                                                "description": "Gets or sets the contrast."
                                            },
                                            "CustomRendered": {
                                                "type": "string",
                                                "description": "Gets or sets the value indincating if custom rendering is performed."
                                            },
                                            "DateTimeDigitized": {
                                                "type": "string",
                                                "description": "Gets or sets date and time when image was digitized."
                                            },
                                            "DateTimeOriginal": {
                                                "type": "string",
                                                "description": "Gets or sets date and time of the original image."
                                            },
                                            "DeviceSettingDescription": {
                                                "type": "string",
                                                "description": "Gets or sets the device setting description.",
                                                "format": "byte",
                                                "pattern": "^[\\w\\d+\\/=]*$"
                                            },
                                            "DigitalZoomRatio": {
                                                "type": "number",
                                                "description": "Gets or sets the digital zoom ratio.",
                                                "format": "double",
                                                "minimum": -1.7976931348623157e+308,
                                                "maximum": 1.7976931348623157e+308
                                            },
                                            "ExifVersion": {
                                                "type": "string",
                                                "description": "Gets or sets EXIF version.",
                                                "format": "byte",
                                                "pattern": "^[\\w\\d+\\/=]*$"
                                            },
                                            "ExposureBiasValue": {
                                                "type": "number",
                                                "description": "Gets or sets the exposure bias.",
                                                "format": "double",
                                                "minimum": -1.7976931348623157e+308,
                                                "maximum": 1.7976931348623157e+308
                                            },
                                            "ExposureIndex": {
                                                "type": "number",
                                                "description": "Gets or sets the exposure index.",
                                                "format": "double",
                                                "minimum": -1.7976931348623157e+308,
                                                "maximum": 1.7976931348623157e+308
                                            },
                                            "ExposureMode": {
                                                "type": "string",
                                                "description": "Gets or sets the exposure mode."
                                            },
                                            "ExposureProgram": {
                                                "type": "string",
                                                "description": "Gets or sets the exposure program."
                                            },
                                            "ExposureTime": {
                                                "type": "number",
                                                "description": "Gets or sets the exposure time.",
                                                "format": "double",
                                                "minimum": -1.7976931348623157e+308,
                                                "maximum": 1.7976931348623157e+308
                                            },
                                            "FNumber": {
                                                "type": "number",
                                                "description": "Gets or sets the focal number.",
                                                "format": "double",
                                                "minimum": -1.7976931348623157e+308,
                                                "maximum": 1.7976931348623157e+308
                                            },
                                            "FileSource": {
                                                "type": "string",
                                                "description": "Gets or sets the file source."
                                            },
                                            "Flash": {
                                                "type": "string",
                                                "description": "Gets or sets the flash."
                                            },
                                            "FlashEnergy": {
                                                "type": "number",
                                                "description": "Gets or sets the flash energy.",
                                                "format": "double",
                                                "minimum": -1.7976931348623157e+308,
                                                "maximum": 1.7976931348623157e+308
                                            },
                                            "FlashpixVersion": {
                                                "type": "string",
                                                "description": "Gets or sets the Flashpix version.",
                                                "format": "byte",
                                                "pattern": "^[\\w\\d+\\/=]*$"
                                            },
                                            "FocalLength": {
                                                "type": "number",
                                                "description": "Gets or sets the focal length.",
                                                "format": "double",
                                                "minimum": -1.7976931348623157e+308,
                                                "maximum": 1.7976931348623157e+308
                                            },
                                            "FocalLengthIn35MmFilm": {
                                                "type": "integer",
                                                "description": "Gets or sets the focal length in 35mm film."
                                            },
                                            "FocalPlaneResolutionUnit": {
                                                "type": "string",
                                                "description": "Gets or sets the focal plane resolution unit."
                                            },
                                            "FocalPlaneXResolution": {
                                                "type": "number",
                                                "description": "Gets or sets the focal plane X resolution.",
                                                "format": "double",
                                                "minimum": -1.7976931348623157e+308,
                                                "maximum": 1.7976931348623157e+308
                                            },
                                            "FocalPlaneYResolution": {
                                                "type": "number",
                                                "description": "Gets or sets the focal plane Y resolution.",
                                                "format": "double",
                                                "minimum": -1.7976931348623157e+308,
                                                "maximum": 1.7976931348623157e+308
                                            },
                                            "GPSAltitude": {
                                                "type": "number",
                                                "description": "Gets or sets the GPS altitude.",
                                                "format": "double",
                                                "minimum": -1.7976931348623157e+308,
                                                "maximum": 1.7976931348623157e+308
                                            },
                                            "GPSAltitudeRef": {
                                                "type": "string",
                                                "description": "Gets or sets the GPS altitude reference (if it's above or below sea level)."
                                            },
                                            "GPSAreaInformation": {
                                                "type": "string",
                                                "description": "Gets or sets the GPS area information.",
                                                "format": "byte",
                                                "pattern": "^[\\w\\d+\\/=]*$"
                                            },
                                            "GPSDOP": {
                                                "type": "number",
                                                "description": "Gets or sets the GPS DOP (data degree of precision).",
                                                "format": "double",
                                                "minimum": -1.7976931348623157e+308,
                                                "maximum": 1.7976931348623157e+308
                                            },
                                            "GPSDestBearing": {
                                                "type": "number",
                                                "description": "Gets or sets the GPS bearing of the destination.",
                                                "format": "double",
                                                "minimum": -1.7976931348623157e+308,
                                                "maximum": 1.7976931348623157e+308
                                            },
                                            "GPSDestBearingRef": {
                                                "type": "string",
                                                "description": "Gets or sets the GPS reference unit for bearing of the destination."
                                            },
                                            "GPSDestDistance": {
                                                "type": "number",
                                                "description": "Gets or sets the GPS destination distance.",
                                                "format": "double",
                                                "minimum": -1.7976931348623157e+308,
                                                "maximum": 1.7976931348623157e+308
                                            },
                                            "GPSDestDistanceRef": {
                                                "type": "string",
                                                "description": "Gets or sets the GPS reference unit for destination distance."
                                            },
                                            "GPSDestLatitude": {
                                                "type": "array",
                                                "description": "Gets or sets the GPS destination latitude.",
                                                "items": {
                                                    "type": "number",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                }
                                            },
                                            "GPSDestLatitudeRef": {
                                                "type": "string",
                                                "description": "Gets or sets the GPS reference destination latitude (north or south)."
                                            },
                                            "GPSDestLongitude": {
                                                "type": "array",
                                                "description": "Gets or sets the GPS destination longtitude.",
                                                "items": {
                                                    "type": "number",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                }
                                            },
                                            "GPSDestLongitudeRef": {
                                                "type": "string",
                                                "description": "Gets or sets the GPS reference destination longtitude (east or west)."
                                            },
                                            "GPSDifferential": {
                                                "type": "integer",
                                                "description": "Gets or sets the GPS differential."
                                            },
                                            "GPSImgDirection": {
                                                "type": "number",
                                                "description": "Gets or sets the GPS image direction.",
                                                "format": "double",
                                                "minimum": -1.7976931348623157e+308,
                                                "maximum": 1.7976931348623157e+308
                                            },
                                            "GPSImgDirectionRef": {
                                                "type": "string",
                                                "description": "Gets or sets the GPS reference image direction."
                                            },
                                            "GPSDateStamp": {
                                                "type": "string",
                                                "description": "Gets or sets the GPS date stamp."
                                            },
                                            "GPSLatitude": {
                                                "type": "array",
                                                "description": "Gets or sets the GPS latitude.",
                                                "items": {
                                                    "type": "number",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                }
                                            },
                                            "GPSLatitudeRef": {
                                                "type": "string",
                                                "description": "Gets or sets the GPS latitude reference (north or south)."
                                            },
                                            "GPSLongitude": {
                                                "type": "array",
                                                "description": "Gets or sets the GPS longitude.",
                                                "items": {
                                                    "type": "number",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                }
                                            },
                                            "GPSLongitudeRef": {
                                                "type": "string",
                                                "description": "Gets or sets the GPS longitude reference (east or west)."
                                            },
                                            "GPSMapDatum": {
                                                "type": "string",
                                                "description": "Gets or sets the geodetic survey data used by the GPS receiver."
                                            },
                                            "GPSMeasureMode": {
                                                "type": "string",
                                                "description": "Gets or sets the GPS measure mode."
                                            },
                                            "GPSProcessingMethod": {
                                                "type": "string",
                                                "description": "Gets or setsthe GPS processing method.",
                                                "format": "byte",
                                                "pattern": "^[\\w\\d+\\/=]*$"
                                            },
                                            "GPSSatellites": {
                                                "type": "string",
                                                "description": "Gets or sets the GPS satellites info."
                                            },
                                            "GPSSpeed": {
                                                "type": "number",
                                                "description": "Gets or sets the GPS speed.",
                                                "format": "double",
                                                "minimum": -1.7976931348623157e+308,
                                                "maximum": 1.7976931348623157e+308
                                            },
                                            "GPSSpeedRef": {
                                                "type": "string",
                                                "description": "Gets or sets the GPS speed reference unit."
                                            },
                                            "GPSStatus": {
                                                "type": "string",
                                                "description": "Gets or sets the GPS status."
                                            },
                                            "GPSTimestamp": {
                                                "type": "array",
                                                "description": "Gets or sets the GPS times tamp.",
                                                "items": {
                                                    "type": "number",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                }
                                            },
                                            "GPSTrack": {
                                                "type": "string",
                                                "description": "Gets or sets the GPS track."
                                            },
                                            "GPSTrackRef": {
                                                "type": "string",
                                                "description": "Gets or sets the GPS track reference."
                                            },
                                            "GPSVersionID": {
                                                "type": "string",
                                                "description": "Gets or sets the GPS version ID.",
                                                "format": "byte",
                                                "pattern": "^[\\w\\d+\\/=]*$"
                                            },
                                            "GainControl": {
                                                "type": "string",
                                                "description": "Gets or sets the gain control."
                                            },
                                            "Gamma": {
                                                "type": "number",
                                                "description": "Gets or sets the gamma.",
                                                "format": "double",
                                                "minimum": -1.7976931348623157e+308,
                                                "maximum": 1.7976931348623157e+308
                                            },
                                            "ISOSpeed": {
                                                "type": "integer",
                                                "description": "Gets or sets the ISO speed.",
                                                "format": "int64",
                                                "minimum": -9223372036854776000,
                                                "maximum": 9223372036854776000
                                            },
                                            "ISOSpeedLatitudeYYY": {
                                                "type": "integer",
                                                "description": "Gets or sets the ISO speed latitude YYY value.",
                                                "format": "int64",
                                                "minimum": -9223372036854776000,
                                                "maximum": 9223372036854776000
                                            },
                                            "ISOSpeedLatitudeZZZ": {
                                                "type": "integer",
                                                "description": "Gets or sets the ISO speed latitude ZZZ value.",
                                                "format": "int64",
                                                "minimum": -9223372036854776000,
                                                "maximum": 9223372036854776000
                                            },
                                            "PhotographicSensitivity": {
                                                "type": "integer",
                                                "description": "Gets or sets the photographic sensitivity.",
                                                "format": "int64",
                                                "minimum": -9223372036854776000,
                                                "maximum": 9223372036854776000
                                            },
                                            "ImageUniqueID": {
                                                "type": "string",
                                                "description": "Gets or sets the image unique ID."
                                            },
                                            "LensMake": {
                                                "type": "string",
                                                "description": "Gets or sets the lens manufacturer."
                                            },
                                            "LensModel": {
                                                "type": "string",
                                                "description": "Gets or sets the lens model."
                                            },
                                            "LensSerialNumber": {
                                                "type": "string",
                                                "description": "Gets or sets the lens serial number."
                                            },
                                            "LensSpecification": {
                                                "type": "array",
                                                "description": "Gets or sets the lens specification.",
                                                "items": {
                                                    "type": "number",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                }
                                            },
                                            "LightSource": {
                                                "type": "string",
                                                "description": "Gets or sets the light source."
                                            },
                                            "MakerNoteRawData": {
                                                "type": "string",
                                                "description": "Gets or sets the maker note raw data.",
                                                "format": "byte",
                                                "pattern": "^[\\w\\d+\\/=]*$"
                                            },
                                            "MaxApertureValue": {
                                                "type": "number",
                                                "description": "Gets or sets the max aperture.",
                                                "format": "double",
                                                "minimum": -1.7976931348623157e+308,
                                                "maximum": 1.7976931348623157e+308
                                            },
                                            "MeteringMode": {
                                                "type": "string",
                                                "description": "Gets or sets the metering mode."
                                            },
                                            "OECF": {
                                                "type": "string",
                                                "description": "Gets or sets the OECF (Opto-Electric Conversion Function).",
                                                "format": "byte",
                                                "pattern": "^[\\w\\d+\\/=]*$"
                                            },
                                            "PixelXDimension": {
                                                "type": "integer",
                                                "description": "Gets or sets the pixel X dimension.",
                                                "format": "int64",
                                                "minimum": -9223372036854776000,
                                                "maximum": 9223372036854776000
                                            },
                                            "PixelYDimension": {
                                                "type": "integer",
                                                "description": "Gets or sets the pixel Y dimension.",
                                                "format": "int64",
                                                "minimum": -9223372036854776000,
                                                "maximum": 9223372036854776000
                                            },
                                            "RecommendedExposureIndex": {
                                                "type": "integer",
                                                "description": "Gets or sets the recommended exposure index.",
                                                "format": "int64",
                                                "minimum": -9223372036854776000,
                                                "maximum": 9223372036854776000
                                            },
                                            "RelatedSoundFile": {
                                                "type": "string",
                                                "description": "Gets or sets the related sound file."
                                            },
                                            "Saturation": {
                                                "type": "string",
                                                "description": "Gets or sets the saturation."
                                            },
                                            "SceneCaptureType": {
                                                "type": "string",
                                                "description": "Gets or sets the scene capture type."
                                            },
                                            "SceneType": {
                                                "type": "integer",
                                                "description": "Gets or sets the scene type.",
                                                "format": "byte",
                                                "pattern": "^[\\w\\d+\\/=]*$"
                                            },
                                            "SensingMethod": {
                                                "type": "string",
                                                "description": "Gets or sets the sensing method."
                                            },
                                            "SensitivityType": {
                                                "type": "integer",
                                                "description": "Gets or sets the sensitivity type."
                                            },
                                            "Sharpness": {
                                                "type": "integer",
                                                "description": "Gets or sets the sharpness."
                                            },
                                            "ShutterSpeedValue": {
                                                "type": "number",
                                                "description": "Gets or sets the shutter speed.",
                                                "format": "double",
                                                "minimum": -1.7976931348623157e+308,
                                                "maximum": 1.7976931348623157e+308
                                            },
                                            "SpatialFrequencyResponse": {
                                                "type": "string",
                                                "description": "Gets or sets the spatial frequency response.",
                                                "format": "byte",
                                                "pattern": "^[\\w\\d+\\/=]*$"
                                            },
                                            "SpectralSensitivity": {
                                                "type": "string",
                                                "description": "Gets or sets the spectral sensitivity."
                                            },
                                            "StandardOutputSensitivity": {
                                                "type": "integer",
                                                "description": "Gets or sets the standard output sensitivity.",
                                                "format": "int64",
                                                "minimum": -9223372036854776000,
                                                "maximum": 9223372036854776000
                                            },
                                            "SubjectArea": {
                                                "type": "array",
                                                "description": "Gets or sets the subject area.",
                                                "items": {
                                                    "type": "integer"
                                                }
                                            },
                                            "SubjectDistance": {
                                                "type": "number",
                                                "description": "Gets or sets the subject distance.",
                                                "format": "double",
                                                "minimum": -1.7976931348623157e+308,
                                                "maximum": 1.7976931348623157e+308
                                            },
                                            "SubjectDistanceRange": {
                                                "type": "string",
                                                "description": "Gets or sets the subject distance range."
                                            },
                                            "SubjectLocation": {
                                                "type": "array",
                                                "description": "Gets or sets the subject location.",
                                                "items": {
                                                    "type": "integer"
                                                }
                                            },
                                            "SubsecTime": {
                                                "type": "string",
                                                "description": "Gets or sets the fractions of seconds for the DateTime tag."
                                            },
                                            "SubsecTimeDigitized": {
                                                "type": "string",
                                                "description": "Gets or sets the fractions of seconds for the DateTimeDigitized tag."
                                            },
                                            "SubsecTimeOriginal": {
                                                "type": "string",
                                                "description": "Gets or sets the fractions of seconds for the DateTimeOriginal tag."
                                            },
                                            "UserComment": {
                                                "type": "string",
                                                "description": "Gets or sets the user comment."
                                            },
                                            "WhiteBalance": {
                                                "type": "string",
                                                "description": "Gets or sets the white balance."
                                            },
                                            "WhitePoint": {
                                                "type": "array",
                                                "description": "Gets or sets the white point.",
                                                "items": {
                                                    "type": "number",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "description": "Represents EXIF data for JPEG",
                                        "additionalProperties": false,
                                        "required": [
                                            "XResolution",
                                            "YResolution"
                                        ],
                                        "properties": {
                                            "Artist": {
                                                "type": "string",
                                                "description": "Gets or sets the artist."
                                            },
                                            "Copyright": {
                                                "type": "string",
                                                "description": "Gets or sets the copyright info."
                                            },
                                            "DateTime": {
                                                "type": "string",
                                                "description": "Gets or sets the date and time."
                                            },
                                            "ImageDescription": {
                                                "type": "string",
                                                "description": "Gets or sets the image description."
                                            },
                                            "Make": {
                                                "type": "string",
                                                "description": "Gets or sets the manufacturer."
                                            },
                                            "Model": {
                                                "type": "string",
                                                "description": "Gets or sets the model."
                                            },
                                            "Orientation": {
                                                "type": "string",
                                                "description": "Gets or sets the orientation."
                                            },
                                            "PrimaryChromaticities": {
                                                "type": "array",
                                                "description": "Gets or sets the primary chromaticities.",
                                                "items": {
                                                    "type": "number",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                }
                                            },
                                            "ReferenceBlackWhite": {
                                                "type": "array",
                                                "description": "Gets or sets the reference black and white.",
                                                "items": {
                                                    "type": "number",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                }
                                            },
                                            "ResolutionUnit": {
                                                "type": "string",
                                                "description": "Gets or sets the resolution unit."
                                            },
                                            "Software": {
                                                "type": "string",
                                                "description": "Gets or sets the software."
                                            },
                                            "TransferFunction": {
                                                "type": "array",
                                                "description": "Gets or sets the transfer function.",
                                                "items": {
                                                    "type": "integer"
                                                }
                                            },
                                            "XResolution": {
                                                "type": "number",
                                                "description": "Gets or sets the X resolution.",
                                                "format": "double",
                                                "minimum": -1.7976931348623157e+308,
                                                "maximum": 1.7976931348623157e+308
                                            },
                                            "YCbCrCoefficients": {
                                                "type": "array",
                                                "description": "Gets or sets the YCbCr coefficients.",
                                                "items": {
                                                    "type": "number",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                }
                                            },
                                            "YCbCrPositioning": {
                                                "type": "string",
                                                "description": "Gets or sets the YCbCr positioning."
                                            },
                                            "YResolution": {
                                                "type": "number",
                                                "description": "Gets or sets the Y resolution.",
                                                "format": "double",
                                                "minimum": -1.7976931348623157e+308,
                                                "maximum": 1.7976931348623157e+308
                                            }
                                        }
                                    }
                                ]
                            },
                            "JpegJfifData": {
                                "type": "object",
                                "description": "Represents JFIF data.",
                                "additionalProperties": false,
                                "required": [
                                    "Version",
                                    "XDensity",
                                    "YDensity"
                                ],
                                "properties": {
                                    "DensityUnits": {
                                        "type": "string",
                                        "description": "Gets or sets the density units."
                                    },
                                    "Version": {
                                        "type": "integer",
                                        "description": "Gets or sets the version."
                                    },
                                    "XDensity": {
                                        "type": "integer",
                                        "description": "Gets or sets the X density."
                                    },
                                    "YDensity": {
                                        "type": "integer",
                                        "description": "Gets or sets the Y density."
                                    }
                                }
                            }
                        }
                    },
                    "PngProperties": {
                        "type": "object",
                        "description": "Represents information about image in PNG format.",
                        "additionalProperties": false
                    },
                    "TiffProperties": {
                        "type": "object",
                        "description": "Represents properties of TIFF image.",
                        "additionalProperties": false,
                        "properties": {
                            "Frames": {
                                "type": "array",
                                "description": "Frames information.",
                                "items": {
                                    "type": "object",
                                    "description": "Represents information about TIFF frame.",
                                    "additionalProperties": false,
                                    "required": [
                                        "Height",
                                        "Width"
                                    ],
                                    "properties": {
                                        "FrameOptions": {
                                            "type": "object",
                                            "description": "Represents options for TIFF frame.",
                                            "additionalProperties": false,
                                            "required": [
                                                "IsValid",
                                                "RowsPerStrip",
                                                "SamplesPerPixel",
                                                "TotalPages",
                                                "Xposition",
                                                "Xresolution",
                                                "Yposition",
                                                "Yresolution",
                                                "ImageLength",
                                                "ImageWidth",
                                                "ValidTagCount",
                                                "BitsPerPixel"
                                            ],
                                            "properties": {
                                                "IsValid": {
                                                    "type": "boolean",
                                                    "description": "Gets or sets a value indicating whether TIFF image has valid data."
                                                },
                                                "Artist": {
                                                    "type": "string",
                                                    "description": "Gets or sets the artist."
                                                },
                                                "ByteOrder": {
                                                    "type": "string",
                                                    "description": "Gets or sets the byte order."
                                                },
                                                "BitsPerSample": {
                                                    "type": "array",
                                                    "description": "Gets or sets the bits per sample.",
                                                    "items": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "Compression": {
                                                    "type": "string",
                                                    "description": "Gets or sets the compression."
                                                },
                                                "Copyright": {
                                                    "type": "string",
                                                    "description": "Gets or sets the copyright info."
                                                },
                                                "ColorMap": {
                                                    "type": "array",
                                                    "description": "Gets or sets the color map.",
                                                    "items": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "DateTime": {
                                                    "type": "string",
                                                    "description": "Gets or sets the date and time."
                                                },
                                                "DocumentName": {
                                                    "type": "string",
                                                    "description": "Gets or sets the document name."
                                                },
                                                "AlphaStorage": {
                                                    "type": "string",
                                                    "description": "Gets or sets the alpha storage."
                                                },
                                                "FillOrder": {
                                                    "type": "string",
                                                    "description": "Gets or sets the fill order."
                                                },
                                                "HalfToneHints": {
                                                    "type": "array",
                                                    "description": "Gets or sets the half-tone hints.",
                                                    "items": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "ImageDescription": {
                                                    "type": "string",
                                                    "description": "Gets or sets the image description."
                                                },
                                                "InkNames": {
                                                    "type": "string",
                                                    "description": "Gets or sets the ink names."
                                                },
                                                "ScannerManufacturer": {
                                                    "type": "string",
                                                    "description": "Gets or sets the scanner manufacturer."
                                                },
                                                "MaxSampleValue": {
                                                    "type": "array",
                                                    "description": "Gets or sets the max sample value.",
                                                    "items": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "MinSampleValue": {
                                                    "type": "array",
                                                    "description": "Gets or sets the min sample value.",
                                                    "items": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "ScannerModel": {
                                                    "type": "string",
                                                    "description": "Gets or sets the scanner model."
                                                },
                                                "PageName": {
                                                    "type": "string",
                                                    "description": "Gets or sets the page name."
                                                },
                                                "Orientation": {
                                                    "type": "string",
                                                    "description": "Gets or sets the orientation."
                                                },
                                                "PageNumber": {
                                                    "type": "array",
                                                    "description": "Gets or sets the page number.",
                                                    "items": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "Photometric": {
                                                    "type": "string",
                                                    "description": "Gets or sets the photometric interpretation."
                                                },
                                                "PlanarConfiguration": {
                                                    "type": "string",
                                                    "description": "Gets or sets the planar configuration."
                                                },
                                                "ResolutionUnit": {
                                                    "type": "string",
                                                    "description": "Gets or sets the resolution unit."
                                                },
                                                "RowsPerStrip": {
                                                    "type": "integer",
                                                    "description": "Gets or sets the rows per strip.",
                                                    "format": "int64",
                                                    "minimum": -9223372036854776000,
                                                    "maximum": 9223372036854776000
                                                },
                                                "SampleFormat": {
                                                    "type": "array",
                                                    "description": "Gets or sets the sample format.",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "SamplesPerPixel": {
                                                    "type": "integer",
                                                    "description": "Gets or sets the samples per pixel."
                                                },
                                                "SmaxSampleValue": {
                                                    "type": "array",
                                                    "description": "Gets or sets the Smax sample value.",
                                                    "items": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "minimum": -9223372036854776000,
                                                        "maximum": 9223372036854776000
                                                    }
                                                },
                                                "SminSampleValue": {
                                                    "type": "array",
                                                    "description": "Gets or sets the Smin sample value.",
                                                    "items": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "minimum": -9223372036854776000,
                                                        "maximum": 9223372036854776000
                                                    }
                                                },
                                                "SoftwareType": {
                                                    "type": "string",
                                                    "description": "Gets or sets the software type."
                                                },
                                                "StripByteCounts": {
                                                    "type": "array",
                                                    "description": "Gets or sets the strip byte counts.",
                                                    "items": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "minimum": -9223372036854776000,
                                                        "maximum": 9223372036854776000
                                                    }
                                                },
                                                "StripOffsets": {
                                                    "type": "array",
                                                    "description": "Gets or sets the strip offsets.",
                                                    "items": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "minimum": -9223372036854776000,
                                                        "maximum": 9223372036854776000
                                                    }
                                                },
                                                "SubFileType": {
                                                    "type": "string",
                                                    "description": "Gets or sets the subfile type."
                                                },
                                                "TargetPrinter": {
                                                    "type": "string",
                                                    "description": "Gets or sets the target printer."
                                                },
                                                "Threshholding": {
                                                    "type": "string",
                                                    "description": "Gets or sets the threshholding."
                                                },
                                                "TotalPages": {
                                                    "type": "integer",
                                                    "description": "Gets or sets the total pages count."
                                                },
                                                "Xposition": {
                                                    "type": "number",
                                                    "description": "Gets or sets the X position.",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "Xresolution": {
                                                    "type": "number",
                                                    "description": "Gets or sets the X resolution.",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "Yposition": {
                                                    "type": "number",
                                                    "description": "Gets or sets the Y position.",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "Yresolution": {
                                                    "type": "number",
                                                    "description": "Gets or sets the Y resolution.",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "FaxT4Options": {
                                                    "type": "string",
                                                    "description": "Gets or sets the FaxT4 Options."
                                                },
                                                "Predictor": {
                                                    "type": "string",
                                                    "description": "Gets or sets the predictor (a mathematical operator that is applied to the image data before an encoding scheme is applied)."
                                                },
                                                "ImageLength": {
                                                    "type": "integer",
                                                    "description": "Gets or sets the image length.",
                                                    "format": "int64",
                                                    "minimum": -9223372036854776000,
                                                    "maximum": 9223372036854776000
                                                },
                                                "ImageWidth": {
                                                    "type": "integer",
                                                    "description": "Gets or sets the image width.",
                                                    "format": "int64",
                                                    "minimum": -9223372036854776000,
                                                    "maximum": 9223372036854776000
                                                },
                                                "ValidTagCount": {
                                                    "type": "integer",
                                                    "description": "Gets or sets the valid tag count.",
                                                    "format": "int32",
                                                    "minimum": -2147483648,
                                                    "maximum": 2147483647
                                                },
                                                "BitsPerPixel": {
                                                    "type": "integer",
                                                    "description": "Gets or sets the bits per pixel.",
                                                    "format": "int32",
                                                    "minimum": -2147483648,
                                                    "maximum": 2147483647
                                                }
                                            }
                                        },
                                        "Height": {
                                            "type": "integer",
                                            "description": "Gets or sets the frame height.",
                                            "format": "int32",
                                            "minimum": -2147483648,
                                            "maximum": 2147483647
                                        },
                                        "Width": {
                                            "type": "integer",
                                            "description": "Gets or sets the frame width.",
                                            "format": "int32",
                                            "minimum": -2147483648,
                                            "maximum": 2147483647
                                        },
                                        "ExifData": {
                                            "type": "object",
                                            "description": "Represents common EXIF data section.",
                                            "additionalProperties": false,
                                            "required": [
                                                "ApertureValue",
                                                "BrightnessValue",
                                                "CompressedBitsPerPixel",
                                                "DigitalZoomRatio",
                                                "ExposureBiasValue",
                                                "ExposureIndex",
                                                "ExposureTime",
                                                "FNumber",
                                                "FlashEnergy",
                                                "FocalLength",
                                                "FocalLengthIn35MmFilm",
                                                "FocalPlaneXResolution",
                                                "FocalPlaneYResolution",
                                                "GPSAltitude",
                                                "GPSDOP",
                                                "GPSDestBearing",
                                                "GPSDestDistance",
                                                "GPSDifferential",
                                                "GPSImgDirection",
                                                "GPSSpeed",
                                                "Gamma",
                                                "ISOSpeed",
                                                "ISOSpeedLatitudeYYY",
                                                "ISOSpeedLatitudeZZZ",
                                                "PhotographicSensitivity",
                                                "MaxApertureValue",
                                                "PixelXDimension",
                                                "PixelYDimension",
                                                "RecommendedExposureIndex",
                                                "SceneType",
                                                "SensitivityType",
                                                "Sharpness",
                                                "ShutterSpeedValue",
                                                "StandardOutputSensitivity",
                                                "SubjectDistance"
                                            ],
                                            "properties": {
                                                "ApertureValue": {
                                                    "type": "number",
                                                    "description": "Gets or sets the aperture.",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "BodySerialNumber": {
                                                    "type": "string",
                                                    "description": "Gets or sets the body serial number."
                                                },
                                                "BrightnessValue": {
                                                    "type": "number",
                                                    "description": "Gets or sets the brightness.",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "CFAPattern": {
                                                    "type": "string",
                                                    "description": "Gets or sets the CFA pattern.",
                                                    "format": "byte",
                                                    "pattern": "^[\\w\\d+\\/=]*$"
                                                },
                                                "CameraOwnerName": {
                                                    "type": "string",
                                                    "description": "Gets or sets the camera owner name."
                                                },
                                                "ColorSpace": {
                                                    "type": "string",
                                                    "description": "Gets or sets the color space."
                                                },
                                                "ComponentsConfiguration": {
                                                    "type": "string",
                                                    "description": "Gets or sets the components configuration.",
                                                    "format": "byte",
                                                    "pattern": "^[\\w\\d+\\/=]*$"
                                                },
                                                "CompressedBitsPerPixel": {
                                                    "type": "number",
                                                    "description": "Gets or sets the compressed bits per pixel.",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "Contrast": {
                                                    "type": "string",
                                                    "description": "Gets or sets the contrast."
                                                },
                                                "CustomRendered": {
                                                    "type": "string",
                                                    "description": "Gets or sets the value indincating if custom rendering is performed."
                                                },
                                                "DateTimeDigitized": {
                                                    "type": "string",
                                                    "description": "Gets or sets date and time when image was digitized."
                                                },
                                                "DateTimeOriginal": {
                                                    "type": "string",
                                                    "description": "Gets or sets date and time of the original image."
                                                },
                                                "DeviceSettingDescription": {
                                                    "type": "string",
                                                    "description": "Gets or sets the device setting description.",
                                                    "format": "byte",
                                                    "pattern": "^[\\w\\d+\\/=]*$"
                                                },
                                                "DigitalZoomRatio": {
                                                    "type": "number",
                                                    "description": "Gets or sets the digital zoom ratio.",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "ExifVersion": {
                                                    "type": "string",
                                                    "description": "Gets or sets EXIF version.",
                                                    "format": "byte",
                                                    "pattern": "^[\\w\\d+\\/=]*$"
                                                },
                                                "ExposureBiasValue": {
                                                    "type": "number",
                                                    "description": "Gets or sets the exposure bias.",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "ExposureIndex": {
                                                    "type": "number",
                                                    "description": "Gets or sets the exposure index.",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "ExposureMode": {
                                                    "type": "string",
                                                    "description": "Gets or sets the exposure mode."
                                                },
                                                "ExposureProgram": {
                                                    "type": "string",
                                                    "description": "Gets or sets the exposure program."
                                                },
                                                "ExposureTime": {
                                                    "type": "number",
                                                    "description": "Gets or sets the exposure time.",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "FNumber": {
                                                    "type": "number",
                                                    "description": "Gets or sets the focal number.",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "FileSource": {
                                                    "type": "string",
                                                    "description": "Gets or sets the file source."
                                                },
                                                "Flash": {
                                                    "type": "string",
                                                    "description": "Gets or sets the flash."
                                                },
                                                "FlashEnergy": {
                                                    "type": "number",
                                                    "description": "Gets or sets the flash energy.",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "FlashpixVersion": {
                                                    "type": "string",
                                                    "description": "Gets or sets the Flashpix version.",
                                                    "format": "byte",
                                                    "pattern": "^[\\w\\d+\\/=]*$"
                                                },
                                                "FocalLength": {
                                                    "type": "number",
                                                    "description": "Gets or sets the focal length.",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "FocalLengthIn35MmFilm": {
                                                    "type": "integer",
                                                    "description": "Gets or sets the focal length in 35mm film."
                                                },
                                                "FocalPlaneResolutionUnit": {
                                                    "type": "string",
                                                    "description": "Gets or sets the focal plane resolution unit."
                                                },
                                                "FocalPlaneXResolution": {
                                                    "type": "number",
                                                    "description": "Gets or sets the focal plane X resolution.",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "FocalPlaneYResolution": {
                                                    "type": "number",
                                                    "description": "Gets or sets the focal plane Y resolution.",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "GPSAltitude": {
                                                    "type": "number",
                                                    "description": "Gets or sets the GPS altitude.",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "GPSAltitudeRef": {
                                                    "type": "string",
                                                    "description": "Gets or sets the GPS altitude reference (if it's above or below sea level)."
                                                },
                                                "GPSAreaInformation": {
                                                    "type": "string",
                                                    "description": "Gets or sets the GPS area information.",
                                                    "format": "byte",
                                                    "pattern": "^[\\w\\d+\\/=]*$"
                                                },
                                                "GPSDOP": {
                                                    "type": "number",
                                                    "description": "Gets or sets the GPS DOP (data degree of precision).",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "GPSDestBearing": {
                                                    "type": "number",
                                                    "description": "Gets or sets the GPS bearing of the destination.",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "GPSDestBearingRef": {
                                                    "type": "string",
                                                    "description": "Gets or sets the GPS reference unit for bearing of the destination."
                                                },
                                                "GPSDestDistance": {
                                                    "type": "number",
                                                    "description": "Gets or sets the GPS destination distance.",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "GPSDestDistanceRef": {
                                                    "type": "string",
                                                    "description": "Gets or sets the GPS reference unit for destination distance."
                                                },
                                                "GPSDestLatitude": {
                                                    "type": "array",
                                                    "description": "Gets or sets the GPS destination latitude.",
                                                    "items": {
                                                        "type": "number",
                                                        "format": "double",
                                                        "minimum": -1.7976931348623157e+308,
                                                        "maximum": 1.7976931348623157e+308
                                                    }
                                                },
                                                "GPSDestLatitudeRef": {
                                                    "type": "string",
                                                    "description": "Gets or sets the GPS reference destination latitude (north or south)."
                                                },
                                                "GPSDestLongitude": {
                                                    "type": "array",
                                                    "description": "Gets or sets the GPS destination longtitude.",
                                                    "items": {
                                                        "type": "number",
                                                        "format": "double",
                                                        "minimum": -1.7976931348623157e+308,
                                                        "maximum": 1.7976931348623157e+308
                                                    }
                                                },
                                                "GPSDestLongitudeRef": {
                                                    "type": "string",
                                                    "description": "Gets or sets the GPS reference destination longtitude (east or west)."
                                                },
                                                "GPSDifferential": {
                                                    "type": "integer",
                                                    "description": "Gets or sets the GPS differential."
                                                },
                                                "GPSImgDirection": {
                                                    "type": "number",
                                                    "description": "Gets or sets the GPS image direction.",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "GPSImgDirectionRef": {
                                                    "type": "string",
                                                    "description": "Gets or sets the GPS reference image direction."
                                                },
                                                "GPSDateStamp": {
                                                    "type": "string",
                                                    "description": "Gets or sets the GPS date stamp."
                                                },
                                                "GPSLatitude": {
                                                    "type": "array",
                                                    "description": "Gets or sets the GPS latitude.",
                                                    "items": {
                                                        "type": "number",
                                                        "format": "double",
                                                        "minimum": -1.7976931348623157e+308,
                                                        "maximum": 1.7976931348623157e+308
                                                    }
                                                },
                                                "GPSLatitudeRef": {
                                                    "type": "string",
                                                    "description": "Gets or sets the GPS latitude reference (north or south)."
                                                },
                                                "GPSLongitude": {
                                                    "type": "array",
                                                    "description": "Gets or sets the GPS longitude.",
                                                    "items": {
                                                        "type": "number",
                                                        "format": "double",
                                                        "minimum": -1.7976931348623157e+308,
                                                        "maximum": 1.7976931348623157e+308
                                                    }
                                                },
                                                "GPSLongitudeRef": {
                                                    "type": "string",
                                                    "description": "Gets or sets the GPS longitude reference (east or west)."
                                                },
                                                "GPSMapDatum": {
                                                    "type": "string",
                                                    "description": "Gets or sets the geodetic survey data used by the GPS receiver."
                                                },
                                                "GPSMeasureMode": {
                                                    "type": "string",
                                                    "description": "Gets or sets the GPS measure mode."
                                                },
                                                "GPSProcessingMethod": {
                                                    "type": "string",
                                                    "description": "Gets or setsthe GPS processing method.",
                                                    "format": "byte",
                                                    "pattern": "^[\\w\\d+\\/=]*$"
                                                },
                                                "GPSSatellites": {
                                                    "type": "string",
                                                    "description": "Gets or sets the GPS satellites info."
                                                },
                                                "GPSSpeed": {
                                                    "type": "number",
                                                    "description": "Gets or sets the GPS speed.",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "GPSSpeedRef": {
                                                    "type": "string",
                                                    "description": "Gets or sets the GPS speed reference unit."
                                                },
                                                "GPSStatus": {
                                                    "type": "string",
                                                    "description": "Gets or sets the GPS status."
                                                },
                                                "GPSTimestamp": {
                                                    "type": "array",
                                                    "description": "Gets or sets the GPS times tamp.",
                                                    "items": {
                                                        "type": "number",
                                                        "format": "double",
                                                        "minimum": -1.7976931348623157e+308,
                                                        "maximum": 1.7976931348623157e+308
                                                    }
                                                },
                                                "GPSTrack": {
                                                    "type": "string",
                                                    "description": "Gets or sets the GPS track."
                                                },
                                                "GPSTrackRef": {
                                                    "type": "string",
                                                    "description": "Gets or sets the GPS track reference."
                                                },
                                                "GPSVersionID": {
                                                    "type": "string",
                                                    "description": "Gets or sets the GPS version ID.",
                                                    "format": "byte",
                                                    "pattern": "^[\\w\\d+\\/=]*$"
                                                },
                                                "GainControl": {
                                                    "type": "string",
                                                    "description": "Gets or sets the gain control."
                                                },
                                                "Gamma": {
                                                    "type": "number",
                                                    "description": "Gets or sets the gamma.",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "ISOSpeed": {
                                                    "type": "integer",
                                                    "description": "Gets or sets the ISO speed.",
                                                    "format": "int64",
                                                    "minimum": -9223372036854776000,
                                                    "maximum": 9223372036854776000
                                                },
                                                "ISOSpeedLatitudeYYY": {
                                                    "type": "integer",
                                                    "description": "Gets or sets the ISO speed latitude YYY value.",
                                                    "format": "int64",
                                                    "minimum": -9223372036854776000,
                                                    "maximum": 9223372036854776000
                                                },
                                                "ISOSpeedLatitudeZZZ": {
                                                    "type": "integer",
                                                    "description": "Gets or sets the ISO speed latitude ZZZ value.",
                                                    "format": "int64",
                                                    "minimum": -9223372036854776000,
                                                    "maximum": 9223372036854776000
                                                },
                                                "PhotographicSensitivity": {
                                                    "type": "integer",
                                                    "description": "Gets or sets the photographic sensitivity.",
                                                    "format": "int64",
                                                    "minimum": -9223372036854776000,
                                                    "maximum": 9223372036854776000
                                                },
                                                "ImageUniqueID": {
                                                    "type": "string",
                                                    "description": "Gets or sets the image unique ID."
                                                },
                                                "LensMake": {
                                                    "type": "string",
                                                    "description": "Gets or sets the lens manufacturer."
                                                },
                                                "LensModel": {
                                                    "type": "string",
                                                    "description": "Gets or sets the lens model."
                                                },
                                                "LensSerialNumber": {
                                                    "type": "string",
                                                    "description": "Gets or sets the lens serial number."
                                                },
                                                "LensSpecification": {
                                                    "type": "array",
                                                    "description": "Gets or sets the lens specification.",
                                                    "items": {
                                                        "type": "number",
                                                        "format": "double",
                                                        "minimum": -1.7976931348623157e+308,
                                                        "maximum": 1.7976931348623157e+308
                                                    }
                                                },
                                                "LightSource": {
                                                    "type": "string",
                                                    "description": "Gets or sets the light source."
                                                },
                                                "MakerNoteRawData": {
                                                    "type": "string",
                                                    "description": "Gets or sets the maker note raw data.",
                                                    "format": "byte",
                                                    "pattern": "^[\\w\\d+\\/=]*$"
                                                },
                                                "MaxApertureValue": {
                                                    "type": "number",
                                                    "description": "Gets or sets the max aperture.",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "MeteringMode": {
                                                    "type": "string",
                                                    "description": "Gets or sets the metering mode."
                                                },
                                                "OECF": {
                                                    "type": "string",
                                                    "description": "Gets or sets the OECF (Opto-Electric Conversion Function).",
                                                    "format": "byte",
                                                    "pattern": "^[\\w\\d+\\/=]*$"
                                                },
                                                "PixelXDimension": {
                                                    "type": "integer",
                                                    "description": "Gets or sets the pixel X dimension.",
                                                    "format": "int64",
                                                    "minimum": -9223372036854776000,
                                                    "maximum": 9223372036854776000
                                                },
                                                "PixelYDimension": {
                                                    "type": "integer",
                                                    "description": "Gets or sets the pixel Y dimension.",
                                                    "format": "int64",
                                                    "minimum": -9223372036854776000,
                                                    "maximum": 9223372036854776000
                                                },
                                                "RecommendedExposureIndex": {
                                                    "type": "integer",
                                                    "description": "Gets or sets the recommended exposure index.",
                                                    "format": "int64",
                                                    "minimum": -9223372036854776000,
                                                    "maximum": 9223372036854776000
                                                },
                                                "RelatedSoundFile": {
                                                    "type": "string",
                                                    "description": "Gets or sets the related sound file."
                                                },
                                                "Saturation": {
                                                    "type": "string",
                                                    "description": "Gets or sets the saturation."
                                                },
                                                "SceneCaptureType": {
                                                    "type": "string",
                                                    "description": "Gets or sets the scene capture type."
                                                },
                                                "SceneType": {
                                                    "type": "integer",
                                                    "description": "Gets or sets the scene type.",
                                                    "format": "byte",
                                                    "pattern": "^[\\w\\d+\\/=]*$"
                                                },
                                                "SensingMethod": {
                                                    "type": "string",
                                                    "description": "Gets or sets the sensing method."
                                                },
                                                "SensitivityType": {
                                                    "type": "integer",
                                                    "description": "Gets or sets the sensitivity type."
                                                },
                                                "Sharpness": {
                                                    "type": "integer",
                                                    "description": "Gets or sets the sharpness."
                                                },
                                                "ShutterSpeedValue": {
                                                    "type": "number",
                                                    "description": "Gets or sets the shutter speed.",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "SpatialFrequencyResponse": {
                                                    "type": "string",
                                                    "description": "Gets or sets the spatial frequency response.",
                                                    "format": "byte",
                                                    "pattern": "^[\\w\\d+\\/=]*$"
                                                },
                                                "SpectralSensitivity": {
                                                    "type": "string",
                                                    "description": "Gets or sets the spectral sensitivity."
                                                },
                                                "StandardOutputSensitivity": {
                                                    "type": "integer",
                                                    "description": "Gets or sets the standard output sensitivity.",
                                                    "format": "int64",
                                                    "minimum": -9223372036854776000,
                                                    "maximum": 9223372036854776000
                                                },
                                                "SubjectArea": {
                                                    "type": "array",
                                                    "description": "Gets or sets the subject area.",
                                                    "items": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "SubjectDistance": {
                                                    "type": "number",
                                                    "description": "Gets or sets the subject distance.",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "SubjectDistanceRange": {
                                                    "type": "string",
                                                    "description": "Gets or sets the subject distance range."
                                                },
                                                "SubjectLocation": {
                                                    "type": "array",
                                                    "description": "Gets or sets the subject location.",
                                                    "items": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "SubsecTime": {
                                                    "type": "string",
                                                    "description": "Gets or sets the fractions of seconds for the DateTime tag."
                                                },
                                                "SubsecTimeDigitized": {
                                                    "type": "string",
                                                    "description": "Gets or sets the fractions of seconds for the DateTimeDigitized tag."
                                                },
                                                "SubsecTimeOriginal": {
                                                    "type": "string",
                                                    "description": "Gets or sets the fractions of seconds for the DateTimeOriginal tag."
                                                },
                                                "UserComment": {
                                                    "type": "string",
                                                    "description": "Gets or sets the user comment."
                                                },
                                                "WhiteBalance": {
                                                    "type": "string",
                                                    "description": "Gets or sets the white balance."
                                                },
                                                "WhitePoint": {
                                                    "type": "array",
                                                    "description": "Gets or sets the white point.",
                                                    "items": {
                                                        "type": "number",
                                                        "format": "double",
                                                        "minimum": -1.7976931348623157e+308,
                                                        "maximum": 1.7976931348623157e+308
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "ByteOrder": {
                                "type": "string",
                                "description": "Gets or sets the byte order."
                            },
                            "ExifData": {
                                "type": "object",
                                "description": "Represents common EXIF data section.",
                                "additionalProperties": false,
                                "required": [
                                    "ApertureValue",
                                    "BrightnessValue",
                                    "CompressedBitsPerPixel",
                                    "DigitalZoomRatio",
                                    "ExposureBiasValue",
                                    "ExposureIndex",
                                    "ExposureTime",
                                    "FNumber",
                                    "FlashEnergy",
                                    "FocalLength",
                                    "FocalLengthIn35MmFilm",
                                    "FocalPlaneXResolution",
                                    "FocalPlaneYResolution",
                                    "GPSAltitude",
                                    "GPSDOP",
                                    "GPSDestBearing",
                                    "GPSDestDistance",
                                    "GPSDifferential",
                                    "GPSImgDirection",
                                    "GPSSpeed",
                                    "Gamma",
                                    "ISOSpeed",
                                    "ISOSpeedLatitudeYYY",
                                    "ISOSpeedLatitudeZZZ",
                                    "PhotographicSensitivity",
                                    "MaxApertureValue",
                                    "PixelXDimension",
                                    "PixelYDimension",
                                    "RecommendedExposureIndex",
                                    "SceneType",
                                    "SensitivityType",
                                    "Sharpness",
                                    "ShutterSpeedValue",
                                    "StandardOutputSensitivity",
                                    "SubjectDistance"
                                ],
                                "properties": {
                                    "ApertureValue": {
                                        "type": "number",
                                        "description": "Gets or sets the aperture.",
                                        "format": "double",
                                        "minimum": -1.7976931348623157e+308,
                                        "maximum": 1.7976931348623157e+308
                                    },
                                    "BodySerialNumber": {
                                        "type": "string",
                                        "description": "Gets or sets the body serial number."
                                    },
                                    "BrightnessValue": {
                                        "type": "number",
                                        "description": "Gets or sets the brightness.",
                                        "format": "double",
                                        "minimum": -1.7976931348623157e+308,
                                        "maximum": 1.7976931348623157e+308
                                    },
                                    "CFAPattern": {
                                        "type": "string",
                                        "description": "Gets or sets the CFA pattern.",
                                        "format": "byte",
                                        "pattern": "^[\\w\\d+\\/=]*$"
                                    },
                                    "CameraOwnerName": {
                                        "type": "string",
                                        "description": "Gets or sets the camera owner name."
                                    },
                                    "ColorSpace": {
                                        "type": "string",
                                        "description": "Gets or sets the color space."
                                    },
                                    "ComponentsConfiguration": {
                                        "type": "string",
                                        "description": "Gets or sets the components configuration.",
                                        "format": "byte",
                                        "pattern": "^[\\w\\d+\\/=]*$"
                                    },
                                    "CompressedBitsPerPixel": {
                                        "type": "number",
                                        "description": "Gets or sets the compressed bits per pixel.",
                                        "format": "double",
                                        "minimum": -1.7976931348623157e+308,
                                        "maximum": 1.7976931348623157e+308
                                    },
                                    "Contrast": {
                                        "type": "string",
                                        "description": "Gets or sets the contrast."
                                    },
                                    "CustomRendered": {
                                        "type": "string",
                                        "description": "Gets or sets the value indincating if custom rendering is performed."
                                    },
                                    "DateTimeDigitized": {
                                        "type": "string",
                                        "description": "Gets or sets date and time when image was digitized."
                                    },
                                    "DateTimeOriginal": {
                                        "type": "string",
                                        "description": "Gets or sets date and time of the original image."
                                    },
                                    "DeviceSettingDescription": {
                                        "type": "string",
                                        "description": "Gets or sets the device setting description.",
                                        "format": "byte",
                                        "pattern": "^[\\w\\d+\\/=]*$"
                                    },
                                    "DigitalZoomRatio": {
                                        "type": "number",
                                        "description": "Gets or sets the digital zoom ratio.",
                                        "format": "double",
                                        "minimum": -1.7976931348623157e+308,
                                        "maximum": 1.7976931348623157e+308
                                    },
                                    "ExifVersion": {
                                        "type": "string",
                                        "description": "Gets or sets EXIF version.",
                                        "format": "byte",
                                        "pattern": "^[\\w\\d+\\/=]*$"
                                    },
                                    "ExposureBiasValue": {
                                        "type": "number",
                                        "description": "Gets or sets the exposure bias.",
                                        "format": "double",
                                        "minimum": -1.7976931348623157e+308,
                                        "maximum": 1.7976931348623157e+308
                                    },
                                    "ExposureIndex": {
                                        "type": "number",
                                        "description": "Gets or sets the exposure index.",
                                        "format": "double",
                                        "minimum": -1.7976931348623157e+308,
                                        "maximum": 1.7976931348623157e+308
                                    },
                                    "ExposureMode": {
                                        "type": "string",
                                        "description": "Gets or sets the exposure mode."
                                    },
                                    "ExposureProgram": {
                                        "type": "string",
                                        "description": "Gets or sets the exposure program."
                                    },
                                    "ExposureTime": {
                                        "type": "number",
                                        "description": "Gets or sets the exposure time.",
                                        "format": "double",
                                        "minimum": -1.7976931348623157e+308,
                                        "maximum": 1.7976931348623157e+308
                                    },
                                    "FNumber": {
                                        "type": "number",
                                        "description": "Gets or sets the focal number.",
                                        "format": "double",
                                        "minimum": -1.7976931348623157e+308,
                                        "maximum": 1.7976931348623157e+308
                                    },
                                    "FileSource": {
                                        "type": "string",
                                        "description": "Gets or sets the file source."
                                    },
                                    "Flash": {
                                        "type": "string",
                                        "description": "Gets or sets the flash."
                                    },
                                    "FlashEnergy": {
                                        "type": "number",
                                        "description": "Gets or sets the flash energy.",
                                        "format": "double",
                                        "minimum": -1.7976931348623157e+308,
                                        "maximum": 1.7976931348623157e+308
                                    },
                                    "FlashpixVersion": {
                                        "type": "string",
                                        "description": "Gets or sets the Flashpix version.",
                                        "format": "byte",
                                        "pattern": "^[\\w\\d+\\/=]*$"
                                    },
                                    "FocalLength": {
                                        "type": "number",
                                        "description": "Gets or sets the focal length.",
                                        "format": "double",
                                        "minimum": -1.7976931348623157e+308,
                                        "maximum": 1.7976931348623157e+308
                                    },
                                    "FocalLengthIn35MmFilm": {
                                        "type": "integer",
                                        "description": "Gets or sets the focal length in 35mm film."
                                    },
                                    "FocalPlaneResolutionUnit": {
                                        "type": "string",
                                        "description": "Gets or sets the focal plane resolution unit."
                                    },
                                    "FocalPlaneXResolution": {
                                        "type": "number",
                                        "description": "Gets or sets the focal plane X resolution.",
                                        "format": "double",
                                        "minimum": -1.7976931348623157e+308,
                                        "maximum": 1.7976931348623157e+308
                                    },
                                    "FocalPlaneYResolution": {
                                        "type": "number",
                                        "description": "Gets or sets the focal plane Y resolution.",
                                        "format": "double",
                                        "minimum": -1.7976931348623157e+308,
                                        "maximum": 1.7976931348623157e+308
                                    },
                                    "GPSAltitude": {
                                        "type": "number",
                                        "description": "Gets or sets the GPS altitude.",
                                        "format": "double",
                                        "minimum": -1.7976931348623157e+308,
                                        "maximum": 1.7976931348623157e+308
                                    },
                                    "GPSAltitudeRef": {
                                        "type": "string",
                                        "description": "Gets or sets the GPS altitude reference (if it's above or below sea level)."
                                    },
                                    "GPSAreaInformation": {
                                        "type": "string",
                                        "description": "Gets or sets the GPS area information.",
                                        "format": "byte",
                                        "pattern": "^[\\w\\d+\\/=]*$"
                                    },
                                    "GPSDOP": {
                                        "type": "number",
                                        "description": "Gets or sets the GPS DOP (data degree of precision).",
                                        "format": "double",
                                        "minimum": -1.7976931348623157e+308,
                                        "maximum": 1.7976931348623157e+308
                                    },
                                    "GPSDestBearing": {
                                        "type": "number",
                                        "description": "Gets or sets the GPS bearing of the destination.",
                                        "format": "double",
                                        "minimum": -1.7976931348623157e+308,
                                        "maximum": 1.7976931348623157e+308
                                    },
                                    "GPSDestBearingRef": {
                                        "type": "string",
                                        "description": "Gets or sets the GPS reference unit for bearing of the destination."
                                    },
                                    "GPSDestDistance": {
                                        "type": "number",
                                        "description": "Gets or sets the GPS destination distance.",
                                        "format": "double",
                                        "minimum": -1.7976931348623157e+308,
                                        "maximum": 1.7976931348623157e+308
                                    },
                                    "GPSDestDistanceRef": {
                                        "type": "string",
                                        "description": "Gets or sets the GPS reference unit for destination distance."
                                    },
                                    "GPSDestLatitude": {
                                        "type": "array",
                                        "description": "Gets or sets the GPS destination latitude.",
                                        "items": {
                                            "type": "number",
                                            "format": "double",
                                            "minimum": -1.7976931348623157e+308,
                                            "maximum": 1.7976931348623157e+308
                                        }
                                    },
                                    "GPSDestLatitudeRef": {
                                        "type": "string",
                                        "description": "Gets or sets the GPS reference destination latitude (north or south)."
                                    },
                                    "GPSDestLongitude": {
                                        "type": "array",
                                        "description": "Gets or sets the GPS destination longtitude.",
                                        "items": {
                                            "type": "number",
                                            "format": "double",
                                            "minimum": -1.7976931348623157e+308,
                                            "maximum": 1.7976931348623157e+308
                                        }
                                    },
                                    "GPSDestLongitudeRef": {
                                        "type": "string",
                                        "description": "Gets or sets the GPS reference destination longtitude (east or west)."
                                    },
                                    "GPSDifferential": {
                                        "type": "integer",
                                        "description": "Gets or sets the GPS differential."
                                    },
                                    "GPSImgDirection": {
                                        "type": "number",
                                        "description": "Gets or sets the GPS image direction.",
                                        "format": "double",
                                        "minimum": -1.7976931348623157e+308,
                                        "maximum": 1.7976931348623157e+308
                                    },
                                    "GPSImgDirectionRef": {
                                        "type": "string",
                                        "description": "Gets or sets the GPS reference image direction."
                                    },
                                    "GPSDateStamp": {
                                        "type": "string",
                                        "description": "Gets or sets the GPS date stamp."
                                    },
                                    "GPSLatitude": {
                                        "type": "array",
                                        "description": "Gets or sets the GPS latitude.",
                                        "items": {
                                            "type": "number",
                                            "format": "double",
                                            "minimum": -1.7976931348623157e+308,
                                            "maximum": 1.7976931348623157e+308
                                        }
                                    },
                                    "GPSLatitudeRef": {
                                        "type": "string",
                                        "description": "Gets or sets the GPS latitude reference (north or south)."
                                    },
                                    "GPSLongitude": {
                                        "type": "array",
                                        "description": "Gets or sets the GPS longitude.",
                                        "items": {
                                            "type": "number",
                                            "format": "double",
                                            "minimum": -1.7976931348623157e+308,
                                            "maximum": 1.7976931348623157e+308
                                        }
                                    },
                                    "GPSLongitudeRef": {
                                        "type": "string",
                                        "description": "Gets or sets the GPS longitude reference (east or west)."
                                    },
                                    "GPSMapDatum": {
                                        "type": "string",
                                        "description": "Gets or sets the geodetic survey data used by the GPS receiver."
                                    },
                                    "GPSMeasureMode": {
                                        "type": "string",
                                        "description": "Gets or sets the GPS measure mode."
                                    },
                                    "GPSProcessingMethod": {
                                        "type": "string",
                                        "description": "Gets or setsthe GPS processing method.",
                                        "format": "byte",
                                        "pattern": "^[\\w\\d+\\/=]*$"
                                    },
                                    "GPSSatellites": {
                                        "type": "string",
                                        "description": "Gets or sets the GPS satellites info."
                                    },
                                    "GPSSpeed": {
                                        "type": "number",
                                        "description": "Gets or sets the GPS speed.",
                                        "format": "double",
                                        "minimum": -1.7976931348623157e+308,
                                        "maximum": 1.7976931348623157e+308
                                    },
                                    "GPSSpeedRef": {
                                        "type": "string",
                                        "description": "Gets or sets the GPS speed reference unit."
                                    },
                                    "GPSStatus": {
                                        "type": "string",
                                        "description": "Gets or sets the GPS status."
                                    },
                                    "GPSTimestamp": {
                                        "type": "array",
                                        "description": "Gets or sets the GPS times tamp.",
                                        "items": {
                                            "type": "number",
                                            "format": "double",
                                            "minimum": -1.7976931348623157e+308,
                                            "maximum": 1.7976931348623157e+308
                                        }
                                    },
                                    "GPSTrack": {
                                        "type": "string",
                                        "description": "Gets or sets the GPS track."
                                    },
                                    "GPSTrackRef": {
                                        "type": "string",
                                        "description": "Gets or sets the GPS track reference."
                                    },
                                    "GPSVersionID": {
                                        "type": "string",
                                        "description": "Gets or sets the GPS version ID.",
                                        "format": "byte",
                                        "pattern": "^[\\w\\d+\\/=]*$"
                                    },
                                    "GainControl": {
                                        "type": "string",
                                        "description": "Gets or sets the gain control."
                                    },
                                    "Gamma": {
                                        "type": "number",
                                        "description": "Gets or sets the gamma.",
                                        "format": "double",
                                        "minimum": -1.7976931348623157e+308,
                                        "maximum": 1.7976931348623157e+308
                                    },
                                    "ISOSpeed": {
                                        "type": "integer",
                                        "description": "Gets or sets the ISO speed.",
                                        "format": "int64",
                                        "minimum": -9223372036854776000,
                                        "maximum": 9223372036854776000
                                    },
                                    "ISOSpeedLatitudeYYY": {
                                        "type": "integer",
                                        "description": "Gets or sets the ISO speed latitude YYY value.",
                                        "format": "int64",
                                        "minimum": -9223372036854776000,
                                        "maximum": 9223372036854776000
                                    },
                                    "ISOSpeedLatitudeZZZ": {
                                        "type": "integer",
                                        "description": "Gets or sets the ISO speed latitude ZZZ value.",
                                        "format": "int64",
                                        "minimum": -9223372036854776000,
                                        "maximum": 9223372036854776000
                                    },
                                    "PhotographicSensitivity": {
                                        "type": "integer",
                                        "description": "Gets or sets the photographic sensitivity.",
                                        "format": "int64",
                                        "minimum": -9223372036854776000,
                                        "maximum": 9223372036854776000
                                    },
                                    "ImageUniqueID": {
                                        "type": "string",
                                        "description": "Gets or sets the image unique ID."
                                    },
                                    "LensMake": {
                                        "type": "string",
                                        "description": "Gets or sets the lens manufacturer."
                                    },
                                    "LensModel": {
                                        "type": "string",
                                        "description": "Gets or sets the lens model."
                                    },
                                    "LensSerialNumber": {
                                        "type": "string",
                                        "description": "Gets or sets the lens serial number."
                                    },
                                    "LensSpecification": {
                                        "type": "array",
                                        "description": "Gets or sets the lens specification.",
                                        "items": {
                                            "type": "number",
                                            "format": "double",
                                            "minimum": -1.7976931348623157e+308,
                                            "maximum": 1.7976931348623157e+308
                                        }
                                    },
                                    "LightSource": {
                                        "type": "string",
                                        "description": "Gets or sets the light source."
                                    },
                                    "MakerNoteRawData": {
                                        "type": "string",
                                        "description": "Gets or sets the maker note raw data.",
                                        "format": "byte",
                                        "pattern": "^[\\w\\d+\\/=]*$"
                                    },
                                    "MaxApertureValue": {
                                        "type": "number",
                                        "description": "Gets or sets the max aperture.",
                                        "format": "double",
                                        "minimum": -1.7976931348623157e+308,
                                        "maximum": 1.7976931348623157e+308
                                    },
                                    "MeteringMode": {
                                        "type": "string",
                                        "description": "Gets or sets the metering mode."
                                    },
                                    "OECF": {
                                        "type": "string",
                                        "description": "Gets or sets the OECF (Opto-Electric Conversion Function).",
                                        "format": "byte",
                                        "pattern": "^[\\w\\d+\\/=]*$"
                                    },
                                    "PixelXDimension": {
                                        "type": "integer",
                                        "description": "Gets or sets the pixel X dimension.",
                                        "format": "int64",
                                        "minimum": -9223372036854776000,
                                        "maximum": 9223372036854776000
                                    },
                                    "PixelYDimension": {
                                        "type": "integer",
                                        "description": "Gets or sets the pixel Y dimension.",
                                        "format": "int64",
                                        "minimum": -9223372036854776000,
                                        "maximum": 9223372036854776000
                                    },
                                    "RecommendedExposureIndex": {
                                        "type": "integer",
                                        "description": "Gets or sets the recommended exposure index.",
                                        "format": "int64",
                                        "minimum": -9223372036854776000,
                                        "maximum": 9223372036854776000
                                    },
                                    "RelatedSoundFile": {
                                        "type": "string",
                                        "description": "Gets or sets the related sound file."
                                    },
                                    "Saturation": {
                                        "type": "string",
                                        "description": "Gets or sets the saturation."
                                    },
                                    "SceneCaptureType": {
                                        "type": "string",
                                        "description": "Gets or sets the scene capture type."
                                    },
                                    "SceneType": {
                                        "type": "integer",
                                        "description": "Gets or sets the scene type.",
                                        "format": "byte",
                                        "pattern": "^[\\w\\d+\\/=]*$"
                                    },
                                    "SensingMethod": {
                                        "type": "string",
                                        "description": "Gets or sets the sensing method."
                                    },
                                    "SensitivityType": {
                                        "type": "integer",
                                        "description": "Gets or sets the sensitivity type."
                                    },
                                    "Sharpness": {
                                        "type": "integer",
                                        "description": "Gets or sets the sharpness."
                                    },
                                    "ShutterSpeedValue": {
                                        "type": "number",
                                        "description": "Gets or sets the shutter speed.",
                                        "format": "double",
                                        "minimum": -1.7976931348623157e+308,
                                        "maximum": 1.7976931348623157e+308
                                    },
                                    "SpatialFrequencyResponse": {
                                        "type": "string",
                                        "description": "Gets or sets the spatial frequency response.",
                                        "format": "byte",
                                        "pattern": "^[\\w\\d+\\/=]*$"
                                    },
                                    "SpectralSensitivity": {
                                        "type": "string",
                                        "description": "Gets or sets the spectral sensitivity."
                                    },
                                    "StandardOutputSensitivity": {
                                        "type": "integer",
                                        "description": "Gets or sets the standard output sensitivity.",
                                        "format": "int64",
                                        "minimum": -9223372036854776000,
                                        "maximum": 9223372036854776000
                                    },
                                    "SubjectArea": {
                                        "type": "array",
                                        "description": "Gets or sets the subject area.",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "SubjectDistance": {
                                        "type": "number",
                                        "description": "Gets or sets the subject distance.",
                                        "format": "double",
                                        "minimum": -1.7976931348623157e+308,
                                        "maximum": 1.7976931348623157e+308
                                    },
                                    "SubjectDistanceRange": {
                                        "type": "string",
                                        "description": "Gets or sets the subject distance range."
                                    },
                                    "SubjectLocation": {
                                        "type": "array",
                                        "description": "Gets or sets the subject location.",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "SubsecTime": {
                                        "type": "string",
                                        "description": "Gets or sets the fractions of seconds for the DateTime tag."
                                    },
                                    "SubsecTimeDigitized": {
                                        "type": "string",
                                        "description": "Gets or sets the fractions of seconds for the DateTimeDigitized tag."
                                    },
                                    "SubsecTimeOriginal": {
                                        "type": "string",
                                        "description": "Gets or sets the fractions of seconds for the DateTimeOriginal tag."
                                    },
                                    "UserComment": {
                                        "type": "string",
                                        "description": "Gets or sets the user comment."
                                    },
                                    "WhiteBalance": {
                                        "type": "string",
                                        "description": "Gets or sets the white balance."
                                    },
                                    "WhitePoint": {
                                        "type": "array",
                                        "description": "Gets or sets the white point.",
                                        "items": {
                                            "type": "number",
                                            "format": "double",
                                            "minimum": -1.7976931348623157e+308,
                                            "maximum": 1.7976931348623157e+308
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "PsdProperties": {
                        "type": "object",
                        "description": "Represents information about PSD image",
                        "additionalProperties": false,
                        "required": [
                            "BitsPerChannel",
                            "ChannelsCount"
                        ],
                        "properties": {
                            "BitsPerChannel": {
                                "type": "integer",
                                "description": "Gets or sets the bits per channel.",
                                "format": "int32",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "ChannelsCount": {
                                "type": "integer",
                                "description": "Gets or sets the channels count.",
                                "format": "int32",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "ColorMode": {
                                "type": "string",
                                "description": "Gets or sets the color mode."
                            },
                            "Compression": {
                                "type": "string",
                                "description": "Gets or sets the compression."
                            }
                        }
                    },
                    "DjvuProperties": {
                        "type": "object",
                        "description": "Represents properties of djvu file.",
                        "additionalProperties": false,
                        "required": [
                            "HasBackgroundColor",
                            "PagesCount"
                        ],
                        "properties": {
                            "BackgroundColor": {
                                "type": "string",
                                "description": "Gets or sets background color."
                            },
                            "HasBackgroundColor": {
                                "type": "boolean",
                                "description": "Gets or sets a value indicating whether background color is used."
                            },
                            "PagesCount": {
                                "type": "integer",
                                "description": "Gets or sets pages count.",
                                "format": "int32",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            }
                        }
                    },
                    "WebPProperties": {
                        "type": "object",
                        "description": "Represents information about image in WEBP format.",
                        "additionalProperties": false,
                        "required": [
                            "Lossless",
                            "Quality",
                            "AnimLoopCount",
                            "AnimBackgroundColor"
                        ],
                        "properties": {
                            "Lossless": {
                                "type": "boolean",
                                "description": "Gets or sets a value indicating whether these WebPOptions is lossless."
                            },
                            "Quality": {
                                "type": "number",
                                "description": "Gets or sets the quality.",
                                "format": "double",
                                "minimum": -1.7976931348623157e+308,
                                "maximum": 1.7976931348623157e+308
                            },
                            "AnimLoopCount": {
                                "type": "integer",
                                "description": "Gets or sets the animation loop count."
                            },
                            "AnimBackgroundColor": {
                                "type": "integer",
                                "description": "Gets or sets the color of the animation background.",
                                "format": "int64",
                                "minimum": -9223372036854776000,
                                "maximum": 9223372036854776000
                            }
                        }
                    },
                    "Jpeg2000Properties": {
                        "type": "object",
                        "description": "Represents information about image in JPEG2000 format.",
                        "additionalProperties": false,
                        "properties": {
                            "Comments": {
                                "type": "array",
                                "description": "Gets or sets the JPEG comment markers.",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "Codec": {
                                "type": "string",
                                "description": "Gets or sets the JPEG2000 codec"
                            }
                        }
                    },
                    "DicomProperties": {
                        "type": "object",
                        "description": "Represents information about image in dicom format.",
                        "additionalProperties": false,
                        "required": [
                            "PlanarConfiguration",
                            "SignedImage",
                            "SamplesPerPixel",
                            "BitsAllocated",
                            "Width",
                            "Height",
                            "WindowCentre",
                            "WindowWidth",
                            "PixelRepresentation",
                            "RescaleIntercept",
                            "RescaleSlope",
                            "NumberOfFrames",
                            "IsLittleEndian",
                            "Offset"
                        ],
                        "properties": {
                            "PlanarConfiguration": {
                                "type": "integer",
                                "description": "Gets or sets the planar configuration.",
                                "format": "int32",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "Reds": {
                                "type": "string",
                                "description": "Gets or sets the array of red colors.",
                                "format": "byte",
                                "pattern": "^[\\w\\d+\\/=]*$"
                            },
                            "Greens": {
                                "type": "string",
                                "description": "Gets or sets the array of green colors.",
                                "format": "byte",
                                "pattern": "^[\\w\\d+\\/=]*$"
                            },
                            "Blues": {
                                "type": "string",
                                "description": "Gets or sets the array of blue colors.",
                                "format": "byte",
                                "pattern": "^[\\w\\d+\\/=]*$"
                            },
                            "DicomHeaderInfoByBytes": {
                                "type": "string",
                                "description": "Gets or sets the header information by bytes.",
                                "format": "byte",
                                "pattern": "^[\\w\\d+\\/=]*$"
                            },
                            "SignedImage": {
                                "type": "boolean",
                                "description": "Gets or sets a value indicating whether it's a signed image."
                            },
                            "DicomInfo": {
                                "type": "array",
                                "description": "Gets or sets the header information of the DICOM file.",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "SamplesPerPixel": {
                                "type": "integer",
                                "description": "Gets or sets samples per pixel count.",
                                "format": "int32",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "BitsAllocated": {
                                "type": "integer",
                                "description": "Gets or sets allocated bits count.",
                                "format": "int32",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "PhotoInterpretation": {
                                "type": "string",
                                "description": "Gets or sets the photo interpretation."
                            },
                            "Width": {
                                "type": "integer",
                                "description": "Gets or sets the width.",
                                "format": "int32",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "Height": {
                                "type": "integer",
                                "description": "Gets or sets the height.",
                                "format": "int32",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "WindowCentre": {
                                "type": "number",
                                "description": "Gets or sets the window centre.",
                                "format": "double",
                                "minimum": -1.7976931348623157e+308,
                                "maximum": 1.7976931348623157e+308
                            },
                            "WindowWidth": {
                                "type": "number",
                                "description": "Gets or sets the width of the window.",
                                "format": "double",
                                "minimum": -1.7976931348623157e+308,
                                "maximum": 1.7976931348623157e+308
                            },
                            "PixelRepresentation": {
                                "type": "integer",
                                "description": "Gets or sets data representation of the pixel samples.",
                                "format": "int32",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "RescaleIntercept": {
                                "type": "number",
                                "description": "Gets or sets a value of the rescale intercept.",
                                "format": "double",
                                "minimum": -1.7976931348623157e+308,
                                "maximum": 1.7976931348623157e+308
                            },
                            "RescaleSlope": {
                                "type": "number",
                                "description": "Gets or sets a value of the rescale slope.",
                                "format": "double",
                                "minimum": -1.7976931348623157e+308,
                                "maximum": 1.7976931348623157e+308
                            },
                            "NumberOfFrames": {
                                "type": "integer",
                                "description": "Gets or sets the number of frames.",
                                "format": "int32",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "IsLittleEndian": {
                                "type": "boolean",
                                "description": "Indicates if DICOM image has little endian byte order."
                            },
                            "Offset": {
                                "type": "integer",
                                "description": "Gets or sets the offset.",
                                "format": "int32",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            }
                        }
                    },
                    "DngProperties": {
                        "type": "object",
                        "description": "Represents information about image in DNG format.",
                        "additionalProperties": false,
                        "required": [
                            "DngVersion",
                            "IsFoveon",
                            "RawCount",
                            "Filters",
                            "ColorsCount"
                        ],
                        "properties": {
                            "DngVersion": {
                                "type": "integer",
                                "description": "Gets or sets the DNG version.",
                                "format": "int64",
                                "minimum": -9223372036854776000,
                                "maximum": 9223372036854776000
                            },
                            "Description": {
                                "type": "string",
                                "description": "Gets or sets the description of colors (RGBG, RGBE, GMCY or GBTG)."
                            },
                            "Model": {
                                "type": "string",
                                "description": "Gets or sets the camera model."
                            },
                            "CameraManufacturer": {
                                "type": "string",
                                "description": "Gets or sets the camera manufacturer."
                            },
                            "IsFoveon": {
                                "type": "integer",
                                "description": "Gets or sets the value indicating whether it's a Foveon matrix.",
                                "format": "int64",
                                "minimum": -9223372036854776000,
                                "maximum": 9223372036854776000
                            },
                            "Software": {
                                "type": "string",
                                "description": "Gets or sets the software."
                            },
                            "RawCount": {
                                "type": "integer",
                                "description": "Gets or sets the number of RAW images in file (0 means that the file has not been recognized).",
                                "format": "int64",
                                "minimum": -9223372036854776000,
                                "maximum": 9223372036854776000
                            },
                            "Filters": {
                                "type": "integer",
                                "description": "Gets or sets the bit mask describing the order of color pixels in the matrix.",
                                "format": "int64",
                                "minimum": -9223372036854776000,
                                "maximum": 9223372036854776000
                            },
                            "ColorsCount": {
                                "type": "integer",
                                "description": "Gets or sets the colors count.",
                                "format": "int32",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "XmpData": {
                                "type": "string",
                                "description": "Gets or sets the XMP data."
                            },
                            "TranslationCfaDng": {
                                "type": "array",
                                "description": "Gets or sets the translation array for CFA mosaic of DNG format.",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "OdgProperties": {
                        "type": "object",
                        "description": "ODG format specific properties",
                        "additionalProperties": false,
                        "required": [
                            "PageCount"
                        ],
                        "properties": {
                            "PageCount": {
                                "type": "integer",
                                "description": "Gets or sets the page count.",
                                "format": "int32",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "Metadata": {
                                "type": "object",
                                "description": "ODG format metadata",
                                "additionalProperties": false,
                                "properties": {
                                    "Generator": {
                                        "type": "string",
                                        "description": "Gets or sets the generator."
                                    },
                                    "Title": {
                                        "type": "string",
                                        "description": "Gets or sets the title."
                                    },
                                    "Description": {
                                        "type": "string",
                                        "description": "Gets or sets the description."
                                    },
                                    "Subject": {
                                        "type": "string",
                                        "description": "Gets or sets the subject."
                                    },
                                    "Keywords": {
                                        "type": "string",
                                        "description": "Gets or sets the keywords."
                                    },
                                    "InitialCreator": {
                                        "type": "string",
                                        "description": "Gets or sets the initial creator."
                                    },
                                    "Creator": {
                                        "type": "string",
                                        "description": "Gets or sets the creator."
                                    },
                                    "PrintedBy": {
                                        "type": "string",
                                        "description": "Gets or sets the \"PrintedBy\" record."
                                    },
                                    "CreationDateTime": {
                                        "type": "string",
                                        "description": "Gets or sets the creation date and time."
                                    },
                                    "ModificationDateTime": {
                                        "type": "string",
                                        "description": "Gets or sets the modification date and time."
                                    },
                                    "PrintDateTime": {
                                        "type": "string",
                                        "description": "Gets or sets the print date and time."
                                    },
                                    "DocumentTemplate": {
                                        "type": "string",
                                        "description": "Gets or sets the document template."
                                    },
                                    "AutomaticReload": {
                                        "type": "string",
                                        "description": "Gets or sets the automatic reload."
                                    },
                                    "HyperlinkBehavior": {
                                        "type": "string",
                                        "description": "Gets or sets the hyperlink behavior."
                                    },
                                    "Language": {
                                        "type": "string",
                                        "description": "Gets or sets the language."
                                    },
                                    "EditingCycles": {
                                        "type": "string",
                                        "description": "Gets or sets the editing cycles."
                                    },
                                    "EditingDuration": {
                                        "type": "string",
                                        "description": "Gets or sets the duration of the editing."
                                    },
                                    "DocumentStatistics": {
                                        "type": "string",
                                        "description": "Gets or sets the document statistics."
                                    }
                                }
                            },
                            "Pages": {
                                "type": "array",
                                "description": "Gets or sets the pages.",
                                "items": {
                                    "type": "object",
                                    "description": "ODG page info",
                                    "additionalProperties": false,
                                    "required": [
                                        "Width",
                                        "Height"
                                    ],
                                    "properties": {
                                        "Width": {
                                            "type": "integer",
                                            "description": "Gets or sets the width.",
                                            "format": "int32",
                                            "minimum": -2147483648,
                                            "maximum": 2147483647
                                        },
                                        "Height": {
                                            "type": "integer",
                                            "description": "Gets or sets the height.",
                                            "format": "int32",
                                            "minimum": -2147483648,
                                            "maximum": 2147483647
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "SvgProperties": {
                        "type": "object",
                        "description": "Represents information about image in PNG format.",
                        "additionalProperties": false,
                        "properties": {
                            "ColorType": {
                                "type": "string",
                                "description": "Gets or sets the color type for SVG image."
                            }
                        }
                    },
                    "EpsProperties": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "BoundingBoxString": {
                                "type": "string",
                                "description": "Gets the BoundingBox."
                            },
                            "CreationDateString": {
                                "type": "string",
                                "description": "Gets the CreationDate."
                            },
                            "Creator": {
                                "type": "string",
                                "description": "Gets the Creator."
                            },
                            "PostScriptVersion": {
                                "type": "string",
                                "description": "Gets the PostScript version."
                            },
                            "Title": {
                                "type": "string",
                                "description": "Gets the Title."
                            }
                        }
                    },
                    "HorizontalResolution": {
                        "type": "number",
                        "description": "Gets or sets the horizontal resolution of an image.",
                        "format": "double",
                        "minimum": -1.7976931348623157e+308,
                        "maximum": 1.7976931348623157e+308
                    },
                    "VerticalResolution": {
                        "type": "number",
                        "description": "Gets or sets the vertical resolution of an image.",
                        "format": "double",
                        "minimum": -1.7976931348623157e+308,
                        "maximum": 1.7976931348623157e+308
                    },
                    "IsCached": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether image is cached."
                    }
                }
            }
        },
        {
            "name": "CreateModifiedBmp",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/bmp",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                },
                {
                    "name": "bitsPerPixel",
                    "type": "NUMBER",
                    "description": "Color depth.",
                    "default": ""
                },
                {
                    "name": "verticalResolution",
                    "type": "NUMBER",
                    "description": "New vertical resolution.",
                    "default": ""
                },
                {
                    "name": "horizontalResolution",
                    "type": "NUMBER",
                    "description": "New horizontal resolution.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "outPath",
                    "type": "STRING",
                    "description": "Path to updated file (if this is empty, response contains streamed image).",
                    "default": ""
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "fromScratch",
                    "type": "BOOLEAN",
                    "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false.",
                    "default": false
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/bmp\"\nquerystring = {\"imageData\": \"\", \"bitsPerPixel\": \"\", \"outPath\": \"\", \"storage\": \"\", \"fromScratch\": false, \"verticalResolution\": \"\", \"horizontalResolution\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/bmp\"\nquerystring = {\"imageData\": \"\", \"bitsPerPixel\": \"\", \"outPath\": \"\", \"storage\": \"\", \"fromScratch\": false, \"verticalResolution\": \"\", \"horizontalResolution\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "CreateModifiedSvg",
            "url": "https://aspose-imaging-cloud1.p.rapidapi.com/imaging/svg",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageData",
                    "type": "BINARY",
                    "description": "Input image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Export format (PNG is the default one). Please, refer to the export table from https://docs.aspose.cloud/display/imagingcloud/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases.",
                    "default": "png"
                },
                {
                    "name": "scaleX",
                    "type": "NUMBER",
                    "description": "Scale X.",
                    "default": 0
                },
                {
                    "name": "borderY",
                    "type": "NUMBER",
                    "description": "Border height. Only 0 is supported for now.",
                    "default": ""
                },
                {
                    "name": "bkColor",
                    "type": "STRING",
                    "description": "Background color (Default is white).",
                    "default": "white"
                },
                {
                    "name": "outPath",
                    "type": "STRING",
                    "description": "Path to updated file (if this is empty, response contains streamed image).",
                    "default": ""
                },
                {
                    "name": "fromScratch",
                    "type": "BOOLEAN",
                    "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false.",
                    "default": false
                },
                {
                    "name": "scaleY",
                    "type": "NUMBER",
                    "description": "Scale Y.",
                    "default": 0
                },
                {
                    "name": "pageWidth",
                    "type": "NUMBER",
                    "description": "Width of the page.",
                    "default": ""
                },
                {
                    "name": "pageHeight",
                    "type": "NUMBER",
                    "description": "Height of the page.",
                    "default": ""
                },
                {
                    "name": "textAsShapes",
                    "type": "BOOLEAN",
                    "description": "Whether text must be converted as shapes. true if all text is turned into SVG shapes in the convertion; otherwise, false",
                    "default": false
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "colorType",
                    "type": "STRING",
                    "description": "Color type for SVG image. Only RGB is supported for now.",
                    "default": "Rgb"
                },
                {
                    "name": "borderX",
                    "type": "NUMBER",
                    "description": "Border width. Only 0 is supported for now.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/svg\"\nquerystring = {\"imageData\": \"\", \"format\": \"png\", \"scaleX\": 0, \"borderY\": \"\", \"bkColor\": \"white\", \"outPath\": \"\", \"fromScratch\": false, \"scaleY\": 0, \"pageWidth\": \"\", \"pageHeight\": \"\", \"textAsShapes\": false, \"storage\": \"\", \"colorType\": \"Rgb\", \"borderX\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/svg\"\nquerystring = {\"imageData\": \"\", \"format\": \"png\", \"scaleX\": 0, \"borderY\": \"\", \"bkColor\": \"white\", \"outPath\": \"\", \"fromScratch\": false, \"scaleY\": 0, \"pageWidth\": \"\", \"pageHeight\": \"\", \"textAsShapes\": false, \"storage\": \"\", \"colorType\": \"Rgb\", \"borderX\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "string",
                "format": "binary"
            }
        }
    ],
    "standardized_name": "aspose_imaging_cloud"
}