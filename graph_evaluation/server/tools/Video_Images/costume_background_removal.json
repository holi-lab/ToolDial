{
    "product_id": "api_4695cb5b-5af8-473a-8f74-cba3f202717e",
    "tool_description": "Identifies areas of clothing in the input image and performs pixel-level background removal of clothing in the image.",
    "home_url": "https://rapidapi.com/ailabapi-ailabapi-default/api/costume-background-removal/",
    "name": "Costume background removal",
    "title": "Costume background removal",
    "pricing": "FREEMIUM",
    "tool_name": "Costume background removal",
    "score": null,
    "host": "costume-background-removal.p.rapidapi.com",
    "api_list": [
        {
            "name": "Costume background removal",
            "url": "https://costume-background-removal.p.rapidapi.com/cutout/commodity/cloth",
            "description": "Costume background removal",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image",
                    "type": "BINARY",
                    "description": "- **Image format**: `JPEG` `JPG` `BMP` `PNG`\n- **Image size**: No more than 3 MB.\n- **Image resolution**: Larger than 50x50px, smaller than 3000x3000px.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://costume-background-removal.p.rapidapi.com/cutout/commodity/cloth\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"costume-background-removal.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://costume-background-removal.p.rapidapi.com/cutout/commodity/cloth\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"costume-background-removal.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "request_id": {
                    "type": "string",
                    "required": false,
                    "description": "Request ID."
                },
                "log_id": {
                    "type": "string",
                    "required": false,
                    "description": "Log ID."
                },
                "error_code": {
                    "type": "integer",
                    "required": false,
                    "description": "Error Code."
                },
                "error_code_str": {
                    "type": "string",
                    "required": false,
                    "description": "Error Code."
                },
                "error_msg": {
                    "type": "string",
                    "required": false,
                    "description": "Error Message."
                },
                "data": {
                    "type": "Object",
                    "required": false,
                    "description": "The content of the result data returned.",
                    "properties": {
                        "elements": {
                            "type": "Array",
                            "required": false,
                            "description": "Keying results for each sub-element.",
                            "properties": [
                                {
                                    "image_url": {
                                        "type": "String",
                                        "required": false,
                                        "description": "Resulting image URL address. **Note**: The URL address is a temporary address, valid for 1 day, after which it will not be accessible."
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    ]
}