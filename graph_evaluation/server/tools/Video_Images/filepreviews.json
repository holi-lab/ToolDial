{
    "product_id": "668",
    "tool_description": "FilePreviews is an API that produces beautiful previews,optical character recognition and metadata from any file.",
    "home_url": "https://rapidapi.com/raygorodskij/api/FilePreviews/",
    "name": "FilePreviews",
    "title": "FilePreviews",
    "pricing": "FREE",
    "tool_name": "FilePreviews",
    "score": null,
    "host": "FilePreviewsraygorodskijV1.p.rapidapi.com",
    "api_list": [
        {
            "name": "createPreview",
            "url": "https://FilePreviewsraygorodskijV1.p.rapidapi.com/createPreview",
            "description": "Create file preview.Returned response can be used for polling until results are available and return an HTTP status code of 200. If application has a Callback URL specified, results will also be posted via webhooks.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret.",
                    "default": ""
                },
                {
                    "name": "fileUrl",
                    "type": "STRING",
                    "description": "File url to preview.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "SELECT",
                    "description": "The format of the extracted thumbnails.",
                    "default": ""
                },
                {
                    "name": "pages",
                    "type": "STRING",
                    "description": "The document pages that you want to extract thumbnails for. You can specify a range or individual pages separated by commas. Example: `1-3` or `1,3,5`. You can also specify the special value of `all` to extract all pages. Default value is `1`.",
                    "default": ""
                },
                {
                    "name": "callbackUrl",
                    "type": "STRING",
                    "description": "A URL that we will POST anytime results for requests previews are ready.",
                    "default": ""
                },
                {
                    "name": "sizes",
                    "type": "LIST",
                    "description": "An array of sizes of the extracted thumbnails, in pixels. Expressed as widthxheight. Specifying only the width(e.g `300`) will generate a thumbnail with a fixed width and varying height. You can also only shrink larger images to fit into the give size and never enlarge(e.g `300x400>`).",
                    "default": ""
                },
                {
                    "name": "metadata",
                    "type": "LIST",
                    "description": "An list of string values of additional metadata to extract.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FilePreviewsraygorodskijV1.p.rapidapi.com/createPreview\"\nquerystring = {\"apiSecret\": \"\", \"fileUrl\": \"\", \"apiKey\": \"\", \"format\": \"\", \"pages\": \"\", \"callbackUrl\": \"\", \"sizes\": \"\", \"metadata\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FilePreviewsraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FilePreviewsraygorodskijV1.p.rapidapi.com/createPreview\"\nquerystring = {\"apiSecret\": \"\", \"fileUrl\": \"\", \"apiKey\": \"\", \"format\": \"\", \"pages\": \"\", \"callbackUrl\": \"\", \"sizes\": \"\", \"metadata\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FilePreviewsraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPreview",
            "url": "https://FilePreviewsraygorodskijV1.p.rapidapi.com/getPreview",
            "description": "Get file preview.Returned response can be used for polling until results are available and return an HTTP status code of 200. If application has a Callback URL specified, results will also be posted via webhooks.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "previewId",
                    "type": "STRING",
                    "description": "Preview id from createPreview endpoint.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FilePreviewsraygorodskijV1.p.rapidapi.com/getPreview\"\nquerystring = {\"previewId\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FilePreviewsraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FilePreviewsraygorodskijV1.p.rapidapi.com/getPreview\"\nquerystring = {\"previewId\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FilePreviewsraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "webhookEvent",
            "url": "https://FilePreviewsraygorodskijV1.p.rapidapi.com/webhookEvent",
            "description": "For a better integration with FilePreviews we recommend using webhooks. Webhooks let you register a URL that we will POST anytime we have results for requests previews.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "apiKey",
                    "type": "STRING",
                    "description": "Your apiKey.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FilePreviewsraygorodskijV1.p.rapidapi.com/webhookEvent\"\nquerystring = {\"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FilePreviewsraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FilePreviewsraygorodskijV1.p.rapidapi.com/webhookEvent\"\nquerystring = {\"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FilePreviewsraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}