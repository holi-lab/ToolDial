{
    "product_id": "api_29102921-4f08-43d3-8aac-092db80affd4",
    "tool_description": "A Flask application that overlays a PNG image on top of an animated GIF image. Given the URLs of an animated GIF and a PNG image, the application resizes the PNG image to 250x250, calculates the x and y coordinates to place the PNG image in the center of the GIF image, iterates through the frames of the GIF image, pastes the PNG image on top of each frame, appends the new frame to a list, and returns the final image as an animated GIF using the first frame as the starting point and appending ...",
    "home_url": "https://rapidapi.com/infotech30005/api/gif-overlay/",
    "name": "GIF Overlay",
    "title": "GIF Overlay",
    "pricing": "FREEMIUM",
    "tool_name": "GIF Overlay",
    "score": null,
    "host": "gif-overlay.p.rapidapi.com",
    "api_list": [
        {
            "name": "Overlay PNG on GIF",
            "url": "https://gif-overlay.p.rapidapi.com/gif",
            "description": "This endpoint allows you to overlay a PNG image on top of a GIF image. The PNG image will be resized to 250x250 and placed in the center of the GIF. The resulting image will be returned as an animated GIF.\nAccepts image files in gif and png formats. Required headers include 'Content-Type' and 'Content-Disposition'. It returns the final image as an animated gi",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://gif-overlay.p.rapidapi.com/gif\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gif-overlay.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://gif-overlay.p.rapidapi.com/gif\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gif-overlay.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        }
    ]
}