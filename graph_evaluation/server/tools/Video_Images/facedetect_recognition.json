{
    "product_id": "api_727b5fac-1d16-4dbe-9689-379bb245fe1f",
    "tool_description": "Face detection API for age and gender",
    "home_url": "https://rapidapi.com/finddatalab-finddatalab-default/api/facedetect-recognition1/",
    "name": "Facedetect Recognition",
    "title": "Facedetect Recognition",
    "pricing": "FREEMIUM",
    "tool_name": "Facedetect Recognition",
    "score": null,
    "host": "facedetect-recognition1.p.rapidapi.com",
    "api_list": [
        {
            "name": "Single Detect Age/Gender by image url",
            "url": "https://facedetect-recognition1.p.rapidapi.com/detect_single",
            "description": "Detect Age/Gender by image url",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://charming-face.ru/wp-content/uploads/original.jpg20572072662.jpg"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://facedetect-recognition1.p.rapidapi.com/detect_single\"\nquerystring = {\"url\": \"https://charming-face.ru/wp-content/uploads/original.jpg20572072662.jpg\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"facedetect-recognition1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://facedetect-recognition1.p.rapidapi.com/detect_single\"\nquerystring = {\"url\": \"https://charming-face.ru/wp-content/uploads/original.jpg20572072662.jpg\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"facedetect-recognition1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string"
                    },
                    "genderProbability": {
                        "type": "number"
                    },
                    "age": {
                        "type": "number"
                    },
                    "pid": {
                        "type": "integer"
                    }
                }
            }
        },
        {
            "name": "Multi Detect Age/Gender by image url",
            "url": "https://facedetect-recognition1.p.rapidapi.com/detect_multi",
            "description": "Multi detect age/geneder",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://i.imgur.com/KUyUzdP.jpg"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://facedetect-recognition1.p.rapidapi.com/detect_multi\"\nquerystring = {\"url\": \"https://i.imgur.com/KUyUzdP.jpg\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"facedetect-recognition1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://facedetect-recognition1.p.rapidapi.com/detect_multi\"\nquerystring = {\"url\": \"https://i.imgur.com/KUyUzdP.jpg\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"facedetect-recognition1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "adult": {
                        "type": "boolean"
                    },
                    "children": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "gender": {
                                    "type": "string"
                                },
                                "genderProbability": {
                                    "type": "number"
                                },
                                "age": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        }
    ]
}