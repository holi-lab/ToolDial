{
    "product_id": "646",
    "tool_description": "500px API provides programmatic access to 500px functionality and content.",
    "home_url": "https://rapidapi.com/stefan.skliarov/api/500px/",
    "name": "500px",
    "title": "500px",
    "pricing": "FREE",
    "tool_name": "500px",
    "score": null,
    "host": "500pxstefan-skliarovV1.p.rapidapi.com",
    "api_list": [
        {
            "name": "addComment",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/addComment",
            "description": "Creates a new comment for the photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "body",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/addComment\"\nquerystring = {\"tokenSecret\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"body\": \"\", \"token\": \"\", \"photoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/addComment\"\nquerystring = {\"tokenSecret\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"body\": \"\", \"token\": \"\", \"photoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addFriend",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/addFriend",
            "description": "Add the user to the list of followers.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/addFriend\"\nquerystring = {\"apiKey\": \"\", \"userId\": \"\", \"token\": \"\", \"tokenSecret\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/addFriend\"\nquerystring = {\"apiKey\": \"\", \"userId\": \"\", \"token\": \"\", \"tokenSecret\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addGallery",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/addGallery",
            "description": "Creates a new, empty gallery owned by the given user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Title of the gallery, up to 255 characters in length.",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "kind",
                    "type": "SELECT",
                    "description": "List of gallery kinds",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "subtitle",
                    "type": "STRING",
                    "description": "Updates the subtitle of the gallery.",
                    "default": ""
                },
                {
                    "name": "customPath",
                    "type": "STRING",
                    "description": "A slug that the gallery will be accessible through. Needs to be unique to the user.",
                    "default": ""
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "Text description of the photo, up to 65535 characters in length.",
                    "default": ""
                },
                {
                    "name": "privacy",
                    "type": "SELECT",
                    "description": "If 1, the gallery is marked private, otherwise it is public.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/addGallery\"\nquerystring = {\"apiSecret\": \"\", \"subtitle\": \"\", \"name\": \"\", \"tokenSecret\": \"\", \"customPath\": \"\", \"kind\": \"\", \"description\": \"\", \"privacy\": \"\", \"apiKey\": \"\", \"token\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/addGallery\"\nquerystring = {\"apiSecret\": \"\", \"subtitle\": \"\", \"name\": \"\", \"tokenSecret\": \"\", \"customPath\": \"\", \"kind\": \"\", \"description\": \"\", \"privacy\": \"\", \"apiKey\": \"\", \"token\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addPhoto",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/addPhoto",
            "description": "Create a new photo on behalf of the user, and receive an upload key in exchange.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "category",
                    "type": "SELECT",
                    "description": "Category of the photo",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Title of the photo, up to 255 characters in length.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "Text description of the photo, up to 65535 characters in length.",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "camera",
                    "type": "STRING",
                    "description": "Make and model of the camera used to take this photo.",
                    "default": ""
                },
                {
                    "name": "shutterSpeed",
                    "type": "STRING",
                    "description": "Shutter speed value for the photo, internally stored as string.",
                    "default": ""
                },
                {
                    "name": "coordinates",
                    "type": "MAP",
                    "description": "Location this photo was taken at",
                    "default": ""
                },
                {
                    "name": "aperture",
                    "type": "STRING",
                    "description": "Aperture value value for the photo, internally stored as string.",
                    "default": ""
                },
                {
                    "name": "lens",
                    "type": "STRING",
                    "description": "Information about the lens used to take this photo.",
                    "default": ""
                },
                {
                    "name": "focalLength",
                    "type": "STRING",
                    "description": "Focal length value for the photo, internally stored as string.",
                    "default": ""
                },
                {
                    "name": "iso",
                    "type": "STRING",
                    "description": "Integer ISO value for the photo.",
                    "default": ""
                },
                {
                    "name": "privacy",
                    "type": "SELECT",
                    "description": "Integer value indicating that the photo should be shown (0) or hidden (1) on the user's profile.",
                    "default": ""
                },
                {
                    "name": "tags",
                    "type": "LIST",
                    "description": "List of tags applicable to this photo.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/addPhoto\"\nquerystring = {\"apiKey\": \"\", \"category\": \"\", \"name\": \"\", \"apiSecret\": \"\", \"description\": \"\", \"tokenSecret\": \"\", \"token\": \"\", \"camera\": \"\", \"shutterSpeed\": \"\", \"coordinates\": \"\", \"aperture\": \"\", \"lens\": \"\", \"focalLength\": \"\", \"iso\": \"\", \"privacy\": \"\", \"tags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/addPhoto\"\nquerystring = {\"apiKey\": \"\", \"category\": \"\", \"name\": \"\", \"apiSecret\": \"\", \"description\": \"\", \"tokenSecret\": \"\", \"token\": \"\", \"camera\": \"\", \"shutterSpeed\": \"\", \"coordinates\": \"\", \"aperture\": \"\", \"lens\": \"\", \"focalLength\": \"\", \"iso\": \"\", \"privacy\": \"\", \"tags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addPhotosAfter",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/addPhotosAfter",
            "description": "Adds photos after photo",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "galleryId",
                    "type": "STRING",
                    "description": "Id of the gallery",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "addAfter",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "photos",
                    "type": "LIST",
                    "description": "list of photo to add",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/addPhotosAfter\"\nquerystring = {\"galleryId\": \"\", \"tokenSecret\": \"\", \"apiSecret\": \"\", \"token\": \"\", \"addAfter\": \"\", \"apiKey\": \"\", \"userId\": \"\", \"photos\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/addPhotosAfter\"\nquerystring = {\"galleryId\": \"\", \"tokenSecret\": \"\", \"apiSecret\": \"\", \"token\": \"\", \"addAfter\": \"\", \"apiKey\": \"\", \"userId\": \"\", \"photos\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addPhotosBefore",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/addPhotosBefore",
            "description": "Adds photos before photo",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "addBefore",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "galleryId",
                    "type": "STRING",
                    "description": "Id of the gallery",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "photos",
                    "type": "LIST",
                    "description": "list of photo to add",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/addPhotosBefore\"\nquerystring = {\"apiKey\": \"\", \"userId\": \"\", \"addBefore\": \"\", \"token\": \"\", \"apiSecret\": \"\", \"galleryId\": \"\", \"tokenSecret\": \"\", \"photos\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/addPhotosBefore\"\nquerystring = {\"apiKey\": \"\", \"userId\": \"\", \"addBefore\": \"\", \"token\": \"\", \"apiSecret\": \"\", \"galleryId\": \"\", \"tokenSecret\": \"\", \"photos\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addTags",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/addTags",
            "description": "Adds tags to the photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "tags",
                    "type": "LIST",
                    "description": "List of tags to add to this photo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/addTags\"\nquerystring = {\"apiKey\": \"\", \"photoId\": \"\", \"token\": \"\", \"apiSecret\": \"\", \"tokenSecret\": \"\", \"tags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/addTags\"\nquerystring = {\"apiKey\": \"\", \"photoId\": \"\", \"token\": \"\", \"apiSecret\": \"\", \"tokenSecret\": \"\", \"tags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addVote",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/addVote",
            "description": "Allows the user to vote for a photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "vote",
                    "type": "SELECT",
                    "description": "Values: '0' for 'dislike' or '1' for 'like'.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/addVote\"\nquerystring = {\"vote\": \"\", \"apiSecret\": \"\", \"tokenSecret\": \"\", \"token\": \"\", \"photoId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/addVote\"\nquerystring = {\"vote\": \"\", \"apiSecret\": \"\", \"tokenSecret\": \"\", \"token\": \"\", \"photoId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteFriend",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/deleteFriend",
            "description": "Removes the user from the list of followers.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/deleteFriend\"\nquerystring = {\"userId\": \"\", \"token\": \"\", \"apiKey\": \"\", \"tokenSecret\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/deleteFriend\"\nquerystring = {\"userId\": \"\", \"token\": \"\", \"apiKey\": \"\", \"tokenSecret\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteGallery",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/deleteGallery",
            "description": "Deletes the gallery.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "galleryId",
                    "type": "STRING",
                    "description": "Id of the gallery",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/deleteGallery\"\nquerystring = {\"tokenSecret\": \"\", \"galleryId\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"token\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/deleteGallery\"\nquerystring = {\"tokenSecret\": \"\", \"galleryId\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"token\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deletePhoto",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/deletePhoto",
            "description": "Deletes the photo from the User's library.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/deletePhoto\"\nquerystring = {\"token\": \"\", \"apiKey\": \"\", \"photoId\": \"\", \"apiSecret\": \"\", \"tokenSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/deletePhoto\"\nquerystring = {\"token\": \"\", \"apiKey\": \"\", \"photoId\": \"\", \"apiSecret\": \"\", \"tokenSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteTags",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/deleteTags",
            "description": "Removes tags from the photo. ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "tags",
                    "type": "LIST",
                    "description": "List of tags to add to this photo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/deleteTags\"\nquerystring = {\"photoId\": \"\", \"apiKey\": \"\", \"token\": \"\", \"tokenSecret\": \"\", \"apiSecret\": \"\", \"tags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/deleteTags\"\nquerystring = {\"photoId\": \"\", \"apiKey\": \"\", \"token\": \"\", \"tokenSecret\": \"\", \"apiSecret\": \"\", \"tags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteVote",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/deleteVote",
            "description": "Unlikes the specified photo for the user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/deleteVote\"\nquerystring = {\"token\": \"\", \"apiKey\": \"\", \"photoId\": \"\", \"apiSecret\": \"\", \"tokenSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/deleteVote\"\nquerystring = {\"token\": \"\", \"apiKey\": \"\", \"photoId\": \"\", \"apiSecret\": \"\", \"tokenSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAccessToken",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/getAccessToken",
            "description": "Step 2 of OAuth authorization",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The requestTokenSecret obtainedfrom previous step ",
                    "default": ""
                },
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "Pasword of the user",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The requestToken obtained from previous step",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "Username of the user",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/getAccessToken\"\nquerystring = {\"tokenSecret\": \"\", \"password\": \"\", \"token\": \"\", \"apiSecret\": \"\", \"username\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/getAccessToken\"\nquerystring = {\"tokenSecret\": \"\", \"password\": \"\", \"token\": \"\", \"apiSecret\": \"\", \"username\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getGalleryById",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/getGalleryById",
            "description": "Returns the details of the requested gallery",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "galleryId",
                    "type": "STRING",
                    "description": "Id of the gallery",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/getGalleryById\"\nquerystring = {\"tokenSecret\": \"\", \"galleryId\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"token\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/getGalleryById\"\nquerystring = {\"tokenSecret\": \"\", \"galleryId\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"token\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getGalleryByPath",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/getGalleryByPath",
            "description": "Returns the details of the requested gallery",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "galleryPath",
                    "type": "STRING",
                    "description": "Path of the gallery",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/getGalleryByPath\"\nquerystring = {\"apiKey\": \"\", \"token\": \"\", \"userId\": \"\", \"tokenSecret\": \"\", \"galleryPath\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/getGalleryByPath\"\nquerystring = {\"apiKey\": \"\", \"token\": \"\", \"userId\": \"\", \"tokenSecret\": \"\", \"galleryPath\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getGalleryByToken",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/getGalleryByToken",
            "description": "Returns the details of the requested gallery",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "galleryToken",
                    "type": "STRING",
                    "description": "TOken of the gallery",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/getGalleryByToken\"\nquerystring = {\"tokenSecret\": \"\", \"apiSecret\": \"\", \"galleryToken\": \"\", \"userId\": \"\", \"token\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/getGalleryByToken\"\nquerystring = {\"tokenSecret\": \"\", \"apiSecret\": \"\", \"galleryToken\": \"\", \"userId\": \"\", \"token\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getGalleryShareUrl",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/getGalleryShareUrl",
            "description": "Returns a sharable private URL for the given gallery.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "galleryId",
                    "type": "STRING",
                    "description": "Id of the gallery",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/getGalleryShareUrl\"\nquerystring = {\"apiKey\": \"\", \"token\": \"\", \"userId\": \"\", \"tokenSecret\": \"\", \"galleryId\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/getGalleryShareUrl\"\nquerystring = {\"apiKey\": \"\", \"token\": \"\", \"userId\": \"\", \"tokenSecret\": \"\", \"galleryId\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMyInfo",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/getMyInfo",
            "description": "Returns the profile information for the current user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/getMyInfo\"\nquerystring = {\"apiSecret\": \"\", \"tokenSecret\": \"\", \"token\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/getMyInfo\"\nquerystring = {\"apiSecret\": \"\", \"tokenSecret\": \"\", \"token\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getRequestToken",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/getRequestToken",
            "description": "Step 1 of OAuth authorization",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/getRequestToken\"\nquerystring = {\"apiKey\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/getRequestToken\"\nquerystring = {\"apiKey\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSinglePhoto",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/getSinglePhoto",
            "description": "Returns detailed information of a single photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "comments",
                    "type": "SELECT",
                    "description": "Return comments to the photo in the response. Comments are returned in order of creation, 20 entries per page. If omitted no comments will be returned, if present comments will be returned.",
                    "default": ""
                },
                {
                    "name": "tags",
                    "type": "SELECT",
                    "description": "If set to 1, returns an array of tags for the photo.",
                    "default": ""
                },
                {
                    "name": "imageSize",
                    "type": "SELECT",
                    "description": "The photo size(s) to be returned",
                    "default": ""
                },
                {
                    "name": "commentsPage",
                    "type": "NUMBER",
                    "description": "Return the specified page from the comments listing. Page numbers are 1-based.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/getSinglePhoto\"\nquerystring = {\"comments\": \"\", \"token\": \"\", \"apiKey\": \"\", \"tags\": \"\", \"photoId\": \"\", \"tokenSecret\": \"\", \"imageSize\": \"\", \"commentsPage\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/getSinglePhoto\"\nquerystring = {\"comments\": \"\", \"token\": \"\", \"apiKey\": \"\", \"tags\": \"\", \"photoId\": \"\", \"tokenSecret\": \"\", \"imageSize\": \"\", \"commentsPage\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserinfoByEmail",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/getUserinfoByEmail",
            "description": "Return information for the specified email.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "Email of the user",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/getUserinfoByEmail\"\nquerystring = {\"apiKey\": \"\", \"email\": \"\", \"token\": \"\", \"apiSecret\": \"\", \"tokenSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/getUserinfoByEmail\"\nquerystring = {\"apiKey\": \"\", \"email\": \"\", \"token\": \"\", \"apiSecret\": \"\", \"tokenSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserinfoById",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/getUserinfoById",
            "description": "Return information for the specified user ID.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/getUserinfoById\"\nquerystring = {\"token\": \"\", \"userId\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"tokenSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/getUserinfoById\"\nquerystring = {\"token\": \"\", \"userId\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"tokenSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserinfoByUsername",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/getUserinfoByUsername",
            "description": "Return information for the specified username.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "Username of the user",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/getUserinfoByUsername\"\nquerystring = {\"token\": \"\", \"username\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"tokenSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/getUserinfoByUsername\"\nquerystring = {\"token\": \"\", \"username\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"tokenSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateGallery",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/updateGallery",
            "description": "Updates the metadata for the given gallery.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "galleryId",
                    "type": "STRING",
                    "description": "Id of the gallery",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "subtitle",
                    "type": "STRING",
                    "description": "Updates the subtitle of the gallery.",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Title of the gallery, up to 255 characters in length.",
                    "default": ""
                },
                {
                    "name": "coverPhotIid",
                    "type": "STRING",
                    "description": "Updates the gallery's cover photo, must be a pre-existing item in the gallery with valid photo and user.",
                    "default": ""
                },
                {
                    "name": "privacy",
                    "type": "SELECT",
                    "description": "If 1, the gallery is marked private, otherwise it is public.",
                    "default": ""
                },
                {
                    "name": "customPath",
                    "type": "STRING",
                    "description": "A slug that the gallery will be accessible through. Needs to be unique to the user.",
                    "default": ""
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "Text description of the photo, up to 65535 characters in length.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/updateGallery\"\nquerystring = {\"apiKey\": \"\", \"userId\": \"\", \"subtitle\": \"\", \"name\": \"\", \"token\": \"\", \"coverPhotIid\": \"\", \"privacy\": \"\", \"apiSecret\": \"\", \"tokenSecret\": \"\", \"customPath\": \"\", \"galleryId\": \"\", \"description\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/updateGallery\"\nquerystring = {\"apiKey\": \"\", \"userId\": \"\", \"subtitle\": \"\", \"name\": \"\", \"token\": \"\", \"coverPhotIid\": \"\", \"privacy\": \"\", \"apiSecret\": \"\", \"tokenSecret\": \"\", \"customPath\": \"\", \"galleryId\": \"\", \"description\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listGalleries",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/listGalleries",
            "description": "Returns a listing of twenty (up to one hundred) galleries for the given user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "ID of the user",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "The number of results to return. Can not be over 100, default 20.",
                    "default": ""
                },
                {
                    "name": "includeCover",
                    "type": "SELECT",
                    "description": "If 1, the user's cover is included.",
                    "default": ""
                },
                {
                    "name": "sortDirection",
                    "type": "SELECT",
                    "description": "Control the order of the sorting. You can provide a sortDirection without providing a sort, in which case the default sort for the requested feature will be adjusted.",
                    "default": ""
                },
                {
                    "name": "privacy",
                    "type": "SELECT",
                    "description": "The privacy level of the galleries to return.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Return a specific page in the photo stream. Page numbering is 1-based.",
                    "default": ""
                },
                {
                    "name": "coverSize",
                    "type": "NUMBER",
                    "description": "The cover photo size to be returned, if include_cover is set. Defaults to 4.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Sort galleries in the specified order.",
                    "default": ""
                },
                {
                    "name": "kinds",
                    "type": "LIST",
                    "description": "List of gallery kinds",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/listGalleries\"\nquerystring = {\"perPage\": \"\", \"token\": \"\", \"includeCover\": \"\", \"userId\": \"\", \"sortDirection\": \"\", \"apiKey\": \"\", \"tokenSecret\": \"\", \"privacy\": \"\", \"page\": \"\", \"coverSize\": \"\", \"apiSecret\": \"\", \"sort\": \"\", \"kinds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/listGalleries\"\nquerystring = {\"perPage\": \"\", \"token\": \"\", \"includeCover\": \"\", \"userId\": \"\", \"sortDirection\": \"\", \"apiKey\": \"\", \"tokenSecret\": \"\", \"privacy\": \"\", \"page\": \"\", \"coverSize\": \"\", \"apiSecret\": \"\", \"sort\": \"\", \"kinds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listGalleryPhotos",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/listGalleryPhotos",
            "description": "Returns a listing of twenty (up to one hundred) photos in the given gallery.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "galleryId",
                    "type": "STRING",
                    "description": "Id of the gallery",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "includeTags",
                    "type": "SELECT",
                    "description": " If set to 1, returns an array of tags for the photo.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "The number of results to return. Can not be over 100, default 20.",
                    "default": ""
                },
                {
                    "name": "sortDirection",
                    "type": "SELECT",
                    "description": "Control the order of the sorting. You can provide a sortDirection without providing a sort, in which case the default sort for the requested feature will be adjusted.",
                    "default": ""
                },
                {
                    "name": "includeStore",
                    "type": "SELECT",
                    "description": "If set to 1, returns market infomation about the photo.",
                    "default": ""
                },
                {
                    "name": "includeGeo",
                    "type": "SELECT",
                    "description": "If set to 1, returns location information about the photo.",
                    "default": ""
                },
                {
                    "name": "includeMissing",
                    "type": "SELECT",
                    "description": "If set to 1, returns ids of photos that have been deleted, made private or the owner of the photo is deactivated.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Return a specific page in the photo stream. Page numbering is 1-based.",
                    "default": ""
                },
                {
                    "name": "includeStates",
                    "type": "SELECT",
                    "description": "If set to 1, returns state of the photo for the currently logged in user and authenticated request.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Sort photos in the specified order.",
                    "default": ""
                },
                {
                    "name": "imageSize",
                    "type": "SELECT",
                    "description": "The photo size(s) to be returned",
                    "default": ""
                },
                {
                    "name": "includeLicensing",
                    "type": "SELECT",
                    "description": "If set to 1, returns licensing information for the photo.",
                    "default": ""
                },
                {
                    "name": "includeCategories",
                    "type": "LIST",
                    "description": "Categories to return photos from",
                    "default": ""
                },
                {
                    "name": "excludeCategories",
                    "type": "LIST",
                    "description": "Exclude categories to return photos from",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/listGalleryPhotos\"\nquerystring = {\"token\": \"\", \"apiKey\": \"\", \"userId\": \"\", \"tokenSecret\": \"\", \"apiSecret\": \"\", \"galleryId\": \"\", \"includeTags\": \"\", \"perPage\": \"\", \"sortDirection\": \"\", \"includeStore\": \"\", \"includeGeo\": \"\", \"includeMissing\": \"\", \"page\": \"\", \"includeStates\": \"\", \"sort\": \"\", \"imageSize\": \"\", \"includeLicensing\": \"\", \"includeCategories\": \"\", \"excludeCategories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/listGalleryPhotos\"\nquerystring = {\"token\": \"\", \"apiKey\": \"\", \"userId\": \"\", \"tokenSecret\": \"\", \"apiSecret\": \"\", \"galleryId\": \"\", \"includeTags\": \"\", \"perPage\": \"\", \"sortDirection\": \"\", \"includeStore\": \"\", \"includeGeo\": \"\", \"includeMissing\": \"\", \"page\": \"\", \"includeStates\": \"\", \"sort\": \"\", \"imageSize\": \"\", \"includeLicensing\": \"\", \"includeCategories\": \"\", \"excludeCategories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listPhotoComments",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/listPhotoComments",
            "description": "Returns a listing of twenty comments for the photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "nested",
                    "type": "SELECT",
                    "description": "Include this parameter to return the comments in nested format.",
                    "default": ""
                },
                {
                    "name": "commentsPage",
                    "type": "NUMBER",
                    "description": "Return the specified page from the comments listing. Page numbers are 1-based.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/listPhotoComments\"\nquerystring = {\"nested\": \"\", \"apiSecret\": \"\", \"tokenSecret\": \"\", \"apiKey\": \"\", \"token\": \"\", \"photoId\": \"\", \"commentsPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/listPhotoComments\"\nquerystring = {\"nested\": \"\", \"apiSecret\": \"\", \"tokenSecret\": \"\", \"apiKey\": \"\", \"token\": \"\", \"photoId\": \"\", \"commentsPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listPhotoVotes",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/listPhotoVotes",
            "description": "Returns all users that had liked this photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Return a specific page in the photo stream. Page numbering is 1-based.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "The number of results to return. Can not be over 100, default 20.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/listPhotoVotes\"\nquerystring = {\"apiSecret\": \"\", \"page\": \"\", \"tokenSecret\": \"\", \"perPage\": \"\", \"photoId\": \"\", \"apiKey\": \"\", \"token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/listPhotoVotes\"\nquerystring = {\"apiSecret\": \"\", \"page\": \"\", \"tokenSecret\": \"\", \"perPage\": \"\", \"photoId\": \"\", \"apiKey\": \"\", \"token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listPhotos",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/listPhotos",
            "description": "Returns a listing of twenty (up to one hundred) photos for a specified photo stream.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "feature",
                    "type": "SELECT",
                    "description": "Photo stream to be retrieved. Default fresh_today. All per-user streams require a user_id parameter",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "tags",
                    "type": "SELECT",
                    "description": "If set to 1, returns an array of tags for the photo.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Sort photos in the specified order.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Return a specific page in the photo stream. Page numbering is 1-based.",
                    "default": ""
                },
                {
                    "name": "imageSize",
                    "type": "SELECT",
                    "description": "The photo size(s) to be returned.",
                    "default": ""
                },
                {
                    "name": "includeStates",
                    "type": "SELECT",
                    "description": "If set to 1, returns state of the photo for the currently logged in user and authenticated request.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "The number of results to return. Can not be over 100, default 20.",
                    "default": ""
                },
                {
                    "name": "includeStore",
                    "type": "SELECT",
                    "description": "If set to 1, returns market infomation about the photo.",
                    "default": ""
                },
                {
                    "name": "sortDirection",
                    "type": "SELECT",
                    "description": "Control the order of the sorting. You can provide a sortDirection without providing a sort, in which case the default sort for the requested feature will be adjusted.",
                    "default": ""
                },
                {
                    "name": "personalizedCategories",
                    "type": "SELECT",
                    "description": " If set to true, returns photos from personalized categories for the currently logged in user and authenticated request, if personalization is available for the current user.",
                    "default": ""
                },
                {
                    "name": "userIds",
                    "type": "LIST",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "includeCategories",
                    "type": "LIST",
                    "description": "Categories to return photos from",
                    "default": ""
                },
                {
                    "name": "excludeCategories",
                    "type": "LIST",
                    "description": "Exclude categories to return photos from",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/listPhotos\"\nquerystring = {\"apiKey\": \"\", \"token\": \"\", \"feature\": \"\", \"apiSecret\": \"\", \"tokenSecret\": \"\", \"tags\": \"\", \"sort\": \"\", \"page\": \"\", \"imageSize\": \"\", \"includeStates\": \"\", \"perPage\": \"\", \"includeStore\": \"\", \"sortDirection\": \"\", \"personalizedCategories\": \"\", \"userIds\": \"\", \"includeCategories\": \"\", \"excludeCategories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/listPhotos\"\nquerystring = {\"apiKey\": \"\", \"token\": \"\", \"feature\": \"\", \"apiSecret\": \"\", \"tokenSecret\": \"\", \"tags\": \"\", \"sort\": \"\", \"page\": \"\", \"imageSize\": \"\", \"includeStates\": \"\", \"perPage\": \"\", \"includeStore\": \"\", \"sortDirection\": \"\", \"personalizedCategories\": \"\", \"userIds\": \"\", \"includeCategories\": \"\", \"excludeCategories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listUserFollowers",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/listUserFollowers",
            "description": "Returns a list of users who follow the specified user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "The number of results to return. Can not be over 100, default 20.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Return the specified page of the resource. Page numbering is 1-based..",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/listUserFollowers\"\nquerystring = {\"apiKey\": \"\", \"perPage\": \"\", \"userId\": \"\", \"token\": \"\", \"page\": \"\", \"tokenSecret\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/listUserFollowers\"\nquerystring = {\"apiKey\": \"\", \"perPage\": \"\", \"userId\": \"\", \"token\": \"\", \"page\": \"\", \"tokenSecret\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listUserFriends",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/listUserFriends",
            "description": "Returns a list of friends for the specified user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "The number of results to return. Can not be over 100, default 20.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Return the specified page of the resource. Page numbering is 1-based..",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/listUserFriends\"\nquerystring = {\"token\": \"\", \"userId\": \"\", \"perPage\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"tokenSecret\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/listUserFriends\"\nquerystring = {\"token\": \"\", \"userId\": \"\", \"perPage\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"tokenSecret\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "removePhotos",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/removePhotos",
            "description": "Remove photos",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "galleryId",
                    "type": "STRING",
                    "description": "Id of the gallery",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "photos",
                    "type": "LIST",
                    "description": "list of photo to remove",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/removePhotos\"\nquerystring = {\"apiSecret\": \"\", \"tokenSecret\": \"\", \"galleryId\": \"\", \"token\": \"\", \"userId\": \"\", \"apiKey\": \"\", \"photos\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/removePhotos\"\nquerystring = {\"apiSecret\": \"\", \"tokenSecret\": \"\", \"galleryId\": \"\", \"token\": \"\", \"userId\": \"\", \"apiKey\": \"\", \"photos\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "replyComment",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/replyComment",
            "description": "Creates a reply to an existing comment. ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "commentId",
                    "type": "STRING",
                    "description": "Id of the comment",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "body",
                    "type": "STRING",
                    "description": "Body of the comment",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/replyComment\"\nquerystring = {\"token\": \"\", \"apiKey\": \"\", \"commentId\": \"\", \"apiSecret\": \"\", \"body\": \"\", \"tokenSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/replyComment\"\nquerystring = {\"token\": \"\", \"apiKey\": \"\", \"commentId\": \"\", \"apiSecret\": \"\", \"body\": \"\", \"tokenSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "reportPhoto",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/reportPhoto",
            "description": "Allows to report a photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "reason",
                    "type": "SELECT",
                    "description": " Reason for the report '1' \u2014 Offensive (rude, obscene) '2' \u2014 Spam (ads, self-promotion) '3' \u2014 Offtopic (trolling) '4' \u2014 Copyright (plagiarism, stealing) '5' \u2014 Wrong content (illustration, 3D) '6' \u2014 Should be tagged as adult content",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "reasonDetails",
                    "type": "STRING",
                    "description": "Additional information about the report, as a text blob",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/reportPhoto\"\nquerystring = {\"apiKey\": \"\", \"token\": \"\", \"reasonDetails\": \"\", \"photoId\": \"\", \"tokenSecret\": \"\", \"apiSecret\": \"\", \"reason\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/reportPhoto\"\nquerystring = {\"apiKey\": \"\", \"token\": \"\", \"reasonDetails\": \"\", \"photoId\": \"\", \"tokenSecret\": \"\", \"apiSecret\": \"\", \"reason\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "repositionGalleries",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/repositionGalleries",
            "description": "Reposition galleries",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "galleries",
                    "type": "LIST",
                    "description": "list of galleries to reposition",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "beforeId",
                    "type": "STRING",
                    "description": "The id of another gallery to position the galleries before",
                    "default": ""
                },
                {
                    "name": "afterId",
                    "type": "STRING",
                    "description": "The id of another gallery to position the galleries after",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/repositionGalleries\"\nquerystring = {\"apiSecret\": \"\", \"tokenSecret\": \"\", \"beforeId\": \"\", \"token\": \"\", \"apiKey\": \"\", \"userId\": \"\", \"afterId\": \"\", \"galleries\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/repositionGalleries\"\nquerystring = {\"apiSecret\": \"\", \"tokenSecret\": \"\", \"beforeId\": \"\", \"token\": \"\", \"apiKey\": \"\", \"userId\": \"\", \"afterId\": \"\", \"galleries\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchPhotosByGeo",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/searchPhotosByGeo",
            "description": "Returns a listing of twenty (up to one hundred) photos from search results for a specified geo",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "radius",
                    "type": "STRING",
                    "description": "A geo-location point radius",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "units",
                    "type": "SELECT",
                    "description": "Radius units",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "geo",
                    "type": "MAP",
                    "description": "A geo-location point of the format latitude,longitude",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "feature",
                    "type": "SELECT",
                    "description": "Search only certain feature categories",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Limit your search within photos of the given user.",
                    "default": ""
                },
                {
                    "name": "excludeNude",
                    "type": "SELECT",
                    "description": "Specifically exclude all photos marked as NSFW",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "The number of results to return. Can not be over 100, default 20.",
                    "default": ""
                },
                {
                    "name": "imageSize",
                    "type": "SELECT",
                    "description": "The photo size(s) to be returned",
                    "default": ""
                },
                {
                    "name": "tags",
                    "type": "SELECT",
                    "description": "If set to 1, returns an array of tags for the photo.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Return a specific page in the photo stream. Page numbering is 1-based.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Sort photos in the specified order.",
                    "default": ""
                },
                {
                    "name": "includeCategories",
                    "type": "LIST",
                    "description": "Categories to return photos from",
                    "default": ""
                },
                {
                    "name": "excludeCategories",
                    "type": "LIST",
                    "description": "Exclude categories to return photos from",
                    "default": ""
                },
                {
                    "name": "licenseTypes",
                    "type": "LIST",
                    "description": "Types of licenses",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/searchPhotosByGeo\"\nquerystring = {\"tokenSecret\": \"\", \"radius\": \"\", \"apiSecret\": \"\", \"units\": \"\", \"token\": \"\", \"geo\": \"\", \"feature\": \"\", \"apiKey\": \"\", \"userId\": \"\", \"excludeNude\": \"\", \"perPage\": \"\", \"imageSize\": \"\", \"tags\": \"\", \"page\": \"\", \"sort\": \"\", \"includeCategories\": \"\", \"excludeCategories\": \"\", \"licenseTypes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/searchPhotosByGeo\"\nquerystring = {\"tokenSecret\": \"\", \"radius\": \"\", \"apiSecret\": \"\", \"units\": \"\", \"token\": \"\", \"geo\": \"\", \"feature\": \"\", \"apiKey\": \"\", \"userId\": \"\", \"excludeNude\": \"\", \"perPage\": \"\", \"imageSize\": \"\", \"tags\": \"\", \"page\": \"\", \"sort\": \"\", \"includeCategories\": \"\", \"excludeCategories\": \"\", \"licenseTypes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchPhotosByTag",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/searchPhotosByTag",
            "description": "Returns a listing of twenty (up to one hundred) photos from search results for a specified tag",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "tag",
                    "type": "STRING",
                    "description": "A complete tag string to search for.",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "feature",
                    "type": "SELECT",
                    "description": "Search only certain feature categories",
                    "default": ""
                },
                {
                    "name": "tags",
                    "type": "SELECT",
                    "description": "If set to 1, returns an array of tags for the photo.",
                    "default": ""
                },
                {
                    "name": "imageSize",
                    "type": "SELECT",
                    "description": "The photo size(s) to be returned",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Return a specific page in the photo stream. Page numbering is 1-based.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Limit your search within photos of the given user.",
                    "default": ""
                },
                {
                    "name": "excludeNude",
                    "type": "SELECT",
                    "description": "Specifically exclude all photos marked as NSFW",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "The number of results to return. Can not be over 100, default 20.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Sort photos in the specified order.",
                    "default": ""
                },
                {
                    "name": "includeCategories",
                    "type": "LIST",
                    "description": "Categories to return photos from",
                    "default": ""
                },
                {
                    "name": "excludeCategories",
                    "type": "LIST",
                    "description": "Exclude categories to return photos from",
                    "default": ""
                },
                {
                    "name": "licenseTypes",
                    "type": "LIST",
                    "description": "Types of licenses",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/searchPhotosByTag\"\nquerystring = {\"apiKey\": \"\", \"tag\": \"\", \"token\": \"\", \"tokenSecret\": \"\", \"apiSecret\": \"\", \"feature\": \"\", \"tags\": \"\", \"imageSize\": \"\", \"page\": \"\", \"userId\": \"\", \"excludeNude\": \"\", \"perPage\": \"\", \"sort\": \"\", \"includeCategories\": \"\", \"excludeCategories\": \"\", \"licenseTypes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/searchPhotosByTag\"\nquerystring = {\"apiKey\": \"\", \"tag\": \"\", \"token\": \"\", \"tokenSecret\": \"\", \"apiSecret\": \"\", \"feature\": \"\", \"tags\": \"\", \"imageSize\": \"\", \"page\": \"\", \"userId\": \"\", \"excludeNude\": \"\", \"perPage\": \"\", \"sort\": \"\", \"includeCategories\": \"\", \"excludeCategories\": \"\", \"licenseTypes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchPhotosByTerm",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/searchPhotosByTerm",
            "description": "Returns a listing of twenty (up to one hundred) photos from search results for a specified term",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "term",
                    "type": "STRING",
                    "description": "A keyword to search for.",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "feature",
                    "type": "SELECT",
                    "description": "Search only certain feature categories",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Return a specific page in the photo stream. Page numbering is 1-based.",
                    "default": ""
                },
                {
                    "name": "tags",
                    "type": "SELECT",
                    "description": "If set to 1, returns an array of tags for the photo.",
                    "default": ""
                },
                {
                    "name": "imageSize",
                    "type": "SELECT",
                    "description": "The photo size(s) to be returned",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "The number of results to return. Can not be over 100, default 20.",
                    "default": ""
                },
                {
                    "name": "excludeNude",
                    "type": "SELECT",
                    "description": "Specifically exclude all photos marked as NSFW",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Limit your search within photos of the given user.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "Sort photos in the specified order.",
                    "default": ""
                },
                {
                    "name": "includeCategories",
                    "type": "LIST",
                    "description": "Categories to return photos from",
                    "default": ""
                },
                {
                    "name": "excludeCategories",
                    "type": "LIST",
                    "description": "Exclude categories to return photos from",
                    "default": ""
                },
                {
                    "name": "licenseTypes",
                    "type": "LIST",
                    "description": "Types of licenses",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/searchPhotosByTerm\"\nquerystring = {\"apiKey\": \"\", \"token\": \"\", \"term\": \"\", \"tokenSecret\": \"\", \"apiSecret\": \"\", \"feature\": \"\", \"page\": \"\", \"tags\": \"\", \"imageSize\": \"\", \"perPage\": \"\", \"excludeNude\": \"\", \"userId\": \"\", \"sort\": \"\", \"includeCategories\": \"\", \"excludeCategories\": \"\", \"licenseTypes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/searchPhotosByTerm\"\nquerystring = {\"apiKey\": \"\", \"token\": \"\", \"term\": \"\", \"tokenSecret\": \"\", \"apiSecret\": \"\", \"feature\": \"\", \"page\": \"\", \"tags\": \"\", \"imageSize\": \"\", \"perPage\": \"\", \"excludeNude\": \"\", \"userId\": \"\", \"sort\": \"\", \"includeCategories\": \"\", \"excludeCategories\": \"\", \"licenseTypes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchUsers",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/searchUsers",
            "description": "Return listing of ten (up to one hundred) users from search results for a specified search term.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "term",
                    "type": "STRING",
                    "description": "A keyword to search for.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/searchUsers\"\nquerystring = {\"token\": \"\", \"term\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"tokenSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/searchUsers\"\nquerystring = {\"token\": \"\", \"term\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"tokenSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updatePhoto",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/updatePhoto",
            "description": "Allows the client application to update user-editable information on a photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenSecret",
                    "type": "STRING",
                    "description": "The tokenSecret obtained",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Your API secret",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "category",
                    "type": "SELECT",
                    "description": "Category of the photo",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Title of the photo, up to 255 characters in length.",
                    "default": ""
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "Text description of the photo, up to 65535 characters in length.",
                    "default": ""
                },
                {
                    "name": "aperture",
                    "type": "STRING",
                    "description": "Aperture value value for the photo, internally stored as string.",
                    "default": ""
                },
                {
                    "name": "coordinates",
                    "type": "MAP",
                    "description": "Location this photo was taken at",
                    "default": ""
                },
                {
                    "name": "crop",
                    "type": "STRING",
                    "description": "A hash containing keys x, x2, y, y2 and representing coordinates within which the thumbnail must be cropped. The crop is made using the top left corner as the origin. ",
                    "default": ""
                },
                {
                    "name": "camera",
                    "type": "STRING",
                    "description": "Make and model of the camera used to take this photo.",
                    "default": ""
                },
                {
                    "name": "shutterSpeed",
                    "type": "STRING",
                    "description": "Shutter speed value for the photo, internally stored as string.",
                    "default": ""
                },
                {
                    "name": "licenseTypes",
                    "type": "SELECT",
                    "description": "Types of licenses",
                    "default": ""
                },
                {
                    "name": "privacy",
                    "type": "SELECT",
                    "description": "Integer value indicating that the photo should be shown (0) or hidden (1) on the user's profile.",
                    "default": ""
                },
                {
                    "name": "focalLength",
                    "type": "STRING",
                    "description": "Focal length value for the photo, internally stored as string.",
                    "default": ""
                },
                {
                    "name": "iso",
                    "type": "STRING",
                    "description": "Integer ISO value for the photo.",
                    "default": ""
                },
                {
                    "name": "nsfw",
                    "type": "SELECT",
                    "description": "Boolean value indicating that the photo may contain not-safe-for-work content or content not suitable for minors.",
                    "default": ""
                },
                {
                    "name": "lens",
                    "type": "STRING",
                    "description": "Information about the lens used to take this photo.",
                    "default": ""
                },
                {
                    "name": "tags",
                    "type": "LIST",
                    "description": "List of tags applicable to this photo.",
                    "default": ""
                },
                {
                    "name": "addTags",
                    "type": "LIST",
                    "description": "list of tags to add to this photo's existing tags.",
                    "default": ""
                },
                {
                    "name": "removeTags",
                    "type": "LIST",
                    "description": "list of tags to remove from this photo's existing tags.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/updatePhoto\"\nquerystring = {\"category\": \"\", \"name\": \"\", \"tokenSecret\": \"\", \"apiSecret\": \"\", \"token\": \"\", \"photoId\": \"\", \"description\": \"\", \"apiKey\": \"\", \"aperture\": \"\", \"coordinates\": \"\", \"crop\": \"\", \"camera\": \"\", \"shutterSpeed\": \"\", \"licenseTypes\": \"\", \"privacy\": \"\", \"focalLength\": \"\", \"iso\": \"\", \"nsfw\": \"\", \"lens\": \"\", \"tags\": \"\", \"addTags\": \"\", \"removeTags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/updatePhoto\"\nquerystring = {\"category\": \"\", \"name\": \"\", \"tokenSecret\": \"\", \"apiSecret\": \"\", \"token\": \"\", \"photoId\": \"\", \"description\": \"\", \"apiKey\": \"\", \"aperture\": \"\", \"coordinates\": \"\", \"crop\": \"\", \"camera\": \"\", \"shutterSpeed\": \"\", \"licenseTypes\": \"\", \"privacy\": \"\", \"focalLength\": \"\", \"iso\": \"\", \"nsfw\": \"\", \"lens\": \"\", \"tags\": \"\", \"addTags\": \"\", \"removeTags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "uploadPhoto",
            "url": "https://500pxstefan-skliarovV1.p.rapidapi.com/uploadPhoto",
            "description": "Upload a photo",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "uploadKey",
                    "type": "STRING",
                    "description": "Upload key received in the response to addPhoto",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "Text description of the photo, up to 65535 characters in length.",
                    "default": ""
                },
                {
                    "name": "file",
                    "type": "FILE",
                    "description": "Photo file",
                    "default": ""
                },
                {
                    "name": "category",
                    "type": "SELECT",
                    "description": "Category of the photo",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Title of the photo, up to 255 characters in length.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The ID of the photo the file is being uploaded for",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "The oauthToken obtained",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "camera",
                    "type": "STRING",
                    "description": "Make and model of the camera used to take this photo.",
                    "default": ""
                },
                {
                    "name": "shutterSpeed",
                    "type": "STRING",
                    "description": "Shutter speed value for the photo, internally stored as string.",
                    "default": ""
                },
                {
                    "name": "crop",
                    "type": "STRING",
                    "description": "A hash containing keys x, x2, y, y2 and representing coordinates within which the thumbnail must be cropped. The crop is made using the top left corner as the origin. ",
                    "default": ""
                },
                {
                    "name": "coordinates",
                    "type": "MAP",
                    "description": "Location this photo was taken at",
                    "default": ""
                },
                {
                    "name": "aperture",
                    "type": "STRING",
                    "description": "Aperture value value for the photo, internally stored as string.",
                    "default": ""
                },
                {
                    "name": "privacy",
                    "type": "SELECT",
                    "description": "Integer value indicating that the photo should be shown (0) or hidden (1) on the user's profile.",
                    "default": ""
                },
                {
                    "name": "iso",
                    "type": "STRING",
                    "description": "Integer ISO value for the photo.",
                    "default": ""
                },
                {
                    "name": "focalLength",
                    "type": "STRING",
                    "description": "Focal length value for the photo, internally stored as string.",
                    "default": ""
                },
                {
                    "name": "lens",
                    "type": "STRING",
                    "description": "Information about the lens used to take this photo.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/uploadPhoto\"\nquerystring = {\"camera\": \"\", \"shutterSpeed\": \"\", \"crop\": \"\", \"coordinates\": \"\", \"uploadKey\": \"\", \"apiKey\": \"\", \"description\": \"\", \"file\": \"\", \"aperture\": \"\", \"category\": \"\", \"name\": \"\", \"photoId\": \"\", \"privacy\": \"\", \"iso\": \"\", \"focalLength\": \"\", \"token\": \"\", \"lens\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://500pxstefan-skliarovV1.p.rapidapi.com/uploadPhoto\"\nquerystring = {\"camera\": \"\", \"shutterSpeed\": \"\", \"crop\": \"\", \"coordinates\": \"\", \"uploadKey\": \"\", \"apiKey\": \"\", \"description\": \"\", \"file\": \"\", \"aperture\": \"\", \"category\": \"\", \"name\": \"\", \"photoId\": \"\", \"privacy\": \"\", \"iso\": \"\", \"focalLength\": \"\", \"token\": \"\", \"lens\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"500pxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}