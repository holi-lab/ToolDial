{
    "product_id": "api_1e27afdf-4a3d-48b7-80bd-66517d505933",
    "tool_description": "Image Converter provides cloud API to implement conversion between various image formats.",
    "home_url": "https://rapidapi.com/petadata/api/image-converter4/",
    "name": "Image Converter",
    "title": "Image Converter",
    "pricing": "FREEMIUM",
    "tool_name": "Image Converter",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 220,
        "avgSuccessRate": 100,
        "popularityScore": 9.4,
        "__typename": "Score"
    },
    "host": "image-converter4.p.rapidapi.com",
    "api_list": [
        {
            "name": "ConvertToWmf",
            "url": "https://image-converter4.p.rapidapi.com/convertToWmf",
            "description": "Creates Windows Metafile (WMF) image from various image formats.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "Source image file to convert to WMF image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "resolution",
                    "type": "NUMBER",
                    "description": "Sets the image resolution of the conversion process. The resolution value is represented by positive integers or non-negative integers starting from 10 and ending with 1200.",
                    "default": ""
                },
                {
                    "name": "enableCompression",
                    "type": "BOOLEAN",
                    "description": "Set false to disable compression",
                    "default": "true"
                }
            ],
            "code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/convertToWmf\"\nquerystring = {\"file\": \"\", \"resolution\": \"\", \"enableCompression\": \"true\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/convertToWmf\"\nquerystring = {\"file\": \"\", \"resolution\": \"\", \"enableCompression\": \"true\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "ConvertToWebP",
            "url": "https://image-converter4.p.rapidapi.com/convertToWebP",
            "description": "Creates Google WebP image from various image formats.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "Source image file to convert to WebP image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "lossy",
                    "type": "BOOLEAN",
                    "description": "Set false for Lossless encoding",
                    "default": "true"
                },
                {
                    "name": "quality",
                    "type": "NUMBER",
                    "description": "Sets the encoding quality of the conversion process. The quality value is represented by positive integers or non-negative integers starting from 10 and ending with 100. 100 means highest quality.",
                    "default": ""
                },
                {
                    "name": "resolution",
                    "type": "NUMBER",
                    "description": "Sets the image resolution of the conversion process. The resolution value is represented by positive integers or non-negative integers starting from 10 and ending with 1200.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/convertToWebP\"\nquerystring = {\"lossy\": \"true\", \"quality\": \"\", \"file\": \"\", \"resolution\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/convertToWebP\"\nquerystring = {\"lossy\": \"true\", \"quality\": \"\", \"file\": \"\", \"resolution\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "ConvertToTiff",
            "url": "https://image-converter4.p.rapidapi.com/convertToTiff",
            "description": "Creates Tagged Image File Format (TIFF) image from various image formats.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "Source image file to convert to TIFF image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "keywords",
                    "type": "STRING",
                    "description": "To set TIFF image keywords field",
                    "default": ""
                },
                {
                    "name": "compressor",
                    "type": "ENUM",
                    "description": "You can disable compression using NoCompression. Or you can choose one of the Deflate or Lzw compression algorithm.",
                    "default": ""
                },
                {
                    "name": "colorType",
                    "type": "ENUM",
                    "description": "To set TIFF colour space is either RGB or Black White.",
                    "default": ""
                },
                {
                    "name": "resolution",
                    "type": "NUMBER",
                    "description": "Sets the image resolution of the conversion process. The resolution value is represented by positive integers or non-negative integers starting from 10 and ending with 1200.",
                    "default": ""
                },
                {
                    "name": "subject",
                    "type": "STRING",
                    "description": "To set TIFF image subject field",
                    "default": ""
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "To set TIFF image title field",
                    "default": ""
                },
                {
                    "name": "comments",
                    "type": "STRING",
                    "description": "To set TIFF image comments field",
                    "default": ""
                },
                {
                    "name": "enableTransparencyInColorfulMode",
                    "type": "BOOLEAN",
                    "description": "Set true to enable alpha channel in converted TIFF image",
                    "default": "true"
                },
                {
                    "name": "byteOrder",
                    "type": "ENUM",
                    "description": "To specify encoding byte order.\nDefault: LittleEndian",
                    "default": ""
                },
                {
                    "name": "author",
                    "type": "STRING",
                    "description": "To set TIFF image author field",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/convertToTiff\"\nquerystring = {\"keywords\": \"\", \"compressor\": \"\", \"file\": \"\", \"colorType\": \"\", \"resolution\": \"\", \"subject\": \"\", \"title\": \"\", \"comments\": \"\", \"enableTransparencyInColorfulMode\": \"true\", \"byteOrder\": \"\", \"author\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/convertToTiff\"\nquerystring = {\"keywords\": \"\", \"compressor\": \"\", \"file\": \"\", \"colorType\": \"\", \"resolution\": \"\", \"subject\": \"\", \"title\": \"\", \"comments\": \"\", \"enableTransparencyInColorfulMode\": \"true\", \"byteOrder\": \"\", \"author\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "ConvertToTga",
            "url": "https://image-converter4.p.rapidapi.com/convertToTga",
            "description": "Creates Truevision Advanced Raster Graphics Adapter (TARGA or TGA) image from various image formats.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "Source image file to convert to TGA image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "resolution",
                    "type": "NUMBER",
                    "description": "Sets the image resolution of the conversion process. The resolution value is represented by positive integers or non-negative integers starting from 10 and ending with 1200.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/convertToTga\"\nquerystring = {\"file\": \"\", \"resolution\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/convertToTga\"\nquerystring = {\"file\": \"\", \"resolution\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "ConvertToPng",
            "url": "https://image-converter4.p.rapidapi.com/convertToPng",
            "description": "Creates Portable Graphics Format (PNG) image from various image formats.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "Source image file to convert to PNG image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "compressionRate",
                    "type": "NUMBER",
                    "description": "Sets the compression rate of the conversion process. The compression rate value is represented by positive integers or non-negative integers starting from 0 and ending with 100. 100 means highest compression.",
                    "default": ""
                },
                {
                    "name": "encoderMode",
                    "type": "ENUM",
                    "description": "You can set encoding mode to Progressive or Baseline mode. Api uses Progressive as default encoding mode. Please check [this page](https://www.liquidweb.com/kb/what-is-a-progressive-jpeg/) for more details about modes.",
                    "default": ""
                },
                {
                    "name": "colorType",
                    "type": "ENUM",
                    "description": "To convert to grayscale image you can set Grayscale.\nDefault: Colorful",
                    "default": ""
                },
                {
                    "name": "enableTransparency",
                    "type": "BOOLEAN",
                    "description": "Set false to disable transparency",
                    "default": "true"
                },
                {
                    "name": "resolution",
                    "type": "NUMBER",
                    "description": "Sets the image resolution of the conversion process. The resolution value is represented by positive integers or non-negative integers starting from 10 and ending with 1200.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/convertToPng\"\nquerystring = {\"compressionRate\": \"\", \"encoderMode\": \"\", \"file\": \"\", \"colorType\": \"\", \"enableTransparency\": \"true\", \"resolution\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/convertToPng\"\nquerystring = {\"compressionRate\": \"\", \"encoderMode\": \"\", \"file\": \"\", \"colorType\": \"\", \"enableTransparency\": \"true\", \"resolution\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "ConvertToJpeg",
            "url": "https://image-converter4.p.rapidapi.com/convertToJpeg",
            "description": "Creates Joint Photographic Experts Group (JPEG) image from various image formats.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "Source image file to convert to Jpeg image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "quality",
                    "type": "NUMBER",
                    "description": "Sets the encoding quality of the conversion process. The quality value is represented by positive integers or non-negative integers starting from 10 and ending with 100. 100 means highest quality.",
                    "default": ""
                },
                {
                    "name": "colorType",
                    "type": "ENUM",
                    "description": "Sets Jpeg color set.",
                    "default": ""
                },
                {
                    "name": "resolution",
                    "type": "NUMBER",
                    "description": "Sets the image resolution of the conversion process. The resolution value is represented by positive integers or non-negative integers starting from 10 and ending with 1200.",
                    "default": ""
                },
                {
                    "name": "comment",
                    "type": "STRING",
                    "description": "To add comment to converted Jpeg file",
                    "default": ""
                },
                {
                    "name": "encodingMode",
                    "type": "ENUM",
                    "description": "You can set encoding mode to Progressive or Baseline mode. Api uses Progressive as default encoding mode. Please check [this page](https://www.liquidweb.com/kb/what-is-a-progressive-jpeg/) for more details about modes.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/convertToJpeg\"\nquerystring = {\"quality\": \"\", \"colorType\": \"\", \"resolution\": \"\", \"comment\": \"\", \"file\": \"\", \"encodingMode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/convertToJpeg\"\nquerystring = {\"quality\": \"\", \"colorType\": \"\", \"resolution\": \"\", \"comment\": \"\", \"file\": \"\", \"encodingMode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "ConvertToGif",
            "url": "https://image-converter4.p.rapidapi.com/convertToGif",
            "description": "Creates Graphics Interchange Format (GIF) image from various image formats.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "Source image file to convert to GIF image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "gifCompressionLevel",
                    "type": "NUMBER",
                    "description": "Sets the compression level of the conversion process. The compression level value is represented by positive integers or non-negative integers starting from 50 and ending with 200. 200 means highest compression.",
                    "default": ""
                },
                {
                    "name": "resolution",
                    "type": "NUMBER",
                    "description": "Sets the image resolution of the conversion process. The resolution value is represented by positive integers or non-negative integers starting from 10 and ending with 1200.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/convertToGif\"\nquerystring = {\"file\": \"\", \"gifCompressionLevel\": \"\", \"resolution\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/convertToGif\"\nquerystring = {\"file\": \"\", \"gifCompressionLevel\": \"\", \"resolution\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "ConvertToEmf",
            "url": "https://image-converter4.p.rapidapi.com/convertToEmf",
            "description": "Creates Enhanced MetaFile (EMF) image from various image formats.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "Source image file to convert to EMF image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "resolution",
                    "type": "NUMBER",
                    "description": "Sets the image resolution of the conversion process. The resolution value is represented by positive integers or non-negative integers starting from 10 and ending with 1200.",
                    "default": ""
                },
                {
                    "name": "enableCompression",
                    "type": "BOOLEAN",
                    "description": "You can set false to disable EMF compression",
                    "default": "true"
                }
            ],
            "code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/convertToEmf\"\nquerystring = {\"resolution\": \"\", \"file\": \"\", \"enableCompression\": \"true\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/convertToEmf\"\nquerystring = {\"resolution\": \"\", \"file\": \"\", \"enableCompression\": \"true\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "ConvertToDxf",
            "url": "https://image-converter4.p.rapidapi.com/convertToDxf",
            "description": "Creates Drawing Exchange Format (DXF) image from various image formats.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "Source image file to convert to DXF image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "resolution",
                    "type": "NUMBER",
                    "description": "Sets the image resolution of the conversion process. The resolution value is represented by positive integers or non-negative integers starting from 10 and ending with 1200.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/convertToDxf\"\nquerystring = {\"resolution\": \"\", \"file\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/convertToDxf\"\nquerystring = {\"resolution\": \"\", \"file\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "ConvertToDicom",
            "url": "https://image-converter4.p.rapidapi.com/convertToDicom",
            "description": "Creates Digital Imaging and Communications in Medicine (DICOM) image from various image formats.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "Source image file to convert to DICOM image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pixelFormat",
                    "type": "ENUM",
                    "description": "Sets DICOM pixel format. Valid values are Colorful24Bit, Grayscale16Bit and Grayscale8Bit",
                    "default": ""
                },
                {
                    "name": "resolution",
                    "type": "NUMBER",
                    "description": "Sets the image resolution of the conversion process. The resolution value is represented by positive integers or non-negative integers starting from 10 and ending with 1200.",
                    "default": ""
                },
                {
                    "name": "encoderMode",
                    "type": "ENUM",
                    "description": "You can set encoding mode to Progressive or Baseline mode. Api uses Progressive as default encoding mode. Please check [this page](https://www.liquidweb.com/kb/what-is-a-progressive-jpeg/) for more details about modes.",
                    "default": ""
                },
                {
                    "name": "quality",
                    "type": "NUMBER",
                    "description": "Sets the encoding quality of the conversion process. The quality value is represented by positive integers or non-negative integers starting from 10 and ending with 100. 100 means highest quality.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/convertToDicom\"\nquerystring = {\"pixelFormat\": \"\", \"resolution\": \"\", \"encoderMode\": \"\", \"file\": \"\", \"quality\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/convertToDicom\"\nquerystring = {\"pixelFormat\": \"\", \"resolution\": \"\", \"encoderMode\": \"\", \"file\": \"\", \"quality\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "ConvertToBmp",
            "url": "https://image-converter4.p.rapidapi.com/convertToBmp",
            "description": "Creates Bitmap (BMP) image from various image formats.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "Source image file to convert to bitmap image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "resolution",
                    "type": "NUMBER",
                    "description": "Sets the image resolution of the conversion process. The resolution value is represented by positive integers or non-negative integers starting from 10 and ending with 1200.",
                    "default": ""
                },
                {
                    "name": "bitsPerPixel",
                    "type": "NUMBER",
                    "description": "How many bits needed each for each pixel. Valid values are 1,2,4,8,16 and 32",
                    "default": "32"
                }
            ],
            "code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/convertToBmp\"\nquerystring = {\"file\": \"\", \"resolution\": \"\", \"bitsPerPixel\": \"32\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/convertToBmp\"\nquerystring = {\"file\": \"\", \"resolution\": \"\", \"bitsPerPixel\": \"32\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "SubmitWmfConversionTask",
            "url": "https://image-converter4.p.rapidapi.com/submitWmfConversionTask",
            "description": "Creates Windows Metafile (WMF) conversion task and returns **taskId**. You will use returned **taskId** to check task status and to download the converted image",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "Source image file to convert to WMF image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "resolution",
                    "type": "NUMBER",
                    "description": "Sets the image resolution of the conversion process. The resolution value is represented by positive integers or non-negative integers starting from 10 and ending with 1200.",
                    "default": ""
                },
                {
                    "name": "enableCompression",
                    "type": "BOOLEAN",
                    "description": "Set false to disable compression",
                    "default": "true"
                }
            ],
            "code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/submitWmfConversionTask\"\nquerystring = {\"file\": \"\", \"resolution\": \"\", \"enableCompression\": \"true\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/submitWmfConversionTask\"\nquerystring = {\"file\": \"\", \"resolution\": \"\", \"enableCompression\": \"true\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "SubmitWebPConversionTask",
            "url": "https://image-converter4.p.rapidapi.com/submitWebPConversionTask",
            "description": "Creates Google WebP conversion task and returns **taskId**. You will use returned **taskId** to check task status and to download the converted image",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "Source image file to convert to WebP image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "quality",
                    "type": "NUMBER",
                    "description": "Sets the encoding quality of the conversion process. The quality value is represented by positive integers or non-negative integers starting from 10 and ending with 100. 100 means highest quality.",
                    "default": ""
                },
                {
                    "name": "resolution",
                    "type": "NUMBER",
                    "description": "Sets the image resolution of the conversion process. The resolution value is represented by positive integers or non-negative integers starting from 10 and ending with 1200.",
                    "default": ""
                },
                {
                    "name": "lossy",
                    "type": "BOOLEAN",
                    "description": "Set false for Lossless encoding",
                    "default": "true"
                }
            ],
            "code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/submitWebPConversionTask\"\nquerystring = {\"quality\": \"\", \"resolution\": \"\", \"file\": \"\", \"lossy\": \"true\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/submitWebPConversionTask\"\nquerystring = {\"quality\": \"\", \"resolution\": \"\", \"file\": \"\", \"lossy\": \"true\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "SubmitTiffConversionTask",
            "url": "https://image-converter4.p.rapidapi.com/submitTiffConversionTask",
            "description": "Creates Tagged Image File Format (TIFF) conversion task and returns **taskId**. You will use returned **taskId** to check task status and to download the converted image",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "Source image file to convert to TIFF image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "compressor",
                    "type": "ENUM",
                    "description": "You can disable compression using NoCompression. Or you can choose one of the Deflate or Lzw compression algorithm.",
                    "default": ""
                },
                {
                    "name": "colorType",
                    "type": "ENUM",
                    "description": "To set TIFF colour space is either RGB or Black White.",
                    "default": ""
                },
                {
                    "name": "enableTransparencyInColorfulMode",
                    "type": "BOOLEAN",
                    "description": "Set true to enable alpha channel in converted TIFF image",
                    "default": "true"
                },
                {
                    "name": "resolution",
                    "type": "NUMBER",
                    "description": "Sets the image resolution of the conversion process. The resolution value is represented by positive integers or non-negative integers starting from 10 and ending with 1200.",
                    "default": ""
                },
                {
                    "name": "subject",
                    "type": "STRING",
                    "description": "To set TIFF image subject field",
                    "default": ""
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "To set TIFF image title field",
                    "default": ""
                },
                {
                    "name": "byteOrder",
                    "type": "ENUM",
                    "description": "To specify encoding byte order.\nDefault: LittleEndian",
                    "default": ""
                },
                {
                    "name": "comments",
                    "type": "STRING",
                    "description": "To set TIFF image comments field",
                    "default": ""
                },
                {
                    "name": "keywords",
                    "type": "STRING",
                    "description": "To set TIFF image keywords field",
                    "default": ""
                },
                {
                    "name": "author",
                    "type": "STRING",
                    "description": "To set TIFF image author field",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/submitTiffConversionTask\"\nquerystring = {\"file\": \"\", \"compressor\": \"\", \"colorType\": \"\", \"enableTransparencyInColorfulMode\": \"true\", \"resolution\": \"\", \"subject\": \"\", \"title\": \"\", \"byteOrder\": \"\", \"comments\": \"\", \"keywords\": \"\", \"author\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/submitTiffConversionTask\"\nquerystring = {\"file\": \"\", \"compressor\": \"\", \"colorType\": \"\", \"enableTransparencyInColorfulMode\": \"true\", \"resolution\": \"\", \"subject\": \"\", \"title\": \"\", \"byteOrder\": \"\", \"comments\": \"\", \"keywords\": \"\", \"author\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "SubmitTgaConversionTask",
            "url": "https://image-converter4.p.rapidapi.com/submitTgaConversionTask",
            "description": "Creates Truevision Advanced Raster Graphics Adapter (TARGA or TGA) conversion task and returns **taskId**. You will use returned **taskId** to check task status and to download the converted image",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "Source image file to convert to TGA image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "resolution",
                    "type": "NUMBER",
                    "description": "Sets the image resolution of the conversion process. The resolution value is represented by positive integers or non-negative integers starting from 10 and ending with 1200.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/submitTgaConversionTask\"\nquerystring = {\"file\": \"\", \"resolution\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/submitTgaConversionTask\"\nquerystring = {\"file\": \"\", \"resolution\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "SubmitPngConversionTask",
            "url": "https://image-converter4.p.rapidapi.com/submitPngConversionTask",
            "description": "Creates Portable Graphics Format (PNG) conversion task and returns **taskId**. You will use returned **taskId** to check task status and to download the converted image",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "Source image file to convert to PNG image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "colorType",
                    "type": "ENUM",
                    "description": "To convert to grayscale image you can set Grayscale.\nDefault: Colorful",
                    "default": ""
                },
                {
                    "name": "encoderMode",
                    "type": "ENUM",
                    "description": "You can set encoding mode to Progressive or Baseline mode. Api uses Progressive as default encoding mode. Please check [this page](https://www.liquidweb.com/kb/what-is-a-progressive-jpeg/) for more details about modes.",
                    "default": ""
                },
                {
                    "name": "resolution",
                    "type": "NUMBER",
                    "description": "Sets the image resolution of the conversion process. The resolution value is represented by positive integers or non-negative integers starting from 10 and ending with 1200.",
                    "default": ""
                },
                {
                    "name": "compressionRate",
                    "type": "NUMBER",
                    "description": "Sets the compression rate of the conversion process. The compression rate value is represented by positive integers or non-negative integers starting from 0 and ending with 100. 100 means highest compression.",
                    "default": ""
                },
                {
                    "name": "enableTransparency",
                    "type": "BOOLEAN",
                    "description": "Set false to disable transparency",
                    "default": "true"
                }
            ],
            "code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/submitPngConversionTask\"\nquerystring = {\"file\": \"\", \"colorType\": \"\", \"encoderMode\": \"\", \"resolution\": \"\", \"compressionRate\": \"\", \"enableTransparency\": \"true\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/submitPngConversionTask\"\nquerystring = {\"file\": \"\", \"colorType\": \"\", \"encoderMode\": \"\", \"resolution\": \"\", \"compressionRate\": \"\", \"enableTransparency\": \"true\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "SubmitJpegConversionTask",
            "url": "https://image-converter4.p.rapidapi.com/submitJpegConversionTask",
            "description": "Creates Joint Photographic Experts Group (JPEG) conversion task and returns **taskId**. You will use returned **taskId** to check task status and to download the converted image",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "Source image file to convert to Jpeg image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "quality",
                    "type": "NUMBER",
                    "description": "Sets the encoding quality of the conversion process. The quality value is represented by positive integers or non-negative integers starting from 10 and ending with 100. 100 means highest quality.",
                    "default": ""
                },
                {
                    "name": "encodingMode",
                    "type": "ENUM",
                    "description": "You can set encoding mode to Progressive or Baseline mode. Api uses Progressive as default encoding mode. Please check [this page](https://www.liquidweb.com/kb/what-is-a-progressive-jpeg/) for more details about modes.",
                    "default": ""
                },
                {
                    "name": "comment",
                    "type": "STRING",
                    "description": "To add comment to converted Jpeg file",
                    "default": ""
                },
                {
                    "name": "resolution",
                    "type": "NUMBER",
                    "description": "Sets the image resolution of the conversion process. The resolution value is represented by positive integers or non-negative integers starting from 10 and ending with 1200.",
                    "default": ""
                },
                {
                    "name": "colorType",
                    "type": "ENUM",
                    "description": "Sets Jpeg color set.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/submitJpegConversionTask\"\nquerystring = {\"file\": \"\", \"quality\": \"\", \"encodingMode\": \"\", \"comment\": \"\", \"resolution\": \"\", \"colorType\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/submitJpegConversionTask\"\nquerystring = {\"file\": \"\", \"quality\": \"\", \"encodingMode\": \"\", \"comment\": \"\", \"resolution\": \"\", \"colorType\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "SubmitEmfConversionTask",
            "url": "https://image-converter4.p.rapidapi.com/submitEmfConversionTask",
            "description": "Creates Enhanced MetaFile (EMF) conversion task and returns **taskId**. You will use returned **taskId** to check task status and to download the converted image",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "Source image file to convert to EMF image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "resolution",
                    "type": "NUMBER",
                    "description": "Sets the image resolution of the conversion process. The resolution value is represented by positive integers or non-negative integers starting from 10 and ending with 1200.",
                    "default": ""
                },
                {
                    "name": "enableCompression",
                    "type": "BOOLEAN",
                    "description": "You can set false to disable EMF compression",
                    "default": "true"
                }
            ],
            "code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/submitEmfConversionTask\"\nquerystring = {\"file\": \"\", \"resolution\": \"\", \"enableCompression\": \"true\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/submitEmfConversionTask\"\nquerystring = {\"file\": \"\", \"resolution\": \"\", \"enableCompression\": \"true\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "SubmitDxfConversionTask",
            "url": "https://image-converter4.p.rapidapi.com/submitDxfConversionTask",
            "description": "Creates Drawing Exchange Format (DXF) conversion task and returns **taskId**. You will use returned **taskId** to check task status and to download the converted image",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "Source image file to convert to DXF image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "resolution",
                    "type": "NUMBER",
                    "description": "Sets the image resolution of the conversion process. The resolution value is represented by positive integers or non-negative integers starting from 10 and ending with 1200.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/submitDxfConversionTask\"\nquerystring = {\"resolution\": \"\", \"file\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/submitDxfConversionTask\"\nquerystring = {\"resolution\": \"\", \"file\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "SubmitGifConversionTask",
            "url": "https://image-converter4.p.rapidapi.com/submitGifConversionTask",
            "description": "Creates Graphics Interchange Format (GIF) conversion task and returns **taskId**. You will use returned **taskId** to check task status and to download the converted image",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "Source image file to convert to GIF image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "gifCompressionLevel",
                    "type": "NUMBER",
                    "description": "Sets the compression level of the conversion process. The compression level value is represented by positive integers or non-negative integers starting from 50 and ending with 200. 200 means highest compression.",
                    "default": ""
                },
                {
                    "name": "resolution",
                    "type": "NUMBER",
                    "description": "Sets the image resolution of the conversion process. The resolution value is represented by positive integers or non-negative integers starting from 10 and ending with 1200.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/submitGifConversionTask\"\nquerystring = {\"file\": \"\", \"gifCompressionLevel\": \"\", \"resolution\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/submitGifConversionTask\"\nquerystring = {\"file\": \"\", \"gifCompressionLevel\": \"\", \"resolution\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "SubmitDicomConversionTask",
            "url": "https://image-converter4.p.rapidapi.com/submitDicomConversionTask",
            "description": "Creates Digital Imaging and Communications in Medicine (DICOM) conversion task and returns **taskId**. You will use returned **taskId** to check task status and to download the converted image",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "Source image file to convert to DICOM image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "encoderMode",
                    "type": "ENUM",
                    "description": "You can set encoding mode to Progressive or Baseline mode. Api uses Progressive as default encoding mode. Please check [this page](https://www.liquidweb.com/kb/what-is-a-progressive-jpeg/) for more details about modes.",
                    "default": ""
                },
                {
                    "name": "resolution",
                    "type": "NUMBER",
                    "description": "Sets the image resolution of the conversion process. The resolution value is represented by positive integers or non-negative integers starting from 10 and ending with 1200.",
                    "default": ""
                },
                {
                    "name": "quality",
                    "type": "NUMBER",
                    "description": "Sets the encoding quality of the conversion process. The quality value is represented by positive integers or non-negative integers starting from 10 and ending with 100. 100 means highest quality.",
                    "default": ""
                },
                {
                    "name": "pixelFormat",
                    "type": "ENUM",
                    "description": "Sets DICOM pixel format. Valid values are Colorful24Bit, Grayscale16Bit and Grayscale8Bit",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/submitDicomConversionTask\"\nquerystring = {\"encoderMode\": \"\", \"file\": \"\", \"resolution\": \"\", \"quality\": \"\", \"pixelFormat\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/submitDicomConversionTask\"\nquerystring = {\"encoderMode\": \"\", \"file\": \"\", \"resolution\": \"\", \"quality\": \"\", \"pixelFormat\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "SubmitBmpConversionTask",
            "url": "https://image-converter4.p.rapidapi.com/submitBmpConversionTask",
            "description": "Creates Bitmap (BMP) conversion task and returns **taskId**. You will use returned **taskId** to check task status and to download the converted image",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "Source image file to convert to bitmap image",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "resolution",
                    "type": "NUMBER",
                    "description": "Sets the image resolution of the conversion process. The resolution value is represented by positive integers or non-negative integers starting from 10 and ending with 1200.",
                    "default": ""
                },
                {
                    "name": "bitsPerPixel",
                    "type": "NUMBER",
                    "description": "How many bits needed each for each pixel. Valid values are 1,2,4,8,16 and 32",
                    "default": "32"
                }
            ],
            "code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/submitBmpConversionTask\"\nquerystring = {\"resolution\": \"\", \"file\": \"\", \"bitsPerPixel\": \"32\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://image-converter4.p.rapidapi.com/submitBmpConversionTask\"\nquerystring = {\"resolution\": \"\", \"file\": \"\", \"bitsPerPixel\": \"32\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-converter4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        }
    ]
}