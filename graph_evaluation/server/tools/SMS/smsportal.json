{
    "tool_name": "SMSPortal",
    "tool_description": "Bulk SMS for maximum reach and genuine customer engagement.",
    "title": "SMSPortal",
    "pricing": "FREE",
    "score": null,
    "home_url": "https://rapidapi.com/sms-portal-sms-portal-default/api/smsportal1/",
    "host": "smsportal1.p.rapidapi.com",
    "api_list": [
        {
            "name": "Unsubscribe from DLRs",
            "url": "https://smsportal1.p.rapidapi.com/Hooks/Dlr",
            "description": "Deregister a delivery receipt webhook",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "A identifying name for the webhook endpoint",
                    "default": ""
                },
                {
                    "name": "hookUrl",
                    "type": "STRING",
                    "description": "The webhook endpoint Url",
                    "default": ""
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "Bearer Authorization Header with your generated token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "A short description of the webhook endpoint",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://smsportal1.p.rapidapi.com/Hooks/Dlr\"\nquerystring = {\"name\": name, \"hookUrl\": hookurl, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"smsportal1.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root/>",
            "headers": {},
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "Unsubscribe from DLRs",
            "url": "https://smsportal1.p.rapidapi.com/Hooks/Dlr",
            "description": "Deregister a delivery receipt webhook",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "A identifying name for the webhook endpoint",
                    "default": ""
                },
                {
                    "name": "hookUrl",
                    "type": "STRING",
                    "description": "The webhook endpoint Url",
                    "default": ""
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "Bearer Authorization Header with your generated token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "A short description of the webhook endpoint",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://smsportal1.p.rapidapi.com/Hooks/Dlr\"\nquerystring = {\"name\": name, \"hookUrl\": hookurl, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"smsportal1.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "Subscribe to DLRs",
            "url": "https://smsportal1.p.rapidapi.com/Hooks/Dlr",
            "description": "Register a delivery receipt webhook",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "hookUrl",
                    "type": "STRING",
                    "description": "The webhook endpoint Url",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "A identifying name for the webhook endpoint",
                    "default": ""
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "Bearer Authorization Header with your generated token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "A short description of the webhook endpoint",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://smsportal1.p.rapidapi.com/Hooks/Dlr\"\nquerystring = {\"hookUrl\": hookurl, \"name\": name, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"smsportal1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "Subscribe to DLRs",
            "url": "https://smsportal1.p.rapidapi.com/Hooks/Dlr",
            "description": "Register a delivery receipt webhook",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "hookUrl",
                    "type": "STRING",
                    "description": "The webhook endpoint Url",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "A identifying name for the webhook endpoint",
                    "default": ""
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "Bearer Authorization Header with your generated token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "A short description of the webhook endpoint",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://smsportal1.p.rapidapi.com/Hooks/Dlr\"\nquerystring = {\"hookUrl\": hookurl, \"name\": name, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"smsportal1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root/>",
            "headers": {},
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "Subscribe to Replies",
            "url": "https://smsportal1.p.rapidapi.com/Hooks/Replies",
            "description": "Register a reply webhook",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "A identifying name for the webhook endpoint",
                    "default": ""
                },
                {
                    "name": "hookUrl",
                    "type": "STRING",
                    "description": "The webhook endpoint Url",
                    "default": ""
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "Bearer Authorization Header with your generated token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "A short description of the webhook endpoint",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://smsportal1.p.rapidapi.com/Hooks/Replies\"\nquerystring = {\"name\": name, \"hookUrl\": hookurl, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"smsportal1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "Subscribe to Replies",
            "url": "https://smsportal1.p.rapidapi.com/Hooks/Replies",
            "description": "Register a reply webhook",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "A identifying name for the webhook endpoint",
                    "default": ""
                },
                {
                    "name": "hookUrl",
                    "type": "STRING",
                    "description": "The webhook endpoint Url",
                    "default": ""
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "Bearer Authorization Header with your generated token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "A short description of the webhook endpoint",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://smsportal1.p.rapidapi.com/Hooks/Replies\"\nquerystring = {\"name\": name, \"hookUrl\": hookurl, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"smsportal1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root/>",
            "headers": {},
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "Unsubscribe from Replies",
            "url": "https://smsportal1.p.rapidapi.com/Hooks/Replies",
            "description": "Deregister a reply webhook",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "hookUrl",
                    "type": "STRING",
                    "description": "The webhook endpoint Url",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "A identifying name for the webhook endpoint",
                    "default": ""
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "Bearer Authorization Header with your generated token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "A short description of the webhook endpoint",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://smsportal1.p.rapidapi.com/Hooks/Replies\"\nquerystring = {\"hookUrl\": hookurl, \"name\": name, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"smsportal1.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "Unsubscribe from Replies",
            "url": "https://smsportal1.p.rapidapi.com/Hooks/Replies",
            "description": "Deregister a reply webhook",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "hookUrl",
                    "type": "STRING",
                    "description": "The webhook endpoint Url",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "A identifying name for the webhook endpoint",
                    "default": ""
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "Bearer Authorization Header with your generated token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "A short description of the webhook endpoint",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://smsportal1.p.rapidapi.com/Hooks/Replies\"\nquerystring = {\"hookUrl\": hookurl, \"name\": name, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"smsportal1.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root/>",
            "headers": {},
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "GroupMessages",
            "url": "https://smsportal1.p.rapidapi.com/GroupMessages",
            "description": "Sends a message to contacts in the group",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "groups",
                    "type": "ARRAY",
                    "description": "The names of the groups that contacts should belong to. These contacts will be the recipients of \r\nthe SMS message. Should contain at least one group name",
                    "default": "[]"
                },
                {
                    "name": "message",
                    "type": "STRING",
                    "description": "The content of the SMS message that should be sent",
                    "default": ""
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "Bearer Authorization Header with your generated token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sendOptions",
                    "type": "OBJECT",
                    "description": "",
                    "default": "{\n  \"allowContentTrimming\": true,\n  \"senderId\": \"\",\n  \"duplicateCheck\": \"\",\n  \"startDeliveryUtc\": \"\",\n  \"endDeliveryUtc\": \"\",\n  \"replyRuleSetName\": \"\",\n  \"campaignName\": \"\",\n  \"costCentre\": \"\",\n  \"checkOptOuts\": true,\n  \"shortenUrls\": true,\n  \"validityPeriod\": 0,\n  \"testMode\": true,\n  \"extraForwardEmails\": \"\"\n}"
                }
            ],
            "code": "import requests\n\nurl = \"https://smsportal1.p.rapidapi.com/GroupMessages\"\nquerystring = {\"sendOptions\": sendoptions, \"groups\": groups, \"message\": message, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"smsportal1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "cost": 0,
                "remainingBalance": 0,
                "eventId": 0,
                "sample": "",
                "costBreakdown": [
                    {
                        "quantity": 0,
                        "cost": 0,
                        "network": ""
                    }
                ],
                "messages": 0,
                "parts": 0,
                "errorReport": {
                    "noNetwork": 0,
                    "noContents": 0,
                    "contentToLong": 0,
                    "duplicates": 0,
                    "optedOuts": 0,
                    "faults": [
                        {
                            "rawDestination": "",
                            "scrubbedDestination": "",
                            "customerId": "",
                            "errorMessage": "",
                            "status": ""
                        }
                    ]
                }
            },
            "headers": {},
            "schema": {
                "description": "A response to a send request or a group send request",
                "required": [
                    "cost",
                    "remainingBalance",
                    "eventId",
                    "sample",
                    "costBreakdown",
                    "messages",
                    "parts",
                    "errorReport"
                ],
                "type": "object",
                "properties": {
                    "cost": {
                        "format": "double",
                        "description": "The total cost of the send excluding any VAT, GST or tax",
                        "type": "number",
                        "minimum": -1.7976931348623157e+308,
                        "maximum": 1.7976931348623157e+308
                    },
                    "remainingBalance": {
                        "format": "double",
                        "description": "The remaining balance after the Cost has been deducted for the send",
                        "type": "number",
                        "minimum": -1.7976931348623157e+308,
                        "maximum": 1.7976931348623157e+308
                    },
                    "eventId": {
                        "format": "int64",
                        "description": "The system generated ID for this send or batch of messages",
                        "type": "integer",
                        "minimum": -9223372036854776000,
                        "maximum": 9223372036854776000
                    },
                    "sample": {
                        "description": "A sample message that was generated for the send. Purely informational",
                        "type": "string"
                    },
                    "costBreakdown": {
                        "description": "The break down of the costs for the send grouped by mobile network and feature",
                        "type": "array",
                        "items": {
                            "required": [
                                "quantity",
                                "cost",
                                "network"
                            ],
                            "type": "object",
                            "properties": {
                                "quantity": {
                                    "format": "int64",
                                    "type": "integer",
                                    "minimum": -9223372036854776000,
                                    "maximum": 9223372036854776000
                                },
                                "cost": {
                                    "format": "double",
                                    "type": "number",
                                    "minimum": -1.7976931348623157e+308,
                                    "maximum": 1.7976931348623157e+308
                                },
                                "network": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "messages": {
                        "format": "int32",
                        "description": "The total number of messages that were successfully enqueued for delivery. Long messages may require \r\nmultiple SMS messages or parts to send a message and this is reflected in the Parts value",
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "parts": {
                        "format": "int32",
                        "description": "The total number of SMS messages that were successfully enqueued for delivery.",
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "errorReport": {
                        "required": [
                            "noNetwork",
                            "noContents",
                            "contentToLong",
                            "duplicates",
                            "optedOuts",
                            "faults"
                        ],
                        "type": "object",
                        "properties": {
                            "noNetwork": {
                                "format": "int32",
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "noContents": {
                                "format": "int32",
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "contentToLong": {
                                "format": "int32",
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "duplicates": {
                                "format": "int32",
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "optedOuts": {
                                "format": "int32",
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "faults": {
                                "type": "array",
                                "items": {
                                    "required": [
                                        "rawDestination",
                                        "scrubbedDestination",
                                        "customerId",
                                        "errorMessage",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "rawDestination": {
                                            "type": "string"
                                        },
                                        "scrubbedDestination": {
                                            "type": "string"
                                        },
                                        "customerId": {
                                            "type": "string"
                                        },
                                        "errorMessage": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "GroupMessages",
            "url": "https://smsportal1.p.rapidapi.com/GroupMessages",
            "description": "Sends a message to contacts in the group",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "groups",
                    "type": "ARRAY",
                    "description": "The names of the groups that contacts should belong to. These contacts will be the recipients of \r\nthe SMS message. Should contain at least one group name",
                    "default": "[]"
                },
                {
                    "name": "message",
                    "type": "STRING",
                    "description": "The content of the SMS message that should be sent",
                    "default": ""
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "Bearer Authorization Header with your generated token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sendOptions",
                    "type": "OBJECT",
                    "description": "",
                    "default": "{\n  \"allowContentTrimming\": true,\n  \"senderId\": \"\",\n  \"duplicateCheck\": \"\",\n  \"startDeliveryUtc\": \"\",\n  \"endDeliveryUtc\": \"\",\n  \"replyRuleSetName\": \"\",\n  \"campaignName\": \"\",\n  \"costCentre\": \"\",\n  \"checkOptOuts\": true,\n  \"shortenUrls\": true,\n  \"validityPeriod\": 0,\n  \"testMode\": true,\n  \"extraForwardEmails\": \"\"\n}"
                }
            ],
            "code": "import requests\n\nurl = \"https://smsportal1.p.rapidapi.com/GroupMessages\"\nquerystring = {\"sendOptions\": sendoptions, \"groups\": groups, \"message\": message, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"smsportal1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root>\n  <cost>0</cost>\n  <remainingBalance>0</remainingBalance>\n  <eventId>0</eventId>\n  <sample></sample>\n  <costBreakdown>\n    <item>\n      <quantity>0</quantity>\n      <cost>0</cost>\n      <network></network>\n    </item>\n  </costBreakdown>\n  <messages>0</messages>\n  <parts>0</parts>\n  <errorReport>\n    <noNetwork>0</noNetwork>\n    <noContents>0</noContents>\n    <contentToLong>0</contentToLong>\n    <duplicates>0</duplicates>\n    <optedOuts>0</optedOuts>\n    <faults>\n      <item>\n        <rawDestination></rawDestination>\n        <scrubbedDestination></scrubbedDestination>\n        <customerId></customerId>\n        <errorMessage></errorMessage>\n        <status></status>\n      </item>\n    </faults>\n  </errorReport>\n</root>",
            "headers": {},
            "schema": {
                "description": "A response to a send request or a group send request",
                "required": [
                    "cost",
                    "remainingBalance",
                    "eventId",
                    "sample",
                    "costBreakdown",
                    "messages",
                    "parts",
                    "errorReport"
                ],
                "type": "object",
                "properties": {
                    "cost": {
                        "format": "double",
                        "description": "The total cost of the send excluding any VAT, GST or tax",
                        "type": "number",
                        "minimum": -1.7976931348623157e+308,
                        "maximum": 1.7976931348623157e+308
                    },
                    "remainingBalance": {
                        "format": "double",
                        "description": "The remaining balance after the Cost has been deducted for the send",
                        "type": "number",
                        "minimum": -1.7976931348623157e+308,
                        "maximum": 1.7976931348623157e+308
                    },
                    "eventId": {
                        "format": "int64",
                        "description": "The system generated ID for this send or batch of messages",
                        "type": "integer",
                        "minimum": -9223372036854776000,
                        "maximum": 9223372036854776000
                    },
                    "sample": {
                        "description": "A sample message that was generated for the send. Purely informational",
                        "type": "string"
                    },
                    "costBreakdown": {
                        "description": "The break down of the costs for the send grouped by mobile network and feature",
                        "type": "array",
                        "items": {
                            "required": [
                                "quantity",
                                "cost",
                                "network"
                            ],
                            "type": "object",
                            "properties": {
                                "quantity": {
                                    "format": "int64",
                                    "type": "integer",
                                    "minimum": -9223372036854776000,
                                    "maximum": 9223372036854776000
                                },
                                "cost": {
                                    "format": "double",
                                    "type": "number",
                                    "minimum": -1.7976931348623157e+308,
                                    "maximum": 1.7976931348623157e+308
                                },
                                "network": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "messages": {
                        "format": "int32",
                        "description": "The total number of messages that were successfully enqueued for delivery. Long messages may require \r\nmultiple SMS messages or parts to send a message and this is reflected in the Parts value",
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "parts": {
                        "format": "int32",
                        "description": "The total number of SMS messages that were successfully enqueued for delivery.",
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "errorReport": {
                        "required": [
                            "noNetwork",
                            "noContents",
                            "contentToLong",
                            "duplicates",
                            "optedOuts",
                            "faults"
                        ],
                        "type": "object",
                        "properties": {
                            "noNetwork": {
                                "format": "int32",
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "noContents": {
                                "format": "int32",
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "contentToLong": {
                                "format": "int32",
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "duplicates": {
                                "format": "int32",
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "optedOuts": {
                                "format": "int32",
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "faults": {
                                "type": "array",
                                "items": {
                                    "required": [
                                        "rawDestination",
                                        "scrubbedDestination",
                                        "customerId",
                                        "errorMessage",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "rawDestination": {
                                            "type": "string"
                                        },
                                        "scrubbedDestination": {
                                            "type": "string"
                                        },
                                        "customerId": {
                                            "type": "string"
                                        },
                                        "errorMessage": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "BulkMessages",
            "url": "https://smsportal1.p.rapidapi.com/BulkMessages",
            "description": "Send one or more messages",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "messages",
                    "type": "ARRAY",
                    "description": "The SMS message(s) that should be send. Must contain at least one message and at most 100 messages",
                    "default": "[\n  {\n    \"content\": \"\",\n    \"destination\": \"\",\n    \"customerId\": \"\",\n    \"landingPageVariables\": {\n      \"landingPageId\": \"\",\n      \"version\": 0,\n      \"password\": \"\",\n      \"variables\": {}\n    }\n  }\n]"
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "Bearer Authorization Header with your generated token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sendOptions",
                    "type": "OBJECT",
                    "description": "",
                    "default": "{\n  \"allowContentTrimming\": true,\n  \"senderId\": \"\",\n  \"duplicateCheck\": \"\",\n  \"startDeliveryUtc\": \"\",\n  \"endDeliveryUtc\": \"\",\n  \"replyRuleSetName\": \"\",\n  \"campaignName\": \"\",\n  \"costCentre\": \"\",\n  \"checkOptOuts\": true,\n  \"shortenUrls\": true,\n  \"validityPeriod\": 0,\n  \"testMode\": true,\n  \"extraForwardEmails\": \"\"\n}"
                }
            ],
            "code": "import requests\n\nurl = \"https://smsportal1.p.rapidapi.com/BulkMessages\"\nquerystring = {\"sendOptions\": sendoptions, \"messages\": messages, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"smsportal1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "cost": 0,
                "remainingBalance": 0,
                "eventId": 0,
                "sample": "",
                "costBreakdown": [
                    {
                        "quantity": 0,
                        "cost": 0,
                        "network": ""
                    }
                ],
                "messages": 0,
                "parts": 0,
                "errorReport": {
                    "noNetwork": 0,
                    "noContents": 0,
                    "contentToLong": 0,
                    "duplicates": 0,
                    "optedOuts": 0,
                    "faults": [
                        {
                            "rawDestination": "",
                            "scrubbedDestination": "",
                            "customerId": "",
                            "errorMessage": "",
                            "status": ""
                        }
                    ]
                }
            },
            "headers": {},
            "schema": {
                "description": "A response to a send request or a group send request",
                "required": [
                    "cost",
                    "remainingBalance",
                    "eventId",
                    "sample",
                    "costBreakdown",
                    "messages",
                    "parts",
                    "errorReport"
                ],
                "type": "object",
                "properties": {
                    "cost": {
                        "format": "double",
                        "description": "The total cost of the send excluding any VAT, GST or tax",
                        "type": "number",
                        "minimum": -1.7976931348623157e+308,
                        "maximum": 1.7976931348623157e+308
                    },
                    "remainingBalance": {
                        "format": "double",
                        "description": "The remaining balance after the Cost has been deducted for the send",
                        "type": "number",
                        "minimum": -1.7976931348623157e+308,
                        "maximum": 1.7976931348623157e+308
                    },
                    "eventId": {
                        "format": "int64",
                        "description": "The system generated ID for this send or batch of messages",
                        "type": "integer",
                        "minimum": -9223372036854776000,
                        "maximum": 9223372036854776000
                    },
                    "sample": {
                        "description": "A sample message that was generated for the send. Purely informational",
                        "type": "string"
                    },
                    "costBreakdown": {
                        "description": "The break down of the costs for the send grouped by mobile network and feature",
                        "type": "array",
                        "items": {
                            "required": [
                                "quantity",
                                "cost",
                                "network"
                            ],
                            "type": "object",
                            "properties": {
                                "quantity": {
                                    "format": "int64",
                                    "type": "integer",
                                    "minimum": -9223372036854776000,
                                    "maximum": 9223372036854776000
                                },
                                "cost": {
                                    "format": "double",
                                    "type": "number",
                                    "minimum": -1.7976931348623157e+308,
                                    "maximum": 1.7976931348623157e+308
                                },
                                "network": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "messages": {
                        "format": "int32",
                        "description": "The total number of messages that were successfully enqueued for delivery. Long messages may require \r\nmultiple SMS messages or parts to send a message and this is reflected in the Parts value",
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "parts": {
                        "format": "int32",
                        "description": "The total number of SMS messages that were successfully enqueued for delivery.",
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "errorReport": {
                        "required": [
                            "noNetwork",
                            "noContents",
                            "contentToLong",
                            "duplicates",
                            "optedOuts",
                            "faults"
                        ],
                        "type": "object",
                        "properties": {
                            "noNetwork": {
                                "format": "int32",
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "noContents": {
                                "format": "int32",
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "contentToLong": {
                                "format": "int32",
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "duplicates": {
                                "format": "int32",
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "optedOuts": {
                                "format": "int32",
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "faults": {
                                "type": "array",
                                "items": {
                                    "required": [
                                        "rawDestination",
                                        "scrubbedDestination",
                                        "customerId",
                                        "errorMessage",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "rawDestination": {
                                            "type": "string"
                                        },
                                        "scrubbedDestination": {
                                            "type": "string"
                                        },
                                        "customerId": {
                                            "type": "string"
                                        },
                                        "errorMessage": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "BulkMessages",
            "url": "https://smsportal1.p.rapidapi.com/BulkMessages",
            "description": "Send one or more messages",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "messages",
                    "type": "ARRAY",
                    "description": "The SMS message(s) that should be send. Must contain at least one message and at most 100 messages",
                    "default": "[\n  {\n    \"content\": \"\",\n    \"destination\": \"\",\n    \"customerId\": \"\",\n    \"landingPageVariables\": {\n      \"landingPageId\": \"\",\n      \"version\": 0,\n      \"password\": \"\",\n      \"variables\": {}\n    }\n  }\n]"
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "Bearer Authorization Header with your generated token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sendOptions",
                    "type": "OBJECT",
                    "description": "",
                    "default": "{\n  \"allowContentTrimming\": true,\n  \"senderId\": \"\",\n  \"duplicateCheck\": \"\",\n  \"startDeliveryUtc\": \"\",\n  \"endDeliveryUtc\": \"\",\n  \"replyRuleSetName\": \"\",\n  \"campaignName\": \"\",\n  \"costCentre\": \"\",\n  \"checkOptOuts\": true,\n  \"shortenUrls\": true,\n  \"validityPeriod\": 0,\n  \"testMode\": true,\n  \"extraForwardEmails\": \"\"\n}"
                }
            ],
            "code": "import requests\n\nurl = \"https://smsportal1.p.rapidapi.com/BulkMessages\"\nquerystring = {\"sendOptions\": sendoptions, \"messages\": messages, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"smsportal1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root>\n  <cost>0</cost>\n  <remainingBalance>0</remainingBalance>\n  <eventId>0</eventId>\n  <sample></sample>\n  <costBreakdown>\n    <item>\n      <quantity>0</quantity>\n      <cost>0</cost>\n      <network></network>\n    </item>\n  </costBreakdown>\n  <messages>0</messages>\n  <parts>0</parts>\n  <errorReport>\n    <noNetwork>0</noNetwork>\n    <noContents>0</noContents>\n    <contentToLong>0</contentToLong>\n    <duplicates>0</duplicates>\n    <optedOuts>0</optedOuts>\n    <faults>\n      <item>\n        <rawDestination></rawDestination>\n        <scrubbedDestination></scrubbedDestination>\n        <customerId></customerId>\n        <errorMessage></errorMessage>\n        <status></status>\n      </item>\n    </faults>\n  </errorReport>\n</root>",
            "headers": {},
            "schema": {
                "description": "A response to a send request or a group send request",
                "required": [
                    "cost",
                    "remainingBalance",
                    "eventId",
                    "sample",
                    "costBreakdown",
                    "messages",
                    "parts",
                    "errorReport"
                ],
                "type": "object",
                "properties": {
                    "cost": {
                        "format": "double",
                        "description": "The total cost of the send excluding any VAT, GST or tax",
                        "type": "number",
                        "minimum": -1.7976931348623157e+308,
                        "maximum": 1.7976931348623157e+308
                    },
                    "remainingBalance": {
                        "format": "double",
                        "description": "The remaining balance after the Cost has been deducted for the send",
                        "type": "number",
                        "minimum": -1.7976931348623157e+308,
                        "maximum": 1.7976931348623157e+308
                    },
                    "eventId": {
                        "format": "int64",
                        "description": "The system generated ID for this send or batch of messages",
                        "type": "integer",
                        "minimum": -9223372036854776000,
                        "maximum": 9223372036854776000
                    },
                    "sample": {
                        "description": "A sample message that was generated for the send. Purely informational",
                        "type": "string"
                    },
                    "costBreakdown": {
                        "description": "The break down of the costs for the send grouped by mobile network and feature",
                        "type": "array",
                        "items": {
                            "required": [
                                "quantity",
                                "cost",
                                "network"
                            ],
                            "type": "object",
                            "properties": {
                                "quantity": {
                                    "format": "int64",
                                    "type": "integer",
                                    "minimum": -9223372036854776000,
                                    "maximum": 9223372036854776000
                                },
                                "cost": {
                                    "format": "double",
                                    "type": "number",
                                    "minimum": -1.7976931348623157e+308,
                                    "maximum": 1.7976931348623157e+308
                                },
                                "network": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "messages": {
                        "format": "int32",
                        "description": "The total number of messages that were successfully enqueued for delivery. Long messages may require \r\nmultiple SMS messages or parts to send a message and this is reflected in the Parts value",
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "parts": {
                        "format": "int32",
                        "description": "The total number of SMS messages that were successfully enqueued for delivery.",
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "errorReport": {
                        "required": [
                            "noNetwork",
                            "noContents",
                            "contentToLong",
                            "duplicates",
                            "optedOuts",
                            "faults"
                        ],
                        "type": "object",
                        "properties": {
                            "noNetwork": {
                                "format": "int32",
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "noContents": {
                                "format": "int32",
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "contentToLong": {
                                "format": "int32",
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "duplicates": {
                                "format": "int32",
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "optedOuts": {
                                "format": "int32",
                                "type": "integer",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                            },
                            "faults": {
                                "type": "array",
                                "items": {
                                    "required": [
                                        "rawDestination",
                                        "scrubbedDestination",
                                        "customerId",
                                        "errorMessage",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "rawDestination": {
                                            "type": "string"
                                        },
                                        "scrubbedDestination": {
                                            "type": "string"
                                        },
                                        "customerId": {
                                            "type": "string"
                                        },
                                        "errorMessage": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Balance",
            "url": "https://smsportal1.p.rapidapi.com/Balance",
            "description": "Retrieve the balance for an account",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "Bearer Authorization Header with your generated token",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://smsportal1.p.rapidapi.com/Balance\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"smsportal1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "balance": 0
            },
            "headers": {},
            "schema": {
                "description": "A response to a balance request containing the balance of an account",
                "required": [
                    "balance"
                ],
                "type": "object",
                "properties": {
                    "balance": {
                        "format": "double",
                        "description": "The number of credits the account has",
                        "type": "number",
                        "minimum": -1.7976931348623157e+308,
                        "maximum": 1.7976931348623157e+308
                    }
                }
            }
        },
        {
            "name": "Balance",
            "url": "https://smsportal1.p.rapidapi.com/Balance",
            "description": "Retrieve the balance for an account",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "Bearer Authorization Header with your generated token",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://smsportal1.p.rapidapi.com/Balance\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"smsportal1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root>\n  <balance>0</balance>\n</root>",
            "headers": {},
            "schema": {
                "description": "A response to a balance request containing the balance of an account",
                "required": [
                    "balance"
                ],
                "type": "object",
                "properties": {
                    "balance": {
                        "format": "double",
                        "description": "The number of credits the account has",
                        "type": "number",
                        "minimum": -1.7976931348623157e+308,
                        "maximum": 1.7976931348623157e+308
                    }
                }
            }
        },
        {
            "name": "Authentication",
            "url": "https://smsportal1.p.rapidapi.com/Authentication",
            "description": "Generate an authentication token based on the BASIC authorization header.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "Basic Base64 encoded Authorization Header with your Client Id and Secret",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://smsportal1.p.rapidapi.com/Authentication\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"smsportal1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root>\n  <token></token>\n  <schema></schema>\n  <expiresInMinutes>0</expiresInMinutes>\n</root>",
            "headers": {},
            "schema": {
                "description": "Contains an authentication token which provides access to various API functions",
                "required": [
                    "token",
                    "schema",
                    "expiresInMinutes"
                ],
                "type": "object",
                "properties": {
                    "token": {
                        "description": "A string representation of the authentication token. Calls to API functions that require a token should use\r\nthis value",
                        "type": "string"
                    },
                    "schema": {
                        "description": "The schema of the authentication token. For example JWT (JSON web token)",
                        "type": "string"
                    },
                    "expiresInMinutes": {
                        "format": "int32",
                        "description": "The number of minutes after which the authentication token will expire",
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    }
                }
            }
        },
        {
            "name": "Authentication",
            "url": "https://smsportal1.p.rapidapi.com/Authentication",
            "description": "Generate an authentication token based on the BASIC authorization header.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "Basic Base64 encoded Authorization Header with your Client Id and Secret",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://smsportal1.p.rapidapi.com/Authentication\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"smsportal1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "token": "",
                "schema": "",
                "expiresInMinutes": 0
            },
            "headers": {},
            "schema": {
                "description": "Contains an authentication token which provides access to various API functions",
                "required": [
                    "token",
                    "schema",
                    "expiresInMinutes"
                ],
                "type": "object",
                "properties": {
                    "token": {
                        "description": "A string representation of the authentication token. Calls to API functions that require a token should use\r\nthis value",
                        "type": "string"
                    },
                    "schema": {
                        "description": "The schema of the authentication token. For example JWT (JSON web token)",
                        "type": "string"
                    },
                    "expiresInMinutes": {
                        "format": "int32",
                        "description": "The number of minutes after which the authentication token will expire",
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    }
                }
            }
        },
        {
            "name": "Subscribe to DLRs",
            "url": "https://smsportal1.p.rapidapi.com/Hooks/Dlr",
            "description": "Register a delivery receipt webhook",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "hookUrl",
                    "type": "STRING",
                    "description": "The webhook endpoint Url",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "A identifying name for the webhook endpoint",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "A short description of the webhook endpoint",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://smsportal1.p.rapidapi.com/Hooks/Dlr\"\nquerystring = {\"hookUrl\": \"\", \"name\": \"\", \"description\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"smsportal1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://smsportal1.p.rapidapi.com/Hooks/Dlr\"\nquerystring = {\"hookUrl\": \"\", \"name\": \"\", \"description\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"smsportal1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "Subscribe to Replies",
            "url": "https://smsportal1.p.rapidapi.com/Hooks/Replies",
            "description": "Register a reply webhook",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "A identifying name for the webhook endpoint",
                    "default": ""
                },
                {
                    "name": "hookUrl",
                    "type": "STRING",
                    "description": "The webhook endpoint Url",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "A short description of the webhook endpoint",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://smsportal1.p.rapidapi.com/Hooks/Replies\"\nquerystring = {\"name\": \"\", \"hookUrl\": \"\", \"description\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"smsportal1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://smsportal1.p.rapidapi.com/Hooks/Replies\"\nquerystring = {\"name\": \"\", \"hookUrl\": \"\", \"description\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"smsportal1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "GroupMessages",
            "url": "https://smsportal1.p.rapidapi.com/GroupMessages",
            "description": "Sends a message to contacts in the group",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "groups",
                    "type": "ARRAY",
                    "description": "The names of the groups that contacts should belong to. These contacts will be the recipients of \r\nthe SMS message. Should contain at least one group name",
                    "default": "[]"
                },
                {
                    "name": "message",
                    "type": "STRING",
                    "description": "The content of the SMS message that should be sent",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sendOptions",
                    "type": "OBJECT",
                    "description": "",
                    "default": "{\n  \"allowContentTrimming\": true,\n  \"senderId\": \"\",\n  \"duplicateCheck\": \"\",\n  \"startDeliveryUtc\": \"\",\n  \"endDeliveryUtc\": \"\",\n  \"replyRuleSetName\": \"\",\n  \"campaignName\": \"\",\n  \"costCentre\": \"\",\n  \"checkOptOuts\": true,\n  \"shortenUrls\": true,\n  \"validityPeriod\": 0,\n  \"testMode\": true,\n  \"extraForwardEmails\": \"\"\n}"
                }
            ],
            "code": "import requests\n\nurl = \"https://smsportal1.p.rapidapi.com/GroupMessages\"\nquerystring = {\"sendOptions\": \"{\\n  \\\"allowContentTrimming\\\": true,\\n  \\\"senderId\\\": \\\"\\\",\\n  \\\"duplicateCheck\\\": \\\"\\\",\\n  \\\"startDeliveryUtc\\\": \\\"\\\",\\n  \\\"endDeliveryUtc\\\": \\\"\\\",\\n  \\\"replyRuleSetName\\\": \\\"\\\",\\n  \\\"campaignName\\\": \\\"\\\",\\n  \\\"costCentre\\\": \\\"\\\",\\n  \\\"checkOptOuts\\\": true,\\n  \\\"shortenUrls\\\": true,\\n  \\\"validityPeriod\\\": 0,\\n  \\\"testMode\\\": true,\\n  \\\"extraForwardEmails\\\": \\\"\\\"\\n}\", \"groups\": \"[]\", \"message\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"smsportal1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://smsportal1.p.rapidapi.com/GroupMessages\"\nquerystring = {\"sendOptions\": \"{\\n  \\\"allowContentTrimming\\\": true,\\n  \\\"senderId\\\": \\\"\\\",\\n  \\\"duplicateCheck\\\": \\\"\\\",\\n  \\\"startDeliveryUtc\\\": \\\"\\\",\\n  \\\"endDeliveryUtc\\\": \\\"\\\",\\n  \\\"replyRuleSetName\\\": \\\"\\\",\\n  \\\"campaignName\\\": \\\"\\\",\\n  \\\"costCentre\\\": \\\"\\\",\\n  \\\"checkOptOuts\\\": true,\\n  \\\"shortenUrls\\\": true,\\n  \\\"validityPeriod\\\": 0,\\n  \\\"testMode\\\": true,\\n  \\\"extraForwardEmails\\\": \\\"\\\"\\n}\", \"groups\": \"[]\", \"message\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"smsportal1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "BulkMessages",
            "url": "https://smsportal1.p.rapidapi.com/BulkMessages",
            "description": "Send one or more messages",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "messages",
                    "type": "ARRAY",
                    "description": "The SMS message(s) that should be send. Must contain at least one message and at most 100 messages",
                    "default": "[\n  {\n    \"content\": \"\",\n    \"destination\": \"\",\n    \"customerId\": \"\",\n    \"landingPageVariables\": {\n      \"landingPageId\": \"\",\n      \"version\": 0,\n      \"password\": \"\",\n      \"variables\": {}\n    }\n  }\n]"
                }
            ],
            "optional_parameters": [
                {
                    "name": "sendOptions",
                    "type": "OBJECT",
                    "description": "",
                    "default": "{\n  \"allowContentTrimming\": true,\n  \"senderId\": \"\",\n  \"duplicateCheck\": \"\",\n  \"startDeliveryUtc\": \"\",\n  \"endDeliveryUtc\": \"\",\n  \"replyRuleSetName\": \"\",\n  \"campaignName\": \"\",\n  \"costCentre\": \"\",\n  \"checkOptOuts\": true,\n  \"shortenUrls\": true,\n  \"validityPeriod\": 0,\n  \"testMode\": true,\n  \"extraForwardEmails\": \"\"\n}"
                }
            ],
            "code": "import requests\n\nurl = \"https://smsportal1.p.rapidapi.com/BulkMessages\"\nquerystring = {\"sendOptions\": \"{\\n  \\\"allowContentTrimming\\\": true,\\n  \\\"senderId\\\": \\\"\\\",\\n  \\\"duplicateCheck\\\": \\\"\\\",\\n  \\\"startDeliveryUtc\\\": \\\"\\\",\\n  \\\"endDeliveryUtc\\\": \\\"\\\",\\n  \\\"replyRuleSetName\\\": \\\"\\\",\\n  \\\"campaignName\\\": \\\"\\\",\\n  \\\"costCentre\\\": \\\"\\\",\\n  \\\"checkOptOuts\\\": true,\\n  \\\"shortenUrls\\\": true,\\n  \\\"validityPeriod\\\": 0,\\n  \\\"testMode\\\": true,\\n  \\\"extraForwardEmails\\\": \\\"\\\"\\n}\", \"messages\": \"[\\n  {\\n    \\\"content\\\": \\\"\\\",\\n    \\\"destination\\\": \\\"\\\",\\n    \\\"customerId\\\": \\\"\\\",\\n    \\\"landingPageVariables\\\": {\\n      \\\"landingPageId\\\": \\\"\\\",\\n      \\\"version\\\": 0,\\n      \\\"password\\\": \\\"\\\",\\n      \\\"variables\\\": {}\\n    }\\n  }\\n]\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"smsportal1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://smsportal1.p.rapidapi.com/BulkMessages\"\nquerystring = {\"sendOptions\": \"{\\n  \\\"allowContentTrimming\\\": true,\\n  \\\"senderId\\\": \\\"\\\",\\n  \\\"duplicateCheck\\\": \\\"\\\",\\n  \\\"startDeliveryUtc\\\": \\\"\\\",\\n  \\\"endDeliveryUtc\\\": \\\"\\\",\\n  \\\"replyRuleSetName\\\": \\\"\\\",\\n  \\\"campaignName\\\": \\\"\\\",\\n  \\\"costCentre\\\": \\\"\\\",\\n  \\\"checkOptOuts\\\": true,\\n  \\\"shortenUrls\\\": true,\\n  \\\"validityPeriod\\\": 0,\\n  \\\"testMode\\\": true,\\n  \\\"extraForwardEmails\\\": \\\"\\\"\\n}\", \"messages\": \"[\\n  {\\n    \\\"content\\\": \\\"\\\",\\n    \\\"destination\\\": \\\"\\\",\\n    \\\"customerId\\\": \\\"\\\",\\n    \\\"landingPageVariables\\\": {\\n      \\\"landingPageId\\\": \\\"\\\",\\n      \\\"version\\\": 0,\\n      \\\"password\\\": \\\"\\\",\\n      \\\"variables\\\": {}\\n    }\\n  }\\n]\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"smsportal1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Authentication",
            "url": "https://smsportal1.p.rapidapi.com/Authentication",
            "description": "Generate an authentication token based on the BASIC authorization header.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://smsportal1.p.rapidapi.com/Authentication\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"smsportal1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://smsportal1.p.rapidapi.com/Authentication\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"smsportal1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        }
    ]
}