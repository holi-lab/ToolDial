{
    "tool_name":"Geocoding - Forward and Reverse",
    "tool_description":"Forward & Reverse Geocoding based on few different geocoders. Returns data as Google Maps API.",
    "title":"Geocoding - Forward and Reverse",
    "pricing":"FREEMIUM",
    "score":null,
    "home_url":"https://rapidapi.com/samsandr1996-4VrhG4ruory/api/geocoding-forward-and-reverse/",
    "host":"geocoding-forward-and-reverse.p.rapidapi.com",
    "api_list":[
        {
            "name":"Reverse Geocoding",
            "url":"https://geocoding-forward-and-reverse.p.rapidapi.com/reverse-geocode",
            "description":"This endpoint allows to get address by latitude and longitude inserted in a query and separated by comma. Response of this API looks like Google Maps API compact response .",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"latlng",
                    "type":"STRING",
                    "description":"",
                    "default":"40.6905176,-73.9899802"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://geocoding-forward-and-reverse.p.rapidapi.com/reverse-geocode\"\nquerystring = {\"latlng\": latlng}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"geocoding-forward-and-reverse.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "key1":"value",
                "key2":"value"
            },
            "headers":{},
            "schema":{
                "type":"object",
                "properties":{
                    "results":{
                        "type":"array",
                        "items":{
                            "type":"object",
                            "properties":{
                                "formatted_address":{
                                    "type":"string"
                                },
                                "geometry":{
                                    "type":"object",
                                    "properties":{
                                        "location":{
                                            "type":"object",
                                            "properties":{
                                                "lat":{
                                                    "type":"string"
                                                },
                                                "lng":{
                                                    "type":"string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "status":{
                        "type":"string"
                    }
                }
            }
        },
        {
            "name":"Forward Geocoding",
            "url":"https://geocoding-forward-and-reverse.p.rapidapi.com/geocode",
            "description":"This endpoint allows to get latitude and longitude by address data inserted in a query as a string . Response of this API looks like Google Maps API compact response .",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"address",
                    "type":"STRING",
                    "description":"",
                    "default":"99 Schermerhorn St, Brooklyn, NY 11201"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://geocoding-forward-and-reverse.p.rapidapi.com/geocode\"\nquerystring = {\"address\": address}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"geocoding-forward-and-reverse.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "key1":"value",
                "key2":"value"
            },
            "headers":{},
            "schema":{
                "type":"object",
                "properties":{
                    "results":{
                        "type":"array",
                        "items":{
                            "type":"object",
                            "properties":{
                                "formatted_address":{
                                    "type":"string"
                                },
                                "geometry":{
                                    "type":"object",
                                    "properties":{
                                        "location":{
                                            "type":"object",
                                            "properties":{
                                                "lat":{
                                                    "type":"string"
                                                },
                                                "lng":{
                                                    "type":"string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "status":{
                        "type":"string"
                    }
                }
            }
        }
    ]
}