{
    "tool_name": "NAVITIME Maps",
    "tool_description": "Get a JavaScript file or map as an image on web pages.",
    "title": "NAVITIME Maps",
    "pricing": "FREEMIUM",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 344,
        "avgSuccessRate": 72,
        "popularityScore": 9.5,
        "__typename": "Score"
    },
    "home_url": "https://rapidapi.com/navitimejapan-navitimejapan/api/navitime-maps/",
    "host": "navitime-maps.p.rapidapi.com",
    "api_list": [
        {
            "name": "map_script",
            "url": "https://navitime-maps.p.rapidapi.com/map_script",
            "description": "Get a JavaScript file to control the tile map that runs on the browser.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "host",
                    "type": "STRING",
                    "description": "A domain name of your website.",
                    "default": "localhost"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://navitime-maps.p.rapidapi.com/map_script\"\nquerystring = {\"host\": host}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"navitime-maps.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "map_image(GET)",
            "url": "https://navitime-maps.p.rapidapi.com/map_image",
            "description": "Get a static map image of the location, range and zoom value specified in the parameter.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "width",
                    "type": "NUMBER",
                    "description": "Width of the map.\n(Minimum value: 1, Maximum value: 999)",
                    "default": "500"
                },
                {
                    "name": "center",
                    "type": "STRING",
                    "description": "Center of the map.",
                    "default": "35.681236,139.767125"
                },
                {
                    "name": "zoom",
                    "type": "NUMBER",
                    "description": "Zoom level.\n(Minimum value: 6, Maximum value: 19)",
                    "default": "15"
                },
                {
                    "name": "height",
                    "type": "NUMBER",
                    "description": "Height of the map.\n(Minimum value: 1, Maximum value: 999)",
                    "default": "500"
                }
            ],
            "optional_parameters": [
                {
                    "name": "datum",
                    "type": "STRING",
                    "description": "Geodetic system of latitude and longitude.\n(wgs84: World Geodetic System (default), tokyo: Old Japan Geodetic System)",
                    "default": "wgs84"
                },
                {
                    "name": "coord_unit",
                    "type": "STRING",
                    "description": "The unit of latitude and longitude included in the output data.\n(degree: decimal system of degrees (default), millisec: milliseconds)",
                    "default": "degree"
                }
            ],
            "code": "import requests\n\nurl = \"https://navitime-maps.p.rapidapi.com/map_image\"\nquerystring = {\"width\": width, \"datum\": datum, \"center\": center, \"zoom\": zoom, \"height\": height, \"coord_unit\": coord_unit}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"navitime-maps.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "map_image(POST)",
            "url": "https://navitime-maps.p.rapidapi.com/map_image",
            "description": "\u9759\u7684\u5730\u56f3\u753b\u50cf\u53d6\u5f97\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u6307\u5b9a\u3055\u308c\u305f\u5834\u6240\u30fb\u7bc4\u56f2\u30fb\u30ba\u30fc\u30e0\u5024\u306e\u9759\u7684\u5730\u56f3\u753b\u50cf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://navitime-maps.p.rapidapi.com/map_image\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"navitime-maps.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "map_image(POST)",
            "url": "https://navitime-maps.p.rapidapi.com/map_image",
            "description": "\u9759\u7684\u5730\u56f3\u753b\u50cf\u53d6\u5f97\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u6307\u5b9a\u3055\u308c\u305f\u5834\u6240\u30fb\u7bc4\u56f2\u30fb\u30ba\u30fc\u30e0\u5024\u306e\u9759\u7684\u5730\u56f3\u753b\u50cf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://navitime-maps.p.rapidapi.com/map_image\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"navitime-maps.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://navitime-maps.p.rapidapi.com/map_image\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"navitime-maps.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}