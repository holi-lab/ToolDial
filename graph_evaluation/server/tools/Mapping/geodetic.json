{
    "tool_name": "geodetic",
    "tool_description": "Enables various geodetic functions like buffers, points from distance and direction, points along path and wedge construction.",
    "title": "geodetic",
    "pricing": "FREEMIUM",
    "score": null,
    "home_url": "https://rapidapi.com/gisfromscratch/api/geodetic/",
    "host": "geodetic.p.rapidapi.com",
    "api_list": [
        {
            "name": "direction",
            "url": "https://geodetic.p.rapidapi.com/direction",
            "description": "Creates points using locations of observers, a distance and a direction representing the azimuth using degree targeting onto the observed location. The unit defines the linear unit, e.g. 'km' for the distance. The format can be GeoJSON or Esri.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geodetic.p.rapidapi.com/direction\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"geodetic.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "path",
            "url": "https://geodetic.p.rapidapi.com/path",
            "description": "Creates a path using a start location, a combination of distances defining the location along the path and directions representing the azimuths at every vertex of the path. The unit defines the linear unit, e.g. 'km' for the distance.\nThe format can be GeoJSON or Esri.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geodetic.p.rapidapi.com/path\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"geodetic.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "wedge",
            "url": "https://geodetic.p.rapidapi.com/wedge",
            "description": "Creates parametric wedges using locations of observers, a distance, a direction representing the azimuth using degree and an azimuth span targeting onto the observed location. \nThe unit defines the linear unit, e.g. 'km' for the distance. \nThe format can be GeoJSON or Esri.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geodetic.p.rapidapi.com/wedge\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"geodetic.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "azimuth",
            "url": "https://geodetic.p.rapidapi.com/azimuth",
            "description": "Calculates the corresponding azimuth using a 32-wind compass rose.\nA direction of N equals an azimuth of 0 and a direction of S equals an azimuth of 180.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "direction",
                    "type": "STRING",
                    "description": "",
                    "default": "NNW"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geodetic.p.rapidapi.com/azimuth\"\nquerystring = {\"direction\": direction}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"geodetic.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "buffer",
            "url": "https://geodetic.p.rapidapi.com/buffer",
            "description": "Creates geodetic buffers representing a region or protected area around the specified locations. The distance defines the location of the buffer's boundary. The unit defines the linear unit e.g. 'km' for the distance. The format can be GeoJSON or Esri.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geodetic.p.rapidapi.com/buffer\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"geodetic.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "along",
            "url": "https://geodetic.p.rapidapi.com/along",
            "description": "Creates points along the line defined by lat1, lon1 and lat2, lon2.\nThe distances define the location along the line, and the offsets define the lateral offset. The number of distances must equal the number of offsets. A combination of distances=[0, <line length>] and offsets=[0, 0] creates a point at the start and another at the end location. The unit defines the linear unit e.g. 'km' for the distances and the offsets. The format can be GeoJSON or Esri.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geodetic.p.rapidapi.com/along\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"geodetic.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "direction",
            "url": "https://geodetic.p.rapidapi.com/direction",
            "description": "Creates points using locations of observers, a distance and a direction representing the azimuth using degree targeting onto the observed location. The unit defines the linear unit, e.g. 'km' for the distance. The format can be GeoJSON or Esri.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geodetic.p.rapidapi.com/direction\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geodetic.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geodetic.p.rapidapi.com/direction\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geodetic.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "path",
            "url": "https://geodetic.p.rapidapi.com/path",
            "description": "Creates a path using a start location, a combination of distances defining the location along the path and directions representing the azimuths at every vertex of the path. The unit defines the linear unit, e.g. 'km' for the distance.\nThe format can be GeoJSON or Esri.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geodetic.p.rapidapi.com/path\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geodetic.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geodetic.p.rapidapi.com/path\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geodetic.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "wedge",
            "url": "https://geodetic.p.rapidapi.com/wedge",
            "description": "Creates parametric wedges using locations of observers, a distance, a direction representing the azimuth using degree and an azimuth span targeting onto the observed location. \nThe unit defines the linear unit, e.g. 'km' for the distance. \nThe format can be GeoJSON or Esri.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geodetic.p.rapidapi.com/wedge\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geodetic.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geodetic.p.rapidapi.com/wedge\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geodetic.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "buffer",
            "url": "https://geodetic.p.rapidapi.com/buffer",
            "description": "Creates geodetic buffers representing a region or protected area around the specified locations. The distance defines the location of the buffer's boundary. The unit defines the linear unit e.g. 'km' for the distance. The format can be GeoJSON or Esri.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geodetic.p.rapidapi.com/buffer\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geodetic.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geodetic.p.rapidapi.com/buffer\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geodetic.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "along",
            "url": "https://geodetic.p.rapidapi.com/along",
            "description": "Creates points along the line defined by lat1, lon1 and lat2, lon2.\nThe distances define the location along the line, and the offsets define the lateral offset. The number of distances must equal the number of offsets. A combination of distances=[0, <line length>] and offsets=[0, 0] creates a point at the start and another at the end location. The unit defines the linear unit e.g. 'km' for the distances and the offsets. The format can be GeoJSON or Esri.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geodetic.p.rapidapi.com/along\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geodetic.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geodetic.p.rapidapi.com/along\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geodetic.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}