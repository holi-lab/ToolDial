{
    "tool_name":"Raster and vector maps",
    "tool_description":"Tiled raster and vector maps with multiple visual styles. For web, mobile apps, GIS systems & more.",
    "title":"Raster and vector maps",
    "pricing":"FREEMIUM",
    "score":{
        "avgServiceLevel":100,
        "avgLatency":201,
        "avgSuccessRate":100,
        "popularityScore":9.3,
        "__typename":"Score"
    },
    "home_url":"https://rapidapi.com/geoapify-gmbh-geoapify/api/raster-and-vector-maps/",
    "host":"raster-and-vector-maps.p.rapidapi.com",
    "api_list":[
        {
            "name":"Map styles",
            "url":"https://raster-and-vector-maps.p.rapidapi.com/v1/styles/{style}/{resource}",
            "description":"Style definitions and corresponding resources, including layer definitions, fonts, sprites. It is recommended to use \"style.json\" resource to automatically confiugre OpenLayers, MapboxGL, Leaflet or other map renderers. ----------------------------[IMPORTANT]---------------------------- To authorize renderer requests to RapidAPI, you either need to inject \"x-rapidapi-key\" header into each request issued by renderer OR (easier) add it as the \"rapidapi-key\" query string parameter.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"resource",
                    "type":"string",
                    "description":"Style resources, including style.json, tile.json, fonts, sprites and other meta-resources referenced by a map style.",
                    "default":"style.json"
                },
                {
                    "name":"style",
                    "type":"string",
                    "description":"Supported map style: osm-carto, osm-bright, klokantech-basic, positron, or dark-matter",
                    "default":"osm-carto"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://raster-and-vector-maps.p.rapidapi.com/v1/styles/{style}/{resource}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"raster-and-vector-maps.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Tiles",
            "url":"https://raster-and-vector-maps.p.rapidapi.com/v1/tile/{style}/{z}/{x}/{y_and_format}",
            "description":"Individual map tiles in raster or vector (MVT compatible) format.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"z",
                    "type":"string",
                    "description":"Zoom",
                    "default":"0"
                },
                {
                    "name":"x",
                    "type":"string",
                    "description":"Tile X coordinate",
                    "default":"0"
                },
                {
                    "name":"y_and_format",
                    "type":"string",
                    "description":"Tile Y coordinate and format",
                    "default":"0.png"
                },
                {
                    "name":"style",
                    "type":"string",
                    "description":"Supported map style: osm-carto and vector",
                    "default":"osm-carto"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://raster-and-vector-maps.p.rapidapi.com/v1/tile/{style}/{z}/{x}/{y_and_format}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"raster-and-vector-maps.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":"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",
            "headers":{
                "accept-ranges":"bytes",
                "access-control-allow-headers":"access-control-max-age, access-control-allow-headers, access-control-allow-methods, access-control-allow-origin, allow, api-version, cf-ray, content-encoding, content-type, date, expect-ct, server, status, vary, cache-control, etag, last-modified, expires",
                "access-control-allow-methods":"GET, POST, DELETE, OPTIONS, PUT",
                "access-control-allow-origin":"*",
                "alt-svc":"h3-27=\":443\"; ma=86400, h3-25=\":443\"; ma=86400, h3-24=\":443\"; ma=86400, h3-23=\":443\"; ma=86400",
                "api-version":"1.0",
                "cache-control":"public, max-age=600",
                "cf-cache-status":"BYPASS",
                "cf-ray":"57701c126b33edc7-CDG",
                "content-type":"image/png",
                "date":"Fri, 20 Mar 2020 14:26:41 GMT",
                "etag":"W/\"5cfb6e8aef97a97e5a29514992ec95b0\"",
                "expect-ct":"max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"",
                "server":"RapidAPI-1.0.42",
                "set-cookie":[
                    "__cfduid=d11655be614d391787d40e7efcdb7d3a51584714401; expires=Sun, 19-Apr-20 14:26:41 GMT; path=/; domain=.geoapify.com; HttpOnly; SameSite=Lax; Secure"
                ],
                "vary":"Accept-Encoding",
                "x-rapidapi-region":"AWS - eu-central-1",
                "x-rapidapi-version":"1.0.42",
                "content-length":"6778",
                "connection":"Close"
            },
            "schema":{
                "type":"object",
                "properties":{
                    "get":{
                        "type":"string"
                    },
                    "parameters":{
                        "type":"array"
                    },
                    "errors":{
                        "type":"array"
                    },
                    "results":{
                        "type":"integer"
                    },
                    "response":{
                        "type":"array",
                        "items":{
                            "type":"object"
                        }
                    }
                }
            }
        }
    ]
}