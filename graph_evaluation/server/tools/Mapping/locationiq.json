{
    "tool_name":"LocationIQ",
    "tool_description":"Affordable forward geocoding, reverse geocoding, routing and map tile APIs. Provides accurate and scalable APIs.",
    "title":"LocationIQ",
    "pricing":"FREEMIUM",
    "score":{
        "avgServiceLevel":100,
        "avgLatency":398,
        "avgSuccessRate":0,
        "popularityScore":0,
        "__typename":"Score"
    },
    "home_url":"https://rapidapi.com/locationiq-locationiq-default/api/locationiq2/",
    "host":"locationiq2.p.rapidapi.com",
    "api_list":[
        {
            "name":"limitByViewbox",
            "url":"https://locationiq2.p.rapidapi.com/v1/autocomplete",
            "description":"Specify the preferred area to find search results.\r\n\r\n> The Autocomplete API is a variant of the Search API that returns place predictions in response to an HTTP request. The request specifies a textual search string and optional geographic bounds. The service can be used to provide autocomplete functionality for text-based geographic searches, by returning places such as businesses, addresses and points of interest as a user types.\r\n\r\n> The Autocomplete API can match on full words as well as substrings. Applications can therefore send queries as the user types, to provide on-the-fly place predictions.",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[
                {
                    "name":"bounded",
                    "type":"NUMBER",
                    "description":"Restrict result to items contained within the bounds specified in the viewbox parameter [0] [1]",
                    "default":"1"
                },
                {
                    "name":"key",
                    "type":"STRING",
                    "description":"Your API key",
                    "default":"{{Your_API_Key}}"
                },
                {
                    "name":"viewbox",
                    "type":"STRING",
                    "description":"The preferred area to find search results. Any two corner points of the box - max_lon,max_lat,min_lon,min_lat or min_lon,min_lat,max_lon,max_lat - are accepted in any order as long as they span a real box. Currently, this option in the Autocomplete API only increases weigtage of results inside the viewbox. It does not restrict results to this box.",
                    "default":"-132.84908,47.69382,-70.44674,30.82531"
                },
                {
                    "name":"q",
                    "type":"STRING",
                    "description":"Query string to search for",
                    "default":"Empire State"
                }
            ],
            "code":"import requests\n\nurl = \"https://locationiq2.p.rapidapi.com/v1/autocomplete\"\nquerystring = {\"bounded\": bounded, \"key\": key, \"viewbox\": viewbox, \"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"locationiq2.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{},
            "headers":{},
            "schema":{
                "type":"object",
                "properties":{
                    "get":{
                        "type":"string"
                    },
                    "parameters":{
                        "type":"array"
                    },
                    "errors":{
                        "type":"array"
                    },
                    "results":{
                        "type":"integer"
                    },
                    "response":{
                        "type":"array",
                        "items":{
                            "type":"object"
                        }
                    }
                }
            }
        },
        {
            "name":"listOfAllNearbyPoIsExceptGyms",
            "url":"https://locationiq2.p.rapidapi.com/v1/nearby",
            "description":"The Nearby Points of Interest (PoI) API returns specified PoIs or Places around a given coordinate.\r\n\r\n",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[
                {
                    "name":"lat",
                    "type":"NUMBER",
                    "description":"Latitude of the location to generate the PoI list for.",
                    "default":"40.7484284"
                },
                {
                    "name":"key",
                    "type":"STRING",
                    "description":"Authentication Key",
                    "default":"{{Your_API_Key}}"
                },
                {
                    "name":"tag",
                    "type":"STRING",
                    "description":"PoI to generate the list for. Defaults to country (check Nearby-Countries). ",
                    "default":"!amenity:gym"
                },
                {
                    "name":"lon",
                    "type":"NUMBER",
                    "description":"Longitude of the location to generate the PoI list for.",
                    "default":"-73.9856546"
                }
            ],
            "code":"import requests\n\nurl = \"https://locationiq2.p.rapidapi.com/v1/nearby\"\nquerystring = {\"lat\": lat, \"key\": key, \"tag\": tag, \"lon\": lon}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"locationiq2.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{},
            "headers":{},
            "schema":{
                "type":"object",
                "properties":{
                    "get":{
                        "type":"string"
                    },
                    "parameters":{
                        "type":"array"
                    },
                    "errors":{
                        "type":"array"
                    },
                    "results":{
                        "type":"integer"
                    },
                    "response":{
                        "type":"array",
                        "items":{
                            "type":"object"
                        }
                    }
                }
            }
        },
        {
            "name":"generalUsage",
            "url":"https://locationiq2.p.rapidapi.com/v1/timezone",
            "description":"The Timezone API provides time offset data for locations on the surface of the earth.",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[
                {
                    "name":"lat",
                    "type":"NUMBER",
                    "description":"Latitude of the location",
                    "default":"17.3850"
                },
                {
                    "name":"key",
                    "type":"STRING",
                    "description":"Authentication key",
                    "default":"{{Your_API_Key}}"
                },
                {
                    "name":"lon",
                    "type":"NUMBER",
                    "description":"Longitude of the location",
                    "default":"78.4867"
                }
            ],
            "code":"import requests\n\nurl = \"https://locationiq2.p.rapidapi.com/v1/timezone\"\nquerystring = {\"lat\": lat, \"key\": key, \"lon\": lon}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"locationiq2.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{},
            "headers":{},
            "schema":{
                "type":"object",
                "properties":{
                    "get":{
                        "type":"string"
                    },
                    "parameters":{
                        "type":"array"
                    },
                    "errors":{
                        "type":"array"
                    },
                    "results":{
                        "type":"integer"
                    },
                    "response":{
                        "type":"array",
                        "items":{
                            "type":"object"
                        }
                    }
                }
            }
        },
        {
            "name":"generalUsage",
            "url":"https://locationiq2.p.rapidapi.com/v3/staticmap",
            "description":" ",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[
                {
                    "name":"key",
                    "type":"STRING",
                    "description":"Your API Access Token",
                    "default":"{{Your_API_Key}}"
                }
            ],
            "code":"import requests\n\nurl = \"https://locationiq2.p.rapidapi.com/v3/staticmap\"\nquerystring = {\"key\": key}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"locationiq2.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{},
            "headers":{},
            "schema":{
                "type":"object",
                "properties":{
                    "get":{
                        "type":"string"
                    },
                    "parameters":{
                        "type":"array"
                    },
                    "errors":{
                        "type":"array"
                    },
                    "results":{
                        "type":"integer"
                    },
                    "response":{
                        "type":"array",
                        "items":{
                            "type":"object"
                        }
                    }
                }
            }
        },
        {
            "name":"postalCodeQuery",
            "url":"https://locationiq2.p.rapidapi.com/v1/search",
            "description":"It takes postalcode & countrycode as input.\n\n> The Search API allows converting addresses, such as a street address, into geographic coordinates (latitude and longitude). These coordinates can serve various use-cases, from placing markers on a map to helping algorithms determine nearby bus stops. This process is also known as Forward Geocoding.",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[
                {
                    "name":"format",
                    "type":"STRING",
                    "description":"Output Format [json | xml]",
                    "default":"json"
                },
                {
                    "name":"key",
                    "type":"STRING",
                    "description":"Your API Key",
                    "default":"{{Your_API_Key}}"
                },
                {
                    "name":"countrycodes",
                    "type":"STRING",
                    "description":"Limit search to a list of countries. ",
                    "default":"us"
                },
                {
                    "name":"postalcode",
                    "type":"NUMBER",
                    "description":"Alternative query string format for postal code requests that uses a special postal code dataset for geocoding. Do not combine with q=<query> or other structured parameters for postal code search. Combine with countrycodes=<countrycode> parameter for a better response",
                    "default":"10001"
                }
            ],
            "code":"import requests\n\nurl = \"https://locationiq2.p.rapidapi.com/v1/search\"\nquerystring = {\"format\": format, \"key\": key, \"countrycodes\": countrycodes, \"postalcode\": postalcode}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"locationiq2.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{},
            "headers":{},
            "schema":{
                "type":"object",
                "properties":{
                    "get":{
                        "type":"string"
                    },
                    "parameters":{
                        "type":"array"
                    },
                    "errors":{
                        "type":"array"
                    },
                    "results":{
                        "type":"integer"
                    },
                    "response":{
                        "type":"array",
                        "items":{
                            "type":"object"
                        }
                    }
                }
            }
        },
        {
            "name":"fixedSourceDestination",
            "url":"https://locationiq2.p.rapidapi.com/v1/{service}/{profile}/{coordinates}",
            "description":"Round trip in London with four stops, starting at the first stop, ending at the last.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"service",
                    "type":"STRING",
                    "description":"One of the following values: directions, matching, matrix, nearest, optimize",
                    "default":"optimize"
                },
                {
                    "name":"profile",
                    "type":"STRING",
                    "description":"Mode of transportation. Only driving is supported at the moment.",
                    "default":"driving"
                },
                {
                    "name":"coordinates",
                    "type":"STRING",
                    "description":"String of format {longitude},{latitude};{longitude},{latitude}[;{longitude},{latitude} ...] or polyline({polyline}) or polyline6({polyline6}).\npolyline follows Google's polyline format with precision 5",
                    "default":"-0.127627,51.503355;-0.087199,51.509562;-0.076134,51.508037"
                }
            ],
            "optional_parameters":[
                {
                    "name":"source",
                    "type":"STRING",
                    "description":"Returned route starts at any or first coordinate [ any | first ]",
                    "default":"first"
                },
                {
                    "name":"key",
                    "type":"STRING",
                    "description":"",
                    "default":"{{Your_API_Key}}"
                },
                {
                    "name":"destination",
                    "type":"STRING",
                    "description":"Returned route ends at any or last coordinate [ any | last ]",
                    "default":"last"
                }
            ],
            "code":"import requests\n\nurl = \"https://locationiq2.p.rapidapi.com/v1/{service}/{profile}/{coordinates}\"\nquerystring = {\"source\": source, \"key\": key, \"destination\": destination}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"locationiq2.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{},
            "headers":{},
            "schema":{
                "type":"object",
                "properties":{
                    "get":{
                        "type":"string"
                    },
                    "parameters":{
                        "type":"array"
                    },
                    "errors":{
                        "type":"array"
                    },
                    "results":{
                        "type":"integer"
                    },
                    "response":{
                        "type":"array",
                        "items":{
                            "type":"object"
                        }
                    }
                }
            }
        },
        {
            "name":"generalUsage",
            "url":"https://locationiq2.p.rapidapi.com/v1/balance",
            "description":"The Balance API provides a count of request credits left in the user's account for the day. Balance is reset at midnight UTC everyday (00:00 UTC).",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[
                {
                    "name":"key",
                    "type":"STRING",
                    "description":"",
                    "default":"{{Your_API_Key}}"
                }
            ],
            "code":"import requests\n\nurl = \"https://locationiq2.p.rapidapi.com/v1/balance\"\nquerystring = {\"key\": key}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"locationiq2.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{},
            "headers":{},
            "schema":{
                "type":"object",
                "properties":{
                    "get":{
                        "type":"string"
                    },
                    "parameters":{
                        "type":"array"
                    },
                    "errors":{
                        "type":"array"
                    },
                    "results":{
                        "type":"integer"
                    },
                    "response":{
                        "type":"array",
                        "items":{
                            "type":"object"
                        }
                    }
                }
            }
        },
        {
            "name":"usingOsmIdType",
            "url":"https://locationiq2.p.rapidapi.com/v1/reverse",
            "description":"It takes OSM ID & Type as input.\n\n> Reverse geocoding with OSM ID & Type is the process of converting an object represented by OSM ID and Type ( node, way and relations [N,W,R] ) to a readable address or place name. This permits the identification of nearby street addresses, places, and/or area subdivisions such as a neighborhood, county, state, or country.",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[
                {
                    "name":"key",
                    "type":"STRING",
                    "description":"Authentication key.",
                    "default":"{{Your_API_Key}}"
                },
                {
                    "name":"osm_type",
                    "type":"STRING",
                    "description":"A specific osm type, node / way / relation to search an address for [ N, W , R ], only applicable when neither (lat lon) is present. That is use in combination osm_id and osm_type or lat and lon to get result",
                    "default":"W"
                },
                {
                    "name":"osm_id",
                    "type":"NUMBER",
                    "description":"A specific osm node / way / relation to return an address for",
                    "default":"34633854"
                },
                {
                    "name":"format",
                    "type":"STRING",
                    "description":"Output Format. Defaults to xml",
                    "default":"json"
                }
            ],
            "code":"import requests\n\nurl = \"https://locationiq2.p.rapidapi.com/v1/reverse\"\nquerystring = {\"key\": key, \"osm_type\": osm_type, \"osm_id\": osm_id, \"format\": format}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"locationiq2.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{},
            "headers":{},
            "schema":{
                "type":"object",
                "properties":{
                    "get":{
                        "type":"string"
                    },
                    "parameters":{
                        "type":"array"
                    },
                    "errors":{
                        "type":"array"
                    },
                    "results":{
                        "type":"integer"
                    },
                    "response":{
                        "type":"array",
                        "items":{
                            "type":"object"
                        }
                    }
                }
            }
        }
    ]
}