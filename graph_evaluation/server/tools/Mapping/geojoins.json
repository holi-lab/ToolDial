{
    "product_id": "api_376b12c1-5a85-45f7-91a1-b0c6cc4fade9",
    "tool_description": "Joins two spatially enabled feature collections based on their relative spatial locations. ",
    "home_url": "https://rapidapi.com/gisfromscratch/api/geojoins/",
    "name": "geojoins",
    "title": "geojoins",
    "pricing": "FREEMIUM",
    "tool_name": "geojoins",
    "score": null,
    "host": "geojoins.p.rapidapi.com",
    "api_list": [
        {
            "name": "crosses",
            "url": "https://geojoins.p.rapidapi.com/crosses",
            "description": "Joins the input features from 'left' with the matching target features from 'right' for all input features crossing the target features. Therefore, the input and target geometry have some interior points in common. So that the intersection of the input and target geometry must be non-empty and must not equal the input or the target geometry.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geojoins.p.rapidapi.com/crosses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geojoins.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geojoins.p.rapidapi.com/crosses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geojoins.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "within",
            "url": "https://geojoins.p.rapidapi.com/within",
            "description": "Joins the input features from 'left' with the matching target features from 'right' for all target features containing the input features. Therefore, the input geometry must be completely inside the target geometry. So that no points of the input geometry lie in the target's exterior geometry, and at least one point of the interior of the input geometry lies in the target's interior geometry.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geojoins.p.rapidapi.com/within\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geojoins.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geojoins.p.rapidapi.com/within\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geojoins.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "touches",
            "url": "https://geojoins.p.rapidapi.com/touches",
            "description": "Joins the input features from 'left' with the matching target features from 'right' for all input features touching the target features. Therefore, the input and target geometry must have at least one point in common and all common points lie on at least one boundary. So that the input and target interior do not share any point in common.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geojoins.p.rapidapi.com/touches\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geojoins.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geojoins.p.rapidapi.com/touches\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geojoins.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "overlaps",
            "url": "https://geojoins.p.rapidapi.com/overlaps",
            "description": "Joins the input features from 'left' with the matching target features from 'right' for all input features overlapping the target features. Therefore, the input and target geometry must have the same dimension and at least one point not shared by the other. So that the intersection of their interiors results in a geometry, having the same dimension.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geojoins.p.rapidapi.com/overlaps\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geojoins.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geojoins.p.rapidapi.com/overlaps\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geojoins.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "intersects",
            "url": "https://geojoins.p.rapidapi.com/intersects",
            "description": "Joins the input features from 'left' with the matching target features from 'right' for all input features intersecting the target features. Therefore, the input and target geometry must have any point in common.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geojoins.p.rapidapi.com/intersects\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geojoins.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geojoins.p.rapidapi.com/intersects\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geojoins.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "covers",
            "url": "https://geojoins.p.rapidapi.com/covers",
            "description": "Joins the input features from 'left' with the matching target features from 'right' for all input features covering the target features. Therefore, no point of the target geometry must be outside of the input geometry.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geojoins.p.rapidapi.com/covers\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geojoins.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geojoins.p.rapidapi.com/covers\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geojoins.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "contains",
            "url": "https://geojoins.p.rapidapi.com/contains",
            "description": "Joins the input features from 'left' with the matching target features from 'right' for all input features containing the target features. Therefore, the target geometry must be completely inside the input geometry. So that no points of the target geometry lie in the input's exterior geometry, and at least one point of the interior of the target geometry lies in the input's interior geometry.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geojoins.p.rapidapi.com/contains\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geojoins.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geojoins.p.rapidapi.com/contains\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geojoins.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}