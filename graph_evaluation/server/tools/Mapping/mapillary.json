{
    "product_id": "122",
    "tool_description": "Map locations based on user-generated street-level photos.",
    "home_url": "https://rapidapi.com/stefan.skliarov/api/Mapillary/",
    "name": "Mapillary",
    "title": "Mapillary",
    "pricing": "FREE",
    "tool_name": "Mapillary",
    "score": null,
    "host": "Mapillarystefan-skliarovV1.p.rapidapi.com",
    "api_list": [
        {
            "name": "getSingleChangeset",
            "url": "https://Mapillarystefan-skliarovV1.p.rapidapi.com/getSingleChangeset",
            "description": "Given a changesetId, retrieve the changeset object.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientId",
                    "type": "CREDENTIALS",
                    "description": "Client Id obtained from Mapillary",
                    "default": ""
                },
                {
                    "name": "changesetId",
                    "type": "STRING",
                    "description": "ID of the changeset",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Mapillarystefan-skliarovV1.p.rapidapi.com/getSingleChangeset\"\nquerystring = {\"clientId\": \"\", \"changesetId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Mapillarystefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Mapillarystefan-skliarovV1.p.rapidapi.com/getSingleChangeset\"\nquerystring = {\"clientId\": \"\", \"changesetId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Mapillarystefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleDetection",
            "url": "https://Mapillarystefan-skliarovV1.p.rapidapi.com/getSingleDetection",
            "description": "Given a detectionId, retrieve the detection object.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientId",
                    "type": "CREDENTIALS",
                    "description": "Client Id obtained from Mapillary",
                    "default": ""
                },
                {
                    "name": "detectionId",
                    "type": "STRING",
                    "description": "ID of the detection",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Mapillarystefan-skliarovV1.p.rapidapi.com/getSingleDetection\"\nquerystring = {\"clientId\": \"\", \"detectionId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Mapillarystefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Mapillarystefan-skliarovV1.p.rapidapi.com/getSingleDetection\"\nquerystring = {\"clientId\": \"\", \"detectionId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Mapillarystefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleImage",
            "url": "https://Mapillarystefan-skliarovV1.p.rapidapi.com/getSingleImage",
            "description": "Given an imageId, retrieve the image object.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageId",
                    "type": "STRING",
                    "description": "ID of the image",
                    "default": ""
                },
                {
                    "name": "clientId",
                    "type": "CREDENTIALS",
                    "description": "Client Id obtained from Mapillary",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Mapillarystefan-skliarovV1.p.rapidapi.com/getSingleImage\"\nquerystring = {\"imageId\": \"\", \"clientId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Mapillarystefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Mapillarystefan-skliarovV1.p.rapidapi.com/getSingleImage\"\nquerystring = {\"imageId\": \"\", \"clientId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Mapillarystefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleMap",
            "url": "https://Mapillarystefan-skliarovV1.p.rapidapi.com/getSingleMap",
            "description": "Given an mapId, retrieve the map object.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "mapId",
                    "type": "STRING",
                    "description": "ID of the map",
                    "default": ""
                },
                {
                    "name": "clientId",
                    "type": "CREDENTIALS",
                    "description": "Client Id obtained from Mapillary",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Mapillarystefan-skliarovV1.p.rapidapi.com/getSingleMap\"\nquerystring = {\"mapId\": \"\", \"clientId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Mapillarystefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Mapillarystefan-skliarovV1.p.rapidapi.com/getSingleMap\"\nquerystring = {\"mapId\": \"\", \"clientId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Mapillarystefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleSequence",
            "url": "https://Mapillarystefan-skliarovV1.p.rapidapi.com/getSingleSequence",
            "description": "Given an sequenceId, retrieve the sequence object.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "sequenceId",
                    "type": "STRING",
                    "description": "ID of the sequence",
                    "default": ""
                },
                {
                    "name": "clientId",
                    "type": "CREDENTIALS",
                    "description": "Client Id obtained from Mapillary",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Mapillarystefan-skliarovV1.p.rapidapi.com/getSingleSequence\"\nquerystring = {\"sequenceId\": \"\", \"clientId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Mapillarystefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Mapillarystefan-skliarovV1.p.rapidapi.com/getSingleSequence\"\nquerystring = {\"sequenceId\": \"\", \"clientId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Mapillarystefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleUser",
            "url": "https://Mapillarystefan-skliarovV1.p.rapidapi.com/getSingleUser",
            "description": "Given an userId, retrieve the user object.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Key of the user",
                    "default": ""
                },
                {
                    "name": "clientId",
                    "type": "CREDENTIALS",
                    "description": "Client Id obtained from Mapillary",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Mapillarystefan-skliarovV1.p.rapidapi.com/getSingleUser\"\nquerystring = {\"userId\": \"\", \"clientId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Mapillarystefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Mapillarystefan-skliarovV1.p.rapidapi.com/getSingleUser\"\nquerystring = {\"userId\": \"\", \"clientId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Mapillarystefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserStatistics",
            "url": "https://Mapillarystefan-skliarovV1.p.rapidapi.com/getUserStatistics",
            "description": "Given an userId, retrieve the user object statistics.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientId",
                    "type": "CREDENTIALS",
                    "description": "Client Id obtained from Mapillary",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Key of the user",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Mapillarystefan-skliarovV1.p.rapidapi.com/getUserStatistics\"\nquerystring = {\"clientId\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Mapillarystefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Mapillarystefan-skliarovV1.p.rapidapi.com/getUserStatistics\"\nquerystring = {\"clientId\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Mapillarystefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchChangesets",
            "url": "https://Mapillarystefan-skliarovV1.p.rapidapi.com/searchChangesets",
            "description": "Search changesets",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientId",
                    "type": "CREDENTIALS",
                    "description": "Client Id obtained from Mapillary",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "types",
                    "type": "SELECT",
                    "description": "Changeset types. Possible values: location, deletion",
                    "default": ""
                },
                {
                    "name": "maxBoundingBoxX",
                    "type": "STRING",
                    "description": "Maximal X for filter by the bounding box",
                    "default": ""
                },
                {
                    "name": "minBoundingBoxX",
                    "type": "STRING",
                    "description": "Minimal X for filter by the bounding box",
                    "default": ""
                },
                {
                    "name": "userKeys",
                    "type": "STRING",
                    "description": "Filter images captured by users.",
                    "default": ""
                },
                {
                    "name": "minBoundingBoxY",
                    "type": "STRING",
                    "description": "Minimal Y for filter by the bounding box",
                    "default": ""
                },
                {
                    "name": "states",
                    "type": "SELECT",
                    "description": "Changeset state. Possible values: pending, approved, rejected",
                    "default": ""
                },
                {
                    "name": "minBoundingBoxY",
                    "type": "STRING",
                    "description": "Maximal Y for filter by the bounding box",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Mapillarystefan-skliarovV1.p.rapidapi.com/searchChangesets\"\nquerystring = {\"types\": \"\", \"maxBoundingBoxX\": \"\", \"minBoundingBoxX\": \"\", \"userKeys\": \"\", \"minBoundingBoxY\": \"\", \"states\": \"\", \"clientId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Mapillarystefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Mapillarystefan-skliarovV1.p.rapidapi.com/searchChangesets\"\nquerystring = {\"types\": \"\", \"maxBoundingBoxX\": \"\", \"minBoundingBoxX\": \"\", \"userKeys\": \"\", \"minBoundingBoxY\": \"\", \"states\": \"\", \"clientId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Mapillarystefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchDetections",
            "url": "https://Mapillarystefan-skliarovV1.p.rapidapi.com/searchDetections",
            "description": "Search detection objects",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientId",
                    "type": "CREDENTIALS",
                    "description": "Client Id obtained from Mapillary",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "minBoundingBoxY",
                    "type": "STRING",
                    "description": "Minimal Y for filter by the bounding box",
                    "default": ""
                },
                {
                    "name": "minBoundingBoxY",
                    "type": "STRING",
                    "description": "Maximal Y for filter by the bounding box",
                    "default": ""
                },
                {
                    "name": "maxBoundingBoxX",
                    "type": "STRING",
                    "description": "Maximal X for filter by the bounding box",
                    "default": ""
                },
                {
                    "name": "minBoundingBoxX",
                    "type": "STRING",
                    "description": "Minimal X for filter by the bounding box",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Mapillarystefan-skliarovV1.p.rapidapi.com/searchDetections\"\nquerystring = {\"minBoundingBoxY\": \"\", \"clientId\": \"\", \"maxBoundingBoxX\": \"\", \"minBoundingBoxX\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Mapillarystefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Mapillarystefan-skliarovV1.p.rapidapi.com/searchDetections\"\nquerystring = {\"minBoundingBoxY\": \"\", \"clientId\": \"\", \"maxBoundingBoxX\": \"\", \"minBoundingBoxX\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Mapillarystefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchImages",
            "url": "https://Mapillarystefan-skliarovV1.p.rapidapi.com/searchImages",
            "description": "Search images",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientId",
                    "type": "CREDENTIALS",
                    "description": "Client Id obtained from Mapillary",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "radius",
                    "type": "STRING",
                    "description": "Filter images within the radius around the  closeTo location (default  100 meters).",
                    "default": ""
                },
                {
                    "name": "closeToCoordinates",
                    "type": "MAP",
                    "description": "Coma separated coordinates for the filter by a location that images are close to",
                    "default": ""
                },
                {
                    "name": "minBoundingBoxX",
                    "type": "STRING",
                    "description": "Minimal X for filter by the bounding box",
                    "default": ""
                },
                {
                    "name": "maxBoundingBoxX",
                    "type": "STRING",
                    "description": "Maximal X for filter by the bounding box",
                    "default": ""
                },
                {
                    "name": "minBoundingBoxY",
                    "type": "STRING",
                    "description": "Maximal Y for filter by the bounding box",
                    "default": ""
                },
                {
                    "name": "lookAtCoordinates",
                    "type": "MAP",
                    "description": "Coma separated coordinates for the filter by a location that images are taken in the direction of the specified point (and therefore that point is likely to be visible in the images)",
                    "default": ""
                },
                {
                    "name": "userKeys",
                    "type": "STRING",
                    "description": "Filter images captured by users.",
                    "default": ""
                },
                {
                    "name": "minBoundingBoxY",
                    "type": "STRING",
                    "description": "Minimal Y for filter by the bounding box",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Mapillarystefan-skliarovV1.p.rapidapi.com/searchImages\"\nquerystring = {\"radius\": \"\", \"closeToCoordinates\": \"\", \"minBoundingBoxX\": \"\", \"maxBoundingBoxX\": \"\", \"minBoundingBoxY\": \"\", \"lookAtCoordinates\": \"\", \"clientId\": \"\", \"userKeys\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Mapillarystefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Mapillarystefan-skliarovV1.p.rapidapi.com/searchImages\"\nquerystring = {\"radius\": \"\", \"closeToCoordinates\": \"\", \"minBoundingBoxX\": \"\", \"maxBoundingBoxX\": \"\", \"minBoundingBoxY\": \"\", \"lookAtCoordinates\": \"\", \"clientId\": \"\", \"userKeys\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Mapillarystefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchMaps",
            "url": "https://Mapillarystefan-skliarovV1.p.rapidapi.com/searchMaps",
            "description": "Search maps objects",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientId",
                    "type": "CREDENTIALS",
                    "description": "Client Id obtained from Mapillary",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "maxBoundingBoxX",
                    "type": "STRING",
                    "description": "Maximal X for filter by the bounding box",
                    "default": ""
                },
                {
                    "name": "minBoundingBoxX",
                    "type": "STRING",
                    "description": "Minimal X for filter by the bounding box",
                    "default": ""
                },
                {
                    "name": "minBoundingBoxY",
                    "type": "STRING",
                    "description": "Minimal Y for filter by the bounding box",
                    "default": ""
                },
                {
                    "name": "minBoundingBoxY",
                    "type": "STRING",
                    "description": "Maximal Y for filter by the bounding box",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Mapillarystefan-skliarovV1.p.rapidapi.com/searchMaps\"\nquerystring = {\"maxBoundingBoxX\": \"\", \"minBoundingBoxX\": \"\", \"minBoundingBoxY\": \"\", \"clientId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Mapillarystefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Mapillarystefan-skliarovV1.p.rapidapi.com/searchMaps\"\nquerystring = {\"maxBoundingBoxX\": \"\", \"minBoundingBoxX\": \"\", \"minBoundingBoxY\": \"\", \"clientId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Mapillarystefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchSequences",
            "url": "https://Mapillarystefan-skliarovV1.p.rapidapi.com/searchSequences",
            "description": "Search sequences",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientId",
                    "type": "CREDENTIALS",
                    "description": "Client Id obtained from Mapillary",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "minBoundingBoxY",
                    "type": "STRING",
                    "description": "Minimal Y for filter by the bounding box",
                    "default": ""
                },
                {
                    "name": "minBoundingBoxY",
                    "type": "STRING",
                    "description": "Maximal Y for filter by the bounding box",
                    "default": ""
                },
                {
                    "name": "maxBoundingBoxX",
                    "type": "STRING",
                    "description": "Maximal X for filter by the bounding box",
                    "default": ""
                },
                {
                    "name": "userKeys",
                    "type": "STRING",
                    "description": "Filter images captured by users.",
                    "default": ""
                },
                {
                    "name": "minBoundingBoxX",
                    "type": "STRING",
                    "description": "Minimal X for filter by the bounding box",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Mapillarystefan-skliarovV1.p.rapidapi.com/searchSequences\"\nquerystring = {\"minBoundingBoxY\": \"\", \"clientId\": \"\", \"maxBoundingBoxX\": \"\", \"userKeys\": \"\", \"minBoundingBoxX\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Mapillarystefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Mapillarystefan-skliarovV1.p.rapidapi.com/searchSequences\"\nquerystring = {\"minBoundingBoxY\": \"\", \"clientId\": \"\", \"maxBoundingBoxX\": \"\", \"userKeys\": \"\", \"minBoundingBoxX\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Mapillarystefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchUsers",
            "url": "https://Mapillarystefan-skliarovV1.p.rapidapi.com/searchUsers",
            "description": "Search user objects",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientId",
                    "type": "CREDENTIALS",
                    "description": "Client Id obtained from Mapillary",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "minBoundingBoxX",
                    "type": "STRING",
                    "description": "Minimal X for filter by the bounding box",
                    "default": ""
                },
                {
                    "name": "maxBoundingBoxX",
                    "type": "STRING",
                    "description": "Maximal X for filter by the bounding box",
                    "default": ""
                },
                {
                    "name": "minBoundingBoxY",
                    "type": "STRING",
                    "description": "Minimal Y for filter by the bounding box",
                    "default": ""
                },
                {
                    "name": "minBoundingBoxY",
                    "type": "STRING",
                    "description": "Maximal Y for filter by the bounding box",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Mapillarystefan-skliarovV1.p.rapidapi.com/searchUsers\"\nquerystring = {\"minBoundingBoxX\": \"\", \"maxBoundingBoxX\": \"\", \"clientId\": \"\", \"minBoundingBoxY\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Mapillarystefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Mapillarystefan-skliarovV1.p.rapidapi.com/searchUsers\"\nquerystring = {\"minBoundingBoxX\": \"\", \"maxBoundingBoxX\": \"\", \"clientId\": \"\", \"minBoundingBoxY\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Mapillarystefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}