{
    "product_id": "53aa4f45e4b008bb2ef863b5",
    "tool_description": "Easily follow and track your favorite artists on SongMeanings!\r\nBe the first to know about new lyrics, song meanings & more!",
    "home_url": "https://rapidapi.com/songmeanings/api/songmeanings/",
    "name": "SongMeanings",
    "title": "SongMeanings",
    "pricing": "FREE",
    "tool_name": "SongMeanings",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 274,
        "avgSuccessRate": 100,
        "popularityScore": 9.1,
        "__typename": "Score"
    },
    "host": "songmeanings.p.rapidapi.com",
    "api_list": [
        {
            "name": "comments.get",
            "url": "https://songmeanings.p.rapidapi.com/",
            "description": "Get comments from our database for a specific song.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "artist_name",
                    "type": "STRING",
                    "description": "The artist name",
                    "default": ""
                },
                {
                    "name": "lyric_title",
                    "type": "STRING",
                    "description": "The song, track or lyric title",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sm_lid",
                    "type": "STRING",
                    "description": "If SM lyric_id is known, then this will bypass artist_name and lyric_title",
                    "default": ""
                },
                {
                    "name": "parent_id",
                    "type": "STRING",
                    "description": "When specified, method will return any replies for parent comment.",
                    "default": ""
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "Set what type of comments to return",
                    "default": "all"
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "Starting page of comments",
                    "default": "1"
                },
                {
                    "name": "page_size",
                    "type": "STRING",
                    "description": "Set how many comments returned per page",
                    "default": "25"
                },
                {
                    "name": "page_order",
                    "type": "STRING",
                    "description": "Order by a specific field (date or rating)",
                    "default": "date"
                },
                {
                    "name": "page_sort",
                    "type": "STRING",
                    "description": "Sort by ascending or descending (asc or desc)",
                    "default": "asc"
                }
            ],
            "code": "import requests\n\nurl = \"https://songmeanings.p.rapidapi.com/\"\nquerystring = {\"artist_name\": \"\", \"lyric_title\": \"\", \"sm_lid\": \"\", \"parent_id\": \"\", \"type\": \"all\", \"page\": \"1\", \"page_size\": \"25\", \"page_order\": \"date\", \"page_sort\": \"asc\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"songmeanings.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://songmeanings.p.rapidapi.com/\"\nquerystring = {\"artist_name\": \"\", \"lyric_title\": \"\", \"sm_lid\": \"\", \"parent_id\": \"\", \"type\": \"all\", \"page\": \"1\", \"page_size\": \"25\", \"page_order\": \"date\", \"page_sort\": \"asc\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"songmeanings.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "artists.search",
            "url": "https://songmeanings.p.rapidapi.com/",
            "description": "Search the SongMeanings database for artist names and aliases.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "Query string",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "Starting page of comments",
                    "default": "1"
                },
                {
                    "name": "page_size",
                    "type": "STRING",
                    "description": "Set how many comments returned per page",
                    "default": "25"
                },
                {
                    "name": "matchmode",
                    "type": "STRING",
                    "description": "Configure how matching occurs (see further parameter values)",
                    "default": "extended"
                }
            ],
            "code": "import requests\n\nurl = \"https://songmeanings.p.rapidapi.com/\"\nquerystring = {\"q\": \"\", \"page\": \"1\", \"page_size\": \"25\", \"matchmode\": \"extended\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"songmeanings.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://songmeanings.p.rapidapi.com/\"\nquerystring = {\"q\": \"\", \"page\": \"1\", \"page_size\": \"25\", \"matchmode\": \"extended\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"songmeanings.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "lyrics.get",
            "url": "https://songmeanings.p.rapidapi.com/",
            "description": "Retrieves lyrics and lyric related data for a specific song.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "sm_lid",
                    "type": "STRING",
                    "description": "SongMeanings Lyric ID. When specified, this parameter will bypass any other lyric identification parameters.",
                    "default": ""
                },
                {
                    "name": "lyric_title",
                    "type": "STRING",
                    "description": "Song or track title.",
                    "default": ""
                },
                {
                    "name": "artist_name",
                    "type": "STRING",
                    "description": "Artist name.",
                    "default": ""
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Decide the output type (either xml or json); xml is default.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "spotify_id",
                    "type": "STRING",
                    "description": "If specified, a match will attempt to be made via spotify_id. Please note that if parameter is used, the API will also require lyric_title and artist_name as a backup attempt.",
                    "default": ""
                },
                {
                    "name": "count",
                    "type": "STRING",
                    "description": "This parameter is used to track, and report, any offline cached views of lyrics.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://songmeanings.p.rapidapi.com/\"\nquerystring = {\"sm_lid\": \"\", \"lyric_title\": \"\", \"artist_name\": \"\", \"format\": \"\", \"spotify_id\": \"\", \"count\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"songmeanings.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://songmeanings.p.rapidapi.com/\"\nquerystring = {\"sm_lid\": \"\", \"lyric_title\": \"\", \"artist_name\": \"\", \"format\": \"\", \"spotify_id\": \"\", \"count\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"songmeanings.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "songs.search",
            "url": "https://songmeanings.p.rapidapi.com/",
            "description": "",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "Query string",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sm_aid",
                    "type": "STRING",
                    "description": "SongMeapings Artist ID. When defined, engine will search query for any song titles found under the artist specified.",
                    "default": ""
                },
                {
                    "name": "q_artist",
                    "type": "STRING",
                    "description": "Artist name. When defined and Artist ID acquired, engine will search query for any song titles found under the artist specified. If both sm_aid and q_artist are defined, sm_aid will always supercede.",
                    "default": ""
                },
                {
                    "name": "index",
                    "type": "STRING",
                    "description": "Additional indexes to search in addition to song titles (see further parameter values)",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "Starting page of comments",
                    "default": "1"
                },
                {
                    "name": "page_size",
                    "type": "STRING",
                    "description": "Set how many comments returned per page",
                    "default": "25"
                },
                {
                    "name": "matchmode",
                    "type": "STRING",
                    "description": "Configure how matching occurs (see further parameter values)",
                    "default": "extended"
                }
            ],
            "code": "import requests\n\nurl = \"https://songmeanings.p.rapidapi.com/\"\nquerystring = {\"q\": \"\", \"sm_aid\": \"\", \"q_artist\": \"\", \"index\": \"\", \"page\": \"1\", \"page_size\": \"25\", \"matchmode\": \"extended\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"songmeanings.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://songmeanings.p.rapidapi.com/\"\nquerystring = {\"q\": \"\", \"sm_aid\": \"\", \"q_artist\": \"\", \"index\": \"\", \"page\": \"1\", \"page_size\": \"25\", \"matchmode\": \"extended\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"songmeanings.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "users.favorite.get",
            "url": "https://songmeanings.p.rapidapi.com/",
            "description": "Get a user\u2019s favorites by specified type.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "sm_uid",
                    "type": "STRING",
                    "description": "User ID to grab favorites for",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "Type of favorites to retrieve (artists, lyrics)",
                    "default": "lyrics"
                }
            ],
            "code": "import requests\n\nurl = \"https://songmeanings.p.rapidapi.com/\"\nquerystring = {\"sm_uid\": \"\", \"type\": \"lyrics\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"songmeanings.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://songmeanings.p.rapidapi.com/\"\nquerystring = {\"sm_uid\": \"\", \"type\": \"lyrics\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"songmeanings.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "users.password.reset",
            "url": "https://songmeanings.p.rapidapi.com/",
            "description": "Allows for a user to reset their password. When initiated, method will send the user an email with a link to click. The link will bring the user to desktop SongMeanings where the user will complete the password reset.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "sm_emai",
                    "type": "STRING",
                    "description": "The user\u2019s email address on the account to be reset.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sm_uid",
                    "type": "STRING",
                    "description": "SM User ID of the user initiating the password reset request.",
                    "default": ""
                },
                {
                    "name": "sm_username",
                    "type": "STRING",
                    "description": "SM Username of the user initiating the password reset request.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://songmeanings.p.rapidapi.com/\"\nquerystring = {\"sm_emai\": \"\", \"sm_uid\": \"\", \"sm_username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"songmeanings.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://songmeanings.p.rapidapi.com/\"\nquerystring = {\"sm_emai\": \"\", \"sm_uid\": \"\", \"sm_username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"songmeanings.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "comments.flag.put",
            "url": "https://songmeanings.p.rapidapi.com/",
            "description": "Allows for a specific comment to be flagged for moderation.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "comment_id",
                    "type": "STRING",
                    "description": "Specific comment ID; can be a parent or a reply comment.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sm_uid",
                    "type": "STRING",
                    "description": "SM User ID; acquired from successful log in.",
                    "default": ""
                },
                {
                    "name": "sm_authcode",
                    "type": "STRING",
                    "description": "SM User Authorization Code; acquired from successful log in.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://songmeanings.p.rapidapi.com/\"\nquerystring = {\"comment_id\": \"\", \"sm_uid\": \"\", \"sm_authcode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"songmeanings.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://songmeanings.p.rapidapi.com/\"\nquerystring = {\"comment_id\": \"\", \"sm_uid\": \"\", \"sm_authcode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"songmeanings.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "comments.rating.put",
            "url": "https://songmeanings.p.rapidapi.com/",
            "description": "Allows for a specific comment to be rated up or down by a logged in user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "comment_id",
                    "type": "STRING",
                    "description": "Specific comment ID; must be parent comment only.",
                    "default": ""
                },
                {
                    "name": "sm_uid",
                    "type": "STRING",
                    "description": "SM User ID; acquired from successful log in.",
                    "default": ""
                },
                {
                    "name": "sm_authcode",
                    "type": "STRING",
                    "description": "SM User Authorization Code; acquired from successful log in.",
                    "default": ""
                },
                {
                    "name": "rating",
                    "type": "STRING",
                    "description": "Rating to be placed in the database for the comment; either up or down",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://songmeanings.p.rapidapi.com/\"\nquerystring = {\"comment_id\": \"\", \"sm_uid\": \"\", \"sm_authcode\": \"\", \"rating\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"songmeanings.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://songmeanings.p.rapidapi.com/\"\nquerystring = {\"comment_id\": \"\", \"sm_uid\": \"\", \"sm_authcode\": \"\", \"rating\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"songmeanings.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "users.create.put",
            "url": "https://songmeanings.p.rapidapi.com/",
            "description": "Creates a new user account.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "Unique username, no symbols or special characters.",
                    "default": ""
                },
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "Password (not required when fb_access is specified).",
                    "default": ""
                },
                {
                    "name": "fb_access",
                    "type": "STRING",
                    "description": "Facebook access token when creating account via Facebook login.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "Unique and valid email address; user will be sent an activation link (not required when fb_access is specified).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://songmeanings.p.rapidapi.com/\"\nquerystring = {\"username\": \"\", \"email\": \"\", \"password\": \"\", \"fb_access\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"songmeanings.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://songmeanings.p.rapidapi.com/\"\nquerystring = {\"username\": \"\", \"email\": \"\", \"password\": \"\", \"fb_access\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"songmeanings.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "users.favorites.put",
            "url": "https://songmeanings.p.rapidapi.com/",
            "description": "Allows for an artist to be followed or a lyric to be favorited by a logged in user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "sm_uid",
                    "type": "STRING",
                    "description": "SM User ID; acquired from successful log in.",
                    "default": ""
                },
                {
                    "name": "sm_authcode",
                    "type": "STRING",
                    "description": "SM User Authorization Code; acquired from successful log in.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sm_lid",
                    "type": "STRING",
                    "description": "When type is set to lyrics, SongMeanings Lyric ID must be specified.",
                    "default": ""
                },
                {
                    "name": "sm_aid",
                    "type": "STRING",
                    "description": "When type is set to artists, SongMeanings Artist ID must be specified.",
                    "default": ""
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "Type of favorites to retrieve (artists, lyrics)",
                    "default": "lyrics"
                }
            ],
            "code": "import requests\n\nurl = \"https://songmeanings.p.rapidapi.com/\"\nquerystring = {\"sm_uid\": \"\", \"sm_authcode\": \"\", \"sm_lid\": \"\", \"sm_aid\": \"\", \"type\": \"lyrics\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"songmeanings.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://songmeanings.p.rapidapi.com/\"\nquerystring = {\"sm_uid\": \"\", \"sm_authcode\": \"\", \"sm_lid\": \"\", \"sm_aid\": \"\", \"type\": \"lyrics\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"songmeanings.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        }
    ],
    "standardized_name": "songmeanings"
}