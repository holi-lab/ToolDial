{
    "tool_name": "Easter Quick Quiz",
    "tool_description": "Easter is almost here, and it brings with it one of our most favourite times of the year.  Challenge yourself with Easter-related questions in this simple quiz. \n\nHappy Easter.",
    "title": "Easter Quick Quiz",
    "pricing": "FREEMIUM",
    "score": null,
    "home_url": "https://rapidapi.com/denisworkacc/api/easter-quick-quiz/",
    "host": "easter-quick-quiz.p.rapidapi.com",
    "api_list": [
        {
            "name": "Answer Question",
            "url": "https://easter-quick-quiz.p.rapidapi.com/EasterQuickQuiz",
            "description": "Post your answer to this endpoint using the following format:\n{\n    \"questionId\":1,\n    \"answerId\":1\n}",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "code",
                    "type": "STRING",
                    "description": "",
                    "default": "XaQbqQLneDPhf1q6xsCfEyfFCXa7QSLzNYvVhjjbFIETYQbhgAzqRw=="
                }
            ],
            "code": "import requests\n\nurl = \"https://easter-quick-quiz.p.rapidapi.com/EasterQuickQuiz\"\nquerystring = {\"code\": code}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"easter-quick-quiz.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Get Questions",
            "url": "https://easter-quick-quiz.p.rapidapi.com/EasterQuickQuiz",
            "description": "Get all quiz questions and answer them one by one by POSTing them to the other endpoint",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "code",
                    "type": "STRING",
                    "description": "",
                    "default": "XaQbqQLneDPhf1q6xsCfEyfFCXa7QSLzNYvVhjjbFIETYQbhgAzqRw=="
                }
            ],
            "code": "import requests\n\nurl = \"https://easter-quick-quiz.p.rapidapi.com/EasterQuickQuiz\"\nquerystring = {\"code\": code}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"easter-quick-quiz.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Answer Question",
            "url": "https://easter-quick-quiz.p.rapidapi.com/EasterQuickQuiz",
            "description": "Post your answer to this endpoint using the following format:\n{\n    \"questionId\":1,\n    \"answerId\":1\n}",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "code",
                    "type": "STRING",
                    "description": "",
                    "default": "XaQbqQLneDPhf1q6xsCfEyfFCXa7QSLzNYvVhjjbFIETYQbhgAzqRw=="
                }
            ],
            "code": "import requests\n\nurl = \"https://easter-quick-quiz.p.rapidapi.com/EasterQuickQuiz\"\nquerystring = {\"code\": \"XaQbqQLneDPhf1q6xsCfEyfFCXa7QSLzNYvVhjjbFIETYQbhgAzqRw==\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"easter-quick-quiz.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://easter-quick-quiz.p.rapidapi.com/EasterQuickQuiz\"\nquerystring = {\"code\": \"XaQbqQLneDPhf1q6xsCfEyfFCXa7QSLzNYvVhjjbFIETYQbhgAzqRw==\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"easter-quick-quiz.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}