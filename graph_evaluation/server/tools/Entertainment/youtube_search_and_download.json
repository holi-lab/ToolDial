{
    "tool_name":"Youtube Search and Download",
    "tool_description":"Get info about channel, playlist, video, get trendings or search everything you want in YouTube",
    "title":"Youtube Search and Download",
    "pricing":"FREEMIUM",
    "score":{
        "avgServiceLevel":100,
        "avgLatency":473,
        "avgSuccessRate":100,
        "popularityScore":9.9,
        "__typename":"Score"
    },
    "home_url":"https://rapidapi.com/h0p3rwe/api/youtube-search-and-download/",
    "host":"youtube-search-and-download.p.rapidapi.com",
    "api_list":[
        {
            "name":"About channel",
            "url":"https://youtube-search-and-download.p.rapidapi.com/channel/about",
            "description":"Return more info about channel",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"id",
                    "type":"STRING",
                    "description":"Channel id",
                    "default":"UCE_M8A5yxnLfW0KghEeajjw"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://youtube-search-and-download.p.rapidapi.com/channel/about\"\nquerystring = {\"id\": id}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"youtube-search-and-download.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "key1":"value",
                "key2":"value"
            },
            "headers":{},
            "schema":{}
        },
        {
            "name":"Channel",
            "url":"https://youtube-search-and-download.p.rapidapi.com/channel",
            "description":"Channel videos",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[
                {
                    "name":"next",
                    "type":"STRING",
                    "description":"Pagination(continuation) parameter to get next channel video, no need any other parameters if 'next' present.\nCan be obtained from inside channel request result.",
                    "default":"4qmFsgKFARIYVUNpVEdLQTlXMEcwVEw4SG03VWZfdTlBGjpFZ1oyYVdSbGIzTVlBeUFBTUFFNEFlb0RGa05uUVZORFoycHdNazVFTkRWT2VVcHNhMmR2VFdjJTNEmgIsYnJvd3NlLWZlZWRVQ2lUR0tBOVcwRzBUTDhIbTdVZl91OUF2aWRlb3MxMDI%3D"
                },
                {
                    "name":"filter",
                    "type":"STRING",
                    "description":"Filter for live streams.  Available  options:\nl - live now;\np - past live streams;",
                    "default":""
                },
                {
                    "name":"id",
                    "type":"STRING",
                    "description":"Channel id.",
                    "default":"UCiTGKA9W0G0TL8Hm7Uf_u9A"
                },
                {
                    "name":"sort",
                    "type":"STRING",
                    "description":"Sort parameter. Available  options:\nn - newest;\no - oldest;\np - popular",
                    "default":"n"
                }
            ],
            "code":"import requests\n\nurl = \"https://youtube-search-and-download.p.rapidapi.com/channel\"\nquerystring = {\"next\": next, \"id\": id, \"sort\": sort}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"youtube-search-and-download.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "key1":"value",
                "key2":"value"
            },
            "headers":{},
            "schema":{}
        },
        {
            "name":"Video related",
            "url":"https://youtube-search-and-download.p.rapidapi.com/video/related",
            "description":"Get related videos",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"id",
                    "type":"STRING",
                    "description":"Video id",
                    "default":"YQHsXMglC9A"
                }
            ],
            "optional_parameters":[
                {
                    "name":"next",
                    "type":"STRING",
                    "description":"Pagination(continuation) parameter to get more related videos, no need any other parameters if 'next' present.\nCan be obtained from first response.",
                    "default":"CBQSDRILWVFIc1hNZ2xDOUEYACreAQjQr43tubfzi64BCNi24eOapu-n7AEIgejpz9fcuPajAQjwqMe8v7SEuJ0BCI3CwqDWu4nahAEItNrrwNnAzuQ1CK6-ooCH-Jj5JAik8O-ahq3L1sYBCMb965f10YS4UwiNkaXwtL_gzi4I1vOMu5f7r4HeAQjEuYHvqNfimgwIzvHK75mt1Z27AQjw_7n5yaLZ3_UBCJOq5eCOo-XS_QEIocGSnpeajIsXCN2F2tj65L_4zwEI4KbhwtjP98duCI_C_IbhttbzTAi2gO-y3KbjuZgBCNbN7-m31YCKVmoPd2F0Y2gtbmV4dC1mZWVk"
                },
                {
                    "name":"hl",
                    "type":"STRING",
                    "description":"Locale/language for request",
                    "default":"en"
                },
                {
                    "name":"gl",
                    "type":"STRING",
                    "description":"Country code  like US(default), UK, BE, etc...",
                    "default":"US"
                }
            ],
            "code":"import requests\n\nurl = \"https://youtube-search-and-download.p.rapidapi.com/video/related\"\nquerystring = {\"id\": id, \"next\": next, \"hl\": hl, \"gl\": gl}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"youtube-search-and-download.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "key1":"value",
                "key2":"value"
            },
            "headers":{},
            "schema":{}
        },
        {
            "name":"Video comments",
            "url":"https://youtube-search-and-download.p.rapidapi.com/video/comments",
            "description":"Get video comments list.\nIf you need sorting then use \"sortTopNext\" or \"sortNewestNext\"  fields from first response and pass it to \"next\" parameter.",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[
                {
                    "name":"next",
                    "type":"STRING",
                    "description":"Pagination(continuation) parameter to get more comments , no need any other parameters if 'next' present. Could be used for sorting, just pass \\\"sortNewestNext\\\" or \\\"sortTopNext\\\" field values for newest or top sorting.\nCan be obtained from response with \\\"id\\\" parameter in request",
                    "default":"Eg0SC1lRSHNYTWdsQzlBGAYyJSIRIgtZUUhzWE1nbEM5QTAAeAJCEGNvbW1lbnRzLXNlY3Rpb24%3D"
                },
                {
                    "name":"id",
                    "type":"STRING",
                    "description":"Video id to get first part of comments.\n",
                    "default":"YQHsXMglC9A"
                }
            ],
            "code":"import requests\n\nurl = \"https://youtube-search-and-download.p.rapidapi.com/video/comments\"\nquerystring = {\"next\": next, \"id\": id}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"youtube-search-and-download.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "key1":"value",
                "key2":"value"
            },
            "headers":{},
            "schema":{}
        },
        {
            "name":"Trending",
            "url":"https://youtube-search-and-download.p.rapidapi.com/trending",
            "description":"Get list of trending videos",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[
                {
                    "name":"hl",
                    "type":"STRING",
                    "description":"Locale/language for request",
                    "default":"en"
                },
                {
                    "name":"gl",
                    "type":"STRING",
                    "description":"Country from you want get trendings like US(default), UK, BE, etc...",
                    "default":"US"
                },
                {
                    "name":"type",
                    "type":"STRING",
                    "description":"Type of trending videos:\nn - now (default)\nmu - music\nmo - movies\ng - gaming",
                    "default":"mu"
                }
            ],
            "code":"import requests\n\nurl = \"https://youtube-search-and-download.p.rapidapi.com/trending\"\nquerystring = {\"hl\": hl, \"gl\": gl, \"type\": type}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"youtube-search-and-download.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "key1":"value",
                "key2":"value"
            },
            "headers":{},
            "schema":{}
        },
        {
            "name":"Video info",
            "url":"https://youtube-search-and-download.p.rapidapi.com/video",
            "description":"Get video info by id",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"id",
                    "type":"STRING",
                    "description":"Video id from YouTube",
                    "default":"dQw4w9WgXcQ"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://youtube-search-and-download.p.rapidapi.com/video\"\nquerystring = {\"id\": id}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"youtube-search-and-download.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "key1":"value",
                "key2":"value"
            },
            "headers":{},
            "schema":{}
        },
        {
            "name":"Playlist",
            "url":"https://youtube-search-and-download.p.rapidapi.com/playlist",
            "description":"Playlist videos",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[
                {
                    "name":"next",
                    "type":"STRING",
                    "description":"Pagination(continuation) parameter to get more playlist items, no need any other parameters if 'next' present.\nCan be obtained from inside playlist request result.",
                    "default":"4qmFsgJhEiRWTFBMV3dBeXBBY0ZSZ0tBSUlGcUJyOW95LVpZWm5peGFfRmoaFENBRjZCbEJVT2tOSFZRJTNEJTNEmgIiUExXd0F5cEFjRlJnS0FJSUZxQnI5b3ktWllabml4YV9Gag%3D%3D"
                },
                {
                    "name":"id",
                    "type":"STRING",
                    "description":"Playlist id",
                    "default":"PL2UMfhpwklNNI9ALzCFI-cObgnO4nQ2fu"
                }
            ],
            "code":"import requests\n\nurl = \"https://youtube-search-and-download.p.rapidapi.com/playlist\"\nquerystring = {\"next\": next, \"id\": id}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"youtube-search-and-download.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "key1":"value",
                "key2":"value"
            },
            "headers":{},
            "schema":{}
        },
        {
            "name":"Search videos/channels/playlists",
            "url":"https://youtube-search-and-download.p.rapidapi.com/search",
            "description":"Search any youtube content with all available filters",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[
                {
                    "name":"upload_date",
                    "type":"STRING",
                    "description":"Upload date filter.\nAvailable options:\nl - last hour;\nt - today;\nw - weak ago;\nm - month ago;\ny - year ago;",
                    "default":"t"
                },
                {
                    "name":"sort",
                    "type":"STRING",
                    "description":"Result sort. Available options:\nr - relevance;\nra - rating;\nu - upload date;\nv - view count;",
                    "default":"v"
                },
                {
                    "name":"features",
                    "type":"STRING",
                    "description":"Video features.  Available options(could be joined by ';'):\nh - hdr;\nhd - hd;\ns - subtitles;\nc - cc;\n3d - 3d;\n3 - 360;\nli - live;\nlo - location;\n4 - 4k;\n",
                    "default":"li;hd"
                },
                {
                    "name":"next",
                    "type":"STRING",
                    "description":"Pagination(continuation) parameter to get next result for same search query, no need any other parameters if 'next' present.\nCan be obtained from inside search result.",
                    "default":"EogDEgVoZWxsbxr-AlNCU0NBUXRaVVVoeldFMW5iRU01UVlJQkMyMUlUMDVPWTFwaWQwUlpnZ0VMWW1VeE1rSkROWEJSVEVXQ0FRdFZNMEZUYWpGTU5sOXpXWUlCQzJaaGVrMVRRMXBuTFcxM2dnRUxaV3hrWldGSlFYWmZkMFdDQVExU1JGbFJTSE5ZVFdkc1F6bEJnZ0VMT0hwRVUybHJRMmc1Tm1PQ0FRc3pOMFU1VjNORWJVUmxaNElCQzJGaFNXcHpPRXN6YjFsdmdnRUxaMmRvUkZKS1ZuaEdlRldDQVF0clN6UXlURnB4VHpCM1FZSUJDME42VHpOaFNXVXdVbkJ6Z2dFTFNVNHdUMk5WZGtkaU5qQ0NBUXRSYTJWbGFGRTRSRjlXVFlJQkMyWk9NVU41Y2pCYVN6bE5nZ0VMZEZac1kwdHdNMkpYU0RpQ0FRdGZSQzFGT1Rsa01XSk1TWUlCQzJoQlUwNVRSSFZOY2pGUmdnRUxkREEzTVZkdE5EVnhWMDAlM0QYgeDoGCILc2VhcmNoLWZlZWQ%3D"
                },
                {
                    "name":"hl",
                    "type":"STRING",
                    "description":"Search language",
                    "default":"en"
                },
                {
                    "name":"duration",
                    "type":"STRING",
                    "description":"Video duration. Available options:\ns - short;\nl - long;",
                    "default":"s"
                },
                {
                    "name":"gl",
                    "type":"STRING",
                    "description":"Search location",
                    "default":"US"
                },
                {
                    "name":"type",
                    "type":"STRING",
                    "description":"Search type. Available options:\nv - video;\nc - channel;\np - playlist;",
                    "default":"v"
                },
                {
                    "name":"query",
                    "type":"STRING",
                    "description":"Search query you want to search",
                    "default":"rick roll"
                }
            ],
            "code":"import requests\n\nurl = \"https://youtube-search-and-download.p.rapidapi.com/search\"\nquerystring = {\"upload_date\": upload_date, \"sort\": sort, \"features\": features, \"next\": next, \"hl\": hl, \"duration\": duration, \"gl\": gl, \"type\": type, \"query\": query}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"youtube-search-and-download.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "key1":"value",
                "key2":"value"
            },
            "headers":{},
            "schema":{}
        }
    ]
}