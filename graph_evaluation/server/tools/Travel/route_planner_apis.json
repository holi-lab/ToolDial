{
    "product_id": "592be145e4b0618f9855bd1f",
    "tool_description": "A set of apis to solve common vehicle routing problems including: simple vrp, capacity constrained vrp (cvrp), multiple pickup-delivery cvrp, and others.",
    "home_url": "https://rapidapi.com/thucnguyen/api/route-planner-apis/",
    "name": "Route Planner Apis",
    "title": "Route Planner Apis",
    "pricing": "FREEMIUM",
    "tool_name": "Route Planner Apis",
    "score": null,
    "host": "routeplanner.p.rapidapi.com",
    "api_list": [
        {
            "name": "Vehicle Routing Problem Solver",
            "url": "https://routeplanner.p.rapidapi.com/vrp",
            "description": "Given a fleet of vehicles, and a list of points with expected route type, find shortest routes within number of available vehicles.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://routeplanner.p.rapidapi.com/vrp\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"routeplanner.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://routeplanner.p.rapidapi.com/vrp\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"routeplanner.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Capacity Constrained VRP Solver",
            "url": "https://routeplanner.p.rapidapi.com/cvrp",
            "description": "VRP Solver with Vehicle Capacity Constraint",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://routeplanner.p.rapidapi.com/cvrp\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"routeplanner.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://routeplanner.p.rapidapi.com/cvrp\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"routeplanner.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Multiple pickup-delivery vrp solver",
            "url": "https://routeplanner.p.rapidapi.com/pdvrp",
            "description": "A more advanced of cvrp solver, with multiple pickup-delivery constraints (PDVRP). In this solver, the first point is a fake/dummy point.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://routeplanner.p.rapidapi.com/pdvrp\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"routeplanner.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://routeplanner.p.rapidapi.com/pdvrp\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"routeplanner.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Hub Selective PDVRP Solver",
            "url": "https://routeplanner.p.rapidapi.com/hub_pdvrp",
            "description": "All roundtrip PDVRP Solver, all deliveries are optionally selective to keep the route shortest. In this solver, the first point is the hub point that drivers begin and end their route.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://routeplanner.p.rapidapi.com/hub_pdvrp\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"routeplanner.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://routeplanner.p.rapidapi.com/hub_pdvrp\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"routeplanner.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}