{
    "product_id": "api_12f75a92-f911-4829-b9ee-ea6093966b39",
    "tool_description": "Gives a similarity score between 0 and 1 for two audio files or audio URLs",
    "home_url": "https://rapidapi.com/mathaddict729/api/audiosimscore2/",
    "name": "AudioSimScore",
    "title": "AudioSimScore",
    "pricing": "FREEMIUM",
    "tool_name": "AudioSimScore",
    "score": null,
    "host": "audiosimscore2.p.rapidapi.com",
    "api_list": [
        {
            "name": "SimScoreAudioFiles",
            "url": "https://audiosimscore2.p.rapidapi.com/simscoreaudiofiles/",
            "description": "Compare a pair of audio files (max file size = 20 MB) by uploading:\n\n- **`guru_file`**: Master's audio file to compare with\n- **`student_file`**: Student's audio file\n\nAnd get a similarity score between 0 and 1, where 0 indicates extreme dissimilarity and 1 indicates extreme similarity.\n\n**Use case:**\nA typical use-case for this API is learning to play a musical instrument such as the violin or the sax or even singing. A teacher or guru first plays a lesson and the student practices the lesson based on the master\u2019s rendition. The student continues to practice the lesson until it closely matches the guru\u2019s version. Many iterations of the lesson are required by the student but there\u2019s no way of gauging progress in the absence of the teacher.\nIn such a situation, the guru\u2019s music piece and the student\u2019s music piece can be recorded as audio files using any recording device such as a mobile phone or a computer. Then, using the simscores API a similarity score between the files can be obtained.\nAs the score gets higher (closer to 1), it indicates that the student is getting better at playing the music piece as compared to the master\u2019s music piece.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "student_file",
                    "type": "BINARY",
                    "description": "Second (student's) audio file",
                    "default": ""
                },
                {
                    "name": "guru_file",
                    "type": "BINARY",
                    "description": "First (teacher's) audio file",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://audiosimscore2.p.rapidapi.com/simscoreaudiofiles/\"\nquerystring = {\"student_file\": \"\", \"guru_file\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"audiosimscore2.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://audiosimscore2.p.rapidapi.com/simscoreaudiofiles/\"\nquerystring = {\"student_file\": \"\", \"guru_file\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"audiosimscore2.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "SimScoreAudioURLs",
            "url": "https://audiosimscore2.p.rapidapi.com/simscoreaudiourls/",
            "description": "Compare a pair of audio file URLs (max file size = 20 MB) by specifying:\n\n- **`guru_file_url`**: Download URL for Master's audio file as reference\n- **`student_file_url`**: Download URL for Student's audio file to compare against\n\nAnd get a similarity score between 0 and 1, where 0 indicates extreme dissimilarity and 1 indicates extreme similarity.\n\n**Use case:**\nA typical use-case for this API is learning to play a musical instrument such as the violin or the sax or even singing. A teacher or guru first plays a lesson and the student practices the lesson based on the master\u2019s rendition. The student continues to practice the lesson until it closely matches the guru\u2019s version. Many iterations of the lesson are required by the student. Yet, there\u2019s no way of gauging progress in the absence of the teacher.\nIn such a situation, the guru\u2019s music piece and the student\u2019s music piece can be recorded as audio files using any recording device such as a mobile phone or a computer. Then, using the simscores API and uploading the files, a similarity score between the files can be fetched.\nAs the score gets higher (closer to 1), it indicates that the student is getting better at playing the music piece.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "guru_file_url",
                    "type": "STRING",
                    "description": "First (teacher's) audio file URL",
                    "default": "https://drive.google.com/uc?export=download&id=1oh0mTkc2udplk6XlphH4varObA_FKsSR"
                },
                {
                    "name": "student_file_url",
                    "type": "STRING",
                    "description": "Second (student's) audio file URL",
                    "default": "https://drive.google.com/uc?export=download&id=1--XGk4BJc5tGfEwLT6jRzvHlALS7TmTW"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://audiosimscore2.p.rapidapi.com/simscoreaudiourls/\"\nquerystring = {\"guru_file_url\": \"https://drive.google.com/uc?export=download&id=1oh0mTkc2udplk6XlphH4varObA_FKsSR\", \"student_file_url\": \"https://drive.google.com/uc?export=download&id=1--XGk4BJc5tGfEwLT6jRzvHlALS7TmTW\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"audiosimscore2.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://audiosimscore2.p.rapidapi.com/simscoreaudiourls/\"\nquerystring = {\"guru_file_url\": \"https://drive.google.com/uc?export=download&id=1oh0mTkc2udplk6XlphH4varObA_FKsSR\", \"student_file_url\": \"https://drive.google.com/uc?export=download&id=1--XGk4BJc5tGfEwLT6jRzvHlALS7TmTW\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"audiosimscore2.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "title": "SimScoreAudioURLsItem",
                "required": [
                    "guru_file_url",
                    "student_file_url",
                    "score"
                ],
                "type": "object",
                "properties": {
                    "guru_file_url": {
                        "title": "Guru File Url",
                        "type": "string"
                    },
                    "student_file_url": {
                        "title": "Student File Url",
                        "type": "string"
                    },
                    "score": {
                        "title": "Score",
                        "type": "number"
                    }
                }
            }
        }
    ]
}