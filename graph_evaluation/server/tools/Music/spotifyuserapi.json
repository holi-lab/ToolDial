{
    "product_id": "9",
    "tool_description": "Get Spotify user-specific data such as playlists and saved tracks.",
    "home_url": "https://rapidapi.com/serg.osipchuk/api/SpotifyUserAPI/",
    "name": "SpotifyUserAPI",
    "title": "SpotifyUserAPI",
    "pricing": "FREE",
    "tool_name": "SpotifyUserAPI",
    "score": {
        "avgServiceLevel": 0,
        "avgLatency": 127256,
        "avgSuccessRate": 0,
        "popularityScore": 4.5,
        "__typename": "Score"
    },
    "host": "SpotifyUserAPIserg-osipchukV1.p.rapidapi.com",
    "api_list": [
        {
            "name": "checkFollowArtist",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/checkFollowArtist",
            "description": "Check to see if the current user is following one or more artists.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                },
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "Artist Spotify ID.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/checkFollowArtist\"\nquerystring = {\"access_token\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/checkFollowArtist\"\nquerystring = {\"access_token\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "checkFollowUser",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/checkFollowUser",
            "description": "Check to see if the current user is following one or more Spotify users.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "User Spotify ID.",
                    "default": ""
                },
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/checkFollowUser\"\nquerystring = {\"id\": \"\", \"access_token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/checkFollowUser\"\nquerystring = {\"id\": \"\", \"access_token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "checkSavedAlbum",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/checkSavedAlbum",
            "description": "Check if one or more albums is already saved in the current Spotify user\u2019s \u201cYour Music\u201d library.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "A comma-separated list of the Spotify IDs.",
                    "default": ""
                },
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/checkSavedAlbum\"\nquerystring = {\"id\": \"\", \"access_token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/checkSavedAlbum\"\nquerystring = {\"id\": \"\", \"access_token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "checkSavedTrack",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/checkSavedTrack",
            "description": "Check if one or more tracks is already saved in the current Spotify user\u2019s \u201cYour Music\u201d library.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "A comma-separated list of the Spotify IDs.",
                    "default": ""
                },
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/checkSavedTrack\"\nquerystring = {\"id\": \"\", \"access_token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/checkSavedTrack\"\nquerystring = {\"id\": \"\", \"access_token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "followArtist",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/followArtist",
            "description": "Add the current user as a follower of one or more artists.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                },
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "Artist Spotify ID.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/followArtist\"\nquerystring = {\"access_token\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/followArtist\"\nquerystring = {\"access_token\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "followPlaylist",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/followPlaylist",
            "description": "Add the current user as a follower of a playlist.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "owner_id",
                    "type": "STRING",
                    "description": "The Spotify user ID of the person who owns the playlist.",
                    "default": ""
                },
                {
                    "name": "playlist_id",
                    "type": "STRING",
                    "description": "The Spotify ID of the playlist.",
                    "default": ""
                },
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "public",
                    "type": "STRING",
                    "description": "If true the playlist will be included in user's public playlists, if false it will remain private.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/followPlaylist\"\nquerystring = {\"public\": \"\", \"owner_id\": \"\", \"playlist_id\": \"\", \"access_token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/followPlaylist\"\nquerystring = {\"public\": \"\", \"owner_id\": \"\", \"playlist_id\": \"\", \"access_token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "followUser",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/followUser",
            "description": "Add the current user as a follower of one or more Spotify users.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "User Spotify ID.",
                    "default": ""
                },
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/followUser\"\nquerystring = {\"id\": \"\", \"access_token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/followUser\"\nquerystring = {\"id\": \"\", \"access_token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAccessToken",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getAccessToken",
            "description": "Allows to get an access token.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "client_key",
                    "type": "CREDENTIALS",
                    "description": "The Client Secret obtained from Spotify.",
                    "default": ""
                },
                {
                    "name": "redirect_uri",
                    "type": "STRING",
                    "description": "The value of redirect_uri here must exactly match one of the values you entered when you registered your application, including upper/lowercase, terminating slashes, etc",
                    "default": ""
                },
                {
                    "name": "client_id",
                    "type": "CREDENTIALS",
                    "description": "The Client ID obtained from Spotify.",
                    "default": ""
                },
                {
                    "name": "code",
                    "type": "STRING",
                    "description": "An authorization code that can be exchanged for an access token.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getAccessToken\"\nquerystring = {\"client_key\": \"\", \"redirect_uri\": \"\", \"client_id\": \"\", \"code\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getAccessToken\"\nquerystring = {\"client_key\": \"\", \"redirect_uri\": \"\", \"client_id\": \"\", \"code\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCategories",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getCategories",
            "description": "Get a list of categories used to tag items in Spotify.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "A country: an ISO 3166-1 alpha-2 country code. Provide this parameter if you want the list of returned items to be relevant to a particular country.",
                    "default": ""
                },
                {
                    "name": "locale",
                    "type": "STRING",
                    "description": "The desired language, consisting of a lowercase ISO 639 language code and an uppercase ISO 3166-1 alpha-2 country code, joined by an underscore.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getCategories\"\nquerystring = {\"country\": \"\", \"locale\": \"\", \"access_token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getCategories\"\nquerystring = {\"country\": \"\", \"locale\": \"\", \"access_token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCategory",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getCategory",
            "description": "Get a single category used to tag items in Spotify.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The Spotify category ID for the category.",
                    "default": ""
                },
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "A country: an ISO 3166-1 alpha-2 country code. Provide this parameter if you want the list of returned items to be relevant to a particular country.",
                    "default": ""
                },
                {
                    "name": "locale",
                    "type": "STRING",
                    "description": "The desired language, consisting of a lowercase ISO 639 language code and an uppercase ISO 3166-1 alpha-2 country code, joined by an underscore.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getCategory\"\nquerystring = {\"id\": \"\", \"country\": \"\", \"locale\": \"\", \"access_token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getCategory\"\nquerystring = {\"id\": \"\", \"country\": \"\", \"locale\": \"\", \"access_token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCategoryPlaylists",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getCategoryPlaylists",
            "description": "Get a list of Spotify playlists tagged with a particular category.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                },
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The Spotify category ID for the category.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "A country: an ISO 3166-1 alpha-2 country code. Provide this parameter if you want the list of returned items to be relevant to a particular country.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getCategoryPlaylists\"\nquerystring = {\"access_token\": \"\", \"country\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getCategoryPlaylists\"\nquerystring = {\"access_token\": \"\", \"country\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCurrentUserProfile",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getCurrentUserProfile",
            "description": "Get detailed profile information about the current user (including the current user\u2019s username).",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getCurrentUserProfile\"\nquerystring = {\"access_token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getCurrentUserProfile\"\nquerystring = {\"access_token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getFeaturedPlaylists",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getFeaturedPlaylists",
            "description": "Get a list of Spotify featured playlists.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "timestamp",
                    "type": "DATEPICKER",
                    "description": "A timestamp in ISO 8601 format: yyyy-MM-ddTHH:mm:ss. Use this parameter to specify the user's local time to get results tailored for that specific date and time in the day.",
                    "default": ""
                },
                {
                    "name": "locale",
                    "type": "STRING",
                    "description": "The desired language, consisting of a lowercase ISO 639 language code and an uppercase ISO 3166-1 alpha-2 country code, joined by an underscore.",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "A country: an ISO 3166-1 alpha-2 country code. Provide this parameter if you want the list of returned items to be relevant to a particular country.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getFeaturedPlaylists\"\nquerystring = {\"timestamp\": \"\", \"locale\": \"\", \"access_token\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getFeaturedPlaylists\"\nquerystring = {\"timestamp\": \"\", \"locale\": \"\", \"access_token\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getFollowedArtists",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getFollowedArtists",
            "description": "Get the current user\u2019s followed artists.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getFollowedArtists\"\nquerystring = {\"access_token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getFollowedArtists\"\nquerystring = {\"access_token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getNewReleases",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getNewReleases",
            "description": "Get a list of new album releases featured in Spotify.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "A country: an ISO 3166-1 alpha-2 country code. Provide this parameter if you want the list of returned items to be relevant to a particular country.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getNewReleases\"\nquerystring = {\"access_token\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getNewReleases\"\nquerystring = {\"access_token\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getRecommendations",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getRecommendations",
            "description": "Create a playlist-style listening experience based on seed artists, tracks and genres.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "seed_genres",
                    "type": "STRING",
                    "description": "A comma separated list of any genres in the set of available genre seeds.",
                    "default": ""
                },
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                },
                {
                    "name": "seed_artists",
                    "type": "STRING",
                    "description": "A comma separated list of Spotify IDs for seed artists.",
                    "default": ""
                },
                {
                    "name": "seed_tracks",
                    "type": "STRING",
                    "description": "A comma separated list of Spotify IDs for a seed track.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "energy_max",
                    "type": "STRING",
                    "description": "Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy.",
                    "default": ""
                },
                {
                    "name": "instrumentalness_target",
                    "type": "STRING",
                    "description": "Predicts whether a track contains no vocals. 'Ooh' and 'aah' sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly 'vocal'. The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0.",
                    "default": ""
                },
                {
                    "name": "liveness_min",
                    "type": "STRING",
                    "description": "Detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live.",
                    "default": ""
                },
                {
                    "name": "loudness_max",
                    "type": "STRING",
                    "description": "The overall loudness of a track in decibels (dB). Loudness values are averaged across the entire track and are useful for comparing relative loudness of tracks. Loudness is the quality of a sound that is the primary psychological correlate of physical strength (amplitude). Values typical range between -60 and 0 db.",
                    "default": ""
                },
                {
                    "name": "duration_ms_target",
                    "type": "STRING",
                    "description": "The duration of the track in milliseconds.",
                    "default": ""
                },
                {
                    "name": "mode_target",
                    "type": "STRING",
                    "description": "Mode indicates the modality (major or minor) of a track, the type of scale from which its melodic content is derived. Major is represented by 1 and minor is 0.",
                    "default": ""
                },
                {
                    "name": "speechiness_min",
                    "type": "STRING",
                    "description": "Speechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value.",
                    "default": ""
                },
                {
                    "name": "instrumentalness_min",
                    "type": "STRING",
                    "description": "Predicts whether a track contains no vocals. 'Ooh' and 'aah' sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly 'vocal'. The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0.",
                    "default": ""
                },
                {
                    "name": "liveness_target",
                    "type": "STRING",
                    "description": "Detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live.",
                    "default": ""
                },
                {
                    "name": "popularity_max",
                    "type": "STRING",
                    "description": "The popularity of the track. The value will be between 0 and 100, with 100 being the most popular.",
                    "default": ""
                },
                {
                    "name": "key_max",
                    "type": "STRING",
                    "description": "The key the track is in. Integers map to pitches using standard Pitch Class notation.",
                    "default": ""
                },
                {
                    "name": "mode_min",
                    "type": "STRING",
                    "description": "Mode indicates the modality (major or minor) of a track, the type of scale from which its melodic content is derived. Major is represented by 1 and minor is 0.",
                    "default": ""
                },
                {
                    "name": "acousticness_target",
                    "type": "STRING",
                    "description": "A confidence measure from 0.0 to 1.0 of whether the track is acoustic. 1.0 represents high confidence the track is acoustic.",
                    "default": ""
                },
                {
                    "name": "acousticness_min",
                    "type": "STRING",
                    "description": "A confidence measure from 0.0 to 1.0 of whether the track is acoustic. 1.0 represents high confidence the track is acoustic.",
                    "default": ""
                },
                {
                    "name": "tempo_max",
                    "type": "STRING",
                    "description": "The overall estimated tempo of a track in beats per minute (BPM).",
                    "default": ""
                },
                {
                    "name": "market",
                    "type": "STRING",
                    "description": "An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.",
                    "default": ""
                },
                {
                    "name": "time_signature_min",
                    "type": "STRING",
                    "description": "An estimated overall time signature of a track. The time signature (meter) is a notational convention to specify how many beats are in each bar (or measure).",
                    "default": ""
                },
                {
                    "name": "duration_ms_min",
                    "type": "STRING",
                    "description": "The duration of the track in milliseconds.",
                    "default": ""
                },
                {
                    "name": "danceability_max",
                    "type": "STRING",
                    "description": "Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable.",
                    "default": ""
                },
                {
                    "name": "speechiness_target",
                    "type": "STRING",
                    "description": "Speechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value.",
                    "default": ""
                },
                {
                    "name": "time_signature_target",
                    "type": "STRING",
                    "description": "An estimated overall time signature of a track. The time signature (meter) is a notational convention to specify how many beats are in each bar (or measure).",
                    "default": ""
                },
                {
                    "name": "valence_max",
                    "type": "STRING",
                    "description": "A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track.",
                    "default": ""
                },
                {
                    "name": "tempo_target",
                    "type": "STRING",
                    "description": "The overall estimated tempo of a track in beats per minute (BPM).",
                    "default": ""
                },
                {
                    "name": "valence_min",
                    "type": "STRING",
                    "description": "A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "The target size of the list of recommended tracks. For seeds with unusually small pools or when highly restrictive filtering is applied, it may be impossible to generate the requested number of recommended tracks. Debugging information for such cases is available in the response. Default: 20. Minimum: 1. Maximum: 100.",
                    "default": ""
                },
                {
                    "name": "energy_target",
                    "type": "STRING",
                    "description": "Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy.",
                    "default": ""
                },
                {
                    "name": "instrumentalness_max",
                    "type": "STRING",
                    "description": "Predicts whether a track contains no vocals. 'Ooh' and 'aah' sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly 'vocal'. The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0.",
                    "default": ""
                },
                {
                    "name": "danceability_target",
                    "type": "STRING",
                    "description": "Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable.",
                    "default": ""
                },
                {
                    "name": "acousticness_max",
                    "type": "STRING",
                    "description": "A confidence measure from 0.0 to 1.0 of whether the track is acoustic. 1.0 represents high confidence the track is acoustic.",
                    "default": ""
                },
                {
                    "name": "tempo_min",
                    "type": "STRING",
                    "description": "The overall estimated tempo of a track in beats per minute (BPM).",
                    "default": ""
                },
                {
                    "name": "key_target",
                    "type": "STRING",
                    "description": "The key the track is in. Integers map to pitches using standard Pitch Class notation.",
                    "default": ""
                },
                {
                    "name": "danceability_min",
                    "type": "STRING",
                    "description": "Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable.",
                    "default": ""
                },
                {
                    "name": "loudness_min",
                    "type": "STRING",
                    "description": "The overall loudness of a track in decibels (dB). Loudness values are averaged across the entire track and are useful for comparing relative loudness of tracks. Loudness is the quality of a sound that is the primary psychological correlate of physical strength (amplitude). Values typical range between -60 and 0 db.",
                    "default": ""
                },
                {
                    "name": "energy_min",
                    "type": "STRING",
                    "description": "Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy.",
                    "default": ""
                },
                {
                    "name": "speechiness_max",
                    "type": "STRING",
                    "description": "Speechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value.",
                    "default": ""
                },
                {
                    "name": "valence_target",
                    "type": "STRING",
                    "description": "A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track.",
                    "default": ""
                },
                {
                    "name": "popularity_target",
                    "type": "STRING",
                    "description": "The popularity of the track. The value will be between 0 and 100, with 100 being the most popular.",
                    "default": ""
                },
                {
                    "name": "popularity_min",
                    "type": "STRING",
                    "description": "The popularity of the track. The value will be between 0 and 100, with 100 being the most popular.",
                    "default": ""
                },
                {
                    "name": "liveness_max",
                    "type": "STRING",
                    "description": "Detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live.",
                    "default": ""
                },
                {
                    "name": "duration_ms_max",
                    "type": "STRING",
                    "description": "The duration of the track in milliseconds.",
                    "default": ""
                },
                {
                    "name": "mode_max",
                    "type": "STRING",
                    "description": "Mode indicates the modality (major or minor) of a track, the type of scale from which its melodic content is derived. Major is represented by 1 and minor is 0.",
                    "default": ""
                },
                {
                    "name": "key_min",
                    "type": "STRING",
                    "description": "The key the track is in. Integers map to pitches using standard Pitch Class notation.",
                    "default": ""
                },
                {
                    "name": "time_signature_max",
                    "type": "STRING",
                    "description": "An estimated overall time signature of a track. The time signature (meter) is a notational convention to specify how many beats are in each bar (or measure).",
                    "default": ""
                },
                {
                    "name": "loudness_target",
                    "type": "STRING",
                    "description": "The overall loudness of a track in decibels (dB). Loudness values are averaged across the entire track and are useful for comparing relative loudness of tracks. Loudness is the quality of a sound that is the primary psychological correlate of physical strength (amplitude). Values typical range between -60 and 0 db.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getRecommendations\"\nquerystring = {\"energy_max\": \"\", \"instrumentalness_target\": \"\", \"liveness_min\": \"\", \"loudness_max\": \"\", \"duration_ms_target\": \"\", \"seed_genres\": \"\", \"mode_target\": \"\", \"speechiness_min\": \"\", \"instrumentalness_min\": \"\", \"liveness_target\": \"\", \"popularity_max\": \"\", \"key_max\": \"\", \"mode_min\": \"\", \"access_token\": \"\", \"acousticness_target\": \"\", \"acousticness_min\": \"\", \"tempo_max\": \"\", \"market\": \"\", \"time_signature_min\": \"\", \"duration_ms_min\": \"\", \"danceability_max\": \"\", \"speechiness_target\": \"\", \"time_signature_target\": \"\", \"valence_max\": \"\", \"tempo_target\": \"\", \"valence_min\": \"\", \"limit\": \"\", \"energy_target\": \"\", \"instrumentalness_max\": \"\", \"danceability_target\": \"\", \"acousticness_max\": \"\", \"tempo_min\": \"\", \"key_target\": \"\", \"danceability_min\": \"\", \"seed_artists\": \"\", \"loudness_min\": \"\", \"energy_min\": \"\", \"speechiness_max\": \"\", \"valence_target\": \"\", \"popularity_target\": \"\", \"popularity_min\": \"\", \"liveness_max\": \"\", \"duration_ms_max\": \"\", \"mode_max\": \"\", \"key_min\": \"\", \"time_signature_max\": \"\", \"seed_tracks\": \"\", \"loudness_target\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getRecommendations\"\nquerystring = {\"energy_max\": \"\", \"instrumentalness_target\": \"\", \"liveness_min\": \"\", \"loudness_max\": \"\", \"duration_ms_target\": \"\", \"seed_genres\": \"\", \"mode_target\": \"\", \"speechiness_min\": \"\", \"instrumentalness_min\": \"\", \"liveness_target\": \"\", \"popularity_max\": \"\", \"key_max\": \"\", \"mode_min\": \"\", \"access_token\": \"\", \"acousticness_target\": \"\", \"acousticness_min\": \"\", \"tempo_max\": \"\", \"market\": \"\", \"time_signature_min\": \"\", \"duration_ms_min\": \"\", \"danceability_max\": \"\", \"speechiness_target\": \"\", \"time_signature_target\": \"\", \"valence_max\": \"\", \"tempo_target\": \"\", \"valence_min\": \"\", \"limit\": \"\", \"energy_target\": \"\", \"instrumentalness_max\": \"\", \"danceability_target\": \"\", \"acousticness_max\": \"\", \"tempo_min\": \"\", \"key_target\": \"\", \"danceability_min\": \"\", \"seed_artists\": \"\", \"loudness_min\": \"\", \"energy_min\": \"\", \"speechiness_max\": \"\", \"valence_target\": \"\", \"popularity_target\": \"\", \"popularity_min\": \"\", \"liveness_max\": \"\", \"duration_ms_max\": \"\", \"mode_max\": \"\", \"key_min\": \"\", \"time_signature_max\": \"\", \"seed_tracks\": \"\", \"loudness_target\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getTrackAudioFeatures",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getTrackAudioFeatures",
            "description": "Get audio feature information for a single track identified by its unique Spotify ID.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                },
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The Spotify ID for the track",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getTrackAudioFeatures\"\nquerystring = {\"access_token\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getTrackAudioFeatures\"\nquerystring = {\"access_token\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserSavedAlbums",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getUserSavedAlbums",
            "description": "Get a list of the albums saved in the current Spotify user\u2019s \u201cYour Music\u201d library.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "market",
                    "type": "STRING",
                    "description": "An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getUserSavedAlbums\"\nquerystring = {\"access_token\": \"\", \"market\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getUserSavedAlbums\"\nquerystring = {\"access_token\": \"\", \"market\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserSavedTracks",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getUserSavedTracks",
            "description": "Get a list of the songs saved in the current Spotify user\u2019s \u201cYour Music\u201d library.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "market",
                    "type": "STRING",
                    "description": "An ISO 3166-1 alpha-2 country code. Provide this parameter if you want to apply Track Relinking.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getUserSavedTracks\"\nquerystring = {\"market\": \"\", \"access_token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getUserSavedTracks\"\nquerystring = {\"market\": \"\", \"access_token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserTopArtists",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getUserTopArtists",
            "description": "Get the current user\u2019s top artists based on calculated affinity.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "time_range",
                    "type": "SELECT",
                    "description": "Over what time frame the affinities are computed. Valid values: long_term (calculated from several years of data and including all new data as it becomes available), medium_term (approximately last 6 months), short_term (approximately last 4 weeks). Default: medium_term.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getUserTopArtists\"\nquerystring = {\"access_token\": \"\", \"time_range\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getUserTopArtists\"\nquerystring = {\"access_token\": \"\", \"time_range\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserTopTracks",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getUserTopTracks",
            "description": "Get the current user\u2019s top tracks based on calculated affinity.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "time_range",
                    "type": "SELECT",
                    "description": "Over what time frame the affinities are computed. Valid values: long_term (calculated from several years of data and including all new data as it becomes available), medium_term (approximately last 6 months), short_term (approximately last 4 weeks). Default: medium_term.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getUserTopTracks\"\nquerystring = {\"time_range\": \"\", \"access_token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/getUserTopTracks\"\nquerystring = {\"time_range\": \"\", \"access_token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "refreshAccessToken",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/refreshAccessToken",
            "description": "Allows to refresh access token.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "refresh_token",
                    "type": "STRING",
                    "description": "The refresh token returned from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "client_id",
                    "type": "CREDENTIALS",
                    "description": "The Client ID obtained from Spotify.",
                    "default": ""
                },
                {
                    "name": "client_key",
                    "type": "CREDENTIALS",
                    "description": "The Client Secret obtained from Spotify.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/refreshAccessToken\"\nquerystring = {\"refresh_token\": \"\", \"client_id\": \"\", \"client_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/refreshAccessToken\"\nquerystring = {\"refresh_token\": \"\", \"client_id\": \"\", \"client_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "removeSavedAlbum",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/removeSavedAlbum",
            "description": "Remove one or more albums from the current user\u2019s \u201cYour Music\u201d library.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                },
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "A comma-separated list of the Spotify IDs.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/removeSavedAlbum\"\nquerystring = {\"access_token\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/removeSavedAlbum\"\nquerystring = {\"access_token\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "removeSavedTracks",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/removeSavedTracks",
            "description": "Remove one or more tracks from the current user\u2019s \u201cYour Music\u201d library.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                },
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "A comma-separated list of the Spotify IDs.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/removeSavedTracks\"\nquerystring = {\"access_token\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/removeSavedTracks\"\nquerystring = {\"access_token\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "saveAlbumForUser",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/saveAlbumForUser",
            "description": "Save one or more albums to the current user\u2019s \u201cYour Music\u201d library.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                },
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "A comma-separated list of the Spotify IDs.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/saveAlbumForUser\"\nquerystring = {\"access_token\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/saveAlbumForUser\"\nquerystring = {\"access_token\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "saveTrack",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/saveTrack",
            "description": "Save one or more tracks to the current user\u2019s \u201cYour Music\u201d library.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                },
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "A comma-separated list of the Spotify IDs.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/saveTrack\"\nquerystring = {\"access_token\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/saveTrack\"\nquerystring = {\"access_token\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "unfollowArtist",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/unfollowArtist",
            "description": "Remove the current user as a follower of one or more artists.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                },
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "Artist Spotify ID.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/unfollowArtist\"\nquerystring = {\"access_token\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/unfollowArtist\"\nquerystring = {\"access_token\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "unfollowPlaylist",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/unfollowPlaylist",
            "description": "Remove the current user as a follower of a playlist.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "playlist_id",
                    "type": "STRING",
                    "description": "The Spotify ID of the playlist.",
                    "default": ""
                },
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                },
                {
                    "name": "owner_id",
                    "type": "STRING",
                    "description": "The Spotify user ID of the person who owns the playlist.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/unfollowPlaylist\"\nquerystring = {\"playlist_id\": \"\", \"access_token\": \"\", \"owner_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/unfollowPlaylist\"\nquerystring = {\"playlist_id\": \"\", \"access_token\": \"\", \"owner_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "unfollowUser",
            "url": "https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/unfollowUser",
            "description": "Remove the current user as a follower of one or more Spotify users.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "User Spotify ID.",
                    "default": ""
                },
                {
                    "name": "access_token",
                    "type": "STRING",
                    "description": "A valid access token from the getAccessToken method",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/unfollowUser\"\nquerystring = {\"id\": \"\", \"access_token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://SpotifyUserAPIserg-osipchukV1.p.rapidapi.com/unfollowUser\"\nquerystring = {\"id\": \"\", \"access_token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"SpotifyUserAPIserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}