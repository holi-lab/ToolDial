{
    "product_id": "687",
    "tool_description": "Paybook is a hub that connects people with their financial world!",
    "home_url": "https://rapidapi.com/raygorodskij/api/Paybook/",
    "name": "Paybook",
    "title": "Paybook",
    "pricing": "FREE",
    "tool_name": "Paybook",
    "score": {
        "avgServiceLevel": 0,
        "avgLatency": 127292,
        "avgSuccessRate": 0,
        "popularityScore": 4.2,
        "__typename": "Score"
    },
    "host": "PaybookraygorodskijV1.p.rapidapi.com",
    "api_list": [
        {
            "name": "cancelInvoice",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/cancelInvoice",
            "description": "Cancel the invoice.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                },
                {
                    "name": "uuid",
                    "type": "STRING",
                    "description": "UUID of the invoice.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/cancelInvoice\"\nquerystring = {\"sessionToken\": \"\", \"uuid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/cancelInvoice\"\nquerystring = {\"sessionToken\": \"\", \"uuid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "checkStructure",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/checkStructure",
            "description": "Check for errors and warning in JSON structure or XML invoice.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "invoiceData",
                    "type": "JSON",
                    "description": "JSON structure of the invoice.",
                    "default": ""
                },
                {
                    "name": "invoiceXml",
                    "type": "STRING",
                    "description": "XML string (base64 encoded).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/checkStructure\"\nquerystring = {\"invoiceData\": \"\", \"sessionToken\": \"\", \"invoiceXml\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/checkStructure\"\nquerystring = {\"invoiceData\": \"\", \"sessionToken\": \"\", \"invoiceXml\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createCredentials",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/createCredentials",
            "description": "Creates credentials.Credentials are the third-party data that is needed in order to authenticate with a third-party site. Credentials are encrypted upon arrival and won\u2019t be available on any endpoint. Data pull from this endpoint is only complementary.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "idSite",
                    "type": "STRING",
                    "description": "Site ID.",
                    "default": ""
                },
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                },
                {
                    "name": "credentials",
                    "type": "JSON",
                    "description": "Credentials Object (this must be created using the credentials field of the Site ID provided).",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/createCredentials\"\nquerystring = {\"idSite\": \"\", \"sessionToken\": \"\", \"credentials\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/createCredentials\"\nquerystring = {\"idSite\": \"\", \"sessionToken\": \"\", \"credentials\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createTaxpayer",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/createTaxpayer",
            "description": "Create a new taxpayer.With these endpoint you can add or edit taxpayers that will be able to emit invoices.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "taxpayer",
                    "type": "STRING",
                    "description": "The RFC of the taxpayer e.g.(AAA010101AAA).",
                    "default": ""
                },
                {
                    "name": "cer",
                    "type": "STRING",
                    "description": "Certificate of the taxpayer (string encoded in base64).",
                    "default": ""
                },
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                },
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "Key of the certificate (string encoded in base64).",
                    "default": ""
                },
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "Password of the cer and key.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/createTaxpayer\"\nquerystring = {\"taxpayer\": \"\", \"cer\": \"\", \"sessionToken\": \"\", \"key\": \"\", \"password\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/createTaxpayer\"\nquerystring = {\"taxpayer\": \"\", \"cer\": \"\", \"sessionToken\": \"\", \"key\": \"\", \"password\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createUser",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/createUser",
            "description": "Create a new user.Users are logical segmentations for end-users. It's a best practice to register users in order to have their information grouped and have control on both ends. It is required to have at least one user registered to create credentials.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Developer Token given on the developer.",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "User name.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "idExternal",
                    "type": "STRING",
                    "description": "External ID, this field can be null and be used to keep track of that user with an external ID.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/createUser\"\nquerystring = {\"apiKey\": \"\", \"name\": \"\", \"idExternal\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/createUser\"\nquerystring = {\"apiKey\": \"\", \"name\": \"\", \"idExternal\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteCredentials",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/deleteCredentials",
            "description": "Delete credentials.Credentials are the third-party data that is needed in order to authenticate with a third-party site. Credentials are encrypted upon arrival and won\u2019t be available on any endpoint. Data pull from this endpoint is only complementary.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "idCredential",
                    "type": "STRING",
                    "description": "Id of the credentials.",
                    "default": ""
                },
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/deleteCredentials\"\nquerystring = {\"idCredential\": \"\", \"sessionToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/deleteCredentials\"\nquerystring = {\"idCredential\": \"\", \"sessionToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteSessionToken",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/deleteSessionToken",
            "description": "Delete a session token.Sessions are access tokens for the final user in order to consume Sync endpoints. Sessions expire after 5 minutes of inactivity and should be used for creating or updating credentials.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/deleteSessionToken\"\nquerystring = {\"sessionToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/deleteSessionToken\"\nquerystring = {\"sessionToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteUser",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/deleteUser",
            "description": "Deletes a user.Users are logical segmentations for end-users. It's a best practice to register users in order to have their information grouped and have control on both ends. It is required to have at least one user registered to create credentials.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Developer Token given on the developer.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/deleteUser\"\nquerystring = {\"userId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/deleteUser\"\nquerystring = {\"userId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAccountTypes",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/getAccountTypes",
            "description": "Return account types.Catalogues are a collection of endpoints that are relevant to the data segmentation on some of the other endpoints.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the number of rows to be returned.",
                    "default": ""
                },
                {
                    "name": "skip",
                    "type": "NUMBER",
                    "description": "Skip rows to be returned.",
                    "default": ""
                },
                {
                    "name": "order",
                    "type": "STRING",
                    "description": "Order the rows to be returned.",
                    "default": ""
                },
                {
                    "name": "fields",
                    "type": "LIST",
                    "description": "Select fields to be returned.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getAccountTypes\"\nquerystring = {\"sessionToken\": \"\", \"limit\": \"\", \"skip\": \"\", \"order\": \"\", \"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getAccountTypes\"\nquerystring = {\"sessionToken\": \"\", \"limit\": \"\", \"skip\": \"\", \"order\": \"\", \"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAccounts",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/getAccounts",
            "description": "Returns accounts for a specific user.Accounts are repositories for end-user transactions which are often segmented by some distinction, such as account type and/or account number. Account and transactional data can be retrieved from third-party sites (refreshed) up to three times a day.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "idSiteOrganization",
                    "type": "STRING",
                    "description": "Site Organization ID.",
                    "default": ""
                },
                {
                    "name": "idCredential",
                    "type": "STRING",
                    "description": "Credential ID.",
                    "default": ""
                },
                {
                    "name": "isDisable",
                    "type": "STRING",
                    "description": "Is disable, some sites can have the option to retreieve transactions that are not longer valid, active, etc.",
                    "default": ""
                },
                {
                    "name": "idSiteOrganizationType",
                    "type": "STRING",
                    "description": "Site Organization Type ID.",
                    "default": ""
                },
                {
                    "name": "idAccount",
                    "type": "STRING",
                    "description": "Account ID.",
                    "default": ""
                },
                {
                    "name": "idSite",
                    "type": "STRING",
                    "description": "Site ID.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the number of rows to be returned.",
                    "default": ""
                },
                {
                    "name": "skip",
                    "type": "NUMBER",
                    "description": "Skip rows to be returned.",
                    "default": ""
                },
                {
                    "name": "order",
                    "type": "STRING",
                    "description": "Order the rows to be returned.",
                    "default": ""
                },
                {
                    "name": "fields",
                    "type": "LIST",
                    "description": "Select fields to be returned.",
                    "default": ""
                },
                {
                    "name": "keywords",
                    "type": "LIST",
                    "description": "Filters by keywords.",
                    "default": ""
                },
                {
                    "name": "skipKeywords",
                    "type": "LIST",
                    "description": "Filters by keywords.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getAccounts\"\nquerystring = {\"sessionToken\": \"\", \"idSiteOrganization\": \"\", \"idCredential\": \"\", \"isDisable\": \"\", \"idSiteOrganizationType\": \"\", \"idAccount\": \"\", \"idSite\": \"\", \"limit\": \"\", \"skip\": \"\", \"order\": \"\", \"fields\": \"\", \"keywords\": \"\", \"skipKeywords\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getAccounts\"\nquerystring = {\"sessionToken\": \"\", \"idSiteOrganization\": \"\", \"idCredential\": \"\", \"isDisable\": \"\", \"idSiteOrganizationType\": \"\", \"idAccount\": \"\", \"idSite\": \"\", \"limit\": \"\", \"skip\": \"\", \"order\": \"\", \"fields\": \"\", \"keywords\": \"\", \"skipKeywords\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAllStampedInvoices",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/getAllStampedInvoices",
            "description": "Get all the stamped invoices for the user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "recipient",
                    "type": "STRING",
                    "description": "Filter by the RFC of the recipient.",
                    "default": ""
                },
                {
                    "name": "dtRegisterFrom",
                    "type": "DATEPICKER",
                    "description": "Filter by the start of the register date, expected UNIX timestamp.",
                    "default": ""
                },
                {
                    "name": "uuid",
                    "type": "STRING",
                    "description": "UUID of the invoice.",
                    "default": ""
                },
                {
                    "name": "dtCreateFrom",
                    "type": "DATEPICKER",
                    "description": "Filter from the date when the invoice was stamped, expected UNIX timestamp.",
                    "default": ""
                },
                {
                    "name": "issuer",
                    "type": "STRING",
                    "description": "Filter by the RFC of the issuer.",
                    "default": ""
                },
                {
                    "name": "dtRegisterTo",
                    "type": "DATEPICKER",
                    "description": "Filter by the end of the register date, expected UNIX timestamp.",
                    "default": ""
                },
                {
                    "name": "dtCreateTo",
                    "type": "DATEPICKER",
                    "description": "Filter to the date when the invoice was stamped.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getAllStampedInvoices\"\nquerystring = {\"recipient\": \"\", \"dtRegisterFrom\": \"\", \"uuid\": \"\", \"dtCreateFrom\": \"\", \"issuer\": \"\", \"sessionToken\": \"\", \"dtRegisterTo\": \"\", \"dtCreateTo\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getAllStampedInvoices\"\nquerystring = {\"recipient\": \"\", \"dtRegisterFrom\": \"\", \"uuid\": \"\", \"dtCreateFrom\": \"\", \"issuer\": \"\", \"sessionToken\": \"\", \"dtRegisterTo\": \"\", \"dtCreateTo\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAttachment",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/getAttachment",
            "description": "Returns the attachment.Attachments are files that have a relation to accounts or transactions. The type of attachment will vary in its availability from its source.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "idAttachment",
                    "type": "STRING",
                    "description": "Id of the attachment.",
                    "default": ""
                },
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getAttachment\"\nquerystring = {\"idAttachment\": \"\", \"sessionToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getAttachment\"\nquerystring = {\"idAttachment\": \"\", \"sessionToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAttachmentTypes",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/getAttachmentTypes",
            "description": "Return attachment types.Catalogues are a collection of endpoints that are relevant to the data segmentation on some of the other endpoints.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the number of rows to be returned.",
                    "default": ""
                },
                {
                    "name": "order",
                    "type": "STRING",
                    "description": "Order the rows to be returned.",
                    "default": ""
                },
                {
                    "name": "skip",
                    "type": "NUMBER",
                    "description": "Skip rows to be returned.",
                    "default": ""
                },
                {
                    "name": "fields",
                    "type": "LIST",
                    "description": "Select fields to be returned.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getAttachmentTypes\"\nquerystring = {\"sessionToken\": \"\", \"limit\": \"\", \"order\": \"\", \"skip\": \"\", \"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getAttachmentTypes\"\nquerystring = {\"sessionToken\": \"\", \"limit\": \"\", \"order\": \"\", \"skip\": \"\", \"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAttachments",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/getAttachments",
            "description": "Returns attachments for specific user.Attachments are files that have a relation to accounts or transactions. The type of attachment will vary in its availability from its source.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "idAccount",
                    "type": "STRING",
                    "description": "Account ID.",
                    "default": ""
                },
                {
                    "name": "dtRefreshTo",
                    "type": "DATEPICKER",
                    "description": "Filters by transaction refresh date, expected UNIX timestamp.",
                    "default": ""
                },
                {
                    "name": "isValid",
                    "type": "STRING",
                    "description": "Is attachment valid.",
                    "default": ""
                },
                {
                    "name": "idTransaction",
                    "type": "STRING",
                    "description": "Filters by transaction ID.",
                    "default": ""
                },
                {
                    "name": "idCredential",
                    "type": "STRING",
                    "description": "Credential ID.",
                    "default": ""
                },
                {
                    "name": "dtRefreshFrom",
                    "type": "DATEPICKER",
                    "description": "Filters by transaction refresh date, expected UNIX timestamp.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the number of rows to be returned.",
                    "default": ""
                },
                {
                    "name": "skip",
                    "type": "NUMBER",
                    "description": "Skip rows to be returned.",
                    "default": ""
                },
                {
                    "name": "order",
                    "type": "STRING",
                    "description": "Order the rows to be returned.",
                    "default": ""
                },
                {
                    "name": "fields",
                    "type": "LIST",
                    "description": "Select fields to be returned.",
                    "default": ""
                },
                {
                    "name": "keywords",
                    "type": "LIST",
                    "description": "Filters by keywords.",
                    "default": ""
                },
                {
                    "name": "skipKeywords",
                    "type": "LIST",
                    "description": "Filters by keywords.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getAttachments\"\nquerystring = {\"idAccount\": \"\", \"dtRefreshTo\": \"\", \"sessionToken\": \"\", \"isValid\": \"\", \"idTransaction\": \"\", \"idCredential\": \"\", \"dtRefreshFrom\": \"\", \"limit\": \"\", \"skip\": \"\", \"order\": \"\", \"fields\": \"\", \"keywords\": \"\", \"skipKeywords\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getAttachments\"\nquerystring = {\"idAccount\": \"\", \"dtRefreshTo\": \"\", \"sessionToken\": \"\", \"isValid\": \"\", \"idTransaction\": \"\", \"idCredential\": \"\", \"dtRefreshFrom\": \"\", \"limit\": \"\", \"skip\": \"\", \"order\": \"\", \"fields\": \"\", \"keywords\": \"\", \"skipKeywords\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAttachmentsCount",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/getAttachmentsCount",
            "description": "Returns the number of attachments given some search parameters.Attachments are files that have a relation to accounts or transactions. The type of attachment will vary in its availability from its source.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "idTransaction",
                    "type": "STRING",
                    "description": "Filters by transaction ID.",
                    "default": ""
                },
                {
                    "name": "dtRefreshFrom",
                    "type": "DATEPICKER",
                    "description": "Filters by transaction refresh date, expected UNIX timestamp.",
                    "default": ""
                },
                {
                    "name": "idCredential",
                    "type": "STRING",
                    "description": "Credential ID.",
                    "default": ""
                },
                {
                    "name": "isValid",
                    "type": "STRING",
                    "description": "Is attachment valid.",
                    "default": ""
                },
                {
                    "name": "dtRefreshTo",
                    "type": "DATEPICKER",
                    "description": "Filters by transaction refresh date, expected UNIX timestamp.",
                    "default": ""
                },
                {
                    "name": "idAccount",
                    "type": "STRING",
                    "description": "Account ID.",
                    "default": ""
                },
                {
                    "name": "keywords",
                    "type": "LIST",
                    "description": "Filters by keywords.",
                    "default": ""
                },
                {
                    "name": "skipKeywords",
                    "type": "LIST",
                    "description": "Filters by keywords.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getAttachmentsCount\"\nquerystring = {\"idTransaction\": \"\", \"dtRefreshFrom\": \"\", \"idCredential\": \"\", \"isValid\": \"\", \"sessionToken\": \"\", \"dtRefreshTo\": \"\", \"idAccount\": \"\", \"keywords\": \"\", \"skipKeywords\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getAttachmentsCount\"\nquerystring = {\"idTransaction\": \"\", \"dtRefreshFrom\": \"\", \"idCredential\": \"\", \"isValid\": \"\", \"sessionToken\": \"\", \"dtRefreshTo\": \"\", \"idAccount\": \"\", \"keywords\": \"\", \"skipKeywords\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAvailableCities",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/getAvailableCities",
            "description": "Return available cities.Catalogues are a collection of endpoints that are relevant to the data segmentation on some of the other endpoints.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "idSiteOrganization",
                    "type": "STRING",
                    "description": "Site Organization ID.",
                    "default": ""
                },
                {
                    "name": "idSite",
                    "type": "STRING",
                    "description": "Site ID.",
                    "default": ""
                },
                {
                    "name": "skip",
                    "type": "NUMBER",
                    "description": "Skip rows to be returned.",
                    "default": ""
                },
                {
                    "name": "idSiteOrganizationType",
                    "type": "STRING",
                    "description": "Site Organization ID.",
                    "default": ""
                },
                {
                    "name": "order",
                    "type": "STRING",
                    "description": "Order the rows to be returned.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the number of rows to be returned.",
                    "default": ""
                },
                {
                    "name": "fields",
                    "type": "LIST",
                    "description": "Select fields to be returned.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getAvailableCities\"\nquerystring = {\"idSiteOrganization\": \"\", \"sessionToken\": \"\", \"idSite\": \"\", \"skip\": \"\", \"idSiteOrganizationType\": \"\", \"order\": \"\", \"limit\": \"\", \"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getAvailableCities\"\nquerystring = {\"idSiteOrganization\": \"\", \"sessionToken\": \"\", \"idSite\": \"\", \"skip\": \"\", \"idSiteOrganizationType\": \"\", \"order\": \"\", \"limit\": \"\", \"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAvailableCountries",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/getAvailableCountries",
            "description": "Return available countries.Catalogues are a collection of endpoints that are relevant to the data segmentation on some of the other endpoints.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the number of rows to be returned.",
                    "default": ""
                },
                {
                    "name": "order",
                    "type": "STRING",
                    "description": "Order the rows to be returned.",
                    "default": ""
                },
                {
                    "name": "skip",
                    "type": "NUMBER",
                    "description": "Skip rows to be returned.",
                    "default": ""
                },
                {
                    "name": "fields",
                    "type": "LIST",
                    "description": "Select fields to be returned.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getAvailableCountries\"\nquerystring = {\"sessionToken\": \"\", \"limit\": \"\", \"order\": \"\", \"skip\": \"\", \"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getAvailableCountries\"\nquerystring = {\"sessionToken\": \"\", \"limit\": \"\", \"order\": \"\", \"skip\": \"\", \"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAvailableSiteOrganizations",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/getAvailableSiteOrganizations",
            "description": "Return available site organizations.Catalogues are a collection of endpoints that are relevant to the data segmentation on some of the other endpoints.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the number of rows to be returned.",
                    "default": ""
                },
                {
                    "name": "idSiteOrganizationType",
                    "type": "STRING",
                    "description": "Site Organization ID.",
                    "default": ""
                },
                {
                    "name": "idCountry",
                    "type": "STRING",
                    "description": "Site ID.",
                    "default": ""
                },
                {
                    "name": "idSiteOrganization",
                    "type": "STRING",
                    "description": "Site Organization ID.",
                    "default": ""
                },
                {
                    "name": "skip",
                    "type": "NUMBER",
                    "description": "Skip rows to be returned.",
                    "default": ""
                },
                {
                    "name": "order",
                    "type": "STRING",
                    "description": "Order the rows to be returned.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getAvailableSiteOrganizations\"\nquerystring = {\"limit\": \"\", \"idSiteOrganizationType\": \"\", \"idCountry\": \"\", \"idSiteOrganization\": \"\", \"sessionToken\": \"\", \"skip\": \"\", \"order\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getAvailableSiteOrganizations\"\nquerystring = {\"limit\": \"\", \"idSiteOrganizationType\": \"\", \"idCountry\": \"\", \"idSiteOrganization\": \"\", \"sessionToken\": \"\", \"skip\": \"\", \"order\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCredentials",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/getCredentials",
            "description": "Returns register credentials.Credentials are the third-party data that is needed in order to authenticate with a third-party site. Credentials are encrypted upon arrival and won\u2019t be available on any endpoint. Data pull from this endpoint is only complementary.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getCredentials\"\nquerystring = {\"sessionToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getCredentials\"\nquerystring = {\"sessionToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getExtractedDataFromAttachment",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/getExtractedDataFromAttachment",
            "description": "Returns the extracted data from attachment.Attachments are files that have a relation to accounts or transactions. The type of attachment will vary in its availability from its source.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                },
                {
                    "name": "idAttachment",
                    "type": "STRING",
                    "description": "Id of the attachment.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getExtractedDataFromAttachment\"\nquerystring = {\"sessionToken\": \"\", \"idAttachment\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getExtractedDataFromAttachment\"\nquerystring = {\"sessionToken\": \"\", \"idAttachment\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getProviders",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/getProviders",
            "description": "In Sync you can use different providers to stamp the invoices.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getProviders\"\nquerystring = {\"sessionToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getProviders\"\nquerystring = {\"sessionToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSessionToken",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/getSessionToken",
            "description": "Create a session token.Sessions are access tokens for the final user in order to consume Sync endpoints. Sessions expire after 5 minutes of inactivity and should be used for creating or updating credentials.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Developer Token given on the developer.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getSessionToken\"\nquerystring = {\"apiKey\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getSessionToken\"\nquerystring = {\"apiKey\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSitesGroupBySiteOrganizations",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/getSitesGroupBySiteOrganizations",
            "description": "Return sites group by site organizations.Catalogues are a collection of endpoints that are relevant to the data segmentation on some of the other endpoints.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "idCountry",
                    "type": "STRING",
                    "description": "Site ID.",
                    "default": ""
                },
                {
                    "name": "idSiteOrganizationType",
                    "type": "STRING",
                    "description": "Site Organization ID.",
                    "default": ""
                },
                {
                    "name": "idSiteOrganization",
                    "type": "STRING",
                    "description": "Site Organization ID.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getSitesGroupBySiteOrganizations\"\nquerystring = {\"idCountry\": \"\", \"idSiteOrganizationType\": \"\", \"sessionToken\": \"\", \"idSiteOrganization\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getSitesGroupBySiteOrganizations\"\nquerystring = {\"idCountry\": \"\", \"idSiteOrganizationType\": \"\", \"sessionToken\": \"\", \"idSiteOrganization\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getTaxpayers",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/getTaxpayers",
            "description": "Get the list of the registered taxpayers for the user.With these endpoint you can add or edit taxpayers that will be able to emit invoices.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "taxpayer",
                    "type": "STRING",
                    "description": "The RFC of the taxpayer e.g.(AAA010101AAA).",
                    "default": ""
                },
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "Password of the cer and key.",
                    "default": ""
                },
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                },
                {
                    "name": "cer",
                    "type": "STRING",
                    "description": "Certificate of the taxpayer (string encoded in base64).",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getTaxpayers\"\nquerystring = {\"taxpayer\": \"\", \"password\": \"\", \"sessionToken\": \"\", \"cer\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getTaxpayers\"\nquerystring = {\"taxpayer\": \"\", \"password\": \"\", \"sessionToken\": \"\", \"cer\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getTransactions",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/getTransactions",
            "description": "Returns transactions for specific user.Transactions are financial movements that are related to an account. They reflect an income or expense that the end-user has on a specific site. The amount of historical data Sync retrieves will vary by source, but most often 60 days of transactions will be available.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "idSite",
                    "type": "STRING",
                    "description": "Site ID.",
                    "default": ""
                },
                {
                    "name": "hasAttachment",
                    "type": "STRING",
                    "description": "Filters by transactions with valid attachments.",
                    "default": ""
                },
                {
                    "name": "dtTransactionTo",
                    "type": "DATEPICKER",
                    "description": "Filters by transaction date, expected UNIX timestamp.",
                    "default": ""
                },
                {
                    "name": "idSiteOrganization",
                    "type": "STRING",
                    "description": "Site Organization ID.",
                    "default": ""
                },
                {
                    "name": "idTransaction",
                    "type": "STRING",
                    "description": "Filters by transaction ID.",
                    "default": ""
                },
                {
                    "name": "idCredential",
                    "type": "STRING",
                    "description": "Credential ID.",
                    "default": ""
                },
                {
                    "name": "dtRefreshTo",
                    "type": "DATEPICKER",
                    "description": "Filters by transaction refresh date, expected UNIX timestamp.",
                    "default": ""
                },
                {
                    "name": "isDisable",
                    "type": "STRING",
                    "description": "Filters by disable transaction.",
                    "default": ""
                },
                {
                    "name": "dtRefreshFrom",
                    "type": "DATEPICKER",
                    "description": "Filters by transaction refresh date, expected UNIX timestamp.",
                    "default": ""
                },
                {
                    "name": "dtTransactionFrom",
                    "type": "DATEPICKER",
                    "description": "Filters by transaction date, expected UNIX timestamp.",
                    "default": ""
                },
                {
                    "name": "hasAttachment",
                    "type": "STRING",
                    "description": "Filters by transactions with valid attachments.",
                    "default": ""
                },
                {
                    "name": "idAccount",
                    "type": "STRING",
                    "description": "Account ID.",
                    "default": ""
                },
                {
                    "name": "idSiteOrganizationType",
                    "type": "STRING",
                    "description": "Site Organization Type ID.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the number of rows to be returned.",
                    "default": ""
                },
                {
                    "name": "order",
                    "type": "STRING",
                    "description": "Order the rows to be returned.",
                    "default": ""
                },
                {
                    "name": "skip",
                    "type": "NUMBER",
                    "description": "Skip rows to be returned.",
                    "default": ""
                },
                {
                    "name": "fields",
                    "type": "LIST",
                    "description": "Select fields to be returned.",
                    "default": ""
                },
                {
                    "name": "keywords",
                    "type": "LIST",
                    "description": "Filters by keywords.",
                    "default": ""
                },
                {
                    "name": "skipKeywords",
                    "type": "LIST",
                    "description": "Filters by keywords.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getTransactions\"\nquerystring = {\"idSite\": \"\", \"hasAttachment\": \"\", \"dtTransactionTo\": \"\", \"idSiteOrganization\": \"\", \"idTransaction\": \"\", \"idCredential\": \"\", \"dtRefreshTo\": \"\", \"isDisable\": \"\", \"dtRefreshFrom\": \"\", \"dtTransactionFrom\": \"\", \"sessionToken\": \"\", \"idAccount\": \"\", \"idSiteOrganizationType\": \"\", \"limit\": \"\", \"order\": \"\", \"skip\": \"\", \"fields\": \"\", \"keywords\": \"\", \"skipKeywords\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getTransactions\"\nquerystring = {\"idSite\": \"\", \"hasAttachment\": \"\", \"dtTransactionTo\": \"\", \"idSiteOrganization\": \"\", \"idTransaction\": \"\", \"idCredential\": \"\", \"dtRefreshTo\": \"\", \"isDisable\": \"\", \"dtRefreshFrom\": \"\", \"dtTransactionFrom\": \"\", \"sessionToken\": \"\", \"idAccount\": \"\", \"idSiteOrganizationType\": \"\", \"limit\": \"\", \"order\": \"\", \"skip\": \"\", \"fields\": \"\", \"keywords\": \"\", \"skipKeywords\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getTransactionsCount",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/getTransactionsCount",
            "description": "Returns the number of transactions given some search parameters.Transactions are financial movements that are related to an account. They reflect an income or expense that the end-user has on a specific site. The amount of historical data Sync retrieves will vary by source, but most often 60 days of transactions will be available.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "isDisable",
                    "type": "STRING",
                    "description": "Filters by disable transaction.",
                    "default": ""
                },
                {
                    "name": "idTransaction",
                    "type": "STRING",
                    "description": "Filters by transaction ID.",
                    "default": ""
                },
                {
                    "name": "dtTransactionTo",
                    "type": "DATEPICKER",
                    "description": "Filters by transaction date, expected UNIX timestamp.",
                    "default": ""
                },
                {
                    "name": "idSiteOrganization",
                    "type": "STRING",
                    "description": "Site Organization ID.",
                    "default": ""
                },
                {
                    "name": "dtRefreshTo",
                    "type": "DATEPICKER",
                    "description": "Filters by transaction refresh date, expected UNIX timestamp.",
                    "default": ""
                },
                {
                    "name": "idCredential",
                    "type": "STRING",
                    "description": "Credential ID.",
                    "default": ""
                },
                {
                    "name": "idSite",
                    "type": "STRING",
                    "description": "Site ID.",
                    "default": ""
                },
                {
                    "name": "dtRefreshFrom",
                    "type": "DATEPICKER",
                    "description": "Filters by transaction refresh date, expected UNIX timestamp.",
                    "default": ""
                },
                {
                    "name": "dtTransactionFrom",
                    "type": "DATEPICKER",
                    "description": "Filters by transaction date, expected UNIX timestamp.",
                    "default": ""
                },
                {
                    "name": "idSiteOrganizationType",
                    "type": "STRING",
                    "description": "Site Organization Type ID.",
                    "default": ""
                },
                {
                    "name": "idAccount",
                    "type": "STRING",
                    "description": "Account ID.",
                    "default": ""
                },
                {
                    "name": "keywords",
                    "type": "LIST",
                    "description": "Filters by keywords.",
                    "default": ""
                },
                {
                    "name": "skipKeywords",
                    "type": "LIST",
                    "description": "Filters by keywords .",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getTransactionsCount\"\nquerystring = {\"isDisable\": \"\", \"idTransaction\": \"\", \"dtTransactionTo\": \"\", \"idSiteOrganization\": \"\", \"dtRefreshTo\": \"\", \"idCredential\": \"\", \"idSite\": \"\", \"dtRefreshFrom\": \"\", \"dtTransactionFrom\": \"\", \"idSiteOrganizationType\": \"\", \"sessionToken\": \"\", \"idAccount\": \"\", \"keywords\": \"\", \"skipKeywords\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getTransactionsCount\"\nquerystring = {\"isDisable\": \"\", \"idTransaction\": \"\", \"dtTransactionTo\": \"\", \"idSiteOrganization\": \"\", \"dtRefreshTo\": \"\", \"idCredential\": \"\", \"idSite\": \"\", \"dtRefreshFrom\": \"\", \"dtTransactionFrom\": \"\", \"idSiteOrganizationType\": \"\", \"sessionToken\": \"\", \"idAccount\": \"\", \"keywords\": \"\", \"skipKeywords\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserByApiKey",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/getUserByApiKey",
            "description": "Returns users for that token.Users are logical segmentations for end-users. It's a best practice to register users in order to have their information grouped and have control on both ends. It is required to have at least one user registered to create credentials.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Developer Token given on the developer.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "skip",
                    "type": "NUMBER",
                    "description": "Skip rows to be returned.",
                    "default": ""
                },
                {
                    "name": "order",
                    "type": "STRING",
                    "description": "Order the rows to be returned.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the number of rows to be returned.",
                    "default": ""
                },
                {
                    "name": "idExternal",
                    "type": "STRING",
                    "description": "External ID.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getUserByApiKey\"\nquerystring = {\"skip\": \"\", \"order\": \"\", \"apiKey\": \"\", \"limit\": \"\", \"idExternal\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/getUserByApiKey\"\nquerystring = {\"skip\": \"\", \"order\": \"\", \"apiKey\": \"\", \"limit\": \"\", \"idExternal\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "stampNewInvoice",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/stampNewInvoice",
            "description": "Stamp a new invoice, you can send the JSON structure.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "invoiceXml",
                    "type": "STRING",
                    "description": "XML string (base64 encoded).",
                    "default": ""
                },
                {
                    "name": "invoiceData",
                    "type": "JSON",
                    "description": "JSON structure of the invoice.",
                    "default": ""
                },
                {
                    "name": "idProvider",
                    "type": "STRING",
                    "description": "Id or name of the available providers in Sync.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/stampNewInvoice\"\nquerystring = {\"sessionToken\": \"\", \"invoiceXml\": \"\", \"invoiceData\": \"\", \"idProvider\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/stampNewInvoice\"\nquerystring = {\"sessionToken\": \"\", \"invoiceXml\": \"\", \"invoiceData\": \"\", \"idProvider\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateCredentials",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/updateCredentials",
            "description": "Updates credentials.Credentials are the third-party data that is needed in order to authenticate with a third-party site. Credentials are encrypted upon arrival and won\u2019t be available on any endpoint. Data pull from this endpoint is only complementary.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "idSite",
                    "type": "STRING",
                    "description": "Site ID.",
                    "default": ""
                },
                {
                    "name": "credentials",
                    "type": "JSON",
                    "description": "Credentials Object (this must be created using the credentials field of the Site ID provided).",
                    "default": ""
                },
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/updateCredentials\"\nquerystring = {\"idSite\": \"\", \"credentials\": \"\", \"sessionToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/updateCredentials\"\nquerystring = {\"idSite\": \"\", \"credentials\": \"\", \"sessionToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateTaxpayer",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/updateTaxpayer",
            "description": "Update the credentials of taxpayer.With these endpoint you can add or edit taxpayers that will be able to emit invoices.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "Key of the certificate (string encoded in base64).",
                    "default": ""
                },
                {
                    "name": "cer",
                    "type": "STRING",
                    "description": "Certificate of the taxpayer (string encoded in base64).",
                    "default": ""
                },
                {
                    "name": "taxpayer",
                    "type": "STRING",
                    "description": "The RFC of the taxpayer e.g.(AAA010101AAA).",
                    "default": ""
                },
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                },
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "Password of the cer and key.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/updateTaxpayer\"\nquerystring = {\"key\": \"\", \"cer\": \"\", \"taxpayer\": \"\", \"sessionToken\": \"\", \"password\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/updateTaxpayer\"\nquerystring = {\"key\": \"\", \"cer\": \"\", \"taxpayer\": \"\", \"sessionToken\": \"\", \"password\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateUser",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/updateUser",
            "description": "Update user.Users are logical segmentations for end-users. It's a best practice to register users in order to have their information grouped and have control on both ends. It is required to have at least one user registered to create credentials.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Developer Token given on the developer.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "idExternal",
                    "type": "STRING",
                    "description": "External ID, this field can be null and be used to keep track of that user with an external ID.",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "User name.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/updateUser\"\nquerystring = {\"apiKey\": \"\", \"idExternal\": \"\", \"name\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/updateUser\"\nquerystring = {\"apiKey\": \"\", \"idExternal\": \"\", \"name\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "validateSessionToken",
            "url": "https://PaybookraygorodskijV1.p.rapidapi.com/validateSessionToken",
            "description": "Sessions are access tokens for the final user in order to consume Sync endpoints. Sessions expire after 5 minutes of inactivity and should be used for creating or updating credentials.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "sessionToken",
                    "type": "STRING",
                    "description": "Session token, this value can be obtain using token and subtoken from get getSessionToken.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/validateSessionToken\"\nquerystring = {\"sessionToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://PaybookraygorodskijV1.p.rapidapi.com/validateSessionToken\"\nquerystring = {\"sessionToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"PaybookraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}