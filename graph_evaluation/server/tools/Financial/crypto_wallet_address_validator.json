{
    "tool_name":"Crypto Wallet Address Validator",
    "tool_description":"Validator for crypto wallets address of Bitcoin and other top altcoins.",
    "title":"Crypto Wallet Address Validator",
    "pricing":"FREEMIUM",
    "score":{
        "avgServiceLevel":0,
        "avgLatency":723,
        "avgSuccessRate":0,
        "popularityScore":0,
        "__typename":"Score"
    },
    "home_url":"https://rapidapi.com/xTiron/api/crypto-wallet-address-validator/",
    "host":"crypto-wallet-address-validator.p.rapidapi.com",
    "api_list":[
        {
            "name":"Validate",
            "url":"https://crypto-wallet-address-validator.p.rapidapi.com/validate/{address}",
            "description":"This endpoint allow you to validate a wallet address.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"address",
                    "type":"string",
                    "description":"",
                    "default":"bc1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh"
                }
            ],
            "optional_parameters":[
                {
                    "name":"currency",
                    "type":"STRING",
                    "description":"Currency name or symbol, 'bitcoin' (default), 'litecoin' or 'LTC'.\n\nSupported:\nAuroracoin/AUR, 'auroracoin' or 'AUR'\nBankex/BKX, 'bankex' or 'BKX'\nBeaverCoin/BVC, 'beavercoin' or 'BVC'\nBiocoin/BIO, 'biocoin' or 'BIO'\nBitcoin/BTC, 'bitcoin' or 'BTC'\nBitcoinCash/BCH, 'bitcoincash' or 'BCH'\nBitcoinGold/BTG, 'bitcoingold' or 'BTG'\nBitcoinPrivate/BTCP, 'bitcoinprivate' or 'BTCP'\nBitcoinZ/BTCZ, 'bitcoinz' or 'BTCZ'\nCallisto/CLO, 'callisto' or 'CLO'\nDash, 'dash' or 'DASH'\nDecred/DCR, 'decred' or 'DCR'\nDigibyte/DGB, 'digibyte' or 'DGB'\nDogecoin/DOGE, 'dogecoin' or 'DOGE'\nEthereum/ETH, 'ethereum' or 'ETH'\nEthereumClassic/ETH, 'ethereumclassic' or 'ETC'\nEthereumZero/ETZ, 'etherzero' or 'ETZ'\nFreicoin/FRC, 'freicoin' or 'FRC'\nGarlicoin/GRLC, 'garlicoin' or 'GRLC'\nHush/HUSH, 'hush' or 'HUSH'\nKomodo/KMD, 'komodo' or 'KMD'\nLitecoin/LTC, 'litecoin' or 'LTC'\nMegacoin/MEC, 'megacoin' or 'MEC'\nMonero/XMR, 'monero' or 'XMR'\nNamecoin/NMC, 'namecoin' or 'NMC'\nNano/NANO, 'nano' or 'NANO'\nNEO/NEO, 'NEO' or 'NEO'\nNeoGas/GAS, 'neogas' or 'GAS'\nPeercoin/PPCoin/PPC, 'peercoin' or 'PPC'\nPrimecoin/XPM, 'primecoin' or 'XPM'\nProtoshares/PTS, 'protoshares' or 'PTS'\nQtum/QTUM, 'qtum' or 'QTUM'\nRaiblocks/XRB, 'raiblocks' or 'XRB'\nRipple/XRP, 'ripple' or 'XRP'\nSnowgem/SNG, 'snowgem' or 'SNG'\nVertcoin/VTC, 'vertcoin' or 'VTC'\nVotecoin/VTC, 'votecoin' or 'VOT'\nZcash/ZEC, 'zcash' or 'ZEC'\nZclassic/ZCL, 'zclassic' or 'ZCL'\nZenCash/ZEN, 'zencash' or 'ZEN'",
                    "default":"btc"
                },
                {
                    "name":"network",
                    "type":"STRING",
                    "description":"Blockhain network,  'prod' (default) to enforce standard address, 'testnet' to enforce testnet address and 'both' to enforce nothing.\n",
                    "default":"prod"
                }
            ],
            "code":"import requests\n\nurl = \"https://crypto-wallet-address-validator.p.rapidapi.com/validate/{address}\"\nquerystring = {\"currency\": currency, \"network\": network}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"crypto-wallet-address-validator.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "key1":"value",
                "key2":"value"
            },
            "headers":{},
            "schema":{
                "type":"object",
                "properties":{
                    "address":{
                        "type":"string"
                    },
                    "currency":{
                        "type":"string"
                    },
                    "network":{
                        "type":"string"
                    },
                    "isValid":{
                        "type":"boolean"
                    }
                }
            }
        },
        {
            "name":"Validate",
            "url":"https://crypto-wallet-address-validator.p.rapidapi.com/validate",
            "description":"This endpoint allow you to validate a wallet address.\n\nParameters:\n**address** - Wallet address to validate.\n**currency** - *Optional*. Currency name or symbol, e.g. 'bitcoin' (default), 'litecoin' or 'LTC'\n**network** - *Optional*. Use 'prod' (default) to enforce standard address, 'testnet' to enforce testnet address and 'both' to enforce nothing\n\nSupported currencies:\n\n- Auroracoin/AUR, 'auroracoin' or 'AUR'\n- Bankex/BKX, 'bankex' or 'BKX'\n- BeaverCoin/BVC, 'beavercoin' or 'BVC'\n- Biocoin/BIO, 'biocoin' or 'BIO'\n- Bitcoin/BTC, 'bitcoin' or 'BTC'\n- BitcoinCash/BCH, 'bitcoincash' or 'BCH'\n- BitcoinGold/BTG, 'bitcoingold' or 'BTG'\n- BitcoinPrivate/BTCP, 'bitcoinprivate' or 'BTCP'\n- BitcoinZ/BTCZ, 'bitcoinz' or 'BTCZ'\n- Callisto/CLO, 'callisto' or 'CLO'\n- Dash, 'dash' or 'DASH'\n- Decred/DCR, 'decred' or 'DCR'\n- Digibyte/DGB, 'digibyte' or 'DGB'\n- Dogecoin/DOGE, 'dogecoin' or 'DOGE'\n- Ethereum/ETH, 'ethereum' or 'ETH'\n- EthereumClassic/ETH, 'ethereumclassic' or 'ETC'\n- EthereumZero/ETZ, 'etherzero' or 'ETZ'\n- Freicoin/FRC, 'freicoin' or 'FRC'\n- Garlicoin/GRLC, 'garlicoin' or 'GRLC'\n- Hush/HUSH, 'hush' or 'HUSH'\n- Komodo/KMD, 'komodo' or 'KMD'\n- Litecoin/LTC, 'litecoin' or 'LTC'\n- Megacoin/MEC, 'megacoin' or 'MEC'\n- Monero/XMR, 'monero' or 'XMR'\n- Namecoin/NMC, 'namecoin' or 'NMC'\n- Nano/NANO, 'nano' or 'NANO'\n- NEO/NEO, 'NEO' or 'NEO'\n- NeoGas/GAS, 'neogas' or 'GAS'\n- Peercoin/PPCoin/PPC, 'peercoin' or 'PPC'\n- Primecoin/XPM, 'primecoin' or 'XPM'\n- Protoshares/PTS, 'protoshares' or 'PTS'\n- Qtum/QTUM, 'qtum' or 'QTUM'\n- Raiblocks/XRB, 'raiblocks' or 'XRB'\n- Ripple/XRP, 'ripple' or 'XRP'\n- Snowgem/SNG, 'snowgem' or 'SNG'\n- Vertcoin/VTC, 'vertcoin' or 'VTC'\n- Votecoin/VTC, 'votecoin' or 'VOT'\n- Zcash/ZEC, 'zcash' or 'ZEC'\n- Zclassic/ZCL, 'zclassic' or 'ZCL'\n- ZenCash/ZEN, 'zencash' or 'ZEN'",
            "method":"PUT",
            "required_parameters":[],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://crypto-wallet-address-validator.p.rapidapi.com/validate\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"crypto-wallet-address-validator.p.rapidapi.com\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "key1":"value",
                "key2":"value"
            },
            "headers":{},
            "schema":{}
        }
    ]
}