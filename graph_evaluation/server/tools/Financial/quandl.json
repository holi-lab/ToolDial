{
    "product_id": "664",
    "tool_description": "Quandl has a vast collection of free and open data collected from a variety of organizations: central banks, governments, multinational organizations and more.",
    "home_url": "https://rapidapi.com/zakutynsky/api/Quandl/",
    "name": "Quandl",
    "title": "Quandl",
    "pricing": "FREE",
    "tool_name": "Quandl",
    "score": {
        "avgServiceLevel": 0,
        "avgLatency": 127212,
        "avgSuccessRate": 0,
        "popularityScore": 0,
        "__typename": "Score"
    },
    "host": "QuandlzakutynskyV1.p.rapidapi.com",
    "api_list": [
        {
            "name": "downloadEntrieTable",
            "url": "https://QuandlzakutynskyV1.p.rapidapi.com/downloadEntrieTable",
            "description": "Alternatively, we have created an exporter function that will download the entire table as a zipped CSV file.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "datatableCode",
                    "type": "STRING",
                    "description": "Code identifying the datatable.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://QuandlzakutynskyV1.p.rapidapi.com/downloadEntrieTable\"\nquerystring = {\"apiKey\": \"\", \"datatableCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"QuandlzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://QuandlzakutynskyV1.p.rapidapi.com/downloadEntrieTable\"\nquerystring = {\"apiKey\": \"\", \"datatableCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"QuandlzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "filterColumns",
            "url": "https://QuandlzakutynskyV1.p.rapidapi.com/filterColumns",
            "description": "It is possible to select specific table columns to download, by identifying them with the columns parameter.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "qoptsColumns",
                    "type": "STRING",
                    "description": "Request data from specific columns by passing the qopts.columns parameter.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "datatableCode",
                    "type": "STRING",
                    "description": "Code identifying the datatable.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://QuandlzakutynskyV1.p.rapidapi.com/filterColumns\"\nquerystring = {\"qoptsColumns\": \"\", \"apiKey\": \"\", \"datatableCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"QuandlzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://QuandlzakutynskyV1.p.rapidapi.com/filterColumns\"\nquerystring = {\"qoptsColumns\": \"\", \"apiKey\": \"\", \"datatableCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"QuandlzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "filterRows",
            "url": "https://QuandlzakutynskyV1.p.rapidapi.com/filterRows",
            "description": "It is possible to download only certain desired rows from a table, by specifying one or more columns to act as criteria to filter rows. If the value in a given column matches the filter argument, then the row containing that value is returned.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "filterValue",
                    "type": "STRING",
                    "description": "Filter value. Example: SPY",
                    "default": ""
                },
                {
                    "name": "datatableCode",
                    "type": "STRING",
                    "description": "Code identifying the datatable.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "rowFilterCriteria",
                    "type": "SELECT",
                    "description": "The filter examples below all involve the ETFG/FUND table. This particular table is filterable on columns date, ticker, shares_oustanding, nav and flow_daily. This means that users can narrow down their request to rows with specific values of date, ticker, shares_oustanding, nav and flow_daily.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://QuandlzakutynskyV1.p.rapidapi.com/filterRows\"\nquerystring = {\"filterValue\": \"\", \"datatableCode\": \"\", \"apiKey\": \"\", \"rowFilterCriteria\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"QuandlzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://QuandlzakutynskyV1.p.rapidapi.com/filterRows\"\nquerystring = {\"filterValue\": \"\", \"datatableCode\": \"\", \"apiKey\": \"\", \"rowFilterCriteria\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"QuandlzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "filterRowsAndColumns",
            "url": "https://QuandlzakutynskyV1.p.rapidapi.com/filterRowsAndColumns",
            "description": "You can filter on both rows and columns by appending both filter types to your API request.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "columnFilterCriteria",
                    "type": "STRING",
                    "description": "Column filter string",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "rowFilterCriteria",
                    "type": "STRING",
                    "description": "Rows filter string",
                    "default": ""
                },
                {
                    "name": "datatableCode",
                    "type": "STRING",
                    "description": "Code identifying the datatable.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://QuandlzakutynskyV1.p.rapidapi.com/filterRowsAndColumns\"\nquerystring = {\"columnFilterCriteria\": \"\", \"apiKey\": \"\", \"rowFilterCriteria\": \"\", \"datatableCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"QuandlzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://QuandlzakutynskyV1.p.rapidapi.com/filterRowsAndColumns\"\nquerystring = {\"columnFilterCriteria\": \"\", \"apiKey\": \"\", \"rowFilterCriteria\": \"\", \"datatableCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"QuandlzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getEntrieTable",
            "url": "https://QuandlzakutynskyV1.p.rapidapi.com/getEntrieTable",
            "description": "Return table entrie",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "datatableCode",
                    "type": "STRING",
                    "description": "Code identifying the datatable.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://QuandlzakutynskyV1.p.rapidapi.com/getEntrieTable\"\nquerystring = {\"datatableCode\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"QuandlzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://QuandlzakutynskyV1.p.rapidapi.com/getEntrieTable\"\nquerystring = {\"datatableCode\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"QuandlzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getFilteredTimeSeriesData",
            "url": "https://QuandlzakutynskyV1.p.rapidapi.com/getFilteredTimeSeriesData",
            "description": "You can slice, transform and otherwise customize your time-series dataset prior to download by appending various optional parameters to your query.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "datasetCode",
                    "type": "STRING",
                    "description": "Code identifying the dataset.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "databaseCode",
                    "type": "STRING",
                    "description": "Code identifying the database to which the dataset belongs.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "columnIndex",
                    "type": "NUMBER",
                    "description": "Request a specific column. Column 0 is the date column and is always returned. Data begins at column 1.",
                    "default": ""
                },
                {
                    "name": "endDate",
                    "type": "DATEPICKER",
                    "description": "Retrieve data rows up to and including the specified end date.",
                    "default": ""
                },
                {
                    "name": "collapse",
                    "type": "SELECT",
                    "description": "Change the sampling frequency of the returned data.",
                    "default": ""
                },
                {
                    "name": "order",
                    "type": "SELECT",
                    "description": "Return data in ascending or descending order of date. Default is desc.",
                    "default": ""
                },
                {
                    "name": "transform",
                    "type": "SELECT",
                    "description": "Perform elementary calculations on the data prior to downloading. Default is none. Calculation options are described below.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Use limit=n to get the first n rows of the dataset. Use limit=1 to get just the latest row.",
                    "default": ""
                },
                {
                    "name": "startDate",
                    "type": "DATEPICKER",
                    "description": "Retrieve data rows on and after the specified start date.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://QuandlzakutynskyV1.p.rapidapi.com/getFilteredTimeSeriesData\"\nquerystring = {\"columnIndex\": \"\", \"datasetCode\": \"\", \"endDate\": \"\", \"apiKey\": \"\", \"collapse\": \"\", \"order\": \"\", \"transform\": \"\", \"limit\": \"\", \"startDate\": \"\", \"databaseCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"QuandlzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://QuandlzakutynskyV1.p.rapidapi.com/getFilteredTimeSeriesData\"\nquerystring = {\"columnIndex\": \"\", \"datasetCode\": \"\", \"endDate\": \"\", \"apiKey\": \"\", \"collapse\": \"\", \"order\": \"\", \"transform\": \"\", \"limit\": \"\", \"startDate\": \"\", \"databaseCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"QuandlzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getTableMetadata",
            "url": "https://QuandlzakutynskyV1.p.rapidapi.com/getTableMetadata",
            "description": "Get table metadata",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "datatableCode",
                    "type": "STRING",
                    "description": "Code identifying the datatable.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://QuandlzakutynskyV1.p.rapidapi.com/getTableMetadata\"\nquerystring = {\"apiKey\": \"\", \"datatableCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"QuandlzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://QuandlzakutynskyV1.p.rapidapi.com/getTableMetadata\"\nquerystring = {\"apiKey\": \"\", \"datatableCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"QuandlzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getTimeSeriesAllData",
            "url": "https://QuandlzakutynskyV1.p.rapidapi.com/getTimeSeriesAllData",
            "description": "This call returns metadata and data from a specified time-series.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "databaseCode",
                    "type": "STRING",
                    "description": "Code identifying the database to which the dataset belongs.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "datasetCode",
                    "type": "STRING",
                    "description": "Code identifying the dataset.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://QuandlzakutynskyV1.p.rapidapi.com/getTimeSeriesAllData\"\nquerystring = {\"databaseCode\": \"\", \"apiKey\": \"\", \"datasetCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"QuandlzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://QuandlzakutynskyV1.p.rapidapi.com/getTimeSeriesAllData\"\nquerystring = {\"databaseCode\": \"\", \"apiKey\": \"\", \"datasetCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"QuandlzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getTimeSeriesData",
            "url": "https://QuandlzakutynskyV1.p.rapidapi.com/getTimeSeriesData",
            "description": "This call returns data from a specified time-series.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "datasetCode",
                    "type": "STRING",
                    "description": "Code identifying the dataset.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "databaseCode",
                    "type": "STRING",
                    "description": "Code identifying the database to which the dataset belongs.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://QuandlzakutynskyV1.p.rapidapi.com/getTimeSeriesData\"\nquerystring = {\"datasetCode\": \"\", \"apiKey\": \"\", \"databaseCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"QuandlzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://QuandlzakutynskyV1.p.rapidapi.com/getTimeSeriesData\"\nquerystring = {\"datasetCode\": \"\", \"apiKey\": \"\", \"databaseCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"QuandlzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getTimeSeriesMetaData",
            "url": "https://QuandlzakutynskyV1.p.rapidapi.com/getTimeSeriesMetaData",
            "description": "This call returns metadata from a specified time-series.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "databaseCode",
                    "type": "STRING",
                    "description": "Code identifying the database to which the dataset belongs.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "datasetCode",
                    "type": "STRING",
                    "description": "Code identifying the dataset.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://QuandlzakutynskyV1.p.rapidapi.com/getTimeSeriesMetaData\"\nquerystring = {\"databaseCode\": \"\", \"apiKey\": \"\", \"datasetCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"QuandlzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://QuandlzakutynskyV1.p.rapidapi.com/getTimeSeriesMetaData\"\nquerystring = {\"databaseCode\": \"\", \"apiKey\": \"\", \"datasetCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"QuandlzakutynskyV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}