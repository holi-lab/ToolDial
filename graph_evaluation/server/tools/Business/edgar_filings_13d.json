{
    "product_id": "api_b8ef0a08-fdc4-45e5-a66b-679df9a3d904",
    "tool_description": "An API to get up-to-date (and historical) Edgar Filing Data",
    "home_url": "https://rapidapi.com/iTrakData/api/edgar-filings-13d/",
    "name": "Edgar Filings (13D)",
    "title": "Edgar Filings (13D)",
    "pricing": "FREEMIUM",
    "tool_name": "Edgar Filings (13D)",
    "score": null,
    "host": "edgar-filings-13d.p.rapidapi.com",
    "api_list": [
        {
            "name": "Search Filings",
            "url": "https://edgar-filings-13d.p.rapidapi.com/filings/search",
            "description": "Search by term (form, description, company, etc...) for filings. Max 100 results.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "term",
                    "type": "STRING",
                    "description": "",
                    "default": "2019"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://edgar-filings-13d.p.rapidapi.com/filings/search\"\nquerystring = {\"term\": \"2019\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"edgar-filings-13d.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://edgar-filings-13d.p.rapidapi.com/filings/search\"\nquerystring = {\"term\": \"2019\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"edgar-filings-13d.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Historical Filings",
            "url": "https://edgar-filings-13d.p.rapidapi.com/filings/history",
            "description": "Search for Historical Data by date (ex. '2018-12-31')",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "",
                    "default": "2019-09-24"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://edgar-filings-13d.p.rapidapi.com/filings/history\"\nquerystring = {\"date\": \"2019-09-24\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"edgar-filings-13d.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://edgar-filings-13d.p.rapidapi.com/filings/history\"\nquerystring = {\"date\": \"2019-09-24\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"edgar-filings-13d.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Search by URL",
            "url": "https://edgar-filings-13d.p.rapidapi.com/filings",
            "description": "Fetches filing information from an SEC URL",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.sec.gov/Archives/edgar/data/1726960/000110465919051359/0001104659-19-051359-index.htm"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://edgar-filings-13d.p.rapidapi.com/filings\"\nquerystring = {\"url\": \"https://www.sec.gov/Archives/edgar/data/1726960/000110465919051359/0001104659-19-051359-index.htm\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"edgar-filings-13d.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://edgar-filings-13d.p.rapidapi.com/filings\"\nquerystring = {\"url\": \"https://www.sec.gov/Archives/edgar/data/1726960/000110465919051359/0001104659-19-051359-index.htm\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"edgar-filings-13d.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    ]
}