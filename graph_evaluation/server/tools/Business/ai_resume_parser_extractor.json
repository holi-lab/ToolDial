{
    "product_id": "api_182a84a7-63f3-425e-b863-1040c17944db",
    "tool_description": "An automated, robust CV/resume parsing service, processing PDFs from various input types and extracting key information for machine readability, with detailed status reporting, and the flexibility to support both synchronous and asynchronous operations with callback URL functionality.",
    "home_url": "https://rapidapi.com/one-api-one-api-default/api/ai-resume-parser-extractor/",
    "name": "AI Resume Parser & Extractor",
    "title": "AI Resume Parser & Extractor",
    "pricing": "FREEMIUM",
    "tool_name": "AI Resume Parser & Extractor",
    "score": {
        "avgServiceLevel": 89,
        "avgLatency": 28880,
        "avgSuccessRate": 88,
        "popularityScore": 9.5,
        "__typename": "Score"
    },
    "host": "ai-resume-parser-extractor.p.rapidapi.com",
    "api_list": [
        {
            "name": "pdf-Base64",
            "url": "https://ai-resume-parser-extractor.p.rapidapi.com/pdf-base64",
            "description": "**Endpoint:** `/pdf-base64`\n\n**Method:** `POST`\n\n**Description:**\n\nThe `/pdf-base64` endpoint processes a PDF file that is supplied in the form of a base64-encoded string within the request body. The service parses this file, extracts text from the CV or resume, and provides the structured data based on a predefined or custom schema.\n\nIf you have a custom schema for data extraction, you can include this as a JSON object in the 'customSchema' field within the request body.\n\nIn addition to synchronous processing, this endpoint also offers an asynchronous processing option. To utilize this, add a 'callbackURL' in the request query. The system will POST the result to this URL once the processing is completed.\n\nPlease note, the processing time can vary depending on the complexity and size of the document. Any occurring errors will be communicated using appropriate status codes and error messages.\n\n**Expected request body:**\n\n- 'base64' field: The base64-encoded string of the PDF file to be processed.\n- 'customSchema' field (optional): A JSON object specifying a custom extraction schema.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ai-resume-parser-extractor.p.rapidapi.com/pdf-base64\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-resume-parser-extractor.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ai-resume-parser-extractor.p.rapidapi.com/pdf-base64\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-resume-parser-extractor.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "pdfUri",
            "url": "https://ai-resume-parser-extractor.p.rapidapi.com/pdf-uri",
            "description": "**Endpoint:** `/pdf-uri`\n\n**Method:** `POST`\n\n**Description:**\n\nThe `/pdf-uri` endpoint is designed to fetch, parse and extract data from a CV or resume, that is available online in PDF format. The endpoint receives the PDF's URI as part of the request body, and extracts the text content from the document for further processing.\n\nThe service is capable of handling both predefined schemas and user-specified schemas. For a user-defined extraction schema, you can provide a JSON object in the 'customSchema' field within the request body.\n\nThis endpoint also supports asynchronous processing. If you want to use this feature, include a 'callbackURL' in the request query. The system will POST the result to this URL upon completion of the operation.\n\nPlease note that the service performance depends on the size and complexity of the document and the responsiveness of the source server hosting the PDF. All errors will be reported with suitable status codes and error messages.\n\n**Expected request body:**\n\n- 'uri' field: The URI of the PDF file to be processed.\n- 'customSchema' field (optional): A JSON object specifying a custom extraction schema.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "callbackURL",
                    "type": "STRING",
                    "description": "(Optional) The URL where the service will attempt to send the results to.",
                    "default": "https://webhook.site/3869759f-f9b9-4b31-b792-d9420bbf0f69"
                }
            ],
            "code": "import requests\n\nurl = \"https://ai-resume-parser-extractor.p.rapidapi.com/pdf-uri\"\nquerystring = {\"callbackURL\": \"https://webhook.site/3869759f-f9b9-4b31-b792-d9420bbf0f69\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-resume-parser-extractor.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ai-resume-parser-extractor.p.rapidapi.com/pdf-uri\"\nquerystring = {\"callbackURL\": \"https://webhook.site/3869759f-f9b9-4b31-b792-d9420bbf0f69\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-resume-parser-extractor.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "pdfUpload",
            "url": "https://ai-resume-parser-extractor.p.rapidapi.com/pdf-upload",
            "description": "**Endpoint:** `/pdf-upload`\n\n**Method:** `POST`\n\n**Description:**\n\nThe `/pdf-upload` endpoint enables the user to upload a CV or resume in PDF format for data extraction. The endpoint requires a multipart/form-data POST request, where the uploaded PDF file should be included in the 'file' field.\n\nThe endpoint is designed to comprehensively parse the PDF file, extracting the text and processing it according to predefined or user-specified schemas. The extracted text from the document will be processed to extract structured information for further use.\n\nFor user-specified extraction criteria, you can provide a JSON object in the 'customSchema' field within the form data. This schema should outline the specific fields of interest.\n\nThe service can also handle asynchronous processing by using a 'callbackURL' as a query parameter. When the job is complete, a response containing the extracted data will be POSTed to the callback URL provided.\n\nPlease note that the processing time will depend on the size and complexity of the uploaded PDF file. Errors during extraction or processing will be handled and reported back to the user with appropriate status codes and error messages.\n\n**Expected request body:**\n\n- 'file' field: The PDF file to be uploaded.\n- 'customSchema' field (optional): A JSON object specifying a custom extraction schema.\n- 'callbackURL' field (optional): A URL to which the results should be POSTed upon completion of the processing.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "customSchema",
                    "type": "STRING",
                    "description": "(Optional) A custom schema that you would like the AI to extract. This must be provided in JSON format. The shorter the schema the quicker the response will be. Defaults to the base schema.",
                    "default": "{\"title\":\"Resume CV\",\"type\":\"object\",\"properties\":{\"fullName\":{\"type\":\"string\",\"description\":\"The full name of the candidate\"},\"email\":{\"type\":\"string\",\"description\":\"The candidate email address\"}}}"
                },
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "The PDF file you want to parse or extract from.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://ai-resume-parser-extractor.p.rapidapi.com/pdf-upload\"\nquerystring = {\"customSchema\": \"{\\\"title\\\":\\\"Resume CV\\\",\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"fullName\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"The full name of the candidate\\\"},\\\"email\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"The candidate email address\\\"}}}\", \"file\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-resume-parser-extractor.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ai-resume-parser-extractor.p.rapidapi.com/pdf-upload\"\nquerystring = {\"customSchema\": \"{\\\"title\\\":\\\"Resume CV\\\",\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"fullName\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"The full name of the candidate\\\"},\\\"email\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"The candidate email address\\\"}}}\", \"file\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-resume-parser-extractor.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        }
    ]
}