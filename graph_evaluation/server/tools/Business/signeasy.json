{
    "tool_name": "Signeasy",
    "tool_description": "Signeasy offers easy-to-integrate eSignature APIs with well-defined [documentation](https://docs.signeasy.com/docs?utm_source=rapidapi&utm_medium=api-directory&utm_campaign=api-listing) for developers to quickly build eSignature capabilities within websites and applications, test them in a sandbox environment, and go live instantly. [Learn more about the Signeasy eSignature API suite](https://signeasy.com/api?utm_source=rapidapi&utm_medium=api-directory&utm_campaign=api-listing).\n\n## Get star...",
    "title": "Signeasy",
    "pricing": "FREE",
    "score": null,
    "home_url": "https://rapidapi.com/signeasy-api-signeasy-api-default/api/signeasy5/",
    "host": "signeasy5.p.rapidapi.com",
    "api_list": [
        {
            "name": "Fetch bulk signing status",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/bulk/sign/{request_id}/track/",
            "description": "This endpoint is used to track the status of the bulk signing requests.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "request_id",
                    "type": "string",
                    "description": "",
                    "default": "request_id\t"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/bulk/sign/{request_id}/track/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {}
        },
        {
            "name": "Create bulk signing request",
            "url": "https://signeasy5.p.rapidapi.com/rs/bulk/sign/",
            "description": "Generate an embeddable link to sign multiple documents in one go.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/rs/bulk/sign/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {}
        },
        {
            "name": "Fetch a signed envelope (envelope without fields)",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/signed/{signed_file_id}",
            "description": "Fetch details of a specific signing request which has been complete by passing the signed_file_id in the path parameter.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "signed_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "signed_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/signed/{signed_file_id}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Remind pending signers (envelope without fields)",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/{pending_file_id}/remind",
            "description": "Remind your signers about the signing request by passing the pending_file_id in the path parameter.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "pending_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "pending_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/{pending_file_id}/remind\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Fetch all envelopes (envelope without fields)",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/",
            "description": "List all the information of the signing requests that were sent out without pre-filling fields.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Download a pending envelope (envelope without fields)",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/{pending_file_id}/download",
            "description": "Download an incomplete signing request document by passing the pending_file_id in the path parameter.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "pending_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "pending_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/{pending_file_id}/download\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Create or send an envelope (envelope without fields)",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/",
            "description": "Send a signing request to your signers without having to fill any fields as the sender.\n\nThe signer/signers would have the freedom to sign anywhere in the document.\n\n**NOTE**: This API only supports signing requests on a single original file and not via an envelope.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Download certificate of a self signed document",
            "url": "https://signeasy5.p.rapidapi.com/v3/me/signed/{signed_file_id}/certificate/",
            "description": "Download the audit trail document and save it locally at your system.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "signed_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "signed_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/me/signed/{signed_file_id}/certificate/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Download a signed envelope with certificate (embedded sending)",
            "url": "https://signeasy5.p.rapidapi.com/v3/embedded/signed/{signed_file_id}/download",
            "description": "Download a signed envelope along with the audit trail by passing appropriate values to the path parameter\n\nSupported values for **type**: \"***split***\" and \"***merged***\"\n\nSupported values for **include_certificate**: (0 and 1) / (***true*** and ***false***) \\[Boolean\\]",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "signed_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "signed_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/embedded/signed/{signed_file_id}/download\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Fetch a signed envelope (embedded sending)",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/embedded/signed/{signed_file_id}",
            "description": "Fetch details of a specific signing request which has been complete by passing the signed_file_id in the path parameter.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "signed_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "signed_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/embedded/signed/{signed_file_id}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Download a pending envelope",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/embedded/{pending_file_id}/download/",
            "description": "Download the document sent for e-signature using embedded sending by passing the pending_file_id in the path parameter.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "pending_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "pending_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/embedded/{pending_file_id}/download/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Remind the pending signers",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/embedded/{pending_file_id}/remind/",
            "description": "Send a reminder notification email to your signers by passing the pending_file_id in the path parameters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "pending_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "pending_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/embedded/{pending_file_id}/remind/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Fetch an embedded signing URL",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/embedded/{pending_file_id}/signing/url/",
            "description": "Fetch the signing URL for your signers once the preview process is complete.\n\n**NOTE**: For this API to work, please set the ***embedded_signing*** parameter to either 1 or true(boolean)",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "pending_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "pending_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/embedded/{pending_file_id}/signing/url/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Delete a signed envelope",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/envelope/signed/{signed_file_id}",
            "description": "Delete a particular signing request by passing the *signed_file_id* in the path parameter.\n\n**NOTE**: Once a signed envelope is deleted it can no longer be accessed by Signeasy.",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "signed_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "signed_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/envelope/signed/{signed_file_id}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Fetch a signed envelope",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/envelope/signed/{signed_file_id}",
            "description": "Fetch details of a specific signing request which has been complete by passing the signed_file_id in the path parameter.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "signed_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "signed_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/envelope/signed/{signed_file_id}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Fetch signed id using pending id",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/envelope/signed/pending/{pending_file_id}",
            "description": "Fetch the *signed_file_id* from a *pending_file_id* once a signing request is complete.\n\nThe *signed_file_id* is mapped to the ***id*** key in the response.\n\n**NOTE**: This API will return 200 OK only if the signing request is complete/finalised.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "pending_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "pending_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/envelope/signed/pending/{pending_file_id}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Download an original from signed envelope",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/envelope/signed/{signed_file_id}/{original_file_id}/download/",
            "description": "Download a signed envelope along with the audit trail by passing appropriate values to the path parameter\n\nSupported values for **type**: \"***split***\" and \"***merged***\"\n\nSupported values for **include_certificate**: (0 and 1) / (***true*** and ***false***) \\[Boolean\\]",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "signed_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "signed_file_id"
                },
                {
                    "name": "original_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "original_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/envelope/signed/{signed_file_id}/{original_file_id}/download/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Cancel a signature request",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/envelope/{pending_file_id}/cancel",
            "description": "Cancel/Void a particular envelope signing request.\n\n**NOTE**: Once, an envelope is cancelled/voided it **CANNOT** be used again.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "pending_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "pending_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/envelope/{pending_file_id}/cancel\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Remind pending signers",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/envelope/{pending_file_id}/remind/",
            "description": "Send a reminder notification email to your signers by passing the pending_file_id in the path parameters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "pending_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "pending_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/envelope/{pending_file_id}/remind/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Download pending envelope documents as merged",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/envelope/{pending_file_id}/download/merged/",
            "description": "Download a particular envelope by passing the pending_file_id in the path parameter.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "pending_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "pending_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/envelope/{pending_file_id}/download/merged/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Fetch all envelopes",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/envelope/",
            "description": "Fetch the list of all your envelope data which aren't signed yet.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/envelope/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Fetch all templates",
            "url": "https://signeasy5.p.rapidapi.com/v3/template/",
            "description": "Fetches all templates.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/template/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": [
                {
                    "count": 0,
                    "files": [
                        {
                            "created_time": 0,
                            "last_modified_time": 0,
                            "id": 0,
                            "name": "Try it now - demo.pdf"
                        }
                    ]
                }
            ],
            "headers": {},
            "schema": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer",
                            "description": "",
                            "default": 1
                        },
                        "files": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "created_time": {
                                        "type": "integer",
                                        "description": "",
                                        "default": 1645764900
                                    },
                                    "last_modified_time": {
                                        "type": "integer",
                                        "description": "",
                                        "default": 1645764900
                                    },
                                    "id": {
                                        "type": "integer",
                                        "description": "",
                                        "default": 55645200
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "",
                                        "default": "Try it now - demo.pdf"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Fetch a template",
            "url": "https://signeasy5.p.rapidapi.com/v3/template/{template_id}",
            "description": "Fetch a specific template.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "template_id",
                    "type": "STRING",
                    "description": "",
                    "default": "template_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/template/{template_id}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Delete an original document",
            "url": "https://signeasy5.p.rapidapi.com/v3/original/{original_file_id}",
            "description": "Delete an original document from Signeasy.\n\n**NOTE**: Once, any document is deleted from Signeasy, it can no longer be used for e-signatures.",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "original_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "original_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/original/{original_file_id}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Fetch all originals",
            "url": "https://signeasy5.p.rapidapi.com/v3/original/",
            "description": "List all your uploaded originals in order to retrieve all your document information.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/original/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "count": 0,
                "files": [
                    {
                        "created_time": 0,
                        "last_modified_time": 0,
                        "id": 0,
                        "name": "Try it now - demo.pdf"
                    }
                ]
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "description": "",
                        "default": 1
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "created_time": {
                                    "type": "integer",
                                    "description": "",
                                    "default": 1645764900
                                },
                                "last_modified_time": {
                                    "type": "integer",
                                    "description": "",
                                    "default": 1645764900
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "",
                                    "default": 55645200
                                },
                                "name": {
                                    "type": "string",
                                    "description": "",
                                    "default": "Try it now - demo.pdf"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Fetch an original",
            "url": "https://signeasy5.p.rapidapi.com/v3/original/{original_file_id}/",
            "description": "Fetch a specific original document details by specifying the original_id in the path parameter.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "original_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "original_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/original/{original_file_id}/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Download an original document",
            "url": "https://signeasy5.p.rapidapi.com/v3/original/{original_file_id}/download",
            "description": "Download the original document back to your local machine by specifying the original_id.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "original_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "original_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/original/{original_file_id}/download\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Upload an original",
            "url": "https://signeasy5.p.rapidapi.com/v3/original/",
            "description": "Easily import documents from your local machine onto Signeasy in order to request them for e-signatures.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "rename_if_exists",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/original/\"\nquerystring = {\"name\": name, \"rename_if_exists\": rename_if_exists, \"file\": file}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Fetch user",
            "url": "https://signeasy5.p.rapidapi.com/v3/me/",
            "description": "Retrieve information about the current authorized user. You will receive the user details even if the user has not verified their email address or if the account is not active.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/me/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Fetch embedded signing link (envelope without fields)",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/{pending_file_id}/signing/url",
            "description": "Fetch an envelope signing url per signer.\n\n**NOTE**: This API works only if the\u00a0***embedded_signing***\u00a0parameter is set to\u00a0**1/true**",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "pending_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "pending_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/{pending_file_id}/signing/url\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Cancel a signature request (envelope without fields)",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/{pending_file_id}/cancel",
            "description": "Cancel or Void a signing request by passing the pending_file_id in the request.\n\n**NOTE**: Once any signing request is cancelled it can never be used again.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "pending_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "pending_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/{pending_file_id}/cancel\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Fetch an envelope (envelope without fields)",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/{pending_file_id}",
            "description": "List information of a particular signing request without fields by passing the pending_file_id in the path parameter.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "pending_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "pending_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/{pending_file_id}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Fetch embedded signing URL",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/envelope/{pending_file_id}/signing/url/",
            "description": "Fetch an envelope signing url per signer.\n\n**NOTE**: This API works only if the ***embedded_signing*** parameter is set to **1/true**",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "pending_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "pending_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/envelope/{pending_file_id}/signing/url/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Download certificate of a signed envelope",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/envelope/signed/{signed_file_id}/certificate",
            "description": "Download a signed envelope along with the audit trail by passing appropriate values to the path parameter\n\nSupported values for **type**: \"***split***\" and \"***merged***\"\n\nSupported values for **include_certificate**: (0 and 1) / (***true*** and ***false***) \\[Boolean\\]",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "signed_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "signed_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/envelope/signed/{signed_file_id}/certificate\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Create or send an envelope",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/envelope/",
            "description": "Send upto 20 documents(envelope) which can be a combination of both originals and templates to upto 40 signers and upto 35 users in cc all within a single envelope request.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/envelope/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "count": 0,
                "files": [
                    {
                        "created_time": 0,
                        "last_modified_time": 0,
                        "id": 0,
                        "name": "Try it now - demo.pdf"
                    }
                ]
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "description": "",
                        "default": 1
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "created_time": {
                                    "type": "integer",
                                    "description": "",
                                    "default": 1645764900
                                },
                                "last_modified_time": {
                                    "type": "integer",
                                    "description": "",
                                    "default": 1645764900
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "",
                                    "default": 55645200
                                },
                                "name": {
                                    "type": "string",
                                    "description": "",
                                    "default": "Try it now - demo.pdf"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Fetch all signed envelopes",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/envelope/signed/",
            "description": "List all the information of your signing requests which have been completed/finalised by all your signers.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/envelope/signed/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Fetch embedded self signing URL",
            "url": "https://signeasy5.p.rapidapi.com/v3/me/embedded/url/",
            "description": "Self sign the documents using our embedded signing URL from within your application.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/me/embedded/url/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Download pending envelope documents as split",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/envelope/{pending_file_id}/download/split",
            "description": "Download pending envelope documents as individual files.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "pending_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "pending_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/envelope/{pending_file_id}/download/split\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Fetch a self signed document",
            "url": "https://signeasy5.p.rapidapi.com/v3/me/signed/{signed_file_id}",
            "description": "Fetch specific details of a self signed document by passing the signed_id in the path.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "signed_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "signed_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/me/signed/{signed_file_id}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Fetch an envelope",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/envelope/{pending_file_id}",
            "description": "Fetch the list of a particular envelope by passing the pending_file_id in the path parameter.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "pending_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "pending_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/envelope/{pending_file_id}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Delete a self signed document",
            "url": "https://signeasy5.p.rapidapi.com/v3/me/signed/{signed_file_id}",
            "description": "Delete a completed self signed document from Signeasy.\n\n**NOTE**: If a signed document is deleted, it can no longer be accessible through Signeasy.",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "signed_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "signed_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/me/signed/{signed_file_id}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Fetch all self signed documents",
            "url": "https://signeasy5.p.rapidapi.com/v3/me/signed/",
            "description": "Fetch all the information from your self signed documents.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/me/signed/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Fetch all signed envelope (envelope without fields)",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/signed/",
            "description": "List all the information of your signing requests which have been completed/finalised by all your signers.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/signed/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Download a signed envelope with certificate",
            "url": "https://signeasy5.p.rapidapi.com/v3/signed/{signed_file_id}/download",
            "description": "Download a signed envelope along with the audit trail by passing appropriate values to the path parameter\n\nSupported values for **type**: \"***split***\" and \"***merged***\"\n\nSupported values for **include_certificate**: (0 and 1) / (***true*** and ***false***) \\[Boolean\\]",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "signed_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "signed_file_id"
                },
                {
                    "name": "include_certificate",
                    "type": "STRING",
                    "description": "boolean",
                    "default": "true"
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "'split' or 'merged'",
                    "default": "merged"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/signed/{signed_file_id}/download\"\nquerystring = {\"include_certificate\": include_certificate, \"type\": type}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Fetch all signed envelopes (embedded sending)",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/embedded/signed/",
            "description": "List all the information of your signing requests which have been completed/finalised by all your signers.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/embedded/signed/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Download a self signed document",
            "url": "https://signeasy5.p.rapidapi.com/v3/me/signed/{signed_file_id}/download",
            "description": "Download the self signed document and save it locally at your system.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "signed_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "signed_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/me/signed/{signed_file_id}/download\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Fetch embedded sending URL",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/embedded/url/",
            "description": "Get a document preview URL to place the fields on the document before sending them for e-signature purposes.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/embedded/url/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Delete a signed envelope (embedded sending)",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/embedded/signed/{signed_file_id}",
            "description": "Delete a particular signing request by passing the *signed_file_id* in the path parameter.\n\n**NOTE**: Once a signed envelope is deleted it can no longer be accessed by Signeasy.",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "signed_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "signed_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/embedded/signed/{signed_file_id}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Delete Signed document (envelope without fields)",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/signed/{signed_file_id}",
            "description": "Delete a particular signing request by passing the *signed_file_id* in the path parameter.\n\n**NOTE**: Once a signed envelope is deleted it can no longer be accessed by Signeasy.",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "signed_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "signed_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/signed/{signed_file_id}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Download certificate of a signed envelope (embedded sending)",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/embedded/signed/{signed_file_id}/certificate",
            "description": "Download a signed envelope along with the audit trail by passing appropriate values to the path parameter\n\nSupported values for **type**: \"***split***\" and \"***merged***\"\n\nSupported values for **include_certificate**: (0 and 1) / (***true*** and ***false***) \\[Boolean\\]",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "signed_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "signed_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/embedded/signed/{signed_file_id}/certificate\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Delete a template",
            "url": "https://signeasy5.p.rapidapi.com/v3/template/{template_id}",
            "description": "Deletes a specific template.",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "template_id",
                    "type": "STRING",
                    "description": "",
                    "default": "template_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/template/{template_id}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Fetch a pending envelope",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/embedded/{pending_file_id}",
            "description": "Fetch the details of a specific embedded sending request by passing the pending_file_id in the path parameter.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "pending_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "pending_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/embedded/{pending_file_id}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Cancel a signature request (embedded sending)",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/embedded/{pending_file_id}/cancel/",
            "description": "Send a reminder notification email to your signers by passing the pending_file_id in the path parameters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "pending_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "pending_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/embedded/{pending_file_id}/cancel/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Fetch all pending envelopes",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/embedded/",
            "description": "Fetch the list of all the incomplete documents sent for e-signature using embedded sending.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/embedded/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Create bulk signing request",
            "url": "https://signeasy5.p.rapidapi.com/rs/bulk/sign/",
            "description": "Generate an embeddable link to sign multiple documents in one go.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/rs/bulk/sign/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/rs/bulk/sign/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Remind pending signers (envelope without fields)",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/pending_file_id/remind",
            "description": "Remind your signers about the signing request by passing the pending_file_id in the path parameter.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "pending_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "pending_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/pending_file_id/remind\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/{pending_file_id}/remind\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Create or send an envelope (envelope without fields)",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/",
            "description": "Send a signing request to your signers without having to fill any fields as the sender.\n\nThe signer/signers would have the freedom to sign anywhere in the document.\n\n**NOTE**: This API only supports signing requests on a single original file and not via an envelope.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Remind the pending signers",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/embedded/pending_file_id/remind/",
            "description": "Send a reminder notification email to your signers by passing the pending_file_id in the path parameters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "pending_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "pending_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/embedded/pending_file_id/remind/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/embedded/{pending_file_id}/remind/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Fetch an embedded signing URL",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/embedded/pending_file_id/signing/url/",
            "description": "Fetch the signing URL for your signers once the preview process is complete.\n\n**NOTE**: For this API to work, please set the ***embedded_signing*** parameter to either 1 or true(boolean)",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "pending_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "pending_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/embedded/pending_file_id/signing/url/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/embedded/{pending_file_id}/signing/url/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Cancel a signature request",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/envelope/pending_file_id/cancel",
            "description": "Cancel/Void a particular envelope signing request.\n\n**NOTE**: Once, an envelope is cancelled/voided it **CANNOT** be used again.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "pending_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "pending_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/envelope/pending_file_id/cancel\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/envelope/{pending_file_id}/cancel\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Remind pending signers",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/envelope/pending_file_id/remind/",
            "description": "Send a reminder notification email to your signers by passing the pending_file_id in the path parameters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "pending_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "pending_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/envelope/pending_file_id/remind/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/envelope/{pending_file_id}/remind/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Upload an original",
            "url": "https://signeasy5.p.rapidapi.com/v3/original/",
            "description": "Easily import documents from your local machine onto Signeasy in order to request them for e-signatures.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "rename_if_exists",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/original/\"\nquerystring = {\"name\": \"\", \"rename_if_exists\": \"1\", \"file\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/original/\"\nquerystring = {\"name\": \"\", \"rename_if_exists\": \"1\", \"file\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Fetch embedded signing link (envelope without fields)",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/pending_file_id/signing/url",
            "description": "Fetch an envelope signing url per signer.\n\n**NOTE**: This API works only if the\u00a0***embedded_signing***\u00a0parameter is set to\u00a0**1/true**",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "pending_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "pending_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/pending_file_id/signing/url\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/{pending_file_id}/signing/url\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Cancel a signature request (envelope without fields)",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/pending_file_id/cancel",
            "description": "Cancel or Void a signing request by passing the pending_file_id in the request.\n\n**NOTE**: Once any signing request is cancelled it can never be used again.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "pending_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "pending_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/pending_file_id/cancel\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/{pending_file_id}/cancel\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Fetch embedded signing URL",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/envelope/pending_file_id/signing/url/",
            "description": "Fetch an envelope signing url per signer.\n\n**NOTE**: This API works only if the ***embedded_signing*** parameter is set to **1/true**",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "pending_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "pending_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/envelope/pending_file_id/signing/url/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/envelope/{pending_file_id}/signing/url/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Create or send an envelope",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/envelope/",
            "description": "Send upto 20 documents(envelope) which can be a combination of both originals and templates to upto 40 signers and upto 35 users in cc all within a single envelope request.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/envelope/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/envelope/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "description": "",
                        "default": 1
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "created_time": {
                                    "type": "integer",
                                    "description": "",
                                    "default": 1645764900
                                },
                                "last_modified_time": {
                                    "type": "integer",
                                    "description": "",
                                    "default": 1645764900
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "",
                                    "default": 55645200
                                },
                                "name": {
                                    "type": "string",
                                    "description": "",
                                    "default": "Try it now - demo.pdf"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Fetch embedded self signing URL",
            "url": "https://signeasy5.p.rapidapi.com/v3/me/embedded/url/",
            "description": "Self sign the documents using our embedded signing URL from within your application.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/me/embedded/url/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/me/embedded/url/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Fetch embedded sending URL",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/embedded/url/",
            "description": "Get a document preview URL to place the fields on the document before sending them for e-signature purposes.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/embedded/url/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/embedded/url/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Cancel a signature request (embedded sending)",
            "url": "https://signeasy5.p.rapidapi.com/v3/rs/embedded/pending_file_id/cancel/",
            "description": "Send a reminder notification email to your signers by passing the pending_file_id in the path parameters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "pending_file_id",
                    "type": "STRING",
                    "description": "",
                    "default": "pending_file_id"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/embedded/pending_file_id/cancel/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://signeasy5.p.rapidapi.com/v3/rs/embedded/{pending_file_id}/cancel/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"signeasy5.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        }
    ]
}