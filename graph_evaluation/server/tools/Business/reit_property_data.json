{
    "tool_name":"REIT Property Data",
    "tool_description":"Property level data and analytics for publicly traded Real Estate owned/operated by Real Estate Investment Trusts (REITs)",
    "title":"REIT Property Data",
    "pricing":"FREEMIUM",
    "score":{
        "avgServiceLevel":100,
        "avgLatency":7031,
        "avgSuccessRate":100,
        "popularityScore":8.3,
        "__typename":"Score"
    },
    "home_url":"https://rapidapi.com/reit-data-market-reit-data-market-default/api/reit-property-data1/",
    "host":"reit-property-data1.p.rapidapi.com",
    "api_list":[
        {
            "name":"property-info-basic",
            "url":"https://reit-property-data1.p.rapidapi.com/property-info-basic",
            "description":"Get basic attributes for a property.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"property_id",
                    "type":"NUMBER",
                    "description":"",
                    "default":"70"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://reit-property-data1.p.rapidapi.com/property-info-basic\"\nquerystring = {\"property_id\": property_id}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"reit-property-data1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "key1":"value",
                "key2":"value"
            },
            "headers":{},
            "schema":{}
        },
        {
            "name":"reit-index",
            "url":"https://reit-property-data1.p.rapidapi.com/reit-index",
            "description":"Get a list of all available data including which REITs are available, the dates of collection, and the property types found in those REITs. No parameters required.",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://reit-property-data1.p.rapidapi.com/reit-index\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"reit-property-data1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "key1":"value",
                "key2":"value"
            },
            "headers":{},
            "schema":{}
        },
        {
            "name":"property-info-premium",
            "url":"https://reit-property-data1.p.rapidapi.com/property-info-premium",
            "description":"Get premium attributes for a property.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"property_id",
                    "type":"NUMBER",
                    "description":"",
                    "default":"70"
                }
            ],
            "optional_parameters":[
                {
                    "name":"attribute",
                    "type":"STRING",
                    "description":"The premium attribute to query. If no attribute is provided, a list of valid attributes is returned.",
                    "default":"location"
                }
            ],
            "code":"import requests\n\nurl = \"https://reit-property-data1.p.rapidapi.com/property-info-premium\"\nquerystring = {\"attribute\": attribute, \"property_id\": property_id}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"reit-property-data1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "key1":"value",
                "key2":"value"
            },
            "headers":{},
            "schema":{}
        },
        {
            "name":"feature-search",
            "url":"https://reit-property-data1.p.rapidapi.com/feature-search",
            "description":"Search for features within distance of a latitude/longitude coordinate pair.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"lon",
                    "type":"NUMBER",
                    "description":"",
                    "default":"-73.9855"
                },
                {
                    "name":"lat",
                    "type":"NUMBER",
                    "description":"",
                    "default":"40.7580"
                }
            ],
            "optional_parameters":[
                {
                    "name":"distance",
                    "type":"NUMBER",
                    "description":"Distance is in meters. Defaults to 5000.",
                    "default":"1000"
                },
                {
                    "name":"feature_type",
                    "type":"STRING",
                    "description":"",
                    "default":"starbucks"
                }
            ],
            "code":"import requests\n\nurl = \"https://reit-property-data1.p.rapidapi.com/feature-search\"\nquerystring = {\"lon\": lon, \"distance\": distance, \"feature_type\": feature_type, \"lat\": lat}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"reit-property-data1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "key1":"value",
                "key2":"value"
            },
            "headers":{},
            "schema":{}
        },
        {
            "name":"property",
            "url":"https://reit-property-data1.p.rapidapi.com/property",
            "description":"Get IDs of properties. Geography and calendar filters are optional.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"reit",
                    "type":"STRING",
                    "description":"",
                    "default":"aat"
                }
            ],
            "optional_parameters":[
                {
                    "name":"geo_level",
                    "type":"STRING",
                    "description":"Must be used with `geo_value` parameter. Used to specify a geography level to restrict search. Valid `geo_level` values include `zip_code`,`state`,`country`, `countygeoid`, and `msageoid`. Example's of different geo_value values are below.\n\nNote - US states and Canadian provinces are referred to by 2 character codes. All other states and provinces use full name designation\n\nExample usage\n- `geo_level = zip_code` and `geo_value = 10010` to get all properties for zip code in NYC\n- `geo_level = state` and `geo_value = NY` to get all properties for a REIT in New York state\n- `geo_level = country` and `geo_value = US` to get all US properties for a REIT\n",
                    "default":"country"
                },
                {
                    "name":"geo_value",
                    "type":"STRING",
                    "description":"Must be used with `geo_level` parameter. Used to specify a geography level to restrict search. Valid `geo_level` values include `zip_code`, `state`,`country`,`countygeoid` and `msageoid`.  Examples of different geo_value values are below.\n\nNote - US states and Canadian provinces are referred to by 2 character codes. All other states and provinces use full name designation\n\nExample usage\n- `geo_level = zip_code` and `geo_value = 10010` to get all properties for zip code in NYC\n- `geo_level = state` and `geo_value = NY` to get all properties for a REIT in New York state\n- `geo_level = country` and `geo_value = US` to get all US properties for a REIT\n",
                    "default":"US"
                },
                {
                    "name":"qy",
                    "type":"STRING",
                    "description":"This is the Quarter & Year (QY) the data was scraped. Use this parameter to query a specifc collection of data. If no QY is provided, defaults to latest data collection for specified REIT.",
                    "default":"Q22022"
                }
            ],
            "code":"import requests\n\nurl = \"https://reit-property-data1.p.rapidapi.com/property\"\nquerystring = {\"geo_level\": geo_level, \"geo_value\": geo_value, \"qy\": qy, \"reit\": reit}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"reit-property-data1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "key1":"value",
                "key2":"value"
            },
            "headers":{},
            "schema":{}
        }
    ]
}