{
    "product_id": "53aa5780e4b00287471a1e25",
    "tool_description": "Signatures. Made simple.\r\nGetting documents signed has never been simpler. We've removed paper entirely from the process and built tools to facilitate document signing, tracking and management. Notifications keep you apprised of the signer's activity and our audit trail logs it. Once completed, signed documents are securely stored and accessible from the cloud so you can always get to your important documents.\r\n\r\nSharing is just as easy. With HelloSign you can share templates and signed documents with your team, other internal departments and even outside counsel, so everyone is on the same paperless page.",
    "home_url": "https://rapidapi.com/hellosign/api/hellosign/",
    "name": "HelloSign",
    "title": "HelloSign",
    "pricing": "FREE",
    "tool_name": "HelloSign",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 321,
        "avgSuccessRate": 0,
        "popularityScore": 0,
        "__typename": "Score"
    },
    "host": "community-hellosign.p.rapidapi.com",
    "api_list": [
        {
            "name": "Remove access to Reusable Form",
            "url": "https://community-hellosign.p.rapidapi.com/reusable_form/remove_user/{reusable_form_id}",
            "description": "Removes the specified Account's access to the specified ReusableForm.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "reusable_form_id",
                    "type": "STRING",
                    "description": "The id of the ReusableForm to remove the Account's access to.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "account_id",
                    "type": "STRING",
                    "description": "The id or email address of the Account to remove access to the ReusableForm. The account id prevails if both are provided.",
                    "default": ""
                },
                {
                    "name": "email_address",
                    "type": "STRING",
                    "description": "The id or email address of the Account to remove access to the ReusableForm. The account id prevails if both are provided.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://community-hellosign.p.rapidapi.com/reusable_form/remove_user/{reusable_form_id}\"\nquerystring = {\"account_id\": \"\", \"email_address\": \"\", \"reusable_form_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-hellosign.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-hellosign.p.rapidapi.com/reusable_form/remove_user/{reusable_form_id}\"\nquerystring = {\"account_id\": \"\", \"email_address\": \"\", \"reusable_form_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-hellosign.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Create team",
            "url": "https://community-hellosign.p.rapidapi.com/team/create",
            "description": "Creates a new Team and makes you a member. You must not currently belong to a Team to invoke.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "The name of your Team",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://community-hellosign.p.rapidapi.com/team/create\"\nquerystring = {\"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-hellosign.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-hellosign.p.rapidapi.com/team/create\"\nquerystring = {\"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-hellosign.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Post account",
            "url": "https://community-hellosign.p.rapidapi.com/account",
            "description": "Updates the properties and settings of your Account.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "callback_url",
                    "type": "STRING",
                    "description": "The URL that HelloSign should POST events to.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://community-hellosign.p.rapidapi.com/account\"\nquerystring = {\"callback_url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-hellosign.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-hellosign.p.rapidapi.com/account\"\nquerystring = {\"callback_url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-hellosign.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Post team",
            "url": "https://community-hellosign.p.rapidapi.com/team",
            "description": "Updates the name of your Team. If you do not have a Team, a new Team is created.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "The name of your Team",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://community-hellosign.p.rapidapi.com/team\"\nquerystring = {\"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-hellosign.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-hellosign.p.rapidapi.com/team\"\nquerystring = {\"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-hellosign.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Delete team",
            "url": "https://community-hellosign.p.rapidapi.com/team/destroy",
            "description": "Deletes your Team. Can only be invoked when you have a Team with only one member (yourself).",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://community-hellosign.p.rapidapi.com/team/destroy\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-hellosign.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-hellosign.p.rapidapi.com/team/destroy\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-hellosign.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Give access to Reusable Form",
            "url": "https://community-hellosign.p.rapidapi.com/ /reusable_form/add_user/{reusable_form_id}",
            "description": "Gives the specified Account access to the specified ReusableForm. The specified Account must be a part of your Team.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "reusable_form_id",
                    "type": "STRING",
                    "description": "The id of the ReusableForm to give the Account access to.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "account_id",
                    "type": "STRING",
                    "description": "The id or email address of the Account to give access to the ReusableForm. The account id prevails if both are provided.",
                    "default": ""
                },
                {
                    "name": "email_address",
                    "type": "STRING",
                    "description": "The id or email address of the Account to give access to the ReusableForm. The account id prevails if both are provided.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://community-hellosign.p.rapidapi.com/ /reusable_form/add_user/{reusable_form_id}\"\nquerystring = {\"account_id\": \"\", \"email_address\": \"\", \"reusable_form_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-hellosign.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-hellosign.p.rapidapi.com/ /reusable_form/add_user/{reusable_form_id}\"\nquerystring = {\"account_id\": \"\", \"email_address\": \"\", \"reusable_form_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-hellosign.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Remove member",
            "url": "https://community-hellosign.p.rapidapi.com/team/remove_member",
            "description": "Removes a user from your Team. If the user had an outstanding invitation to your Team the invitation will be expired.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "account_id",
                    "type": "STRING",
                    "description": "The id or email address of the Account of the user to remove from your Team. The account id prevails if both are provided.",
                    "default": ""
                },
                {
                    "name": "email_address",
                    "type": "STRING",
                    "description": "The id or email address of the Account of the user to remove from your Team. The account id prevails if both are provided.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://community-hellosign.p.rapidapi.com/team/remove_member\"\nquerystring = {\"account_id\": \"\", \"email_address\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-hellosign.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-hellosign.p.rapidapi.com/team/remove_member\"\nquerystring = {\"account_id\": \"\", \"email_address\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-hellosign.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Add member",
            "url": "https://community-hellosign.p.rapidapi.com/team/add_member",
            "description": "Adds or invites a user (specified using the email_address parameter) to your Team. If the user does not currently have a HelloSign Account, a new one will be created for them. If the user currently has a paid subscription, they will not automatically join the Team but instead will be sent an invitation to join. If a user is already a part of another Team, a \"team_invite_failed\" error will be returned.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "account_id",
                    "type": "STRING",
                    "description": "The id or email address of the Account of the user to invite to your Team. The account id prevails if both are provided.",
                    "default": ""
                },
                {
                    "name": "email_address",
                    "type": "STRING",
                    "description": "The id or email address of the Account of the user to invite to your Team. The account id prevails if both are provided.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://community-hellosign.p.rapidapi.com/team/add_member\"\nquerystring = {\"account_id\": \"\", \"email_address\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-hellosign.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-hellosign.p.rapidapi.com/team/add_member\"\nquerystring = {\"account_id\": \"\", \"email_address\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-hellosign.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Send signature request",
            "url": "https://community-hellosign.p.rapidapi.com/signature_request/send",
            "description": "Creates and sends a new SignatureRequest with the submitted documents. If form_fields_per_document is not specified, a signature page will be affixed where all signers will be required to add their signature, signifying their agreement to all contained documents.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file[]",
                    "type": "STRING",
                    "description": "The file(s) to send for signature.",
                    "default": ""
                },
                {
                    "name": "signers[%i%][name]",
                    "type": "STRING",
                    "description": "The name of the signer. %i% is an integer that should be unique for each signer.",
                    "default": ""
                },
                {
                    "name": "signers[%i%][email_address]",
                    "type": "STRING",
                    "description": "The email address of the signer. %i% is an integer that should be unique for each signer.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "test_mode",
                    "type": "STRING",
                    "description": "Whether this is a test, the signature request will not be legally binding if set to 1. Defaults to 0.",
                    "default": ""
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "The title you want to assign to the SignatureRequest.",
                    "default": ""
                },
                {
                    "name": "subject",
                    "type": "STRING",
                    "description": "The subject in the email that will be sent to the signers.",
                    "default": ""
                },
                {
                    "name": "message",
                    "type": "STRING",
                    "description": "The custom message in the email that will be sent to the signers.",
                    "default": ""
                },
                {
                    "name": "signers[%i%][order]optional",
                    "type": "STRING",
                    "description": "The order the signer is required to sign in. %i% is an integer that should be unique for each signer.",
                    "default": ""
                },
                {
                    "name": "cc_email_addresses[]optional",
                    "type": "STRING",
                    "description": "The email addresses that should be CCed.",
                    "default": ""
                },
                {
                    "name": "form_fields_per_documentoptional",
                    "type": "STRING",
                    "description": "The fields that should appear on the document, expressed as a serialized JSON data structure which is a list of lists of the form fields. One list is required for each file[]. In the case of a file with no fields, an empty list must be specified. Each field must identify which signer is supposed to fill out the field, which type of field it is, its location and size, and if it is required. The signer is identified by the offset (%i%) in the \"signers\" parameter. ReusableForm objects contain fields of the this type in \"form_fields\".",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://community-hellosign.p.rapidapi.com/signature_request/send\"\nquerystring = {\"test_mode\": \"\", \"file[]\": \"\", \"title\": \"\", \"subject\": \"\", \"message\": \"\", \"signers[%i%][name]\": \"\", \"signers[%i%][email_address]\": \"\", \"signers[%i%][order]optional\": \"\", \"cc_email_addresses[]optional\": \"\", \"form_fields_per_documentoptional\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-hellosign.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-hellosign.p.rapidapi.com/signature_request/send\"\nquerystring = {\"test_mode\": \"\", \"file[]\": \"\", \"title\": \"\", \"subject\": \"\", \"message\": \"\", \"signers[%i%][name]\": \"\", \"signers[%i%][email_address]\": \"\", \"signers[%i%][order]optional\": \"\", \"cc_email_addresses[]optional\": \"\", \"form_fields_per_documentoptional\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-hellosign.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Send signature request with Reusable Form",
            "url": "https://community-hellosign.p.rapidapi.com/signature_request/send_with_reusable_form",
            "description": "Creates and sends a new SignatureRequest based off of the ReusableForm specified with the reusable_form_id parameter.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "reusable_form_id",
                    "type": "STRING",
                    "description": "The id of the ReusableForm to use when creating the SignatureRequest.",
                    "default": ""
                },
                {
                    "name": "signers[%RoleName%][name]",
                    "type": "STRING",
                    "description": "The name of the signer filling the role of RoleName.",
                    "default": ""
                },
                {
                    "name": "signers[%RoleName%][email_address]",
                    "type": "STRING",
                    "description": "The email address of the signer filling the role of RoleName.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "test_mode",
                    "type": "STRING",
                    "description": "Whether this is a test, the signature request will not be legally binding if set to 1. Defaults to 0.",
                    "default": ""
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "The title you want to assign to the SignatureRequest.",
                    "default": ""
                },
                {
                    "name": "subject",
                    "type": "STRING",
                    "description": "The subject in the email that will be sent to the signers.",
                    "default": ""
                },
                {
                    "name": "message",
                    "type": "STRING",
                    "description": "The custom message in the email that will be sent to the signers.",
                    "default": ""
                },
                {
                    "name": "ccs[%RoleName%][email_address]",
                    "type": "STRING",
                    "description": "The email address of the CC filling the role of RoleName. Required when a CC role exists for the ReusableForm.",
                    "default": ""
                },
                {
                    "name": "custom_fields[%CustomFieldName%]",
                    "type": "STRING",
                    "description": "The value to fill in for custom field with the name of CustomFieldName. Required when a CustomField exists in the ReusableForm.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://community-hellosign.p.rapidapi.com/signature_request/send_with_reusable_form\"\nquerystring = {\"test_mode\": \"\", \"reusable_form_id\": \"\", \"title\": \"\", \"subject\": \"\", \"message\": \"\", \"signers[%RoleName%][name]\": \"\", \"signers[%RoleName%][email_address]\": \"\", \"ccs[%RoleName%][email_address]\": \"\", \"custom_fields[%CustomFieldName%]\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-hellosign.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-hellosign.p.rapidapi.com/signature_request/send_with_reusable_form\"\nquerystring = {\"test_mode\": \"\", \"reusable_form_id\": \"\", \"title\": \"\", \"subject\": \"\", \"message\": \"\", \"signers[%RoleName%][name]\": \"\", \"signers[%RoleName%][email_address]\": \"\", \"ccs[%RoleName%][email_address]\": \"\", \"custom_fields[%CustomFieldName%]\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-hellosign.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Create account",
            "url": "https://community-hellosign.p.rapidapi.com/account/create",
            "description": "Creates a new HelloSign Account that is associated with the specified email_address and password.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "email_address",
                    "type": "STRING",
                    "description": "The email address to create a new Account for.",
                    "default": ""
                },
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "The password for the new Account.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://community-hellosign.p.rapidapi.com/account/create\"\nquerystring = {\"email_address\": \"\", \"password\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-hellosign.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-hellosign.p.rapidapi.com/account/create\"\nquerystring = {\"email_address\": \"\", \"password\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-hellosign.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Create draft",
            "url": "https://community-hellosign.p.rapidapi.com/unclaimed_draft/create",
            "description": "Creates a new Draft that can be claimed using the claim URL. The first authenticated user to access the URL will claim the Draft and will be shown either the \"Sign and send\" or the \"Request signature\" page with the Draft loaded. Subsequent access to the claim URL will result in a 404. If the type is \"send_document\" then only the file parameter is required. If the type is \"request_signature\", then the identities of the signers and optionally the location of signing elements on the page are also required.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file[]",
                    "type": "STRING",
                    "description": "The file(s) to send for signature.",
                    "default": ""
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "The type of unclaimed draft to create. Use \"send_document\" to create a claimable file, and \"request_signature\" for a claimable signature request. If the type is \"request_signature\" then signers name and email_address are not optional.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "test_mode",
                    "type": "STRING",
                    "description": "Whether this is a test, the signature request created from this draft will not be legally binding if set to 1. Defaults to 0.",
                    "default": ""
                },
                {
                    "name": "subject",
                    "type": "STRING",
                    "description": "The subject in the email that will be sent to the signers.",
                    "default": ""
                },
                {
                    "name": "message",
                    "type": "STRING",
                    "description": "The custom message in the email that will be sent to the signers.",
                    "default": ""
                },
                {
                    "name": "signers[%i%][name]",
                    "type": "STRING",
                    "description": "The name of the signer. %i% is an integer that should be unique for each signer.",
                    "default": ""
                },
                {
                    "name": "signers[%i%][email_address]",
                    "type": "STRING",
                    "description": "The email address of the signer. %i% is an integer that should be unique for each signer.",
                    "default": ""
                },
                {
                    "name": "signers[%i%][order]",
                    "type": "STRING",
                    "description": "The order the signer is required to sign in. %i% is an integer that should be unique for each signer.",
                    "default": ""
                },
                {
                    "name": "cc_email_addresses[]",
                    "type": "STRING",
                    "description": "The email addresses that should be CCed.",
                    "default": ""
                },
                {
                    "name": "requester_email_address",
                    "type": "STRING",
                    "description": "The email address of the initiator of the SignatureRequest.",
                    "default": ""
                },
                {
                    "name": "form_fields_per_document",
                    "type": "STRING",
                    "description": "The form fields that should appear on the document, expressed as a serialized JSON data structure which is a list of lists of the form fields. One list is required for each file[]. In the case of a file with no form fields, and empty list must be specified. Each field must identify which signer is supposed to fill out the form field, which type of form field it is, its location and size, and if it is required. The signer is identified by the offset (%i%) in the \"signers\" parameter. ReusableForm objects contain fields of the this type in \"form_fields\". If this parameter is not specified, a signature page will be affixed where all signers will be required to add their signature, signifying their agreement to all contained documents.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://community-hellosign.p.rapidapi.com/unclaimed_draft/create\"\nquerystring = {\"test_mode\": \"\", \"file[]\": \"\", \"type\": \"\", \"subject\": \"\", \"message\": \"\", \"signers[%i%][name]\": \"\", \"signers[%i%][email_address]\": \"\", \"signers[%i%][order]\": \"\", \"cc_email_addresses[]\": \"\", \"requester_email_address\": \"\", \"form_fields_per_document\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-hellosign.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-hellosign.p.rapidapi.com/unclaimed_draft/create\"\nquerystring = {\"test_mode\": \"\", \"file[]\": \"\", \"type\": \"\", \"subject\": \"\", \"message\": \"\", \"signers[%i%][name]\": \"\", \"signers[%i%][email_address]\": \"\", \"signers[%i%][order]\": \"\", \"cc_email_addresses[]\": \"\", \"requester_email_address\": \"\", \"form_fields_per_document\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-hellosign.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        }
    ]
}