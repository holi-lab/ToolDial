{
    "tool_name": "Statistical Process Control",
    "tool_description": "Statistical Process Control (SPC) is a statistical method to measure, monitor, and control a process. It is a scientific visual method to monitor, control, and improve the process by eliminating special cause variation in a process.",
    "title": "Statistical Process Control",
    "pricing": "FREEMIUM",
    "score": null,
    "home_url": "https://rapidapi.com/exponential-industry-exponential-industry-default/api/statistical-process-control1/",
    "host": "statistical-process-control1.p.rapidapi.com",
    "api_list": [
        {
            "name": "Westgard Details",
            "url": "https://statistical-process-control1.p.rapidapi.com/spc/rules/westgard",
            "description": "From [Wikipedia](https://en.wikipedia.org/wiki/Westgard_rules):\n\n> The Westgard rules are a set of statistical patterns, each being unlikely to occur by random variability, thereby raising a suspicion of faulty accuracy or precision of the measurement system. They are used for laboratory quality control, in \"runs\" consisting of measurements of multiple samples. They are a set of modified Western Electric rules, developed by James Westgard and provided in his books and seminars on quality control.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/rules/westgard\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Western Electric Details",
            "url": "https://statistical-process-control1.p.rapidapi.com/spc/rules/western-electric",
            "description": "From [Wikipedia](https://en.wikipedia.org/wiki/Western_Electric_rules):\n\n> The Western Electric rules are decision rules in statistical process control for detecting out-of-control or non-random conditions on control charts.[1] Locations of the observations relative to the control chart control limits (typically at \u00b13 standard deviations) and centerline indicate whether the process in question should be investigated for assignable causes. The Western Electric rules were codified by a specially-appointed committee of the manufacturing division of the Western Electric Company and appeared in the first edition of a 1956 handbook, that became a standard text of the field.[2] Their purpose was to ensure that line workers and engineers interpret control charts in a uniform way.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/rules/western-electric\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Western Electric Applied",
            "url": "https://statistical-process-control1.p.rapidapi.com/spc/rules/western-electric",
            "description": "Applies six Western Electric rules and returns the indices of any failing points in the input data stream.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "data",
                    "type": "STRING",
                    "description": "",
                    "default": "82,80,75,79,109,109,98,99,98,97,99,110,101,98,71,75,68,80"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/rules/western-electric\"\nquerystring = {\"data\": data}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Westgard Applied",
            "url": "https://statistical-process-control1.p.rapidapi.com/spc/rules/westgard",
            "description": "Applies all six Westgard rules and returns the indices of any failing points in the input data stream.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "data",
                    "type": "STRING",
                    "description": "",
                    "default": "72,60,75,79,99,95,97,98,80,78,74"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/rules/westgard\"\nquerystring = {\"data\": data}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Discrete Attribute Defect Constant",
            "url": "https://statistical-process-control1.p.rapidapi.com/spc/control/attribute/defect/constant",
            "description": "Per [iSixSigma](https://www.isixsigma.com/tools-templates/control-charts/steps-in-constructing-a-c-chart/):\n\n> The c Chart measures the number of nonconformities per \u201cunit\u201d and is denoted by c. This \u201cunit\u201d is commonly referred to as an inspection unit and may be \u201cper day\u201d or \u201cper square foot\u201d of some other predetermined sensible rate.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "data",
                    "type": "STRING",
                    "description": "",
                    "default": "6,7,7,6,8,6,5,8,1,6,2,5,5,4,3,3,2,0,0,1,2,5,1,7,7,1,5,5,8,8"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/control/attribute/defect/constant\"\nquerystring = {\"data\": data}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Discrete Attribute Defective Variable",
            "url": "https://statistical-process-control1.p.rapidapi.com/spc/control/attribute/defective/variable",
            "description": "Per [iSixSigma](https://www.isixsigma.com/tools-templates/control-charts/steps-in-constructing-a-p-chart/):\n\n> p Charts can be used when the subgroups are not of equal size. The np chart is used in the more limited case of equal subgroups.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "data",
                    "type": "STRING",
                    "description": "",
                    "default": "14,286;22,281;9,310;19,313;21,293;18,305;16,322;16,316;21,293;14,287;15,307;16,328;21,296;9,296;25,317;15,297;14,283;13,321;10,317;21,307;19,317;23,323;15,304;12,304;19,324;17,289;15,299;13,318;19,313;12,289"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/control/attribute/defective/variable\"\nquerystring = {\"data\": data}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Continuous Variable Details",
            "url": "https://statistical-process-control1.p.rapidapi.com/spc/control/variable",
            "description": "Continuous value control charts are graphical displays of quality characteristics that have been measured or computed from a sample versus the sample number or time. Furthermore, these control charts contain a center line representing the average value of the quality characteristics and two other horizontal lines known as upper control limit (UCL) and lower control limit (LCL) .",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/control/variable\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": [
                {
                    "n": "[1, 2)",
                    "kind": "X-MR",
                    "description": "Individual (X) and Moving Range (MR) charts track process variability based on the samples taken from a process over the period of time."
                },
                {
                    "n": "[2, 10)",
                    "kind": "Xbar-R",
                    "description": "Subgroup average (X-bar) and Subgroup Range (R) charts monitor the process performance of a continuous data collected in subgroups at set time periods."
                },
                {
                    "n": "[10, 25]",
                    "kind": "Xbar-S",
                    "description": "Subgroup average (X-bar) and Subgroup Deviation (S) charts examine the process performance of a continuous data collected in subgroups at set time periods where in the case of a large sample size in the subgroup (n), the standard deviation is better measure of variation than the range because it considers all the data not just minimum and maximum values."
                }
            ],
            "headers": {},
            "schema": {}
        },
        {
            "name": "Discrete Attribute Details",
            "url": "https://statistical-process-control1.p.rapidapi.com/spc/control/attribute",
            "description": "Per [iSixSigma](https://www.isixsigma.com/tools-templates/control-charts/steps-in-constructing-a-c-chart/):\n\n> Attribute control charts arise when items are compared with some standard and then are classified as to whether they meet the standard or not. The control chart is used to determine if the rate of nonconforming product is stable and detect when a deviation from stability has occurred. The argument can be made that a LCL should not exist, since rates of nonconforming product outside the LCL is in fact a good thing; we WANT low rates of nonconforming product. However, if we treat these LCL violations as simply another search for an assignable cause, we may learn for the drop in nonconformities rate and be able to permanently improve the process.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/control/attribute\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Continuous Variable N",
            "url": "https://statistical-process-control1.p.rapidapi.com/spc/control/variable/{n}",
            "description": "Control charts for continuous variable  data where 1<= n <= 25. \n\nPer [iSixSigma](https://www.isixsigma.com/tools-templates/control-charts/a-guide-to-control-charts/):\n\n> The individuals and moving range (X-MR) chart is one of the most commonly used control charts for continuous data; it is applicable when one data point is collected at each point in time. The X-MR control chart is actually two charts used in tandem. Together they monitor the process average as well as process variation. With x-axes that are time based, the chart shows a history of the process.\n>\n> Another commonly used control chart for continuous data is the Xbar and range (Xbar-R) chart. Like the I-MR chart, it is comprised of two charts used in tandem. The Xbar-R chart is used when you can rationally collect measurements in subgroups of between two and 10 observations. Each subgroup is a snapshot of the process at a given point in time. The chart\u2019s x-axes are time based, so that the chart shows a history of the process. For this reason, it is important that the data is in time-order.\n>\n> The X-MR and Xbar-R charts use the relationship of Rbar/d2 as the estimate for standard deviation. For sample sizes less than 10, that estimate is more accurate than the sum of squares estimate. The constant, d2, is dependent on sample size. For this reason, the API automatically changes from Xbar-R to Xbar-S charts at a sample size of 10. The difference between these two charts is simply the estimate of standard deviation.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "data",
                    "type": "STRING",
                    "description": "",
                    "default": "82,84,75,79,84,81,81,82,80,78,74"
                },
                {
                    "name": "n",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/control/variable/{n}\"\nquerystring = {\"data\": data}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Discrete Attribute Defective Constant N",
            "url": "https://statistical-process-control1.p.rapidapi.com/spc/control/attribute/defective/constant/{n}",
            "description": "Per [iSixSigma](https://www.isixsigma.com/tools-templates/control-charts/steps-in-constructing-an-np-chart/):\n\n> The np Chart can be used for the special case when the subgroups are of equal size. Then it is not necessary to convert nonconforming counts into the proportions phat(i). Rather, one can directly plot the counts x(i) versus the subgroup number i.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "data",
                    "type": "STRING",
                    "description": "",
                    "default": "10,12,10,11,6,7,12,10,6,11,9,14,16,21,20,12,11,6,10,10,11,11,11,6,9"
                },
                {
                    "name": "n",
                    "type": "NUMBER",
                    "description": "",
                    "default": "100"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/control/attribute/defective/constant/{n}\"\nquerystring = {\"data\": data}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Discrete Attribute Defect Variable",
            "url": "https://statistical-process-control1.p.rapidapi.com/spc/control/attribute/defect/variable",
            "description": "Per [iSixSigma](https://www.isixsigma.com/tools-templates/control-charts/steps-in-constructing-a-u-chart/):\n\n> The u Chart is used when it is not possible to have an inspection unit of a fixed size (e.g., 12 defects counted in one square foot), rather the number of nonconformities is per inspection unit where the inspection unit may not be exactly one square foot\u2026it may be an intact panel or other object, different in size than exactly one square foot. When it is converted into a ratio per square foot, or some other measure, it may be controlled with a u chart.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "data",
                    "type": "STRING",
                    "description": "",
                    "default": "120,110;94,82;89,96;162,115;150,108;82,56;143,120;134,98;97,102;145,115;128,88;83,71;120,95;116,103;127,113;92,85;140,101;60,42;121,97;108,92;131,100;119,115;93,99;88,57;107,89;105,101;143,122;132,105;100,98;60,48"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/control/attribute/defect/variable\"\nquerystring = {\"data\": data}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Nelson Details",
            "url": "https://statistical-process-control1.p.rapidapi.com/spc/rules/nelson",
            "description": "From [Wikipedia](https://en.wikipedia.org/wiki/Nelson_rules):\n\n> Nelson rules are a method in process control of determining whether some measured variable is out of control (unpredictable versus consistent). Rules for detecting \"out-of-control\" or non-random conditions were first postulated by Walter A. Shewhart in the 1920s. The Nelson rules were first published in the October 1984 issue of the Journal of Quality Technology in an article by Lloyd S Nelson.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/rules/nelson\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Nelson Applied",
            "url": "https://statistical-process-control1.p.rapidapi.com/spc/rules/nelson",
            "description": "Applies all eight Nelson rules and returns the indices of any failing points in the input data stream.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "data",
                    "type": "STRING",
                    "description": "",
                    "default": "8,11,15,9,8,12,39,34,36,9,38"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/rules/nelson\"\nquerystring = {\"data\": data}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Western Electric Applied",
            "url": "https://statistical-process-control1.p.rapidapi.com/spc/rules/western-electric",
            "description": "Applies six Western Electric rules and returns the indices of any failing points in the input data stream.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "data",
                    "type": "STRING",
                    "description": "",
                    "default": "82,80,75,79,109,109,98,99,98,97,99,110,101,98,71,75,68,80"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/rules/western-electric\"\nquerystring = {\"data\": \"82,80,75,79,109,109,98,99,98,97,99,110,101,98,71,75,68,80\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/rules/western-electric\"\nquerystring = {\"data\": \"82,80,75,79,109,109,98,99,98,97,99,110,101,98,71,75,68,80\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Westgard Applied",
            "url": "https://statistical-process-control1.p.rapidapi.com/spc/rules/westgard",
            "description": "Applies all six Westgard rules and returns the indices of any failing points in the input data stream.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "data",
                    "type": "STRING",
                    "description": "",
                    "default": "72,60,75,79,99,95,97,98,80,78,74"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/rules/westgard\"\nquerystring = {\"data\": \"72,60,75,79,99,95,97,98,80,78,74\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/rules/westgard\"\nquerystring = {\"data\": \"72,60,75,79,99,95,97,98,80,78,74\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Discrete Attribute Defect Constant",
            "url": "https://statistical-process-control1.p.rapidapi.com/spc/control/attribute/defect/constant",
            "description": "Per [iSixSigma](https://www.isixsigma.com/tools-templates/control-charts/steps-in-constructing-a-c-chart/):\n\n> The c Chart measures the number of nonconformities per \u201cunit\u201d and is denoted by c. This \u201cunit\u201d is commonly referred to as an inspection unit and may be \u201cper day\u201d or \u201cper square foot\u201d of some other predetermined sensible rate.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "data",
                    "type": "STRING",
                    "description": "",
                    "default": "6,7,7,6,8,6,5,8,1,6,2,5,5,4,3,3,2,0,0,1,2,5,1,7,7,1,5,5,8,8"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/control/attribute/defect/constant\"\nquerystring = {\"data\": \"6,7,7,6,8,6,5,8,1,6,2,5,5,4,3,3,2,0,0,1,2,5,1,7,7,1,5,5,8,8\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/control/attribute/defect/constant\"\nquerystring = {\"data\": \"6,7,7,6,8,6,5,8,1,6,2,5,5,4,3,3,2,0,0,1,2,5,1,7,7,1,5,5,8,8\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Discrete Attribute Defective Variable",
            "url": "https://statistical-process-control1.p.rapidapi.com/spc/control/attribute/defective/variable",
            "description": "Per [iSixSigma](https://www.isixsigma.com/tools-templates/control-charts/steps-in-constructing-a-p-chart/):\n\n> p Charts can be used when the subgroups are not of equal size. The np chart is used in the more limited case of equal subgroups.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "data",
                    "type": "STRING",
                    "description": "",
                    "default": "14,286;22,281;9,310;19,313;21,293;18,305;16,322;16,316;21,293;14,287;15,307;16,328;21,296;9,296;25,317;15,297;14,283;13,321;10,317;21,307;19,317;23,323;15,304;12,304;19,324;17,289;15,299;13,318;19,313;12,289"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/control/attribute/defective/variable\"\nquerystring = {\"data\": \"14,286;22,281;9,310;19,313;21,293;18,305;16,322;16,316;21,293;14,287;15,307;16,328;21,296;9,296;25,317;15,297;14,283;13,321;10,317;21,307;19,317;23,323;15,304;12,304;19,324;17,289;15,299;13,318;19,313;12,289\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/control/attribute/defective/variable\"\nquerystring = {\"data\": \"14,286;22,281;9,310;19,313;21,293;18,305;16,322;16,316;21,293;14,287;15,307;16,328;21,296;9,296;25,317;15,297;14,283;13,321;10,317;21,307;19,317;23,323;15,304;12,304;19,324;17,289;15,299;13,318;19,313;12,289\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Continuous Variable N",
            "url": "https://statistical-process-control1.p.rapidapi.com/spc/control/variable/1",
            "description": "Control charts for continuous variable  data where 1<= n <= 25. \n\nPer [iSixSigma](https://www.isixsigma.com/tools-templates/control-charts/a-guide-to-control-charts/):\n\n> The individuals and moving range (X-MR) chart is one of the most commonly used control charts for continuous data; it is applicable when one data point is collected at each point in time. The X-MR control chart is actually two charts used in tandem. Together they monitor the process average as well as process variation. With x-axes that are time based, the chart shows a history of the process.\n>\n> Another commonly used control chart for continuous data is the Xbar and range (Xbar-R) chart. Like the I-MR chart, it is comprised of two charts used in tandem. The Xbar-R chart is used when you can rationally collect measurements in subgroups of between two and 10 observations. Each subgroup is a snapshot of the process at a given point in time. The chart\u2019s x-axes are time based, so that the chart shows a history of the process. For this reason, it is important that the data is in time-order.\n>\n> The X-MR and Xbar-R charts use the relationship of Rbar/d2 as the estimate for standard deviation. For sample sizes less than 10, that estimate is more accurate than the sum of squares estimate. The constant, d2, is dependent on sample size. For this reason, the API automatically changes from Xbar-R to Xbar-S charts at a sample size of 10. The difference between these two charts is simply the estimate of standard deviation.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "data",
                    "type": "STRING",
                    "description": "",
                    "default": "82,84,75,79,84,81,81,82,80,78,74"
                },
                {
                    "name": "n",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/control/variable/1\"\nquerystring = {\"data\": \"82,84,75,79,84,81,81,82,80,78,74\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/control/variable/{n}\"\nquerystring = {\"data\": \"82,84,75,79,84,81,81,82,80,78,74\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Discrete Attribute Defective Constant N",
            "url": "https://statistical-process-control1.p.rapidapi.com/spc/control/attribute/defective/constant/100",
            "description": "Per [iSixSigma](https://www.isixsigma.com/tools-templates/control-charts/steps-in-constructing-an-np-chart/):\n\n> The np Chart can be used for the special case when the subgroups are of equal size. Then it is not necessary to convert nonconforming counts into the proportions phat(i). Rather, one can directly plot the counts x(i) versus the subgroup number i.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "data",
                    "type": "STRING",
                    "description": "",
                    "default": "10,12,10,11,6,7,12,10,6,11,9,14,16,21,20,12,11,6,10,10,11,11,11,6,9"
                },
                {
                    "name": "n",
                    "type": "NUMBER",
                    "description": "",
                    "default": "100"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/control/attribute/defective/constant/100\"\nquerystring = {\"data\": \"10,12,10,11,6,7,12,10,6,11,9,14,16,21,20,12,11,6,10,10,11,11,11,6,9\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/control/attribute/defective/constant/{n}\"\nquerystring = {\"data\": \"10,12,10,11,6,7,12,10,6,11,9,14,16,21,20,12,11,6,10,10,11,11,11,6,9\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Discrete Attribute Defect Variable",
            "url": "https://statistical-process-control1.p.rapidapi.com/spc/control/attribute/defect/variable",
            "description": "Per [iSixSigma](https://www.isixsigma.com/tools-templates/control-charts/steps-in-constructing-a-u-chart/):\n\n> The u Chart is used when it is not possible to have an inspection unit of a fixed size (e.g., 12 defects counted in one square foot), rather the number of nonconformities is per inspection unit where the inspection unit may not be exactly one square foot\u2026it may be an intact panel or other object, different in size than exactly one square foot. When it is converted into a ratio per square foot, or some other measure, it may be controlled with a u chart.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "data",
                    "type": "STRING",
                    "description": "",
                    "default": "120,110;94,82;89,96;162,115;150,108;82,56;143,120;134,98;97,102;145,115;128,88;83,71;120,95;116,103;127,113;92,85;140,101;60,42;121,97;108,92;131,100;119,115;93,99;88,57;107,89;105,101;143,122;132,105;100,98;60,48"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/control/attribute/defect/variable\"\nquerystring = {\"data\": \"120,110;94,82;89,96;162,115;150,108;82,56;143,120;134,98;97,102;145,115;128,88;83,71;120,95;116,103;127,113;92,85;140,101;60,42;121,97;108,92;131,100;119,115;93,99;88,57;107,89;105,101;143,122;132,105;100,98;60,48\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/control/attribute/defect/variable\"\nquerystring = {\"data\": \"120,110;94,82;89,96;162,115;150,108;82,56;143,120;134,98;97,102;145,115;128,88;83,71;120,95;116,103;127,113;92,85;140,101;60,42;121,97;108,92;131,100;119,115;93,99;88,57;107,89;105,101;143,122;132,105;100,98;60,48\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Nelson Applied",
            "url": "https://statistical-process-control1.p.rapidapi.com/spc/rules/nelson",
            "description": "Applies all eight Nelson rules and returns the indices of any failing points in the input data stream.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "data",
                    "type": "STRING",
                    "description": "",
                    "default": "8,11,15,9,8,12,39,34,36,9,38"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/rules/nelson\"\nquerystring = {\"data\": \"8,11,15,9,8,12,39,34,36,9,38\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://statistical-process-control1.p.rapidapi.com/spc/rules/nelson\"\nquerystring = {\"data\": \"8,11,15,9,8,12,39,34,36,9,38\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"statistical-process-control1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}