{
    "product_id": "api_63974aa0-286c-40e2-a603-78b2bf980f32",
    "tool_description": "Papercliff looks at the world's largest news agencies, reads articles, identifies and shares keywords",
    "home_url": "https://rapidapi.com/mrdimosthenis/api/papercliff/",
    "name": "papercliff",
    "title": "papercliff",
    "pricing": "FREEMIUM",
    "tool_name": "papercliff",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 65,
        "avgSuccessRate": 100,
        "popularityScore": 8.3,
        "__typename": "Score"
    },
    "host": "papercliff.p.rapidapi.com",
    "api_list": [
        {
            "name": "Combinations",
            "url": "https://papercliff.p.rapidapi.com/combinations",
            "description": "Returns the 100 most popular combinations/triples of keywords with the corresponding number of news agencies and articles from which they have been cited",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "Narrows down the results to articles published before the provided date-time in UTC. The format should be `yyyy-MM-dd'T'HH:mm`. Example value: `2022-09-18T15:30`. Date-times of the future do not affect the result.",
                    "default": ""
                },
                {
                    "name": "terms",
                    "type": "STRING",
                    "description": "Narrows down the results to articles that contain all the provided keywords. The terms should consist of one to three words separated by a dash.  Example value: `election-campaign`.",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Omits a number of combinations",
                    "default": ""
                },
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "Narrows down the results to articles published after the provided date-time in UTC. The format should be `yyyy-MM-dd'T'HH:mm`. Example value: `2022-09-18T13:45`. Date-times older than a week do not affect the result.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://papercliff.p.rapidapi.com/combinations\"\nquerystring = {\"to\": \"\", \"terms\": \"\", \"offset\": \"\", \"from\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"papercliff.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://papercliff.p.rapidapi.com/combinations\"\nquerystring = {\"to\": \"\", \"terms\": \"\", \"offset\": \"\", \"from\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"papercliff.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Error in validating the request  is not valid value for number"
            },
            "statuscode": 200,
            "schema": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "story": {
                            "type": "string"
                        },
                        "articles": {
                            "type": "integer"
                        },
                        "agencies": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        {
            "name": "Timeline",
            "url": "https://papercliff.p.rapidapi.com/timeline",
            "description": "Returns the 100 most recent articles and their keywords",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "Narrows down the results to articles published after the provided date-time in UTC. The format should be `yyyy-MM-dd'T'HH:mm`. Example value: `2022-09-18T13:45`. Date-times older than a week do not affect the result.",
                    "default": ""
                },
                {
                    "name": "terms",
                    "type": "STRING",
                    "description": "Narrows down the results to articles that contain all the provided keywords. The terms should consist of one to three words separated by a dash.  Example value: `election-campaign`.",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Omits a number of articles",
                    "default": ""
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "Narrows down the results to articles published before the provided date-time in UTC. The format should be `yyyy-MM-dd'T'HH:mm`. Example value: `2022-09-18T15:30`. Date-times of the future do not affect the result.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://papercliff.p.rapidapi.com/timeline\"\nquerystring = {\"from\": \"\", \"terms\": \"\", \"offset\": \"\", \"to\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"papercliff.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://papercliff.p.rapidapi.com/timeline\"\nquerystring = {\"from\": \"\", \"terms\": \"\", \"offset\": \"\", \"to\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"papercliff.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "datetime": {
                            "type": "string"
                        },
                        "story": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        {
            "name": "Overview",
            "url": "https://papercliff.p.rapidapi.com/overview",
            "description": "Returns summary statistics about how many keywords have been found and how many articles and agencies papercliff looked at",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "Narrows down the results to articles published after the provided date-time. The format should be `yyyy-MM-dd'T'HH:mm`. Example value: `2022-09-18T13:45`. Date-times older than a week do not affect the result.",
                    "default": ""
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "Narrows down the results to articles published before the provided date-time. The format should be `yyyy-MM-dd'T'HH:mm`. Example value: `2022-09-18T15:30`. Date-times of the future do not affect the result.",
                    "default": ""
                },
                {
                    "name": "terms",
                    "type": "STRING",
                    "description": "Narrows down the results to articles that contain all the provided keywords. The terms should consist of one to three words separated by a dash.  Example value: `election-campaign`.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://papercliff.p.rapidapi.com/overview\"\nquerystring = {\"from\": \"\", \"to\": \"\", \"terms\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"papercliff.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://papercliff.p.rapidapi.com/overview\"\nquerystring = {\"from\": \"\", \"to\": \"\", \"terms\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"papercliff.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "errors": [
                    "parameter 'terms' should consist of one to three keywords separated by a dash",
                    "parameter `to` should have format `yyyy-MM-dd'T'HH:mm`",
                    "parameter `from` should have format `yyyy-MM-dd'T'HH:mm`"
                ]
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "articles": {
                        "type": "integer"
                    },
                    "agencies": {
                        "type": "integer"
                    },
                    "findings": {
                        "type": "integer"
                    },
                    "keywords": {
                        "type": "integer"
                    }
                }
            }
        },
        {
            "name": "History",
            "url": "https://papercliff.p.rapidapi.com/history",
            "description": "Returns the number of articles published daily during the last week and the number of corresponding news agencies that created those articles",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "terms",
                    "type": "STRING",
                    "description": "Narrows down the results to articles that contain all the provided keywords. The terms should consist of one to three words separated by a dash.  Example value: `election-campaign`.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://papercliff.p.rapidapi.com/history\"\nquerystring = {\"terms\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"papercliff.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://papercliff.p.rapidapi.com/history\"\nquerystring = {\"terms\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"papercliff.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "day": {
                            "type": "string"
                        },
                        "articles": {
                            "type": "integer"
                        },
                        "agencies": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        {
            "name": "Keywords",
            "url": "https://papercliff.p.rapidapi.com/keywords",
            "description": "Returns the 100 most popular keywords with the corresponding number of news agencies and articles from which they have been cited",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "terms",
                    "type": "STRING",
                    "description": "Narrows down the results to articles that contain all the provided keywords. The terms should consist of one to three words separated by a dash.  Example value: `election-campaign`.",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Omits a number of keywords",
                    "default": ""
                },
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "Narrows down the results to articles published after the provided date-time in UTC. The format should be `yyyy-MM-dd'T'HH:mm`. Example value: `2022-09-18T13:45`. Date-times older than a week do not affect the result.",
                    "default": ""
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "Narrows down the results to articles published before the provided date-time in UTC. The format should be `yyyy-MM-dd'T'HH:mm`. Example value: `2022-09-18T15:30`. Date-times of the future do not affect the result.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://papercliff.p.rapidapi.com/keywords\"\nquerystring = {\"terms\": \"\", \"offset\": \"\", \"from\": \"\", \"to\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"papercliff.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://papercliff.p.rapidapi.com/keywords\"\nquerystring = {\"terms\": \"\", \"offset\": \"\", \"from\": \"\", \"to\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"papercliff.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Error in validating the request  is not valid value for number"
            },
            "statuscode": 200,
            "schema": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "keyword": {
                            "type": "string"
                        },
                        "articles": {
                            "type": "integer"
                        },
                        "agencies": {
                            "type": "integer"
                        }
                    }
                }
            }
        }
    ],
    "standardized_name": "papercliff"
}