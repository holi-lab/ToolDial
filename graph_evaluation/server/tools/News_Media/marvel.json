{
    "product_id": "385",
    "tool_description": "Place to connect with other fans and get news about comics",
    "home_url": "https://rapidapi.com/stefan.skliarov/api/Marvel/",
    "name": "Marvel",
    "title": "Marvel",
    "pricing": "FREE",
    "tool_name": "Marvel",
    "score": {
        "avgServiceLevel": 0,
        "avgLatency": 127251,
        "avgSuccessRate": 0,
        "popularityScore": 4.3,
        "__typename": "Score"
    },
    "host": "Marvelstefan-skliarovV1.p.rapidapi.com",
    "api_list": [
        {
            "name": "getCharacters",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getCharacters",
            "description": "Fetches lists of comic characters with optional filters. ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "nameStartsWith",
                    "type": "STRING",
                    "description": "Return characters with names that begin with the specified string (e.g. Sp).",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Return only characters matching the specified full character name (e.g. Spider-Man).",
                    "default": ""
                },
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only characters which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: name, modified",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "comics",
                    "type": "LIST",
                    "description": "Return only characters which appear in the specified comics (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "series",
                    "type": "LIST",
                    "description": "Return only characters which appear the specified series (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "events",
                    "type": "LIST",
                    "description": "Return only characters which appear the specified events (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "stories",
                    "type": "LIST",
                    "description": "Return only characters which appear the specified stories (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getCharacters\"\nquerystring = {\"privateKey\": \"\", \"nameStartsWith\": \"\", \"name\": \"\", \"publicKey\": \"\", \"modifiedSince\": \"\", \"limit\": \"\", \"orderBy\": \"\", \"offset\": \"\", \"comics\": \"\", \"series\": \"\", \"events\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getCharacters\"\nquerystring = {\"privateKey\": \"\", \"nameStartsWith\": \"\", \"name\": \"\", \"publicKey\": \"\", \"modifiedSince\": \"\", \"limit\": \"\", \"orderBy\": \"\", \"offset\": \"\", \"comics\": \"\", \"series\": \"\", \"events\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCharactersByComic",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getCharactersByComic",
            "description": "Fetches lists of characters which appear in a specific comic with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "comicId",
                    "type": "NUMBER",
                    "description": "A single comic id.",
                    "default": ""
                },
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "nameStartsWith",
                    "type": "STRING",
                    "description": "Return characters with names that begin with the specified string (e.g. Sp).",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Return only characters matching the specified full character name (e.g. Spider-Man).",
                    "default": ""
                },
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only characters which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: name, modified",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "series",
                    "type": "LIST",
                    "description": "Return only characters which appear the specified series (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "events",
                    "type": "LIST",
                    "description": "Return only characters which appear comics that took place in the specified events (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "stories",
                    "type": "LIST",
                    "description": "Return only characters which appear the specified stories (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getCharactersByComic\"\nquerystring = {\"publicKey\": \"\", \"comicId\": \"\", \"nameStartsWith\": \"\", \"privateKey\": \"\", \"name\": \"\", \"modifiedSince\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"limit\": \"\", \"series\": \"\", \"events\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getCharactersByComic\"\nquerystring = {\"publicKey\": \"\", \"comicId\": \"\", \"nameStartsWith\": \"\", \"privateKey\": \"\", \"name\": \"\", \"modifiedSince\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"limit\": \"\", \"series\": \"\", \"events\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCharactersByEvent",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getCharactersByEvent",
            "description": "Fetches lists of characters which appear in a specific event, with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "eventId",
                    "type": "NUMBER",
                    "description": "A single event id.",
                    "default": ""
                },
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "nameStartsWith",
                    "type": "STRING",
                    "description": "Return characters with names that begin with the specified string (e.g. Sp).",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Return only characters matching the specified full character name (e.g. Spider-Man).",
                    "default": ""
                },
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only characters which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: name, modified",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "series",
                    "type": "LIST",
                    "description": "Return only characters which appear the specified series (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "comics",
                    "type": "LIST",
                    "description": "Return only characters which appear in the specified comics (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "stories",
                    "type": "LIST",
                    "description": "Return only characters which appear the specified stories (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getCharactersByEvent\"\nquerystring = {\"publicKey\": \"\", \"nameStartsWith\": \"\", \"eventId\": \"\", \"name\": \"\", \"privateKey\": \"\", \"modifiedSince\": \"\", \"orderBy\": \"\", \"offset\": \"\", \"limit\": \"\", \"series\": \"\", \"comics\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getCharactersByEvent\"\nquerystring = {\"publicKey\": \"\", \"nameStartsWith\": \"\", \"eventId\": \"\", \"name\": \"\", \"privateKey\": \"\", \"modifiedSince\": \"\", \"orderBy\": \"\", \"offset\": \"\", \"limit\": \"\", \"series\": \"\", \"comics\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCharactersBySeries",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getCharactersBySeries",
            "description": "Fetches lists of characters which appear in specific series, with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "seriesId",
                    "type": "NUMBER",
                    "description": "A single series id.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Return only characters matching the specified full character name (e.g. Spider-Man).",
                    "default": ""
                },
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only characters which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "nameStartsWith",
                    "type": "STRING",
                    "description": "Return characters with names that begin with the specified string (e.g. Sp).",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: name, modified",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "comics",
                    "type": "LIST",
                    "description": "Return only characters which appear in the specified comics (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "events",
                    "type": "LIST",
                    "description": "Return only characters which appear comics that took place in the specified events (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "stories",
                    "type": "LIST",
                    "description": "Return only characters which appear the specified stories (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getCharactersBySeries\"\nquerystring = {\"name\": \"\", \"privateKey\": \"\", \"modifiedSince\": \"\", \"publicKey\": \"\", \"nameStartsWith\": \"\", \"seriesId\": \"\", \"orderBy\": \"\", \"offset\": \"\", \"limit\": \"\", \"comics\": \"\", \"events\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getCharactersBySeries\"\nquerystring = {\"name\": \"\", \"privateKey\": \"\", \"modifiedSince\": \"\", \"publicKey\": \"\", \"nameStartsWith\": \"\", \"seriesId\": \"\", \"orderBy\": \"\", \"offset\": \"\", \"limit\": \"\", \"comics\": \"\", \"events\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCharactersByStory",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getCharactersByStory",
            "description": "Fetches lists of comic characters appearing in a single story, with optional filters. ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "storyId",
                    "type": "NUMBER",
                    "description": "A single story id.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Return only characters matching the specified full character name (e.g. Spider-Man).",
                    "default": ""
                },
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only characters which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "nameStartsWith",
                    "type": "STRING",
                    "description": "Return characters with names that begin with the specified string (e.g. Sp).",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: name, modified",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "comics",
                    "type": "LIST",
                    "description": "Return only characters which appear in the specified comics (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "events",
                    "type": "LIST",
                    "description": "Return only characters which appear comics that took place in the specified events (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "series",
                    "type": "LIST",
                    "description": "Return only characters which appear the specified series (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getCharactersByStory\"\nquerystring = {\"name\": \"\", \"modifiedSince\": \"\", \"privateKey\": \"\", \"publicKey\": \"\", \"nameStartsWith\": \"\", \"storyId\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"limit\": \"\", \"comics\": \"\", \"events\": \"\", \"series\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getCharactersByStory\"\nquerystring = {\"name\": \"\", \"modifiedSince\": \"\", \"privateKey\": \"\", \"publicKey\": \"\", \"nameStartsWith\": \"\", \"storyId\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"limit\": \"\", \"comics\": \"\", \"events\": \"\", \"series\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getComics",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getComics",
            "description": "Fetches lists of comics with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "formatType",
                    "type": "SELECT",
                    "description": "Filter by the issue format type (comic or collection).",
                    "default": ""
                },
                {
                    "name": "dateDescriptor",
                    "type": "SELECT",
                    "description": "Return comics within a predefined date range. Values: lastWeek, thisWeek, nextWeek, thisMonth",
                    "default": ""
                },
                {
                    "name": "noVariants",
                    "type": "BOOLEAN",
                    "description": "Exclude variant comics from the result set.",
                    "default": ""
                },
                {
                    "name": "format",
                    "type": "SELECT",
                    "description": "Filter by the issue format (e.g. comic, digital comic, hardcover, magazine, trade paperback, digest, graphic novel, infinite comic).",
                    "default": ""
                },
                {
                    "name": "startYear",
                    "type": "STRING",
                    "description": "Return only issues in series whose start year matches the input.",
                    "default": ""
                },
                {
                    "name": "upc",
                    "type": "STRING",
                    "description": "Filter by UPC.",
                    "default": ""
                },
                {
                    "name": "hasDigitalIssue",
                    "type": "BOOLEAN",
                    "description": "Include only results which are available digitally.",
                    "default": ""
                },
                {
                    "name": "diamondCode",
                    "type": "STRING",
                    "description": "Filter by diamond code.",
                    "default": ""
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "Return only issues in series whose title matches the input.",
                    "default": ""
                },
                {
                    "name": "ean",
                    "type": "STRING",
                    "description": "Filter by EAN.",
                    "default": ""
                },
                {
                    "name": "issueNumber",
                    "type": "STRING",
                    "description": "Return only issues in series whose issue number matches the input.",
                    "default": ""
                },
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only comics which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "issn",
                    "type": "STRING",
                    "description": "Filter by ISSN.",
                    "default": ""
                },
                {
                    "name": "digitalId",
                    "type": "NUMBER",
                    "description": "Filter by digital comic id.",
                    "default": ""
                },
                {
                    "name": "titleStartsWith",
                    "type": "STRING",
                    "description": "Return only issues in series whose title starts with the input.",
                    "default": ""
                },
                {
                    "name": "isbn",
                    "type": "STRING",
                    "description": "Filter by ISBN.",
                    "default": ""
                },
                {
                    "name": "collaborators",
                    "type": "STRING",
                    "description": "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work).",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "sharedAppearances",
                    "type": "STRING",
                    "description": "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear).",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: focDate, onsaleDate, title, issueNumber, modified",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "dateRange",
                    "type": "LIST",
                    "description": "Return comics within a predefined date range. Dates must be specified as array.  Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format.",
                    "default": ""
                },
                {
                    "name": "creators",
                    "type": "LIST",
                    "description": "Return only comics which feature work by the specified creators (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "characters",
                    "type": "LIST",
                    "description": "Return only comics which feature the specified characters (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "series",
                    "type": "LIST",
                    "description": "Return only comics which are part of the specified series (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "events",
                    "type": "LIST",
                    "description": "Return only comics which take place in the specified events (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "stories",
                    "type": "LIST",
                    "description": "Return only comics which contain the specified stories (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getComics\"\nquerystring = {\"formatType\": \"\", \"dateDescriptor\": \"\", \"privateKey\": \"\", \"noVariants\": \"\", \"publicKey\": \"\", \"format\": \"\", \"startYear\": \"\", \"upc\": \"\", \"hasDigitalIssue\": \"\", \"diamondCode\": \"\", \"title\": \"\", \"ean\": \"\", \"issueNumber\": \"\", \"modifiedSince\": \"\", \"issn\": \"\", \"digitalId\": \"\", \"titleStartsWith\": \"\", \"isbn\": \"\", \"collaborators\": \"\", \"limit\": \"\", \"sharedAppearances\": \"\", \"orderBy\": \"\", \"offset\": \"\", \"dateRange\": \"\", \"creators\": \"\", \"characters\": \"\", \"series\": \"\", \"events\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getComics\"\nquerystring = {\"formatType\": \"\", \"dateDescriptor\": \"\", \"privateKey\": \"\", \"noVariants\": \"\", \"publicKey\": \"\", \"format\": \"\", \"startYear\": \"\", \"upc\": \"\", \"hasDigitalIssue\": \"\", \"diamondCode\": \"\", \"title\": \"\", \"ean\": \"\", \"issueNumber\": \"\", \"modifiedSince\": \"\", \"issn\": \"\", \"digitalId\": \"\", \"titleStartsWith\": \"\", \"isbn\": \"\", \"collaborators\": \"\", \"limit\": \"\", \"sharedAppearances\": \"\", \"orderBy\": \"\", \"offset\": \"\", \"dateRange\": \"\", \"creators\": \"\", \"characters\": \"\", \"series\": \"\", \"events\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getComicsByCharacter",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getComicsByCharacter",
            "description": "Fetches lists of comics containing a specific character, with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "characterId",
                    "type": "NUMBER",
                    "description": "A single character id.",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "dateDescriptor",
                    "type": "SELECT",
                    "description": "Return comics within a predefined date range. Values: lastWeek, thisWeek, nextWeek, thisMonth",
                    "default": ""
                },
                {
                    "name": "formatType",
                    "type": "SELECT",
                    "description": "Filter by the issue format type (comic or collection).",
                    "default": ""
                },
                {
                    "name": "format",
                    "type": "SELECT",
                    "description": "Filter by the issue format (e.g. comic, digital comic, hardcover, magazine, trade paperback, digest, graphic novel, infinite comic).",
                    "default": ""
                },
                {
                    "name": "noVariants",
                    "type": "BOOLEAN",
                    "description": "Exclude variant comics from the result set.",
                    "default": ""
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "Return only issues in series whose title matches the input.",
                    "default": ""
                },
                {
                    "name": "hasDigitalIssue",
                    "type": "BOOLEAN",
                    "description": "Include only results which are available digitally.",
                    "default": ""
                },
                {
                    "name": "startYear",
                    "type": "STRING",
                    "description": "Return only issues in series whose start year matches the input.",
                    "default": ""
                },
                {
                    "name": "upc",
                    "type": "STRING",
                    "description": "Filter by UPC.",
                    "default": ""
                },
                {
                    "name": "diamondCode",
                    "type": "STRING",
                    "description": "Filter by diamond code.",
                    "default": ""
                },
                {
                    "name": "ean",
                    "type": "STRING",
                    "description": "Filter by EAN.",
                    "default": ""
                },
                {
                    "name": "issn",
                    "type": "STRING",
                    "description": "Filter by ISSN.",
                    "default": ""
                },
                {
                    "name": "issueNumber",
                    "type": "STRING",
                    "description": "Return only issues in series whose issue number matches the input.",
                    "default": ""
                },
                {
                    "name": "isbn",
                    "type": "STRING",
                    "description": "Filter by ISBN.",
                    "default": ""
                },
                {
                    "name": "titleStartsWith",
                    "type": "STRING",
                    "description": "Return only issues in series whose title starts with the input.",
                    "default": ""
                },
                {
                    "name": "digitalId",
                    "type": "NUMBER",
                    "description": "Filter by digital comic id.",
                    "default": ""
                },
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only comics which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "sharedAppearances",
                    "type": "STRING",
                    "description": "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear).",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: focDate, onsaleDate, title, issueNumber, modified",
                    "default": ""
                },
                {
                    "name": "collaborators",
                    "type": "STRING",
                    "description": "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work).",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "dateRange",
                    "type": "LIST",
                    "description": "Return comics within a predefined date range. Dates must be specified as array.  Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format.",
                    "default": ""
                },
                {
                    "name": "creators",
                    "type": "LIST",
                    "description": "Return only comics which feature work by the specified creators (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "series",
                    "type": "LIST",
                    "description": "Return only comics which are part of the specified series (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "events",
                    "type": "LIST",
                    "description": "Return only comics which take place in the specified events (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "stories",
                    "type": "LIST",
                    "description": "Return only comics which contain the specified stories (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getComicsByCharacter\"\nquerystring = {\"dateDescriptor\": \"\", \"characterId\": \"\", \"publicKey\": \"\", \"formatType\": \"\", \"format\": \"\", \"privateKey\": \"\", \"noVariants\": \"\", \"title\": \"\", \"hasDigitalIssue\": \"\", \"startYear\": \"\", \"upc\": \"\", \"diamondCode\": \"\", \"ean\": \"\", \"issn\": \"\", \"issueNumber\": \"\", \"isbn\": \"\", \"titleStartsWith\": \"\", \"digitalId\": \"\", \"modifiedSince\": \"\", \"sharedAppearances\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"collaborators\": \"\", \"limit\": \"\", \"dateRange\": \"\", \"creators\": \"\", \"series\": \"\", \"events\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getComicsByCharacter\"\nquerystring = {\"dateDescriptor\": \"\", \"characterId\": \"\", \"publicKey\": \"\", \"formatType\": \"\", \"format\": \"\", \"privateKey\": \"\", \"noVariants\": \"\", \"title\": \"\", \"hasDigitalIssue\": \"\", \"startYear\": \"\", \"upc\": \"\", \"diamondCode\": \"\", \"ean\": \"\", \"issn\": \"\", \"issueNumber\": \"\", \"isbn\": \"\", \"titleStartsWith\": \"\", \"digitalId\": \"\", \"modifiedSince\": \"\", \"sharedAppearances\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"collaborators\": \"\", \"limit\": \"\", \"dateRange\": \"\", \"creators\": \"\", \"series\": \"\", \"events\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getComicsByCreator",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getComicsByCreator",
            "description": "Fetches lists of comics in which the work of a specific creator appears, with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "creatorId",
                    "type": "NUMBER",
                    "description": "Creator id.",
                    "default": ""
                },
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "dateDescriptor",
                    "type": "SELECT",
                    "description": "Return comics within a predefined date range. Values: lastWeek, thisWeek, nextWeek, thisMonth",
                    "default": ""
                },
                {
                    "name": "formatType",
                    "type": "SELECT",
                    "description": "Filter by the issue format type (comic or collection).",
                    "default": ""
                },
                {
                    "name": "format",
                    "type": "SELECT",
                    "description": "Filter by the issue format (e.g. comic, digital comic, hardcover, magazine, trade paperback, digest, graphic novel, infinite comic).",
                    "default": ""
                },
                {
                    "name": "noVariants",
                    "type": "BOOLEAN",
                    "description": "Exclude variant comics from the result set.",
                    "default": ""
                },
                {
                    "name": "upc",
                    "type": "STRING",
                    "description": "Filter by UPC.",
                    "default": ""
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "Return only issues in series whose title matches the input.",
                    "default": ""
                },
                {
                    "name": "diamondCode",
                    "type": "STRING",
                    "description": "Filter by diamond code.",
                    "default": ""
                },
                {
                    "name": "ean",
                    "type": "STRING",
                    "description": "Filter by EAN.",
                    "default": ""
                },
                {
                    "name": "startYear",
                    "type": "STRING",
                    "description": "Return only issues in series whose start year matches the input.",
                    "default": ""
                },
                {
                    "name": "hasDigitalIssue",
                    "type": "BOOLEAN",
                    "description": "Include only results which are available digitally.",
                    "default": ""
                },
                {
                    "name": "digitalId",
                    "type": "NUMBER",
                    "description": "Filter by digital comic id.",
                    "default": ""
                },
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only comics which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "isbn",
                    "type": "STRING",
                    "description": "Filter by ISBN.",
                    "default": ""
                },
                {
                    "name": "issn",
                    "type": "STRING",
                    "description": "Filter by ISSN.",
                    "default": ""
                },
                {
                    "name": "issueNumber",
                    "type": "STRING",
                    "description": "Return only issues in series whose issue number matches the input.",
                    "default": ""
                },
                {
                    "name": "titleStartsWith",
                    "type": "STRING",
                    "description": "Return only issues in series whose title starts with the input.",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: focDate, onsaleDate, title, issueNumber, modified",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "sharedAppearances",
                    "type": "STRING",
                    "description": "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear).",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "collaborators",
                    "type": "STRING",
                    "description": "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work).",
                    "default": ""
                },
                {
                    "name": "dateRange",
                    "type": "LIST",
                    "description": "Return comics within a predefined date range. Dates must be specified as array.  Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format.",
                    "default": ""
                },
                {
                    "name": "characters",
                    "type": "LIST",
                    "description": "Return only comics which feature the specified characters (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "series",
                    "type": "LIST",
                    "description": "Return only comics which are part of the specified series (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "events",
                    "type": "LIST",
                    "description": "Return only comics which take place in the specified events (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "stories",
                    "type": "LIST",
                    "description": "Return only comics which contain the specified stories (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getComicsByCreator\"\nquerystring = {\"dateDescriptor\": \"\", \"publicKey\": \"\", \"creatorId\": \"\", \"formatType\": \"\", \"format\": \"\", \"privateKey\": \"\", \"noVariants\": \"\", \"upc\": \"\", \"title\": \"\", \"diamondCode\": \"\", \"ean\": \"\", \"startYear\": \"\", \"hasDigitalIssue\": \"\", \"digitalId\": \"\", \"modifiedSince\": \"\", \"isbn\": \"\", \"issn\": \"\", \"issueNumber\": \"\", \"titleStartsWith\": \"\", \"orderBy\": \"\", \"offset\": \"\", \"sharedAppearances\": \"\", \"limit\": \"\", \"collaborators\": \"\", \"dateRange\": \"\", \"characters\": \"\", \"series\": \"\", \"events\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getComicsByCreator\"\nquerystring = {\"dateDescriptor\": \"\", \"publicKey\": \"\", \"creatorId\": \"\", \"formatType\": \"\", \"format\": \"\", \"privateKey\": \"\", \"noVariants\": \"\", \"upc\": \"\", \"title\": \"\", \"diamondCode\": \"\", \"ean\": \"\", \"startYear\": \"\", \"hasDigitalIssue\": \"\", \"digitalId\": \"\", \"modifiedSince\": \"\", \"isbn\": \"\", \"issn\": \"\", \"issueNumber\": \"\", \"titleStartsWith\": \"\", \"orderBy\": \"\", \"offset\": \"\", \"sharedAppearances\": \"\", \"limit\": \"\", \"collaborators\": \"\", \"dateRange\": \"\", \"characters\": \"\", \"series\": \"\", \"events\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getComicsByEvent",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getComicsByEvent",
            "description": "Fetches lists of comics which take place during a specific event, with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "eventId",
                    "type": "NUMBER",
                    "description": "Event id.",
                    "default": ""
                },
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "formatType",
                    "type": "SELECT",
                    "description": "Filter by the issue format type (comic or collection).",
                    "default": ""
                },
                {
                    "name": "dateDescriptor",
                    "type": "SELECT",
                    "description": "Return comics within a predefined date range. Values: lastWeek, thisWeek, nextWeek, thisMonth",
                    "default": ""
                },
                {
                    "name": "noVariants",
                    "type": "BOOLEAN",
                    "description": "Exclude variant comics from the result set.",
                    "default": ""
                },
                {
                    "name": "format",
                    "type": "SELECT",
                    "description": "Filter by the issue format (e.g. comic, digital comic, hardcover, magazine, trade paperback, digest, graphic novel, infinite comic).",
                    "default": ""
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "Return only issues in series whose title matches the input.",
                    "default": ""
                },
                {
                    "name": "upc",
                    "type": "STRING",
                    "description": "Filter by UPC.",
                    "default": ""
                },
                {
                    "name": "diamondCode",
                    "type": "STRING",
                    "description": "Filter by diamond code.",
                    "default": ""
                },
                {
                    "name": "startYear",
                    "type": "STRING",
                    "description": "Return only issues in series whose start year matches the input.",
                    "default": ""
                },
                {
                    "name": "hasDigitalIssue",
                    "type": "BOOLEAN",
                    "description": "Include only results which are available digitally.",
                    "default": ""
                },
                {
                    "name": "ean",
                    "type": "STRING",
                    "description": "Filter by EAN.",
                    "default": ""
                },
                {
                    "name": "isbn",
                    "type": "STRING",
                    "description": "Filter by ISBN.",
                    "default": ""
                },
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only comics which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "digitalId",
                    "type": "NUMBER",
                    "description": "Filter by digital comic id.",
                    "default": ""
                },
                {
                    "name": "titleStartsWith",
                    "type": "STRING",
                    "description": "Return only issues in series whose title starts with the input.",
                    "default": ""
                },
                {
                    "name": "issueNumber",
                    "type": "STRING",
                    "description": "Return only issues in series whose issue number matches the input.",
                    "default": ""
                },
                {
                    "name": "issn",
                    "type": "STRING",
                    "description": "Filter by ISSN.",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "sharedAppearances",
                    "type": "STRING",
                    "description": "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear).",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: focDate, onsaleDate, title, issueNumber, modified",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "collaborators",
                    "type": "STRING",
                    "description": "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work).",
                    "default": ""
                },
                {
                    "name": "dateRange",
                    "type": "LIST",
                    "description": "Return comics within a predefined date range. Dates must be specified as array.  Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format.",
                    "default": ""
                },
                {
                    "name": "creators",
                    "type": "LIST",
                    "description": "Return only comics which feature work by the specified creators (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "characters",
                    "type": "LIST",
                    "description": "Return only comics which feature the specified characters (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "series",
                    "type": "LIST",
                    "description": "Return only comics which are part of the specified series (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "events",
                    "type": "LIST",
                    "description": "Return only comics which take place in the specified events (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "stories",
                    "type": "LIST",
                    "description": "Return only comics which contain the specified stories (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getComicsByEvent\"\nquerystring = {\"formatType\": \"\", \"publicKey\": \"\", \"eventId\": \"\", \"dateDescriptor\": \"\", \"privateKey\": \"\", \"noVariants\": \"\", \"format\": \"\", \"title\": \"\", \"upc\": \"\", \"diamondCode\": \"\", \"startYear\": \"\", \"hasDigitalIssue\": \"\", \"ean\": \"\", \"isbn\": \"\", \"modifiedSince\": \"\", \"digitalId\": \"\", \"titleStartsWith\": \"\", \"issueNumber\": \"\", \"issn\": \"\", \"offset\": \"\", \"sharedAppearances\": \"\", \"orderBy\": \"\", \"limit\": \"\", \"collaborators\": \"\", \"dateRange\": \"\", \"creators\": \"\", \"characters\": \"\", \"series\": \"\", \"events\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getComicsByEvent\"\nquerystring = {\"formatType\": \"\", \"publicKey\": \"\", \"eventId\": \"\", \"dateDescriptor\": \"\", \"privateKey\": \"\", \"noVariants\": \"\", \"format\": \"\", \"title\": \"\", \"upc\": \"\", \"diamondCode\": \"\", \"startYear\": \"\", \"hasDigitalIssue\": \"\", \"ean\": \"\", \"isbn\": \"\", \"modifiedSince\": \"\", \"digitalId\": \"\", \"titleStartsWith\": \"\", \"issueNumber\": \"\", \"issn\": \"\", \"offset\": \"\", \"sharedAppearances\": \"\", \"orderBy\": \"\", \"limit\": \"\", \"collaborators\": \"\", \"dateRange\": \"\", \"creators\": \"\", \"characters\": \"\", \"series\": \"\", \"events\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getComicsBySeries",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getComicsBySeries",
            "description": "Fetches lists of comics which are published as part of a specific series, with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "seriesId",
                    "type": "NUMBER",
                    "description": "A single series id.",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "SELECT",
                    "description": "Filter by the issue format (e.g. comic, digital comic, hardcover, magazine, trade paperback, digest, graphic novel, infinite comic).",
                    "default": ""
                },
                {
                    "name": "noVariants",
                    "type": "BOOLEAN",
                    "description": "Exclude variant comics from the result set.",
                    "default": ""
                },
                {
                    "name": "dateDescriptor",
                    "type": "SELECT",
                    "description": "Return comics within a predefined date range. Values: lastWeek, thisWeek, nextWeek, thisMonth",
                    "default": ""
                },
                {
                    "name": "formatType",
                    "type": "SELECT",
                    "description": "Filter by the issue format type (comic or collection).",
                    "default": ""
                },
                {
                    "name": "digitalId",
                    "type": "NUMBER",
                    "description": "Filter by digital comic id.",
                    "default": ""
                },
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only comics which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "issueNumber",
                    "type": "STRING",
                    "description": "Return only issues in series whose issue number matches the input.",
                    "default": ""
                },
                {
                    "name": "isbn",
                    "type": "STRING",
                    "description": "Filter by ISBN.",
                    "default": ""
                },
                {
                    "name": "titleStartsWith",
                    "type": "STRING",
                    "description": "Return only issues in series whose title starts with the input.",
                    "default": ""
                },
                {
                    "name": "issn",
                    "type": "STRING",
                    "description": "Filter by ISSN.",
                    "default": ""
                },
                {
                    "name": "hasDigitalIssue",
                    "type": "BOOLEAN",
                    "description": "Include only results which are available digitally.",
                    "default": ""
                },
                {
                    "name": "ean",
                    "type": "STRING",
                    "description": "Filter by EAN.",
                    "default": ""
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "Return only issues in series whose title matches the input.",
                    "default": ""
                },
                {
                    "name": "diamondCode",
                    "type": "STRING",
                    "description": "Filter by diamond code.",
                    "default": ""
                },
                {
                    "name": "upc",
                    "type": "STRING",
                    "description": "Filter by UPC.",
                    "default": ""
                },
                {
                    "name": "startYear",
                    "type": "STRING",
                    "description": "Return only issues in series whose start year matches the input.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "collaborators",
                    "type": "STRING",
                    "description": "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work).",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: focDate, onsaleDate, title, issueNumber, modified",
                    "default": ""
                },
                {
                    "name": "sharedAppearances",
                    "type": "STRING",
                    "description": "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear).",
                    "default": ""
                },
                {
                    "name": "dateRange",
                    "type": "LIST",
                    "description": "Return comics within a predefined date range. Dates must be specified as array.  Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format.",
                    "default": ""
                },
                {
                    "name": "creators",
                    "type": "LIST",
                    "description": "Return only comics which feature work by the specified creators (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "characters",
                    "type": "LIST",
                    "description": "Return only comics which feature the specified characters (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "events",
                    "type": "LIST",
                    "description": "Return only comics which take place in the specified events (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "stories",
                    "type": "LIST",
                    "description": "Return only comics which contain the specified stories (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getComicsBySeries\"\nquerystring = {\"format\": \"\", \"privateKey\": \"\", \"noVariants\": \"\", \"seriesId\": \"\", \"dateDescriptor\": \"\", \"formatType\": \"\", \"digitalId\": \"\", \"modifiedSince\": \"\", \"issueNumber\": \"\", \"publicKey\": \"\", \"isbn\": \"\", \"titleStartsWith\": \"\", \"issn\": \"\", \"hasDigitalIssue\": \"\", \"ean\": \"\", \"title\": \"\", \"diamondCode\": \"\", \"upc\": \"\", \"startYear\": \"\", \"limit\": \"\", \"collaborators\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"sharedAppearances\": \"\", \"dateRange\": \"\", \"creators\": \"\", \"characters\": \"\", \"events\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getComicsBySeries\"\nquerystring = {\"format\": \"\", \"privateKey\": \"\", \"noVariants\": \"\", \"seriesId\": \"\", \"dateDescriptor\": \"\", \"formatType\": \"\", \"digitalId\": \"\", \"modifiedSince\": \"\", \"issueNumber\": \"\", \"publicKey\": \"\", \"isbn\": \"\", \"titleStartsWith\": \"\", \"issn\": \"\", \"hasDigitalIssue\": \"\", \"ean\": \"\", \"title\": \"\", \"diamondCode\": \"\", \"upc\": \"\", \"startYear\": \"\", \"limit\": \"\", \"collaborators\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"sharedAppearances\": \"\", \"dateRange\": \"\", \"creators\": \"\", \"characters\": \"\", \"events\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getComicsByStory",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getComicsByStory",
            "description": "Fetches lists of comic characters appearing in a single story, with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "storyId",
                    "type": "NUMBER",
                    "description": "A single story id.",
                    "default": ""
                },
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "upc",
                    "type": "STRING",
                    "description": "Filter by UPC.",
                    "default": ""
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "Return only issues in series whose title matches the input.",
                    "default": ""
                },
                {
                    "name": "formatType",
                    "type": "SELECT",
                    "description": "Filter by the issue format type (comic or collection).",
                    "default": ""
                },
                {
                    "name": "dateDescriptor",
                    "type": "SELECT",
                    "description": "Return comics within a predefined date range. Values: lastWeek, thisWeek, nextWeek, thisMonth",
                    "default": ""
                },
                {
                    "name": "noVariants",
                    "type": "BOOLEAN",
                    "description": "Exclude variant comics from the result set.",
                    "default": ""
                },
                {
                    "name": "format",
                    "type": "SELECT",
                    "description": "Filter by the issue format (e.g. comic, digital comic, hardcover, magazine, trade paperback, digest, graphic novel, infinite comic).",
                    "default": ""
                },
                {
                    "name": "hasDigitalIssue",
                    "type": "BOOLEAN",
                    "description": "Include only results which are available digitally.",
                    "default": ""
                },
                {
                    "name": "ean",
                    "type": "STRING",
                    "description": "Filter by EAN.",
                    "default": ""
                },
                {
                    "name": "startYear",
                    "type": "STRING",
                    "description": "Return only issues in series whose start year matches the input.",
                    "default": ""
                },
                {
                    "name": "diamondCode",
                    "type": "STRING",
                    "description": "Filter by diamond code.",
                    "default": ""
                },
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only comics which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "issueNumber",
                    "type": "STRING",
                    "description": "Return only issues in series whose issue number matches the input.",
                    "default": ""
                },
                {
                    "name": "isbn",
                    "type": "STRING",
                    "description": "Filter by ISBN.",
                    "default": ""
                },
                {
                    "name": "titleStartsWith",
                    "type": "STRING",
                    "description": "Return only issues in series whose title starts with the input.",
                    "default": ""
                },
                {
                    "name": "issn",
                    "type": "STRING",
                    "description": "Filter by ISSN.",
                    "default": ""
                },
                {
                    "name": "digitalId",
                    "type": "NUMBER",
                    "description": "Filter by digital comic id.",
                    "default": ""
                },
                {
                    "name": "collaborators",
                    "type": "STRING",
                    "description": "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work).",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: focDate, onsaleDate, title, issueNumber, modified",
                    "default": ""
                },
                {
                    "name": "sharedAppearances",
                    "type": "STRING",
                    "description": "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear).",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "dateRange",
                    "type": "LIST",
                    "description": "Return comics within a predefined date range. Dates must be specified as array.  Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format.",
                    "default": ""
                },
                {
                    "name": "creators",
                    "type": "LIST",
                    "description": "Return only comics which feature work by the specified creators (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "characters",
                    "type": "LIST",
                    "description": "Return only comics which feature the specified characters (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "events",
                    "type": "LIST",
                    "description": "Return only comics which take place in the specified events (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "series",
                    "type": "LIST",
                    "description": "Return only characters which appear the specified series (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getComicsByStory\"\nquerystring = {\"upc\": \"\", \"title\": \"\", \"publicKey\": \"\", \"formatType\": \"\", \"storyId\": \"\", \"dateDescriptor\": \"\", \"noVariants\": \"\", \"privateKey\": \"\", \"format\": \"\", \"hasDigitalIssue\": \"\", \"ean\": \"\", \"startYear\": \"\", \"diamondCode\": \"\", \"modifiedSince\": \"\", \"issueNumber\": \"\", \"isbn\": \"\", \"titleStartsWith\": \"\", \"issn\": \"\", \"digitalId\": \"\", \"collaborators\": \"\", \"limit\": \"\", \"orderBy\": \"\", \"sharedAppearances\": \"\", \"offset\": \"\", \"dateRange\": \"\", \"creators\": \"\", \"characters\": \"\", \"events\": \"\", \"series\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getComicsByStory\"\nquerystring = {\"upc\": \"\", \"title\": \"\", \"publicKey\": \"\", \"formatType\": \"\", \"storyId\": \"\", \"dateDescriptor\": \"\", \"noVariants\": \"\", \"privateKey\": \"\", \"format\": \"\", \"hasDigitalIssue\": \"\", \"ean\": \"\", \"startYear\": \"\", \"diamondCode\": \"\", \"modifiedSince\": \"\", \"issueNumber\": \"\", \"isbn\": \"\", \"titleStartsWith\": \"\", \"issn\": \"\", \"digitalId\": \"\", \"collaborators\": \"\", \"limit\": \"\", \"orderBy\": \"\", \"sharedAppearances\": \"\", \"offset\": \"\", \"dateRange\": \"\", \"creators\": \"\", \"characters\": \"\", \"events\": \"\", \"series\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCreators",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getCreators",
            "description": "Fetches lists of comic creators with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "middleName",
                    "type": "STRING",
                    "description": "Filter by creator middle name (e.g. Michael).",
                    "default": ""
                },
                {
                    "name": "firstNameStartsWith",
                    "type": "STRING",
                    "description": "Filter by creator first names that match critera (e.g. B, St L).",
                    "default": ""
                },
                {
                    "name": "suffix",
                    "type": "STRING",
                    "description": "Filter by suffix or honorific (e.g. Jr., Sr.).",
                    "default": ""
                },
                {
                    "name": "lastNameStartsWith",
                    "type": "STRING",
                    "description": "Filter by creator last names that match critera (e.g. Ben).",
                    "default": ""
                },
                {
                    "name": "lastName",
                    "type": "STRING",
                    "description": "Filter by creator last name (e.g. Bendis).",
                    "default": ""
                },
                {
                    "name": "firstName",
                    "type": "STRING",
                    "description": "Filter by creator first name (e.g. brian).",
                    "default": ""
                },
                {
                    "name": "nameStartsWith",
                    "type": "STRING",
                    "description": "Filter by creator names that match critera (e.g. B, St L).",
                    "default": ""
                },
                {
                    "name": "middleNameStartsWith",
                    "type": "STRING",
                    "description": "Filter by creator middle names that match critera (e.g. Mi).",
                    "default": ""
                },
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only creators which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: lastName, firstName, middleName, suffix, modified",
                    "default": ""
                },
                {
                    "name": "series",
                    "type": "LIST",
                    "description": "Return only creators who worked on in the specified series (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "events",
                    "type": "LIST",
                    "description": "Return only creators who worked on comics that took place in the specified events (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "comics",
                    "type": "LIST",
                    "description": "Return only creators who worked on in the specified comics (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "stories",
                    "type": "LIST",
                    "description": "Return only creators who worked on in the specified stories (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getCreators\"\nquerystring = {\"middleName\": \"\", \"privateKey\": \"\", \"firstNameStartsWith\": \"\", \"suffix\": \"\", \"lastNameStartsWith\": \"\", \"lastName\": \"\", \"firstName\": \"\", \"nameStartsWith\": \"\", \"publicKey\": \"\", \"middleNameStartsWith\": \"\", \"modifiedSince\": \"\", \"limit\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"series\": \"\", \"events\": \"\", \"comics\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getCreators\"\nquerystring = {\"middleName\": \"\", \"privateKey\": \"\", \"firstNameStartsWith\": \"\", \"suffix\": \"\", \"lastNameStartsWith\": \"\", \"lastName\": \"\", \"firstName\": \"\", \"nameStartsWith\": \"\", \"publicKey\": \"\", \"middleNameStartsWith\": \"\", \"modifiedSince\": \"\", \"limit\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"series\": \"\", \"events\": \"\", \"comics\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCreatorsByComic",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getCreatorsByComic",
            "description": "Fetches lists of comic creators whose work appears in a specific comic, with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "comicId",
                    "type": "NUMBER",
                    "description": "A single comic id.",
                    "default": ""
                },
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "firstNameStartsWith",
                    "type": "STRING",
                    "description": "Filter by creator first names that match critera (e.g. B, St L).",
                    "default": ""
                },
                {
                    "name": "middleName",
                    "type": "STRING",
                    "description": "Filter by creator middle name (e.g. Michael).",
                    "default": ""
                },
                {
                    "name": "lastNameStartsWith",
                    "type": "STRING",
                    "description": "Filter by creator last names that match critera (e.g. Ben).",
                    "default": ""
                },
                {
                    "name": "suffix",
                    "type": "STRING",
                    "description": "Filter by suffix or honorific (e.g. Jr., Sr.).",
                    "default": ""
                },
                {
                    "name": "nameStartsWith",
                    "type": "STRING",
                    "description": "Filter by creator names that match critera (e.g. B, St L).",
                    "default": ""
                },
                {
                    "name": "lastName",
                    "type": "STRING",
                    "description": "Filter by creator last name (e.g. Bendis).",
                    "default": ""
                },
                {
                    "name": "firstName",
                    "type": "STRING",
                    "description": "Filter by creator first name (e.g. brian).",
                    "default": ""
                },
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only creators which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "middleNameStartsWith",
                    "type": "STRING",
                    "description": "Filter by creator middle names that match critera (e.g. Mi).",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: lastName, firstName, middleName, suffix, modified",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "series",
                    "type": "LIST",
                    "description": "Return only creators who worked on in the specified series (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "comics",
                    "type": "LIST",
                    "description": "Return only creators who worked on in the specified comics (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "stories",
                    "type": "LIST",
                    "description": "Return only creators who worked on in the specified stories (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getCreatorsByComic\"\nquerystring = {\"publicKey\": \"\", \"firstNameStartsWith\": \"\", \"middleName\": \"\", \"comicId\": \"\", \"lastNameStartsWith\": \"\", \"suffix\": \"\", \"nameStartsWith\": \"\", \"privateKey\": \"\", \"lastName\": \"\", \"firstName\": \"\", \"modifiedSince\": \"\", \"middleNameStartsWith\": \"\", \"orderBy\": \"\", \"offset\": \"\", \"limit\": \"\", \"series\": \"\", \"comics\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getCreatorsByComic\"\nquerystring = {\"publicKey\": \"\", \"firstNameStartsWith\": \"\", \"middleName\": \"\", \"comicId\": \"\", \"lastNameStartsWith\": \"\", \"suffix\": \"\", \"nameStartsWith\": \"\", \"privateKey\": \"\", \"lastName\": \"\", \"firstName\": \"\", \"modifiedSince\": \"\", \"middleNameStartsWith\": \"\", \"orderBy\": \"\", \"offset\": \"\", \"limit\": \"\", \"series\": \"\", \"comics\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCreatorsByEvent",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getCreatorsByEvent",
            "description": "Fetches lists of comic creators whose work appears in a specific event, with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "eventId",
                    "type": "NUMBER",
                    "description": "A single event id.",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "firstName",
                    "type": "STRING",
                    "description": "Filter by creator first name (e.g. brian).",
                    "default": ""
                },
                {
                    "name": "lastName",
                    "type": "STRING",
                    "description": "Filter by creator last name (e.g. Bendis).",
                    "default": ""
                },
                {
                    "name": "middleNameStartsWith",
                    "type": "STRING",
                    "description": "Filter by creator middle names that match critera (e.g. Mi).",
                    "default": ""
                },
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only creators which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "nameStartsWith",
                    "type": "STRING",
                    "description": "Filter by creator names that match critera (e.g. B, St L).",
                    "default": ""
                },
                {
                    "name": "lastNameStartsWith",
                    "type": "STRING",
                    "description": "Filter by creator last names that match critera (e.g. Ben).",
                    "default": ""
                },
                {
                    "name": "suffix",
                    "type": "STRING",
                    "description": "Filter by suffix or honorific (e.g. Jr., Sr.).",
                    "default": ""
                },
                {
                    "name": "middleName",
                    "type": "STRING",
                    "description": "Filter by creator middle name (e.g. Michael).",
                    "default": ""
                },
                {
                    "name": "firstNameStartsWith",
                    "type": "STRING",
                    "description": "Filter by creator first names that match critera (e.g. B, St L).",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: lastName, firstName, middleName, suffix, modified",
                    "default": ""
                },
                {
                    "name": "series",
                    "type": "LIST",
                    "description": "Return only creators who worked on in the specified series (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "comics",
                    "type": "LIST",
                    "description": "Return only creators who worked on in the specified comics (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "stories",
                    "type": "LIST",
                    "description": "Return only creators who worked on in the specified stories (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getCreatorsByEvent\"\nquerystring = {\"privateKey\": \"\", \"firstName\": \"\", \"lastName\": \"\", \"middleNameStartsWith\": \"\", \"modifiedSince\": \"\", \"nameStartsWith\": \"\", \"eventId\": \"\", \"publicKey\": \"\", \"lastNameStartsWith\": \"\", \"suffix\": \"\", \"middleName\": \"\", \"firstNameStartsWith\": \"\", \"limit\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"series\": \"\", \"comics\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getCreatorsByEvent\"\nquerystring = {\"privateKey\": \"\", \"firstName\": \"\", \"lastName\": \"\", \"middleNameStartsWith\": \"\", \"modifiedSince\": \"\", \"nameStartsWith\": \"\", \"eventId\": \"\", \"publicKey\": \"\", \"lastNameStartsWith\": \"\", \"suffix\": \"\", \"middleName\": \"\", \"firstNameStartsWith\": \"\", \"limit\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"series\": \"\", \"comics\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCreatorsBySeries",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getCreatorsBySeries",
            "description": "Fetches lists of comic creators whose work appears in a specific series, with optional filters. ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "seriesId",
                    "type": "NUMBER",
                    "description": "A single series id.",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "firstNameStartsWith",
                    "type": "STRING",
                    "description": "Filter by creator first names that match critera (e.g. B, St L).",
                    "default": ""
                },
                {
                    "name": "suffix",
                    "type": "STRING",
                    "description": "Filter by suffix or honorific (e.g. Jr., Sr.).",
                    "default": ""
                },
                {
                    "name": "middleName",
                    "type": "STRING",
                    "description": "Filter by creator middle name (e.g. Michael).",
                    "default": ""
                },
                {
                    "name": "lastNameStartsWith",
                    "type": "STRING",
                    "description": "Filter by creator last names that match critera (e.g. Ben).",
                    "default": ""
                },
                {
                    "name": "firstName",
                    "type": "STRING",
                    "description": "Filter by creator first name (e.g. brian).",
                    "default": ""
                },
                {
                    "name": "lastName",
                    "type": "STRING",
                    "description": "Filter by creator last name (e.g. Bendis).",
                    "default": ""
                },
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only creators which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "middleNameStartsWith",
                    "type": "STRING",
                    "description": "Filter by creator middle names that match critera (e.g. Mi).",
                    "default": ""
                },
                {
                    "name": "nameStartsWith",
                    "type": "STRING",
                    "description": "Filter by creator names that match critera (e.g. B, St L).",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: lastName, firstName, middleName, suffix, modified",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "events",
                    "type": "LIST",
                    "description": "Return only creators who worked on comics that took place in the specified events (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "comics",
                    "type": "LIST",
                    "description": "Return only creators who worked on in the specified comics (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "stories",
                    "type": "LIST",
                    "description": "Return only creators who worked on in the specified stories (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getCreatorsBySeries\"\nquerystring = {\"seriesId\": \"\", \"firstNameStartsWith\": \"\", \"suffix\": \"\", \"middleName\": \"\", \"publicKey\": \"\", \"lastNameStartsWith\": \"\", \"firstName\": \"\", \"lastName\": \"\", \"modifiedSince\": \"\", \"privateKey\": \"\", \"middleNameStartsWith\": \"\", \"nameStartsWith\": \"\", \"orderBy\": \"\", \"offset\": \"\", \"limit\": \"\", \"events\": \"\", \"comics\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getCreatorsBySeries\"\nquerystring = {\"seriesId\": \"\", \"firstNameStartsWith\": \"\", \"suffix\": \"\", \"middleName\": \"\", \"publicKey\": \"\", \"lastNameStartsWith\": \"\", \"firstName\": \"\", \"lastName\": \"\", \"modifiedSince\": \"\", \"privateKey\": \"\", \"middleNameStartsWith\": \"\", \"nameStartsWith\": \"\", \"orderBy\": \"\", \"offset\": \"\", \"limit\": \"\", \"events\": \"\", \"comics\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCreatorsByStory",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getCreatorsByStory",
            "description": "Fetches lists of comic creators whose work appears in a specific story, with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "storyId",
                    "type": "NUMBER",
                    "description": "A single story id.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "firstName",
                    "type": "STRING",
                    "description": "Filter by creator first name (e.g. brian).",
                    "default": ""
                },
                {
                    "name": "lastName",
                    "type": "STRING",
                    "description": "Filter by creator last name (e.g. Bendis).",
                    "default": ""
                },
                {
                    "name": "nameStartsWith",
                    "type": "STRING",
                    "description": "Filter by creator names that match critera (e.g. B, St L).",
                    "default": ""
                },
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only creators which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "middleNameStartsWith",
                    "type": "STRING",
                    "description": "Filter by creator middle names that match critera (e.g. Mi).",
                    "default": ""
                },
                {
                    "name": "middleName",
                    "type": "STRING",
                    "description": "Filter by creator middle name (e.g. Michael).",
                    "default": ""
                },
                {
                    "name": "suffix",
                    "type": "STRING",
                    "description": "Filter by suffix or honorific (e.g. Jr., Sr.).",
                    "default": ""
                },
                {
                    "name": "lastNameStartsWith",
                    "type": "STRING",
                    "description": "Filter by creator last names that match critera (e.g. Ben).",
                    "default": ""
                },
                {
                    "name": "firstNameStartsWith",
                    "type": "STRING",
                    "description": "Filter by creator first names that match critera (e.g. B, St L).",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: lastName, firstName, middleName, suffix, modified",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "events",
                    "type": "LIST",
                    "description": "Return only creators who worked on comics that took place in the specified events (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "comics",
                    "type": "LIST",
                    "description": "Return only creators who worked on in the specified comics (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "series",
                    "type": "LIST",
                    "description": "Return only creators who worked on the specified series (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getCreatorsByStory\"\nquerystring = {\"firstName\": \"\", \"lastName\": \"\", \"nameStartsWith\": \"\", \"modifiedSince\": \"\", \"middleNameStartsWith\": \"\", \"privateKey\": \"\", \"middleName\": \"\", \"publicKey\": \"\", \"storyId\": \"\", \"suffix\": \"\", \"lastNameStartsWith\": \"\", \"firstNameStartsWith\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"limit\": \"\", \"events\": \"\", \"comics\": \"\", \"series\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getCreatorsByStory\"\nquerystring = {\"firstName\": \"\", \"lastName\": \"\", \"nameStartsWith\": \"\", \"modifiedSince\": \"\", \"middleNameStartsWith\": \"\", \"privateKey\": \"\", \"middleName\": \"\", \"publicKey\": \"\", \"storyId\": \"\", \"suffix\": \"\", \"lastNameStartsWith\": \"\", \"firstNameStartsWith\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"limit\": \"\", \"events\": \"\", \"comics\": \"\", \"series\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getEvents",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getEvents",
            "description": "Fetches lists of events with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "nameStartsWith",
                    "type": "STRING",
                    "description": "Return events with names that begin with the specified string (e.g. Sp).",
                    "default": ""
                },
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only events which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filter the event list by name.",
                    "default": ""
                },
                {
                    "name": "characters",
                    "type": "STRING",
                    "description": "Return only events which feature the specified characters (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: name, startDate, modified",
                    "default": ""
                },
                {
                    "name": "creators",
                    "type": "LIST",
                    "description": "Return only comics which feature work by the specified creators (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "series",
                    "type": "LIST",
                    "description": "Return only events which are part of the specified series (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "comics",
                    "type": "LIST",
                    "description": "Return only events which take place in the specified comics (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "stories",
                    "type": "LIST",
                    "description": "Return only events which contain the specified stories (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getEvents\"\nquerystring = {\"privateKey\": \"\", \"nameStartsWith\": \"\", \"publicKey\": \"\", \"modifiedSince\": \"\", \"name\": \"\", \"characters\": \"\", \"limit\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"creators\": \"\", \"series\": \"\", \"comics\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getEvents\"\nquerystring = {\"privateKey\": \"\", \"nameStartsWith\": \"\", \"publicKey\": \"\", \"modifiedSince\": \"\", \"name\": \"\", \"characters\": \"\", \"limit\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"creators\": \"\", \"series\": \"\", \"comics\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getEventsByCharacter",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getEventsByCharacter",
            "description": "Fetches lists of events containing a specific character, with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "characterId",
                    "type": "NUMBER",
                    "description": "A single character id.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filter the event list by name.",
                    "default": ""
                },
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only events which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "nameStartsWith",
                    "type": "STRING",
                    "description": "Return events with names that begin with the specified string (e.g. Sp).",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: name, startDate modified",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "creators",
                    "type": "LIST",
                    "description": "Return only comics which feature work by the specified creators (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "series",
                    "type": "LIST",
                    "description": "Return only events which are part of the specified series (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "comics",
                    "type": "LIST",
                    "description": "Return only events which take place in the specified comics (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "stories",
                    "type": "LIST",
                    "description": "Return only events which contain the specified stories (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getEventsByCharacter\"\nquerystring = {\"privateKey\": \"\", \"name\": \"\", \"modifiedSince\": \"\", \"nameStartsWith\": \"\", \"publicKey\": \"\", \"characterId\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"limit\": \"\", \"creators\": \"\", \"series\": \"\", \"comics\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getEventsByCharacter\"\nquerystring = {\"privateKey\": \"\", \"name\": \"\", \"modifiedSince\": \"\", \"nameStartsWith\": \"\", \"publicKey\": \"\", \"characterId\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"limit\": \"\", \"creators\": \"\", \"series\": \"\", \"comics\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getEventsByComic",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getEventsByComic",
            "description": "Fetches lists of events in which a specific comic appears, with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "comicId",
                    "type": "NUMBER",
                    "description": "A single comic id.",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "nameStartsWith",
                    "type": "STRING",
                    "description": "Return events with names that begin with the specified string (e.g. Sp).",
                    "default": ""
                },
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only events which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filter the event list by name.",
                    "default": ""
                },
                {
                    "name": "characters",
                    "type": "STRING",
                    "description": "Return only events which feature the specified characters (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: name, startDate, modified",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "creators",
                    "type": "LIST",
                    "description": "Return only comics which feature work by the specified creators (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "series",
                    "type": "LIST",
                    "description": "Return only events which are part of the specified series (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "stories",
                    "type": "LIST",
                    "description": "Return only events which contain the specified stories (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getEventsByComic\"\nquerystring = {\"comicId\": \"\", \"publicKey\": \"\", \"nameStartsWith\": \"\", \"modifiedSince\": \"\", \"name\": \"\", \"privateKey\": \"\", \"characters\": \"\", \"orderBy\": \"\", \"offset\": \"\", \"limit\": \"\", \"creators\": \"\", \"series\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getEventsByComic\"\nquerystring = {\"comicId\": \"\", \"publicKey\": \"\", \"nameStartsWith\": \"\", \"modifiedSince\": \"\", \"name\": \"\", \"privateKey\": \"\", \"characters\": \"\", \"orderBy\": \"\", \"offset\": \"\", \"limit\": \"\", \"creators\": \"\", \"series\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getEventsByCreator",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getEventsByCreator",
            "description": "Fetches lists of events featuring the work of a specific creator with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "creatorId",
                    "type": "NUMBER",
                    "description": "Creator id.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only events which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filter the event list by name.",
                    "default": ""
                },
                {
                    "name": "nameStartsWith",
                    "type": "STRING",
                    "description": "Return events with names that begin with the specified string (e.g. Sp).",
                    "default": ""
                },
                {
                    "name": "characters",
                    "type": "STRING",
                    "description": "Return only events which feature the specified characters (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: name, startDate, modified",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "comics",
                    "type": "LIST",
                    "description": "Return only events which take place in the specified comics (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "series",
                    "type": "LIST",
                    "description": "Return only events which are part of the specified series (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "stories",
                    "type": "LIST",
                    "description": "Return only events which contain the specified stories (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getEventsByCreator\"\nquerystring = {\"privateKey\": \"\", \"modifiedSince\": \"\", \"name\": \"\", \"publicKey\": \"\", \"nameStartsWith\": \"\", \"creatorId\": \"\", \"characters\": \"\", \"limit\": \"\", \"orderBy\": \"\", \"offset\": \"\", \"comics\": \"\", \"series\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getEventsByCreator\"\nquerystring = {\"privateKey\": \"\", \"modifiedSince\": \"\", \"name\": \"\", \"publicKey\": \"\", \"nameStartsWith\": \"\", \"creatorId\": \"\", \"characters\": \"\", \"limit\": \"\", \"orderBy\": \"\", \"offset\": \"\", \"comics\": \"\", \"series\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getEventsBySeries",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getEventsBySeries",
            "description": "Fetches lists of events which occur in a specific series, with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "seriesId",
                    "type": "NUMBER",
                    "description": "A single series id.",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filter the event list by name.",
                    "default": ""
                },
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only events which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "nameStartsWith",
                    "type": "STRING",
                    "description": "Return events with names that begin with the specified string (e.g. Sp).",
                    "default": ""
                },
                {
                    "name": "characters",
                    "type": "STRING",
                    "description": "Return only events which feature the specified characters (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: name, startDate modified",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "creators",
                    "type": "LIST",
                    "description": "Return only comics which feature work by the specified creators (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "comics",
                    "type": "LIST",
                    "description": "Return only events which take place in the specified comics (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "stories",
                    "type": "LIST",
                    "description": "Return only events which contain the specified stories (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getEventsBySeries\"\nquerystring = {\"privateKey\": \"\", \"name\": \"\", \"modifiedSince\": \"\", \"nameStartsWith\": \"\", \"seriesId\": \"\", \"publicKey\": \"\", \"characters\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"limit\": \"\", \"creators\": \"\", \"comics\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getEventsBySeries\"\nquerystring = {\"privateKey\": \"\", \"name\": \"\", \"modifiedSince\": \"\", \"nameStartsWith\": \"\", \"seriesId\": \"\", \"publicKey\": \"\", \"characters\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"limit\": \"\", \"creators\": \"\", \"comics\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getEventsByStory",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getEventsByStory",
            "description": "Fetches lists of events in which a specific story appears, with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "storyId",
                    "type": "NUMBER",
                    "description": "A single story id.",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "nameStartsWith",
                    "type": "STRING",
                    "description": "Return events with names that begin with the specified string (e.g. Sp).",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filter the event list by name.",
                    "default": ""
                },
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only events which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "characters",
                    "type": "STRING",
                    "description": "Return only events which feature the specified characters (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: name, startDate modified",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "creators",
                    "type": "LIST",
                    "description": "Return only comics which feature work by the specified creators (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "comics",
                    "type": "LIST",
                    "description": "Return only events which take place in the specified comics (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "series",
                    "type": "LIST",
                    "description": "Return only events which are part of the specified series (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getEventsByStory\"\nquerystring = {\"storyId\": \"\", \"nameStartsWith\": \"\", \"publicKey\": \"\", \"name\": \"\", \"privateKey\": \"\", \"modifiedSince\": \"\", \"characters\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"limit\": \"\", \"creators\": \"\", \"comics\": \"\", \"series\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getEventsByStory\"\nquerystring = {\"storyId\": \"\", \"nameStartsWith\": \"\", \"publicKey\": \"\", \"name\": \"\", \"privateKey\": \"\", \"modifiedSince\": \"\", \"characters\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"limit\": \"\", \"creators\": \"\", \"comics\": \"\", \"series\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSeries",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getSeries",
            "description": "Fetches lists of comic series with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only series which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "titleStartsWith",
                    "type": "STRING",
                    "description": "Return only issues in series whose title starts with the input.",
                    "default": ""
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "Return only issues in series whose title matches the input.",
                    "default": ""
                },
                {
                    "name": "startYear",
                    "type": "STRING",
                    "description": "Return only issues in series whose start year matches the input.",
                    "default": ""
                },
                {
                    "name": "characters",
                    "type": "STRING",
                    "description": "Return only series which feature the specified characters (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "contains",
                    "type": "SELECT",
                    "description": "Return only series containing one or more comics with the specified format. Values: comic, digital comic, hardcover, magazine, trade paperback, digest, graphic novel, infinite comic).",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: title, startYear, modified",
                    "default": ""
                },
                {
                    "name": "seriesType",
                    "type": "SELECT",
                    "description": "Filter the series by publication frequency type. Values: collection, one shot, limited, ongoing",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "creators",
                    "type": "LIST",
                    "description": "Return only series which feature work by the specified creators (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "comics",
                    "type": "LIST",
                    "description": "Return only series which contain the specified comics (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "events",
                    "type": "LIST",
                    "description": "Return only series which have comics that take place during the specified events (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "stories",
                    "type": "LIST",
                    "description": "Return only series which contain the specified stories (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getSeries\"\nquerystring = {\"privateKey\": \"\", \"modifiedSince\": \"\", \"titleStartsWith\": \"\", \"title\": \"\", \"startYear\": \"\", \"publicKey\": \"\", \"characters\": \"\", \"limit\": \"\", \"contains\": \"\", \"orderBy\": \"\", \"seriesType\": \"\", \"offset\": \"\", \"creators\": \"\", \"comics\": \"\", \"events\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getSeries\"\nquerystring = {\"privateKey\": \"\", \"modifiedSince\": \"\", \"titleStartsWith\": \"\", \"title\": \"\", \"startYear\": \"\", \"publicKey\": \"\", \"characters\": \"\", \"limit\": \"\", \"contains\": \"\", \"orderBy\": \"\", \"seriesType\": \"\", \"offset\": \"\", \"creators\": \"\", \"comics\": \"\", \"events\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSeriesByCharacter",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getSeriesByCharacter",
            "description": "Fetches lists of series containing a specific character, with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "characterId",
                    "type": "NUMBER",
                    "description": "A single character id.",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "Return only issues in series whose title matches the input.",
                    "default": ""
                },
                {
                    "name": "startYear",
                    "type": "STRING",
                    "description": "Return only issues in series whose start year matches the input.",
                    "default": ""
                },
                {
                    "name": "titleStartsWith",
                    "type": "STRING",
                    "description": "Return only issues in series whose title starts with the input.",
                    "default": ""
                },
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only series which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: title, startYear, modified",
                    "default": ""
                },
                {
                    "name": "seriesType",
                    "type": "SELECT",
                    "description": "Filter the series by publication frequency type. Values: collection, one shot, limited, ongoing",
                    "default": ""
                },
                {
                    "name": "contains",
                    "type": "SELECT",
                    "description": "Return only series containing one or more comics with the specified format. Values: comic, digital comic, hardcover, magazine, trade paperback, digest, graphic novel, infinite comic).",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "creators",
                    "type": "LIST",
                    "description": "Return only series which feature work by the specified creators (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "comics",
                    "type": "LIST",
                    "description": "Return only series which contain the specified comics (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "events",
                    "type": "LIST",
                    "description": "Return only series which have comics that take place during the specified events (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "stories",
                    "type": "LIST",
                    "description": "Return only series which contain the specified stories (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getSeriesByCharacter\"\nquerystring = {\"title\": \"\", \"startYear\": \"\", \"privateKey\": \"\", \"titleStartsWith\": \"\", \"modifiedSince\": \"\", \"characterId\": \"\", \"publicKey\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"seriesType\": \"\", \"contains\": \"\", \"limit\": \"\", \"creators\": \"\", \"comics\": \"\", \"events\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getSeriesByCharacter\"\nquerystring = {\"title\": \"\", \"startYear\": \"\", \"privateKey\": \"\", \"titleStartsWith\": \"\", \"modifiedSince\": \"\", \"characterId\": \"\", \"publicKey\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"seriesType\": \"\", \"contains\": \"\", \"limit\": \"\", \"creators\": \"\", \"comics\": \"\", \"events\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSeriesByCreator",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getSeriesByCreator",
            "description": "Fetches lists of comic series in which a specific creator's work appears, with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "creatorId",
                    "type": "NUMBER",
                    "description": "Creator id.",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only series which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "titleStartsWith",
                    "type": "STRING",
                    "description": "Return only issues in series whose title starts with the input.",
                    "default": ""
                },
                {
                    "name": "startYear",
                    "type": "STRING",
                    "description": "Return only issues in series whose start year matches the input.",
                    "default": ""
                },
                {
                    "name": "characters",
                    "type": "STRING",
                    "description": "Return only series which feature the specified characters (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "Return only issues in series whose title matches the input.",
                    "default": ""
                },
                {
                    "name": "contains",
                    "type": "SELECT",
                    "description": "Return only series containing one or more comics with the specified format. Values: comic, digital comic, hardcover, magazine, trade paperback, digest, graphic novel, infinite comic).",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: title, startYear, modified",
                    "default": ""
                },
                {
                    "name": "seriesType",
                    "type": "SELECT",
                    "description": "Filter the series by publication frequency type. Values: collection, one shot, limited, ongoing",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "comics",
                    "type": "LIST",
                    "description": "Return only series which contain the specified comics (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "events",
                    "type": "LIST",
                    "description": "Return only series which have comics that take place during the specified events (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "stories",
                    "type": "LIST",
                    "description": "Return only series which contain the specified stories (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getSeriesByCreator\"\nquerystring = {\"creatorId\": \"\", \"modifiedSince\": \"\", \"titleStartsWith\": \"\", \"publicKey\": \"\", \"privateKey\": \"\", \"startYear\": \"\", \"characters\": \"\", \"title\": \"\", \"contains\": \"\", \"orderBy\": \"\", \"seriesType\": \"\", \"offset\": \"\", \"limit\": \"\", \"comics\": \"\", \"events\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getSeriesByCreator\"\nquerystring = {\"creatorId\": \"\", \"modifiedSince\": \"\", \"titleStartsWith\": \"\", \"publicKey\": \"\", \"privateKey\": \"\", \"startYear\": \"\", \"characters\": \"\", \"title\": \"\", \"contains\": \"\", \"orderBy\": \"\", \"seriesType\": \"\", \"offset\": \"\", \"limit\": \"\", \"comics\": \"\", \"events\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSeriesByEvent",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getSeriesByEvent",
            "description": "Fetches lists of comic series in which a specific event takes place, with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "eventId",
                    "type": "NUMBER",
                    "description": "A single event id.",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "startYear",
                    "type": "STRING",
                    "description": "Return only issues in series whose start year matches the input.",
                    "default": ""
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "Return only issues in series whose title matches the input.",
                    "default": ""
                },
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only series which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "titleStartsWith",
                    "type": "STRING",
                    "description": "Return only issues in series whose title starts with the input.",
                    "default": ""
                },
                {
                    "name": "characters",
                    "type": "STRING",
                    "description": "Return only series which feature the specified characters (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "contains",
                    "type": "SELECT",
                    "description": "Return only series containing one or more comics with the specified format. Values: comic, digital comic, hardcover, magazine, trade paperback, digest, graphic novel, infinite comic).",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "seriesType",
                    "type": "SELECT",
                    "description": "Filter the series by publication frequency type. Values: collection, one shot, limited, ongoing",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: title, startYear, modified",
                    "default": ""
                },
                {
                    "name": "creators",
                    "type": "LIST",
                    "description": "Return only series which feature work by the specified creators (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "comics",
                    "type": "LIST",
                    "description": "Return only series which contain the specified comics (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "stories",
                    "type": "LIST",
                    "description": "Return only series which contain the specified stories (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getSeriesByEvent\"\nquerystring = {\"startYear\": \"\", \"title\": \"\", \"privateKey\": \"\", \"modifiedSince\": \"\", \"eventId\": \"\", \"titleStartsWith\": \"\", \"publicKey\": \"\", \"characters\": \"\", \"contains\": \"\", \"limit\": \"\", \"seriesType\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"creators\": \"\", \"comics\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getSeriesByEvent\"\nquerystring = {\"startYear\": \"\", \"title\": \"\", \"privateKey\": \"\", \"modifiedSince\": \"\", \"eventId\": \"\", \"titleStartsWith\": \"\", \"publicKey\": \"\", \"characters\": \"\", \"contains\": \"\", \"limit\": \"\", \"seriesType\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"creators\": \"\", \"comics\": \"\", \"stories\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSeriesByStory",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getSeriesByStory",
            "description": "Fetches lists of comic series in which the specified story takes place.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "storyId",
                    "type": "NUMBER",
                    "description": "A single story id.",
                    "default": ""
                },
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only series which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "titleStartsWith",
                    "type": "STRING",
                    "description": "Return only issues in series whose title starts with the input.",
                    "default": ""
                },
                {
                    "name": "startYear",
                    "type": "STRING",
                    "description": "Return only issues in series whose start year matches the input.",
                    "default": ""
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "Return only issues in series whose title matches the input.",
                    "default": ""
                },
                {
                    "name": "characters",
                    "type": "STRING",
                    "description": "Return only series which feature the specified characters (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "contains",
                    "type": "SELECT",
                    "description": "Return only series containing one or more comics with the specified format. Values: comic, digital comic, hardcover, magazine, trade paperback, digest, graphic novel, infinite comic).",
                    "default": ""
                },
                {
                    "name": "seriesType",
                    "type": "SELECT",
                    "description": "Filter the series by publication frequency type. Values: collection, one shot, limited, ongoing",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: title, startYear, modified",
                    "default": ""
                },
                {
                    "name": "creators",
                    "type": "LIST",
                    "description": "Return only series which feature work by the specified creators (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "comics",
                    "type": "LIST",
                    "description": "Return only series which contain the specified comics (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "creators",
                    "type": "LIST",
                    "description": "Return only series which feature work by the specified creators (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getSeriesByStory\"\nquerystring = {\"modifiedSince\": \"\", \"publicKey\": \"\", \"storyId\": \"\", \"titleStartsWith\": \"\", \"startYear\": \"\", \"title\": \"\", \"privateKey\": \"\", \"characters\": \"\", \"limit\": \"\", \"contains\": \"\", \"seriesType\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"creators\": \"\", \"comics\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getSeriesByStory\"\nquerystring = {\"modifiedSince\": \"\", \"publicKey\": \"\", \"storyId\": \"\", \"titleStartsWith\": \"\", \"startYear\": \"\", \"title\": \"\", \"privateKey\": \"\", \"characters\": \"\", \"limit\": \"\", \"contains\": \"\", \"seriesType\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"creators\": \"\", \"comics\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleCharacter",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getSingleCharacter",
            "description": "This method fetches a single character resource. It is the canonical URI for any character resource provided by the API.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "characterId",
                    "type": "NUMBER",
                    "description": "A single character id.",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getSingleCharacter\"\nquerystring = {\"privateKey\": \"\", \"characterId\": \"\", \"publicKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getSingleCharacter\"\nquerystring = {\"privateKey\": \"\", \"characterId\": \"\", \"publicKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleComic",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getSingleComic",
            "description": "This method fetches a single comic resource. It is the canonical URI for any comic resource provided by the API.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "comicId",
                    "type": "NUMBER",
                    "description": "A single comic id.",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getSingleComic\"\nquerystring = {\"privateKey\": \"\", \"comicId\": \"\", \"publicKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getSingleComic\"\nquerystring = {\"privateKey\": \"\", \"comicId\": \"\", \"publicKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleCreator",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getSingleCreator",
            "description": "This method fetches a single creator resource. It is the canonical URI for any creator resource provided by the API.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "creatorId",
                    "type": "NUMBER",
                    "description": "ID of the creator",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getSingleCreator\"\nquerystring = {\"privateKey\": \"\", \"creatorId\": \"\", \"publicKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getSingleCreator\"\nquerystring = {\"privateKey\": \"\", \"creatorId\": \"\", \"publicKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleEvent",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getSingleEvent",
            "description": "This method fetches a single event resource. It is the canonical URI for any event resource provided by the API.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "eventId",
                    "type": "NUMBER",
                    "description": "ID of the event",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getSingleEvent\"\nquerystring = {\"privateKey\": \"\", \"eventId\": \"\", \"publicKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getSingleEvent\"\nquerystring = {\"privateKey\": \"\", \"eventId\": \"\", \"publicKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleSeries",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getSingleSeries",
            "description": "Fetches signle series by its id",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "seriesId",
                    "type": "NUMBER",
                    "description": "Id of the series",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getSingleSeries\"\nquerystring = {\"privateKey\": \"\", \"seriesId\": \"\", \"publicKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getSingleSeries\"\nquerystring = {\"privateKey\": \"\", \"seriesId\": \"\", \"publicKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleStory",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getSingleStory",
            "description": "This method fetches a single comic story resource. It is the canonical URI for any comic story resource provided by the API.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "storyId",
                    "type": "NUMBER",
                    "description": "Id of the story",
                    "default": ""
                },
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getSingleStory\"\nquerystring = {\"publicKey\": \"\", \"storyId\": \"\", \"privateKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getSingleStory\"\nquerystring = {\"publicKey\": \"\", \"storyId\": \"\", \"privateKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getStories",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getStories",
            "description": "Fetches lists of comic stories with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only stories which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "characters",
                    "type": "STRING",
                    "description": "Return only stories which feature work by the specified creators (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: id, modified",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "creators",
                    "type": "LIST",
                    "description": "Return only stories which feature work by the specified creators (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "comics",
                    "type": "LIST",
                    "description": "Return only stories contained in the specified (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "series",
                    "type": "LIST",
                    "description": "Return only stories contained the specified series (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "events",
                    "type": "LIST",
                    "description": "Return only stories which take place during the specified events (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getStories\"\nquerystring = {\"privateKey\": \"\", \"publicKey\": \"\", \"modifiedSince\": \"\", \"characters\": \"\", \"orderBy\": \"\", \"offset\": \"\", \"limit\": \"\", \"creators\": \"\", \"comics\": \"\", \"series\": \"\", \"events\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getStories\"\nquerystring = {\"privateKey\": \"\", \"publicKey\": \"\", \"modifiedSince\": \"\", \"characters\": \"\", \"orderBy\": \"\", \"offset\": \"\", \"limit\": \"\", \"creators\": \"\", \"comics\": \"\", \"series\": \"\", \"events\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getStoriesByCharacter",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getStoriesByCharacter",
            "description": "Fetches lists of stories containing a specific character, with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "characterId",
                    "type": "NUMBER",
                    "description": "A single character id.",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only stories which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: id, modified",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "creators",
                    "type": "LIST",
                    "description": "Return only stories which feature work by the specified creators (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "comics",
                    "type": "LIST",
                    "description": "Return only stories contained in the specified (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "events",
                    "type": "LIST",
                    "description": "Return only stories which take place during the specified events (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "series",
                    "type": "LIST",
                    "description": "Return only stories contained the specified series (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getStoriesByCharacter\"\nquerystring = {\"modifiedSince\": \"\", \"privateKey\": \"\", \"characterId\": \"\", \"publicKey\": \"\", \"limit\": \"\", \"orderBy\": \"\", \"offset\": \"\", \"creators\": \"\", \"comics\": \"\", \"events\": \"\", \"series\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getStoriesByCharacter\"\nquerystring = {\"modifiedSince\": \"\", \"privateKey\": \"\", \"characterId\": \"\", \"publicKey\": \"\", \"limit\": \"\", \"orderBy\": \"\", \"offset\": \"\", \"creators\": \"\", \"comics\": \"\", \"events\": \"\", \"series\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getStoriesByComic",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getStoriesByComic",
            "description": "Fetches lists of comic stories in a specific comic issue, with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "comicId",
                    "type": "NUMBER",
                    "description": "A single comic id.",
                    "default": ""
                },
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only stories which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "characters",
                    "type": "STRING",
                    "description": "Return only stories which feature the specified characters (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: id, modified",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "creators",
                    "type": "LIST",
                    "description": "Return only stories which feature work by the specified creators (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "events",
                    "type": "LIST",
                    "description": "Return only stories which take place during the specified events (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "series",
                    "type": "LIST",
                    "description": "Return only stories contained the specified series (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getStoriesByComic\"\nquerystring = {\"publicKey\": \"\", \"comicId\": \"\", \"privateKey\": \"\", \"modifiedSince\": \"\", \"characters\": \"\", \"orderBy\": \"\", \"offset\": \"\", \"limit\": \"\", \"creators\": \"\", \"events\": \"\", \"series\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getStoriesByComic\"\nquerystring = {\"publicKey\": \"\", \"comicId\": \"\", \"privateKey\": \"\", \"modifiedSince\": \"\", \"characters\": \"\", \"orderBy\": \"\", \"offset\": \"\", \"limit\": \"\", \"creators\": \"\", \"events\": \"\", \"series\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getStoriesByCreator",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getStoriesByCreator",
            "description": "Fetches lists of comic stories by a specific creator with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "creatorId",
                    "type": "NUMBER",
                    "description": "Creator id.",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only stories which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "characters",
                    "type": "STRING",
                    "description": "Return only stories which feature the specified characters (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: id, modified",
                    "default": ""
                },
                {
                    "name": "comics",
                    "type": "LIST",
                    "description": "Return only stories contained in the specified comics (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "events",
                    "type": "LIST",
                    "description": "Return only stories which take place during the specified events (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "series",
                    "type": "LIST",
                    "description": "Return only stories contained the specified series (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getStoriesByCreator\"\nquerystring = {\"privateKey\": \"\", \"modifiedSince\": \"\", \"creatorId\": \"\", \"publicKey\": \"\", \"characters\": \"\", \"limit\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"comics\": \"\", \"events\": \"\", \"series\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getStoriesByCreator\"\nquerystring = {\"privateKey\": \"\", \"modifiedSince\": \"\", \"creatorId\": \"\", \"publicKey\": \"\", \"characters\": \"\", \"limit\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"comics\": \"\", \"events\": \"\", \"series\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getStoriesByEvent",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getStoriesByEvent",
            "description": "Fetches lists of comic stories from a specific event, with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "eventId",
                    "type": "NUMBER",
                    "description": "A single event id.",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only stories which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "characters",
                    "type": "STRING",
                    "description": "Return only stories which feature work by the specified creators (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: id, modified",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "creators",
                    "type": "LIST",
                    "description": "Return only stories which feature work by the specified creators (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "comics",
                    "type": "LIST",
                    "description": "Return only stories contained in the specified (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "series",
                    "type": "LIST",
                    "description": "Return only stories contained the specified series (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getStoriesByEvent\"\nquerystring = {\"modifiedSince\": \"\", \"privateKey\": \"\", \"eventId\": \"\", \"publicKey\": \"\", \"characters\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"limit\": \"\", \"creators\": \"\", \"comics\": \"\", \"series\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getStoriesByEvent\"\nquerystring = {\"modifiedSince\": \"\", \"privateKey\": \"\", \"eventId\": \"\", \"publicKey\": \"\", \"characters\": \"\", \"offset\": \"\", \"orderBy\": \"\", \"limit\": \"\", \"creators\": \"\", \"comics\": \"\", \"series\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getStoriesBySeries",
            "url": "https://Marvelstefan-skliarovV1.p.rapidapi.com/getStoriesBySeries",
            "description": "Fetches lists of comic stories from a specific event, with optional filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "seriesId",
                    "type": "NUMBER",
                    "description": "A single series id.",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "CREDENTIALS",
                    "description": "Public api key obtained from Marvel",
                    "default": ""
                },
                {
                    "name": "privateKey",
                    "type": "CREDENTIALS",
                    "description": "Private api key obtained from Marvel",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "modifiedSince",
                    "type": "DATEPICKER",
                    "description": "Return only stories which have been modified since the specified date.",
                    "default": ""
                },
                {
                    "name": "characters",
                    "type": "STRING",
                    "description": "Return only stories which feature work by the specified creators (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit the result set to the specified number of resources.",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed. Values: id, modified",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Skip the specified number of resources in the result set.",
                    "default": ""
                },
                {
                    "name": "creators",
                    "type": "LIST",
                    "description": "Return only stories which feature work by the specified creators (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "comics",
                    "type": "LIST",
                    "description": "Return only stories contained in the specified (accepts an array of ids).",
                    "default": ""
                },
                {
                    "name": "events",
                    "type": "LIST",
                    "description": "Return only stories which take place during the specified events (accepts an array of ids).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getStoriesBySeries\"\nquerystring = {\"seriesId\": \"\", \"publicKey\": \"\", \"modifiedSince\": \"\", \"privateKey\": \"\", \"characters\": \"\", \"limit\": \"\", \"orderBy\": \"\", \"offset\": \"\", \"creators\": \"\", \"comics\": \"\", \"events\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Marvelstefan-skliarovV1.p.rapidapi.com/getStoriesBySeries\"\nquerystring = {\"seriesId\": \"\", \"publicKey\": \"\", \"modifiedSince\": \"\", \"privateKey\": \"\", \"characters\": \"\", \"limit\": \"\", \"orderBy\": \"\", \"offset\": \"\", \"creators\": \"\", \"comics\": \"\", \"events\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Marvelstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}