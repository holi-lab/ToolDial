{
    "product_id": "api_701c27a5-b3a1-4ad8-897b-695170979791",
    "tool_description": "Scrape news articles and other media automatically.",
    "home_url": "https://rapidapi.com/aleph0-aleph0-default/api/arachn-io/",
    "name": "arachn.io",
    "title": "arachn.io",
    "pricing": "FREEMIUM",
    "tool_name": "arachn.io",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 10347,
        "avgSuccessRate": 100,
        "popularityScore": 8.4,
        "__typename": "Score"
    },
    "host": "arachn-io.p.rapidapi.com",
    "api_list": [
        {
            "name": "parseDomainNameBatch",
            "url": "https://arachn-io.p.rapidapi.com/domains/parse/batch",
            "description": "Parses a batch of domain names into their component parts",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://arachn-io.p.rapidapi.com/domains/parse/batch\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arachn-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://arachn-io.p.rapidapi.com/domains/parse/batch\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arachn-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "description": "A batch of parsed domain names",
                "type": "object",
                "required": [
                    "entries"
                ],
                "properties": {
                    "entries": {
                        "description": "The parsed domain names",
                        "type": "array",
                        "minLength": 1,
                        "maxLength": 10,
                        "items": {
                            "description": "An entry in a batch of parsed domain names",
                            "type": "object",
                            "required": [
                                "id",
                                "parsedDomain"
                            ],
                            "properties": {
                                "id": {
                                    "description": "An ID for this entry. It must be unique within its batch.",
                                    "type": "string",
                                    "maxLength": 80
                                },
                                "parsedDomain": {
                                    "type": "object",
                                    "required": [
                                        "registrySuffix",
                                        "publicSuffix",
                                        "hostname"
                                    ],
                                    "properties": {
                                        "registrySuffix": {
                                            "description": "The top-level domain of this hostname",
                                            "type": "string"
                                        },
                                        "publicSuffix": {
                                            "description": "The top-level public suffix of this hostname",
                                            "type": "string"
                                        },
                                        "hostname": {
                                            "description": "The complete domain name",
                                            "type": "string",
                                            "format": "hostname"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "parseDomainName",
            "url": "https://arachn-io.p.rapidapi.com/domains/parse",
            "description": "Parses a domain name into its component parts",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://arachn-io.p.rapidapi.com/domains/parse\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arachn-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://arachn-io.p.rapidapi.com/domains/parse\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arachn-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "registrySuffix",
                    "publicSuffix",
                    "hostname"
                ],
                "properties": {
                    "registrySuffix": {
                        "description": "The top-level domain of this hostname",
                        "type": "string"
                    },
                    "publicSuffix": {
                        "description": "The top-level public suffix of this hostname",
                        "type": "string"
                    },
                    "hostname": {
                        "description": "The complete domain name",
                        "type": "string",
                        "format": "hostname"
                    }
                }
            }
        },
        {
            "name": "unwindLinkBatch",
            "url": "https://arachn-io.p.rapidapi.com/links/unwind/batch",
            "description": "Converts a batch of links to their maximally unwound, and possibly canonical, forms",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://arachn-io.p.rapidapi.com/links/unwind/batch\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arachn-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://arachn-io.p.rapidapi.com/links/unwind/batch\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arachn-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "description": "A batch of unwound links",
                "type": "object",
                "required": [
                    "entries"
                ],
                "properties": {
                    "entries": {
                        "description": "The unwound links",
                        "type": "array",
                        "minLength": 1,
                        "maxLength": 10,
                        "items": {
                            "description": "An entry in a batch of parsed links",
                            "type": "object",
                            "required": [
                                "id",
                                "unwoundLink"
                            ],
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "maxLength": 80
                                },
                                "unwoundLink": {
                                    "description": "The result of a link unwinding operation",
                                    "type": "object",
                                    "required": [
                                        "original",
                                        "unwound",
                                        "canonical"
                                    ],
                                    "properties": {
                                        "original": {
                                            "description": "A URL that has been parsed into its constituent parts",
                                            "type": "object",
                                            "required": [
                                                "link",
                                                "scheme",
                                                "authority",
                                                "path"
                                            ],
                                            "properties": {
                                                "link": {
                                                    "description": "The original link",
                                                    "type": "string",
                                                    "format": "url"
                                                },
                                                "scheme": {
                                                    "description": "An application-level protocol for exchanging hypermedia documents, namely http and https.",
                                                    "type": "string",
                                                    "enum": [
                                                        "http",
                                                        "https"
                                                    ]
                                                },
                                                "authority": {
                                                    "description": "A URL authority consisting of a required host and optional port.",
                                                    "type": "object",
                                                    "required": [
                                                        "host"
                                                    ],
                                                    "properties": {
                                                        "host": {
                                                            "description": "The coordinate of a specific destination on the internet",
                                                            "type": "object",
                                                            "required": [
                                                                "type"
                                                            ],
                                                            "properties": {
                                                                "type": {
                                                                    "description": "**Omitted**"
                                                                }
                                                            }
                                                        },
                                                        "port": {
                                                            "description": "A TCP port number",
                                                            "type": "integer",
                                                            "minimum": 0,
                                                            "maximum": 65353,
                                                            "format": "int32"
                                                        }
                                                    }
                                                },
                                                "path": {
                                                    "description": "The path from the original link",
                                                    "type": "string"
                                                },
                                                "queryParameters": {
                                                    "description": "The list of query parameters from the original link",
                                                    "type": "array",
                                                    "items": {
                                                        "description": "A URL query parameter, e.g. `foo=bar`. All fields are urldecoded.",
                                                        "type": "object",
                                                        "required": [
                                                            "name"
                                                        ],
                                                        "properties": {
                                                            "name": {
                                                                "description": "**Omitted**"
                                                            },
                                                            "value": {
                                                                "description": "**Omitted**"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "unwound": {
                                            "description": "A URL that has been parsed into its constituent parts",
                                            "type": "object",
                                            "required": [
                                                "link",
                                                "scheme",
                                                "authority",
                                                "path"
                                            ],
                                            "properties": {
                                                "link": {
                                                    "description": "The original link",
                                                    "type": "string",
                                                    "format": "url"
                                                },
                                                "scheme": {
                                                    "description": "An application-level protocol for exchanging hypermedia documents, namely http and https.",
                                                    "type": "string",
                                                    "enum": [
                                                        "http",
                                                        "https"
                                                    ]
                                                },
                                                "authority": {
                                                    "description": "A URL authority consisting of a required host and optional port.",
                                                    "type": "object",
                                                    "required": [
                                                        "host"
                                                    ],
                                                    "properties": {
                                                        "host": {
                                                            "description": "The coordinate of a specific destination on the internet",
                                                            "type": "object",
                                                            "required": [
                                                                "type"
                                                            ],
                                                            "properties": {
                                                                "type": {
                                                                    "description": "**Omitted**"
                                                                }
                                                            }
                                                        },
                                                        "port": {
                                                            "description": "A TCP port number",
                                                            "type": "integer",
                                                            "minimum": 0,
                                                            "maximum": 65353,
                                                            "format": "int32"
                                                        }
                                                    }
                                                },
                                                "path": {
                                                    "description": "The path from the original link",
                                                    "type": "string"
                                                },
                                                "queryParameters": {
                                                    "description": "The list of query parameters from the original link",
                                                    "type": "array",
                                                    "items": {
                                                        "description": "A URL query parameter, e.g. `foo=bar`. All fields are urldecoded.",
                                                        "type": "object",
                                                        "required": [
                                                            "name"
                                                        ],
                                                        "properties": {
                                                            "name": {
                                                                "description": "**Omitted**"
                                                            },
                                                            "value": {
                                                                "description": "**Omitted**"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "outcome": {
                                            "description": "A description of the final outcome of unwinding a link\n\n* `success2xx` -- The final hop completed with a 2xx status code. This typically indicates a successful unwinding.\n* `failure4xx` -- The unwinding failed due to a 4xx status code.\n* `failure5xx` -- The unwinding failed due to a 5xx status code.\n* `timeout` -- The unwinding failed because it took too long.\n* `tooManyHops` -- The unwinding failed due to too many hops.\n* `protocolError` -- The unwinding failed because the server(s) did not follow the HTTP protocol.\n* `networkingError` -- The unwinding failed due to an I/O error.\n",
                                            "type": "string",
                                            "enum": [
                                                "success2xx",
                                                "failure4xx",
                                                "failure5xx",
                                                "timeout",
                                                "tooManyHops",
                                                "protocolError",
                                                "networkingError"
                                            ]
                                        },
                                        "canonical": {
                                            "description": "Either `true` if the unwound URL is canonical, or `false` otherwise. A URL is canonical if and only if the outcome is `success2xx` and the final entity is an HTML document that contains a canonical meta link.",
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "extractLink",
            "url": "https://arachn-io.p.rapidapi.com/links/extract",
            "description": "Unwinds a link and attempts to extract structured microdata and body content",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://arachn-io.p.rapidapi.com/links/extract\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arachn-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://arachn-io.p.rapidapi.com/links/extract\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arachn-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "description": "A description of an extracted link",
                "type": "object",
                "required": [
                    "link"
                ],
                "properties": {
                    "link": {
                        "description": "The result of a link unwinding operation",
                        "type": "object",
                        "required": [
                            "original",
                            "unwound",
                            "canonical"
                        ],
                        "properties": {
                            "original": {
                                "description": "A URL that has been parsed into its constituent parts",
                                "type": "object",
                                "required": [
                                    "link",
                                    "scheme",
                                    "authority",
                                    "path"
                                ],
                                "properties": {
                                    "link": {
                                        "description": "The original link",
                                        "type": "string",
                                        "format": "url"
                                    },
                                    "scheme": {
                                        "description": "An application-level protocol for exchanging hypermedia documents, namely http and https.",
                                        "type": "string",
                                        "enum": [
                                            "http",
                                            "https"
                                        ]
                                    },
                                    "authority": {
                                        "description": "A URL authority consisting of a required host and optional port.",
                                        "type": "object",
                                        "required": [
                                            "host"
                                        ],
                                        "properties": {
                                            "host": {
                                                "description": "The coordinate of a specific destination on the internet",
                                                "type": "object",
                                                "required": [
                                                    "type"
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "description": "**Omitted**"
                                                    }
                                                }
                                            },
                                            "port": {
                                                "description": "A TCP port number",
                                                "type": "integer",
                                                "minimum": 0,
                                                "maximum": 65353,
                                                "format": "int32"
                                            }
                                        }
                                    },
                                    "path": {
                                        "description": "The path from the original link",
                                        "type": "string"
                                    },
                                    "queryParameters": {
                                        "description": "The list of query parameters from the original link",
                                        "type": "array",
                                        "items": {
                                            "description": "A URL query parameter, e.g. `foo=bar`. All fields are urldecoded.",
                                            "type": "object",
                                            "required": [
                                                "name"
                                            ],
                                            "properties": {
                                                "name": {
                                                    "description": "**Omitted**"
                                                },
                                                "value": {
                                                    "description": "**Omitted**"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "unwound": {
                                "description": "A URL that has been parsed into its constituent parts",
                                "type": "object",
                                "required": [
                                    "link",
                                    "scheme",
                                    "authority",
                                    "path"
                                ],
                                "properties": {
                                    "link": {
                                        "description": "The original link",
                                        "type": "string",
                                        "format": "url"
                                    },
                                    "scheme": {
                                        "description": "An application-level protocol for exchanging hypermedia documents, namely http and https.",
                                        "type": "string",
                                        "enum": [
                                            "http",
                                            "https"
                                        ]
                                    },
                                    "authority": {
                                        "description": "A URL authority consisting of a required host and optional port.",
                                        "type": "object",
                                        "required": [
                                            "host"
                                        ],
                                        "properties": {
                                            "host": {
                                                "description": "The coordinate of a specific destination on the internet",
                                                "type": "object",
                                                "required": [
                                                    "type"
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "description": "**Omitted**"
                                                    }
                                                }
                                            },
                                            "port": {
                                                "description": "A TCP port number",
                                                "type": "integer",
                                                "minimum": 0,
                                                "maximum": 65353,
                                                "format": "int32"
                                            }
                                        }
                                    },
                                    "path": {
                                        "description": "The path from the original link",
                                        "type": "string"
                                    },
                                    "queryParameters": {
                                        "description": "The list of query parameters from the original link",
                                        "type": "array",
                                        "items": {
                                            "description": "A URL query parameter, e.g. `foo=bar`. All fields are urldecoded.",
                                            "type": "object",
                                            "required": [
                                                "name"
                                            ],
                                            "properties": {
                                                "name": {
                                                    "description": "**Omitted**"
                                                },
                                                "value": {
                                                    "description": "**Omitted**"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "outcome": {
                                "description": "A description of the final outcome of unwinding a link\n\n* `success2xx` -- The final hop completed with a 2xx status code. This typically indicates a successful unwinding.\n* `failure4xx` -- The unwinding failed due to a 4xx status code.\n* `failure5xx` -- The unwinding failed due to a 5xx status code.\n* `timeout` -- The unwinding failed because it took too long.\n* `tooManyHops` -- The unwinding failed due to too many hops.\n* `protocolError` -- The unwinding failed because the server(s) did not follow the HTTP protocol.\n* `networkingError` -- The unwinding failed due to an I/O error.\n",
                                "type": "string",
                                "enum": [
                                    "success2xx",
                                    "failure4xx",
                                    "failure5xx",
                                    "timeout",
                                    "tooManyHops",
                                    "protocolError",
                                    "networkingError"
                                ]
                            },
                            "canonical": {
                                "description": "Either `true` if the unwound URL is canonical, or `false` otherwise. A URL is canonical if and only if the outcome is `success2xx` and the final entity is an HTML document that contains a canonical meta link.",
                                "type": "boolean"
                            }
                        }
                    },
                    "entity": {
                        "description": "A description of an extracted page",
                        "type": "object",
                        "properties": {
                            "entityType": {
                                "description": "The type of this page, e.g., \"webpage\". For reasons of future-proofing, applications should ignore values they do not recognize.",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "parseLinkBatch",
            "url": "https://arachn-io.p.rapidapi.com/links/parse/batch",
            "description": "Parses a batch of absolute hyperlinks into their component parts",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://arachn-io.p.rapidapi.com/links/parse/batch\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arachn-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://arachn-io.p.rapidapi.com/links/parse/batch\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arachn-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "description": "A batch of parsed links",
                "type": "object",
                "required": [
                    "entries"
                ],
                "properties": {
                    "entries": {
                        "description": "The parsed links",
                        "type": "array",
                        "minLength": 1,
                        "maxLength": 10,
                        "items": {
                            "description": "An entry in a batch of parsed links",
                            "type": "object",
                            "required": [
                                "id",
                                "parsedLink"
                            ],
                            "properties": {
                                "id": {
                                    "description": "An ID for this entry. It must be unique within its batch.",
                                    "type": "string",
                                    "maxLength": 80
                                },
                                "parsedLink": {
                                    "description": "A URL that has been parsed into its constituent parts",
                                    "type": "object",
                                    "required": [
                                        "link",
                                        "scheme",
                                        "authority",
                                        "path"
                                    ],
                                    "properties": {
                                        "link": {
                                            "description": "The original link",
                                            "type": "string",
                                            "format": "url"
                                        },
                                        "scheme": {
                                            "description": "An application-level protocol for exchanging hypermedia documents, namely http and https.",
                                            "type": "string",
                                            "enum": [
                                                "http",
                                                "https"
                                            ]
                                        },
                                        "authority": {
                                            "description": "A URL authority consisting of a required host and optional port.",
                                            "type": "object",
                                            "required": [
                                                "host"
                                            ],
                                            "properties": {
                                                "host": {
                                                    "description": "The coordinate of a specific destination on the internet",
                                                    "type": "object",
                                                    "required": [
                                                        "type"
                                                    ],
                                                    "properties": {
                                                        "type": {
                                                            "description": "**Omitted**"
                                                        }
                                                    }
                                                },
                                                "port": {
                                                    "description": "A TCP port number",
                                                    "type": "integer",
                                                    "minimum": 0,
                                                    "maximum": 65353,
                                                    "format": "int32"
                                                }
                                            }
                                        },
                                        "path": {
                                            "description": "The path from the original link",
                                            "type": "string"
                                        },
                                        "queryParameters": {
                                            "description": "The list of query parameters from the original link",
                                            "type": "array",
                                            "items": {
                                                "description": "A URL query parameter, e.g. `foo=bar`. All fields are urldecoded.",
                                                "type": "object",
                                                "required": [
                                                    "name"
                                                ],
                                                "properties": {
                                                    "name": {
                                                        "description": "**Omitted**"
                                                    },
                                                    "value": {
                                                        "description": "**Omitted**"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "parseLink",
            "url": "https://arachn-io.p.rapidapi.com/links/parse",
            "description": "Parses an absolute hyperlink into its component parts",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://arachn-io.p.rapidapi.com/links/parse\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arachn-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://arachn-io.p.rapidapi.com/links/parse\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arachn-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "description": "A URL that has been parsed into its constituent parts",
                "type": "object",
                "required": [
                    "link",
                    "scheme",
                    "authority",
                    "path"
                ],
                "properties": {
                    "link": {
                        "description": "The original link",
                        "type": "string",
                        "format": "url"
                    },
                    "scheme": {
                        "description": "An application-level protocol for exchanging hypermedia documents, namely http and https.",
                        "type": "string",
                        "enum": [
                            "http",
                            "https"
                        ]
                    },
                    "authority": {
                        "description": "A URL authority consisting of a required host and optional port.",
                        "type": "object",
                        "required": [
                            "host"
                        ],
                        "properties": {
                            "host": {
                                "description": "The coordinate of a specific destination on the internet",
                                "type": "object",
                                "required": [
                                    "type"
                                ],
                                "properties": {
                                    "type": {
                                        "description": "**Omitted**"
                                    }
                                }
                            },
                            "port": {
                                "description": "A TCP port number",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65353,
                                "format": "int32"
                            }
                        }
                    },
                    "path": {
                        "description": "The path from the original link",
                        "type": "string"
                    },
                    "queryParameters": {
                        "description": "The list of query parameters from the original link",
                        "type": "array",
                        "items": {
                            "description": "A URL query parameter, e.g. `foo=bar`. All fields are urldecoded.",
                            "type": "object",
                            "required": [
                                "name"
                            ],
                            "properties": {
                                "name": {
                                    "description": "**Omitted**"
                                },
                                "value": {
                                    "description": "**Omitted**"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "unwindLink",
            "url": "https://arachn-io.p.rapidapi.com/links/unwind",
            "description": "Converts a link to its maximally unwound, and possibly canonical, form. For example, convert `https://nyti.ms/3rBgKkH` to `https://www.nytimes.com/2019/07/17/science/apollo-11-landing-anniversary.html`.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://arachn-io.p.rapidapi.com/links/unwind\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arachn-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://arachn-io.p.rapidapi.com/links/unwind\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arachn-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "description": "The result of a link unwinding operation",
                "type": "object",
                "required": [
                    "original",
                    "unwound",
                    "canonical"
                ],
                "properties": {
                    "original": {
                        "description": "A URL that has been parsed into its constituent parts",
                        "type": "object",
                        "required": [
                            "link",
                            "scheme",
                            "authority",
                            "path"
                        ],
                        "properties": {
                            "link": {
                                "description": "The original link",
                                "type": "string",
                                "format": "url"
                            },
                            "scheme": {
                                "description": "An application-level protocol for exchanging hypermedia documents, namely http and https.",
                                "type": "string",
                                "enum": [
                                    "http",
                                    "https"
                                ]
                            },
                            "authority": {
                                "description": "A URL authority consisting of a required host and optional port.",
                                "type": "object",
                                "required": [
                                    "host"
                                ],
                                "properties": {
                                    "host": {
                                        "description": "The coordinate of a specific destination on the internet",
                                        "type": "object",
                                        "required": [
                                            "type"
                                        ],
                                        "properties": {
                                            "type": {
                                                "description": "**Omitted**"
                                            }
                                        }
                                    },
                                    "port": {
                                        "description": "A TCP port number",
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 65353,
                                        "format": "int32"
                                    }
                                }
                            },
                            "path": {
                                "description": "The path from the original link",
                                "type": "string"
                            },
                            "queryParameters": {
                                "description": "The list of query parameters from the original link",
                                "type": "array",
                                "items": {
                                    "description": "A URL query parameter, e.g. `foo=bar`. All fields are urldecoded.",
                                    "type": "object",
                                    "required": [
                                        "name"
                                    ],
                                    "properties": {
                                        "name": {
                                            "description": "**Omitted**"
                                        },
                                        "value": {
                                            "description": "**Omitted**"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "unwound": {
                        "description": "A URL that has been parsed into its constituent parts",
                        "type": "object",
                        "required": [
                            "link",
                            "scheme",
                            "authority",
                            "path"
                        ],
                        "properties": {
                            "link": {
                                "description": "The original link",
                                "type": "string",
                                "format": "url"
                            },
                            "scheme": {
                                "description": "An application-level protocol for exchanging hypermedia documents, namely http and https.",
                                "type": "string",
                                "enum": [
                                    "http",
                                    "https"
                                ]
                            },
                            "authority": {
                                "description": "A URL authority consisting of a required host and optional port.",
                                "type": "object",
                                "required": [
                                    "host"
                                ],
                                "properties": {
                                    "host": {
                                        "description": "The coordinate of a specific destination on the internet",
                                        "type": "object",
                                        "required": [
                                            "type"
                                        ],
                                        "properties": {
                                            "type": {
                                                "description": "**Omitted**"
                                            }
                                        }
                                    },
                                    "port": {
                                        "description": "A TCP port number",
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 65353,
                                        "format": "int32"
                                    }
                                }
                            },
                            "path": {
                                "description": "The path from the original link",
                                "type": "string"
                            },
                            "queryParameters": {
                                "description": "The list of query parameters from the original link",
                                "type": "array",
                                "items": {
                                    "description": "A URL query parameter, e.g. `foo=bar`. All fields are urldecoded.",
                                    "type": "object",
                                    "required": [
                                        "name"
                                    ],
                                    "properties": {
                                        "name": {
                                            "description": "**Omitted**"
                                        },
                                        "value": {
                                            "description": "**Omitted**"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "outcome": {
                        "description": "A description of the final outcome of unwinding a link\n\n* `success2xx` -- The final hop completed with a 2xx status code. This typically indicates a successful unwinding.\n* `failure4xx` -- The unwinding failed due to a 4xx status code.\n* `failure5xx` -- The unwinding failed due to a 5xx status code.\n* `timeout` -- The unwinding failed because it took too long.\n* `tooManyHops` -- The unwinding failed due to too many hops.\n* `protocolError` -- The unwinding failed because the server(s) did not follow the HTTP protocol.\n* `networkingError` -- The unwinding failed due to an I/O error.\n",
                        "type": "string",
                        "enum": [
                            "success2xx",
                            "failure4xx",
                            "failure5xx",
                            "timeout",
                            "tooManyHops",
                            "protocolError",
                            "networkingError"
                        ]
                    },
                    "canonical": {
                        "description": "Either `true` if the unwound URL is canonical, or `false` otherwise. A URL is canonical if and only if the outcome is `success2xx` and the final entity is an HTML document that contains a canonical meta link.",
                        "type": "boolean"
                    }
                }
            }
        }
    ]
}