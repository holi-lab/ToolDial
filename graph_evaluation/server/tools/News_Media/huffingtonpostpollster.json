{
    "product_id": "378",
    "tool_description": "Polls, charts, forecasts and data about upcoming elections",
    "home_url": "https://rapidapi.com/mikilior1/api/HuffingtonPostPollster/",
    "name": "HuffingtonPostPollster",
    "title": "HuffingtonPostPollster",
    "pricing": "FREE",
    "tool_name": "HuffingtonPostPollster",
    "score": null,
    "host": "HuffingtonPostPollstermikilior1V1.p.rapidapi.com",
    "api_list": [
        {
            "name": "getCharts",
            "url": "https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getCharts",
            "description": "Returns a list of Charts, ordered by creation date (newest first). A Chart is chosen by Pollster editors. One example is \"Obama job approval - Democrats\". It is always based upon a single Question. Users should strongly consider basing their analysis on Questions instead. Charts are derived data; Pollster editors publish them and change them as editorial priorities change. Try it outTry it out",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "Special string to index into the Array",
                    "default": ""
                },
                {
                    "name": "electionDate",
                    "type": "DATEPICKER",
                    "description": "Date of an election, in YYYY-MM-DD format. Only Charts based on Questions pertaining to an election on this date will be returned.",
                    "default": ""
                },
                {
                    "name": "tags",
                    "type": "LIST",
                    "description": "List of tag slugs. Only Charts with one or more of these tags and Charts based on Questions with one or more of these tags will be returned.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getCharts\"\nquerystring = {\"cursor\": \"\", \"electionDate\": \"\", \"tags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"HuffingtonPostPollstermikilior1V1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getCharts\"\nquerystring = {\"cursor\": \"\", \"electionDate\": \"\", \"tags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"HuffingtonPostPollstermikilior1V1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPolls",
            "url": "https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getPolls",
            "description": "A Poll on Pollster is a collection of questions and responses published by a reputable survey house. This endpoint provides raw data from the survey house, plus Pollster-provided metadata about each question. Pollster editors don\u2019t include every question when they enter Polls, and they don\u2019t necessarily enter every subpopulation for the responses they do enter. They make editorial decisions about which questions belong in the database.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "Special string to index into the Array",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "If updated_at, sort the most recently updated Poll first. (This can cause race conditions when used with cursor.) Otherwise, sort by most recently entered Poll first.",
                    "default": ""
                },
                {
                    "name": "question",
                    "type": "STRING",
                    "description": "Question slug; only Polls that ask that Question will be returned.",
                    "default": ""
                },
                {
                    "name": "tags",
                    "type": "LIST",
                    "description": "List of Question tag names; only Polls containing Questions with any of the given tags will be returned.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getPolls\"\nquerystring = {\"cursor\": \"\", \"sort\": \"\", \"question\": \"\", \"tags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"HuffingtonPostPollstermikilior1V1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getPolls\"\nquerystring = {\"cursor\": \"\", \"sort\": \"\", \"question\": \"\", \"tags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"HuffingtonPostPollstermikilior1V1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPollsterChartData",
            "url": "https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getPollsterChartData",
            "description": "Derived data resented on a Pollster Chart. Rules for which polls and responses are plotted on a chart can shift over time. Here are some examples of behaviors Pollster has used in the past: We\u2019ve omitted \u201cRegistered Voters\u201d from a chart when \u201cLikely Voters\u201d responded to the same poll question. We\u2019ve omitted poll questions that asked about Gary Johnson on a chart about Trump v Clinton. We\u2019ve omitted polls when their date ranges overlapped. We\u2019ve omitted labels (and their responses) for dark-horse candidates. In short: this endpoint is about Pollster, not the polls. For complete data, use a TSV from the Questions API.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "slug",
                    "type": "STRING",
                    "description": "Unique Chart identifier. For example: obama-job-approval",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getPollsterChartData\"\nquerystring = {\"slug\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"HuffingtonPostPollstermikilior1V1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getPollsterChartData\"\nquerystring = {\"slug\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"HuffingtonPostPollstermikilior1V1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPollsterChartTrendlinesData",
            "url": "https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getPollsterChartTrendlinesData",
            "description": "Derived data presented on a Pollster Chart. The trendlines on a Pollster chart don\u2019t add up to 100: we calculate each label\u2019s trendline separately. Use the charts/{slug} response\u2019s chart.pollster_estimates[0].algorithm to find the algorithm Pollster used to generate these estimates. Pollster recalculates trendlines every time a new poll is entered. It also recalculates trendlines daily if they use the bayesian-kallman algorithm, because that algorithm\u2019s output changes depending on the end date.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "slug",
                    "type": "STRING",
                    "description": "Unique Chart identifier. For example: obama-job-approval",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getPollsterChartTrendlinesData\"\nquerystring = {\"slug\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"HuffingtonPostPollstermikilior1V1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getPollsterChartTrendlinesData\"\nquerystring = {\"slug\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"HuffingtonPostPollstermikilior1V1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getQuestions",
            "url": "https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getQuestions",
            "description": "Returns a list of Questions.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "Special string to index into the Array",
                    "default": ""
                },
                {
                    "name": "electionDate",
                    "type": "DATEPICKER",
                    "description": "Date of an election, in YYYY-MM-DD format. Only Questions pertaining to an election on this date will be returned.",
                    "default": ""
                },
                {
                    "name": "tags",
                    "type": "LIST",
                    "description": "List of Question tag names. Only Questions with one or more of these tags will be returned.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getQuestions\"\nquerystring = {\"cursor\": \"\", \"electionDate\": \"\", \"tags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"HuffingtonPostPollstermikilior1V1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getQuestions\"\nquerystring = {\"cursor\": \"\", \"electionDate\": \"\", \"tags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"HuffingtonPostPollstermikilior1V1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleChart",
            "url": "https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getSingleChart",
            "description": "A Chart is chosen by Pollster editors. One example is \"Obama job approval - Democrats\". It is always based upon a single Question. Users should strongly consider basing their analysis on Questions instead. Charts are derived data; Pollster editors publish them and change them as editorial priorities change.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "slug",
                    "type": "STRING",
                    "description": "Unique identifier for a Chart",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getSingleChart\"\nquerystring = {\"slug\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"HuffingtonPostPollstermikilior1V1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getSingleChart\"\nquerystring = {\"slug\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"HuffingtonPostPollstermikilior1V1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSinglePoll",
            "url": "https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getSinglePoll",
            "description": "A Poll on Pollster is a collection of questions and responses published by a reputable survey house. This endpoint provides raw data from the survey house, plus Pollster-provided metadata about each question. Pollster editors don\u2019t include every question when they enter Polls, and they don\u2019t necessarily enter every subpopulation for the responses they do enter. They make editorial decisions about which questions belong in the database.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "slug",
                    "type": "STRING",
                    "description": "Unique Poll identifier. For example: gallup-26892",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getSinglePoll\"\nquerystring = {\"slug\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"HuffingtonPostPollstermikilior1V1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getSinglePoll\"\nquerystring = {\"slug\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"HuffingtonPostPollstermikilior1V1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleQuestion",
            "url": "https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getSingleQuestion",
            "description": "A Question is chosen by Pollster editors. One example is \"Obama job approval\".",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "slug",
                    "type": "STRING",
                    "description": "Unique Question identifier. For example: 00c -Pres (44) Obama - Job Approval - National. (Remember to URL-encode this parameter when querying.)",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getSingleQuestion\"\nquerystring = {\"slug\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"HuffingtonPostPollstermikilior1V1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getSingleQuestion\"\nquerystring = {\"slug\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"HuffingtonPostPollstermikilior1V1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleQuestionCleanResponses",
            "url": "https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getSingleQuestionCleanResponses",
            "description": "We include one TSV column per response label. See questions/{slug} for the Question\u2019s list of response labels, which are chosen by Pollster editors. Each row represents a single PollQuestion+Subpopulation. The value for each label column is the sum of the PollQuestion+Subpopulation responses that map to that pollster_label. For instance, on a hypothetical row, the Approve column might be the sum of that poll\u2019s Strongly Approve and Somewhat Approve. After the first TSV columns \u2013 which are always response labels \u2013 the next column will be poll_slug. poll_slug and subsequent columns are described in this API documentation. During the lifetime of a Question, Pollster editors may add, rename or reorder response labels. Such edits will change the TSV column headers. Column headers after poll_slug are never reordered or edited (but we may add new column headers). Sometimes a Poll may ask the same Question twice, leading to two similar rows with different values. Those rows will differ by question_text or by the set of response labels that have values.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "slug",
                    "type": "STRING",
                    "description": "Unique Question identifier. For example: 00c -Pres (44) Obama - Job Approval - National. (Remember to URL-encode this parameter when querying.)",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getSingleQuestionCleanResponses\"\nquerystring = {\"slug\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"HuffingtonPostPollstermikilior1V1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getSingleQuestionCleanResponses\"\nquerystring = {\"slug\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"HuffingtonPostPollstermikilior1V1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleQuestionRawResponses",
            "url": "https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getSingleQuestionRawResponses",
            "description": "Raw data from which we derived poll-responses-clean.tsv. Each row represents a single PollQuestion+Subpopulation+Response. See the Poll API for a description of these terms. Group results by (poll_slug, subpopulation, question_text): that\u2019s how the survey houses group them. This response can be several megabytes large. We encourage you to consider poll-responses-clean.tsv instead. Try it outTry it out",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "slug",
                    "type": "STRING",
                    "description": "Unique Question identifier. For example: 00c -Pres (44) Obama - Job Approval - National. (Remember to URL-encode this parameter when querying.)",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getSingleQuestionRawResponses\"\nquerystring = {\"slug\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"HuffingtonPostPollstermikilior1V1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getSingleQuestionRawResponses\"\nquerystring = {\"slug\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"HuffingtonPostPollstermikilior1V1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getTags",
            "url": "https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getTags",
            "description": "Returns the list of Tags. A Tag can apply to any number of Charts and Questions; Charts and Questions, in turn, can have any number of Tags. Tags all look like-this: lowercase letters, numbers and hyphens. Try it outTry it out",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getTags\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"HuffingtonPostPollstermikilior1V1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://HuffingtonPostPollstermikilior1V1.p.rapidapi.com/getTags\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"HuffingtonPostPollstermikilior1V1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}