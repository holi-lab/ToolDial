{
    "tool_name": "Webit Language",
    "tool_description": "A.I. Text Paraphrase (Rewrite), Dictionary (Lookup, Examples, Bilingual, Synonyms, Antonyms), Key Phrases, Sentences Breaker.",
    "title": "Webit Language",
    "pricing": "FREEMIUM",
    "score": {
        "avgServiceLevel": 94,
        "avgLatency": 3553,
        "avgSuccessRate": 94,
        "popularityScore": 9.2,
        "__typename": "Score"
    },
    "home_url": "https://rapidapi.com/webit/api/webit-language/",
    "host": "webit-language.p.rapidapi.com",
    "api_list": [
        {
            "name": "Dictionary Synonyms (TEMPORARILY UNAVAILABLE)",
            "url": "https://webit-language.p.rapidapi.com/dictionary-synonyms",
            "description": "Dictionary Synonyms",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/dictionary-synonyms\"\nquerystring = {\"language\": language, \"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Dictionary Lookup (TEMPORARILY UNAVAILABLE)",
            "url": "https://webit-language.p.rapidapi.com/dictionary-lookup",
            "description": "Dictionary Lookup",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/dictionary-lookup\"\nquerystring = {\"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Dictionary Examples (TEMPORARILY UNAVAILABLE)",
            "url": "https://webit-language.p.rapidapi.com/dictionary-examples",
            "description": "Dictionary Examples",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/dictionary-examples\"\nquerystring = {\"q\": q, \"language\": language}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Dictionary Antonyms (TEMPORARILY UNAVAILABLE)",
            "url": "https://webit-language.p.rapidapi.com/dictionary-antonyms",
            "description": "Dictionary Antonyms",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/dictionary-antonyms\"\nquerystring = {\"language\": language, \"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Bilingual Dictionary",
            "url": "https://webit-language.p.rapidapi.com/dictionary-bilingual",
            "description": "Powerful multi-language bilingual neural translation dictionary, supporting 80+ languages.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "The word or comma separated words (up to 10 words per request) to seek bilingual translations for.",
                    "default": "merci, poisson, beaucoup"
                },
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "Supported  ISO 639-1 language codes: 'ar', 'az', 'be', 'bg', 'ca', 'ce', 'cs', 'cy', 'da', 'de', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'gl', 'he', 'hi', 'hr', 'hu', 'hy', 'id', 'it', 'ja', 'ka', 'kk', 'ko', 'la', 'lt', 'lv', 'mk', 'ms', 'nl', 'nn', 'no', 'pl', 'pt', 'ro', 'ru', 'sh', 'sk', 'sl', 'sr', 'sv', 'ta', 'tg', 'th', 'tr', 'tt', 'uk', 'ur', 'uz', 'vi', 'vo', 'zh'.",
                    "default": "fr"
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "Supported  ISO 639-1 language codes: 'ar', 'az', 'be', 'bg', 'ca', 'ce', 'cs', 'cy', 'da', 'de', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'gl', 'he', 'hi', 'hr', 'hu', 'hy', 'id', 'it', 'ja', 'ka', 'kk', 'ko', 'la', 'lt', 'lv', 'mk', 'ms', 'nl', 'nn', 'no', 'pl', 'pt', 'ro', 'ru', 'sh', 'sk', 'sl', 'sr', 'sv', 'ta', 'tg', 'th', 'tr', 'tt', 'uk', 'ur', 'uz', 'vi', 'vo', 'zh'.",
                    "default": "en"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/dictionary-bilingual\"\nquerystring = {\"q\": q, \"from\": is_from, \"to\": to}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "data": [
                    {
                        "term": "merci",
                        "translations": [
                            {
                                "confidence": 1,
                                "translation": "thanks"
                            },
                            {
                                "confidence": 0.5555555555555556,
                                "translation": "cheers"
                            },
                            {
                                "confidence": 0.5555555555555556,
                                "translation": "thank you"
                            }
                        ]
                    },
                    {
                        "term": "poisson",
                        "translations": [
                            {
                                "confidence": 1,
                                "translation": "pisces"
                            },
                            {
                                "confidence": 0.9,
                                "translation": "fish"
                            },
                            {
                                "confidence": 0.5,
                                "translation": "fishy"
                            }
                        ]
                    },
                    {
                        "term": "beaucoup",
                        "translations": [
                            {
                                "confidence": 1,
                                "translation": "much"
                            },
                            {
                                "confidence": 0.9,
                                "translation": "many"
                            },
                            {
                                "confidence": 0.5,
                                "translation": "very much"
                            },
                            {
                                "confidence": 0.5,
                                "translation": "vastly"
                            },
                            {
                                "confidence": 0.5,
                                "translation": "a lot"
                            }
                        ]
                    }
                ],
                "message": null,
                "status": "success"
            },
            "headers": {
                "cache-control": "no-store, no-cache, must-revalidate",
                "content-type": "application/json",
                "date": "Sun, 15 Nov 2020 05:55:17 GMT",
                "expires": "Thu, 19 Nov 1981 08:52:00 GMT",
                "pragma": "no-cache",
                "server": "RapidAPI-1.2.6",
                "set-cookie": [
                    "PHPSESSID=1guskncvdm4qp9o7d9o7mcua6t; path=/"
                ],
                "x-powered-by": "PHP/7.3.24, PleskLin",
                "x-rapidapi-region": "AWS - eu-central-1",
                "x-rapidapi-version": "1.2.6",
                "content-length": "637",
                "connection": "Close"
            },
            "schema": {}
        },
        {
            "name": "Key Phrases",
            "url": "https://webit-language.p.rapidapi.com/key-phrases",
            "description": "Key Phrases",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "",
                    "default": "en"
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "Catania is a city of the eastern coast of Sicily at the foot of Mount Etna, the biggest volcano in Europe. It is the seventh largest city in Italy with the metropolitan area reaching one million inhabitants, a major transport hub, economic centre and a university city where you will enjoy a busy downtown and an active nightlife. Catania is also well known for its particular baroque architecture and urban design."
                }
            ],
            "code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/key-phrases\"\nquerystring = {\"language\": language, \"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "data": {
                    "key_phrases": [
                        "catania",
                        "city",
                        "eastern coast",
                        "sicily",
                        "foot",
                        "mount etna",
                        "biggest volcano",
                        "europe",
                        "seventh largest city",
                        "italy",
                        "metropolitan area reaching",
                        "million inhabitants",
                        "major transport hub",
                        "economic centre",
                        "university city",
                        "enjoy",
                        "busy downtown",
                        "active nightlife",
                        "baroque architecture",
                        "urban design"
                    ]
                },
                "message": null,
                "status": "success"
            },
            "headers": {
                "cache-control": "no-store, no-cache, must-revalidate",
                "content-type": "application/json",
                "date": "Fri, 06 Nov 2020 05:00:13 GMT",
                "expires": "Thu, 19 Nov 1981 08:52:00 GMT",
                "pragma": "no-cache",
                "server": "RapidAPI-1.2.6",
                "set-cookie": [
                    "PHPSESSID=b5oks3242jg3ujltv8ea3ekiu3; path=/"
                ],
                "x-powered-by": "PHP/7.3.24, PleskLin",
                "x-rapidapi-region": "AWS - eu-central-1",
                "x-rapidapi-version": "1.2.6",
                "content-length": "372",
                "connection": "Close"
            },
            "schema": {}
        },
        {
            "name": "Analyze Grammar",
            "url": "https://webit-language.p.rapidapi.com/analyze",
            "description": "Perform deep sentences analysis to determine gender, nouns, pronouns, verbs, adverbs, adjective and a lot more complex syntax and morphological insights. Extract roots and stems and examine structure of words.\n\nPowered by Webit X-512 Neural Machine.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "The text to analyze.",
                    "default": "This is a sentence being analyzed. This is another one. That's amazing, isn't it?"
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "The language to analyze text for. Currently supported: \"en\".",
                    "default": "en"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/analyze\"\nquerystring = {\"q\": q, \"language\": language}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "data": {
                    "output": [
                        {
                            "alignment": "This ",
                            "analysis": [
                                {
                                    "root": "this",
                                    "symbols": [
                                        {
                                            "explanation": "Determiner",
                                            "symbols": "DET",
                                            "tag_type": "pos"
                                        },
                                        {
                                            "explanation": "Demonstrative",
                                            "symbols": "PronType=Dem",
                                            "tag_type": "feature"
                                        },
                                        {
                                            "explanation": "Singular",
                                            "symbols": "Number=Sing",
                                            "tag_type": "feature"
                                        }
                                    ]
                                },
                                {
                                    "root": "this",
                                    "symbols": [
                                        {
                                            "explanation": "Pronoun",
                                            "symbols": "PRON",
                                            "tag_type": "pos"
                                        },
                                        {
                                            "explanation": "Demonstrative",
                                            "symbols": "PronType=Dem",
                                            "tag_type": "feature"
                                        },
                                        {
                                            "explanation": "Masculine or feminine",
                                            "symbols": "Gender=Masc,Fem",
                                            "tag_type": "feature"
                                        },
                                        {
                                            "explanation": "Singular",
                                            "symbols": "Number=Sing",
                                            "tag_type": "feature"
                                        }
                                    ]
                                },
                                {
                                    "root": "this",
                                    "symbols": [
                                        {
                                            "explanation": "Pronoun",
                                            "symbols": "PRON",
                                            "tag_type": "pos"
                                        },
                                        {
                                            "explanation": "Relative",
                                            "symbols": "PronType=Rel",
                                            "tag_type": "feature"
                                        },
                                        {
                                            "explanation": "Animate or inanimate",
                                            "symbols": "Animacy=Anim,Inan",
                                            "tag_type": "feature"
                                        },
                                        {
                                            "explanation": "Masculine or feminine",
                                            "symbols": "Gender=Masc,Fem",
                                            "tag_type": "feature"
                                        },
                                        {
                                            "explanation": "Singular or plural",
                                            "symbols": "Number=Sing,Plur",
                                            "tag_type": "feature"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "alignment": "is ",
                            "analysis": [
                                {
                                    "root": "be",
                                    "symbols": [
                                        {
                                            "explanation": "Auxiliary verb",
                                            "symbols": "AUX",
                                            "tag_type": "pos"
                                        },
                                        {
                                            "explanation": "Singular",
                                            "symbols": "Number=Sing",
                                            "tag_type": "feature"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "alignment": "a ",
                            "analysis": [
                                {
                                    "root": "a",
                                    "symbols": [
                                        {
                                            "explanation": "Determiner",
                                            "symbols": "DET",
                                            "tag_type": "pos"
                                        },
                                        {
                                            "explanation": "Indefinite",
                                            "symbols": "PronType=Ind",
                                            "tag_type": "feature"
                                        },
                                        {
                                            "explanation": "Singular",
                                            "symbols": "Number=Sing",
                                            "tag_type": "feature"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "alignment": "sentence ",
                            "analysis": [
                                {
                                    "root": "sentence",
                                    "symbols": [
                                        {
                                            "explanation": "Noun",
                                            "symbols": "NOUN",
                                            "tag_type": "pos"
                                        },
                                        {
                                            "explanation": "Singular",
                                            "symbols": "Number=Sing",
                                            "tag_type": "feature"
                                        }
                                    ]
                                },
                                {
                                    "root": "sentence",
                                    "symbols": [
                                        {
                                            "explanation": "Verb",
                                            "symbols": "VERB",
                                            "tag_type": "pos"
                                        }
                                    ]
                                },
                                {
                                    "root": "sentence",
                                    "symbols": [
                                        {
                                            "explanation": "Verb",
                                            "symbols": "VERB",
                                            "tag_type": "pos"
                                        }
                                    ]
                                },
                                {
                                    "root": "sentence",
                                    "symbols": [
                                        {
                                            "explanation": "Verb",
                                            "symbols": "VERB",
                                            "tag_type": "pos"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "alignment": "being ",
                            "analysis": [
                                {
                                    "root": "being",
                                    "symbols": [
                                        {
                                            "explanation": "Noun",
                                            "symbols": "NOUN",
                                            "tag_type": "pos"
                                        },
                                        {
                                            "explanation": "Singular",
                                            "symbols": "Number=Sing",
                                            "tag_type": "feature"
                                        }
                                    ]
                                },
                                {
                                    "root": "be",
                                    "symbols": [
                                        {
                                            "explanation": "Auxiliary verb",
                                            "symbols": "AUX",
                                            "tag_type": "pos"
                                        }
                                    ]
                                },
                                {
                                    "root": "be",
                                    "symbols": [
                                        {
                                            "explanation": "Auxiliary verb",
                                            "symbols": "AUX",
                                            "tag_type": "pos"
                                        }
                                    ]
                                },
                                {
                                    "root": "be",
                                    "symbols": [
                                        {
                                            "explanation": "Auxiliary verb",
                                            "symbols": "AUX",
                                            "tag_type": "pos"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "alignment": "analyzed",
                            "analysis": [
                                {
                                    "root": "analyse",
                                    "symbols": [
                                        {
                                            "explanation": "Verb",
                                            "symbols": "VERB",
                                            "tag_type": "pos"
                                        }
                                    ]
                                },
                                {
                                    "root": "analyse",
                                    "symbols": [
                                        {
                                            "explanation": "Verb",
                                            "symbols": "VERB",
                                            "tag_type": "pos"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "alignment": ". ",
                            "analysis": [
                                {
                                    "root": ".",
                                    "symbols": [
                                        {
                                            "explanation": "Punctuation",
                                            "symbols": "PUNCT",
                                            "tag_type": "pos"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "alignment": "This ",
                            "analysis": [
                                {
                                    "root": "this",
                                    "symbols": [
                                        {
                                            "explanation": "Determiner",
                                            "symbols": "DET",
                                            "tag_type": "pos"
                                        },
                                        {
                                            "explanation": "Demonstrative",
                                            "symbols": "PronType=Dem",
                                            "tag_type": "feature"
                                        },
                                        {
                                            "explanation": "Singular",
                                            "symbols": "Number=Sing",
                                            "tag_type": "feature"
                                        }
                                    ]
                                },
                                {
                                    "root": "this",
                                    "symbols": [
                                        {
                                            "explanation": "Pronoun",
                                            "symbols": "PRON",
                                            "tag_type": "pos"
                                        },
                                        {
                                            "explanation": "Demonstrative",
                                            "symbols": "PronType=Dem",
                                            "tag_type": "feature"
                                        },
                                        {
                                            "explanation": "Masculine or feminine",
                                            "symbols": "Gender=Masc,Fem",
                                            "tag_type": "feature"
                                        },
                                        {
                                            "explanation": "Singular",
                                            "symbols": "Number=Sing",
                                            "tag_type": "feature"
                                        }
                                    ]
                                },
                                {
                                    "root": "this",
                                    "symbols": [
                                        {
                                            "explanation": "Pronoun",
                                            "symbols": "PRON",
                                            "tag_type": "pos"
                                        },
                                        {
                                            "explanation": "Relative",
                                            "symbols": "PronType=Rel",
                                            "tag_type": "feature"
                                        },
                                        {
                                            "explanation": "Animate or inanimate",
                                            "symbols": "Animacy=Anim,Inan",
                                            "tag_type": "feature"
                                        },
                                        {
                                            "explanation": "Masculine or feminine",
                                            "symbols": "Gender=Masc,Fem",
                                            "tag_type": "feature"
                                        },
                                        {
                                            "explanation": "Singular or plural",
                                            "symbols": "Number=Sing,Plur",
                                            "tag_type": "feature"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "alignment": "is ",
                            "analysis": [
                                {
                                    "root": "be",
                                    "symbols": [
                                        {
                                            "explanation": "Auxiliary verb",
                                            "symbols": "AUX",
                                            "tag_type": "pos"
                                        },
                                        {
                                            "explanation": "Singular",
                                            "symbols": "Number=Sing",
                                            "tag_type": "feature"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "alignment": "another one",
                            "analysis": [
                                {
                                    "root": "another one",
                                    "symbols": [
                                        {
                                            "explanation": "Pronoun",
                                            "symbols": "PRON",
                                            "tag_type": "pos"
                                        },
                                        {
                                            "explanation": "Indefinite",
                                            "symbols": "PronType=Ind",
                                            "tag_type": "feature"
                                        },
                                        {
                                            "explanation": "Masculine or feminine",
                                            "symbols": "Gender=Masc,Fem",
                                            "tag_type": "feature"
                                        },
                                        {
                                            "explanation": "Singular",
                                            "symbols": "Number=Sing",
                                            "tag_type": "feature"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "alignment": ". ",
                            "analysis": [
                                {
                                    "root": ".",
                                    "symbols": [
                                        {
                                            "explanation": "Punctuation",
                                            "symbols": "PUNCT",
                                            "tag_type": "pos"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "alignment": "That's ",
                            "analysis": [
                                {
                                    "root": "that",
                                    "symbols": [
                                        {
                                            "explanation": "Pronoun",
                                            "symbols": "PRON",
                                            "tag_type": "pos"
                                        },
                                        {
                                            "explanation": "Demonstrative",
                                            "symbols": "PronType=Dem",
                                            "tag_type": "feature"
                                        },
                                        {
                                            "explanation": "Masculine or feminine",
                                            "symbols": "Gender=Masc,Fem",
                                            "tag_type": "feature"
                                        },
                                        {
                                            "explanation": "Singular",
                                            "symbols": "Number=Sing",
                                            "tag_type": "feature"
                                        },
                                        {
                                            "explanation": "Auxiliary verb",
                                            "symbols": "AUX",
                                            "tag_type": "pos"
                                        },
                                        {
                                            "explanation": "Singular",
                                            "symbols": "Number=Sing",
                                            "tag_type": "feature"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "alignment": "amazing",
                            "analysis": [
                                {
                                    "root": "amazing",
                                    "symbols": [
                                        {
                                            "explanation": "Adjective",
                                            "symbols": "ADJ",
                                            "tag_type": "pos"
                                        }
                                    ]
                                },
                                {
                                    "root": "amaze",
                                    "symbols": [
                                        {
                                            "explanation": "Verb",
                                            "symbols": "VERB",
                                            "tag_type": "pos"
                                        }
                                    ]
                                },
                                {
                                    "root": "amaze",
                                    "symbols": [
                                        {
                                            "explanation": "Verb",
                                            "symbols": "VERB",
                                            "tag_type": "pos"
                                        }
                                    ]
                                },
                                {
                                    "root": "amaze",
                                    "symbols": [
                                        {
                                            "explanation": "Verb",
                                            "symbols": "VERB",
                                            "tag_type": "pos"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "alignment": ", ",
                            "analysis": [
                                {
                                    "root": ",",
                                    "symbols": [
                                        {
                                            "explanation": "Comma punctuation",
                                            "symbols": "PUNCT[PunctType=Comm]",
                                            "tag_type": "pos"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "alignment": "isn't ",
                            "analysis": [
                                {
                                    "root": "be",
                                    "symbols": [
                                        {
                                            "explanation": "Auxiliary verb",
                                            "symbols": "AUX",
                                            "tag_type": "pos"
                                        },
                                        {
                                            "explanation": "Singular",
                                            "symbols": "Number=Sing",
                                            "tag_type": "feature"
                                        },
                                        {
                                            "explanation": "Adverb",
                                            "symbols": "ADV",
                                            "tag_type": "pos"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "alignment": "it",
                            "analysis": [
                                {
                                    "root": "prpers",
                                    "symbols": [
                                        {
                                            "explanation": "Pronoun",
                                            "symbols": "PRON",
                                            "tag_type": "pos"
                                        },
                                        {
                                            "explanation": "Neuter",
                                            "symbols": "Gender=Neut",
                                            "tag_type": "feature"
                                        },
                                        {
                                            "explanation": "Singular",
                                            "symbols": "Number=Sing",
                                            "tag_type": "feature"
                                        }
                                    ]
                                },
                                {
                                    "root": "prpers",
                                    "symbols": [
                                        {
                                            "explanation": "Pronoun",
                                            "symbols": "PRON",
                                            "tag_type": "pos"
                                        },
                                        {
                                            "explanation": "Neuter",
                                            "symbols": "Gender=Neut",
                                            "tag_type": "feature"
                                        },
                                        {
                                            "explanation": "Singular",
                                            "symbols": "Number=Sing",
                                            "tag_type": "feature"
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "text": "This is a sentence being analyzed. This is another one. That's amazing, isn't it?"
                },
                "message": null,
                "status": "success"
            },
            "headers": {
                "cache-control": "no-store, no-cache, must-revalidate",
                "content-type": "application/json",
                "date": "Sun, 14 Mar 2021 05:24:13 GMT",
                "expires": "Thu, 19 Nov 1981 08:52:00 GMT",
                "pragma": "no-cache",
                "server": "RapidAPI-1.2.7",
                "set-cookie": [
                    "PHPSESSID=v21o6e0qnaijg24vvmg1kkk0jr; path=/"
                ],
                "vary": "Accept-Encoding",
                "x-powered-by": "PHP/7.3.27, PleskLin",
                "x-rapidapi-region": "AWS - eu-central-1",
                "x-rapidapi-version": "1.2.7",
                "x-ratelimit-characters-limit": "1000",
                "x-ratelimit-characters-remaining": "1000",
                "x-ratelimit-characters-reset": "2382169",
                "content-length": "6420",
                "connection": "Close"
            },
            "schema": {}
        },
        {
            "name": "Transliterate (Any to Latin)",
            "url": "https://webit-language.p.rapidapi.com/transliterate",
            "description": "Transliteration endpoint provides you with transliteration of text from any language to Latin. Transliterate \"\u3053\u3093\u306b\u3061\u306f\" to \"kon'nichiha\" with ease.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Transliterate any text to Latin.",
                    "default": "\u3053\u3093\u306b\u3061\u306f\u3002"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/transliterate\"\nquerystring = {\"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Autocomplete",
            "url": "https://webit-language.p.rapidapi.com/autocomplete",
            "description": "This endpoint provides autocomplete (word completion) for 80+ languages.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "aw"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/autocomplete\"\nquerystring = {\"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Break Sentence",
            "url": "https://webit-language.p.rapidapi.com/break-sentence",
            "description": "Perform Neural Machine sentence breaking on a long text. Sentences are break in respect of grammar and phrases meaning.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Input text to perform sentence break on.",
                    "default": "This is a phrase. How well can you do? Mr. Webit has Mr. being part of the sentence without breaking it."
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "Language the input text is written by.\n\nSupported ISO 639-1 language codes: `af, am, ar, ast, az, ba, be, bg, bn, br, bs, ca, cs, cy, da, de, el, en, es, et, fa, ff, fi, fr, fy, ga, gd, gl, gu, ha, he, hi, hr, ht, hu, hy, id, ig, is, it, ja, jv, ka, kk, km, kn, ko, lb, lg, ln, lo, lt, lv, mg, mk, ml, mn, mr, ms, my, ne, nl, no, ns, oc, or, pa, pl, ps, pt, ro, ru, sd, si, sk, sl, so, sq, sr, ss, su, sv, sw, ta, th, tl, tn, tr, uk, ur, uz, vi, wo, xh, yi, yo, zh, zu`.",
                    "default": "en"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/break-sentence\"\nquerystring = {\"text\": text, \"language\": language}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Detect",
            "url": "https://webit-language.p.rapidapi.com/detect",
            "description": "Detect",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Input text to perform Neural language detection on.",
                    "default": "\u4f60\u597d! \u4f60\u597d\u5417? \u0643\u064a\u0641 \u062d\u0627\u0644\u0643\u061f Neural recognition can detect multiple languages at the same time!"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/detect\"\nquerystring = {\"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Paraphrase (English)",
            "url": "https://webit-language.p.rapidapi.com/paraphrase",
            "description": "This endpoint allows for text paraphrasing (rewriting) using our A.I. neural network.\n\nSupported languages: English [en].",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "The English text to get paraphrase for.\n\nMaximum allowed characters length per request:\n- 250 characters for Free/Basic plan;\n- 1000 characters for Pro plan;\n- 3000 characters for Ultra plan;\n- 5000 characters for Mega plan.",
                    "default": "In ancient times Catania was associated with the legend of Amphinomos and Anapias, who, on occasion of a great eruption of Etna, abandoned all their property and carried off their aged parents on their shoulders. The stream of lava itself was said to have parted, and flowed aside so as not to harm them."
                },
                {
                    "name": "entropy",
                    "type": "ENUM",
                    "description": "This parameter determines the amount of shuffling put by our A.I. into rewriting your text. The higher the entropy, the more different the final phrase is from the original text. Keep in mind that despite very_high entropy provides more creativity into rewriting your sentence, it might sometimes alter the original meaning, so feel free to fine-tune this parameter to a lower grade of entropy when the final output does not meet the desired result.\n\nSuggested reading: [https://webit.re/blog/202011201848-how-to-rewrite-sentences-without-changing-the-meaning](url)",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "salt",
                    "type": "NUMBER",
                    "description": "```\n* * * * * * * * * * * * * * * * * * * *\n* * * DEPRECATED SINCE 2021-02-22 * * *\n* * * * * IT WILL BE IGNORED! * * * * *\n* * * * * * * * * * * * * * * * * * * *\n```\n\n[EXPERIMENTAL] Changes text lexical parts and words with similar synonyms. Accepts an integer value included in the 0-100 range, with 0 means no modification (disabled), 50 brings an average modification, 100 being the strongest change possible.\n\n*Note that, differently from entropy which uses advanced neural patterns, salt slows down text processing due to additional inner dictionary lookups. Therefore, consider using it only when fast processing time are not your major concern.*",
                    "default": "0"
                }
            ],
            "code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/paraphrase\"\nquerystring = {\"salt\": salt, \"text\": text, \"entropy\": entropy}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Summarization (English)",
            "url": "https://webit-language.p.rapidapi.com/summarize",
            "description": "Summarize a long article in a short, machine-generated, text.\n\nSupported languages: \"en\" (English).",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Input text to be summarized.\n\nMaximum allowed characters length per request:\n- 250 characters for Free/Basic plan;\n- 1000 characters for Pro plan;\n- 3000 characters for Ultra plan;\n- 5000 characters for Mega plan.",
                    "default": "Catania is the second largest city in Sicily, after Palermo, and among the ten largest cities in Italy. Located on Sicily's east coast, it faces the Ionian Sea. It is the capital of the 58-municipality region known as the Metropolitan City of Catania, which is the seventh-largest metropolitan city in Italy. The population of the city proper is 311,584, while the population of the Metropolitan City of Catania is 1,107,702. Catania was founded in the 8th century BC by Chalcidian Greeks. The city was almost completely destroyed by a catastrophic earthquake in 1169. However, by the 14th century, and into the Renaissance period, Catania was one of Italy's most important cultural, artistic and political centres. It was the site of Sicily's first university, founded in 1434. It has been the native or adopted home of some of Italy's most famous artists and writers, including the composers Vincenzo Bellini and Giovanni Pacini, and the writers Giovanni Verga, Luigi Capuana, Federico De Roberto and Nino Martoglio. The city has been devastated several times by volcanic eruptions from nearby Mount Etna, the most violent of which was in 1669 and it suffered through another severely damaging earthquake in 1693. Catania today is the industrial, logistical, and commercial center of Sicily. However, it is also noted for its history, culture, architecture, and gastronomy. The section of the city known as the \"old town\" features some of the most striking examples of baroque architecture in Italy, and is a UNESCO World Heritage Site."
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/summarize\"\nquerystring = {\"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Key Phrases",
            "url": "https://webit-language.p.rapidapi.com/key-phrases",
            "description": "Key Phrases",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "",
                    "default": "en"
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "Catania is a city of the eastern coast of Sicily at the foot of Mount Etna, the biggest volcano in Europe. It is the seventh largest city in Italy with the metropolitan area reaching one million inhabitants, a major transport hub, economic centre and a university city where you will enjoy a busy downtown and an active nightlife. Catania is also well known for its particular baroque architecture and urban design."
                }
            ],
            "code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/key-phrases\"\nquerystring = {\"language\": \"en\", \"text\": \"Catania is a city of the eastern coast of Sicily at the foot of Mount Etna, the biggest volcano in Europe. It is the seventh largest city in Italy with the metropolitan area reaching one million inhabitants, a major transport hub, economic centre and a university city where you will enjoy a busy downtown and an active nightlife. Catania is also well known for its particular baroque architecture and urban design.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/key-phrases\"\nquerystring = {\"language\": \"en\", \"text\": \"Catania is a city of the eastern coast of Sicily at the foot of Mount Etna, the biggest volcano in Europe. It is the seventh largest city in Italy with the metropolitan area reaching one million inhabitants, a major transport hub, economic centre and a university city where you will enjoy a busy downtown and an active nightlife. Catania is also well known for its particular baroque architecture and urban design.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Analyze Grammar",
            "url": "https://webit-language.p.rapidapi.com/analyze",
            "description": "Perform deep sentences analysis to determine gender, nouns, pronouns, verbs, adverbs, adjective and a lot more complex syntax and morphological insights. Extract roots and stems and examine structure of words.\n\nPowered by Webit X-512 Neural Machine.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "The text to analyze.",
                    "default": "This is a sentence being analyzed. This is another one. That's amazing, isn't it?"
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "The language to analyze text for. Currently supported: \"en\".",
                    "default": "en"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/analyze\"\nquerystring = {\"q\": \"This is a sentence being analyzed. This is another one. That's amazing, isn't it?\", \"language\": \"en\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/analyze\"\nquerystring = {\"q\": \"This is a sentence being analyzed. This is another one. That's amazing, isn't it?\", \"language\": \"en\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Break Sentence",
            "url": "https://webit-language.p.rapidapi.com/break-sentence",
            "description": "Perform Neural Machine sentence breaking on a long text. Sentences are break in respect of grammar and phrases meaning.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Input text to perform sentence break on.",
                    "default": "This is a phrase. How well can you do? Mr. Webit has Mr. being part of the sentence without breaking it."
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "Language the input text is written by.\n\nSupported ISO 639-1 language codes: `af, am, ar, ast, az, ba, be, bg, bn, br, bs, ca, cs, cy, da, de, el, en, es, et, fa, ff, fi, fr, fy, ga, gd, gl, gu, ha, he, hi, hr, ht, hu, hy, id, ig, is, it, ja, jv, ka, kk, km, kn, ko, lb, lg, ln, lo, lt, lv, mg, mk, ml, mn, mr, ms, my, ne, nl, no, ns, oc, or, pa, pl, ps, pt, ro, ru, sd, si, sk, sl, so, sq, sr, ss, su, sv, sw, ta, th, tl, tn, tr, uk, ur, uz, vi, wo, xh, yi, yo, zh, zu`.",
                    "default": "en"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/break-sentence\"\nquerystring = {\"text\": \"This is a phrase. How well can you do? Mr. Webit has Mr. being part of the sentence without breaking it.\", \"language\": \"en\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/break-sentence\"\nquerystring = {\"text\": \"This is a phrase. How well can you do? Mr. Webit has Mr. being part of the sentence without breaking it.\", \"language\": \"en\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Detect",
            "url": "https://webit-language.p.rapidapi.com/detect",
            "description": "Detect",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Input text to perform Neural language detection on.",
                    "default": "\u4f60\u597d! \u4f60\u597d\u5417? \u0643\u064a\u0641 \u062d\u0627\u0644\u0643\u061f Neural recognition can detect multiple languages at the same time!"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/detect\"\nquerystring = {\"text\": \"\u4f60\u597d! \u4f60\u597d\u5417? \u0643\u064a\u0641 \u062d\u0627\u0644\u0643\u061f Neural recognition can detect multiple languages at the same time!\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/detect\"\nquerystring = {\"text\": \"\u4f60\u597d! \u4f60\u597d\u5417? \u0643\u064a\u0641 \u062d\u0627\u0644\u0643\u061f Neural recognition can detect multiple languages at the same time!\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Paraphrase (English)",
            "url": "https://webit-language.p.rapidapi.com/paraphrase",
            "description": "This endpoint allows for text paraphrasing (rewriting) using our A.I. neural network.\n\nSupported languages: English [en].",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "The English text to get paraphrase for.\n\nMaximum allowed characters length per request:\n- 250 characters for Free/Basic plan;\n- 1000 characters for Pro plan;\n- 3000 characters for Ultra plan;\n- 5000 characters for Mega plan.",
                    "default": "In ancient times Catania was associated with the legend of Amphinomos and Anapias, who, on occasion of a great eruption of Etna, abandoned all their property and carried off their aged parents on their shoulders. The stream of lava itself was said to have parted, and flowed aside so as not to harm them."
                },
                {
                    "name": "entropy",
                    "type": "ENUM",
                    "description": "This parameter determines the amount of shuffling put by our A.I. into rewriting your text. The higher the entropy, the more different the final phrase is from the original text. Keep in mind that despite very_high entropy provides more creativity into rewriting your sentence, it might sometimes alter the original meaning, so feel free to fine-tune this parameter to a lower grade of entropy when the final output does not meet the desired result.\n\nSuggested reading: [https://webit.re/blog/202011201848-how-to-rewrite-sentences-without-changing-the-meaning](url)",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "salt",
                    "type": "NUMBER",
                    "description": "```\n* * * * * * * * * * * * * * * * * * * *\n* * * DEPRECATED SINCE 2021-02-22 * * *\n* * * * * IT WILL BE IGNORED! * * * * *\n* * * * * * * * * * * * * * * * * * * *\n```\n\n[EXPERIMENTAL] Changes text lexical parts and words with similar synonyms. Accepts an integer value included in the 0-100 range, with 0 means no modification (disabled), 50 brings an average modification, 100 being the strongest change possible.\n\n*Note that, differently from entropy which uses advanced neural patterns, salt slows down text processing due to additional inner dictionary lookups. Therefore, consider using it only when fast processing time are not your major concern.*",
                    "default": "0"
                }
            ],
            "code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/paraphrase\"\nquerystring = {\"salt\": \"0\", \"text\": \"In ancient times Catania was associated with the legend of Amphinomos and Anapias, who, on occasion of a great eruption of Etna, abandoned all their property and carried off their aged parents on their shoulders. The stream of lava itself was said to have parted, and flowed aside so as not to harm them.\", \"entropy\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/paraphrase\"\nquerystring = {\"salt\": \"0\", \"text\": \"In ancient times Catania was associated with the legend of Amphinomos and Anapias, who, on occasion of a great eruption of Etna, abandoned all their property and carried off their aged parents on their shoulders. The stream of lava itself was said to have parted, and flowed aside so as not to harm them.\", \"entropy\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Summarization (English)",
            "url": "https://webit-language.p.rapidapi.com/summarize",
            "description": "Summarize a long article in a short, machine-generated, text.\n\nSupported languages: \"en\" (English).",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Input text to be summarized.\n\nMaximum allowed characters length per request:\n- 250 characters for Free/Basic plan;\n- 1000 characters for Pro plan;\n- 3000 characters for Ultra plan;\n- 5000 characters for Mega plan.",
                    "default": "Catania is the second largest city in Sicily, after Palermo, and among the ten largest cities in Italy. Located on Sicily's east coast, it faces the Ionian Sea. It is the capital of the 58-municipality region known as the Metropolitan City of Catania, which is the seventh-largest metropolitan city in Italy. The population of the city proper is 311,584, while the population of the Metropolitan City of Catania is 1,107,702. Catania was founded in the 8th century BC by Chalcidian Greeks. The city was almost completely destroyed by a catastrophic earthquake in 1169. However, by the 14th century, and into the Renaissance period, Catania was one of Italy's most important cultural, artistic and political centres. It was the site of Sicily's first university, founded in 1434. It has been the native or adopted home of some of Italy's most famous artists and writers, including the composers Vincenzo Bellini and Giovanni Pacini, and the writers Giovanni Verga, Luigi Capuana, Federico De Roberto and Nino Martoglio. The city has been devastated several times by volcanic eruptions from nearby Mount Etna, the most violent of which was in 1669 and it suffered through another severely damaging earthquake in 1693. Catania today is the industrial, logistical, and commercial center of Sicily. However, it is also noted for its history, culture, architecture, and gastronomy. The section of the city known as the \"old town\" features some of the most striking examples of baroque architecture in Italy, and is a UNESCO World Heritage Site."
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/summarize\"\nquerystring = {\"text\": \"Catania is the second largest city in Sicily, after Palermo, and among the ten largest cities in Italy. Located on Sicily's east coast, it faces the Ionian Sea. It is the capital of the 58-municipality region known as the Metropolitan City of Catania, which is the seventh-largest metropolitan city in Italy. The population of the city proper is 311,584, while the population of the Metropolitan City of Catania is 1,107,702. Catania was founded in the 8th century BC by Chalcidian Greeks. The city was almost completely destroyed by a catastrophic earthquake in 1169. However, by the 14th century, and into the Renaissance period, Catania was one of Italy's most important cultural, artistic and political centres. It was the site of Sicily's first university, founded in 1434. It has been the native or adopted home of some of Italy's most famous artists and writers, including the composers Vincenzo Bellini and Giovanni Pacini, and the writers Giovanni Verga, Luigi Capuana, Federico De Roberto and Nino Martoglio. The city has been devastated several times by volcanic eruptions from nearby Mount Etna, the most violent of which was in 1669 and it suffered through another severely damaging earthquake in 1693. Catania today is the industrial, logistical, and commercial center of Sicily. However, it is also noted for its history, culture, architecture, and gastronomy. The section of the city known as the \\\"old town\\\" features some of the most striking examples of baroque architecture in Italy, and is a UNESCO World Heritage Site.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/summarize\"\nquerystring = {\"text\": \"Catania is the second largest city in Sicily, after Palermo, and among the ten largest cities in Italy. Located on Sicily's east coast, it faces the Ionian Sea. It is the capital of the 58-municipality region known as the Metropolitan City of Catania, which is the seventh-largest metropolitan city in Italy. The population of the city proper is 311,584, while the population of the Metropolitan City of Catania is 1,107,702. Catania was founded in the 8th century BC by Chalcidian Greeks. The city was almost completely destroyed by a catastrophic earthquake in 1169. However, by the 14th century, and into the Renaissance period, Catania was one of Italy's most important cultural, artistic and political centres. It was the site of Sicily's first university, founded in 1434. It has been the native or adopted home of some of Italy's most famous artists and writers, including the composers Vincenzo Bellini and Giovanni Pacini, and the writers Giovanni Verga, Luigi Capuana, Federico De Roberto and Nino Martoglio. The city has been devastated several times by volcanic eruptions from nearby Mount Etna, the most violent of which was in 1669 and it suffered through another severely damaging earthquake in 1693. Catania today is the industrial, logistical, and commercial center of Sicily. However, it is also noted for its history, culture, architecture, and gastronomy. The section of the city known as the \\\"old town\\\" features some of the most striking examples of baroque architecture in Italy, and is a UNESCO World Heritage Site.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        }
    ]
}