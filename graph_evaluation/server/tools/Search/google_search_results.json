{
    "product_id": "api_74d928d8-1383-4288-9524-fbd72f2504f0",
    "tool_description": "This API is for searching data and images on Google.",
    "home_url": "https://rapidapi.com/devpartnereu-devpartnereu-default/api/google-search-results1/",
    "name": "Google Search Results",
    "title": "Google Search Results",
    "pricing": "FREEMIUM",
    "tool_name": "Google Search Results",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 1217,
        "avgSuccessRate": 100,
        "popularityScore": 7.9,
        "__typename": "Score"
    },
    "host": "google-search-results1.p.rapidapi.com",
    "api_list": [
        {
            "name": "Search",
            "url": "https://google-search-results1.p.rapidapi.com/",
            "description": "Enter data to search. GET-request.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "",
                    "default": "some query"
                }
            ],
            "optional_parameters": [
                {
                    "name": "filterResult",
                    "type": "STRING",
                    "description": "Controls whether the duplicate content filter is enabled or disabled. '0' - Disables the duplicate content filter. '1' - Enables the duplicate content filter. The default setting is '0'.",
                    "default": "0"
                },
                {
                    "name": "languageCode",
                    "type": "STRING",
                    "description": "Sets the language of the user interface. The default is 'en'.",
                    "default": "en"
                },
                {
                    "name": "sortBy",
                    "type": "STRING",
                    "description": "The sorting expression applied to the results. Example: sort='date'. Default sort=' ' (empty string, sort relevance)",
                    "default": "date"
                },
                {
                    "name": "safe",
                    "type": "STRING",
                    "description": "Search security level. Valid values: 'active' : enables SafeSearch filtering. 'off' : disables SafeSearch filtering (default).",
                    "default": "off"
                },
                {
                    "name": "returnPage",
                    "type": "STRING",
                    "description": "The index of the first result returned. The default number of results on the page is 10",
                    "default": "1"
                },
                {
                    "name": "countryCode",
                    "type": "STRING",
                    "description": "End-user geolocation. The parameter value is a two-letter country code. The parameter boosts search results whose country of origin matches the parameter value. The default is 'us'.",
                    "default": "us"
                },
                {
                    "name": "returnResult",
                    "type": "STRING",
                    "description": "The number of search results returned. Valid values are integers from 1 to 10",
                    "default": "1"
                }
            ],
            "code": "import requests\n\nurl = \"https://google-search-results1.p.rapidapi.com/\"\nquerystring = {\"filterResult\": \"0\", \"languageCode\": \"en\", \"sortBy\": \"date\", \"safe\": \"off\", \"returnPage\": \"1\", \"countryCode\": \"us\", \"query\": \"some query\", \"returnResult\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"google-search-results1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://google-search-results1.p.rapidapi.com/\"\nquerystring = {\"filterResult\": \"0\", \"languageCode\": \"en\", \"sortBy\": \"date\", \"safe\": \"off\", \"returnPage\": \"1\", \"countryCode\": \"us\", \"query\": \"some query\", \"returnResult\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"google-search-results1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "item": [
                    {
                        "title": "How can I delete a query string parameter in JavaScript? - Stack ...",
                        "link": "https://stackoverflow.com/questions/1634748/how-can-i-delete-a-query-string-parameter-in-javascript",
                        "displayLink": "stackoverflow.com",
                        "snippet": "10 hours ago ... In this thread many said that the regex is probably not the best/stable solution ... so im not 100% sure if this thing has some flaws but as far as i tested it\u00a0...",
                        "formattedUrl": "https://stackoverflow.com/.../how-can-i-delete-a-query-string-parameter-in- javascript",
                        "pagemap": {
                            "answer": [
                                {
                                    "commentcount": "13",
                                    "datecreated": "2009-10-28T02:19:25",
                                    "text": "\"[&;]?\" + parameter + \"=[^&;]+\" Seems dangerous because it parameter \u2018bar\u2019 would match: ?a=b&foobar=c Also, it would fail if parameter contained any characters that are special in RegExp,...",
                                    "upvotecount": "200",
                                    "url": "Share"
                                },
                                {
                                    "commentcount": "4",
                                    "datecreated": "2017-06-16T08:01:56",
                                    "text": "Modern browsers provide URLSearchParams interface to work with search params. Which has delete method that removes param by name. if (typeof URLSearchParams !== 'undefined') { const params...",
                                    "upvotecount": "86",
                                    "url": "Share"
                                },
                                {
                                    "commentcount": "3",
                                    "datecreated": "2018-07-04T08:56:00",
                                    "text": "You can change the URL with: window.history.pushState({}, document.title, window.location.pathname); this way, you can overwrite the URL without the search parameter, I use it to clean the...",
                                    "upvotecount": "62",
                                    "url": "Share"
                                },
                                {
                                    "commentcount": "1",
                                    "datecreated": "2020-05-26T12:57:15",
                                    "text": "If it's an instance of URL, use the delete function of searchParams let url = new URL(location.href); url.searchParams.delete('page');",
                                    "upvotecount": "32",
                                    "url": "Share"
                                },
                                {
                                    "commentcount": "2",
                                    "datecreated": "2014-08-09T02:21:28",
                                    "text": "I don't see major issues with a regex solution. But, don't forget to preserve the fragment identifier (text after the #). Here's my solution: function RemoveParameterFromUrl(url, parameter)...",
                                    "upvotecount": "28",
                                    "url": "Share"
                                },
                                {
                                    "commentcount": "5",
                                    "datecreated": "2011-02-04T02:18:49",
                                    "text": "Copied from bobince answer, but made it support question marks in the query string, eg http://www.google.com/search?q=test???+something&aq=f Is it valid to have more than one question mark...",
                                    "upvotecount": "23",
                                    "url": "Share"
                                },
                                {
                                    "datecreated": "2019-09-27T06:24:41",
                                    "text": "Here a solution that: uses URLSearchParams (no difficult to understand regex) updates the URL in the search bar without reload maintains all other parts of the URL (e.g. hash) removes superflous...",
                                    "upvotecount": "16",
                                    "url": "Share"
                                },
                                {
                                    "commentcount": "2",
                                    "datecreated": "2018-05-25T14:28:58",
                                    "text": "Here is what I'm using: if (location.href.includes('?')) { history.pushState({}, null, location.href.split('?')[0]); } Original URL: http://www.example.com/test/hello?id=123&foo=bar Destination...",
                                    "upvotecount": "16",
                                    "url": "Share"
                                },
                                {
                                    "datecreated": "2018-12-18T15:56:16",
                                    "text": "This is a clean version remove query parameter with the URL class for today browsers: function removeUrlParameter(url, paramKey) { var r = new URL(url); r.searchParams.delete(paramKey); return...",
                                    "upvotecount": "14",
                                    "url": "Share"
                                },
                                {
                                    "commentcount": "4",
                                    "datecreated": "2012-07-25T16:32:03",
                                    "text": "Anyone interested in a regex solution I have put together this function to add/remove/update a querystring parameter. Not supplying a value will remove the parameter, supplying one will add/update...",
                                    "upvotecount": "12",
                                    "url": "Share"
                                },
                                {
                                    "commentcount": "1",
                                    "datecreated": "2015-03-20T17:25:39",
                                    "text": "Assuming you want to remove key=val parameter from URI: function removeParam(uri) { return uri.replace(/([&\\?]key=val*$|key=val&|[?&]key=val(?=#))/, ''); }",
                                    "upvotecount": "8",
                                    "url": "Share"
                                },
                                {
                                    "datecreated": "2016-11-17T06:59:47",
                                    "text": "Heres a complete function for adding and removing parameters based on this question and this github gist: https://gist.github.com/excalq/2961415 var updateQueryStringParam = function (key,...",
                                    "upvotecount": "6",
                                    "url": "Share"
                                },
                                {
                                    "datecreated": "2017-02-14T03:56:50",
                                    "text": "Using jQuery: function removeParam(key) { var url = document.location.href; var params = url.split('?'); if (params.length == 1) return; url = params[0] + '?'; params = params[1]; params =...",
                                    "upvotecount": "4",
                                    "url": "Share"
                                },
                                {
                                    "datecreated": "2011-01-28T11:32:22",
                                    "text": "The above version as a function function removeURLParam(url, param) { var urlparts= url.split('?'); if (urlparts.length>=2) { var prefix= encodeURIComponent(param)+'='; var pars= urlparts[1].split(...",
                                    "upvotecount": "3",
                                    "url": "Share"
                                },
                                {
                                    "datecreated": "2015-01-26T14:46:13",
                                    "text": "You should be using a library to do URI manipulation as it is more complicated than it seems on the surface to do it yourself. Take a look at: http://medialize.github.io/URI.js/",
                                    "upvotecount": "2",
                                    "url": "Share"
                                },
                                {
                                    "commentcount": "1",
                                    "datecreated": "2017-01-20T02:54:41",
                                    "text": "From what I can see, none of the above can handle normal parameters and array parameters. Here's one that does. function removeURLParameter(param, url) { url = decodeURI(url).split(\"?\"); path...",
                                    "upvotecount": "2",
                                    "url": "Share"
                                },
                                {
                                    "commentcount": "2",
                                    "datecreated": "2013-04-24T10:06:58",
                                    "text": "All of the responses on this thread have a flaw in that they do not preserve anchor/fragment parts of URLs. So if your URL looks like: http://dns-entry/path?parameter=value#fragment-text and...",
                                    "upvotecount": "2",
                                    "url": "Share"
                                },
                                {
                                    "datecreated": "2020-02-29T16:35:26",
                                    "text": "I practically wrote the following function to process the url parameters and get the final status as a string and redirect the page. Hopefully it benefits. function addRemoveUrlQuery(addParam...",
                                    "upvotecount": "1",
                                    "url": "Share"
                                },
                                {
                                    "datecreated": "2020-03-27T07:37:53",
                                    "text": "another direct & simpler answer would be let url = new URLSearchParams(location.search) let key = 'some_key' return url.has(key) ? location.href.replace(new RegExp(`[?&]${key}=${url.get(key)}`),...",
                                    "upvotecount": "1",
                                    "url": "Share"
                                },
                                {
                                    "datecreated": "2020-04-24T12:08:04",
                                    "text": "Glad you scrolled here. I would suggest you to resolve this task by next possible solutions: You need to support only modern browsers (Edge >= 17) - use URLSearchParams.delete() API. It is...",
                                    "upvotecount": "1",
                                    "url": "Share"
                                },
                                {
                                    "datecreated": "2021-01-24T10:25:31",
                                    "text": "If you have a polyfill for URLSearchParams or simply don't have to support Internet Explorer, that's what I would use like suggested in other answers here. If you don't want to depend on URLSearchP...",
                                    "upvotecount": "1",
                                    "url": "Share"
                                },
                                {
                                    "datecreated": "2023-04-11T09:17:15",
                                    "text": "Here's a simple non-regex way to get rid of all query params: const url = \"https://example.com\"; const urlObj = new URL(url); const urlWithoutQueryParams = `${urlObj.origin}${urlObj.pathname}`;",
                                    "upvotecount": "1",
                                    "url": "Share"
                                },
                                {
                                    "commentcount": "1",
                                    "datecreated": "2015-12-11T20:51:42",
                                    "text": "A modified version of solution by ssh_imov function removeParam(uri, keyValue) { var re = new RegExp(\"([&\\?]\"+ keyValue + \"*$|\" + keyValue + \"&|[?&]\" + keyValue + \"(?=#))\", \"i\"); return uri.replace...",
                                    "upvotecount": "0",
                                    "url": "Share"
                                },
                                {
                                    "datecreated": "2016-04-19T11:43:16",
                                    "text": "This returns the URL w/o ANY GET Parameters: var href = document.location.href; var search = document.location.search; var pos = href.indexOf( search ); if ( pos !== -1 ){ href = href.slice(...",
                                    "upvotecount": "0",
                                    "url": "Share"
                                },
                                {
                                    "commentcount": "1",
                                    "datecreated": "2019-10-29T14:41:22",
                                    "text": "const params = new URLSearchParams(location.search) params.delete('key_to_delete') console.log(params.toString())",
                                    "upvotecount": "0",
                                    "url": "Share"
                                },
                                {
                                    "datecreated": "2020-05-25T07:07:02",
                                    "text": "function removeParamInAddressBar(parameter) { var url = document.location.href; var urlparts = url.split('?'); if (urlparts.length >= 2) { var urlBase = urlparts.shift(); var queryString =...",
                                    "upvotecount": "0",
                                    "url": "Share"
                                },
                                {
                                    "datecreated": "2023-03-02T08:05:19",
                                    "text": "function clearQueryParams() { const paramName = 'abc'; const url = new URL(window.location.href); url.searchParams.delete(paramName); const newUrl = url.search ? url.href : url.href.replace('?',...",
                                    "upvotecount": "0",
                                    "url": "Share"
                                },
                                {
                                    "datecreated": "2023-03-19T17:37:52",
                                    "text": "const removeQueryParams = (url: string) => { const urlParts = url.split(\"?\"); return urlParts[0]; };",
                                    "upvotecount": "0",
                                    "url": "Share"
                                },
                                {
                                    "commentcount": "2",
                                    "datecreated": "2009-10-28T03:21:30",
                                    "text": "If you're into jQuery, there is a good query string manipulation plugin: http://plugins.jquery.com/project/query-object",
                                    "upvotecount": "-2",
                                    "url": "Share"
                                },
                                {
                                    "datecreated": "2015-03-06T16:23:55",
                                    "text": "function removeQueryStringParameter(uri, key, value) { var re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\"); var separator = uri.indexOf('?') !== -1 ? \"&\" : \"?\"; if (uri.match(re)) { return...",
                                    "upvotecount": "-2",
                                    "url": "Share"
                                }
                            ],
                            "cse_image": [
                                {
                                    "src": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded"
                                }
                            ],
                            "cse_thumbnail": [
                                {
                                    "height": "225",
                                    "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcQYl7zuT3cw_BBRAyhdQEbQuBgqdNHXKHIYKL8S8ly8x9L_XA9sdwSmiHs",
                                    "width": "225"
                                }
                            ],
                            "metatags": [
                                {
                                    "og:image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
                                    "og:site_name": "Stack Overflow",
                                    "og:type": "website",
                                    "og:url": "https://stackoverflow.com/questions/1634748/how-can-i-delete-a-query-string-parameter-in-javascript",
                                    "twitter:card": "summary",
                                    "twitter:description": "Is there better way to delete a parameter from a query string in a URL string in standard JavaScript other than by using  a regular expression?\n\nHere's what I've come up with so far which seems to ...",
                                    "twitter:domain": "stackoverflow.com",
                                    "twitter:title": "How can I delete a query string parameter in JavaScript?",
                                    "viewport": "width=device-width, height=device-height, initial-scale=1.0, minimum-scale=1.0"
                                }
                            ],
                            "qapage": [
                                {
                                    "description": "Is there better way to delete a parameter from a query string in a URL string in standard JavaScript other than by using a regular expression? Here's what I've come up with so far which seems to ...",
                                    "image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
                                    "name": "How can I delete a query string parameter in JavaScript?",
                                    "primaryimageofpage": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded"
                                }
                            ],
                            "question": [
                                {
                                    "answercount": "30",
                                    "commentcount": "0",
                                    "datecreated": "2009-10-28T01:52:28",
                                    "image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon.png?v=c78bd457575a",
                                    "name": "How can I delete a query string parameter in JavaScript?",
                                    "text": "Is there better way to delete a parameter from a query string in a URL string in standard JavaScript other than by using a regular expression? Here's what I've come up with so far which seems...",
                                    "upvotecount": "188",
                                    "url": "Share"
                                }
                            ]
                        }
                    }
                ],
                "queries": {
                    "request": [
                        {
                            "searchTerms": "some query",
                            "count": 1,
                            "startIndex": 1,
                            "inputEncoding": "utf8",
                            "outputEncoding": "utf8",
                            "safe": "off",
                            "filter": "0",
                            "gl": "us",
                            "hl": "en",
                            "sort": "date",
                            "totalResults": "638000000"
                        }
                    ]
                },
                "status": "success"
            }
        }
    ],
    "standardized_name": "google_search_results"
}