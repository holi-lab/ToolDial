{
    "product_id": "6717b37a-8fab-4a0b-a73e-617e100039d5",
    "tool_description": "Add search functionality with autocomplete to your app. ",
    "home_url": "https://rapidapi.com/dimas/api/Algolia/",
    "name": "Algolia",
    "title": "Algolia",
    "pricing": "FREE",
    "tool_name": "Algolia",
    "score": {
        "avgServiceLevel": 0,
        "avgLatency": 127295,
        "avgSuccessRate": 0,
        "popularityScore": 0.1,
        "__typename": "Score"
    },
    "host": "AlgoliadimasV1.p.rapidapi.com",
    "api_list": [
        {
            "name": "addGlobalApiKey",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/addGlobalApiKey",
            "description": "This method add a new global API key.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "acl",
                    "type": "LIST",
                    "description": "List of Strings. Contains the list of rights for this key. Here is the complete list of ACL that can be used for a key: `search`, `browse`, `addObject`, `deleteObject`, `deleteIndex`, `settings`, `editSettings`, `analytics`, `listIndexes`. See README for more info.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "maxQueriesPerIPPerHour",
                    "type": "NUMBER",
                    "description": "Specify the maximum number of API calls allowed from an IP address per hour.",
                    "default": ""
                },
                {
                    "name": "maxHitsPerQuery",
                    "type": "NUMBER",
                    "description": "Specify the maximum number of hits this API key can retrieve in one call. Defaults to 0 (unlimited).",
                    "default": ""
                },
                {
                    "name": "validity",
                    "type": "NUMBER",
                    "description": "Specify a validity for this key in seconds (the key will automatically be removed after this period of time). Defaults to 0 (no validity limit).",
                    "default": ""
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "Used to identify a key.",
                    "default": ""
                },
                {
                    "name": "queryParameters",
                    "type": "STRING",
                    "description": "Force some query parameters to be applied foreach query made with this api key. You can force all query parameters like: \u201ctypoTolerance=strict&ignorePlurals=false&filters=rights:public\u201d. The parameters use the url string format.",
                    "default": ""
                },
                {
                    "name": "indexes",
                    "type": "LIST",
                    "description": "Restrict this new API key to specific index names. This option is useful if you want to isolate your development and production environments: you can have one API key targeting all development indices and another one that target all production indices. You can target all indices starting by a prefix or finishing by a suffix with the \u2018*\u2019 character (for example \u201cdev_*\u201d matches all indices starting by \u201cdev_\u201d and \u201c*_dev\u201d matches all indices finishing by \u201c_dev\u201d). If the list is empty or not set, the API Key will be valid for all indices.",
                    "default": ""
                },
                {
                    "name": "referers",
                    "type": "LIST",
                    "description": "Restrict this new API key to specific referers. You can specify a pattern with one or two *. For example, \u201chttps://algolia.com/*\u201d matches all referers starting with \u201chttps://algolia.com/\u201d and \u201c*algolia.com\u201d matches all referers ending with \u201c.algolia.com\u201d. You can combine both of them to like \u201c*.algolia.com*\u201d to allow the domain algolia.com. Defaults to all referers if empty or blank",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/addGlobalApiKey\"\nquerystring = {\"maxQueriesPerIPPerHour\": \"\", \"appId\": \"\", \"apiKey\": \"\", \"maxHitsPerQuery\": \"\", \"validity\": \"\", \"description\": \"\", \"queryParameters\": \"\", \"acl\": \"\", \"indexes\": \"\", \"referers\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/addGlobalApiKey\"\nquerystring = {\"maxQueriesPerIPPerHour\": \"\", \"appId\": \"\", \"apiKey\": \"\", \"maxHitsPerQuery\": \"\", \"validity\": \"\", \"description\": \"\", \"queryParameters\": \"\", \"acl\": \"\", \"indexes\": \"\", \"referers\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addIndexSpecificApiKey",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/addIndexSpecificApiKey",
            "description": "This method add a new key that can access to this index.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Used to identify a key.",
                    "default": ""
                },
                {
                    "name": "acl",
                    "type": "LIST",
                    "description": "List of Strings. Contains the list of rights for this key. Here is the complete list of ACL that can be used for a key: `search`, `browse`, `addObject`, `deleteObject`, `deleteIndex`, `settings`, `editSettings`, `analytics`, `listIndexes`. See README for more info.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "Used to identify a key.",
                    "default": ""
                },
                {
                    "name": "queryParameters",
                    "type": "STRING",
                    "description": "Force some query parameters to be applied foreach query made with this api key. You can force all query parameters like: \u201ctypoTolerance=strict&ignorePlurals=false&filters=rights:public\u201d. The parameters use the url string format.",
                    "default": ""
                },
                {
                    "name": "validity",
                    "type": "NUMBER",
                    "description": "Specify a validity for this key in seconds (the key will automatically be removed after this period of time). Defaults to 0 (no validity limit).",
                    "default": ""
                },
                {
                    "name": "maxHitsPerQuery",
                    "type": "NUMBER",
                    "description": "Specify the maximum number of hits this API key can retrieve in one call. Defaults to 0 (unlimited). This parameter can be used to protect you from attempts at retrieving your entire content by massively querying the index.",
                    "default": ""
                },
                {
                    "name": "referers",
                    "type": "LIST",
                    "description": "Restrict this new API key to specific referers. You can specify a pattern with one or two *. For example, \u201chttps://algolia.com/*\u201d matches all referers starting with \u201chttps://algolia.com/\u201d and \u201c*algolia.com\u201d matches all referers ending with \u201c.algolia.com\u201d. You can combine both of them to like \u201c*.algolia.com*\u201d to allow the domain algolia.com. Defaults to all referers if empty or blank",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/addIndexSpecificApiKey\"\nquerystring = {\"apiKey\": \"\", \"appId\": \"\", \"description\": \"\", \"indexName\": \"\", \"queryParameters\": \"\", \"validity\": \"\", \"maxHitsPerQuery\": \"\", \"acl\": \"\", \"referers\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/addIndexSpecificApiKey\"\nquerystring = {\"apiKey\": \"\", \"appId\": \"\", \"description\": \"\", \"indexName\": \"\", \"queryParameters\": \"\", \"validity\": \"\", \"maxHitsPerQuery\": \"\", \"acl\": \"\", \"referers\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addSingleObjectToIndex",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/addSingleObjectToIndex",
            "description": "This method adds one object in the index with automatic assignation of `objectId`.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "object",
                    "type": "JSON",
                    "description": "Object body. See README for more info.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name to add object for.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/addSingleObjectToIndex\"\nquerystring = {\"object\": \"\", \"appId\": \"\", \"indexName\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/addSingleObjectToIndex\"\nquerystring = {\"object\": \"\", \"appId\": \"\", \"indexName\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "batchObjectsWrite",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/batchObjectsWrite",
            "description": "Perform multiple write operations in a single API call.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index Name",
                    "default": ""
                },
                {
                    "name": "requests",
                    "type": "JSON",
                    "description": "Batch operations",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/batchObjectsWrite\"\nquerystring = {\"indexName\": \"\", \"requests\": \"\", \"apiKey\": \"\", \"appId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/batchObjectsWrite\"\nquerystring = {\"indexName\": \"\", \"requests\": \"\", \"apiKey\": \"\", \"appId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "batchSynonymsWriteOperations",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/batchSynonymsWriteOperations",
            "description": "Create/update multiple synonym objects at once, potentially replacing the entire list of synonyms if replaceExistingSynonyms is true.You should always use replaceExistingSynonyms to atomically replace all your synonyms on a production index. This is the only way to ensure your index always has a list of synonyms to use during the indexing of the new list.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index Name",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "forwardToReplicas",
                    "type": "SELECT",
                    "description": "(URL parameter) Replicate the new/updated synonyms to all replica indices.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "replaceExistingSynonyms",
                    "type": "SELECT",
                    "description": "(URL parameter) Replace all synonyms of the index with the ones sent with this request.",
                    "default": ""
                },
                {
                    "name": "requests",
                    "type": "LIST",
                    "description": "The body must be a JSON array of synonym objects. The syntax of each object is the same as in Create/update a synonym. See more in readme.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/batchSynonymsWriteOperations\"\nquerystring = {\"indexName\": \"\", \"apiKey\": \"\", \"forwardToReplicas\": \"\", \"appId\": \"\", \"replaceExistingSynonyms\": \"\", \"requests\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/batchSynonymsWriteOperations\"\nquerystring = {\"indexName\": \"\", \"apiKey\": \"\", \"forwardToReplicas\": \"\", \"appId\": \"\", \"replaceExistingSynonyms\": \"\", \"requests\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "batchWriteOperations",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/batchWriteOperations",
            "description": "Perform multiple write operations, potentially targeting multiple indices, in a single API call. This is essentially a multi-index version of Batch write operations. It can be useful to modify multiple indices at the same time (e.g. if you have one index per user).",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "requests",
                    "type": "ARRAY",
                    "description": "List of operations to batch.See more in readme.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/batchWriteOperations\"\nquerystring = {\"appId\": \"\", \"apiKey\": \"\", \"requests\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/batchWriteOperations\"\nquerystring = {\"appId\": \"\", \"apiKey\": \"\", \"requests\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "changeIndexSettings",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/changeIndexSettings",
            "description": "This method updates part of index settings, the list of attributes and their behavior are listed in the get index settings API.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name to retrieve settings for.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "enableRules",
                    "type": "SELECT",
                    "description": "Whether rules should be globally enabled. This is a global switch that affects all rules. When true, rules processing is enabled: rules may match the query. When false, rules processing is disabled: no rule will match the query.",
                    "default": ""
                },
                {
                    "name": "camelCaseAttributes",
                    "type": "STRING",
                    "description": "Comma-separated list of attributes on which to do a decomposition of camel case words.See more in readme.",
                    "default": ""
                },
                {
                    "name": "forwardToSlaves",
                    "type": "SELECT",
                    "description": "If this parameter is true, the change is also applied on slaves of this index.",
                    "default": ""
                },
                {
                    "name": "removeWordsIfNoResults",
                    "type": "SELECT",
                    "description": "Configure the way query words are removed when the query doesn\u2019t retrieve any results. See README for more info.",
                    "default": ""
                },
                {
                    "name": "responseFields",
                    "type": "STRING",
                    "description": "Comma-separated string list. See README for more info.",
                    "default": ""
                },
                {
                    "name": "paginationLimitedTo",
                    "type": "NUMBER",
                    "description": "Set the maximum number of hits accessible via pagination. This can be set at indexing time, to define a default. The index value can also be overidden at query time. By default, this parameter is set to 1000 to guarantee good performance.",
                    "default": ""
                },
                {
                    "name": "maxFacetHits",
                    "type": "NUMBER",
                    "description": "Maximum number of facet hits to return during a search for facet values.See more in readme.",
                    "default": ""
                },
                {
                    "name": "sortFacetValuesBy",
                    "type": "SELECT",
                    "description": "When using facets, Algolia retrieves a list of matching facet values for each faceted attribute. This parameter controls how the facet values are sorted within each faceted attribute. See README for more info.",
                    "default": ""
                },
                {
                    "name": "restrictHighlightAndSnippetArrays",
                    "type": "SELECT",
                    "description": "Restrict arrays in highlight and snippet results to items that matched the query.",
                    "default": ""
                },
                {
                    "name": "numericAttributesToIndex",
                    "type": "JSON",
                    "description": "All numerical attributes are automatically indexed as numerical filters. If you don\u2019t need filtering on some of your numerical attributes, please consider sending them as strings to speed up the indexing. If you only need to filter on a numeric value with the operator = or !=, you can speed up the indexing by specifying the attribute with equalOnly(AttributeName). The other operators will be disabled.",
                    "default": ""
                },
                {
                    "name": "attributeForDistinct",
                    "type": "STRING",
                    "description": "The attribute name used for the Distinct feature. This feature is similar to the SQL \u201cdistinct\u201d keyword: when enabled in query with the distinct=1 parameter, all hits containing a duplicate value for this attribute are removed from results. For example, if the chosen attribute is show_name and several hits have the same value for show_name, then only the best one is kept and others are removed.",
                    "default": ""
                },
                {
                    "name": "slaves",
                    "type": "JSON",
                    "description": "JSON Array of String. The list of indexes on which you want to replicate all write operations. In order to get response times in milliseconds, we pre-compute part of the ranking during indexing. If you want to use different ranking configurations depending of the use-case, you need to create one index per ranking configuration. This option enables you to perform write operations only on this index, and to automatically update slave indexes with the same operations.",
                    "default": ""
                },
                {
                    "name": "altCorrections",
                    "type": "JSON",
                    "description": "Specify alternative corrections that you want to consider. See README for more info.",
                    "default": ""
                },
                {
                    "name": "placeholders",
                    "type": "JSON",
                    "description": "JSON Hash. This is an advanced use case to define a token substitutable by a list of words without having the original token searchable. See README for more info.",
                    "default": ""
                },
                {
                    "name": "separatorsToIndex",
                    "type": "STRING",
                    "description": "Specify the separators (punctuation characters) to index. By default, separators are not indexed. Use `+#` to be able to search Google+ or C#.",
                    "default": ""
                },
                {
                    "name": "unretrievableAttributes",
                    "type": "JSON",
                    "description": "JSON Array Of Strings. List of attributes that cannot be retrieved at query time. This feature allows you to have an attribute that is used for indexing and/or ranking but which cannot be retrieved. This setting will be bypassed if the query is done with the ADMIN API key. Defaults to null.",
                    "default": ""
                },
                {
                    "name": "allowCompressionOfIntegerArray",
                    "type": "SELECT",
                    "description": "Allows compression of big integer arrays. We recommended to store the list of user ID or rights as an integer array and enable this setting. When enabled the integer array are reordered to reach a better compression ratio. Defaults to false.",
                    "default": ""
                },
                {
                    "name": "attributesToSnippet",
                    "type": "JSON",
                    "description": "JSON Array of Strings. Default list of attributes to snippet alongside the number of words to return (syntax is \u2018attributeName:nbWords\u2019). If set to null, no snippet is computed.",
                    "default": ""
                },
                {
                    "name": "minWordSizefor1Typo",
                    "type": "NUMBER",
                    "description": "The minimum number of characters to accept one typo (default = 4).",
                    "default": ""
                },
                {
                    "name": "minWordSizefor2Typos",
                    "type": "NUMBER",
                    "description": "The minimum number of characters to accept two typos (default = 8).",
                    "default": ""
                },
                {
                    "name": "disableExactOnAttributes",
                    "type": "JSON",
                    "description": "JSON Array of String. List of attributes on which you want to disable the computation of \u201cexact\u201d criteria (must be a subset of the attributesToIndex index setting). By default the list is empty.",
                    "default": ""
                },
                {
                    "name": "hitsPerPage",
                    "type": "NUMBER",
                    "description": "The number of hits per page (default = 10).",
                    "default": ""
                },
                {
                    "name": "disablePrefixOnAttributes",
                    "type": "JSON",
                    "description": "JSON Array of Strings.List of attributes on which you want to disable prefix matching",
                    "default": ""
                },
                {
                    "name": "disableTypoToleranceOnAttributes",
                    "type": "JSON",
                    "description": "JSON Array of Strings. List of attributes on which you want to disable typo tolerance (must be a subset of the attributesToIndex index setting). By default the list is empty.",
                    "default": ""
                },
                {
                    "name": "highlightPreTag",
                    "type": "STRING",
                    "description": "Specify the string that is inserted before the highlighted parts in the query result (defaults to `&lt;em&gt;`).",
                    "default": ""
                },
                {
                    "name": "queryType",
                    "type": "SELECT",
                    "description": "Select how the query words are interpreted, it can be one of the following value: `prefixAll`, `prefixLast`, `prefixNone`.",
                    "default": ""
                },
                {
                    "name": "attributesToRetrieve",
                    "type": "JSON",
                    "description": "JSON Array of String. Default list of attributes to retrieve in objects. If set to null, all attributes are retrieved.",
                    "default": ""
                },
                {
                    "name": "attributesToHighlight",
                    "type": "JSON",
                    "description": "JSON Array of String. Default list of attributes to highlight. If set to null, all indexed attributes are highlighted.",
                    "default": ""
                },
                {
                    "name": "highlightPostTag",
                    "type": "STRING",
                    "description": "Specify the string that is inserted after the highlighted parts in the query result (defaults to `&lt;/em&gt;`).",
                    "default": ""
                },
                {
                    "name": "advancedSyntax",
                    "type": "SELECT",
                    "description": "Enable the advanced query syntax. Defaults to 0 (false).",
                    "default": ""
                },
                {
                    "name": "removeStopWords",
                    "type": "STRING",
                    "description": "Remove stop words from query before executing it. It can be a boolean: enable or disable all 41 supported languages or a string array with the list of languages you have in your record (using language iso code).",
                    "default": ""
                },
                {
                    "name": "distinct",
                    "type": "NUMBER",
                    "description": "Enable the distinct feature (disabled by default) if the attributeForDistinct index setting is set. This feature is similar to the SQL \u201cdistinct\u201d keyword: when enabled in a query with the distinct=1 parameter, all hits containing a duplicate value for theattributeForDistinct attribute are removed from results. For example, if the chosen attribute is show_name and several hits have the same value for show_name, then only the best one is kept and others are removed.",
                    "default": ""
                },
                {
                    "name": "maxValuesPerFacet",
                    "type": "NUMBER",
                    "description": "Limit the number of facet values returned for each facet. For example: maxValuesPerFacet=10 will retrieve max 10 values per facet. Defaults to 100.",
                    "default": ""
                },
                {
                    "name": "allowTyposOnNumericTokens",
                    "type": "SELECT",
                    "description": "If set to false, disable typo-tolerance on numeric tokens (=numbers) in the query word. For example the query `304` will match with `30450`, but not with `40450` that would have been the case with typo-tolerance enabled. Can be very useful on serial numbers and zip codes searches. Defaults to false.",
                    "default": ""
                },
                {
                    "name": "typoTolerance",
                    "type": "SELECT",
                    "description": "This setting has four different options: `true`, `false`, `min`, `strict`.",
                    "default": ""
                },
                {
                    "name": "snippetEllipsisText",
                    "type": "STRING",
                    "description": "String used as an ellipsis indicator when a snippet is truncated. Default: `\u2026` (U+2026 HORIZONTAL ELLIPSIS).",
                    "default": ""
                },
                {
                    "name": "ignorePlurals",
                    "type": "SELECT",
                    "description": "If set to true, simple plural forms won\u2019t be considered as typos (for example car/cars will be considered as equal). Defaults to false.",
                    "default": ""
                },
                {
                    "name": "replaceSynonymsInHighlight",
                    "type": "SELECT",
                    "description": "If set to false, words matched via synonyms expansion will not be replaced by the matched synonym in the highlighted result. Defaults to true.",
                    "default": ""
                },
                {
                    "name": "exactOnSingleWordQuery",
                    "type": "SELECT",
                    "description": "This parameter control how the exact ranking criterion is computed when the query contains one word. There is three different values: `none`, `word`, `attribute`.",
                    "default": ""
                },
                {
                    "name": "minProximity",
                    "type": "NUMBER",
                    "description": "Configure the precision of the proximity ranking criterion. See README for more info.",
                    "default": ""
                },
                {
                    "name": "ranking",
                    "type": "LIST",
                    "description": "Link of Strings. Controls the way results are sorted. See README for more info.",
                    "default": ""
                },
                {
                    "name": "customRanking",
                    "type": "LIST",
                    "description": "List of Strings. Lets you specify part of the ranking. The syntax of this condition is an array of strings containing attributes prefixed by asc (ascending order) or desc (descending order) operator. For example: `customRanking`: [`desc(population)`, `asc(name)`]",
                    "default": ""
                },
                {
                    "name": "attributesToIndex",
                    "type": "LIST",
                    "description": "List of Strings. The list of fields you want to index. If set to null, all textual attributes of your objects are indexed, but you should update it to get optimal results. See README for more info.",
                    "default": ""
                },
                {
                    "name": "attributesForFaceting",
                    "type": "LIST",
                    "description": "The list of fields you want to use for faceting. All strings in the attribute selected for faceting are extracted and added as a facet. By default, no attribute is used for faceting.",
                    "default": ""
                },
                {
                    "name": "disableTypoToleranceOnWords",
                    "type": "LIST",
                    "description": "List of String. Specify a list of words on which the automatic typo tolerance will be disabled.",
                    "default": ""
                },
                {
                    "name": "optionalWords",
                    "type": "LIST",
                    "description": "List of Strings. Specify a list of words that should be considered as optional when found in the query",
                    "default": ""
                },
                {
                    "name": "alternativesAsExact",
                    "type": "LIST",
                    "description": "Specify the list of approximation that should be considered as an exact match in the ranking formula. See README for more info.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/changeIndexSettings\"\nquerystring = {\"enableRules\": \"\", \"indexName\": \"\", \"apiKey\": \"\", \"camelCaseAttributes\": \"\", \"forwardToSlaves\": \"\", \"removeWordsIfNoResults\": \"\", \"appId\": \"\", \"responseFields\": \"\", \"paginationLimitedTo\": \"\", \"maxFacetHits\": \"\", \"sortFacetValuesBy\": \"\", \"restrictHighlightAndSnippetArrays\": \"\", \"numericAttributesToIndex\": \"\", \"attributeForDistinct\": \"\", \"slaves\": \"\", \"altCorrections\": \"\", \"placeholders\": \"\", \"separatorsToIndex\": \"\", \"unretrievableAttributes\": \"\", \"allowCompressionOfIntegerArray\": \"\", \"attributesToSnippet\": \"\", \"minWordSizefor1Typo\": \"\", \"minWordSizefor2Typos\": \"\", \"disableExactOnAttributes\": \"\", \"hitsPerPage\": \"\", \"disablePrefixOnAttributes\": \"\", \"disableTypoToleranceOnAttributes\": \"\", \"highlightPreTag\": \"\", \"queryType\": \"\", \"attributesToRetrieve\": \"\", \"attributesToHighlight\": \"\", \"highlightPostTag\": \"\", \"advancedSyntax\": \"\", \"removeStopWords\": \"\", \"distinct\": \"\", \"maxValuesPerFacet\": \"\", \"allowTyposOnNumericTokens\": \"\", \"typoTolerance\": \"\", \"snippetEllipsisText\": \"\", \"ignorePlurals\": \"\", \"replaceSynonymsInHighlight\": \"\", \"exactOnSingleWordQuery\": \"\", \"minProximity\": \"\", \"ranking\": \"\", \"customRanking\": \"\", \"attributesToIndex\": \"\", \"attributesForFaceting\": \"\", \"disableTypoToleranceOnWords\": \"\", \"optionalWords\": \"\", \"alternativesAsExact\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/changeIndexSettings\"\nquerystring = {\"enableRules\": \"\", \"indexName\": \"\", \"apiKey\": \"\", \"camelCaseAttributes\": \"\", \"forwardToSlaves\": \"\", \"removeWordsIfNoResults\": \"\", \"appId\": \"\", \"responseFields\": \"\", \"paginationLimitedTo\": \"\", \"maxFacetHits\": \"\", \"sortFacetValuesBy\": \"\", \"restrictHighlightAndSnippetArrays\": \"\", \"numericAttributesToIndex\": \"\", \"attributeForDistinct\": \"\", \"slaves\": \"\", \"altCorrections\": \"\", \"placeholders\": \"\", \"separatorsToIndex\": \"\", \"unretrievableAttributes\": \"\", \"allowCompressionOfIntegerArray\": \"\", \"attributesToSnippet\": \"\", \"minWordSizefor1Typo\": \"\", \"minWordSizefor2Typos\": \"\", \"disableExactOnAttributes\": \"\", \"hitsPerPage\": \"\", \"disablePrefixOnAttributes\": \"\", \"disableTypoToleranceOnAttributes\": \"\", \"highlightPreTag\": \"\", \"queryType\": \"\", \"attributesToRetrieve\": \"\", \"attributesToHighlight\": \"\", \"highlightPostTag\": \"\", \"advancedSyntax\": \"\", \"removeStopWords\": \"\", \"distinct\": \"\", \"maxValuesPerFacet\": \"\", \"allowTyposOnNumericTokens\": \"\", \"typoTolerance\": \"\", \"snippetEllipsisText\": \"\", \"ignorePlurals\": \"\", \"replaceSynonymsInHighlight\": \"\", \"exactOnSingleWordQuery\": \"\", \"minProximity\": \"\", \"ranking\": \"\", \"customRanking\": \"\", \"attributesToIndex\": \"\", \"attributesForFaceting\": \"\", \"disableTypoToleranceOnWords\": \"\", \"optionalWords\": \"\", \"alternativesAsExact\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "clearSingleIndex",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/clearSingleIndex",
            "description": "This method deletes the index content. Settings and index specific API keys are kept untouched.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name to clear",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/clearSingleIndex\"\nquerystring = {\"indexName\": \"\", \"appId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/clearSingleIndex\"\nquerystring = {\"indexName\": \"\", \"appId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "copySingleIndex",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/copySingleIndex",
            "description": "This method copy an existing index. If the destination index already exists, its specific API keys will be preserved and the source index specific API keys will be added.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "destination",
                    "type": "STRING",
                    "description": "Specify the name of the destination index",
                    "default": ""
                },
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name to move",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/copySingleIndex\"\nquerystring = {\"appId\": \"\", \"apiKey\": \"\", \"destination\": \"\", \"indexName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/copySingleIndex\"\nquerystring = {\"appId\": \"\", \"apiKey\": \"\", \"destination\": \"\", \"indexName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createAlternativeCorrectionSynonymSet",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/createAlternativeCorrectionSynonymSet",
            "description": "Create a new alternative correction synonym set",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "objectId",
                    "type": "STRING",
                    "description": "Object ID.",
                    "default": ""
                },
                {
                    "name": "type",
                    "type": "SELECT",
                    "description": "Valid values: `altcorrection1`, `altcorrection2`. See README for more info.",
                    "default": ""
                },
                {
                    "name": "word",
                    "type": "STRING",
                    "description": "Word to add alternative synonyms collection for",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name.",
                    "default": ""
                },
                {
                    "name": "corrections",
                    "type": "LIST",
                    "description": "Array of corrections strings.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "forwardToSlave",
                    "type": "SELECT",
                    "description": "Push the new/updated synonyms set to all slave indices",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/createAlternativeCorrectionSynonymSet\"\nquerystring = {\"appId\": \"\", \"objectId\": \"\", \"type\": \"\", \"word\": \"\", \"apiKey\": \"\", \"indexName\": \"\", \"forwardToSlave\": \"\", \"corrections\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/createAlternativeCorrectionSynonymSet\"\nquerystring = {\"appId\": \"\", \"objectId\": \"\", \"type\": \"\", \"word\": \"\", \"apiKey\": \"\", \"indexName\": \"\", \"forwardToSlave\": \"\", \"corrections\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createOneWaySynonymSet",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/createOneWaySynonymSet",
            "description": "Create a new one-way synonym set",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "objectId",
                    "type": "STRING",
                    "description": "Object ID.",
                    "default": ""
                },
                {
                    "name": "input",
                    "type": "STRING",
                    "description": "Let\u2019s take an example. When a user searches for \u201ctablet\u201d, you want them to be able to find iPads and Galaxy Note tablets alike, but you might not want Android tablets to show up when they search for \u201ciPad\u201d. To do this, you would create a one-way synonym record between tablet (as input) and ipad, galaxy note (as synonyms). When the user types in \u201ctablet\u201d, records containing \u201ciPad\u201d and \u201cGalaxy Note\u201d will be returned. However records containing only \u201ctablet\u201d or \u201cGalaxy Note\u201d won\u2019t be returned if he searches for \u201ciPad\u201d.",
                    "default": ""
                },
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "synonyms",
                    "type": "LIST",
                    "description": "List of synonym strings",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "forwardToSlave",
                    "type": "SELECT",
                    "description": "Push the new/updated synonyms set to all slave indices",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/createOneWaySynonymSet\"\nquerystring = {\"appId\": \"\", \"objectId\": \"\", \"input\": \"\", \"forwardToSlave\": \"\", \"indexName\": \"\", \"apiKey\": \"\", \"synonyms\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/createOneWaySynonymSet\"\nquerystring = {\"appId\": \"\", \"objectId\": \"\", \"input\": \"\", \"forwardToSlave\": \"\", \"indexName\": \"\", \"apiKey\": \"\", \"synonyms\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createPlaceholderSynonymSet",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/createPlaceholderSynonymSet",
            "description": "Create a new placeholder correction synonym set",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "placeholder",
                    "type": "STRING",
                    "description": "Word to add placeholder collection for",
                    "default": ""
                },
                {
                    "name": "objectId",
                    "type": "STRING",
                    "description": "Object ID.",
                    "default": ""
                },
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name.",
                    "default": ""
                },
                {
                    "name": "replacements",
                    "type": "LIST",
                    "description": "List of replacements strings",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "forwardToSlave",
                    "type": "SELECT",
                    "description": "Push the new/updated synonyms set to all slave indices",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/createPlaceholderSynonymSet\"\nquerystring = {\"apiKey\": \"\", \"appId\": \"\", \"placeholder\": \"\", \"objectId\": \"\", \"forwardToSlave\": \"\", \"indexName\": \"\", \"replacements\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/createPlaceholderSynonymSet\"\nquerystring = {\"apiKey\": \"\", \"appId\": \"\", \"placeholder\": \"\", \"objectId\": \"\", \"forwardToSlave\": \"\", \"indexName\": \"\", \"replacements\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createRegularSynonymSet",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/createRegularSynonymSet",
            "description": "Create a new regular synonym set",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "objectId",
                    "type": "STRING",
                    "description": "Object ID.",
                    "default": ""
                },
                {
                    "name": "synonyms",
                    "type": "LIST",
                    "description": "List of synonym strings",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "forwardToSlave",
                    "type": "SELECT",
                    "description": "Push the new/updated synonyms set to all slave indices",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/createRegularSynonymSet\"\nquerystring = {\"indexName\": \"\", \"appId\": \"\", \"forwardToSlave\": \"\", \"apiKey\": \"\", \"objectId\": \"\", \"synonyms\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/createRegularSynonymSet\"\nquerystring = {\"indexName\": \"\", \"appId\": \"\", \"forwardToSlave\": \"\", \"apiKey\": \"\", \"objectId\": \"\", \"synonyms\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteAllSynonyms",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/deleteAllSynonyms",
            "description": "Delete all synonyms from the index",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name to clear synonyms for",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "forwardToSlaves",
                    "type": "SELECT",
                    "description": "Delete the synonyms set in all slave indices as well",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/deleteAllSynonyms\"\nquerystring = {\"appId\": \"\", \"forwardToSlaves\": \"\", \"apiKey\": \"\", \"indexName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/deleteAllSynonyms\"\nquerystring = {\"appId\": \"\", \"forwardToSlaves\": \"\", \"apiKey\": \"\", \"indexName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteGlobalApiKey",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/deleteGlobalApiKey",
            "description": "This method deletes a global API key that has been created with the add global Key API.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "Key to be deleted",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/deleteGlobalApiKey\"\nquerystring = {\"key\": \"\", \"appId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/deleteGlobalApiKey\"\nquerystring = {\"key\": \"\", \"appId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteIndexSpecificApiKey",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/deleteIndexSpecificApiKey",
            "description": "This method delete an index specific API key that have been created with the add index specific key API.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "Key to delete.",
                    "default": ""
                },
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/deleteIndexSpecificApiKey\"\nquerystring = {\"apiKey\": \"\", \"appId\": \"\", \"key\": \"\", \"indexName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/deleteIndexSpecificApiKey\"\nquerystring = {\"apiKey\": \"\", \"appId\": \"\", \"key\": \"\", \"indexName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteRecordByQuery",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/deleteRecordByQuery",
            "description": "Delete all records matching the query.This endpoint doesn\u2019t support all the options of a query, only its filters (numeric, facet, or tag) and geo queries. It also doesn\u2019t accept empty filters or query.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "params",
                    "type": "STRING",
                    "description": "Delete query.Example:facetFilters=category:test.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index Name",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/deleteRecordByQuery\"\nquerystring = {\"params\": \"\", \"appId\": \"\", \"indexName\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/deleteRecordByQuery\"\nquerystring = {\"params\": \"\", \"appId\": \"\", \"indexName\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteSingleIndex",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/deleteSingleIndex",
            "description": "This method deletes an existing index.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name to delete.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/deleteSingleIndex\"\nquerystring = {\"appId\": \"\", \"indexName\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/deleteSingleIndex\"\nquerystring = {\"appId\": \"\", \"indexName\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteSingleObject",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/deleteSingleObject",
            "description": "This method deletes an existing object from the index",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name to delete.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "objectId",
                    "type": "STRING",
                    "description": "Index name to delete.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/deleteSingleObject\"\nquerystring = {\"indexName\": \"\", \"appId\": \"\", \"apiKey\": \"\", \"objectId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/deleteSingleObject\"\nquerystring = {\"indexName\": \"\", \"appId\": \"\", \"apiKey\": \"\", \"objectId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteSingleSynonymsSet",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/deleteSingleSynonymsSet",
            "description": "Delete a single synonyms set, identified by the given `objectId`",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name to delete single synonyms set for",
                    "default": ""
                },
                {
                    "name": "objectId",
                    "type": "STRING",
                    "description": "Object ID of synonyms set.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "forwardToSlaves",
                    "type": "SELECT",
                    "description": "Delete the synonyms set in all slave indices as well",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/deleteSingleSynonymsSet\"\nquerystring = {\"indexName\": \"\", \"appId\": \"\", \"objectId\": \"\", \"forwardToSlaves\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/deleteSingleSynonymsSet\"\nquerystring = {\"indexName\": \"\", \"appId\": \"\", \"objectId\": \"\", \"forwardToSlaves\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getGlobalApiKeyRights",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/getGlobalApiKeyRights",
            "description": "This method returns the rights of a given global API key that has been created with the add global Key API.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "Key to retrieve.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/getGlobalApiKeyRights\"\nquerystring = {\"key\": \"\", \"apiKey\": \"\", \"appId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/getGlobalApiKeyRights\"\nquerystring = {\"key\": \"\", \"apiKey\": \"\", \"appId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getGlobalApiKeys",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/getGlobalApiKeys",
            "description": "This method Lists global API keys with their rights. These keys have been created with the add global key API.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/getGlobalApiKeys\"\nquerystring = {\"apiKey\": \"\", \"appId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/getGlobalApiKeys\"\nquerystring = {\"apiKey\": \"\", \"appId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getIndexApiKeysForAllIndexes",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/getIndexApiKeysForAllIndexes",
            "description": "This method update a key that can access to this index.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/getIndexApiKeysForAllIndexes\"\nquerystring = {\"appId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/getIndexApiKeysForAllIndexes\"\nquerystring = {\"appId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getIndexContent",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/getIndexContent",
            "description": "This method allows you to retrieve all index content (for backup, SEO or analytics purpose). It can retrieve up to 1,000 records per call and supports full text search and filters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name to retrieve content for.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "Cursor indicating the location to resume browsing from. Must match the value returned by the previous call.",
                    "default": ""
                },
                {
                    "name": "params",
                    "type": "STRING",
                    "description": "Search parameters used to filter the index content. If not specified, all objects are returned. Can only be used on the first call.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/getIndexContent\"\nquerystring = {\"cursor\": \"\", \"indexName\": \"\", \"apiKey\": \"\", \"params\": \"\", \"appId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/getIndexContent\"\nquerystring = {\"cursor\": \"\", \"indexName\": \"\", \"apiKey\": \"\", \"params\": \"\", \"appId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getIndexSettings",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/getIndexSettings",
            "description": "This method retrieve index settings.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name to retrieve settings for.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/getIndexSettings\"\nquerystring = {\"apiKey\": \"\", \"appId\": \"\", \"indexName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/getIndexSettings\"\nquerystring = {\"apiKey\": \"\", \"appId\": \"\", \"indexName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getIndexSpecificApiKeyRights",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/getIndexSpecificApiKeyRights",
            "description": "This method returns the rights of a given index specific API key that has been created with the add index specific key API.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name.",
                    "default": ""
                },
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "Key to retrieve.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/getIndexSpecificApiKeyRights\"\nquerystring = {\"apiKey\": \"\", \"appId\": \"\", \"indexName\": \"\", \"key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/getIndexSpecificApiKeyRights\"\nquerystring = {\"apiKey\": \"\", \"appId\": \"\", \"indexName\": \"\", \"key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getIndexSpecificApiKeys",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/getIndexSpecificApiKeys",
            "description": "This method Lists API keys that have access to this index with their rights. These keys have been created with the add index specific key API.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index Name to list keys for.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/getIndexSpecificApiKeys\"\nquerystring = {\"appId\": \"\", \"apiKey\": \"\", \"indexName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/getIndexSpecificApiKeys\"\nquerystring = {\"appId\": \"\", \"apiKey\": \"\", \"indexName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getIndexes",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/getIndexes",
            "description": "This command lists all your existing indexes.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/getIndexes\"\nquerystring = {\"apiKey\": \"\", \"appId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/getIndexes\"\nquerystring = {\"apiKey\": \"\", \"appId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getLogs",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/getLogs",
            "description": "Return last logs.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index for which log entries should be retrieved. When omitted, log entries are retrieved across all indices.",
                    "default": ""
                },
                {
                    "name": "length",
                    "type": "NUMBER",
                    "description": "Specify the maximum number of entries to retrieve starting at offset. Defaults to 10. Maximum allowed value: 1000.",
                    "default": ""
                },
                {
                    "name": "type",
                    "type": "SELECT",
                    "description": "Specify the type of logs to retrieve. This parameter is useful for debugging, especially when it is difficult to locate errors among many API calls:`all` (default): Retrieve all logs; `query`: Retrieve only the queries; `build`: Retrieve only the build operations; `error`: Retrieve only the errors",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Specify the first entry to retrieve (0-based, 0 is the most recent log entry). Defaults to 0.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/getLogs\"\nquerystring = {\"apiKey\": \"\", \"indexName\": \"\", \"length\": \"\", \"appId\": \"\", \"type\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/getLogs\"\nquerystring = {\"apiKey\": \"\", \"indexName\": \"\", \"length\": \"\", \"appId\": \"\", \"type\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getObjects",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/getObjects",
            "description": "This method allows to retrieve several objects with one API call.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "requests",
                    "type": "ARRAY",
                    "description": "JSON Array of Objects. See README for more info.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/getObjects\"\nquerystring = {\"appId\": \"\", \"apiKey\": \"\", \"requests\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/getObjects\"\nquerystring = {\"appId\": \"\", \"apiKey\": \"\", \"requests\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleObject",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/getSingleObject",
            "description": "This method returns one object from the index.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name to add object for.",
                    "default": ""
                },
                {
                    "name": "objectId",
                    "type": "STRING",
                    "description": "Index name to add object for.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "attributes",
                    "type": "LIST",
                    "description": "List of attributes to retrieve. If not specified, all retrievable attributes are returned.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/getSingleObject\"\nquerystring = {\"indexName\": \"\", \"objectId\": \"\", \"appId\": \"\", \"apiKey\": \"\", \"attributes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/getSingleObject\"\nquerystring = {\"indexName\": \"\", \"objectId\": \"\", \"appId\": \"\", \"apiKey\": \"\", \"attributes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleSynonymsSet",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/getSingleSynonymsSet",
            "description": "Fetch a single synonyms set, identified by the given `objectId`",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name to retrieve single synonyms set for",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "objectId",
                    "type": "STRING",
                    "description": "Object ID of synonyms set.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/getSingleSynonymsSet\"\nquerystring = {\"indexName\": \"\", \"apiKey\": \"\", \"appId\": \"\", \"objectId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/getSingleSynonymsSet\"\nquerystring = {\"indexName\": \"\", \"apiKey\": \"\", \"appId\": \"\", \"objectId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getTaskStatus",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/getTaskStatus",
            "description": "This method gets the status of a given task (published or notPublished). Returns also a pendingTask flag that indicates if the index has remaining task(s) running.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "task",
                    "type": "STRING",
                    "description": "Task to retrieve status for.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/getTaskStatus\"\nquerystring = {\"task\": \"\", \"apiKey\": \"\", \"indexName\": \"\", \"appId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/getTaskStatus\"\nquerystring = {\"task\": \"\", \"apiKey\": \"\", \"indexName\": \"\", \"appId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "moveSingleIndex",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/moveSingleIndex",
            "description": "This method move an existing index. If the destination index already exists, its specific API keys will be preserved and the source index specific API keys will be added.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name to move",
                    "default": ""
                },
                {
                    "name": "destination",
                    "type": "STRING",
                    "description": "Specify the name of the destination index",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/moveSingleIndex\"\nquerystring = {\"appId\": \"\", \"apiKey\": \"\", \"indexName\": \"\", \"destination\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/moveSingleIndex\"\nquerystring = {\"appId\": \"\", \"apiKey\": \"\", \"indexName\": \"\", \"destination\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "partiallyUpdateObject",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/partiallyUpdateObject",
            "description": "This method updates part of an object (if the object does not exist, it will be created. You can avoid an automatic creation of the object by passing createIfNotExists=false as query argument).",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "objectId",
                    "type": "STRING",
                    "description": "Index name to add object for.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "object",
                    "type": "JSON",
                    "description": "Object body. See README for more info.",
                    "default": ""
                },
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name to add object for.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "createIfNotExists",
                    "type": "SELECT",
                    "description": "You can avoid an automatic creation of the object. Defaults is `true`",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/partiallyUpdateObject\"\nquerystring = {\"objectId\": \"\", \"appId\": \"\", \"object\": \"\", \"indexName\": \"\", \"createIfNotExists\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/partiallyUpdateObject\"\nquerystring = {\"objectId\": \"\", \"appId\": \"\", \"object\": \"\", \"indexName\": \"\", \"createIfNotExists\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "querySingleIndex",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/querySingleIndex",
            "description": "Return objects that match the query. See README.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Inex name to retrieve.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "allowTyposOnNumericTokens",
                    "type": "STRING",
                    "description": "If set to false, disable typo-tolerance on numeric tokens (=numbers) in the query word. For example the query `304` will match with `30450`, but not with `40450` that would have been the case with typo-tolerance enabled. Can be very useful on serial numbers and zip codes searches. Defaults to true.",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "The instant-search query string, all words of the query are interpreted as prefixes (for example \u201cJohn Mc\u201d will match \u201cJohn Mccamey\u201d and \u201cJohnathan Mccamey\u201d). If no query parameter is set, retrieves all objects.",
                    "default": ""
                },
                {
                    "name": "queryType",
                    "type": "SELECT",
                    "description": "Selects how the query words are interpreted: `prefixAll`, `prefixLast`, `prefixNone`",
                    "default": ""
                },
                {
                    "name": "typoTolerance",
                    "type": "SELECT",
                    "description": "This setting has four different options: `true` (default), `false`, `min`: keep only results with the lowest number of typo, `strict`: if there is a match without typo, then all results with 2 typos or more will be removed.",
                    "default": ""
                },
                {
                    "name": "minWordSizefor2Typos",
                    "type": "NUMBER",
                    "description": "The minimum number of characters in a query word to accept two typos in this word. Defaults to 8.",
                    "default": ""
                },
                {
                    "name": "restrictSearchableAttributes",
                    "type": "STRING",
                    "description": "List of attributes you want to use for textual search ",
                    "default": ""
                },
                {
                    "name": "advancedSyntax",
                    "type": "SELECT",
                    "description": "Enable the advanced query syntax. Defaults to 0 (false).",
                    "default": ""
                },
                {
                    "name": "ignorePlurals",
                    "type": "SELECT",
                    "description": "If set to true, simple plural forms won\u2019t be considered as typos (for example car/cars will be considered as equal). Defaults to false.",
                    "default": ""
                },
                {
                    "name": "minWordSizefor1Typo",
                    "type": "NUMBER",
                    "description": "The minimum number of characters in a query word to accept one typo in this word. Defaults to 4.",
                    "default": ""
                },
                {
                    "name": "replaceSynonymsInHighlight",
                    "type": "SELECT",
                    "description": "If set to false, words matched via synonyms expansion will not be replaced by the matched synonym in the highlighted result. Defaults to true.",
                    "default": ""
                },
                {
                    "name": "analytics",
                    "type": "SELECT",
                    "description": "If set to false, this query will not be taken into account for the Analytics. Defaults to true.",
                    "default": ""
                },
                {
                    "name": "synonyms",
                    "type": "SELECT",
                    "description": "If set to false, this query will not use synonyms defined in configuration. Defaults to true.",
                    "default": ""
                },
                {
                    "name": "analyticsTags",
                    "type": "STRING",
                    "description": "Comma-separated string list. If set, tag your query with the specified identifiers. Tags can then be used in the Analytics to analyze a subset of searches only.",
                    "default": ""
                },
                {
                    "name": "minProximity",
                    "type": "NUMBER",
                    "description": "Configure the precision of the proximity ranking criterion. See README for more info.",
                    "default": ""
                },
                {
                    "name": "removeWordsIfNoResults",
                    "type": "SELECT",
                    "description": "Configure the way query words are removed when the query doesn\u2019t retrieve any results. See README for more info.",
                    "default": ""
                },
                {
                    "name": "exactOnSingleWordQuery",
                    "type": "SELECT",
                    "description": "This parameter control how the exact ranking criterion is computed when the query contains one word. There is three different values: `none`, `word`, `attribute`.",
                    "default": ""
                },
                {
                    "name": "removeStopWords",
                    "type": "STRING",
                    "description": "Remove stop words from the query before executing it.Boolean or comma-separated string list. See README for more info",
                    "default": ""
                },
                {
                    "name": "disableTypoToleranceOnAttributes",
                    "type": "STRING",
                    "description": "List of attributes on which you want to disable typo tolerance",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Specify the offset of the first hit to return.Instead of page/hitsPerPage, you can use offset/length to specify the number of hits you want to retrieve and from which offset you want to start.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Pagination parameter used to select the page to retrieve. Page is zero-based and defaults to 0. Thus, to retrieve the 10th page you need to set page=9",
                    "default": ""
                },
                {
                    "name": "length",
                    "type": "NUMBER",
                    "description": "Set the number of hits to retrieve (used only with offset).Instead of page/hitsPerPage, you can use offset/length to specify the number of hits you want to retrieve and from which offset you want to start.",
                    "default": ""
                },
                {
                    "name": "hitsPerPage",
                    "type": "NUMBER",
                    "description": "Pagination parameter used to select the number of hits per page. Defaults to 20.",
                    "default": ""
                },
                {
                    "name": "getRankingInfo",
                    "type": "NUMBER",
                    "description": "If set to 1, the result hits will contain ranking information in _rankingInfo attribute.",
                    "default": ""
                },
                {
                    "name": "attributesToSnippet",
                    "type": "STRING",
                    "description": "List of attributes to snippet alongside the number of words to return. See README for more info.",
                    "default": ""
                },
                {
                    "name": "highlightPreTag",
                    "type": "STRING",
                    "description": "Specify the string that is inserted before the highlighted parts in the query result (defaults to `<em>`).",
                    "default": ""
                },
                {
                    "name": "attributesToRetrieve",
                    "type": "STRING",
                    "description": "List of object attributes you want to retrieve (let you minimize the answer size). See README for more info.",
                    "default": ""
                },
                {
                    "name": "facetFilters",
                    "type": "STRING",
                    "description": "Filter the query by a list of facets. Facets are separated by commas and each facet is encoded as attributeName:value. See README for more info.",
                    "default": ""
                },
                {
                    "name": "filters",
                    "type": "STRING",
                    "description": "Filter the query with numeric, facet or/and tag filters. The syntax is a SQL like syntax, you can use the OR and AND keywords. See README for more info.",
                    "default": ""
                },
                {
                    "name": "responseFields",
                    "type": "STRING",
                    "description": "Comma-separated string list. See README for more info.",
                    "default": ""
                },
                {
                    "name": "numericFilters",
                    "type": "STRING",
                    "description": "The list of numeric filters you want to apply separated by a comma. See README for more info.",
                    "default": ""
                },
                {
                    "name": "maxValuesPerFacet",
                    "type": "NUMBER",
                    "description": "Limit the number of facet values returned for each facet. For example: maxValuesPerFacet=10 will retrieve max 10 values per facet. Defaults to 100.",
                    "default": ""
                },
                {
                    "name": "facets",
                    "type": "STRING",
                    "description": "List of object attributes that you want to use for faceting. Attributes are separated with a comma. See README for more info.",
                    "default": ""
                },
                {
                    "name": "aroundPrecision",
                    "type": "NUMBER",
                    "description": "Control the precision of a aroundLatLng query. In meter. For example if you set aroundPrecision=100, two objects that are in the range 0-99m will be considered as identical in the ranking for the .variable geo ranking parameter (same for 100-199, 200-299, \u2026 ranges).",
                    "default": ""
                },
                {
                    "name": "minimumAroundRadius",
                    "type": "NUMBER",
                    "description": "Define the minimum radius used for aroundLatLng or aroundLatLngViaIP when aroundRadius is not set. The radius is computed automatically using the density of the area. You can retrieve the computed radius in the automaticRadius attribute of the answer.",
                    "default": ""
                },
                {
                    "name": "insidePolygon",
                    "type": "STRING",
                    "description": "Search entries inside a given area defined by a set of points (defined by a minimum of 6 floats. See README for more info.",
                    "default": ""
                },
                {
                    "name": "tagFilters",
                    "type": "STRING",
                    "description": "Filter the query by a set of tags. You can AND tags by separating them by commas. See README for more info.",
                    "default": ""
                },
                {
                    "name": "aroundLatLng",
                    "type": "STRING",
                    "description": "Search for entries around a given latitude/longitude (specified as two floats separated by a comma. See README for more info.",
                    "default": ""
                },
                {
                    "name": "highlightPostTag",
                    "type": "STRING",
                    "description": "Specify the string that is inserted after the highlighted parts in the query result (defaults to `</em>`",
                    "default": ""
                },
                {
                    "name": "distinct",
                    "type": "NUMBER",
                    "description": "Enable the distinct feature (disabled by default) if the attributeForDistinct index setting is set. This feature is similar to the SQL \u201cdistinct\u201d keyword: when enabled in a query with the distinct=1 parameter, all hits containing a duplicate value for theattributeForDistinct attribute are removed from results. For example, if the chosen attribute is show_name and several hits have the same value for show_name, then only the best one is kept and others are removed.",
                    "default": ""
                },
                {
                    "name": "insideBoundingBox",
                    "type": "STRING",
                    "description": "Search for entries inside a given area defined by the two extreme points of a rectangle. See README for more info.",
                    "default": ""
                },
                {
                    "name": "aroundRadius",
                    "type": "STRING",
                    "description": "Control the radius associated with a aroundLatLng or aroundLatLngViaIP query.",
                    "default": ""
                },
                {
                    "name": "snippetEllipsisText",
                    "type": "STRING",
                    "description": "String used as an ellipsis indicator when a snippet is truncated (defaults to empty).",
                    "default": ""
                },
                {
                    "name": "attributesToHighlight",
                    "type": "STRING",
                    "description": "List of attributes you want to highlight according to the query. Attributes are separated by a comma. See README for more info.",
                    "default": ""
                },
                {
                    "name": "aroundLatLngViaIP",
                    "type": "SELECT",
                    "description": "Search for entries around a given location automatically computed from the requester\u2019s IP address.",
                    "default": ""
                },
                {
                    "name": "sortFacetValuesBy",
                    "type": "SELECT",
                    "description": "When using facets, Algolia retrieves a list of matching facet values for each faceted attribute. This parameter controls how the facet values are sorted within each faceted attribute. See README for more info.",
                    "default": ""
                },
                {
                    "name": "facetingAfterDistinct",
                    "type": "SELECT",
                    "description": "Force faceting to be applied after de-duplication. See README for more info.",
                    "default": ""
                },
                {
                    "name": "restrictHighlightAndSnippetArrays",
                    "type": "SELECT",
                    "description": "Restrict arrays in highlight and snippet results to items that matched the query.",
                    "default": ""
                },
                {
                    "name": "sumOrFiltersScores",
                    "type": "SELECT",
                    "description": "Determines how to calculate the total score for filtering. See README for more info.",
                    "default": ""
                },
                {
                    "name": "enableRules",
                    "type": "SELECT",
                    "description": "Whether rules should be globally enabled. This is a global switch that affects all rules. When true, rules processing is enabled: rules may match the query. When false, rules processing is disabled: no rule will match the query.",
                    "default": ""
                },
                {
                    "name": "maxFacetHits",
                    "type": "NUMBER",
                    "description": "Maximum number of facet hits to return during a search for facet values.See more in readme.",
                    "default": ""
                },
                {
                    "name": "percentileComputation",
                    "type": "SELECT",
                    "description": "Whether to include the query in processing time percentile computation.See more in readme.",
                    "default": ""
                },
                {
                    "name": "optionalWords",
                    "type": "LIST",
                    "description": "List of Strings. Specify a list of words that should be considered as optional when found in the query",
                    "default": ""
                },
                {
                    "name": "alternativesAsExact",
                    "type": "LIST",
                    "description": "Specify the list of approximation that should be considered as an exact match in the ranking formula. See README for more info.",
                    "default": ""
                },
                {
                    "name": "optionalFilters",
                    "type": "LIST",
                    "description": "Create filters for ranking purposes, to rank higher records that contain the filter(s).Example : author:John Doe.",
                    "default": ""
                },
                {
                    "name": "disableExactOnAttributes",
                    "type": "LIST",
                    "description": "List of attributes on which you want to disable computation of the exact ranking criterion.The list must be a subset of the searchableAttributes index setting.searchableAttributes must not be empty nor null for disableExactOnAttributes to be applied.",
                    "default": ""
                },
                {
                    "name": "ruleContexts",
                    "type": "LIST",
                    "description": "Enables contextual rules. Provides a list of contexts for which rules are enabled. Contextual rules matching any of these contexts are eligible, as well as generic rules. When empty, only generic rules are eligible.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/querySingleIndex\"\nquerystring = {\"apiKey\": \"\", \"allowTyposOnNumericTokens\": \"\", \"appId\": \"\", \"query\": \"\", \"queryType\": \"\", \"typoTolerance\": \"\", \"minWordSizefor2Typos\": \"\", \"indexName\": \"\", \"restrictSearchableAttributes\": \"\", \"advancedSyntax\": \"\", \"ignorePlurals\": \"\", \"minWordSizefor1Typo\": \"\", \"replaceSynonymsInHighlight\": \"\", \"analytics\": \"\", \"synonyms\": \"\", \"analyticsTags\": \"\", \"minProximity\": \"\", \"removeWordsIfNoResults\": \"\", \"exactOnSingleWordQuery\": \"\", \"removeStopWords\": \"\", \"disableTypoToleranceOnAttributes\": \"\", \"offset\": \"\", \"page\": \"\", \"length\": \"\", \"hitsPerPage\": \"\", \"getRankingInfo\": \"\", \"attributesToSnippet\": \"\", \"highlightPreTag\": \"\", \"attributesToRetrieve\": \"\", \"facetFilters\": \"\", \"filters\": \"\", \"responseFields\": \"\", \"numericFilters\": \"\", \"maxValuesPerFacet\": \"\", \"facets\": \"\", \"aroundPrecision\": \"\", \"minimumAroundRadius\": \"\", \"insidePolygon\": \"\", \"tagFilters\": \"\", \"aroundLatLng\": \"\", \"highlightPostTag\": \"\", \"distinct\": \"\", \"insideBoundingBox\": \"\", \"aroundRadius\": \"\", \"snippetEllipsisText\": \"\", \"attributesToHighlight\": \"\", \"aroundLatLngViaIP\": \"\", \"sortFacetValuesBy\": \"\", \"facetingAfterDistinct\": \"\", \"restrictHighlightAndSnippetArrays\": \"\", \"sumOrFiltersScores\": \"\", \"enableRules\": \"\", \"maxFacetHits\": \"\", \"percentileComputation\": \"\", \"optionalWords\": \"\", \"alternativesAsExact\": \"\", \"optionalFilters\": \"\", \"disableExactOnAttributes\": \"\", \"ruleContexts\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/querySingleIndex\"\nquerystring = {\"apiKey\": \"\", \"allowTyposOnNumericTokens\": \"\", \"appId\": \"\", \"query\": \"\", \"queryType\": \"\", \"typoTolerance\": \"\", \"minWordSizefor2Typos\": \"\", \"indexName\": \"\", \"restrictSearchableAttributes\": \"\", \"advancedSyntax\": \"\", \"ignorePlurals\": \"\", \"minWordSizefor1Typo\": \"\", \"replaceSynonymsInHighlight\": \"\", \"analytics\": \"\", \"synonyms\": \"\", \"analyticsTags\": \"\", \"minProximity\": \"\", \"removeWordsIfNoResults\": \"\", \"exactOnSingleWordQuery\": \"\", \"removeStopWords\": \"\", \"disableTypoToleranceOnAttributes\": \"\", \"offset\": \"\", \"page\": \"\", \"length\": \"\", \"hitsPerPage\": \"\", \"getRankingInfo\": \"\", \"attributesToSnippet\": \"\", \"highlightPreTag\": \"\", \"attributesToRetrieve\": \"\", \"facetFilters\": \"\", \"filters\": \"\", \"responseFields\": \"\", \"numericFilters\": \"\", \"maxValuesPerFacet\": \"\", \"facets\": \"\", \"aroundPrecision\": \"\", \"minimumAroundRadius\": \"\", \"insidePolygon\": \"\", \"tagFilters\": \"\", \"aroundLatLng\": \"\", \"highlightPostTag\": \"\", \"distinct\": \"\", \"insideBoundingBox\": \"\", \"aroundRadius\": \"\", \"snippetEllipsisText\": \"\", \"attributesToHighlight\": \"\", \"aroundLatLngViaIP\": \"\", \"sortFacetValuesBy\": \"\", \"facetingAfterDistinct\": \"\", \"restrictHighlightAndSnippetArrays\": \"\", \"sumOrFiltersScores\": \"\", \"enableRules\": \"\", \"maxFacetHits\": \"\", \"percentileComputation\": \"\", \"optionalWords\": \"\", \"alternativesAsExact\": \"\", \"optionalFilters\": \"\", \"disableExactOnAttributes\": \"\", \"ruleContexts\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchFacetValues",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/searchFacetValues",
            "description": "This method searches for values of a given facet, optionally restricting the returned values to those contained in objects matching other search criteria.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index Name",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "params",
                    "type": "STRING",
                    "description": "You must specify at least the facetQuery parameter, which contains the text that will be searched inside the facet\u2019s values. You may also specify any number of other regular search parameters. They will apply to objects in the index. See README for more info.",
                    "default": ""
                },
                {
                    "name": "facetName",
                    "type": "STRING",
                    "description": "Facet Name",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/searchFacetValues\"\nquerystring = {\"appId\": \"\", \"indexName\": \"\", \"apiKey\": \"\", \"params\": \"\", \"facetName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/searchFacetValues\"\nquerystring = {\"appId\": \"\", \"indexName\": \"\", \"apiKey\": \"\", \"params\": \"\", \"facetName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchMultipleIndexes",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/searchMultipleIndexes",
            "description": "This method allows to send multiple search queries, potentially targeting multiple indices, in a single API call.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "requests",
                    "type": "ARRAY",
                    "description": "List of queries. Results will be received in the same order as the queries in the requests attribute.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "strategy",
                    "type": "SELECT",
                    "description": "Allows optimizing execution of the queries by potentially skipping some of them.See more in readme.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/searchMultipleIndexes\"\nquerystring = {\"apiKey\": \"\", \"appId\": \"\", \"strategy\": \"\", \"requests\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/searchMultipleIndexes\"\nquerystring = {\"apiKey\": \"\", \"appId\": \"\", \"strategy\": \"\", \"requests\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchSynonyms",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/searchSynonyms",
            "description": "Search/browse all synonyms, possibly filtered by type",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name to search synonyms for",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "type",
                    "type": "SELECT",
                    "description": "Only search within specific types of synonyms. Multiple types can be specified using a comma-separated list. Possible values: `synonym`, `onewaysynonym`, `altcorrection1`, `altcorrection2`, `placeholder`",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "The query string used to search for specific synonyms. Use an empty string (default) to browse all synonyms.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page to fetch (first page is 0).",
                    "default": ""
                },
                {
                    "name": "hitsPerPage",
                    "type": "NUMBER",
                    "description": "The number of synonyms to fetch per page.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/searchSynonyms\"\nquerystring = {\"indexName\": \"\", \"type\": \"\", \"query\": \"\", \"page\": \"\", \"apiKey\": \"\", \"appId\": \"\", \"hitsPerPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/searchSynonyms\"\nquerystring = {\"indexName\": \"\", \"type\": \"\", \"query\": \"\", \"page\": \"\", \"apiKey\": \"\", \"appId\": \"\", \"hitsPerPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateAlternativeCorrectionSynonymSet",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/updateAlternativeCorrectionSynonymSet",
            "description": "Update a new alternative correction synonym set",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "type",
                    "type": "SELECT",
                    "description": "Valid values: `altcorrection1`, `altcorrection2`, `altcorrection1|altcorrection2`. See README for more info.",
                    "default": ""
                },
                {
                    "name": "word",
                    "type": "STRING",
                    "description": "Word to add alternative synonyms collection for",
                    "default": ""
                },
                {
                    "name": "objectId",
                    "type": "STRING",
                    "description": "Object ID.",
                    "default": ""
                },
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name.",
                    "default": ""
                },
                {
                    "name": "corrections",
                    "type": "LIST",
                    "description": "Array of corrections strings.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "forwardToSlave",
                    "type": "SELECT",
                    "description": "Push the new/updated synonyms set to all slave indices",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/updateAlternativeCorrectionSynonymSet\"\nquerystring = {\"apiKey\": \"\", \"appId\": \"\", \"type\": \"\", \"word\": \"\", \"objectId\": \"\", \"indexName\": \"\", \"forwardToSlave\": \"\", \"corrections\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/updateAlternativeCorrectionSynonymSet\"\nquerystring = {\"apiKey\": \"\", \"appId\": \"\", \"type\": \"\", \"word\": \"\", \"objectId\": \"\", \"indexName\": \"\", \"forwardToSlave\": \"\", \"corrections\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateGlobalApiKey",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/updateGlobalApiKey",
            "description": "This method update a global API key.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "Key to update",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "validity",
                    "type": "NUMBER",
                    "description": "Specify a validity for this key in seconds (the key will automatically be removed after this period of time). Defaults to 0 (no validity limit).",
                    "default": ""
                },
                {
                    "name": "maxQueriesPerIPPerHour",
                    "type": "NUMBER",
                    "description": "Specify the maximum number of API calls allowed from an IP address per hour.",
                    "default": ""
                },
                {
                    "name": "maxHitsPerQuery",
                    "type": "NUMBER",
                    "description": "Specify the maximum number of hits this API key can retrieve in one call. Defaults to 0 (unlimited).",
                    "default": ""
                },
                {
                    "name": "queryParameters",
                    "type": "STRING",
                    "description": "Force some query parameters to be applied foreach query made with this api key. You can force all query parameters like: \u201ctypoTolerance=strict&ignorePlurals=false&filters=rights:public\u201d. The parameters use the url string format.",
                    "default": ""
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "Used to identify a key.",
                    "default": ""
                },
                {
                    "name": "acl",
                    "type": "LIST",
                    "description": "List of Strings. Contains the list of rights for this key. Here is the complete list of ACL that can be used for a key: `search`, `browse`, `addObject`, `deleteObject`, `deleteIndex`, `settings`, `editSettings`, `analytics`, `listIndexes`. See README for more info.",
                    "default": ""
                },
                {
                    "name": "indexes",
                    "type": "LIST",
                    "description": "Restrict this new API key to specific index names. This option is useful if you want to isolate your development and production environments: you can have one API key targeting all development indices and another one that target all production indices. You can target all indices starting by a prefix or finishing by a suffix with the \u2018*\u2019 character (for example \u201cdev_*\u201d matches all indices starting by \u201cdev_\u201d and \u201c*_dev\u201d matches all indices finishing by \u201c_dev\u201d). If the list is empty or not set, the API Key will be valid for all indices.",
                    "default": ""
                },
                {
                    "name": "referers",
                    "type": "LIST",
                    "description": "Restrict this new API key to specific referers. You can specify a pattern with one or two *. For example, \u201chttps://algolia.com/*\u201d matches all referers starting with \u201chttps://algolia.com/\u201d and \u201c*algolia.com\u201d matches all referers ending with \u201c.algolia.com\u201d. You can combine both of them to like \u201c*.algolia.com*\u201d to allow the domain algolia.com. Defaults to all referers if empty or blank",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/updateGlobalApiKey\"\nquerystring = {\"apiKey\": \"\", \"appId\": \"\", \"validity\": \"\", \"maxQueriesPerIPPerHour\": \"\", \"key\": \"\", \"maxHitsPerQuery\": \"\", \"queryParameters\": \"\", \"description\": \"\", \"acl\": \"\", \"indexes\": \"\", \"referers\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/updateGlobalApiKey\"\nquerystring = {\"apiKey\": \"\", \"appId\": \"\", \"validity\": \"\", \"maxQueriesPerIPPerHour\": \"\", \"key\": \"\", \"maxHitsPerQuery\": \"\", \"queryParameters\": \"\", \"description\": \"\", \"acl\": \"\", \"indexes\": \"\", \"referers\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateIndexSpecificApiKey",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/updateIndexSpecificApiKey",
            "description": "This method update a key that can access to this index.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "Key to update",
                    "default": ""
                },
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Used to identify a key.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "Used to identify a key.",
                    "default": ""
                },
                {
                    "name": "maxHitsPerQuery",
                    "type": "NUMBER",
                    "description": "Specify the maximum number of hits this API key can retrieve in one call. Defaults to 0 (unlimited). This parameter can be used to protect you from attempts at retrieving your entire content by massively querying the index.",
                    "default": ""
                },
                {
                    "name": "validity",
                    "type": "NUMBER",
                    "description": "Specify a validity for this key in seconds (the key will automatically be removed after this period of time). Defaults to 0 (no validity limit).",
                    "default": ""
                },
                {
                    "name": "queryParameters",
                    "type": "STRING",
                    "description": "Force some query parameters to be applied foreach query made with this api key. You can force all query parameters like: \u201ctypoTolerance=strict&ignorePlurals=false&filters=rights:public\u201d. The parameters use the url string format.",
                    "default": ""
                },
                {
                    "name": "acl",
                    "type": "LIST",
                    "description": "List of Strings. Contains the list of rights for this key. Here is the complete list of ACL that can be used for a key: `search`, `browse`, `addObject`, `deleteObject`, `deleteIndex`, `settings`, `editSettings`, `analytics`, `listIndexes`. See README for more info.",
                    "default": ""
                },
                {
                    "name": "referers",
                    "type": "LIST",
                    "description": "Restrict this new API key to specific referers. You can specify a pattern with one or two *. For example, \u201chttps://algolia.com/*\u201d matches all referers starting with \u201chttps://algolia.com/\u201d and \u201c*algolia.com\u201d matches all referers ending with \u201c.algolia.com\u201d. You can combine both of them to like \u201c*.algolia.com*\u201d to allow the domain algolia.com. Defaults to all referers if empty or blank",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/updateIndexSpecificApiKey\"\nquerystring = {\"apiKey\": \"\", \"key\": \"\", \"description\": \"\", \"indexName\": \"\", \"appId\": \"\", \"maxHitsPerQuery\": \"\", \"validity\": \"\", \"queryParameters\": \"\", \"acl\": \"\", \"referers\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/updateIndexSpecificApiKey\"\nquerystring = {\"apiKey\": \"\", \"key\": \"\", \"description\": \"\", \"indexName\": \"\", \"appId\": \"\", \"maxHitsPerQuery\": \"\", \"validity\": \"\", \"queryParameters\": \"\", \"acl\": \"\", \"referers\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateOneWaySynonymSet",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/updateOneWaySynonymSet",
            "description": "Update a new one-way synonym set",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "input",
                    "type": "STRING",
                    "description": "Let\u2019s take an example. When a user searches for \u201ctablet\u201d, you want them to be able to find iPads and Galaxy Note tablets alike, but you might not want Android tablets to show up when they search for \u201ciPad\u201d. To do this, you would create a one-way synonym record between tablet (as input) and ipad, galaxy note (as synonyms). When the user types in \u201ctablet\u201d, records containing \u201ciPad\u201d and \u201cGalaxy Note\u201d will be returned. However records containing only \u201ctablet\u201d or \u201cGalaxy Note\u201d won\u2019t be returned if he searches for \u201ciPad\u201d.",
                    "default": ""
                },
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "objectId",
                    "type": "STRING",
                    "description": "Object ID.",
                    "default": ""
                },
                {
                    "name": "synonyms",
                    "type": "LIST",
                    "description": "List of synonym strings",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "forwardToSlave",
                    "type": "SELECT",
                    "description": "Push the new/updated synonyms set to all slave indices",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/updateOneWaySynonymSet\"\nquerystring = {\"appId\": \"\", \"input\": \"\", \"indexName\": \"\", \"apiKey\": \"\", \"objectId\": \"\", \"forwardToSlave\": \"\", \"synonyms\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/updateOneWaySynonymSet\"\nquerystring = {\"appId\": \"\", \"input\": \"\", \"indexName\": \"\", \"apiKey\": \"\", \"objectId\": \"\", \"forwardToSlave\": \"\", \"synonyms\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updatePlaceholderSynonymSet",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/updatePlaceholderSynonymSet",
            "description": "Update a new placeholder correction synonym set",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "objectId",
                    "type": "STRING",
                    "description": "Object ID.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name.",
                    "default": ""
                },
                {
                    "name": "placeholder",
                    "type": "STRING",
                    "description": "Word to add placeholder collection for",
                    "default": ""
                },
                {
                    "name": "replacements",
                    "type": "LIST",
                    "description": "List of replacements strings",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "forwardToSlave",
                    "type": "SELECT",
                    "description": "Push the new/updated synonyms set to all slave indices",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/updatePlaceholderSynonymSet\"\nquerystring = {\"appId\": \"\", \"objectId\": \"\", \"forwardToSlave\": \"\", \"apiKey\": \"\", \"indexName\": \"\", \"placeholder\": \"\", \"replacements\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/updatePlaceholderSynonymSet\"\nquerystring = {\"appId\": \"\", \"objectId\": \"\", \"forwardToSlave\": \"\", \"apiKey\": \"\", \"indexName\": \"\", \"placeholder\": \"\", \"replacements\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateRegularSynonymSet",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/updateRegularSynonymSet",
            "description": "Update a new regular synonym set",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "objectId",
                    "type": "STRING",
                    "description": "Object ID.",
                    "default": ""
                },
                {
                    "name": "synonyms",
                    "type": "LIST",
                    "description": "List of synonym strings",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "forwardToSlave",
                    "type": "SELECT",
                    "description": "Push the new/updated synonyms set to all slave indices",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/updateRegularSynonymSet\"\nquerystring = {\"apiKey\": \"\", \"indexName\": \"\", \"appId\": \"\", \"forwardToSlave\": \"\", \"objectId\": \"\", \"synonyms\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/updateRegularSynonymSet\"\nquerystring = {\"apiKey\": \"\", \"indexName\": \"\", \"appId\": \"\", \"forwardToSlave\": \"\", \"objectId\": \"\", \"synonyms\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateSingleObject",
            "url": "https://AlgoliadimasV1.p.rapidapi.com/updateSingleObject",
            "description": "This method adds or replaces an object (if the object does not exist, it will be created). Be careful, when an object already exists for the specified object ID, the whole object is replaced: existing attributes that are not replaced are deleted.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "objectId",
                    "type": "STRING",
                    "description": "Index name to add object for.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application Key.",
                    "default": ""
                },
                {
                    "name": "appId",
                    "type": "CREDENTIALS",
                    "description": "Algolia Application ID.",
                    "default": ""
                },
                {
                    "name": "indexName",
                    "type": "STRING",
                    "description": "Index name to add object for.",
                    "default": ""
                },
                {
                    "name": "object",
                    "type": "JSON",
                    "description": "Object body. See README for more info.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/updateSingleObject\"\nquerystring = {\"objectId\": \"\", \"apiKey\": \"\", \"appId\": \"\", \"indexName\": \"\", \"object\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AlgoliadimasV1.p.rapidapi.com/updateSingleObject\"\nquerystring = {\"objectId\": \"\", \"apiKey\": \"\", \"appId\": \"\", \"indexName\": \"\", \"object\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AlgoliadimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}