{
    "product_id": "651",
    "tool_description": "That searches the full text of books and magazines that Google has scanned, converted to text using optical character recognition (OCR), and stored in its digital database.",
    "home_url": "https://rapidapi.com/raygorodskij/api/GoogleBooks/",
    "name": "GoogleBooks",
    "title": "GoogleBooks",
    "pricing": "FREE",
    "tool_name": "GoogleBooks",
    "score": {
        "avgServiceLevel": 0,
        "avgLatency": 127273,
        "avgSuccessRate": 0,
        "popularityScore": 0,
        "__typename": "Score"
    },
    "host": "GoogleBooksraygorodskijV1.p.rapidapi.com",
    "api_list": [
        {
            "name": "addVolumeToBookshelf",
            "url": "https://GoogleBooksraygorodskijV1.p.rapidapi.com/addVolumeToBookshelf",
            "description": "Adds a volume to a bookshelf.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "volumeId",
                    "type": "STRING",
                    "description": "ID of volume to add.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access Token. Use getAccessToken to get it.",
                    "default": ""
                },
                {
                    "name": "shelfId",
                    "type": "STRING",
                    "description": "ID of bookshelf to which to add a volume.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "source",
                    "type": "STRING",
                    "description": "String to identify the originator of this request.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/addVolumeToBookshelf\"\nquerystring = {\"volumeId\": \"\", \"source\": \"\", \"accessToken\": \"\", \"shelfId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/addVolumeToBookshelf\"\nquerystring = {\"volumeId\": \"\", \"source\": \"\", \"accessToken\": \"\", \"shelfId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteAllVolumesFromBookshelf",
            "url": "https://GoogleBooksraygorodskijV1.p.rapidapi.com/deleteAllVolumesFromBookshelf",
            "description": "Removes a volume from a bookshelf.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "shelfId",
                    "type": "STRING",
                    "description": "ID of bookshelf to which to add a volume.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access Token. Use getAccessToken to get it.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "source",
                    "type": "STRING",
                    "description": "String to identify the originator of this request.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/deleteAllVolumesFromBookshelf\"\nquerystring = {\"shelfId\": \"\", \"source\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/deleteAllVolumesFromBookshelf\"\nquerystring = {\"shelfId\": \"\", \"source\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAccessToken",
            "url": "https://GoogleBooksraygorodskijV1.p.rapidapi.com/getAccessToken",
            "description": "Get AccessToken.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "redirectUri",
                    "type": "STRING",
                    "description": "The same redirect URL as in received Code step.",
                    "default": ""
                },
                {
                    "name": "clientSecret",
                    "type": "CREDENTIALS",
                    "description": "Client secret.",
                    "default": ""
                },
                {
                    "name": "clientId",
                    "type": "CREDENTIALS",
                    "description": "Client ID.",
                    "default": ""
                },
                {
                    "name": "code",
                    "type": "STRING",
                    "description": "Code you received from Google after the user granted access",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/getAccessToken\"\nquerystring = {\"redirectUri\": \"\", \"clientSecret\": \"\", \"clientId\": \"\", \"code\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/getAccessToken\"\nquerystring = {\"redirectUri\": \"\", \"clientSecret\": \"\", \"clientId\": \"\", \"code\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getBookshelf",
            "url": "https://GoogleBooksraygorodskijV1.p.rapidapi.com/getBookshelf",
            "description": "Retrieves a specific Bookshelf resource for the specified user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "shelfId",
                    "type": "STRING",
                    "description": "ID of bookshelf to retrieve.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access Token. Use getAccessToken to get it.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "ID of user for whom to retrieve bookshelves.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "source",
                    "type": "STRING",
                    "description": "String to identify the originator of this request.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/getBookshelf\"\nquerystring = {\"shelfId\": \"\", \"source\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/getBookshelf\"\nquerystring = {\"shelfId\": \"\", \"source\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getBookshelfList",
            "url": "https://GoogleBooksraygorodskijV1.p.rapidapi.com/getBookshelfList",
            "description": "Retrieves a list of public Bookshelf resource for the specified user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "ID of user for whom to retrieve bookshelves.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access Token. Use getAccessToken to get it.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "source",
                    "type": "STRING",
                    "description": "String to identify the originator of this request.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/getBookshelfList\"\nquerystring = {\"userId\": \"\", \"accessToken\": \"\", \"source\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/getBookshelfList\"\nquerystring = {\"userId\": \"\", \"accessToken\": \"\", \"source\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getBookshelvesVolumes",
            "url": "https://GoogleBooksraygorodskijV1.p.rapidapi.com/getBookshelvesVolumes",
            "description": "Retrieves volumes in a specific bookshelf for the specified user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access Token. Use getAccessToken to get it.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "ID of user for whom to retrieve bookshelves.",
                    "default": ""
                },
                {
                    "name": "shelfId",
                    "type": "STRING",
                    "description": "ID of bookshelf to retrieve.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "showPreorders",
                    "type": "SELECT",
                    "description": "Set to true to show books available for preorder. Defaults to false.",
                    "default": ""
                },
                {
                    "name": "startIndex",
                    "type": "NUMBER",
                    "description": "Index of the first result to return (starts at 0).",
                    "default": ""
                },
                {
                    "name": "maxResults",
                    "type": "NUMBER",
                    "description": "Maximum number of results to return.",
                    "default": ""
                },
                {
                    "name": "source",
                    "type": "STRING",
                    "description": "String to identify the originator of this request.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/getBookshelvesVolumes\"\nquerystring = {\"accessToken\": \"\", \"showPreorders\": \"\", \"userId\": \"\", \"startIndex\": \"\", \"maxResults\": \"\", \"source\": \"\", \"shelfId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/getBookshelvesVolumes\"\nquerystring = {\"accessToken\": \"\", \"showPreorders\": \"\", \"userId\": \"\", \"startIndex\": \"\", \"maxResults\": \"\", \"source\": \"\", \"shelfId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMyBookShelvesVolumesList",
            "url": "https://GoogleBooksraygorodskijV1.p.rapidapi.com/getMyBookShelvesVolumesList",
            "description": "Gets volume information for volumes on a bookshelf.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "shelf",
                    "type": "STRING",
                    "description": "The bookshelf ID or name retrieve volumes for.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access Token.Use getAccessToken to get it.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "startIndex",
                    "type": "NUMBER",
                    "description": "Index of the first result to return (starts at 0).",
                    "default": ""
                },
                {
                    "name": "searchQuery",
                    "type": "STRING",
                    "description": "Full-text search query string.",
                    "default": ""
                },
                {
                    "name": "source",
                    "type": "STRING",
                    "description": "String to identify the originator of this request.",
                    "default": ""
                },
                {
                    "name": "maxResults",
                    "type": "NUMBER",
                    "description": "Maximum number of results to return.",
                    "default": ""
                },
                {
                    "name": "projection",
                    "type": "SELECT",
                    "description": "Restrict information returned to a set of selected fields.`full` - Includes all volume data.`lite` - Includes a subset of fields in volumeInfo and accessInfo.",
                    "default": ""
                },
                {
                    "name": "showPreorders",
                    "type": "SELECT",
                    "description": "Set to true to show books available for preorder. Defaults to false.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/getMyBookShelvesVolumesList\"\nquerystring = {\"startIndex\": \"\", \"shelf\": \"\", \"searchQuery\": \"\", \"source\": \"\", \"maxResults\": \"\", \"projection\": \"\", \"showPreorders\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/getMyBookShelvesVolumesList\"\nquerystring = {\"startIndex\": \"\", \"shelf\": \"\", \"searchQuery\": \"\", \"source\": \"\", \"maxResults\": \"\", \"projection\": \"\", \"showPreorders\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMyBookshelf",
            "url": "https://GoogleBooksraygorodskijV1.p.rapidapi.com/getMyBookshelf",
            "description": "Retrieves metadata for a specific bookshelf belonging to the authenticated user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "shelfId",
                    "type": "STRING",
                    "description": "ID of bookshelf to which to add a volume.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access Token. Use getAccessToken to get it.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "source",
                    "type": "STRING",
                    "description": "String to identify the originator of this request.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/getMyBookshelf\"\nquerystring = {\"shelfId\": \"\", \"accessToken\": \"\", \"source\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/getMyBookshelf\"\nquerystring = {\"shelfId\": \"\", \"accessToken\": \"\", \"source\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMyBookshelfList",
            "url": "https://GoogleBooksraygorodskijV1.p.rapidapi.com/getMyBookshelfList",
            "description": "Retrieves a list of bookshelves belonging to the authenticated user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access Token.Use getAccessToken to get it.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "source",
                    "type": "STRING",
                    "description": "String to identify the originator of this request.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/getMyBookshelfList\"\nquerystring = {\"source\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/getMyBookshelfList\"\nquerystring = {\"source\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVolume",
            "url": "https://GoogleBooksraygorodskijV1.p.rapidapi.com/getVolume",
            "description": "Retrieves a Volume resource based on ID.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access Token. Use getAccessToken to get it.",
                    "default": ""
                },
                {
                    "name": "volumeId",
                    "type": "STRING",
                    "description": "ID of volume to retrieve.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "partner",
                    "type": "STRING",
                    "description": "Brand results for partner ID.",
                    "default": ""
                },
                {
                    "name": "source",
                    "type": "STRING",
                    "description": "String to identify the originator of this request.",
                    "default": ""
                },
                {
                    "name": "projection",
                    "type": "SELECT",
                    "description": "Restrict information returned to a set of selected fields.`full` - Includes all volume data.`lite` - Includes a subset of fields in volumeInfo and accessInfo.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/getVolume\"\nquerystring = {\"partner\": \"\", \"source\": \"\", \"accessToken\": \"\", \"volumeId\": \"\", \"projection\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/getVolume\"\nquerystring = {\"partner\": \"\", \"source\": \"\", \"accessToken\": \"\", \"volumeId\": \"\", \"projection\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVolumeBySearchQuery",
            "url": "https://GoogleBooksraygorodskijV1.p.rapidapi.com/getVolumeBySearchQuery",
            "description": "Performs a book search.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access Token. Use getAccessToken to get it.",
                    "default": ""
                },
                {
                    "name": "searchQuery",
                    "type": "STRING",
                    "description": "Full-text search query string.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "maxResults",
                    "type": "NUMBER",
                    "description": "Maximum number of results to return. Acceptable values are 0 to 40, inclusive.",
                    "default": ""
                },
                {
                    "name": "download",
                    "type": "SELECT",
                    "description": "Restrict to volumes by download availability.`epub` - All volumes with epub.",
                    "default": ""
                },
                {
                    "name": "showPreorders",
                    "type": "SELECT",
                    "description": "Set to true to show books available for preorder. Defaults to false.",
                    "default": ""
                },
                {
                    "name": "partner",
                    "type": "STRING",
                    "description": "Brand results for partner ID.",
                    "default": ""
                },
                {
                    "name": "langRestrict",
                    "type": "STRING",
                    "description": "Restrict results to books with this language code.",
                    "default": ""
                },
                {
                    "name": "startIndex",
                    "type": "NUMBER",
                    "description": "Index of the first result to return (starts at 0).",
                    "default": ""
                },
                {
                    "name": "libraryRestrict",
                    "type": "SELECT",
                    "description": "Restrict search to this user's library.`my-library` - Restrict to the user's library, any shelf.`no-restrict` - Do not restrict based on user's library.",
                    "default": ""
                },
                {
                    "name": "filter",
                    "type": "SELECT",
                    "description": "Filter search results.`ebooks` - All Google eBooks.`free-ebooks` - Google eBook with full volume text viewability. `full` - Public can view entire volume text. `paid-ebooks` - Google eBook with a price.`partial` - Public able to see parts of text.",
                    "default": ""
                },
                {
                    "name": "projection",
                    "type": "SELECT",
                    "description": "Restrict information returned to a set of selected fields.",
                    "default": ""
                },
                {
                    "name": "source",
                    "type": "STRING",
                    "description": "String to identify the originator of this request.",
                    "default": ""
                },
                {
                    "name": "orderBy",
                    "type": "SELECT",
                    "description": "Sort search results.`newest` - Most recently published.`relevance` - Relevance to search terms.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/getVolumeBySearchQuery\"\nquerystring = {\"maxResults\": \"\", \"download\": \"\", \"showPreorders\": \"\", \"accessToken\": \"\", \"partner\": \"\", \"langRestrict\": \"\", \"startIndex\": \"\", \"libraryRestrict\": \"\", \"filter\": \"\", \"projection\": \"\", \"searchQuery\": \"\", \"source\": \"\", \"orderBy\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/getVolumeBySearchQuery\"\nquerystring = {\"maxResults\": \"\", \"download\": \"\", \"showPreorders\": \"\", \"accessToken\": \"\", \"partner\": \"\", \"langRestrict\": \"\", \"startIndex\": \"\", \"libraryRestrict\": \"\", \"filter\": \"\", \"projection\": \"\", \"searchQuery\": \"\", \"source\": \"\", \"orderBy\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "moveVolume",
            "url": "https://GoogleBooksraygorodskijV1.p.rapidapi.com/moveVolume",
            "description": "Moves a volume within a bookshelf.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access Token.Use getAccessToken to get it.",
                    "default": ""
                },
                {
                    "name": "volumeId",
                    "type": "STRING",
                    "description": "ID of volume to move.",
                    "default": ""
                },
                {
                    "name": "volumePosition",
                    "type": "STRING",
                    "description": "Position on shelf to move the item (Only in first position).",
                    "default": ""
                },
                {
                    "name": "shelfId",
                    "type": "STRING",
                    "description": "ID of bookshelf to which to add a volume.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "source",
                    "type": "STRING",
                    "description": "String to identify the originator of this request.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/moveVolume\"\nquerystring = {\"source\": \"\", \"accessToken\": \"\", \"volumeId\": \"\", \"volumePosition\": \"\", \"shelfId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/moveVolume\"\nquerystring = {\"source\": \"\", \"accessToken\": \"\", \"volumeId\": \"\", \"volumePosition\": \"\", \"shelfId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "refreshToken",
            "url": "https://GoogleBooksraygorodskijV1.p.rapidapi.com/refreshToken",
            "description": "Get new accessToken by refreshToken.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientId",
                    "type": "CREDENTIALS",
                    "description": "Client ID.",
                    "default": ""
                },
                {
                    "name": "clientSecret",
                    "type": "CREDENTIALS",
                    "description": "Client secret.",
                    "default": ""
                },
                {
                    "name": "refreshToken",
                    "type": "STRING",
                    "description": "A token that you can use to obtain a new access token. Refresh tokens are valid until the user revokes access. Again, this field is only present in this response if you set the access_type parameter to offline in the initial request to Google's authorization server.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/refreshToken\"\nquerystring = {\"clientId\": \"\", \"clientSecret\": \"\", \"refreshToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/refreshToken\"\nquerystring = {\"clientId\": \"\", \"clientSecret\": \"\", \"refreshToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "removeVolumeFromBookshelves",
            "url": "https://GoogleBooksraygorodskijV1.p.rapidapi.com/removeVolumeFromBookshelves",
            "description": "Removes a volume from a bookshelf.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access Token.Use getAccessToken to get it.",
                    "default": ""
                },
                {
                    "name": "volumeId",
                    "type": "STRING",
                    "description": "ID of volume to move.",
                    "default": ""
                },
                {
                    "name": "shelfId",
                    "type": "STRING",
                    "description": "ID of bookshelf to which to add a volume.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "source",
                    "type": "STRING",
                    "description": "String to identify the originator of this request.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/removeVolumeFromBookshelves\"\nquerystring = {\"accessToken\": \"\", \"volumeId\": \"\", \"shelfId\": \"\", \"source\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/removeVolumeFromBookshelves\"\nquerystring = {\"accessToken\": \"\", \"volumeId\": \"\", \"shelfId\": \"\", \"source\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "revokeAccessToken",
            "url": "https://GoogleBooksraygorodskijV1.p.rapidapi.com/revokeAccessToken",
            "description": "In some cases a user may wish to revoke access given to an application. A user can revoke access by visiting Account Settings. It is also possible for an application to programmatically revoke the access given to it. Programmatic revocation is important in instances where a user unsubscribes or removes an application. In other words, part of the removal process can include an API request to ensure the permissions granted to the application are removed.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "The token can be an access token or a refresh token. If the token is an access token and it has a corresponding refresh token, the refresh token will also be revoked.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/revokeAccessToken\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://GoogleBooksraygorodskijV1.p.rapidapi.com/revokeAccessToken\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"GoogleBooksraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}