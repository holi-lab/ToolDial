{
    "product_id": "699",
    "tool_description": "Flickr - almost certainly the best online photo management and sharing application in the world.",
    "home_url": "https://rapidapi.com/didenkoradion/api/Flickr/",
    "name": "Flickr",
    "title": "Flickr",
    "pricing": "FREE",
    "tool_name": "Flickr",
    "score": null,
    "host": "FlickrdidenkoradionV1.p.rapidapi.com",
    "api_list": [
        {
            "name": "addComment",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/addComment",
            "description": "Add a comment to a photoset.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photosetId",
                    "type": "STRING",
                    "description": "The id of the photoset",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "commentText",
                    "type": "STRING",
                    "description": "Text of the comment",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addComment\"\nquerystring = {\"apiKey\": \"\", \"accessToken\": \"\", \"photosetId\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"commentText\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addComment\"\nquerystring = {\"apiKey\": \"\", \"accessToken\": \"\", \"photosetId\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"commentText\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addCommentToPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/addCommentToPhoto",
            "description": "Add comment to a photo as the currently authenticated user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to add a comment to.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "commentText",
                    "type": "STRING",
                    "description": "Text of the comment.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addCommentToPhoto\"\nquerystring = {\"photoId\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"commentText\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addCommentToPhoto\"\nquerystring = {\"photoId\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"commentText\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addDiscussionTopicToGroup",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/addDiscussionTopicToGroup",
            "description": "Post a new discussion topic to a group.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "Pass in the group id to where the topic belongs. Can be NSID or group alias. Making this parameter optional for legacy reasons, but it is highly recommended to pass this in to get faster performance.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "message",
                    "type": "STRING",
                    "description": "The topic message.",
                    "default": ""
                },
                {
                    "name": "subject",
                    "type": "STRING",
                    "description": "The topic subject.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addDiscussionTopicToGroup\"\nquerystring = {\"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"groupId\": \"\", \"apiKey\": \"\", \"message\": \"\", \"subject\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addDiscussionTopicToGroup\"\nquerystring = {\"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"groupId\": \"\", \"apiKey\": \"\", \"message\": \"\", \"subject\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addNoteToPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/addNoteToPhoto",
            "description": "Add a note to a photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "noteX",
                    "type": "NUMBER",
                    "description": "The left-most pixel co-ordinate of the box around the note.",
                    "default": ""
                },
                {
                    "name": "noteW",
                    "type": "NUMBER",
                    "description": "The width (in pixels) of the box around the note.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "noteY",
                    "type": "NUMBER",
                    "description": "The top-most pixel co-ordinate of the box around the note.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "noteText",
                    "type": "STRING",
                    "description": "Text of the note",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                },
                {
                    "name": "noteH",
                    "type": "NUMBER",
                    "description": "The height (in pixels) of the box around the note.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addNoteToPhoto\"\nquerystring = {\"apiKey\": \"\", \"accessToken\": \"\", \"noteX\": \"\", \"noteW\": \"\", \"apiSecret\": \"\", \"noteY\": \"\", \"accessSecret\": \"\", \"noteText\": \"\", \"photoId\": \"\", \"noteH\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addNoteToPhoto\"\nquerystring = {\"apiKey\": \"\", \"accessToken\": \"\", \"noteX\": \"\", \"noteW\": \"\", \"apiSecret\": \"\", \"noteY\": \"\", \"accessSecret\": \"\", \"noteText\": \"\", \"photoId\": \"\", \"noteH\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addPersonCoordinatesOnPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/addPersonCoordinatesOnPhoto",
            "description": "Edit the bounding box of an existing person on a photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "personY",
                    "type": "NUMBER",
                    "description": "The top-most pixel co-ordinate of the box around the person.",
                    "default": ""
                },
                {
                    "name": "personH",
                    "type": "NUMBER",
                    "description": "The height (in pixels) of the box around the person.",
                    "default": ""
                },
                {
                    "name": "personX",
                    "type": "NUMBER",
                    "description": "The left-most pixel co-ordinate of the box around the person.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                },
                {
                    "name": "personW",
                    "type": "NUMBER",
                    "description": "The width (in pixels) of the box around the person.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addPersonCoordinatesOnPhoto\"\nquerystring = {\"accessToken\": \"\", \"personY\": \"\", \"personH\": \"\", \"personX\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"userId\": \"\", \"photoId\": \"\", \"personW\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addPersonCoordinatesOnPhoto\"\nquerystring = {\"accessToken\": \"\", \"personY\": \"\", \"personH\": \"\", \"personX\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"userId\": \"\", \"photoId\": \"\", \"personW\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addPersonToPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/addPersonToPhoto",
            "description": "Add a person to a photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "personY",
                    "type": "NUMBER",
                    "description": "The top-most pixel co-ordinate of the box around the person.",
                    "default": ""
                },
                {
                    "name": "personH",
                    "type": "NUMBER",
                    "description": "The height (in pixels) of the box around the person.",
                    "default": ""
                },
                {
                    "name": "personW",
                    "type": "NUMBER",
                    "description": "The width (in pixels) of the box around the person.",
                    "default": ""
                },
                {
                    "name": "personX",
                    "type": "NUMBER",
                    "description": "The left-most pixel co-ordinate of the box around the person.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addPersonToPhoto\"\nquerystring = {\"personY\": \"\", \"accessSecret\": \"\", \"userId\": \"\", \"personH\": \"\", \"apiKey\": \"\", \"personW\": \"\", \"photoId\": \"\", \"personX\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addPersonToPhoto\"\nquerystring = {\"personY\": \"\", \"accessSecret\": \"\", \"userId\": \"\", \"personH\": \"\", \"apiKey\": \"\", \"personW\": \"\", \"photoId\": \"\", \"personX\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addPhotoToBlog",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/addPhotoToBlog",
            "description": "Get blog post photo.This method requires authentication with 'write' permission.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "blogId",
                    "type": "STRING",
                    "description": "The id of the blog to post to.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to blog.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "service",
                    "type": "STRING",
                    "description": "A Flickr supported blogging service. Instead of passing a blog id you can pass a service id and we'll post to the first blog of that service we find.",
                    "default": ""
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "The blog post body.",
                    "default": ""
                },
                {
                    "name": "blogPassword",
                    "type": "STRING",
                    "description": "The password for the blog (used when the blog does not have a stored password).",
                    "default": ""
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "The blog post title.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addPhotoToBlog\"\nquerystring = {\"apiSecret\": \"\", \"service\": \"\", \"description\": \"\", \"blogId\": \"\", \"accessSecret\": \"\", \"blogPassword\": \"\", \"title\": \"\", \"apiKey\": \"\", \"photoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addPhotoToBlog\"\nquerystring = {\"apiSecret\": \"\", \"service\": \"\", \"description\": \"\", \"blogId\": \"\", \"accessSecret\": \"\", \"blogPassword\": \"\", \"title\": \"\", \"apiKey\": \"\", \"photoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addPhotoToFavoritesList",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/addPhotoToFavoritesList",
            "description": "Adds a photo to a user's favorites list.This method requires authentication with 'write' permission.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to add to the user's favorites.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addPhotoToFavoritesList\"\nquerystring = {\"accessSecret\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\", \"photoId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addPhotoToFavoritesList\"\nquerystring = {\"accessSecret\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\", \"photoId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addPhotoToGallery",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/addPhotoToGallery",
            "description": "Add a photo to a gallery.This method requires authentication with 'write' permission.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "galleryId",
                    "type": "STRING",
                    "description": "The ID of the gallery to add a photo to. ",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The photo ID to add to the gallery.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fullResponse",
                    "type": "STRING",
                    "description": "If specified, return updated details of the gallery the photo was added to.",
                    "default": ""
                },
                {
                    "name": "comment",
                    "type": "STRING",
                    "description": "A short comment or story to accompany the photo.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addPhotoToGallery\"\nquerystring = {\"apiSecret\": \"\", \"galleryId\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"photoId\": \"\", \"fullResponse\": \"\", \"comment\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addPhotoToGallery\"\nquerystring = {\"apiSecret\": \"\", \"galleryId\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"photoId\": \"\", \"fullResponse\": \"\", \"comment\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addPhotoToGroupPool",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/addPhotoToGroupPool",
            "description": "Add a photo to a group's pool.This method requires authentication with 'write' permission.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to add to the group pool. The photo must belong to the calling user.",
                    "default": ""
                },
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "The NSID of the group who's pool the photo is to be added to.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addPhotoToGroupPool\"\nquerystring = {\"accessSecret\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"photoId\": \"\", \"groupId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addPhotoToGroupPool\"\nquerystring = {\"accessSecret\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"photoId\": \"\", \"groupId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addPhotoToPhotoset",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/addPhotoToPhotoset",
            "description": "Add a photo to the end of an existing photoset.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photosetId",
                    "type": "STRING",
                    "description": "Id of the photoset",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addPhotoToPhotoset\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"photoId\": \"\", \"accessToken\": \"\", \"photosetId\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addPhotoToPhotoset\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"photoId\": \"\", \"accessToken\": \"\", \"photosetId\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addReplyToGroupDiscussionTopic",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/addReplyToGroupDiscussionTopic",
            "description": "Post a new reply to a group discussion topic.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "Pass in the group id to where the topic belongs. Can be NSID or group alias. Making this parameter optional for legacy reasons, but it is highly recommended to pass this in to get faster performance.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "topicId",
                    "type": "STRING",
                    "description": "The ID of the topic to post a comment to.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "message",
                    "type": "STRING",
                    "description": "The message to post to the topic.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addReplyToGroupDiscussionTopic\"\nquerystring = {\"groupId\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\", \"topicId\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"message\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addReplyToGroupDiscussionTopic\"\nquerystring = {\"groupId\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\", \"topicId\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"message\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addTagsToPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/addTagsToPhoto",
            "description": "Add tags to a photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to add tags to.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "tags",
                    "type": "LIST",
                    "description": "The tags to add to the photo.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addTagsToPhoto\"\nquerystring = {\"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"photoId\": \"\", \"apiKey\": \"\", \"tags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addTagsToPhoto\"\nquerystring = {\"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"photoId\": \"\", \"apiKey\": \"\", \"tags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addTestimonial",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/addTestimonial",
            "description": "Get all testimonials (pending and approved) written about the given user",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "ID of the user the testimonial is about",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "testimonialText",
                    "type": "STRING",
                    "description": "The text of the testimonial. HTML/BBCode is not accepted",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addTestimonial\"\nquerystring = {\"apiKey\": \"\", \"accessToken\": \"\", \"testimonialText\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/addTestimonial\"\nquerystring = {\"apiKey\": \"\", \"accessToken\": \"\", \"testimonialText\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "approveSuggestion",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/approveSuggestion",
            "description": "Approve a suggestion for a photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "suggestionId",
                    "type": "STRING",
                    "description": "Id of the suggestion",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/approveSuggestion\"\nquerystring = {\"apiSecret\": \"\", \"accessToken\": \"\", \"suggestionId\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/approveSuggestion\"\nquerystring = {\"apiSecret\": \"\", \"accessToken\": \"\", \"suggestionId\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "approveTestimonial",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/approveTestimonial",
            "description": "Approve a testimonial that has been written about the currently loggedin user",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "testimonialId",
                    "type": "STRING",
                    "description": "ID of the testimonial to approve",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/approveTestimonial\"\nquerystring = {\"accessToken\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"testimonialId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/approveTestimonial\"\nquerystring = {\"accessToken\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"testimonialId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "batchCorrectPhotoLocation",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/batchCorrectPhotoLocation",
            "description": "Correct the places hierarchy for all the photos for a user at a given latitude, longitude and accuracy.Batch corrections are processed in a delayed queue so it may take a few minutes before the changes are reflected in a user's photos.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "coordinates",
                    "type": "MAP",
                    "description": "The latitude of the photos to be update whose valid range is -90 to 90.The longitude of the photos to be updated whose valid range is -180 to 180. ",
                    "default": ""
                },
                {
                    "name": "accuracy",
                    "type": "NUMBER",
                    "description": "Recorded accuracy level of the photos to be updated. World level is 1, Country is ~3, Region ~6, City ~11, Street ~16. Current range is 1-16. Defaults to 16 if not specified.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "woeId",
                    "type": "STRING",
                    "description": "A Where On Earth (WOE) ID. (While optional, you must pass either a valid Places ID or a WOE ID.)",
                    "default": ""
                },
                {
                    "name": "placeId",
                    "type": "STRING",
                    "description": "A Flickr Places ID. (While optional, you must pass either a valid Places ID or a WOE ID.)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/batchCorrectPhotoLocation\"\nquerystring = {\"woeId\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\", \"placeId\": \"\", \"accessToken\": \"\", \"coordinates\": \"\", \"accuracy\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/batchCorrectPhotoLocation\"\nquerystring = {\"woeId\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\", \"placeId\": \"\", \"accessToken\": \"\", \"coordinates\": \"\", \"accuracy\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "browseGroup",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/browseGroup",
            "description": "Browse the group category tree, finding groups and sub-categories.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "catId",
                    "type": "STRING",
                    "description": "The category id to fetch a list of groups and sub-categories for. If not specified, it defaults to zero, the root of the category tree.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/browseGroup\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"catId\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/browseGroup\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"catId\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "checkToken",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/checkToken",
            "description": "Returns the credentials attached to an OAuth authentication token.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "oauthToken",
                    "type": "STRING",
                    "description": "The OAuth authentication token to check.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/checkToken\"\nquerystring = {\"apiKey\": \"\", \"oauthToken\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/checkToken\"\nquerystring = {\"apiKey\": \"\", \"oauthToken\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "checkUploadTickets",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/checkUploadTickets",
            "description": "Checks the status of one or more asynchronous photo upload tickets.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "tickets",
                    "type": "LIST",
                    "description": "List of ticket ids",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/checkUploadTickets\"\nquerystring = {\"apiSecret\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\", \"tickets\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/checkUploadTickets\"\nquerystring = {\"apiSecret\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\", \"tickets\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "correctPhotoGeoLocation",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/correctPhotoGeoLocation",
            "description": "Correct photo geo location.This method requires authentication with 'write' permission.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The ID of the photo whose WOE location is being corrected.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "placeId",
                    "type": "STRING",
                    "description": "A Flickr Places ID. (While optional, you must pass either a valid Places ID or a WOE ID.)",
                    "default": ""
                },
                {
                    "name": "woeId",
                    "type": "STRING",
                    "description": "A Where On Earth (WOE) ID. (While optional, you must pass either a valid Places ID or a WOE ID.)",
                    "default": ""
                },
                {
                    "name": "foursquareId",
                    "type": "STRING",
                    "description": "The venue ID for a Foursquare location. (If not passed in with correction, any existing foursquare venue will be removed).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/correctPhotoGeoLocation\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"placeId\": \"\", \"accessToken\": \"\", \"photoId\": \"\", \"woeId\": \"\", \"foursquareId\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/correctPhotoGeoLocation\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"placeId\": \"\", \"accessToken\": \"\", \"photoId\": \"\", \"woeId\": \"\", \"foursquareId\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createGallery",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/createGallery",
            "description": "Create a new gallery for the calling user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "The name of the gallery.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "primaryPhotoId",
                    "type": "STRING",
                    "description": "The first photo to add to your gallery.",
                    "default": ""
                },
                {
                    "name": "fullResult",
                    "type": "STRING",
                    "description": "Get the result in the same format as galleries.getList.",
                    "default": ""
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "A short description for the gallery.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/createGallery\"\nquerystring = {\"accessToken\": \"\", \"title\": \"\", \"primaryPhotoId\": \"\", \"apiKey\": \"\", \"fullResult\": \"\", \"apiSecret\": \"\", \"description\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/createGallery\"\nquerystring = {\"accessToken\": \"\", \"title\": \"\", \"primaryPhotoId\": \"\", \"apiKey\": \"\", \"fullResult\": \"\", \"apiSecret\": \"\", \"description\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createPhotoset",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/createPhotoset",
            "description": "Create a new photoset for the calling user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "Title of the photoset",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "primaryPhotoId",
                    "type": "STRING",
                    "description": "The id of the photo to represent this set. The photo must belong to the calling user.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "Description of the photoset",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/createPhotoset\"\nquerystring = {\"title\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"primaryPhotoId\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"description\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/createPhotoset\"\nquerystring = {\"title\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"primaryPhotoId\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"description\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createRequestJoinGroup",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/createRequestJoinGroup",
            "description": "Request to join a group that is invitation-only.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "message",
                    "type": "STRING",
                    "description": "Message to the administrators.",
                    "default": ""
                },
                {
                    "name": "acceptRules",
                    "type": "STRING",
                    "description": "If the group has rules, they must be displayed to the user prior to joining. ",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "The NSID of the Group in question.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/createRequestJoinGroup\"\nquerystring = {\"message\": \"\", \"acceptRules\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"groupId\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/createRequestJoinGroup\"\nquerystring = {\"message\": \"\", \"acceptRules\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"groupId\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteComment",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/deleteComment",
            "description": "Delete a comment to a photoset.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "commentId",
                    "type": "STRING",
                    "description": "Id of the comment",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/deleteComment\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"commentId\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/deleteComment\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"commentId\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteCommentFromPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/deleteCommentFromPhoto",
            "description": "Delete a comment as the currently authenticated user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "commentId",
                    "type": "STRING",
                    "description": "The id of the comment to edit.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/deleteCommentFromPhoto\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"commentId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/deleteCommentFromPhoto\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"commentId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteNoteFromPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/deleteNoteFromPhoto",
            "description": "Delete a note from a photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "noteId",
                    "type": "STRING",
                    "description": "Id of the note",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/deleteNoteFromPhoto\"\nquerystring = {\"apiSecret\": \"\", \"accessToken\": \"\", \"noteId\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/deleteNoteFromPhoto\"\nquerystring = {\"apiSecret\": \"\", \"accessToken\": \"\", \"noteId\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deletePersonCoordinatesFromPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/deletePersonCoordinatesFromPhoto",
            "description": "Remove the bounding box from a person in a photo",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/deletePersonCoordinatesFromPhoto\"\nquerystring = {\"photoId\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\", \"userId\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/deletePersonCoordinatesFromPhoto\"\nquerystring = {\"photoId\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\", \"userId\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deletePersonFromPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/deletePersonFromPhoto",
            "description": "Delete a person from a photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/deletePersonFromPhoto\"\nquerystring = {\"photoId\": \"\", \"apiSecret\": \"\", \"userId\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/deletePersonFromPhoto\"\nquerystring = {\"photoId\": \"\", \"apiSecret\": \"\", \"userId\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deletePhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/deletePhoto",
            "description": "Delete a photo from flickr.This method requires authentication with 'delete' permission.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to delete.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/deletePhoto\"\nquerystring = {\"accessSecret\": \"\", \"accessToken\": \"\", \"photoId\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/deletePhoto\"\nquerystring = {\"accessSecret\": \"\", \"accessToken\": \"\", \"photoId\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deletePhotoFromGroupPool",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/deletePhotoFromGroupPool",
            "description": "Remove a photo from a group pool.This method requires authentication with 'write' permission.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The NSID of the group who's pool the photo is to removed from.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "The id of the photo to remove from the group pool. The photo must either be owned by the calling user of the calling user must be an administrator of the group. ",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/deletePhotoFromGroupPool\"\nquerystring = {\"photoId\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"groupId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/deletePhotoFromGroupPool\"\nquerystring = {\"photoId\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"groupId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deletePhotoset",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/deletePhotoset",
            "description": "Delete a photoset.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photosetId",
                    "type": "STRING",
                    "description": "Id of the photoset",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/deletePhotoset\"\nquerystring = {\"accessSecret\": \"\", \"photosetId\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/deletePhotoset\"\nquerystring = {\"accessSecret\": \"\", \"photosetId\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteReplyFromGroupDiscussionTopic",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/deleteReplyFromGroupDiscussionTopic",
            "description": "Delete a reply from a group topic.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "topicId",
                    "type": "STRING",
                    "description": "The ID of the topic the post is in.",
                    "default": ""
                },
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "Pass in the group id to where the topic belongs. Can be NSID or group alias. Making this parameter optional for legacy reasons, but it is highly recommended to pass this in to get faster performance.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "replyId",
                    "type": "STRING",
                    "description": "The ID of the reply to delete.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/deleteReplyFromGroupDiscussionTopic\"\nquerystring = {\"topicId\": \"\", \"groupId\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\", \"replyId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/deleteReplyFromGroupDiscussionTopic\"\nquerystring = {\"topicId\": \"\", \"groupId\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\", \"replyId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteTestimonial",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/deleteTestimonial",
            "description": "Delete a testimonial that has been written about the currently loggedin user",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "testimonialId",
                    "type": "STRING",
                    "description": "ID of the testimonial to delete",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/deleteTestimonial\"\nquerystring = {\"accessToken\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"testimonialId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/deleteTestimonial\"\nquerystring = {\"accessToken\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"testimonialId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "editComment",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/editComment",
            "description": "Add a comment to a photoset.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "commentText",
                    "type": "STRING",
                    "description": "Text of the comment",
                    "default": ""
                },
                {
                    "name": "commentId",
                    "type": "STRING",
                    "description": "Id of the comment",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/editComment\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"commentText\": \"\", \"commentId\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/editComment\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"commentText\": \"\", \"commentId\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "editNoteOnPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/editNoteOnPhoto",
            "description": "Edit a note on a photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "noteW",
                    "type": "NUMBER",
                    "description": "The width (in pixels) of the box around the note.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "noteX",
                    "type": "NUMBER",
                    "description": "The left-most pixel co-ordinate of the box around the note.",
                    "default": ""
                },
                {
                    "name": "noteY",
                    "type": "NUMBER",
                    "description": "The top-most pixel co-ordinate of the box around the note.",
                    "default": ""
                },
                {
                    "name": "noteH",
                    "type": "NUMBER",
                    "description": "The height (in pixels) of the box around the note.",
                    "default": ""
                },
                {
                    "name": "noteId",
                    "type": "STRING",
                    "description": "Id of the note",
                    "default": ""
                },
                {
                    "name": "noteText",
                    "type": "STRING",
                    "description": "Text of the note",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/editNoteOnPhoto\"\nquerystring = {\"noteW\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\", \"noteX\": \"\", \"noteY\": \"\", \"noteH\": \"\", \"noteId\": \"\", \"noteText\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/editNoteOnPhoto\"\nquerystring = {\"noteW\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\", \"noteX\": \"\", \"noteY\": \"\", \"noteH\": \"\", \"noteId\": \"\", \"noteText\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "editPhotosetMeta",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/editPhotosetMeta",
            "description": "Modify the meta-data for a photoset.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "photosetId",
                    "type": "STRING",
                    "description": "Id of the photoset",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "Title of the photoset",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "Description of the photoset",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/editPhotosetMeta\"\nquerystring = {\"photosetId\": \"\", \"accessSecret\": \"\", \"title\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"description\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/editPhotosetMeta\"\nquerystring = {\"photosetId\": \"\", \"accessSecret\": \"\", \"title\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"description\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "editPhotosetPhotos",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/editPhotosetPhotos",
            "description": "Modify the photos of the photoset.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "photosetId",
                    "type": "STRING",
                    "description": "Id of the photoset",
                    "default": ""
                },
                {
                    "name": "primaryPhotoId",
                    "type": "STRING",
                    "description": "The id of the photo to represent this set. The photo must belong to the calling user.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "photoIds",
                    "type": "LIST",
                    "description": "Photo ids to include in the set",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/editPhotosetPhotos\"\nquerystring = {\"accessSecret\": \"\", \"apiSecret\": \"\", \"photosetId\": \"\", \"primaryPhotoId\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"photoIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/editPhotosetPhotos\"\nquerystring = {\"accessSecret\": \"\", \"apiSecret\": \"\", \"photosetId\": \"\", \"primaryPhotoId\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"photoIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "editTestimonial",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/editTestimonial",
            "description": "Change the text of a testimonial. The loggedin user must be the author of the existing testimonial. ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "ID of the user the testimonial is about",
                    "default": ""
                },
                {
                    "name": "testimonialId",
                    "type": "STRING",
                    "description": "ID of the testimonial to edit",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "testimonialText",
                    "type": "STRING",
                    "description": "The text of the testimonial. HTML/BBCode is not accepted",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/editTestimonial\"\nquerystring = {\"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"userId\": \"\", \"testimonialId\": \"\", \"testimonialText\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/editTestimonial\"\nquerystring = {\"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"userId\": \"\", \"testimonialId\": \"\", \"testimonialText\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "editTopicReplay",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/editTopicReplay",
            "description": "Edit a topic reply.This method requires authentication with 'write' permission.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "replyId",
                    "type": "STRING",
                    "description": "The ID of the reply post to edit.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "topicId",
                    "type": "STRING",
                    "description": "The ID of the topic the post is in.",
                    "default": ""
                },
                {
                    "name": "message",
                    "type": "STRING",
                    "description": "The message to edit the post with.",
                    "default": ""
                },
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "Pass in the group id to where the topic belongs. Can be NSID or group alias. Making this parameter optional for legacy reasons, but it is highly recommended to pass this in to get faster performance.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/editTopicReplay\"\nquerystring = {\"apiKey\": \"\", \"replyId\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"topicId\": \"\", \"message\": \"\", \"groupId\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/editTopicReplay\"\nquerystring = {\"apiKey\": \"\", \"replyId\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"topicId\": \"\", \"message\": \"\", \"groupId\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "findByLatLon",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/findByLatLon",
            "description": "Returns the default safety level preference for the user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "coordinates",
                    "type": "MAP",
                    "description": "Defines the coordinates for a radial query centered around (lat, lon).",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "accuracy",
                    "type": "NUMBER",
                    "description": "Recorded accuracy level of the location information. Legal values are 1-16, default is 1 (i.e. any accuracy level).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/findByLatLon\"\nquerystring = {\"apiKey\": \"\", \"apiSecret\": \"\", \"coordinates\": \"\", \"accuracy\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/findByLatLon\"\nquerystring = {\"apiKey\": \"\", \"apiSecret\": \"\", \"coordinates\": \"\", \"accuracy\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "findPlace",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/findPlace",
            "description": "Find place by query",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "The query string to use for place ID lookups",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/findPlace\"\nquerystring = {\"accessSecret\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"query\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/findPlace\"\nquerystring = {\"accessSecret\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"query\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAccessToken",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getAccessToken",
            "description": "Get access token.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "oauthVerifier",
                    "type": "STRING",
                    "description": "oauthVerifier from the getRequestToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "oauthSecret",
                    "type": "STRING",
                    "description": "oauthSecret from the getRequestToken method.",
                    "default": ""
                },
                {
                    "name": "oauthToken",
                    "type": "STRING",
                    "description": "oauthToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getAccessToken\"\nquerystring = {\"oauthVerifier\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"oauthSecret\": \"\", \"oauthToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getAccessToken\"\nquerystring = {\"oauthVerifier\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"oauthSecret\": \"\", \"oauthToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAllPhotoContexts",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getAllPhotoContexts",
            "description": "Returns all visible sets and pools the photo belongs to.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The photo to return information for.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getAllPhotoContexts\"\nquerystring = {\"apiKey\": \"\", \"photoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getAllPhotoContexts\"\nquerystring = {\"apiKey\": \"\", \"photoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getExifTagsForPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getExifTagsForPhoto",
            "description": "Retrieves a list of EXIF/TIFF/GPS tags for a given photo. The calling user must have permission to view the photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to fetch information for.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "secret",
                    "type": "STRING",
                    "description": "The secret for the photo. If the correct secret is passed then permissions checking is skipped. This enables the 'sharing' of individual photos by passing around the id and secret.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getExifTagsForPhoto\"\nquerystring = {\"apiKey\": \"\", \"secret\": \"\", \"photoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getExifTagsForPhoto\"\nquerystring = {\"apiKey\": \"\", \"secret\": \"\", \"photoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAllTestimonialsAboutBy",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getAllTestimonialsAboutBy",
            "description": "Get the testimonial by the currently logged-in user about the given user, regardless of approval status. Note that at most 1 testimonial will be returned",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "ID of the user to get testimonials written about",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getAllTestimonialsAboutBy\"\nquerystring = {\"accessToken\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getAllTestimonialsAboutBy\"\nquerystring = {\"accessToken\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAllTestimonialsAbout",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getAllTestimonialsAbout",
            "description": "Get all testimonials (pending and approved) written about the given user",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Page number. Default is 0",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of testimonials to return per page. Default is 10, maximum is 50",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getAllTestimonialsAbout\"\nquerystring = {\"apiKey\": \"\", \"apiSecret\": \"\", \"page\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getAllTestimonialsAbout\"\nquerystring = {\"apiKey\": \"\", \"apiSecret\": \"\", \"page\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAllTestimonialsBy",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getAllTestimonialsBy",
            "description": "Get all testimonials (pending and approved) written by the given user",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Page number. Default is 0",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of testimonials to return per page. Default is 10, maximum is 50",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getAllTestimonialsBy\"\nquerystring = {\"page\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"perPage\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getAllTestimonialsBy\"\nquerystring = {\"page\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"perPage\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getBlogList",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getBlogList",
            "description": "Get a list of configured blogs for the calling user.This method requires authentication with 'read' permission.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "service",
                    "type": "STRING",
                    "description": "Optionally only return blogs for a given service id. You can get a list of from getBlogServices method.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getBlogList\"\nquerystring = {\"apiSecret\": \"\", \"accessToken\": \"\", \"service\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getBlogList\"\nquerystring = {\"apiSecret\": \"\", \"accessToken\": \"\", \"service\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getBlogServices",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getBlogServices",
            "description": "Return a list of Flickr supported blogging services.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getBlogServices\"\nquerystring = {\"accessToken\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getBlogServices\"\nquerystring = {\"accessToken\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCSVFiles",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getCSVFiles",
            "description": "Returns a list of URLs for text files containing all your stats data (from November 26th 2007 onwards) for the currently auth'd user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getCSVFiles\"\nquerystring = {\"accessToken\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getCSVFiles\"\nquerystring = {\"accessToken\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCamerasBrandModels",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getCamerasBrandModels",
            "description": "Retrieve all the models for a given camera brand.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "brand",
                    "type": "STRING",
                    "description": "The ID of the requested brand (as returned from flickr.cameras.getBrands).",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getCamerasBrandModels\"\nquerystring = {\"apiSecret\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"brand\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getCamerasBrandModels\"\nquerystring = {\"apiSecret\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"brand\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCamerasBrands",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getCamerasBrands",
            "description": "Returns all the brands of cameras that Flickr knows about.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getCamerasBrands\"\nquerystring = {\"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getCamerasBrands\"\nquerystring = {\"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getChildrenWithPhotosPublicByPlaceId",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getChildrenWithPhotosPublicByPlaceId",
            "description": "Return a list of locations with public photos that are parented by Places ID.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "placeId",
                    "type": "STRING",
                    "description": "A Flickr Places ID. ",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getChildrenWithPhotosPublicByPlaceId\"\nquerystring = {\"accessToken\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"placeId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getChildrenWithPhotosPublicByPlaceId\"\nquerystring = {\"accessToken\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"placeId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getChildrenWithPhotosPublicByWoeId",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getChildrenWithPhotosPublicByWoeId",
            "description": "Return a list of locations with public photos that are parented by Woe ID.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "woeId",
                    "type": "STRING",
                    "description": "A Where On Earth (WOE) ID.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getChildrenWithPhotosPublicByWoeId\"\nquerystring = {\"accessSecret\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"woeId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getChildrenWithPhotosPublicByWoeId\"\nquerystring = {\"accessSecret\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"woeId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getClusterPhotos",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getClusterPhotos",
            "description": "Returns the first 24 photos for a given tag cluster",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "clusterId",
                    "type": "STRING",
                    "description": "The top three tags for the cluster, separated by dashes (just like the url).",
                    "default": ""
                },
                {
                    "name": "tag",
                    "type": "STRING",
                    "description": "The tag that this cluster belongs to.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getClusterPhotos\"\nquerystring = {\"accessToken\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"clusterId\": \"\", \"tag\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getClusterPhotos\"\nquerystring = {\"accessToken\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"clusterId\": \"\", \"tag\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getClusters",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getClusters",
            "description": "Gives you a list of tag clusters for the given tag.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "tag",
                    "type": "STRING",
                    "description": "The tag that this cluster belongs to.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getClusters\"\nquerystring = {\"apiKey\": \"\", \"accessToken\": \"\", \"tag\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getClusters\"\nquerystring = {\"apiKey\": \"\", \"accessToken\": \"\", \"tag\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCollectionDomains",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getCollectionDomains",
            "description": "Get a list of referring domains for a collection",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "date",
                    "type": "DATEPICKER",
                    "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "collectionId",
                    "type": "STRING",
                    "description": "The id of the collection to get stats for. If not provided, stats for all collections will be returned.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Page number. Default is 0",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. Default is 10, maximum is 50",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getCollectionDomains\"\nquerystring = {\"apiSecret\": \"\", \"collectionId\": \"\", \"accessSecret\": \"\", \"page\": \"\", \"accessToken\": \"\", \"date\": \"\", \"perPage\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getCollectionDomains\"\nquerystring = {\"apiSecret\": \"\", \"collectionId\": \"\", \"accessSecret\": \"\", \"page\": \"\", \"accessToken\": \"\", \"date\": \"\", \"perPage\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCollectionInfo",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getCollectionInfo",
            "description": "Returns information for a single collection. Currently can only be called by the collection owner, this may change.This method requires authentication with 'read' permission.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "collectionId",
                    "type": "STRING",
                    "description": "The ID of the collection to fetch information for.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getCollectionInfo\"\nquerystring = {\"accessSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"collectionId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getCollectionInfo\"\nquerystring = {\"accessSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"collectionId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCollectionReferrers",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getCollectionReferrers",
            "description": "Get a list of referrers from a given domain to a collection",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "date",
                    "type": "DATEPICKER",
                    "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "he domain to return referrers for. This should be a hostname (eg: \"flickr.com\") with no protocol or pathname.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "collectionId",
                    "type": "STRING",
                    "description": "The id of the collection to get stats for. If not provided, stats for all collections will be returned.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. Default is 10, maximum is 50",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Page number. Default is 0",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getCollectionReferrers\"\nquerystring = {\"collectionId\": \"\", \"apiKey\": \"\", \"date\": \"\", \"perPage\": \"\", \"domain\": \"\", \"accessSecret\": \"\", \"page\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getCollectionReferrers\"\nquerystring = {\"collectionId\": \"\", \"apiKey\": \"\", \"date\": \"\", \"perPage\": \"\", \"domain\": \"\", \"accessSecret\": \"\", \"page\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCollectionStats",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getCollectionStats",
            "description": "Get the number of views on a collection for a given date.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "collectionId",
                    "type": "STRING",
                    "description": "The id of the collection to get stats for. If not provided, stats for all collections will be returned.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "date",
                    "type": "DATEPICKER",
                    "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getCollectionStats\"\nquerystring = {\"apiKey\": \"\", \"collectionId\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\", \"date\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getCollectionStats\"\nquerystring = {\"apiKey\": \"\", \"collectionId\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\", \"date\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCollectionsTree",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getCollectionsTree",
            "description": "Returns a tree (or sub tree) of collections belonging to a given user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "The ID of the account to fetch the collection tree for. Deafults to the calling user.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "collectionId",
                    "type": "STRING",
                    "description": "The ID of the collection to fetch a tree for, or zero to fetch the root collection. Defaults to zero.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getCollectionsTree\"\nquerystring = {\"apiKey\": \"\", \"userId\": \"\", \"collectionId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getCollectionsTree\"\nquerystring = {\"apiKey\": \"\", \"userId\": \"\", \"collectionId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCommonsInstitutions",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getCommonsInstitutions",
            "description": "Retrieves a list of the current Commons institutions.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getCommonsInstitutions\"\nquerystring = {\"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getCommonsInstitutions\"\nquerystring = {\"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getContactPublicList",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getContactPublicList",
            "description": "Get the contact list for a user.This method does not require authentication.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "The NSID of the user to fetch the contact list for.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getContactPublicList\"\nquerystring = {\"userId\": \"\", \"apiKey\": \"\", \"page\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getContactPublicList\"\nquerystring = {\"userId\": \"\", \"apiKey\": \"\", \"page\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getContactsList",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getContactsList",
            "description": "Get a list of contacts for the calling user.This method requires authentication with 'read' permission.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 1000.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "The order in which to sort the returned contacts. Defaults to name.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "filter",
                    "type": "SELECT",
                    "description": "An optional filter of the results.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getContactsList\"\nquerystring = {\"perPage\": \"\", \"sort\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"page\": \"\", \"filter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getContactsList\"\nquerystring = {\"perPage\": \"\", \"sort\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"page\": \"\", \"filter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getContactsListRecentlyUploaded",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getContactsListRecentlyUploaded",
            "description": "Return a list of contacts for a user who have recently uploaded photos along with the total count of photos uploaded.This method is still considered experimental. We don't plan for it to change or to go away but so long as this notice is present you should write your code accordingly.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "filter",
                    "type": "SELECT",
                    "description": "Limit the result set to all contacts or only those who are friends or family.ff - family and friends,all - all contacts.",
                    "default": ""
                },
                {
                    "name": "dateLastupload",
                    "type": "DATEPICKER",
                    "description": "Limits the resultset to contacts that have uploaded photos since this date.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getContactsListRecentlyUploaded\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"filter\": \"\", \"apiSecret\": \"\", \"dateLastupload\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getContactsListRecentlyUploaded\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"filter\": \"\", \"apiSecret\": \"\", \"dateLastupload\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getContactsTaggingSuggestions",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getContactsTaggingSuggestions",
            "description": "Get suggestions for tagging people in photos based on the calling user's contacts.This method requires authentication with 'read' permission.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getContactsTaggingSuggestions\"\nquerystring = {\"apiKey\": \"\", \"accessToken\": \"\", \"page\": \"\", \"perPage\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getContactsTaggingSuggestions\"\nquerystring = {\"apiKey\": \"\", \"accessToken\": \"\", \"page\": \"\", \"perPage\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getContentType",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getContentType",
            "description": "Returns the default content type preference for the user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getContentType\"\nquerystring = {\"accessToken\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getContentType\"\nquerystring = {\"accessToken\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getContextForFavorites",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getContextForFavorites",
            "description": "Returns next and previous favorites for a photo in a user's favorites.This method does not require authentication.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "The user who counts the photo as a favorite.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to fetch the context for.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getContextForFavorites\"\nquerystring = {\"userId\": \"\", \"photoId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getContextForFavorites\"\nquerystring = {\"userId\": \"\", \"photoId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPhotoReferrers",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoReferrers",
            "description": "Get a list of referrers from a given domain to a photo",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "he domain to return referrers for. This should be a hostname (eg: \"flickr.com\") with no protocol or pathname.",
                    "default": ""
                },
                {
                    "name": "date",
                    "type": "DATEPICKER",
                    "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to get stats for. If not provided, stats for all photos will be returned.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. Default is 10, maximum is 50",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Page number. Default is 0",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoReferrers\"\nquerystring = {\"photoId\": \"\", \"accessSecret\": \"\", \"perPage\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"page\": \"\", \"apiSecret\": \"\", \"domain\": \"\", \"date\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoReferrers\"\nquerystring = {\"photoId\": \"\", \"accessSecret\": \"\", \"perPage\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"page\": \"\", \"apiSecret\": \"\", \"domain\": \"\", \"date\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getFavoritePhotosList",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getFavoritePhotosList",
            "description": "Returns a list of the user's favorite photos. Only photos which the calling user has permission to see are returned.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "The NSID of the user to fetch the favorites list for. If this argument is omitted, the favorites list for the calling user is returned.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "maxFaveDate",
                    "type": "DATEPICKER",
                    "description": "Maximum date that a photo was favorited on.",
                    "default": ""
                },
                {
                    "name": "minFaveDate",
                    "type": "DATEPICKER",
                    "description": "Minimum date that a photo was favorited on.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "extras",
                    "type": "LIST",
                    "description": "List of extra information to fetch for each returned record.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getFavoritePhotosList\"\nquerystring = {\"userId\": \"\", \"maxFaveDate\": \"\", \"apiKey\": \"\", \"minFaveDate\": \"\", \"perPage\": \"\", \"page\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getFavoritePhotosList\"\nquerystring = {\"userId\": \"\", \"maxFaveDate\": \"\", \"apiKey\": \"\", \"minFaveDate\": \"\", \"perPage\": \"\", \"page\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getFavoritePublicPhotosList",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getFavoritePublicPhotosList",
            "description": "Returns a list of favorite public photos for the given user.This method does not require authentication.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "The NSID of the user to fetch the favorites list for. If this argument is omitted, the favorites list for the calling user is returned.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "maxFaveDate",
                    "type": "DATEPICKER",
                    "description": "Maximum date that a photo was favorited on.",
                    "default": ""
                },
                {
                    "name": "minFaveDate",
                    "type": "DATEPICKER",
                    "description": "Minimum date that a photo was favorited on.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "extras",
                    "type": "LIST",
                    "description": "List of extra information to fetch for each returned record.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getFavoritePublicPhotosList\"\nquerystring = {\"apiKey\": \"\", \"userId\": \"\", \"maxFaveDate\": \"\", \"minFaveDate\": \"\", \"perPage\": \"\", \"page\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getFavoritePublicPhotosList\"\nquerystring = {\"apiKey\": \"\", \"userId\": \"\", \"maxFaveDate\": \"\", \"minFaveDate\": \"\", \"perPage\": \"\", \"page\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getGalleryInfo",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getGalleryInfo",
            "description": "Get Gallery info.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "galleryId",
                    "type": "STRING",
                    "description": "The gallery ID you are requesting information for.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getGalleryInfo\"\nquerystring = {\"galleryId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getGalleryInfo\"\nquerystring = {\"galleryId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getGalleryListForPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getGalleryListForPhoto",
            "description": "Return the list of galleries to which a photo has been added. Galleries are returned sorted by date which the photo was added to the gallery.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The ID of the photo to fetch a list of galleries for.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getGalleryListForPhoto\"\nquerystring = {\"photoId\": \"\", \"page\": \"\", \"apiKey\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getGalleryListForPhoto\"\nquerystring = {\"photoId\": \"\", \"page\": \"\", \"apiKey\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getGeoDataForPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getGeoDataForPhoto",
            "description": "Get the geo data (latitude and longitude and the accuracy level) for a photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo you want to retrieve location data for.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getGeoDataForPhoto\"\nquerystring = {\"photoId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getGeoDataForPhoto\"\nquerystring = {\"photoId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getGeoPerms",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getGeoPerms",
            "description": "Returns the default privacy level for geographic information attached to the user's photos",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getGeoPerms\"\nquerystring = {\"apiSecret\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getGeoPerms\"\nquerystring = {\"apiSecret\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getGeoTaggedPhotos",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getGeoTaggedPhotos",
            "description": "Returns a list of your geo-tagged photos.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "maxUploadDate",
                    "type": "DATEPICKER",
                    "description": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. ",
                    "default": ""
                },
                {
                    "name": "media",
                    "type": "SELECT",
                    "description": "Filter results by media type.All (default).",
                    "default": ""
                },
                {
                    "name": "minTakenDate",
                    "type": "DATEPICKER",
                    "description": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. ",
                    "default": ""
                },
                {
                    "name": "minUploadDate",
                    "type": "DATEPICKER",
                    "description": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. ",
                    "default": ""
                },
                {
                    "name": "maxTakenDate",
                    "type": "DATEPICKER",
                    "description": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. ",
                    "default": ""
                },
                {
                    "name": "privacyFilter",
                    "type": "SELECT",
                    "description": "Return photos only matching a certain privacy level.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "extras",
                    "type": "LIST",
                    "description": "List of extra information to fetch for each returned record.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getGeoTaggedPhotos\"\nquerystring = {\"maxUploadDate\": \"\", \"media\": \"\", \"accessSecret\": \"\", \"minTakenDate\": \"\", \"minUploadDate\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"maxTakenDate\": \"\", \"privacyFilter\": \"\", \"apiKey\": \"\", \"perPage\": \"\", \"page\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getGeoTaggedPhotos\"\nquerystring = {\"maxUploadDate\": \"\", \"media\": \"\", \"accessSecret\": \"\", \"minTakenDate\": \"\", \"minUploadDate\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"maxTakenDate\": \"\", \"privacyFilter\": \"\", \"apiKey\": \"\", \"perPage\": \"\", \"page\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getGroup",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getGroup",
            "description": "Returns the url to a group's page.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "The NSID of the group to fetch the url for.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getGroup\"\nquerystring = {\"groupId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getGroup\"\nquerystring = {\"groupId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getGroupDiscussionTopicInfo",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getGroupDiscussionTopicInfo",
            "description": "Get information about a group discussion topic.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "Pass in the group id to where the topic belongs. Can be NSID or group alias. Making this parameter optional for legacy reasons, but it is highly recommended to pass this in to get faster performance.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "topicId",
                    "type": "STRING",
                    "description": "The ID of the topic to fetch replies for.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getGroupDiscussionTopicInfo\"\nquerystring = {\"groupId\": \"\", \"apiKey\": \"\", \"topicId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getGroupDiscussionTopicInfo\"\nquerystring = {\"groupId\": \"\", \"apiKey\": \"\", \"topicId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getGroupInfo",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getGroupInfo",
            "description": "Get information about a group.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "The NSID of the group to fetch information for.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "lang",
                    "type": "SELECT",
                    "description": "The language of the group name and description to fetch. If the language is not found, the primary language of the group will be returned.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getGroupInfo\"\nquerystring = {\"lang\": \"\", \"apiKey\": \"\", \"groupId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getGroupInfo\"\nquerystring = {\"lang\": \"\", \"apiKey\": \"\", \"groupId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getGroupInfoByAlias",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getGroupInfoByAlias",
            "description": "Get information about a group by path alias of the group.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "groupPathAlias",
                    "type": "STRING",
                    "description": "The path alias of the group. One of this or the group_id param is required",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "lang",
                    "type": "SELECT",
                    "description": "The language of the group name and description to fetch. If the language is not found, the primary language of the group will be returned.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getGroupInfoByAlias\"\nquerystring = {\"apiKey\": \"\", \"lang\": \"\", \"groupPathAlias\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getGroupInfoByAlias\"\nquerystring = {\"apiKey\": \"\", \"lang\": \"\", \"groupPathAlias\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getGroupTopicReplyInfo",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getGroupTopicReplyInfo",
            "description": "Get information on a group topic reply.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "topicId",
                    "type": "STRING",
                    "description": "The ID of the topic the post is in.",
                    "default": ""
                },
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "Pass in the group id to where the topic belongs. Can be NSID or group alias. Making this parameter optional for legacy reasons, but it is highly recommended to pass this in to get faster performance.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "replyId",
                    "type": "STRING",
                    "description": "The ID of the reply to delete.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getGroupTopicReplyInfo\"\nquerystring = {\"topicId\": \"\", \"groupId\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"replyId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getGroupTopicReplyInfo\"\nquerystring = {\"topicId\": \"\", \"groupId\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"replyId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getGroupsPoolsContext",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getGroupsPoolsContext",
            "description": "Returns next and previous photos for a photo in a group pool.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to fetch the context for.",
                    "default": ""
                },
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "The nsid of the group who's pool to fetch the photo's context for.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getGroupsPoolsContext\"\nquerystring = {\"apiKey\": \"\", \"photoId\": \"\", \"groupId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getGroupsPoolsContext\"\nquerystring = {\"apiKey\": \"\", \"photoId\": \"\", \"groupId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getGroupsPoolsList",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getGroupsPoolsList",
            "description": "Returns a list of groups to which you can add photos.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getGroupsPoolsList\"\nquerystring = {\"perPage\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"page\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getGroupsPoolsList\"\nquerystring = {\"perPage\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"page\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getGroupsPoolsPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getGroupsPoolsPhoto",
            "description": "Returns a list of pool photos for a given group, based on the permissions of the group and the user logged in (if any).",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "The id of the group who's pool you which to get the photo list for.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "user_id",
                    "type": "STRING",
                    "description": "The nsid of a user. Specifiying this parameter will retrieve for you only those photos that the user has contributed to the group pool.",
                    "default": ""
                },
                {
                    "name": "tags",
                    "type": "STRING",
                    "description": "A tag to filter the pool with. At the moment only one tag at a time is supported.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "default": ""
                },
                {
                    "name": "extras",
                    "type": "LIST",
                    "description": "List of extra information to fetch for each returned record.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getGroupsPoolsPhoto\"\nquerystring = {\"user_id\": \"\", \"apiKey\": \"\", \"tags\": \"\", \"groupId\": \"\", \"page\": \"\", \"perPage\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getGroupsPoolsPhoto\"\nquerystring = {\"user_id\": \"\", \"apiKey\": \"\", \"tags\": \"\", \"groupId\": \"\", \"page\": \"\", \"perPage\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getHidden",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getHidden",
            "description": "Returns the default hidden preference for the user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getHidden\"\nquerystring = {\"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getHidden\"\nquerystring = {\"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getHotList",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getHotList",
            "description": "Returns a list of hot tags for the given period.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "period",
                    "type": "SELECT",
                    "description": "The period for which to fetch hot tags. Valid values are day and week (defaults to day).",
                    "default": ""
                },
                {
                    "name": "count",
                    "type": "NUMBER",
                    "description": "The number of tags to return. Defaults to 20. Maximum allowed value is 200.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getHotList\"\nquerystring = {\"apiKey\": \"\", \"accessToken\": \"\", \"period\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"count\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getHotList\"\nquerystring = {\"apiKey\": \"\", \"accessToken\": \"\", \"period\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"count\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getInfoByPlaceId",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getInfoByPlaceId",
            "description": "Get informations about a place.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "placeId",
                    "type": "STRING",
                    "description": "A Flickr Places ID. ",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getInfoByPlaceId\"\nquerystring = {\"apiKey\": \"\", \"placeId\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getInfoByPlaceId\"\nquerystring = {\"apiKey\": \"\", \"placeId\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getInfoByUrl",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getInfoByUrl",
            "description": "Lookup information about a place, by its flickr.com/places URL.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "A flickr.com/places URL in the form of /country/region/city. For example: /Canada/Quebec/Montreal",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getInfoByUrl\"\nquerystring = {\"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getInfoByUrl\"\nquerystring = {\"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getInfoByWoeId",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getInfoByWoeId",
            "description": "Get place info by Woe ID.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "woeId",
                    "type": "STRING",
                    "description": "A Where On Earth (WOE) ID.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getInfoByWoeId\"\nquerystring = {\"apiSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"woeId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getInfoByWoeId\"\nquerystring = {\"apiSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"woeId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getInterestingPhotosByDate",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getInterestingPhotosByDate",
            "description": "Returns the list of interesting photos for the most recent day or a user-specified date.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "date",
                    "type": "DATEPICKER",
                    "description": "A specific date, formatted as YYYY-MM-DD, to return interesting photos for.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "extras",
                    "type": "LIST",
                    "description": "List of extra information to fetch for each returned record.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getInterestingPhotosByDate\"\nquerystring = {\"apiKey\": \"\", \"date\": \"\", \"perPage\": \"\", \"page\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getInterestingPhotosByDate\"\nquerystring = {\"apiKey\": \"\", \"date\": \"\", \"perPage\": \"\", \"page\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getListDiscussionTopicsInGroup",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getListDiscussionTopicsInGroup",
            "description": "Get a list of discussion topics in a group.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "Pass in the group id to where the topic belongs. Can be NSID or group alias. Making this parameter optional for legacy reasons, but it is highly recommended to pass this in to get faster performance.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getListDiscussionTopicsInGroup\"\nquerystring = {\"apiKey\": \"\", \"perPage\": \"\", \"groupId\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getListDiscussionTopicsInGroup\"\nquerystring = {\"apiKey\": \"\", \"perPage\": \"\", \"groupId\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getListOfPhotosForGallery",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getListOfPhotosForGallery",
            "description": "Return the list of photos for a gallery.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "galleryId",
                    "type": "STRING",
                    "description": "The ID of the gallery of photos to return.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "extras",
                    "type": "LIST",
                    "description": "List of extra information to fetch for each returned record.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getListOfPhotosForGallery\"\nquerystring = {\"apiKey\": \"\", \"perPage\": \"\", \"galleryId\": \"\", \"page\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getListOfPhotosForGallery\"\nquerystring = {\"apiKey\": \"\", \"perPage\": \"\", \"galleryId\": \"\", \"page\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getListOfRepliesFromGroup",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getListOfRepliesFromGroup",
            "description": "Get a list of replies from a group discussion topic.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "topicId",
                    "type": "STRING",
                    "description": "The ID of the topic to fetch replies for.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "Pass in the group id to where the topic belongs. Can be NSID or group alias. Making this parameter optional for legacy reasons, but it is highly recommended to pass this in to get faster performance.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getListOfRepliesFromGroup\"\nquerystring = {\"topicId\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"page\": \"\", \"groupId\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getListOfRepliesFromGroup\"\nquerystring = {\"topicId\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"page\": \"\", \"groupId\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getListPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getListPhoto",
            "description": "Get the tag list for a given photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to return tags for.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getListPhoto\"\nquerystring = {\"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"photoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getListPhoto\"\nquerystring = {\"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"photoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getListUser",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getListUser",
            "description": "Get the tag list for a given user (or the currently logged in user).",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The NSID of the user to fetch the tag list for. If this argument is not specified, the currently logged in user (if any) is assumed.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getListUser\"\nquerystring = {\"accessSecret\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"photoId\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getListUser\"\nquerystring = {\"accessSecret\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"photoId\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getListUserPopular",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getListUserPopular",
            "description": "Get the popular tags for a given user (or the currently logged in user).",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "count",
                    "type": "NUMBER",
                    "description": "The number of tags to return. Defaults to 20. Maximum allowed value is 200.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The NSID of the user to fetch the tag list for. If this argument is not specified, the currently logged in user (if any) is assumed.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getListUserPopular\"\nquerystring = {\"count\": \"\", \"apiKey\": \"\", \"photoId\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getListUserPopular\"\nquerystring = {\"count\": \"\", \"apiKey\": \"\", \"photoId\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getListUserRaw",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getListUserRaw",
            "description": "Get the raw versions of a given tag (or all tags) for the currently logged-in user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "tag",
                    "type": "STRING",
                    "description": "The tag you want to retrieve all raw versions for.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getListUserRaw\"\nquerystring = {\"accessToken\": \"\", \"accessSecret\": \"\", \"tag\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getListUserRaw\"\nquerystring = {\"accessToken\": \"\", \"accessSecret\": \"\", \"tag\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "testNull",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/testNull",
            "description": "Null test",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/testNull\"\nquerystring = {\"apiSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/testNull\"\nquerystring = {\"apiSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMachineTagsNamespaces",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getMachineTagsNamespaces",
            "description": "Return a list of unique namespaces, optionally limited by a given predicate, in alphabetical order.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "predicate",
                    "type": "STRING",
                    "description": "Limit the list of namespaces returned to those that have the following predicate.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getMachineTagsNamespaces\"\nquerystring = {\"apiKey\": \"\", \"perPage\": \"\", \"page\": \"\", \"predicate\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getMachineTagsNamespaces\"\nquerystring = {\"apiKey\": \"\", \"perPage\": \"\", \"page\": \"\", \"predicate\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMachineTagsPairs",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getMachineTagsPairs",
            "description": "Return a list of unique namespace and predicate pairs, optionally limited by predicate or namespace, in alphabetical order.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "default": ""
                },
                {
                    "name": "predicate",
                    "type": "STRING",
                    "description": "Limit the list of namespaces returned to those that have the following predicate.",
                    "default": ""
                },
                {
                    "name": "namespace",
                    "type": "NUMBER",
                    "description": "Limit the list of pairs returned to those that have the following namespace.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getMachineTagsPairs\"\nquerystring = {\"page\": \"\", \"perPage\": \"\", \"predicate\": \"\", \"apiKey\": \"\", \"namespace\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getMachineTagsPairs\"\nquerystring = {\"page\": \"\", \"perPage\": \"\", \"predicate\": \"\", \"apiKey\": \"\", \"namespace\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMachineTagsPredicates",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getMachineTagsPredicates",
            "description": "Return a list of unique predicates, optionally limited by a given namespace.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "namespace",
                    "type": "STRING",
                    "description": "Limit the list of predicates returned to those that have the following namespace.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getMachineTagsPredicates\"\nquerystring = {\"perPage\": \"\", \"apiKey\": \"\", \"page\": \"\", \"namespace\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getMachineTagsPredicates\"\nquerystring = {\"perPage\": \"\", \"apiKey\": \"\", \"page\": \"\", \"namespace\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMachineTagsRecentValues",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getMachineTagsRecentValues",
            "description": "Fetch recently used (or created) machine tags values.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "addedSince",
                    "type": "DATEPICKER",
                    "description": "Only return machine tags values that have been added since this timestamp, in epoch seconds.",
                    "default": ""
                },
                {
                    "name": "namespace",
                    "type": "STRING",
                    "description": "A namespace that all values should be restricted to.",
                    "default": ""
                },
                {
                    "name": "predicate",
                    "type": "STRING",
                    "description": "A predicate that all values should be restricted to.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getMachineTagsRecentValues\"\nquerystring = {\"addedSince\": \"\", \"namespace\": \"\", \"predicate\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getMachineTagsRecentValues\"\nquerystring = {\"addedSince\": \"\", \"namespace\": \"\", \"predicate\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMachineTagsValues",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getMachineTagsValues",
            "description": "Return a list of unique values for a namespace and predicate.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "predicate",
                    "type": "STRING",
                    "description": "A predicate that all values should be restricted to.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "namespace",
                    "type": "STRING",
                    "description": "A namespace that all values should be restricted to.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getMachineTagsValues\"\nquerystring = {\"predicate\": \"\", \"page\": \"\", \"apiKey\": \"\", \"namespace\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getMachineTagsValues\"\nquerystring = {\"predicate\": \"\", \"page\": \"\", \"apiKey\": \"\", \"namespace\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMembersGroupList",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getMembersGroupList",
            "description": "Get a list of the members of a group. The call must be signed on behalf of a Flickr member, and the ability to see the group membership will be determined by the Flickr member's group privileges.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "Pass in the group id to where the topic belongs. Can be NSID or group alias. Making this parameter optional for legacy reasons, but it is highly recommended to pass this in to get faster performance.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "default": ""
                },
                {
                    "name": "memberTypes",
                    "type": "LIST",
                    "description": "List of member types.By default returns all types.2: member.3: moderator.4: admin",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getMembersGroupList\"\nquerystring = {\"page\": \"\", \"apiSecret\": \"\", \"groupId\": \"\", \"perPage\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"memberTypes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getMembersGroupList\"\nquerystring = {\"page\": \"\", \"apiSecret\": \"\", \"groupId\": \"\", \"perPage\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"memberTypes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMethodInfo",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getMethodInfo",
            "description": "Returns information for a given flickr API method.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "methodName",
                    "type": "STRING",
                    "description": "The name of the method to fetch information for.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getMethodInfo\"\nquerystring = {\"apiSecret\": \"\", \"accessSecret\": \"\", \"methodName\": \"\", \"accessToken\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getMethodInfo\"\nquerystring = {\"apiSecret\": \"\", \"accessSecret\": \"\", \"methodName\": \"\", \"accessToken\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMethods",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getMethods",
            "description": "Returns a list of available flickr API methods.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getMethods\"\nquerystring = {\"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getMethods\"\nquerystring = {\"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMostFrequentlyUsed",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getMostFrequentlyUsed",
            "description": "Returns a list of most frequently used tags for a user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getMostFrequentlyUsed\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getMostFrequentlyUsed\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getNotInSetPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getNotInSetPhoto",
            "description": "Returns a list of your photos that are not part of any sets.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "maxTakenDate",
                    "type": "DATEPICKER",
                    "description": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. ",
                    "default": ""
                },
                {
                    "name": "media",
                    "type": "SELECT",
                    "description": "Filter results by media type.All default.",
                    "default": ""
                },
                {
                    "name": "minTakenDate",
                    "type": "DATEPICKER",
                    "description": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned.",
                    "default": ""
                },
                {
                    "name": "min_upload_date",
                    "type": "DATEPICKER",
                    "description": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned.",
                    "default": ""
                },
                {
                    "name": "maxUploadDate",
                    "type": "DATEPICKER",
                    "description": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned.",
                    "default": ""
                },
                {
                    "name": "privacyFilter",
                    "type": "SELECT",
                    "description": "Return photos only matching a certain privacy level. ",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "extras",
                    "type": "LIST",
                    "description": "List of extra information to fetch for each returned record.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getNotInSetPhoto\"\nquerystring = {\"maxTakenDate\": \"\", \"apiSecret\": \"\", \"media\": \"\", \"minTakenDate\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"min_upload_date\": \"\", \"maxUploadDate\": \"\", \"privacyFilter\": \"\", \"accessSecret\": \"\", \"perPage\": \"\", \"page\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getNotInSetPhoto\"\nquerystring = {\"maxTakenDate\": \"\", \"apiSecret\": \"\", \"media\": \"\", \"minTakenDate\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"min_upload_date\": \"\", \"maxUploadDate\": \"\", \"privacyFilter\": \"\", \"accessSecret\": \"\", \"perPage\": \"\", \"page\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPandaList",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPandaList",
            "description": "Return a list of Flickr pandas, from whom you can request photos using the flickr.panda.getPhotos API method.More information about the pandas can be found in readme.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPandaList\"\nquerystring = {\"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPandaList\"\nquerystring = {\"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPandaPhotos",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPandaPhotos",
            "description": "Ask the Flickr Pandas for a list of recent public (and `safe`) photos. .More information about the pandas can be found in readme.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "pandaName",
                    "type": "SELECT",
                    "description": "The name of the panda to ask for photos from.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "default": ""
                },
                {
                    "name": "extras",
                    "type": "LIST",
                    "description": "List of extra information to fetch for each returned record.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPandaPhotos\"\nquerystring = {\"pandaName\": \"\", \"apiKey\": \"\", \"page\": \"\", \"perPage\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPandaPhotos\"\nquerystring = {\"pandaName\": \"\", \"apiKey\": \"\", \"page\": \"\", \"perPage\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getParticularMemberPhotos",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getParticularMemberPhotos",
            "description": "Returns a list of photos containing a particular Flickr member.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "The NSID of the user who's photos to return. A value of `me` will return the calling user's photos.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "ownerId",
                    "type": "STRING",
                    "description": "An NSID of a Flickr member. This will restrict the list of photos to those taken by that member.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "default": ""
                },
                {
                    "name": "extras",
                    "type": "LIST",
                    "description": "List of extra information to fetch for each returned record.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getParticularMemberPhotos\"\nquerystring = {\"apiKey\": \"\", \"ownerId\": \"\", \"userId\": \"\", \"page\": \"\", \"perPage\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getParticularMemberPhotos\"\nquerystring = {\"apiKey\": \"\", \"ownerId\": \"\", \"userId\": \"\", \"page\": \"\", \"perPage\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPendingTestimonialsAboutBy",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPendingTestimonialsAboutBy",
            "description": "Get the pending testimonial by the currently logged-in user about the given user. Note that at most 1 testimonial will be returned",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "ID of the user to get testimonials written about",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPendingTestimonialsAboutBy\"\nquerystring = {\"accessToken\": \"\", \"userId\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPendingTestimonialsAboutBy\"\nquerystring = {\"accessToken\": \"\", \"userId\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPendingTestimonialsAbout",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPendingTestimonialsAbout",
            "description": "Get all pending testimonials written about the given user",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of testimonials to return per page. Default is 10, maximum is 50",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Page number. Default is 0",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPendingTestimonialsAbout\"\nquerystring = {\"accessToken\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"perPage\": \"\", \"page\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPendingTestimonialsAbout\"\nquerystring = {\"accessToken\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"perPage\": \"\", \"page\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPendingTestimonialsBy",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPendingTestimonialsBy",
            "description": "Get all pending testimonials written by the given user",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of testimonials to return per page. Default is 10, maximum is 50",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Page number. Default is 0",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPendingTestimonialsBy\"\nquerystring = {\"perPage\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\", \"page\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPendingTestimonialsBy\"\nquerystring = {\"perPage\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\", \"page\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPeopleByEmail",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPeopleByEmail",
            "description": "Return a user's NSID, given their email address.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "findEmail",
                    "type": "STRING",
                    "description": "The email address of the user to find (may be primary or secondary).",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPeopleByEmail\"\nquerystring = {\"apiKey\": \"\", \"findEmail\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPeopleByEmail\"\nquerystring = {\"apiKey\": \"\", \"findEmail\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPeopleByFavoritePhotoId",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPeopleByFavoritePhotoId",
            "description": "Returns the list of people who have favorited a given photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The ID of the photo to fetch the favoriters list for.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPeopleByFavoritePhotoId\"\nquerystring = {\"page\": \"\", \"apiKey\": \"\", \"perPage\": \"\", \"photoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPeopleByFavoritePhotoId\"\nquerystring = {\"page\": \"\", \"apiKey\": \"\", \"perPage\": \"\", \"photoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPeopleByUsername",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPeopleByUsername",
            "description": "Return a user's NSID, given their username.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "The username of the user to lookup.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPeopleByUsername\"\nquerystring = {\"username\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPeopleByUsername\"\nquerystring = {\"username\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPermissionsForPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPermissionsForPhoto",
            "description": "Get permissions for a photo.This method requires authentication with 'read' permission.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to get permissions for.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPermissionsForPhoto\"\nquerystring = {\"apiSecret\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\", \"photoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPermissionsForPhoto\"\nquerystring = {\"apiSecret\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\", \"photoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPermissionsForPhotoGeoData",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPermissionsForPhotoGeoData",
            "description": "Get permissions for who may view geo data for a photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to get permissions for.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPermissionsForPhotoGeoData\"\nquerystring = {\"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"photoId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPermissionsForPhotoGeoData\"\nquerystring = {\"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"photoId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPhotoComments",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoComments",
            "description": "Returns the comments for a photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to fetch comments for.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "maxCommentDate",
                    "type": "DATEPICKER",
                    "description": "Maximum date that a comment was added. ",
                    "default": ""
                },
                {
                    "name": "minCommentDate",
                    "type": "DATEPICKER",
                    "description": "Minimum date that a a comment was added.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoComments\"\nquerystring = {\"apiKey\": \"\", \"maxCommentDate\": \"\", \"minCommentDate\": \"\", \"photoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoComments\"\nquerystring = {\"apiKey\": \"\", \"maxCommentDate\": \"\", \"minCommentDate\": \"\", \"photoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPhotoCommentsForContacts",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoCommentsForContacts",
            "description": "Return the list of photos belonging to your contacts that have been commented on recently.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "dateLastcomment",
                    "type": "DATEPICKER",
                    "description": "Limits the resultset to photos that have been commented on since this date. The date should be in the form of a Unix timestamp.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "contactsFilter",
                    "type": "LIST",
                    "description": "List of contact NSIDs to limit the scope of the query to.",
                    "default": ""
                },
                {
                    "name": "extras",
                    "type": "LIST",
                    "description": "List of extra information to fetch for each returned record.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoCommentsForContacts\"\nquerystring = {\"accessToken\": \"\", \"apiKey\": \"\", \"dateLastcomment\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"perPage\": \"\", \"page\": \"\", \"contactsFilter\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoCommentsForContacts\"\nquerystring = {\"accessToken\": \"\", \"apiKey\": \"\", \"dateLastcomment\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"perPage\": \"\", \"page\": \"\", \"contactsFilter\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPhotoDomains",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoDomains",
            "description": "Get a list of referring domains for a photo",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "date",
                    "type": "DATEPICKER",
                    "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to get stats for. If not provided, stats for all photos will be returned.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. Default is 10, maximum is 50",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Page number. Default is 0",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoDomains\"\nquerystring = {\"apiSecret\": \"\", \"accessToken\": \"\", \"date\": \"\", \"accessSecret\": \"\", \"photoId\": \"\", \"apiKey\": \"\", \"perPage\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoDomains\"\nquerystring = {\"apiSecret\": \"\", \"accessToken\": \"\", \"date\": \"\", \"accessSecret\": \"\", \"photoId\": \"\", \"apiKey\": \"\", \"perPage\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPhotoInfo",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoInfo",
            "description": "Get information about a photo. The calling user must have permission to view the photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to get information for.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "secret",
                    "type": "STRING",
                    "description": "The secret for the photo. If the correct secret is passed then permissions checking is skipped. This enables the 'sharing' of individual photos by passing around the id and secret.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoInfo\"\nquerystring = {\"apiKey\": \"\", \"photoId\": \"\", \"secret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoInfo\"\nquerystring = {\"apiKey\": \"\", \"photoId\": \"\", \"secret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPhotoLicenses",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoLicenses",
            "description": "Fetches a list of available photo licenses for Flickr.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoLicenses\"\nquerystring = {\"accessToken\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoLicenses\"\nquerystring = {\"accessToken\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPhotoPersons",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoPersons",
            "description": "Get a list of people in a given photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoPersons\"\nquerystring = {\"accessSecret\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\", \"photoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoPersons\"\nquerystring = {\"accessSecret\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\", \"photoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPhotoSizes",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoSizes",
            "description": "Returns the available sizes for a photo. The calling user must have permission to view the photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to fetch size information for.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoSizes\"\nquerystring = {\"photoId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoSizes\"\nquerystring = {\"photoId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPhotoStreamContexts",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoStreamContexts",
            "description": "Returns next and previous photos for a photo in a photostream.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to fetch the context for.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoStreamContexts\"\nquerystring = {\"photoId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoStreamContexts\"\nquerystring = {\"photoId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPhotoVideoLimits",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoVideoLimits",
            "description": "Returns the photo and video limits that apply to the calling user account.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoVideoLimits\"\nquerystring = {\"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotoVideoLimits\"\nquerystring = {\"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPhotosByCoordinates",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotosByCoordinates",
            "description": "Return a list of photos for the calling user at a specific latitude, longitude and accuracy.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "coordinates",
                    "type": "MAP",
                    "description": "The latitude of the photos to be update whose valid range is -90 to 90.The longitude of the photos to be updated whose valid range is -180 to 180. ",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "accuracy",
                    "type": "NUMBER",
                    "description": "Recorded accuracy level of the photos to be updated. World level is 1, Country is ~3, Region ~6, City ~11, Street ~16. Current range is 1-16. Defaults to 16 if not specified.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "extras",
                    "type": "LIST",
                    "description": "List of extra information to fetch for each returned record.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotosByCoordinates\"\nquerystring = {\"apiKey\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\", \"accuracy\": \"\", \"coordinates\": \"\", \"accessSecret\": \"\", \"perPage\": \"\", \"page\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotosByCoordinates\"\nquerystring = {\"apiKey\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\", \"accuracy\": \"\", \"coordinates\": \"\", \"accessSecret\": \"\", \"perPage\": \"\", \"page\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPhotosCountsForDateRanges",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotosCountsForDateRanges",
            "description": "Gets a list of photo counts for the given date ranges for the calling user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "dates",
                    "type": "LIST",
                    "description": "List of dates, denoting the periods to return counts for.They should be specified smallest first.2 dates minimum.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotosCountsForDateRanges\"\nquerystring = {\"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"dates\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotosCountsForDateRanges\"\nquerystring = {\"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"dates\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPhotosWithoutGeoData",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotosWithoutGeoData",
            "description": "Returns a list of your photos which haven't been geo-tagged.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "privacyFilter",
                    "type": "SELECT",
                    "description": "Return photos only matching a certain privacy level.",
                    "default": ""
                },
                {
                    "name": "media",
                    "type": "SELECT",
                    "description": "Filter results by media type.All (default).",
                    "default": ""
                },
                {
                    "name": "minUploadDate",
                    "type": "DATEPICKER",
                    "description": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. ",
                    "default": ""
                },
                {
                    "name": "minTakenDate",
                    "type": "DATEPICKER",
                    "description": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. ",
                    "default": ""
                },
                {
                    "name": "maxUploadDate",
                    "type": "DATEPICKER",
                    "description": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. ",
                    "default": ""
                },
                {
                    "name": "maxTakenDate",
                    "type": "DATEPICKER",
                    "description": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. ",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "default": ""
                },
                {
                    "name": "extras",
                    "type": "LIST",
                    "description": "List of extra information to fetch for each returned record.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotosWithoutGeoData\"\nquerystring = {\"apiKey\": \"\", \"privacyFilter\": \"\", \"media\": \"\", \"minUploadDate\": \"\", \"minTakenDate\": \"\", \"maxUploadDate\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"maxTakenDate\": \"\", \"page\": \"\", \"perPage\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotosWithoutGeoData\"\nquerystring = {\"apiKey\": \"\", \"privacyFilter\": \"\", \"media\": \"\", \"minUploadDate\": \"\", \"minTakenDate\": \"\", \"maxUploadDate\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"maxTakenDate\": \"\", \"page\": \"\", \"perPage\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPhotosetComments",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotosetComments",
            "description": "Returns the comments for a photoset.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "photosetId",
                    "type": "STRING",
                    "description": "Id of the photoset",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotosetComments\"\nquerystring = {\"apiSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"photosetId\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotosetComments\"\nquerystring = {\"apiSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"photosetId\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPhotosetContext",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotosetContext",
            "description": "Returns next and previous photos for a photo in a set.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "photosetId",
                    "type": "STRING",
                    "description": "Id of the photoset",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to fetch the context for.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotosetContext\"\nquerystring = {\"photosetId\": \"\", \"accessSecret\": \"\", \"photoId\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotosetContext\"\nquerystring = {\"photosetId\": \"\", \"accessSecret\": \"\", \"photoId\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPhotosetDomains",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotosetDomains",
            "description": "Get a list of referring domains for a photoset",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "date",
                    "type": "DATEPICKER",
                    "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "photosetId",
                    "type": "STRING",
                    "description": "The id of the photoset to get stats for. If not provided, stats for all photosets will be returned.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Page number. Default is 0",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. Default is 10, maximum is 50",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotosetDomains\"\nquerystring = {\"accessSecret\": \"\", \"apiSecret\": \"\", \"photosetId\": \"\", \"page\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"date\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotosetDomains\"\nquerystring = {\"accessSecret\": \"\", \"apiSecret\": \"\", \"photosetId\": \"\", \"page\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"date\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPhotosetReferrers",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotosetReferrers",
            "description": "Get a list of referrers from a given domain to a photoset",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "The domain to return referrers for. This should be a hostname (eg: \"flickr.com\") with no protocol or pathname.",
                    "default": ""
                },
                {
                    "name": "date",
                    "type": "DATEPICKER",
                    "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. Default is 10, maximum is 50",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Page number. Default is 0",
                    "default": ""
                },
                {
                    "name": "photosetId",
                    "type": "STRING",
                    "description": "The id of the photoset to get stats for. If not provided, stats for all photosets will be returned.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotosetReferrers\"\nquerystring = {\"apiKey\": \"\", \"perPage\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\", \"page\": \"\", \"accessSecret\": \"\", \"domain\": \"\", \"date\": \"\", \"photosetId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotosetReferrers\"\nquerystring = {\"apiKey\": \"\", \"perPage\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\", \"page\": \"\", \"accessSecret\": \"\", \"domain\": \"\", \"date\": \"\", \"photosetId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPhotosetStats",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotosetStats",
            "description": "Get the number of views on a photoset for a given date.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "date",
                    "type": "DATEPICKER",
                    "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "photosetId",
                    "type": "STRING",
                    "description": "The id of the photoset to get stats for. If not provided, stats for all photosets will be returned.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotosetStats\"\nquerystring = {\"date\": \"\", \"apiKey\": \"\", \"photosetId\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotosetStats\"\nquerystring = {\"date\": \"\", \"apiKey\": \"\", \"photosetId\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPhotostreamDomains",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotostreamDomains",
            "description": "Get a list of referring domains for a photostream",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "date",
                    "type": "DATEPICKER",
                    "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. Default is 10, maximum is 50",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Page number. Default is 0",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotostreamDomains\"\nquerystring = {\"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"perPage\": \"\", \"date\": \"\", \"page\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotostreamDomains\"\nquerystring = {\"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"perPage\": \"\", \"date\": \"\", \"page\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPhotostreamReferrers",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotostreamReferrers",
            "description": "Get a list of referrers from a given domain to a user's photostream",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "date",
                    "type": "DATEPICKER",
                    "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "The domain to return referrers for. This should be a hostname (eg: \"flickr.com\") with no protocol or pathname.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Page number. Default is 0",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. Default is 10, maximum is 50",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotostreamReferrers\"\nquerystring = {\"apiSecret\": \"\", \"page\": \"\", \"apiKey\": \"\", \"date\": \"\", \"accessToken\": \"\", \"domain\": \"\", \"perPage\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotostreamReferrers\"\nquerystring = {\"apiSecret\": \"\", \"page\": \"\", \"apiKey\": \"\", \"date\": \"\", \"accessToken\": \"\", \"domain\": \"\", \"perPage\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPhotostreamStats",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotostreamStats",
            "description": "Get the number of views on a user's photostream for a given date.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "date",
                    "type": "DATEPICKER",
                    "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotostreamStats\"\nquerystring = {\"accessSecret\": \"\", \"date\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPhotostreamStats\"\nquerystring = {\"accessSecret\": \"\", \"date\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPlaceTypes",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPlaceTypes",
            "description": "Fetches a list of available place types for Flickr.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPlaceTypes\"\nquerystring = {\"accessSecret\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPlaceTypes\"\nquerystring = {\"accessSecret\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPopularPhotoStats",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPopularPhotoStats",
            "description": "List the photos with the most views, comments or favorites",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Page number. Default is 0",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "The order in which to sort returned photos. Defaults to views.",
                    "default": ""
                },
                {
                    "name": "date",
                    "type": "DATEPICKER",
                    "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. Default is 10, maximum is 50",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPopularPhotoStats\"\nquerystring = {\"page\": \"\", \"apiKey\": \"\", \"sort\": \"\", \"apiSecret\": \"\", \"date\": \"\", \"perPage\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPopularPhotoStats\"\nquerystring = {\"page\": \"\", \"apiKey\": \"\", \"sort\": \"\", \"apiSecret\": \"\", \"date\": \"\", \"perPage\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPopularPhotos",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPopularPhotos",
            "description": "Returns a list of popular photos.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "The NSID of the user to get a galleries list for. If none is specified, the calling user is assumed.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "The sort order.Deafults to interesting.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "default": ""
                },
                {
                    "name": "extras",
                    "type": "LIST",
                    "description": "List of extra information to fetch for each returned record.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPopularPhotos\"\nquerystring = {\"sort\": \"\", \"apiKey\": \"\", \"userId\": \"\", \"page\": \"\", \"perPage\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPopularPhotos\"\nquerystring = {\"sort\": \"\", \"apiKey\": \"\", \"userId\": \"\", \"page\": \"\", \"perPage\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPrivacy",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getPrivacy",
            "description": "Returns the default privacy level preference for the user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPrivacy\"\nquerystring = {\"accessToken\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getPrivacy\"\nquerystring = {\"accessToken\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getProfile",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getProfile",
            "description": "Returns specified user's profile info, respecting profile privacy settings",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "The NSID of the user to fetch the url for. ",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getProfile\"\nquerystring = {\"accessToken\": \"\", \"userId\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getProfile\"\nquerystring = {\"accessToken\": \"\", \"userId\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getRecentPhotos",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getRecentPhotos",
            "description": "Returns a list of the latest public photos uploaded to flickr.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "default": ""
                },
                {
                    "name": "extras",
                    "type": "LIST",
                    "description": "List of extra information to fetch for each returned record.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getRecentPhotos\"\nquerystring = {\"apiKey\": \"\", \"page\": \"\", \"perPage\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getRecentPhotos\"\nquerystring = {\"apiKey\": \"\", \"page\": \"\", \"perPage\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getRecentlyUpdatedPhotos",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getRecentlyUpdatedPhotos",
            "description": "Return a list of your photos that have been recently created or which have been recently modified.Recently modified may mean that the photo's metadata (title, description, tags) may have been changed or a comment has been added (or just modified somehow :-)",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "minDate",
                    "type": "DATEPICKER",
                    "description": "A Unix timestamp or any English textual datetime description indicating the date from which modifications should be compared.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "default": ""
                },
                {
                    "name": "extras",
                    "type": "LIST",
                    "description": "List of extra information to fetch for each returned record.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getRecentlyUpdatedPhotos\"\nquerystring = {\"minDate\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\", \"page\": \"\", \"perPage\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getRecentlyUpdatedPhotos\"\nquerystring = {\"minDate\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\", \"page\": \"\", \"perPage\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getRelated",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getRelated",
            "description": "Returns a list of tags 'related' to the given tag, based on clustered usage analysis.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "tag",
                    "type": "STRING",
                    "description": "The tag you want to retrieve all related tags for.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getRelated\"\nquerystring = {\"accessToken\": \"\", \"apiKey\": \"\", \"tag\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getRelated\"\nquerystring = {\"accessToken\": \"\", \"apiKey\": \"\", \"tag\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getRequestToken",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getRequestToken",
            "description": "Get request token.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "oauthCallback",
                    "type": "STRING",
                    "description": "The value you specify here will be used as the URL a user is redirected to should they approve your application\u2019s access to their account.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getRequestToken\"\nquerystring = {\"apiKey\": \"\", \"apiSecret\": \"\", \"oauthCallback\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getRequestToken\"\nquerystring = {\"apiKey\": \"\", \"apiSecret\": \"\", \"oauthCallback\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSafetyLevel",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getSafetyLevel",
            "description": "Returns the default safety level preference for the user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getSafetyLevel\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getSafetyLevel\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getShapeHistoryByPlaceId",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getShapeHistoryByPlaceId",
            "description": "Return an historical list of all the shape data generated",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "placeId",
                    "type": "STRING",
                    "description": "A Flickr Places ID. ",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getShapeHistoryByPlaceId\"\nquerystring = {\"accessToken\": \"\", \"apiSecret\": \"\", \"placeId\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getShapeHistoryByPlaceId\"\nquerystring = {\"accessToken\": \"\", \"apiSecret\": \"\", \"placeId\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getShapeHistoryByWoeId",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getShapeHistoryByWoeId",
            "description": "Return an historical list of all the shape data generated",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "woeId",
                    "type": "STRING",
                    "description": "A Where On Earth (WOE) ID.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getShapeHistoryByWoeId\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"woeId\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getShapeHistoryByWoeId\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"woeId\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSubscriptions",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getSubscriptions",
            "description": "Returns a list of the subscriptions for the logged-in user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getSubscriptions\"\nquerystring = {\"accessToken\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getSubscriptions\"\nquerystring = {\"accessToken\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSuggenstionsList",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getSuggenstionsList",
            "description": "Return a list of suggestions for a user that are pending approval.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                },
                {
                    "name": "statusId",
                    "type": "SELECT",
                    "description": "Only show suggestions with a given status.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getSuggenstionsList\"\nquerystring = {\"apiSecret\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"photoId\": \"\", \"statusId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getSuggenstionsList\"\nquerystring = {\"apiSecret\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"photoId\": \"\", \"statusId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getTestimonialsAboutBy",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getTestimonialsAboutBy",
            "description": "Get the approved testimonial by the currently logged-in user about the given user. Note that at most 1 testimonial will be returned",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "ID of the user to get testimonials written about",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getTestimonialsAboutBy\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"userId\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getTestimonialsAboutBy\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"userId\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getTestimonialsAbout",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getTestimonialsAbout",
            "description": "Get approved testimonials about the given user",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "ID of the user to get testimonials written about",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Page number. Default is 0",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of testimonials to return per page. Default is 10, maximum is 50",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getTestimonialsAbout\"\nquerystring = {\"apiKey\": \"\", \"page\": \"\", \"perPage\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"userId\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getTestimonialsAbout\"\nquerystring = {\"apiKey\": \"\", \"page\": \"\", \"perPage\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"userId\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getTestimonialsBy",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getTestimonialsBy",
            "description": "Get approved testimonials written by the given user",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "ID of the user to get testimonials written by",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Page number. Default is 0",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of testimonials to return per page. Default is 10, maximum is 50",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getTestimonialsBy\"\nquerystring = {\"accessSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"userId\": \"\", \"page\": \"\", \"perPage\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getTestimonialsBy\"\nquerystring = {\"accessSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"userId\": \"\", \"page\": \"\", \"perPage\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getTopPlacesList",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getTopPlacesList",
            "description": "Return the top 100 most geotagged places for a day.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "placeTypeId",
                    "type": "SELECT",
                    "description": "The numeric ID for a specific place type to cluster photos by.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "date",
                    "type": "DATEPICKER",
                    "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "placeId",
                    "type": "STRING",
                    "description": "A Flickr Places ID. ",
                    "default": ""
                },
                {
                    "name": "woeId",
                    "type": "STRING",
                    "description": "A Where On Earth (WOE) ID.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getTopPlacesList\"\nquerystring = {\"placeId\": \"\", \"apiSecret\": \"\", \"placeTypeId\": \"\", \"apiKey\": \"\", \"date\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\", \"woeId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getTopPlacesList\"\nquerystring = {\"placeId\": \"\", \"apiSecret\": \"\", \"placeTypeId\": \"\", \"apiKey\": \"\", \"date\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\", \"woeId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getTopics",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getTopics",
            "description": "All the different flavours of anteater.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getTopics\"\nquerystring = {\"accessToken\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getTopics\"\nquerystring = {\"accessToken\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getTotalViews",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getTotalViews",
            "description": "Get the overall view counts for an account",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "date",
                    "type": "DATEPICKER",
                    "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getTotalViews\"\nquerystring = {\"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"date\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getTotalViews\"\nquerystring = {\"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"date\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUntaggedPhotos",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getUntaggedPhotos",
            "description": "Returns a list of your photos with no tags.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "privacyFilter",
                    "type": "SELECT",
                    "description": "Return photos only matching a certain privacy level.",
                    "default": ""
                },
                {
                    "name": "minTakenDate",
                    "type": "DATEPICKER",
                    "description": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. ",
                    "default": ""
                },
                {
                    "name": "maxTakenDate",
                    "type": "DATEPICKER",
                    "description": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. ",
                    "default": ""
                },
                {
                    "name": "maxUploadDate",
                    "type": "DATEPICKER",
                    "description": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. ",
                    "default": ""
                },
                {
                    "name": "media",
                    "type": "SELECT",
                    "description": "Filter results by media type.All (default).",
                    "default": ""
                },
                {
                    "name": "minUploadDate",
                    "type": "DATEPICKER",
                    "description": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. ",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "extras",
                    "type": "LIST",
                    "description": "List of extra information to fetch for each returned record.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUntaggedPhotos\"\nquerystring = {\"apiSecret\": \"\", \"privacyFilter\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\", \"minTakenDate\": \"\", \"maxTakenDate\": \"\", \"maxUploadDate\": \"\", \"media\": \"\", \"minUploadDate\": \"\", \"perPage\": \"\", \"page\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUntaggedPhotos\"\nquerystring = {\"apiSecret\": \"\", \"privacyFilter\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\", \"minTakenDate\": \"\", \"maxTakenDate\": \"\", \"maxUploadDate\": \"\", \"media\": \"\", \"minUploadDate\": \"\", \"perPage\": \"\", \"page\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUploadStatus",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getUploadStatus",
            "description": "Returns information for the calling user related to photo uploads.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUploadStatus\"\nquerystring = {\"accessSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUploadStatus\"\nquerystring = {\"accessSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserComments",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getUserComments",
            "description": "Returns a list of recent activity on photos commented on by the calling user. Do not poll this method more than once an hour.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserComments\"\nquerystring = {\"apiKey\": \"\", \"page\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserComments\"\nquerystring = {\"apiKey\": \"\", \"page\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserContactsPhotos",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getUserContactsPhotos",
            "description": "Fetch a list of recent photos from the calling users' contacts.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "singlePhoto",
                    "type": "STRING",
                    "description": "Only fetch one photo (the latest) per contact, instead of all photos in chronological order.",
                    "default": ""
                },
                {
                    "name": "count",
                    "type": "NUMBER",
                    "description": "Number of photos to return. Defaults to 10, maximum 50. This is only used if single_photo is not passed.",
                    "default": ""
                },
                {
                    "name": "justFriends",
                    "type": "SELECT",
                    "description": "Set as true to only show photos from friends and family (excluding regular contacts).",
                    "default": ""
                },
                {
                    "name": "includeSelf",
                    "type": "SELECT",
                    "description": "Set to 1 to include photos from the calling user.",
                    "default": ""
                },
                {
                    "name": "extras",
                    "type": "LIST",
                    "description": "List of extra information to fetch for each returned record.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserContactsPhotos\"\nquerystring = {\"accessSecret\": \"\", \"singlePhoto\": \"\", \"count\": \"\", \"justFriends\": \"\", \"includeSelf\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserContactsPhotos\"\nquerystring = {\"accessSecret\": \"\", \"singlePhoto\": \"\", \"count\": \"\", \"justFriends\": \"\", \"includeSelf\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserContactsPublicPhotos",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getUserContactsPublicPhotos",
            "description": "Fetch a list of recent public photos from a users' contacts.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "The NSID of the user to fetch photos for.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "count",
                    "type": "NUMBER",
                    "description": "Number of photos to return. Defaults to 10, maximum 50. This is only used if single_photo is not passed.",
                    "default": ""
                },
                {
                    "name": "justFriends",
                    "type": "SELECT",
                    "description": "Set as true to only show photos from friends and family (excluding regular contacts).",
                    "default": ""
                },
                {
                    "name": "singlePhoto",
                    "type": "STRING",
                    "description": "Only fetch one photo (the latest) per contact, instead of all photos in chronological order.",
                    "default": ""
                },
                {
                    "name": "includeSelf",
                    "type": "SELECT",
                    "description": "Set to 1 to include photos from the calling user.",
                    "default": ""
                },
                {
                    "name": "extras",
                    "type": "LIST",
                    "description": "List of extra information to fetch for each returned record.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserContactsPublicPhotos\"\nquerystring = {\"apiKey\": \"\", \"count\": \"\", \"justFriends\": \"\", \"singlePhoto\": \"\", \"userId\": \"\", \"includeSelf\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserContactsPublicPhotos\"\nquerystring = {\"apiKey\": \"\", \"count\": \"\", \"justFriends\": \"\", \"singlePhoto\": \"\", \"userId\": \"\", \"includeSelf\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserGroups",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getUserGroups",
            "description": "Returns the list of groups a user is a member of.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "The NSID of the user to fetch groups for.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "extras",
                    "type": "LIST",
                    "description": "List of extra information to fetch for each returned record.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserGroups\"\nquerystring = {\"accessSecret\": \"\", \"userId\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserGroups\"\nquerystring = {\"accessSecret\": \"\", \"userId\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserInfo",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getUserInfo",
            "description": "Get information about a user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "The NSID of the user to fetch information about.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserInfo\"\nquerystring = {\"userId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserInfo\"\nquerystring = {\"userId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getUserPhoto",
            "description": "Return photos from the given user's photostream. Only photos visible to the calling user will be returned.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "The NSID of the user who's photos to return. A value of `me` will return the calling user's photos.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "minTakenDate",
                    "type": "DATEPICKER",
                    "description": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. ",
                    "default": ""
                },
                {
                    "name": "contentType",
                    "type": "SELECT",
                    "description": "Content Type.See more in readme.",
                    "default": ""
                },
                {
                    "name": "safeSearch",
                    "type": "SELECT",
                    "description": "Safe search setting.See more in readme.",
                    "default": ""
                },
                {
                    "name": "privacyFilter",
                    "type": "SELECT",
                    "description": "Return photos only matching a certain privacy level. This only applies when making an authenticated call to view photos you own.See more in readme.",
                    "default": ""
                },
                {
                    "name": "maxTakenDate",
                    "type": "DATEPICKER",
                    "description": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. ",
                    "default": ""
                },
                {
                    "name": "minUploadDate",
                    "type": "DATEPICKER",
                    "description": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. ",
                    "default": ""
                },
                {
                    "name": "maxUploadDate",
                    "type": "DATEPICKER",
                    "description": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. ",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "default": ""
                },
                {
                    "name": "extras",
                    "type": "LIST",
                    "description": "List of extra information to fetch for each returned record.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserPhoto\"\nquerystring = {\"apiKey\": \"\", \"minTakenDate\": \"\", \"contentType\": \"\", \"safeSearch\": \"\", \"privacyFilter\": \"\", \"userId\": \"\", \"maxTakenDate\": \"\", \"minUploadDate\": \"\", \"maxUploadDate\": \"\", \"page\": \"\", \"perPage\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserPhoto\"\nquerystring = {\"apiKey\": \"\", \"minTakenDate\": \"\", \"contentType\": \"\", \"safeSearch\": \"\", \"privacyFilter\": \"\", \"userId\": \"\", \"maxTakenDate\": \"\", \"minUploadDate\": \"\", \"maxUploadDate\": \"\", \"page\": \"\", \"perPage\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserPhotoStats",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getUserPhotoStats",
            "description": "Get the number of views on a photo for a given date.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "date",
                    "type": "DATEPICKER",
                    "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to get stats for. If not provided, stats for all photos will be returned.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserPhotoStats\"\nquerystring = {\"photoId\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"date\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserPhotoStats\"\nquerystring = {\"photoId\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"date\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserPhotos",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getUserPhotos",
            "description": "Returns a list of recent activity on photos belonging to the calling user. Do not poll this method more than once an hour.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "timeframe",
                    "type": "STRING",
                    "description": "The timeframe in which to return updates for. This can be specified in days ('2d') or hours ('4h'). The default behavoir is to return changes since the beginning of the previous user session.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserPhotos\"\nquerystring = {\"perPage\": \"\", \"accessSecret\": \"\", \"page\": \"\", \"accessToken\": \"\", \"timeframe\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserPhotos\"\nquerystring = {\"perPage\": \"\", \"accessSecret\": \"\", \"page\": \"\", \"accessToken\": \"\", \"timeframe\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserPhotosInPhotoset",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getUserPhotosInPhotoset",
            "description": "Get the list of photos in a set.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photosetId",
                    "type": "STRING",
                    "description": "Id of the photoset",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Page number. Default is 0",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. Default is 10, maximum is 50",
                    "default": ""
                },
                {
                    "name": "privacyFilter",
                    "type": "SELECT",
                    "description": "Return photos only matching a certain privacy level",
                    "default": ""
                },
                {
                    "name": "media",
                    "type": "SELECT",
                    "description": "Filter results by media type. Possible values are all (default), photos or videos",
                    "default": ""
                },
                {
                    "name": "extras",
                    "type": "LIST",
                    "description": "Extra information to fetch for each returned record",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserPhotosInPhotoset\"\nquerystring = {\"apiSecret\": \"\", \"page\": \"\", \"apiKey\": \"\", \"perPage\": \"\", \"userId\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"photosetId\": \"\", \"privacyFilter\": \"\", \"media\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserPhotosInPhotoset\"\nquerystring = {\"apiSecret\": \"\", \"page\": \"\", \"apiKey\": \"\", \"perPage\": \"\", \"userId\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"photosetId\": \"\", \"privacyFilter\": \"\", \"media\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserPhotosUrl",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getUserPhotosUrl",
            "description": "Returns the url to a user's photos.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "The NSID of the user to fetch the url for. If omitted, the calling user is assumed.          ",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserPhotosUrl\"\nquerystring = {\"userId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserPhotosUrl\"\nquerystring = {\"userId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserPhotosets",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getUserPhotosets",
            "description": "Returns the photosets belonging to the specified user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Page number. Default is 0",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. Default is 10, maximum is 50",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "photoIds",
                    "type": "LIST",
                    "description": "If specified, each returned set will include a list of these photo ids that are present in the set",
                    "default": ""
                },
                {
                    "name": "primaryPhotoExtras",
                    "type": "LIST",
                    "description": "Extra information to fetch for the primary photo.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserPhotosets\"\nquerystring = {\"accessToken\": \"\", \"apiSecret\": \"\", \"page\": \"\", \"accessSecret\": \"\", \"perPage\": \"\", \"userId\": \"\", \"apiKey\": \"\", \"photoIds\": \"\", \"primaryPhotoExtras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserPhotosets\"\nquerystring = {\"accessToken\": \"\", \"apiSecret\": \"\", \"page\": \"\", \"accessSecret\": \"\", \"perPage\": \"\", \"userId\": \"\", \"apiKey\": \"\", \"photoIds\": \"\", \"primaryPhotoExtras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserProfile",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getUserProfile",
            "description": "Returns the url to a user's profile.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "The NSID of the user to fetch the url for. If omitted, the calling user is assumed.          ",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserProfile\"\nquerystring = {\"userId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserProfile\"\nquerystring = {\"userId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserPublicGroups",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getUserPublicGroups",
            "description": "Returns the list of public groups a user is a member of.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "The NSID of the user to fetch groups for.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "invitationOnly",
                    "type": "STRING",
                    "description": "Include public groups that require an invitation or administrator approval to join.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserPublicGroups\"\nquerystring = {\"invitationOnly\": \"\", \"apiKey\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserPublicGroups\"\nquerystring = {\"invitationOnly\": \"\", \"apiKey\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserPublicPhotos",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/getUserPublicPhotos",
            "description": "Get a list of public photos for the given user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "The NSID of the user who's photos to return.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "safeSearch",
                    "type": "SELECT",
                    "description": "Safe search setting.See more in readme.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "extras",
                    "type": "LIST",
                    "description": "List of extra information to fetch for each returned record.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserPublicPhotos\"\nquerystring = {\"apiKey\": \"\", \"safeSearch\": \"\", \"userId\": \"\", \"perPage\": \"\", \"page\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/getUserPublicPhotos\"\nquerystring = {\"apiKey\": \"\", \"safeSearch\": \"\", \"userId\": \"\", \"perPage\": \"\", \"page\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "joinGroup",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/joinGroup",
            "description": "Join a public group as a member.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "The NSID of the Group in question.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "acceptRules",
                    "type": "STRING",
                    "description": "If the group has rules, they must be displayed to the user prior to joining. ",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/joinGroup\"\nquerystring = {\"groupId\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\", \"acceptRules\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/joinGroup\"\nquerystring = {\"groupId\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\", \"acceptRules\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "leaveGroup",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/leaveGroup",
            "description": "Leave a group.If the user is the only administrator left, and there are other members, the oldest member will be promoted to administrator.If the user is the last person in the group, the group will be deleted.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "The NSID of the Group to leave.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "deletePhotos",
                    "type": "STRING",
                    "description": "Delete all photos by this user from the group.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/leaveGroup\"\nquerystring = {\"deletePhotos\": \"\", \"groupId\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/leaveGroup\"\nquerystring = {\"deletePhotos\": \"\", \"groupId\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "lookupGallery",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/lookupGallery",
            "description": "Returns gallery info, by url.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "The url to gallery",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/lookupGallery\"\nquerystring = {\"apiKey\": \"\", \"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/lookupGallery\"\nquerystring = {\"apiKey\": \"\", \"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "lookupGroup",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/lookupGroup",
            "description": "Returns a group NSID, given the url to a group's page or photo pool.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "The url to the group's page or photo pool.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/lookupGroup\"\nquerystring = {\"url\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/lookupGroup\"\nquerystring = {\"url\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "lookupUser",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/lookupUser",
            "description": "Returns a user NSID, given the url to a user's photos or profile.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "The url to the user's profile or photos page.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/lookupUser\"\nquerystring = {\"apiKey\": \"\", \"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/lookupUser\"\nquerystring = {\"apiKey\": \"\", \"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "orderSets",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/orderSets",
            "description": "Set the order of photosets for the calling user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photosetIds",
                    "type": "LIST",
                    "description": "List of photoset IDs, ordered with the set to show first, first in the list.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/orderSets\"\nquerystring = {\"apiSecret\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"photosetIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/orderSets\"\nquerystring = {\"apiSecret\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"photosetIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "unsubscribe",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/unsubscribe",
            "description": "Unsibscribe from event",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "callback",
                    "type": "STRING",
                    "description": "The url for the subscription endpoint (must be the same url as was used when creating the subscription).",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "topic",
                    "type": "STRING",
                    "description": "The type of subscription. ",
                    "default": ""
                },
                {
                    "name": "verify",
                    "type": "SELECT",
                    "description": "The verification mode, either sync or async.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "verifyToken",
                    "type": "STRING",
                    "description": "The verification token to be echoed back to the subscriber during the verification callback",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/unsubscribe\"\nquerystring = {\"apiSecret\": \"\", \"accessToken\": \"\", \"verifyToken\": \"\", \"callback\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"topic\": \"\", \"verify\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/unsubscribe\"\nquerystring = {\"apiSecret\": \"\", \"accessToken\": \"\", \"verifyToken\": \"\", \"callback\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"topic\": \"\", \"verify\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "placesForBoundingBox",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/placesForBoundingBox",
            "description": "Return all the locations of a matching place type for a bounding box.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "minBBox",
                    "type": "MAP",
                    "description": "The bottom-left corner of the box",
                    "default": ""
                },
                {
                    "name": "maxBBox",
                    "type": "MAP",
                    "description": "The top-right corner of the box",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "placeType",
                    "type": "SELECT",
                    "description": "The name of place type to using as the starting point to search for places in a bounding box. ",
                    "default": ""
                },
                {
                    "name": "placeTypeId",
                    "type": "SELECT",
                    "description": "The numeric ID for a specific place type to cluster photos by.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/placesForBoundingBox\"\nquerystring = {\"placeType\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"minBBox\": \"\", \"maxBBox\": \"\", \"placeTypeId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/placesForBoundingBox\"\nquerystring = {\"placeType\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"minBBox\": \"\", \"maxBBox\": \"\", \"placeTypeId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "placesForContactsByPlaceId",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/placesForContactsByPlaceId",
            "description": "Return a list of the top 100 unique places clustered by a given placetype for a user's contacts.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "placeId",
                    "type": "STRING",
                    "description": "A Flickr Places ID. ",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "placeTypeId",
                    "type": "SELECT",
                    "description": "The numeric ID for a specific place type to cluster photos by.",
                    "default": ""
                },
                {
                    "name": "threshold",
                    "type": "NUMBER",
                    "description": "The minimum number of photos that a place type must have to be included. ",
                    "default": ""
                },
                {
                    "name": "placeType",
                    "type": "SELECT",
                    "description": "The name of place type to using as the starting point to search for places in a bounding box. ",
                    "default": ""
                },
                {
                    "name": "minTakenDate",
                    "type": "DATEPICKER",
                    "description": "Minimum taken date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "contacts",
                    "type": "SELECT",
                    "description": "Search your contacts. Either 'all' or 'ff' for just friends and family. (Default is all)",
                    "default": ""
                },
                {
                    "name": "minUploadDate",
                    "type": "DATEPICKER",
                    "description": "Minimum upload date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "maxTakenDate",
                    "type": "DATEPICKER",
                    "description": "Minimum taken date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "maxUploadDate",
                    "type": "DATEPICKER",
                    "description": "Minimum upload date. This should be in YYYY-MM-DD",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/placesForContactsByPlaceId\"\nquerystring = {\"placeId\": \"\", \"accessToken\": \"\", \"placeTypeId\": \"\", \"threshold\": \"\", \"apiKey\": \"\", \"placeType\": \"\", \"minTakenDate\": \"\", \"apiSecret\": \"\", \"contacts\": \"\", \"accessSecret\": \"\", \"minUploadDate\": \"\", \"maxTakenDate\": \"\", \"maxUploadDate\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/placesForContactsByPlaceId\"\nquerystring = {\"placeId\": \"\", \"accessToken\": \"\", \"placeTypeId\": \"\", \"threshold\": \"\", \"apiKey\": \"\", \"placeType\": \"\", \"minTakenDate\": \"\", \"apiSecret\": \"\", \"contacts\": \"\", \"accessSecret\": \"\", \"minUploadDate\": \"\", \"maxTakenDate\": \"\", \"maxUploadDate\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "placesForContactsByWoeId",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/placesForContactsByWoeId",
            "description": "Return a list of the top 100 unique places clustered by a given placetype for a user's contacts.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "woeId",
                    "type": "STRING",
                    "description": "Where on Earth Id",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "threshold",
                    "type": "NUMBER",
                    "description": "The minimum number of photos that a place type must have to be included. ",
                    "default": ""
                },
                {
                    "name": "contacts",
                    "type": "SELECT",
                    "description": "Search your contacts. Either 'all' or 'ff' for just friends and family. (Default is all)",
                    "default": ""
                },
                {
                    "name": "minTakenDate",
                    "type": "DATEPICKER",
                    "description": "Minimum taken date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "placeTypeId",
                    "type": "SELECT",
                    "description": "The numeric ID for a specific place type to cluster photos by.",
                    "default": ""
                },
                {
                    "name": "minUploadDate",
                    "type": "DATEPICKER",
                    "description": "Minimum upload date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "maxUploadDate",
                    "type": "DATEPICKER",
                    "description": "Minimum upload date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "maxTakenDate",
                    "type": "DATEPICKER",
                    "description": "Minimum taken date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "placeType",
                    "type": "SELECT",
                    "description": "The name of place type to using as the starting point to search for places in a bounding box. ",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/placesForContactsByWoeId\"\nquerystring = {\"accessSecret\": \"\", \"threshold\": \"\", \"contacts\": \"\", \"minTakenDate\": \"\", \"placeTypeId\": \"\", \"apiKey\": \"\", \"minUploadDate\": \"\", \"maxUploadDate\": \"\", \"apiSecret\": \"\", \"maxTakenDate\": \"\", \"woeId\": \"\", \"accessToken\": \"\", \"placeType\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/placesForContactsByWoeId\"\nquerystring = {\"accessSecret\": \"\", \"threshold\": \"\", \"contacts\": \"\", \"minTakenDate\": \"\", \"placeTypeId\": \"\", \"apiKey\": \"\", \"minUploadDate\": \"\", \"maxUploadDate\": \"\", \"apiSecret\": \"\", \"maxTakenDate\": \"\", \"woeId\": \"\", \"accessToken\": \"\", \"placeType\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "placesForMachineTagsByPlaceId",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/placesForMachineTagsByPlaceId",
            "description": "Return a list of the top 100 unique places clustered by a given placetype for set of machine tags.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "placeId",
                    "type": "STRING",
                    "description": "A Flickr Places ID. ",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "machineTags",
                    "type": "LIST",
                    "description": "Photos with one or more of the tags listed will be returned. ",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "placeTypeId",
                    "type": "SELECT",
                    "description": "The numeric ID for a specific place type to cluster photos by.",
                    "default": ""
                },
                {
                    "name": "threshold",
                    "type": "NUMBER",
                    "description": "The minimum number of photos that a place type must have to be included. ",
                    "default": ""
                },
                {
                    "name": "maxUploadDate",
                    "type": "DATEPICKER",
                    "description": "Minimum upload date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "maxTakenDate",
                    "type": "DATEPICKER",
                    "description": "Minimum taken date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "machineTagMode",
                    "type": "SELECT",
                    "description": "Either 'any' for an OR combination of tags, or 'all' for an AND combination. Defaults to 'any' if not specified.",
                    "default": ""
                },
                {
                    "name": "minUploadDate",
                    "type": "DATEPICKER",
                    "description": "Minimum upload date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "minTakenDate",
                    "type": "DATEPICKER",
                    "description": "Minimum taken date. This should be in YYYY-MM-DD",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/placesForMachineTagsByPlaceId\"\nquerystring = {\"placeTypeId\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\", \"threshold\": \"\", \"placeId\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"maxUploadDate\": \"\", \"maxTakenDate\": \"\", \"machineTagMode\": \"\", \"minUploadDate\": \"\", \"minTakenDate\": \"\", \"machineTags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/placesForMachineTagsByPlaceId\"\nquerystring = {\"placeTypeId\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\", \"threshold\": \"\", \"placeId\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"maxUploadDate\": \"\", \"maxTakenDate\": \"\", \"machineTagMode\": \"\", \"minUploadDate\": \"\", \"minTakenDate\": \"\", \"machineTags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "placesForMachineTagsByWoeId",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/placesForMachineTagsByWoeId",
            "description": "Return a list of the top 100 unique places clustered by a given placetype for set of machine tags.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "woeId",
                    "type": "STRING",
                    "description": "Where on Earth ID. ",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "machineTags",
                    "type": "LIST",
                    "description": "Photos with one or more of the tags listed will be returned. ",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "threshold",
                    "type": "NUMBER",
                    "description": "The minimum number of photos that a place type must have to be included. ",
                    "default": ""
                },
                {
                    "name": "placeTypeId",
                    "type": "SELECT",
                    "description": "The numeric ID for a specific place type to cluster photos by.",
                    "default": ""
                },
                {
                    "name": "minTakenDate",
                    "type": "DATEPICKER",
                    "description": "Minimum taken date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "machineTagMode",
                    "type": "SELECT",
                    "description": "Either 'any' for an OR combination of tags, or 'all' for an AND combination. Defaults to 'any' if not specified.",
                    "default": ""
                },
                {
                    "name": "maxTakenDate",
                    "type": "DATEPICKER",
                    "description": "Minimum taken date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "maxUploadDate",
                    "type": "DATEPICKER",
                    "description": "Minimum upload date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "minUploadDate",
                    "type": "DATEPICKER",
                    "description": "Minimum upload date. This should be in YYYY-MM-DD",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/placesForMachineTagsByWoeId\"\nquerystring = {\"accessToken\": \"\", \"threshold\": \"\", \"placeTypeId\": \"\", \"woeId\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"minTakenDate\": \"\", \"machineTagMode\": \"\", \"maxTakenDate\": \"\", \"maxUploadDate\": \"\", \"minUploadDate\": \"\", \"machineTags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/placesForMachineTagsByWoeId\"\nquerystring = {\"accessToken\": \"\", \"threshold\": \"\", \"placeTypeId\": \"\", \"woeId\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"minTakenDate\": \"\", \"machineTagMode\": \"\", \"maxTakenDate\": \"\", \"maxUploadDate\": \"\", \"minUploadDate\": \"\", \"machineTags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "placesForTagsByPlaceId",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/placesForTagsByPlaceId",
            "description": "Return a list of the top 100 unique places clustered by a given placetype for set of tags.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "placeId",
                    "type": "STRING",
                    "description": "A Flickr Places ID. ",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "tags",
                    "type": "LIST",
                    "description": "Photos with one or more of the tags listed will be returned. ",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "placeTypeId",
                    "type": "SELECT",
                    "description": "The numeric ID for a specific place type to cluster photos by.",
                    "default": ""
                },
                {
                    "name": "threshold",
                    "type": "NUMBER",
                    "description": "The minimum number of photos that a place type must have to be included. ",
                    "default": ""
                },
                {
                    "name": "tagMode",
                    "type": "SELECT",
                    "description": "Either 'any' for an OR combination of tags, or 'all' for an AND combination. Defaults to 'any' if not specified.",
                    "default": ""
                },
                {
                    "name": "minUploadDate",
                    "type": "DATEPICKER",
                    "description": "Minimum upload date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "maxTakenDate",
                    "type": "DATEPICKER",
                    "description": "Minimum taken date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "maxUploadDate",
                    "type": "DATEPICKER",
                    "description": "Minimum upload date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "minTakenDate",
                    "type": "DATEPICKER",
                    "description": "Minimum taken date. This should be in YYYY-MM-DD",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/placesForTagsByPlaceId\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"placeId\": \"\", \"accessToken\": \"\", \"placeTypeId\": \"\", \"threshold\": \"\", \"apiSecret\": \"\", \"tagMode\": \"\", \"minUploadDate\": \"\", \"maxTakenDate\": \"\", \"maxUploadDate\": \"\", \"minTakenDate\": \"\", \"tags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/placesForTagsByPlaceId\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"placeId\": \"\", \"accessToken\": \"\", \"placeTypeId\": \"\", \"threshold\": \"\", \"apiSecret\": \"\", \"tagMode\": \"\", \"minUploadDate\": \"\", \"maxTakenDate\": \"\", \"maxUploadDate\": \"\", \"minTakenDate\": \"\", \"tags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "placesForTagsByWoeId",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/placesForTagsByWoeId",
            "description": "Return a list of the top 100 unique places clustered by a given placetype for set of tags.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "woeId",
                    "type": "STRING",
                    "description": "Where on Earth ID. ",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "tags",
                    "type": "LIST",
                    "description": "Photos with one or more of the tags listed will be returned. ",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "placeTypeId",
                    "type": "SELECT",
                    "description": "The numeric ID for a specific place type to cluster photos by.",
                    "default": ""
                },
                {
                    "name": "threshold",
                    "type": "NUMBER",
                    "description": "The minimum number of photos that a place type must have to be included. ",
                    "default": ""
                },
                {
                    "name": "minUploadDate",
                    "type": "DATEPICKER",
                    "description": "Minimum upload date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "minTakenDate",
                    "type": "DATEPICKER",
                    "description": "Minimum taken date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "maxTakenDate",
                    "type": "DATEPICKER",
                    "description": "Minimum taken date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "maxUploadDate",
                    "type": "DATEPICKER",
                    "description": "Minimum upload date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "tagMode",
                    "type": "SELECT",
                    "description": "Either 'any' for an OR combination of tags, or 'all' for an AND combination. Defaults to 'any' if not specified.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/placesForTagsByWoeId\"\nquerystring = {\"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"woeId\": \"\", \"placeTypeId\": \"\", \"threshold\": \"\", \"accessToken\": \"\", \"minUploadDate\": \"\", \"minTakenDate\": \"\", \"maxTakenDate\": \"\", \"maxUploadDate\": \"\", \"tagMode\": \"\", \"tags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/placesForTagsByWoeId\"\nquerystring = {\"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"woeId\": \"\", \"placeTypeId\": \"\", \"threshold\": \"\", \"accessToken\": \"\", \"minUploadDate\": \"\", \"minTakenDate\": \"\", \"maxTakenDate\": \"\", \"maxUploadDate\": \"\", \"tagMode\": \"\", \"tags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "placesForUserByPlaceId",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/placesForUserByPlaceId",
            "description": "Return a list of the top 100 unique places clustered by a given placetype for a user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "placeId",
                    "type": "STRING",
                    "description": "A Flickr Places ID. ",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "maxUploadDate",
                    "type": "DATEPICKER",
                    "description": "Minimum upload date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "maxTakenDate",
                    "type": "DATEPICKER",
                    "description": "Minimum taken date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "placeType",
                    "type": "SELECT",
                    "description": "The name of place type to using as the starting point to search for places in a bounding box. ",
                    "default": ""
                },
                {
                    "name": "minTakenDate",
                    "type": "DATEPICKER",
                    "description": "Minimum taken date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "placeTypeId",
                    "type": "SELECT",
                    "description": "The numeric ID for a specific place type to cluster photos by.",
                    "default": ""
                },
                {
                    "name": "minUploadDate",
                    "type": "DATEPICKER",
                    "description": "Minimum upload date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "threshold",
                    "type": "NUMBER",
                    "description": "The minimum number of photos that a place type must have to be included. ",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/placesForUserByPlaceId\"\nquerystring = {\"maxUploadDate\": \"\", \"apiSecret\": \"\", \"maxTakenDate\": \"\", \"accessToken\": \"\", \"placeType\": \"\", \"placeId\": \"\", \"apiKey\": \"\", \"minTakenDate\": \"\", \"placeTypeId\": \"\", \"accessSecret\": \"\", \"minUploadDate\": \"\", \"threshold\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/placesForUserByPlaceId\"\nquerystring = {\"maxUploadDate\": \"\", \"apiSecret\": \"\", \"maxTakenDate\": \"\", \"accessToken\": \"\", \"placeType\": \"\", \"placeId\": \"\", \"apiKey\": \"\", \"minTakenDate\": \"\", \"placeTypeId\": \"\", \"accessSecret\": \"\", \"minUploadDate\": \"\", \"threshold\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "placesForUserByWoeId",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/placesForUserByWoeId",
            "description": "Return a list of the top 100 unique places clustered by a given placetype for a user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "woeId",
                    "type": "STRING",
                    "description": "Where on Earth Id",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "threshold",
                    "type": "NUMBER",
                    "description": "The minimum number of photos that a place type must have to be included. ",
                    "default": ""
                },
                {
                    "name": "placeTypeId",
                    "type": "SELECT",
                    "description": "The numeric ID for a specific place type to cluster photos by.",
                    "default": ""
                },
                {
                    "name": "minTakenDate",
                    "type": "DATEPICKER",
                    "description": "Minimum taken date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "maxTakenDate",
                    "type": "DATEPICKER",
                    "description": "Minimum taken date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "maxUploadDate",
                    "type": "DATEPICKER",
                    "description": "Minimum upload date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "placeType",
                    "type": "SELECT",
                    "description": "The name of place type to using as the starting point to search for places in a bounding box. ",
                    "default": ""
                },
                {
                    "name": "minUploadDate",
                    "type": "DATEPICKER",
                    "description": "Minimum upload date. This should be in YYYY-MM-DD",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/placesForUserByWoeId\"\nquerystring = {\"accessSecret\": \"\", \"threshold\": \"\", \"placeTypeId\": \"\", \"minTakenDate\": \"\", \"maxTakenDate\": \"\", \"apiKey\": \"\", \"maxUploadDate\": \"\", \"placeType\": \"\", \"accessToken\": \"\", \"woeId\": \"\", \"minUploadDate\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/placesForUserByWoeId\"\nquerystring = {\"accessSecret\": \"\", \"threshold\": \"\", \"placeTypeId\": \"\", \"minTakenDate\": \"\", \"maxTakenDate\": \"\", \"apiKey\": \"\", \"maxUploadDate\": \"\", \"placeType\": \"\", \"accessToken\": \"\", \"woeId\": \"\", \"minUploadDate\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "rejectSuggestion",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/rejectSuggestion",
            "description": "Reject a suggestion for a photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "suggestionId",
                    "type": "STRING",
                    "description": "Id of the suggestion",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/rejectSuggestion\"\nquerystring = {\"apiKey\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"suggestionId\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/rejectSuggestion\"\nquerystring = {\"apiKey\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"suggestionId\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "removePhotoFromFavoritesList",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/removePhotoFromFavoritesList",
            "description": "Removes a photo from a user's favorites list.This method requires authentication with 'write' permission.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to remove from the user's favorites.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/removePhotoFromFavoritesList\"\nquerystring = {\"accessToken\": \"\", \"photoId\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/removePhotoFromFavoritesList\"\nquerystring = {\"accessToken\": \"\", \"photoId\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "removePhotoFromGallery",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/removePhotoFromGallery",
            "description": "Remove a photo from a gallery.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "galleryId",
                    "type": "STRING",
                    "description": "The ID of the gallery to remove a photo from.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The ID of the photo to remove from the gallery.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fullResponse",
                    "type": "STRING",
                    "description": "If specified, return updated details of the gallery the photo was removed from.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/removePhotoFromGallery\"\nquerystring = {\"apiKey\": \"\", \"galleryId\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"photoId\": \"\", \"accessToken\": \"\", \"fullResponse\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/removePhotoFromGallery\"\nquerystring = {\"apiKey\": \"\", \"galleryId\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"photoId\": \"\", \"accessToken\": \"\", \"fullResponse\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "removePhotoFromPhotoset",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/removePhotoFromPhotoset",
            "description": "Remove a photo from a photoset.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "photosetId",
                    "type": "STRING",
                    "description": "Id of the photoset",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/removePhotoFromPhotoset\"\nquerystring = {\"accessSecret\": \"\", \"photoId\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"photosetId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/removePhotoFromPhotoset\"\nquerystring = {\"accessSecret\": \"\", \"photoId\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"photosetId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "removePhotoGeoData",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/removePhotoGeoData",
            "description": "Removes the geo data associated with a photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo you want to remove location data from.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/removePhotoGeoData\"\nquerystring = {\"apiSecret\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"photoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/removePhotoGeoData\"\nquerystring = {\"apiSecret\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"photoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "removePhotosFromPhotoset",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/removePhotosFromPhotoset",
            "description": "Remove several photos from a photoset.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "photosetId",
                    "type": "STRING",
                    "description": "Id of the photoset",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photoIds",
                    "type": "LIST",
                    "description": "Photo ids to remove from the set",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/removePhotosFromPhotoset\"\nquerystring = {\"apiSecret\": \"\", \"apiKey\": \"\", \"photosetId\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\", \"photoIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/removePhotosFromPhotoset\"\nquerystring = {\"apiSecret\": \"\", \"apiKey\": \"\", \"photosetId\": \"\", \"accessToken\": \"\", \"accessSecret\": \"\", \"photoIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "removeSuggestion",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/removeSuggestion",
            "description": "Remove a suggestion for a photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "suggestionId",
                    "type": "STRING",
                    "description": "Id of the suggestion",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/removeSuggestion\"\nquerystring = {\"suggestionId\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/removeSuggestion\"\nquerystring = {\"suggestionId\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "removeTagFromPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/removeTagFromPhoto",
            "description": "Remove a tag from a photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "tagId",
                    "type": "STRING",
                    "description": "The tag to remove from the photo. This parameter should contain a tag id.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/removeTagFromPhoto\"\nquerystring = {\"apiKey\": \"\", \"tagId\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/removeTagFromPhoto\"\nquerystring = {\"apiKey\": \"\", \"tagId\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "reorderPhotosInPhotoset",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/reorderPhotosInPhotoset",
            "description": "List of photo ids. Photos that are not in the list will keep their original order",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photosetId",
                    "type": "STRING",
                    "description": "Id of the photoset",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "photoIds",
                    "type": "LIST",
                    "description": "Photo ids to remove from the set",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/reorderPhotosInPhotoset\"\nquerystring = {\"accessSecret\": \"\", \"accessToken\": \"\", \"photosetId\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"photoIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/reorderPhotosInPhotoset\"\nquerystring = {\"accessSecret\": \"\", \"accessToken\": \"\", \"photosetId\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"photoIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "replacePhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/replacePhoto",
            "description": "Replace photo",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photo",
                    "type": "FILE",
                    "description": "New photo",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/replacePhoto\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"photoId\": \"\", \"accessToken\": \"\", \"photo\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/replacePhoto\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"photoId\": \"\", \"accessToken\": \"\", \"photo\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "resolvePlaceId",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/resolvePlaceId",
            "description": "Find Flickr Places information by Place ID.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "placeId",
                    "type": "STRING",
                    "description": "A Flickr Places ID. ",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/resolvePlaceId\"\nquerystring = {\"accessToken\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"placeId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/resolvePlaceId\"\nquerystring = {\"accessToken\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"placeId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "resolvePlaceURL",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/resolvePlaceURL",
            "description": "Find Flickr Places information by Place URL.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "placeUrl",
                    "type": "STRING",
                    "description": "A Flickr Places URL. ",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/resolvePlaceURL\"\nquerystring = {\"apiSecret\": \"\", \"accessToken\": \"\", \"placeUrl\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/resolvePlaceURL\"\nquerystring = {\"apiSecret\": \"\", \"accessToken\": \"\", \"placeUrl\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "rotatePhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/rotatePhoto",
            "description": "Rotate a photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "degrees",
                    "type": "SELECT",
                    "description": "Degrees to rotate",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/rotatePhoto\"\nquerystring = {\"accessSecret\": \"\", \"degrees\": \"\", \"accessToken\": \"\", \"photoId\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/rotatePhoto\"\nquerystring = {\"accessSecret\": \"\", \"degrees\": \"\", \"accessToken\": \"\", \"photoId\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchGroup",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/searchGroup",
            "description": "Search for groups.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "The text to search for.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/searchGroup\"\nquerystring = {\"accessToken\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\", \"text\": \"\", \"page\": \"\", \"apiSecret\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/searchGroup\"\nquerystring = {\"accessToken\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\", \"text\": \"\", \"page\": \"\", \"apiSecret\": \"\", \"perPage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchPhotos",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/searchPhotos",
            "description": "Return a list of photos matching some criteria. Only photos visible to the calling user will be returned. To return private or semi-private photos, the caller must be authenticated with 'read' permissions, and have permission to view the photos. Unauthenticated calls will only return public photos.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "The NSID of the user who's photo to search. If this parameter isn't passed then everybody's public photos will be searched. A value of `me` will search against the calling user's photos for authenticated calls.",
                    "default": ""
                },
                {
                    "name": "minTakenDate",
                    "type": "DATEPICKER",
                    "description": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. ",
                    "default": ""
                },
                {
                    "name": "tagMode",
                    "type": "SELECT",
                    "description": "Either 'any' for an OR combination of tags, or 'all' for an AND combination. Defaults to 'any' if not specified.",
                    "default": ""
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "A free text search. Photos who's title, description or tags contain the text will be returned. You can exclude results that match a term by prepending it with a - character.",
                    "default": ""
                },
                {
                    "name": "maxTakenDate",
                    "type": "DATEPICKER",
                    "description": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. ",
                    "default": ""
                },
                {
                    "name": "minUploadDate",
                    "type": "DATEPICKER",
                    "description": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. ",
                    "default": ""
                },
                {
                    "name": "maxUploadDate",
                    "type": "DATEPICKER",
                    "description": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. ",
                    "default": ""
                },
                {
                    "name": "privacyFilter",
                    "type": "SELECT",
                    "description": "Return photos only matching a certain privacy level.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "SELECT",
                    "description": "The order in which to sort returned photos. Deafults to date-posted-desc (unless you are doing a radial geo query, in which case the default sorting is by ascending distance from the point specified).",
                    "default": ""
                },
                {
                    "name": "media",
                    "type": "SELECT",
                    "description": "Filter results by media type.All (default).",
                    "default": ""
                },
                {
                    "name": "safeSearch",
                    "type": "SELECT",
                    "description": "Safe search setting.See more in readme.",
                    "default": ""
                },
                {
                    "name": "machineTagMode",
                    "type": "SELECT",
                    "description": "Either 'any' for an OR combination of tags, or 'all' for an AND combination. Defaults to 'any' if not specified.",
                    "default": ""
                },
                {
                    "name": "radiusUnits",
                    "type": "SELECT",
                    "description": "The unit of measure when doing radial geo queries. Valid options are `mi` (miles) and `km` (kilometers). The default is `km`.",
                    "default": ""
                },
                {
                    "name": "contentType",
                    "type": "SELECT",
                    "description": "Content Type.See more in readme.",
                    "default": ""
                },
                {
                    "name": "woeId",
                    "type": "STRING",
                    "description": "A 32-bit identifier that uniquely represents spatial entities.See more in readme. ",
                    "default": ""
                },
                {
                    "name": "placeId",
                    "type": "STRING",
                    "description": "A Flickr place id. (not used if bbox argument is present).See more in readme. ",
                    "default": ""
                },
                {
                    "name": "inGallery",
                    "type": "SELECT",
                    "description": "Limit the scope of the search to only photos that are in a gallery? Default is false, search all photos.",
                    "default": ""
                },
                {
                    "name": "hasGeo",
                    "type": "STRING",
                    "description": "Any photo that has been geotagged, or if the value is `0` any photo that has not been geotagged.See more in readme. ",
                    "default": ""
                },
                {
                    "name": "isCommons",
                    "type": "SELECT",
                    "description": "Limit the scope of the search to only photos that are part of the Flickr Commons project. Default is false.",
                    "default": ""
                },
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "The id of a group who's pool to search. If specified, only matching photos posted to the group's pool will be returned.",
                    "default": ""
                },
                {
                    "name": "coordinates",
                    "type": "MAP",
                    "description": "A valid longitude and latitude in decimal format, for doing radial geo queries. ",
                    "default": ""
                },
                {
                    "name": "machineTags",
                    "type": "STRING",
                    "description": "Aside from passing in a fully formed machine tag.See more in readme.",
                    "default": ""
                },
                {
                    "name": "geoContext",
                    "type": "SELECT",
                    "description": "Geo context is a numeric value representing the photo's geotagginess beyond latitude and longitude. For example, you may wish to search for photos that were taken `indoors` or `outdoors`. ",
                    "default": ""
                },
                {
                    "name": "isGetty",
                    "type": "SELECT",
                    "description": "Limit the scope of the search to only photos that are for sale on Getty. Default is false.",
                    "default": ""
                },
                {
                    "name": "radius",
                    "type": "NUMBER",
                    "description": "A valid radius used for geo queries, greater than zero and less than 20 miles (or 32 kilometers), for use with point-based geo queries. The default value is 5 (km).",
                    "default": ""
                },
                {
                    "name": "contacts",
                    "type": "SELECT",
                    "description": "Search your contacts. Either 'all' or 'ff' for just friends and family. (Experimental)",
                    "default": ""
                },
                {
                    "name": "accuracy",
                    "type": "NUMBER",
                    "description": "Recorded accuracy level of the location information. Current range is 1-16.See more in readme.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "default": ""
                },
                {
                    "name": "perPage",
                    "type": "NUMBER",
                    "description": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "default": ""
                },
                {
                    "name": "tags",
                    "type": "LIST",
                    "description": "Photos with one or more of the tags listed will be returned.",
                    "default": ""
                },
                {
                    "name": "license",
                    "type": "LIST",
                    "description": "The license id for photos (for possible values see the flickr.photos.licenses.getInfo method). Multiple licenses may be comma-separated.",
                    "default": ""
                },
                {
                    "name": "bbox",
                    "type": "LIST",
                    "description": "The 4 values represent the bottom-left corner of the box and the top-right corner, minimum_longitude, minimum_latitude, maximum_longitude, maximum_latitude.See more in readme.",
                    "default": ""
                },
                {
                    "name": "extras",
                    "type": "LIST",
                    "description": "List of extra information to fetch for each returned record.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/searchPhotos\"\nquerystring = {\"userId\": \"\", \"apiKey\": \"\", \"minTakenDate\": \"\", \"tagMode\": \"\", \"text\": \"\", \"maxTakenDate\": \"\", \"minUploadDate\": \"\", \"maxUploadDate\": \"\", \"privacyFilter\": \"\", \"sort\": \"\", \"media\": \"\", \"safeSearch\": \"\", \"machineTagMode\": \"\", \"radiusUnits\": \"\", \"contentType\": \"\", \"woeId\": \"\", \"placeId\": \"\", \"inGallery\": \"\", \"hasGeo\": \"\", \"isCommons\": \"\", \"groupId\": \"\", \"coordinates\": \"\", \"machineTags\": \"\", \"geoContext\": \"\", \"isGetty\": \"\", \"radius\": \"\", \"contacts\": \"\", \"accuracy\": \"\", \"page\": \"\", \"perPage\": \"\", \"tags\": \"\", \"license\": \"\", \"bbox\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/searchPhotos\"\nquerystring = {\"userId\": \"\", \"apiKey\": \"\", \"minTakenDate\": \"\", \"tagMode\": \"\", \"text\": \"\", \"maxTakenDate\": \"\", \"minUploadDate\": \"\", \"maxUploadDate\": \"\", \"privacyFilter\": \"\", \"sort\": \"\", \"media\": \"\", \"safeSearch\": \"\", \"machineTagMode\": \"\", \"radiusUnits\": \"\", \"contentType\": \"\", \"woeId\": \"\", \"placeId\": \"\", \"inGallery\": \"\", \"hasGeo\": \"\", \"isCommons\": \"\", \"groupId\": \"\", \"coordinates\": \"\", \"machineTags\": \"\", \"geoContext\": \"\", \"isGetty\": \"\", \"radius\": \"\", \"contacts\": \"\", \"accuracy\": \"\", \"page\": \"\", \"perPage\": \"\", \"tags\": \"\", \"license\": \"\", \"bbox\": \"\", \"extras\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "setContentTypeOfPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/setContentTypeOfPhoto",
            "description": "Set the content type of a photo.This method requires authentication with 'write' permission.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to set the adultness of.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "contentType",
                    "type": "SELECT",
                    "description": "The content type of the photo. Must be one of: 1 for Photo, 2 for Screenshot, and 3 for Other.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/setContentTypeOfPhoto\"\nquerystring = {\"accessSecret\": \"\", \"apiSecret\": \"\", \"photoId\": \"\", \"apiKey\": \"\", \"contentType\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/setContentTypeOfPhoto\"\nquerystring = {\"accessSecret\": \"\", \"apiSecret\": \"\", \"photoId\": \"\", \"apiKey\": \"\", \"contentType\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "setGeoLocationForPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/setGeoLocationForPhoto",
            "description": "Sets the geo data (latitude and longitude and, optionally, the accuracy level) for a photo. Before users may assign location data to a photo they must define who, by default, may view that information. Users can edit this preference at http://www.flickr.com/account/geo/privacy/. If a user has not set this preference, the API method will return an error.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "coordinates",
                    "type": "MAP",
                    "description": "The latitude of the photos to be update whose valid range is -90 to 90.The longitude of the photos to be updated whose valid range is -180 to 180. ",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to set location data for.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "context",
                    "type": "SELECT",
                    "description": "Context is a numeric value representing the photo's geotagginess beyond latitude and longitude. For example, you may wish to indicate that a photo was taken `indoors` or `outdoors`. ",
                    "default": ""
                },
                {
                    "name": "accuracy",
                    "type": "NUMBER",
                    "description": "Recorded accuracy level of the photos to be updated. World level is 1, Country is ~3, Region ~6, City ~11, Street ~16. Current range is 1-16. Defaults to 16 if not specified.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/setGeoLocationForPhoto\"\nquerystring = {\"coordinates\": \"\", \"accessToken\": \"\", \"context\": \"\", \"accuracy\": \"\", \"photoId\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/setGeoLocationForPhoto\"\nquerystring = {\"coordinates\": \"\", \"accessToken\": \"\", \"context\": \"\", \"accuracy\": \"\", \"photoId\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "setGeoTagForPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/setGeoTagForPhoto",
            "description": "Indicate the state of a photo's geotagginess beyond latitude and longitude.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo you want to remove location data from.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "context",
                    "type": "SELECT",
                    "description": "Context is a numeric value representing the photo's geotagginess beyond latitude and longitude. For example, you may wish to indicate that a photo was taken `indoors` or `outdoors`. ",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/setGeoTagForPhoto\"\nquerystring = {\"apiSecret\": \"\", \"accessToken\": \"\", \"photoId\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\", \"context\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/setGeoTagForPhoto\"\nquerystring = {\"apiSecret\": \"\", \"accessToken\": \"\", \"photoId\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\", \"context\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "setMetaInformationForPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/setMetaInformationForPhoto",
            "description": "Set the meta information for a photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to set information for.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "The description for the photo. At least one of title or description must be set.",
                    "default": ""
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "The title for the photo. At least one of title or description must be set.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/setMetaInformationForPhoto\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"description\": \"\", \"accessToken\": \"\", \"photoId\": \"\", \"apiSecret\": \"\", \"title\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/setMetaInformationForPhoto\"\nquerystring = {\"apiKey\": \"\", \"accessSecret\": \"\", \"description\": \"\", \"accessToken\": \"\", \"photoId\": \"\", \"apiSecret\": \"\", \"title\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "setPermissionForGeoDataPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/setPermissionForGeoDataPhoto",
            "description": "Set the permission for who may view the geo data associated with a photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "isFamily",
                    "type": "SELECT",
                    "description": "1 to set viewing permissions for the photo's location data to family, 0 to set it to private.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "SELECT",
                    "description": "The id of the photo to get permissions for.",
                    "default": ""
                },
                {
                    "name": "isFriend",
                    "type": "SELECT",
                    "description": "1 to set viewing permissions for the photo's location data to friends, 0 to set it to private.",
                    "default": ""
                },
                {
                    "name": "isPublic",
                    "type": "SELECT",
                    "description": "1 to set viewing permissions for the photo's location data to public, 0 to set it to private.",
                    "default": ""
                },
                {
                    "name": "isContact",
                    "type": "SELECT",
                    "description": "1 to set viewing permissions for the photo's location data to contacts, 0 to set it to private.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/setPermissionForGeoDataPhoto\"\nquerystring = {\"isFamily\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"photoId\": \"\", \"isFriend\": \"\", \"isPublic\": \"\", \"isContact\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/setPermissionForGeoDataPhoto\"\nquerystring = {\"isFamily\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"photoId\": \"\", \"isFriend\": \"\", \"isPublic\": \"\", \"isContact\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "setPermissionsForPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/setPermissionsForPhoto",
            "description": "Set permissions for a photo.This method requires authentication with 'write' permission.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to set information for.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "isFriend",
                    "type": "SELECT",
                    "description": "1 to make the photo visible to friends when private, 0 to not.",
                    "default": ""
                },
                {
                    "name": "isPublic",
                    "type": "SELECT",
                    "description": "1 to set the photo to public, 0 to set it to private.",
                    "default": ""
                },
                {
                    "name": "permComment",
                    "type": "SELECT",
                    "description": "Who can add comments to the photo and it's notes.0: nobody 1: friends & family 2: contacts 3: everybody ",
                    "default": ""
                },
                {
                    "name": "isFamily",
                    "type": "SELECT",
                    "description": "1 to make the photo visible to family when private, 0 to not.",
                    "default": ""
                },
                {
                    "name": "permAddmeta",
                    "type": "SELECT",
                    "description": "who can add notes and tags to the photo.0: nobody 1: friends & family 2: contacts 3: everybody ",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/setPermissionsForPhoto\"\nquerystring = {\"isFriend\": \"\", \"accessToken\": \"\", \"photoId\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"isPublic\": \"\", \"apiKey\": \"\", \"permComment\": \"\", \"isFamily\": \"\", \"permAddmeta\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/setPermissionsForPhoto\"\nquerystring = {\"isFriend\": \"\", \"accessToken\": \"\", \"photoId\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"isPublic\": \"\", \"apiKey\": \"\", \"permComment\": \"\", \"isFamily\": \"\", \"permAddmeta\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "setPhotoDates",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/setPhotoDates",
            "description": "Set one or both of the dates for a photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to edit dates for.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "datePosted",
                    "type": "DATEPICKER",
                    "description": "The date the photo was uploaded to flickr",
                    "default": ""
                },
                {
                    "name": "dateTaken",
                    "type": "DATEPICKER",
                    "description": "The date the photo was taken.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/setPhotoDates\"\nquerystring = {\"accessSecret\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"datePosted\": \"\", \"dateTaken\": \"\", \"photoId\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/setPhotoDates\"\nquerystring = {\"accessSecret\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"datePosted\": \"\", \"dateTaken\": \"\", \"photoId\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "setPhotoLicense",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/setPhotoLicense",
            "description": "Sets the license for a photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "licenseId",
                    "type": "STRING",
                    "description": "Id of the license",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/setPhotoLicense\"\nquerystring = {\"apiKey\": \"\", \"photoId\": \"\", \"accessSecret\": \"\", \"licenseId\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/setPhotoLicense\"\nquerystring = {\"apiKey\": \"\", \"photoId\": \"\", \"accessSecret\": \"\", \"licenseId\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "setPrimaryPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/setPrimaryPhoto",
            "description": "Set photoset primary photo",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                },
                {
                    "name": "photosetId",
                    "type": "STRING",
                    "description": "Id of the photoset",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/setPrimaryPhoto\"\nquerystring = {\"apiSecret\": \"\", \"photoId\": \"\", \"photosetId\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/setPrimaryPhoto\"\nquerystring = {\"apiSecret\": \"\", \"photoId\": \"\", \"photosetId\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "setSafetyLevelOfPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/setSafetyLevelOfPhoto",
            "description": "Set the safety level of a photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to set information for.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "safetyLevel",
                    "type": "SELECT",
                    "description": "The safety level of the photo. Must be one of: 1 for Safe, 2 for Moderate, and 3 for Restricted.",
                    "default": ""
                },
                {
                    "name": "hidden",
                    "type": "SELECT",
                    "description": "Whether or not to additionally hide the photo from public searches. Must be either 1 for Yes or 0 for No.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/setSafetyLevelOfPhoto\"\nquerystring = {\"safetyLevel\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\", \"hidden\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"photoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/setSafetyLevelOfPhoto\"\nquerystring = {\"safetyLevel\": \"\", \"accessSecret\": \"\", \"apiKey\": \"\", \"hidden\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"photoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "setTagsForPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/setTagsForPhoto",
            "description": "Set the tags for a photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The id of the photo to set information for.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "tags",
                    "type": "LIST",
                    "description": "All tags for the photo (as a single space-delimited string).",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/setTagsForPhoto\"\nquerystring = {\"apiKey\": \"\", \"photoId\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"tags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/setTagsForPhoto\"\nquerystring = {\"apiKey\": \"\", \"photoId\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"accessToken\": \"\", \"tags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "subscribe",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/subscribe",
            "description": "Subscribe to event",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "callback",
                    "type": "STRING",
                    "description": "The url for the subscription endpoint.",
                    "default": ""
                },
                {
                    "name": "verify",
                    "type": "SELECT",
                    "description": "The verification mode, either sync or async.",
                    "default": ""
                },
                {
                    "name": "topic",
                    "type": "STRING",
                    "description": "The type of subscription.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "leaseSeconds",
                    "type": "NUMBER",
                    "description": "Number of seconds for which the subscription will be valid. Legal values are 60 to 86400",
                    "default": ""
                },
                {
                    "name": "verifyToken",
                    "type": "STRING",
                    "description": "The verification token to be echoed back to the subscriber during the verification callback",
                    "default": ""
                },
                {
                    "name": "woeIds",
                    "type": "NUMBER",
                    "description": "A 32-bit integer for a Where on Earth ID. Only valid if topic is geo. ",
                    "default": ""
                },
                {
                    "name": "accuracy",
                    "type": "NUMBER",
                    "description": "Defines the minimum accuracy required for photos to be included in a subscription. Only valid if topic is geo Legal values are 1-16, default is 1 (i.e. any accuracy level).",
                    "default": ""
                },
                {
                    "name": "coordinates",
                    "type": "MAP",
                    "description": "Defines the coordinates for a radial query centered around (lat, lon).",
                    "default": ""
                },
                {
                    "name": "radiusUnits",
                    "type": "SELECT",
                    "description": "Defines the units for the radius parameter. Only valid if topic is geo. Options are mi and km. Default is km. ",
                    "default": ""
                },
                {
                    "name": "radius",
                    "type": "STRING",
                    "description": "A radius value, in the units defined by radiusUnits. ",
                    "default": ""
                },
                {
                    "name": "placeIds",
                    "type": "LIST",
                    "description": "A list of Flickr place IDs. Only valid if topic is geo. ",
                    "default": ""
                },
                {
                    "name": "nsIds",
                    "type": "LIST",
                    "description": "A list of nsids representing Flickr Commons institutions",
                    "default": ""
                },
                {
                    "name": "tags",
                    "type": "LIST",
                    "description": "A list of strings to be used for tag subscriptions. ",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/subscribe\"\nquerystring = {\"leaseSeconds\": \"\", \"verifyToken\": \"\", \"accessSecret\": \"\", \"woeIds\": \"\", \"callback\": \"\", \"verify\": \"\", \"topic\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"accuracy\": \"\", \"coordinates\": \"\", \"radiusUnits\": \"\", \"radius\": \"\", \"placeIds\": \"\", \"nsIds\": \"\", \"tags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/subscribe\"\nquerystring = {\"leaseSeconds\": \"\", \"verifyToken\": \"\", \"accessSecret\": \"\", \"woeIds\": \"\", \"callback\": \"\", \"verify\": \"\", \"topic\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"accuracy\": \"\", \"coordinates\": \"\", \"radiusUnits\": \"\", \"radius\": \"\", \"placeIds\": \"\", \"nsIds\": \"\", \"tags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "suggestLocation",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/suggestLocation",
            "description": "Suggest a geotagged location for a photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "Id of the photo",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "coordinates",
                    "type": "MAP",
                    "description": "Defines the coordinates for a radial query centered around (lat, lon).",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "note",
                    "type": "STRING",
                    "description": "A short note or history to include with the suggestion.",
                    "default": ""
                },
                {
                    "name": "accuracy",
                    "type": "NUMBER",
                    "description": "Defines the accuracy",
                    "default": ""
                },
                {
                    "name": "woeId",
                    "type": "NUMBER",
                    "description": "A 32-bit integer for a Where on Earth ID. ",
                    "default": ""
                },
                {
                    "name": "placeId",
                    "type": "STRING",
                    "description": "A Flickr Places ID. ",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/suggestLocation\"\nquerystring = {\"photoId\": \"\", \"note\": \"\", \"accuracy\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"coordinates\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"woeId\": \"\", \"placeId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/suggestLocation\"\nquerystring = {\"photoId\": \"\", \"note\": \"\", \"accuracy\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"coordinates\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"woeId\": \"\", \"placeId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "tagsForPlaceByPlaceId",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/tagsForPlaceByPlaceId",
            "description": "Return a list of the top 100 unique tags for a Flickr Places",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "placeId",
                    "type": "STRING",
                    "description": "A Flickr Places ID. ",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "minUploadDate",
                    "type": "DATEPICKER",
                    "description": "Minimum upload date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "maxUploadDate",
                    "type": "DATEPICKER",
                    "description": "Minimum upload date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "minTakenDate",
                    "type": "DATEPICKER",
                    "description": "Minimum taken date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "maxTakenDate",
                    "type": "DATEPICKER",
                    "description": "Minimum taken date. This should be in YYYY-MM-DD",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/tagsForPlaceByPlaceId\"\nquerystring = {\"accessSecret\": \"\", \"minUploadDate\": \"\", \"apiSecret\": \"\", \"placeId\": \"\", \"maxUploadDate\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"minTakenDate\": \"\", \"maxTakenDate\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/tagsForPlaceByPlaceId\"\nquerystring = {\"accessSecret\": \"\", \"minUploadDate\": \"\", \"apiSecret\": \"\", \"placeId\": \"\", \"maxUploadDate\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"minTakenDate\": \"\", \"maxTakenDate\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "tagsForPlaceByWoeId",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/tagsForPlaceByWoeId",
            "description": "Return a list of the top 100 unique tags for a Where on Earth (WOE) ID",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "woeId",
                    "type": "STRING",
                    "description": "Where on Earth Id",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "minUploadDate",
                    "type": "DATEPICKER",
                    "description": "Minimum upload date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "maxUploadDate",
                    "type": "DATEPICKER",
                    "description": "Minimum upload date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "minTakenDate",
                    "type": "DATEPICKER",
                    "description": "Minimum taken date. This should be in YYYY-MM-DD",
                    "default": ""
                },
                {
                    "name": "maxTakenDate",
                    "type": "DATEPICKER",
                    "description": "Minimum taken date. This should be in YYYY-MM-DD",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/tagsForPlaceByWoeId\"\nquerystring = {\"accessSecret\": \"\", \"minUploadDate\": \"\", \"woeId\": \"\", \"maxUploadDate\": \"\", \"minTakenDate\": \"\", \"maxTakenDate\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/tagsForPlaceByWoeId\"\nquerystring = {\"accessSecret\": \"\", \"minUploadDate\": \"\", \"woeId\": \"\", \"maxUploadDate\": \"\", \"minTakenDate\": \"\", \"maxTakenDate\": \"\", \"apiKey\": \"\", \"accessToken\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "testEcho",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/testEcho",
            "description": "A testing method which echo's all parameters back in the response.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/testEcho\"\nquerystring = {\"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/testEcho\"\nquerystring = {\"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "testLogin",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/testLogin",
            "description": "A testing method which checks if the caller is logged in then returns their username.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/testLogin\"\nquerystring = {\"accessToken\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/testLogin\"\nquerystring = {\"accessToken\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateCommentForGalleryPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/updateCommentForGalleryPhoto",
            "description": "Edit the comment for a gallery photo.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "comment",
                    "type": "STRING",
                    "description": "The updated comment the photo.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "galleryId",
                    "type": "STRING",
                    "description": "The ID of the gallery to add a photo to.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "photoId",
                    "type": "STRING",
                    "description": "The photo ID to add to the gallery.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/updateCommentForGalleryPhoto\"\nquerystring = {\"comment\": \"\", \"apiKey\": \"\", \"galleryId\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"photoId\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/updateCommentForGalleryPhoto\"\nquerystring = {\"comment\": \"\", \"apiKey\": \"\", \"galleryId\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"photoId\": \"\", \"accessSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateGalleryMetadata",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/updateGalleryMetadata",
            "description": "Modify the meta-data for a gallery.This method requires authentication with 'write' permission.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "The name of the gallery.",
                    "default": ""
                },
                {
                    "name": "galleryId",
                    "type": "STRING",
                    "description": "The gallery ID to update.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "A short description for the gallery.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/updateGalleryMetadata\"\nquerystring = {\"accessToken\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"title\": \"\", \"galleryId\": \"\", \"description\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/updateGalleryMetadata\"\nquerystring = {\"accessToken\": \"\", \"apiKey\": \"\", \"accessSecret\": \"\", \"title\": \"\", \"galleryId\": \"\", \"description\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updatePhotoComment",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/updatePhotoComment",
            "description": "Edit the text of a comment as the currently authenticated user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "commentText",
                    "type": "STRING",
                    "description": "Update the comment to this text.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "commentId",
                    "type": "STRING",
                    "description": "The id of the comment to edit.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/updatePhotoComment\"\nquerystring = {\"commentText\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"commentId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/updatePhotoComment\"\nquerystring = {\"commentText\": \"\", \"accessSecret\": \"\", \"apiSecret\": \"\", \"apiKey\": \"\", \"commentId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updatePhotosInGallery",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/updatePhotosInGallery",
            "description": "Modify the photos in a gallery. Use this method to add, remove and re-order photos.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "primaryPhotoId",
                    "type": "STRING",
                    "description": "The id of the photo to use as the 'primary' photo for the gallery. This id must also be passed along in photo_ids list argument.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "galleryId",
                    "type": "STRING",
                    "description": "The ID of the gallery to add a photo to.",
                    "default": ""
                },
                {
                    "name": "photoIds",
                    "type": "LIST",
                    "description": "List of photo ids to include in the gallery. They will appear in the set in the order sent. This list must contain the primary photo id. This list of photos replaces the existing list.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/updatePhotosInGallery\"\nquerystring = {\"primaryPhotoId\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"galleryId\": \"\", \"photoIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/updatePhotosInGallery\"\nquerystring = {\"primaryPhotoId\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"apiSecret\": \"\", \"accessSecret\": \"\", \"galleryId\": \"\", \"photoIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "uploadPhoto",
            "url": "https://FlickrdidenkoradionV1.p.rapidapi.com/uploadPhoto",
            "description": "Upload Photo to Flickr.This method requires authentication with 'write' permission.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "photoUrl",
                    "type": "FILE",
                    "description": "Url of the photo.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "ApiSecret of the your app.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "accessToken from the getAccessToken method.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "ApiKey of the your app.",
                    "default": ""
                },
                {
                    "name": "accessSecret",
                    "type": "STRING",
                    "description": "accessSecret from the getAccessToken method.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "A description of the photo. May contain some limited HTML.",
                    "default": ""
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "The title of the photo.",
                    "default": ""
                },
                {
                    "name": "isFamily",
                    "type": "SELECT",
                    "description": "1 to set viewing permissions for the photo's location data to family, 0 to set it to private.",
                    "default": ""
                },
                {
                    "name": "contentType",
                    "type": "SELECT",
                    "description": "Set to 1 for Photo, 2 for Screenshot, or 3 for Other. If omitted , will be set to user's default",
                    "default": ""
                },
                {
                    "name": "isFriend",
                    "type": "SELECT",
                    "description": "1 to set viewing permissions for the photo's location data to friends, 0 to set it to private.",
                    "default": ""
                },
                {
                    "name": "hidden",
                    "type": "SELECT",
                    "description": "Set to 1 to keep the photo in global search results, 2 to hide from public searches. If omitted, will be set based to user's default",
                    "default": ""
                },
                {
                    "name": "safetyLevel",
                    "type": "SELECT",
                    "description": "Set to 1 for Safe, 2 for Moderate, or 3 for Restricted. If omitted or an invalid value is passed, will be set to user's default",
                    "default": ""
                },
                {
                    "name": "isPublic",
                    "type": "SELECT",
                    "description": "1 to set viewing permissions for the photo's location data to public, 0 to set it to private.",
                    "default": ""
                },
                {
                    "name": "tags",
                    "type": "LIST",
                    "description": "The tags to add to the photo.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/uploadPhoto\"\nquerystring = {\"photoUrl\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"description\": \"\", \"title\": \"\", \"accessSecret\": \"\", \"isFamily\": \"\", \"contentType\": \"\", \"isFriend\": \"\", \"hidden\": \"\", \"safetyLevel\": \"\", \"isPublic\": \"\", \"tags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FlickrdidenkoradionV1.p.rapidapi.com/uploadPhoto\"\nquerystring = {\"photoUrl\": \"\", \"apiSecret\": \"\", \"accessToken\": \"\", \"apiKey\": \"\", \"description\": \"\", \"title\": \"\", \"accessSecret\": \"\", \"isFamily\": \"\", \"contentType\": \"\", \"isFriend\": \"\", \"hidden\": \"\", \"safetyLevel\": \"\", \"isPublic\": \"\", \"tags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FlickrdidenkoradionV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}