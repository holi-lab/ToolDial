{
    "tool_name": "ThingScale IoT message broker",
    "tool_description": "ThingScale provides a messaging system for IoT connected devices. The API is used to retrieve events, users, devices, sessions, and channels in JSON format. ThingScale supports TLS payload encryption, scheme-less and cyclic data sampling, and trigger-based notifications. MQTT is the preferred messaging protocol.",
    "title": "ThingScale IoT message broker",
    "pricing": "FREE",
    "score": null,
    "home_url": "https://rapidapi.com/sensinics_tmura/api/thingscale-iot-message-broker/",
    "host": "sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com",
    "api_list": [
        {
            "name": "Retrieve user information",
            "url": "https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/user/",
            "description": "User service provides the management functions of the user profile.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/user/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Update a Device",
            "url": "https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/device/{device_id}",
            "description": "Device service manages the device registry of ThingScale, aggregates information about all of the devices.\nEach device accumulates the time series data to have been created by the channel (see Channel service).\nWhen the access of time series data, use Stream service(see Stream service).",
            "method": "PUT",
            "required_parameters": [
                {
                    "name": "body",
                    "type": "NUMBER",
                    "description": "",
                    "default": "Some()"
                },
                {
                    "name": "device_id",
                    "type": "NUMBER",
                    "description": "The ID of the device.",
                    "default": "Some()"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/device/{device_id}\"\nquerystring = {\"body\": body}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com\"\n}\n\nresponse = requests.put(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Update a User information",
            "url": "https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/user/",
            "description": "User service provides the management functions of the user profile.",
            "method": "PUT",
            "required_parameters": [
                {
                    "name": "body",
                    "type": "NUMBER",
                    "description": "",
                    "default": "Some()"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/user/\"\nquerystring = {\"body\": body}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com\"\n}\n\nresponse = requests.put(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Delete a Device",
            "url": "https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/device/{device_id}",
            "description": "Device service manages the device registry of ThingScale, aggregates information about all of the devices.\nEach device accumulates the time series data to have been created by the channel (see Channel service).\nWhen the access of time series data, use Stream service(see Stream service).",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "device_id",
                    "type": "NUMBER",
                    "description": "The ID of the device.",
                    "default": "Some()"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/device/{device_id}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Delete an Event",
            "url": "https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/event/{event_id}",
            "description": "Event service is by setting a threshold for the stream of the channel, make the notification to the email or an external system.\nBefore Event service use, please make sure that the stream to the channel is stored.",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "event_id",
                    "type": "NUMBER",
                    "description": "The ID of the event.",
                    "default": "Some()"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/event/{event_id}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Create a New Event",
            "url": "https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/event/{event_id}",
            "description": "Event service is by setting a threshold for the stream of the channel, make the notification to the email or an external system.\nBefore Event service use, please make sure that the stream to the channel is stored.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "event_id",
                    "type": "NUMBER",
                    "description": "",
                    "default": "Some()"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/event/{event_id}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Update a Channel",
            "url": "https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/channel/{channel_id}",
            "description": "<table>\n<th>Special Header<th>Description\n<tr>\n<td>X-TAGNAME (string) <td>tagname as string\n</table>\n(NOTE)Tag name is created when you want to put data containing tags in the channel.",
            "method": "PUT",
            "required_parameters": [
                {
                    "name": "body",
                    "type": "NUMBER",
                    "description": "",
                    "default": "Some()"
                },
                {
                    "name": "channel_id",
                    "type": "NUMBER",
                    "description": "The ID of the channel.",
                    "default": "Some()"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/channel/{channel_id}\"\nquerystring = {\"body\": body}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com\"\n}\n\nresponse = requests.put(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Delete a Channel",
            "url": "https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/channel/{channel_id}",
            "description": "<table>\n<th>Special Header<th>Description\n<tr>\n<td>X-TAGNAME (string) <td>tagname as string\n</table>\n(NOTE)Tag name is created when you want to put data containing tags in the channel.",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "channel_id",
                    "type": "NUMBER",
                    "description": "The ID of the channel.",
                    "default": "Some()"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/channel/{channel_id}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "List All Devices",
            "url": "https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/device/{device_id}",
            "description": "Device service manages the device registry of ThingScale, aggregates information about all of the devices.\nEach device accumulates the time series data to have been created by the channel (see Channel service).\nWhen the access of time series data, use Stream service(see Stream service).",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "device_id",
                    "type": "STRING",
                    "description": "The ID of the device.",
                    "default": "Some()"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/device/{device_id}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Publish message",
            "url": "https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/publish/{device_id}",
            "description": "Publish service provides message delivery function to the device from ThingScale.<br>\nBy Publish service, it will deliver the command to the device that are subscribed to the MQTT broker of ThingScale.\nDestination MQTT Topic\n<table>\n<th>Topic<th>Payload\n<tr>\n<td>[device_token]/[device_id]/subscribe<td>contents of \"payload\"\n</table>\n(NOTE)Messages that are commonly published to the device includes a control command .\n<strong>About MQTT Topic/message</strong><br>\nIn the Publish Service, device token corresponding to the device ID is published embedded in MQTT topic.<br>\nOn the device side, it is possible to receive a message from the Publish Service by to subscribe to MQTT broker ThingScale the following topics.<br>\nMessage (payload) Please specify in the freestyle.(ThingScale does not concern the content of the payload.)\n<strong>About Destination Device</strong><br>\nDevice that receives the message, prior to the device API: You must have been registered at (see Device service list).<br>\nIn fact MQTT publish API returns an error if the ThingScale device registry is wrong if the device ID does not exist will not be performed.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "device_id",
                    "type": "NUMBER",
                    "description": "The ID of the device.",
                    "default": "Some()"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/publish/{device_id}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Create a New Channel",
            "url": "https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/channel/{channel_id}",
            "description": "Channel service is accessing for time series data storage channel management when it is associated with the device.\nTo access the stream data stored in the channel, use Stream service(see Stream service).",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "channel_id",
                    "type": "NUMBER",
                    "description": "The ID of the channel.",
                    "default": "Some()"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/channel/{channel_id}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "List events",
            "url": "https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/event/{event_id}",
            "description": "Event service is by setting a threshold for the stream of the channel, make the notification to the email or an external system.\nBefore Event service use, please make sure that the stream to the channel is stored.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "event_id",
                    "type": "NUMBER",
                    "description": "The ID of the event.",
                    "default": "Some()"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/event/{event_id}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "List active sessions",
            "url": "https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/session",
            "description": "Session service provides showing pub/sub status to ThingScale's built-in message broker.<br>\nBoth MQTT and WebSocket clients shown in session.\n<strong>About how to see the session</strong><br>\nIf Publish from the device to the message broker is not a persistent session and disconnects the payload every time it is sent out, the session will be terminated in a very short period of time, so it is not possible to catch the session in most cases.<br>\nWhen a device subscribes to a message broker, it is inevitably a persistent session so it can be caught until the session ends.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/session\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "List All channels",
            "url": "https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/channel/{channel_id}",
            "description": "<table>\n<th>Special Header<th>Description\n<tr>\n<td>X-WITHTAG (boolean) <td>show tags with channel\n</table>\n(NOTE)Tag name is created when you want to put data containing tags in the channel.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "channel_id",
                    "type": "NUMBER",
                    "description": "The ID of the channel.",
                    "default": "Some()"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/channel/{channel_id}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Write streams",
            "url": "https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/stream/{channel_id}",
            "description": "Stream service provides access to time-series data that has been accumulated in the channel.\nBefore you can use the Stream service, you must have completed the following steps.\n<ol>\n<li>Creating a new device that generates a stream (see: Stream service)\n<li>Create a new channel that contains a stream (see: Channel service)\n<li>Device and channel association (see: Device service)\n</ol>",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "body",
                    "type": "NUMBER",
                    "description": "",
                    "default": "Some()"
                },
                {
                    "name": "channel_id",
                    "type": "NUMBER",
                    "description": "",
                    "default": "Some()"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/stream/{channel_id}\"\nquerystring = {\"body\": body}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Update an Event",
            "url": "https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/event/{event_id}",
            "description": "Event service is by setting a threshold for the stream of the channel, make the notification to the email or an external system.\nBefore Event service use, please make sure that the stream to the channel is stored.",
            "method": "PUT",
            "required_parameters": [
                {
                    "name": "body",
                    "type": "NUMBER",
                    "description": "",
                    "default": "Some()"
                },
                {
                    "name": "event_id",
                    "type": "NUMBER",
                    "description": "The ID of the event.",
                    "default": "Some()"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/event/{event_id}\"\nquerystring = {\"body\": body}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com\"\n}\n\nresponse = requests.put(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Create a New Device",
            "url": "https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/device/Some()",
            "description": "Device service manages the device registry of ThingScale, aggregates information about all of the devices.\nEach device accumulates the time series data to have been created by the channel (see Channel service).\nWhen the access of time series data, use Stream service(see Stream service).",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "device_id",
                    "type": "NUMBER",
                    "description": "The ID of the device.",
                    "default": "Some()"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/device/Some()\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/device/{device_id}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Create a New Event",
            "url": "https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/event/Some()",
            "description": "Event service is by setting a threshold for the stream of the channel, make the notification to the email or an external system.\nBefore Event service use, please make sure that the stream to the channel is stored.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "event_id",
                    "type": "NUMBER",
                    "description": "",
                    "default": "Some()"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/event/Some()\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/event/{event_id}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Publish message",
            "url": "https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/publish/Some()",
            "description": "Publish service provides message delivery function to the device from ThingScale.<br>\nBy Publish service, it will deliver the command to the device that are subscribed to the MQTT broker of ThingScale.\nDestination MQTT Topic\n<table>\n<th>Topic<th>Payload\n<tr>\n<td>[device_token]/[device_id]/subscribe<td>contents of \"payload\"\n</table>\n(NOTE)Messages that are commonly published to the device includes a control command .\n<strong>About MQTT Topic/message</strong><br>\nIn the Publish Service, device token corresponding to the device ID is published embedded in MQTT topic.<br>\nOn the device side, it is possible to receive a message from the Publish Service by to subscribe to MQTT broker ThingScale the following topics.<br>\nMessage (payload) Please specify in the freestyle.(ThingScale does not concern the content of the payload.)\n<strong>About Destination Device</strong><br>\nDevice that receives the message, prior to the device API: You must have been registered at (see Device service list).<br>\nIn fact MQTT publish API returns an error if the ThingScale device registry is wrong if the device ID does not exist will not be performed.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "device_id",
                    "type": "NUMBER",
                    "description": "The ID of the device.",
                    "default": "Some()"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/publish/Some()\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/publish/{device_id}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Create a New Channel",
            "url": "https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/channel/Some()",
            "description": "Channel service is accessing for time series data storage channel management when it is associated with the device.\nTo access the stream data stored in the channel, use Stream service(see Stream service).",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "channel_id",
                    "type": "NUMBER",
                    "description": "The ID of the channel.",
                    "default": "Some()"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/channel/Some()\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/channel/{channel_id}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Write streams",
            "url": "https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/stream/Some()",
            "description": "Stream service provides access to time-series data that has been accumulated in the channel.\nBefore you can use the Stream service, you must have completed the following steps.\n<ol>\n<li>Creating a new device that generates a stream (see: Stream service)\n<li>Create a new channel that contains a stream (see: Channel service)\n<li>Device and channel association (see: Device service)\n</ol>",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "body",
                    "type": "NUMBER",
                    "description": "",
                    "default": "Some()"
                },
                {
                    "name": "channel_id",
                    "type": "NUMBER",
                    "description": "",
                    "default": "Some()"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/stream/Some()\"\nquerystring = {\"body\": \"Some()\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com/stream/{channel_id}\"\nquerystring = {\"body\": \"Some()\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sensinics_tmura-thingscale-iot-message-broker-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}