{
    "product_id": "53aa5759e4b0b60946a2fafc",
    "tool_description": "UP is a wristband and app that tracks how you sleep, move and eat\u2014then helps you use that information to feel your best.  The UP Platform documentation provides information related to establishing and maintaining an API connection with UP. The purpose of this API is to enable the exchange of select data in order to extend and augment the UP user experience and support complementary services. This can include data aggregation and visualization, gaming, marketing, rewards provisioning, and more.",
    "home_url": "https://rapidapi.com/community/api/jawbone-up/",
    "name": "Jawbone UP",
    "title": "Jawbone UP",
    "pricing": "FREE",
    "tool_name": "Jawbone UP",
    "score": null,
    "host": "community-jawbone-up.p.rapidapi.com",
    "api_list": [
        {
            "name": "Create workout",
            "url": "https://community-jawbone-up.p.rapidapi.com/users/@me/workouts",
            "description": "",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "time_created",
                    "type": "STRING",
                    "description": "[required] Start time of the workout (seconds since the epoch)",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sub_type",
                    "type": "STRING",
                    "description": "Type of workout.  See https://jawbone.com/up/developer/endpoints/workouts#workout_list",
                    "default": ""
                },
                {
                    "name": "time_completed",
                    "type": "STRING",
                    "description": "End time of the workout (seconds since the epoch)",
                    "default": ""
                },
                {
                    "name": "tz",
                    "type": "STRING",
                    "description": "Timezone where the workout was created.",
                    "default": ""
                },
                {
                    "name": "calories",
                    "type": "STRING",
                    "description": "Number of calories burned during the workout.",
                    "default": ""
                },
                {
                    "name": "distance",
                    "type": "STRING",
                    "description": "Distance traveled during the workout, in meters.",
                    "default": ""
                },
                {
                    "name": "image_url",
                    "type": "STRING",
                    "description": "URL with an image of the workout.",
                    "default": ""
                },
                {
                    "name": "intensity",
                    "type": "STRING",
                    "description": "Intensity of the workout (1 = easy, 2 = moderate, 3 = intermediate, 4 = difficult, 5 = hard).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://community-jawbone-up.p.rapidapi.com/users/@me/workouts\"\nquerystring = {\"sub_type\": \"\", \"time_created\": \"\", \"time_completed\": \"\", \"tz\": \"\", \"calories\": \"\", \"distance\": \"\", \"image_url\": \"\", \"intensity\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-jawbone-up.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-jawbone-up.p.rapidapi.com/users/@me/workouts\"\nquerystring = {\"sub_type\": \"\", \"time_created\": \"\", \"time_completed\": \"\", \"tz\": \"\", \"calories\": \"\", \"distance\": \"\", \"image_url\": \"\", \"intensity\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-jawbone-up.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Creates a new generic event for the user",
            "url": "https://community-jawbone-up.p.rapidapi.com/users/@me/generic_events",
            "description": "Generic event is recommended as a means to post app specific user actions to the user's feed.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "Name of the event (used in the feed story).",
                    "default": ""
                },
                {
                    "name": "verb",
                    "type": "STRING",
                    "description": "Verb to indicate user action (used in the feed story).",
                    "default": ""
                },
                {
                    "name": "attributes",
                    "type": "STRING",
                    "description": "Set of attributes associated with the event (used in the feed story).",
                    "default": ""
                },
                {
                    "name": "note",
                    "type": "STRING",
                    "description": "Description of the event",
                    "default": ""
                },
                {
                    "name": "image_url",
                    "type": "STRING",
                    "description": "URI of the event's image",
                    "default": ""
                },
                {
                    "name": "time_created",
                    "type": "STRING",
                    "description": "Unix timestamp when the event was created",
                    "default": ""
                },
                {
                    "name": "tz",
                    "type": "STRING",
                    "description": "Time zone where the event was created",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://community-jawbone-up.p.rapidapi.com/users/@me/generic_events\"\nquerystring = {\"title\": \"\", \"verb\": \"\", \"attributes\": \"\", \"note\": \"\", \"image_url\": \"\", \"time_created\": \"\", \"tz\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-jawbone-up.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-jawbone-up.p.rapidapi.com/users/@me/generic_events\"\nquerystring = {\"title\": \"\", \"verb\": \"\", \"attributes\": \"\", \"note\": \"\", \"image_url\": \"\", \"time_created\": \"\", \"tz\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-jawbone-up.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Create new meal",
            "url": "https://community-jawbone-up.p.rapidapi.com/users/@me/meals",
            "description": "",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "Name of the meal",
                    "default": ""
                },
                {
                    "name": "note",
                    "type": "STRING",
                    "description": "Description of the meal",
                    "default": ""
                },
                {
                    "name": "photo_url",
                    "type": "STRING",
                    "description": "URI of the meal image",
                    "default": ""
                },
                {
                    "name": "photo",
                    "type": "BINARY",
                    "description": "Binary contents of the meal image",
                    "default": ""
                },
                {
                    "name": "place_lat",
                    "type": "STRING",
                    "description": "Latitude of the location where the meal was created",
                    "default": ""
                },
                {
                    "name": "place_lon",
                    "type": "STRING",
                    "description": "Longitude of the location where the meal was created",
                    "default": ""
                },
                {
                    "name": "place_acc",
                    "type": "STRING",
                    "description": "Accuracy (meters) of the location where the meal was created",
                    "default": ""
                },
                {
                    "name": "place_name",
                    "type": "STRING",
                    "description": "Name of the location where the meal was created",
                    "default": ""
                },
                {
                    "name": "time_created",
                    "type": "STRING",
                    "description": "Unix timestamp when the meal was created",
                    "default": ""
                },
                {
                    "name": "tz",
                    "type": "STRING",
                    "description": "Time zone where the meal was created",
                    "default": ""
                },
                {
                    "name": "items",
                    "type": "STRING",
                    "description": "See list in https://jawbone.com/up/developer/endpoints/meals#meal_list",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://community-jawbone-up.p.rapidapi.com/users/@me/meals\"\nquerystring = {\"title\": \"\", \"note\": \"\", \"photo_url\": \"\", \"photo\": \"\", \"place_lat\": \"\", \"place_lon\": \"\", \"place_acc\": \"\", \"place_name\": \"\", \"time_created\": \"\", \"tz\": \"\", \"items\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-jawbone-up.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-jawbone-up.p.rapidapi.com/users/@me/meals\"\nquerystring = {\"title\": \"\", \"note\": \"\", \"photo_url\": \"\", \"photo\": \"\", \"place_lat\": \"\", \"place_lon\": \"\", \"place_acc\": \"\", \"place_name\": \"\", \"time_created\": \"\", \"tz\": \"\", \"items\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-jawbone-up.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Create event to record body metrics",
            "url": "https://community-jawbone-up.p.rapidapi.com/users/@me/body_events",
            "description": "",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "Title of the event.",
                    "default": ""
                },
                {
                    "name": "weight",
                    "type": "STRING",
                    "description": "Body weight in kilograms.",
                    "default": ""
                },
                {
                    "name": "body_fat",
                    "type": "STRING",
                    "description": "Body fat percentage.",
                    "default": ""
                },
                {
                    "name": "lean_mass",
                    "type": "STRING",
                    "description": "Lean mass percentage.",
                    "default": ""
                },
                {
                    "name": "bmi",
                    "type": "STRING",
                    "description": "Body Mass Index.",
                    "default": ""
                },
                {
                    "name": "note",
                    "type": "STRING",
                    "description": "Notes associated with the event.",
                    "default": ""
                },
                {
                    "name": "image_url",
                    "type": "STRING",
                    "description": "URL of the image to include in the event.",
                    "default": ""
                },
                {
                    "name": "time_created",
                    "type": "STRING",
                    "description": "Unix timestamp when the event was recorded.",
                    "default": ""
                },
                {
                    "name": "tz",
                    "type": "STRING",
                    "description": "Time zone where the event was recorded",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://community-jawbone-up.p.rapidapi.com/users/@me/body_events\"\nquerystring = {\"title\": \"\", \"weight\": \"\", \"body_fat\": \"\", \"lean_mass\": \"\", \"bmi\": \"\", \"note\": \"\", \"image_url\": \"\", \"time_created\": \"\", \"tz\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-jawbone-up.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-jawbone-up.p.rapidapi.com/users/@me/body_events\"\nquerystring = {\"title\": \"\", \"weight\": \"\", \"body_fat\": \"\", \"lean_mass\": \"\", \"bmi\": \"\", \"note\": \"\", \"image_url\": \"\", \"time_created\": \"\", \"tz\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-jawbone-up.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Create new user event to record cardiac metrics",
            "url": "https://community-jawbone-up.p.rapidapi.com/users/@me/cardiac_events",
            "description": "",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "Title of the event.",
                    "default": ""
                },
                {
                    "name": "heart_rate",
                    "type": "STRING",
                    "description": "Heart rate metric.",
                    "default": ""
                },
                {
                    "name": "systolic_pressure",
                    "type": "STRING",
                    "description": "Blood pressure metric.",
                    "default": ""
                },
                {
                    "name": "diastolic_pressure",
                    "type": "STRING",
                    "description": "Blood pressure metric.",
                    "default": ""
                },
                {
                    "name": "note",
                    "type": "STRING",
                    "description": "Notes associated with the event.",
                    "default": ""
                },
                {
                    "name": "image_url",
                    "type": "STRING",
                    "description": "URL of the image to include in the event.",
                    "default": ""
                },
                {
                    "name": "time_created",
                    "type": "STRING",
                    "description": "Unix timestamp when the event was recorded.",
                    "default": ""
                },
                {
                    "name": "tz",
                    "type": "STRING",
                    "description": "Time zone where the event was recorded",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://community-jawbone-up.p.rapidapi.com/users/@me/cardiac_events\"\nquerystring = {\"title\": \"\", \"heart_rate\": \"\", \"systolic_pressure\": \"\", \"diastolic_pressure\": \"\", \"note\": \"\", \"image_url\": \"\", \"time_created\": \"\", \"tz\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-jawbone-up.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-jawbone-up.p.rapidapi.com/users/@me/cardiac_events\"\nquerystring = {\"title\": \"\", \"heart_rate\": \"\", \"systolic_pressure\": \"\", \"diastolic_pressure\": \"\", \"note\": \"\", \"image_url\": \"\", \"time_created\": \"\", \"tz\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-jawbone-up.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Create sleep",
            "url": "https://community-jawbone-up.p.rapidapi.com/users/@me/sleeps",
            "description": "Creates a new sleep",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "time_created",
                    "type": "STRING",
                    "description": "Start time of the sleep (seconds since the epoch)",
                    "default": ""
                },
                {
                    "name": "time_completed",
                    "type": "STRING",
                    "description": "End time of the sleep (seconds since the epoch)",
                    "default": ""
                },
                {
                    "name": "tz",
                    "type": "STRING",
                    "description": "Timezone where the sleep was created.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://community-jawbone-up.p.rapidapi.com/users/@me/sleeps\"\nquerystring = {\"time_created\": \"\", \"time_completed\": \"\", \"tz\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-jawbone-up.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-jawbone-up.p.rapidapi.com/users/@me/sleeps\"\nquerystring = {\"time_created\": \"\", \"time_completed\": \"\", \"tz\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-jawbone-up.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Record user's mood",
            "url": "https://community-jawbone-up.p.rapidapi.com/users/@me/mood",
            "description": "",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "Title of the event.",
                    "default": ""
                },
                {
                    "name": "sub_type",
                    "type": "STRING",
                    "description": "Mood type (0 = unknown, 1 = ultra_energized, 2 = energized, 3 = good, 4 = just_ok, 5 = unhappy, 6 = miserable, 7 = ultra_miserable, 8 = feeling_fine).",
                    "default": ""
                },
                {
                    "name": "tz",
                    "type": "STRING",
                    "description": "Timezone where the event was created.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://community-jawbone-up.p.rapidapi.com/users/@me/mood\"\nquerystring = {\"title\": \"\", \"sub_type\": \"\", \"tz\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-jawbone-up.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-jawbone-up.p.rapidapi.com/users/@me/mood\"\nquerystring = {\"title\": \"\", \"sub_type\": \"\", \"tz\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-jawbone-up.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Update a meal",
            "url": "https://community-jawbone-up.p.rapidapi.com/meals/{xid}/partialUpdate",
            "description": "",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "xid",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "Name of the meal",
                    "default": ""
                },
                {
                    "name": "note",
                    "type": "STRING",
                    "description": "Description of the meal",
                    "default": ""
                },
                {
                    "name": "photo_url",
                    "type": "STRING",
                    "description": "URI of the meal image",
                    "default": ""
                },
                {
                    "name": "photo",
                    "type": "BINARY",
                    "description": "Binary contents of the meal image",
                    "default": ""
                },
                {
                    "name": "place_lat",
                    "type": "STRING",
                    "description": "Latitude of the location where the meal was created",
                    "default": ""
                },
                {
                    "name": "place_lon",
                    "type": "STRING",
                    "description": "Longitude of the location where the meal was created",
                    "default": ""
                },
                {
                    "name": "place_acc",
                    "type": "STRING",
                    "description": "Accuracy (meters) of the location where the meal was created",
                    "default": ""
                },
                {
                    "name": "place_name",
                    "type": "STRING",
                    "description": "Name of the location where the meal was created",
                    "default": ""
                },
                {
                    "name": "time_created",
                    "type": "STRING",
                    "description": "Unix timestamp when the meal was created",
                    "default": ""
                },
                {
                    "name": "tz",
                    "type": "STRING",
                    "description": "Time zone where the meal was created",
                    "default": ""
                },
                {
                    "name": "items",
                    "type": "STRING",
                    "description": "See list in https://jawbone.com/up/developer/endpoints/meals#meal_list",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://community-jawbone-up.p.rapidapi.com/meals/{xid}/partialUpdate\"\nquerystring = {\"title\": \"\", \"note\": \"\", \"photo_url\": \"\", \"photo\": \"\", \"place_lat\": \"\", \"place_lon\": \"\", \"place_acc\": \"\", \"place_name\": \"\", \"time_created\": \"\", \"tz\": \"\", \"items\": \"\", \"xid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-jawbone-up.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-jawbone-up.p.rapidapi.com/meals/{xid}/partialUpdate\"\nquerystring = {\"title\": \"\", \"note\": \"\", \"photo_url\": \"\", \"photo\": \"\", \"place_lat\": \"\", \"place_lon\": \"\", \"place_acc\": \"\", \"place_name\": \"\", \"time_created\": \"\", \"tz\": \"\", \"items\": \"\", \"xid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-jawbone-up.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Update workout",
            "url": "https://community-jawbone-up.p.rapidapi.com/workouts/{xid}/partialUpdate",
            "description": "Updates an existing workout.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "xid",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sub_type",
                    "type": "STRING",
                    "description": "Type of workout.  See https://jawbone.com/up/developer/endpoints/workouts#workout_list",
                    "default": ""
                },
                {
                    "name": "time_created",
                    "type": "STRING",
                    "description": "Start time of the workout (seconds since the epoch)",
                    "default": ""
                },
                {
                    "name": "time_completed",
                    "type": "STRING",
                    "description": "End time of the workout (seconds since the epoch)",
                    "default": ""
                },
                {
                    "name": "tz",
                    "type": "STRING",
                    "description": "Timezone where the workout was created.",
                    "default": ""
                },
                {
                    "name": "calories",
                    "type": "STRING",
                    "description": "Number of calories burned during the workout.",
                    "default": ""
                },
                {
                    "name": "distance",
                    "type": "STRING",
                    "description": "Distance traveled during the workout, in meters.",
                    "default": ""
                },
                {
                    "name": "image_url",
                    "type": "STRING",
                    "description": "URL with an image of the workout.",
                    "default": ""
                },
                {
                    "name": "intensity",
                    "type": "STRING",
                    "description": "Intensity of the workout (1 = easy, 2 = moderate, 3 = intermediate, 4 = difficult, 5 = hard).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://community-jawbone-up.p.rapidapi.com/workouts/{xid}/partialUpdate\"\nquerystring = {\"sub_type\": \"\", \"time_created\": \"\", \"time_completed\": \"\", \"tz\": \"\", \"calories\": \"\", \"distance\": \"\", \"image_url\": \"\", \"intensity\": \"\", \"xid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-jawbone-up.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-jawbone-up.p.rapidapi.com/workouts/{xid}/partialUpdate\"\nquerystring = {\"sub_type\": \"\", \"time_created\": \"\", \"time_completed\": \"\", \"tz\": \"\", \"calories\": \"\", \"distance\": \"\", \"image_url\": \"\", \"intensity\": \"\", \"xid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-jawbone-up.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        }
    ]
}