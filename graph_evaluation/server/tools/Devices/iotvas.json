{
    "tool_name": "IoTVAS",
    "tool_description": "IOTVAS API enables you to detect IoT devices in the network and provides detailed firmware risk analysis without requiring the user to upload the firmware file.",
    "title": "IoTVAS",
    "pricing": "FREE",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 669,
        "avgSuccessRate": 0,
        "popularityScore": 0,
        "__typename": "Score"
    },
    "home_url": "https://rapidapi.com/firmalyzer-firmalyzer-default/api/iotvas/",
    "host": "iotvas.p.rapidapi.com",
    "api_list": [
        {
            "name": "get_accounts",
            "url": "https://iotvas.p.rapidapi.com/firmware/{firmware_hash}/accounts",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "firmware_hash",
                    "type": "STRING",
                    "description": "SHA2 hash of device firmware",
                    "default": "af88b1aaac0b222df8539f3ae1479b5c8eaeae41f1776b5dd2fa805cb33a1175"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://iotvas.p.rapidapi.com/firmware/{firmware_hash}/accounts\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"iotvas.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "name": "",
                "pwd_hash": "",
                "hash_algorithm": "",
                "shell": "",
                "uid": 0,
                "gid": 0,
                "home_dir": ""
            },
            "headers": {},
            "schema": {
                "title": "Response Firmware Accounts Firmware  Firmware Hash  Accounts Get",
                "type": "array",
                "items": {
                    "title": "DefaultAccount",
                    "type": "object",
                    "properties": {
                        "name": {
                            "title": "OS account name",
                            "type": "string"
                        },
                        "pwd_hash": {
                            "title": "Password hash of the account",
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "hash_algorithm": {
                            "title": "Hash algorithm, '0': DES, '1': '5': SHA2, '2a': Blowfish",
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "shell": {
                            "title": "Path to the shell binary of the account",
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "uid": {
                            "title": "*nix user id of the account",
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "gid": {
                            "title": "Group id of the account",
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "home_dir": {
                            "title": "Path to the home folder of the account",
                            "type": [
                                "string",
                                "null"
                            ]
                        }
                    }
                }
            }
        },
        {
            "name": "get_weak_certs",
            "url": "https://iotvas.p.rapidapi.com/firmware/{firmware_hash}/weak-certs",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "firmware_hash",
                    "type": "STRING",
                    "description": "SHA2 hash of device firmware",
                    "default": "52841661d61e00649451cc471e9b56d169df8041926b1252bb3fd0710c27b12c"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://iotvas.p.rapidapi.com/firmware/{firmware_hash}/weak-certs\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"iotvas.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "file_name": "",
                "file_hash": "",
                "thumb_print": "",
                "sign_algorithm": "",
                "subject_name": "",
                "valid_from": "",
                "valid_to": ""
            },
            "headers": {},
            "schema": {
                "title": "Response Firmware Weak Certs Firmware  Firmware Hash  Weak Certs Get",
                "type": "array",
                "items": {
                    "title": "WeakCert",
                    "type": "object",
                    "properties": {
                        "file_name": {
                            "title": "Certificate file name",
                            "type": "string"
                        },
                        "file_hash": {
                            "title": "SHA2 hash of the certificate file",
                            "type": "string"
                        },
                        "thumb_print": {
                            "title": "Certificate fingerprint",
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "sign_algorithm": {
                            "title": "Ceritifcate signing algorithm name, e.g., sha1",
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "subject_name": {
                            "title": "Certificate subject name",
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "valid_from": {
                            "title": "Certificate validity start date",
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "valid_to": {
                            "title": "Certificate expiry date",
                            "type": [
                                "string",
                                "null"
                            ]
                        }
                    }
                }
            }
        },
        {
            "name": "get_expired_certs",
            "url": "https://iotvas.p.rapidapi.com/firmware/{firmware_hash}/expired-certs",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "firmware_hash",
                    "type": "STRING",
                    "description": "SHA2 hash of device firmware",
                    "default": "ac7c090c34338ea6a3b335004755e24578e7e4eee739c5c33736f0822b64907e"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://iotvas.p.rapidapi.com/firmware/{firmware_hash}/expired-certs\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"iotvas.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "file_name": "",
                "file_hash": "",
                "thumb_print": "",
                "public_key": {
                    "algorithm": "",
                    "bits": 0
                },
                "subject_name": "",
                "valid_from": "",
                "valid_to": ""
            },
            "headers": {},
            "schema": {
                "title": "Response Firmware Expired Certs Firmware  Firmware Hash  Expired Certs Get",
                "type": "array",
                "items": {
                    "title": "ExpiredCert",
                    "type": "object",
                    "properties": {
                        "file_name": {
                            "title": "Certificate file name",
                            "type": "string"
                        },
                        "file_hash": {
                            "title": "SHA2 hash of the certificate file",
                            "type": "string"
                        },
                        "thumb_print": {
                            "title": "Certificate fingerprint",
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "public_key": {
                            "title": "Public key infromation of the certificate",
                            "allOf": [
                                {
                                    "title": "PublicKey",
                                    "type": "object",
                                    "properties": {
                                        "algorithm": {
                                            "title": "Crypto algorithm name",
                                            "type": "string"
                                        },
                                        "bits": {
                                            "title": "key length in bits",
                                            "type": [
                                                "integer",
                                                "null"
                                            ]
                                        }
                                    }
                                }
                            ]
                        },
                        "subject_name": {
                            "title": "Certificate subject name",
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "valid_from": {
                            "title": "Certificate validity start date",
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "valid_to": {
                            "title": "Certificate expiry date",
                            "type": [
                                "string",
                                "null"
                            ]
                        }
                    }
                }
            }
        },
        {
            "name": "get_weak_keys",
            "url": "https://iotvas.p.rapidapi.com/firmware/{firmware_hash}/weak-keys",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "firmware_hash",
                    "type": "STRING",
                    "description": "SHA2 hash of device firmware",
                    "default": "852031776c09f8152c90496f2c3fac85b46a938d20612d7fc03eea8aab46f23e"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://iotvas.p.rapidapi.com/firmware/{firmware_hash}/weak-keys\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"iotvas.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "file_name": "",
                "file_hash": "",
                "pem_type": "",
                "algorithm": "",
                "bits": 0
            },
            "headers": {},
            "schema": {
                "title": "Response Firmware Weak Keys Firmware  Firmware Hash  Weak Keys Get",
                "type": "array",
                "items": {
                    "title": "CryptoKey",
                    "type": "object",
                    "properties": {
                        "file_name": {
                            "title": "Crypto key file name",
                            "type": "string"
                        },
                        "file_hash": {
                            "title": "SHA2 hash of the crypto key file",
                            "type": "string"
                        },
                        "pem_type": {
                            "title": "Key type, e.g., RSAPrivateKey, ECPublicKey, etc",
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "algorithm": {
                            "title": "Crypto algorithm name of the key",
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "bits": {
                            "title": "Key length in bits",
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    }
                }
            }
        },
        {
            "name": "detect_device",
            "url": "https://iotvas.p.rapidapi.com/device/detect",
            "description": "Use device service banners and mac address captured by your network port scanner, vulnerability assessment or asset discovery tools to detect device maker, model and firmware information",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://iotvas.p.rapidapi.com/device/detect\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"iotvas.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "manufacturer": "",
                "model_name": "",
                "firmware_version": "",
                "is_discontinued": true,
                "cve_list": [
                    {
                        "cve_id": "",
                        "cvss": 0
                    }
                ],
                "device_type": "",
                "firmware_info": {
                    "name": "",
                    "version": "",
                    "sha2": "",
                    "release_date": "",
                    "download_url": ""
                },
                "latest_firmware_info": {
                    "name": "",
                    "version": "",
                    "sha2": "",
                    "release_date": "",
                    "download_url": ""
                }
            },
            "headers": {},
            "schema": {
                "title": "DeviceInfo",
                "type": "object",
                "properties": {
                    "manufacturer": {
                        "title": "Device manufacturer name",
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "model_name": {
                        "title": "Device model name",
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "firmware_version": {
                        "title": "Device firmware version",
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "is_discontinued": {
                        "title": "Device discontinued/retired indicator",
                        "type": [
                            "boolean",
                            "null"
                        ]
                    },
                    "cve_list": {
                        "title": "List of CVEs for the specified firmware version",
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "title": "Vulnerability",
                            "type": "object",
                            "properties": {
                                "cve_id": {
                                    "title": "CVE ID of the vulnerability",
                                    "type": "string"
                                },
                                "cvss": {
                                    "title": "CVSS v3 score of the vulnerability",
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "device_type": {
                        "title": "Device type,e.g., IP camera, etc",
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "firmware_info": {
                        "title": "Device firmware infromation, release date, download Url, etc",
                        "allOf": [
                            {
                                "title": "FirmwareInfo",
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "title": "Title of the firmware file published by the device vendor",
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "version": {
                                        "title": "Published firmware file version",
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "sha2": {
                                        "title": "Firmware file SHA2 hash",
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "release_date": {
                                        "title": "Release date of the firmware file",
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "download_url": {
                                        "title": "Download url of the firmware file on vendor's site",
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                }
                            }
                        ]
                    },
                    "latest_firmware_info": {
                        "title": "Latest firmware infromation of the device",
                        "allOf": [
                            {
                                "title": "FirmwareInfo",
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "title": "Title of the firmware file published by the device vendor",
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "version": {
                                        "title": "Published firmware file version",
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "sha2": {
                                        "title": "Firmware file SHA2 hash",
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "release_date": {
                                        "title": "Release date of the firmware file",
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "download_url": {
                                        "title": "Download url of the firmware file on vendor's site",
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "name": "get_private_keys",
            "url": "https://iotvas.p.rapidapi.com/firmware/{firmware_hash}/private-keys",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "firmware_hash",
                    "type": "STRING",
                    "description": "SHA2 hash of device firmware",
                    "default": "90e3e68e1c61850f20c50e551816d47d484d7feb46890f5bc0a0e0dab3e3ba0b"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://iotvas.p.rapidapi.com/firmware/{firmware_hash}/private-keys\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"iotvas.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "file_name": "",
                "file_hash": "",
                "pem_type": "",
                "algorithm": "",
                "bits": 0
            },
            "headers": {},
            "schema": {
                "title": "Response Firmware Private Keys Firmware  Firmware Hash  Private Keys Get",
                "type": "array",
                "items": {
                    "title": "CryptoKey",
                    "type": "object",
                    "properties": {
                        "file_name": {
                            "title": "Crypto key file name",
                            "type": "string"
                        },
                        "file_hash": {
                            "title": "SHA2 hash of the crypto key file",
                            "type": "string"
                        },
                        "pem_type": {
                            "title": "Key type, e.g., RSAPrivateKey, ECPublicKey, etc",
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "algorithm": {
                            "title": "Crypto algorithm name of the key",
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "bits": {
                            "title": "Key length in bits",
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    }
                }
            }
        },
        {
            "name": "get_config_issues",
            "url": "https://iotvas.p.rapidapi.com/firmware/{firmware_hash}/config-issues",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "firmware_hash",
                    "type": "STRING",
                    "description": "SHA2 hash of device firmware",
                    "default": "aa96e4d41a4b0ceb3f1ae4d94f3cb445621b9501e3a9c69e6b9eb37c5888a03c"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://iotvas.p.rapidapi.com/firmware/{firmware_hash}/config-issues\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"iotvas.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "service_name": "",
                "config_file": "",
                "issues": [],
                "suggestions": []
            },
            "headers": {},
            "schema": {
                "title": "Response Firmware Config Issues Firmware  Firmware Hash  Config Issues Get",
                "type": "array",
                "items": {
                    "title": "ConfigIssue",
                    "type": "object",
                    "properties": {
                        "service_name": {
                            "title": "Affected network service name",
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "config_file": {
                            "title": "Vulnerable configuration file name",
                            "type": "string"
                        },
                        "issues": {
                            "title": "List of detected issues",
                            "type": [
                                "array",
                                "null"
                            ],
                            "items": {
                                "type": "string"
                            }
                        },
                        "suggestions": {
                            "title": "List of suggestions to fix the issues",
                            "type": [
                                "array",
                                "null"
                            ],
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "get_risk",
            "url": "https://iotvas.p.rapidapi.com/firmware/{firmware_hash}/risk",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "firmware_hash",
                    "type": "STRING",
                    "description": "SHA2 hash of device firmware",
                    "default": "af88b1aaac0b222df8539f3ae1479b5c8eaeae41f1776b5dd2fa805cb33a1175"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://iotvas.p.rapidapi.com/firmware/{firmware_hash}/risk\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"iotvas.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "risk_summary": {
                    "net_services_risk": "",
                    "crypto_risk": "",
                    "kernel_risk": "",
                    "client_tools_risk": ""
                },
                "vulnerable_components": [
                    {
                        "name": "",
                        "version": "",
                        "category": "",
                        "vulnerabilities": [
                            {
                                "cve_id": "",
                                "cvss": 0
                            }
                        ],
                        "cvss_max": 0
                    }
                ]
            },
            "headers": {},
            "schema": {
                "title": "FirmwareRisk",
                "type": "object",
                "properties": {
                    "risk_summary": {
                        "title": "Qualitative risk levels of network services, crypto libraries, kernel and client tools in the analyzed firmware",
                        "allOf": [
                            {
                                "title": "RiskSummary",
                                "type": "object",
                                "properties": {
                                    "net_services_risk": {
                                        "title": "Qualitative risk level of device network services in the scale of 'Critical' to 'None'",
                                        "type": "string"
                                    },
                                    "crypto_risk": {
                                        "title": "Crypto libraries risk level",
                                        "type": "string"
                                    },
                                    "kernel_risk": {
                                        "title": "Kernel risk level",
                                        "type": "string"
                                    },
                                    "client_tools_risk": {
                                        "title": "Risk level of client tools such as busybox",
                                        "type": "string"
                                    }
                                }
                            }
                        ]
                    },
                    "vulnerable_components": {
                        "title": "Details of vulnerable firmware components",
                        "type": "array",
                        "items": {
                            "title": "VulnerableComponent",
                            "type": "object",
                            "properties": {
                                "name": {
                                    "title": "Vulnerable component name, e.g., upnp, busybox, etc",
                                    "type": "string"
                                },
                                "version": {
                                    "title": "Vulnerable component version",
                                    "type": "string"
                                },
                                "category": {
                                    "title": "Component category: 'UPnP Server', 'Web Server', etc",
                                    "type": "string"
                                },
                                "vulnerabilities": {
                                    "title": "List of component vulnerabilities",
                                    "type": "array",
                                    "items": {
                                        "title": "Vulnerability",
                                        "type": "object",
                                        "properties": {
                                            "cve_id": {
                                                "title": "CVE ID of the vulnerability",
                                                "type": "string"
                                            },
                                            "cvss": {
                                                "title": "CVSS v3 score of the vulnerability",
                                                "type": "number"
                                            }
                                        }
                                    }
                                },
                                "cvss_max": {
                                    "title": "Maximum CVSS score of the detected vulnerabilities",
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "detect_device",
            "url": "https://iotvas.p.rapidapi.com/device/detect",
            "description": "Use device service banners and mac address captured by your network port scanner, vulnerability assessment or asset discovery tools to detect device maker, model and firmware information",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://iotvas.p.rapidapi.com/device/detect\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"iotvas.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://iotvas.p.rapidapi.com/device/detect\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"iotvas.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        }
    ]
}