{
    "product_id": "api_f21e64d2-3fb6-4d55-8aa8-e98734551288",
    "tool_description": "MoviesDatabase provides complete and updated data for over 9 million titles ( movies, series and episodes) and 11 million actors / crew and cast members",
    "home_url": "https://rapidapi.com/SAdrian/api/moviesdatabase/",
    "name": "MoviesDatabase",
    "title": "MoviesDatabase",
    "pricing": "FREE",
    "tool_name": "MoviesDatabase",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 512,
        "avgSuccessRate": 100,
        "popularityScore": 9.9,
        "__typename": "Score"
    },
    "host": "moviesdatabase.p.rapidapi.com",
    "api_list": [
        {
            "name": "/titles/utils/genres",
            "url": "https://moviesdatabase.p.rapidapi.com/titles/utils/genres",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/utils/genres\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/utils/genres\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "results": [
                    null,
                    "Action",
                    "Adult",
                    "Adventure",
                    "Animation",
                    "Biography",
                    "Comedy",
                    "Crime",
                    "Documentary",
                    "Drama",
                    "Family",
                    "Fantasy",
                    "Film-Noir",
                    "Game-Show",
                    "History",
                    "Horror",
                    "Music",
                    "Musical",
                    "Mystery",
                    "News",
                    "Reality-TV",
                    "Romance",
                    "Sci-Fi",
                    "Short",
                    "Sport",
                    "Talk-Show",
                    "Thriller",
                    "War",
                    "Western"
                ]
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/titles/utils/lists",
            "url": "https://moviesdatabase.p.rapidapi.com/titles/utils/lists",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/utils/lists\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/utils/lists\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "entries": 9,
                "results": [
                    "most_pop_movies",
                    "most_pop_series",
                    "top_boxoffice_200",
                    "top_boxoffice_last_weekend_10",
                    "top_rated_250",
                    "top_rated_english_250",
                    "top_rated_lowest_100",
                    "top_rated_series_250",
                    "titles"
                ]
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/titles/search/akas/{aka}",
            "url": "https://moviesdatabase.p.rapidapi.com/titles/search/akas/{aka}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "aka",
                    "type": "STRING",
                    "description": "Title of  the Movie/Series",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "startYear",
                    "type": "NUMBER",
                    "description": "Year range filter -from- ex: ?startYear=2020",
                    "default": ""
                },
                {
                    "name": "info",
                    "type": "STRING",
                    "description": "Info type structure (default: mini-info) -> base_info / mini_info / image /...",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "Page number",
                    "default": ""
                },
                {
                    "name": "year",
                    "type": "NUMBER",
                    "description": "Year filter ex: ?year=2020",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Add sorting (incr, decr) -> year.incr /year.decr",
                    "default": ""
                },
                {
                    "name": "endYear",
                    "type": "NUMBER",
                    "description": "Year range filter -to- ex: ?endYear=2020",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Number of titles per page (default: 10) -> 10 max ",
                    "default": ""
                },
                {
                    "name": "titleType",
                    "type": "STRING",
                    "description": "Filter by type of title",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/search/akas/{aka}\"\nquerystring = {\"startYear\": \"\", \"info\": \"\", \"aka\": \"\", \"page\": \"\", \"year\": \"\", \"sort\": \"\", \"endYear\": \"\", \"limit\": \"\", \"titleType\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/search/akas/{aka}\"\nquerystring = {\"startYear\": \"\", \"info\": \"\", \"aka\": \"\", \"page\": \"\", \"year\": \"\", \"sort\": \"\", \"endYear\": \"\", \"limit\": \"\", \"titleType\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "error": "Wrong filter query parameter : aka",
                "stack": "\ud83e\udd5e",
                "results": null
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/titles/search/keyword/{keyword}",
            "url": "https://moviesdatabase.p.rapidapi.com/titles/search/keyword/{keyword}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "keyword",
                    "type": "STRING",
                    "description": "Keyword",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "info",
                    "type": "STRING",
                    "description": "Info type structure (default: mini-info) -> base_info / mini_info / image / ...",
                    "default": ""
                },
                {
                    "name": "year",
                    "type": "NUMBER",
                    "description": "Year filter ex: ?year=2020",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "Page number",
                    "default": ""
                },
                {
                    "name": "startYear",
                    "type": "NUMBER",
                    "description": "Year range filter -from- ex: ?startYear=2020",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Add sorting (incr, decr) -> year.incr /year.decr",
                    "default": ""
                },
                {
                    "name": "titleType",
                    "type": "STRING",
                    "description": "Filter by type of title",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Number of titles per page (default: 10) -> 10 max ",
                    "default": ""
                },
                {
                    "name": "endYear",
                    "type": "NUMBER",
                    "description": "Year range filter -to- ex: ?endYear=2020",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/search/keyword/{keyword}\"\nquerystring = {\"info\": \"\", \"year\": \"\", \"page\": \"\", \"keyword\": \"\", \"startYear\": \"\", \"sort\": \"\", \"titleType\": \"\", \"limit\": \"\", \"endYear\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/search/keyword/{keyword}\"\nquerystring = {\"info\": \"\", \"year\": \"\", \"page\": \"\", \"keyword\": \"\", \"startYear\": \"\", \"sort\": \"\", \"titleType\": \"\", \"limit\": \"\", \"endYear\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "error": "Wrong filter query parameter : keyword",
                "stack": "\ud83e\udd5e",
                "results": null
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/titles/search/title/{title}",
            "url": "https://moviesdatabase.p.rapidapi.com/titles/search/title/{title}",
            "description": "Search by Title",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "Title of  the Movie/Series",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "exact",
                    "type": "BOOLEAN",
                    "description": "Search by exact title",
                    "default": "true"
                },
                {
                    "name": "info",
                    "type": "STRING",
                    "description": "Info type structure (default: mini-info) -> base_info / mini_info / image /...",
                    "default": ""
                },
                {
                    "name": "year",
                    "type": "NUMBER",
                    "description": "Year filter ex: ?year=2020",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "Page number",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Add sorting (incr, decr) -> year.incr /year.decr",
                    "default": ""
                },
                {
                    "name": "endYear",
                    "type": "NUMBER",
                    "description": "Year range filter -to- ex: ?endYear=2020",
                    "default": ""
                },
                {
                    "name": "startYear",
                    "type": "NUMBER",
                    "description": "Year range filter -from- ex: ?startYear=2020",
                    "default": ""
                },
                {
                    "name": "titleType",
                    "type": "STRING",
                    "description": "Filter by type of title",
                    "default": "movie"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Number of titles per page (default: 10) -> 10 max ",
                    "default": ""
                },
                {
                    "name": "list",
                    "type": "STRING",
                    "description": "Selected list -> most_pop_movies / most_pop_series / top_rated_series_250 / ...",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/search/title/{title}\"\nquerystring = {\"exact\": \"true\", \"info\": \"\", \"year\": \"\", \"page\": \"\", \"sort\": \"\", \"endYear\": \"\", \"startYear\": \"\", \"titleType\": \"movie\", \"limit\": \"\", \"title\": \"\", \"list\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/search/title/{title}\"\nquerystring = {\"exact\": \"true\", \"info\": \"\", \"year\": \"\", \"page\": \"\", \"sort\": \"\", \"endYear\": \"\", \"startYear\": \"\", \"titleType\": \"movie\", \"limit\": \"\", \"title\": \"\", \"list\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "error": "Wrong filter query parameter : title",
                "stack": "\ud83e\udd5e",
                "results": null
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/actors/random",
            "url": "https://moviesdatabase.p.rapidapi.com/actors/random",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Number of titles per page (default: 10) -> 10 max ",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/actors/random\"\nquerystring = {\"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/actors/random\"\nquerystring = {\"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "entries": 10,
                "results": [
                    {
                        "nconst": "nm1805909",
                        "primaryName": "Sailesh D. Pawar",
                        "birthYear": "\\N",
                        "deathYear": "\\N",
                        "primaryProfession": "make_up_department,producer,miscellaneous",
                        "knownForTitles": "tt7602562,tt0379370,tt0290331"
                    },
                    {
                        "nconst": "nm1805910",
                        "primaryName": "Lourdes Pearce",
                        "birthYear": "\\N",
                        "deathYear": "\\N",
                        "primaryProfession": "make_up_department",
                        "knownForTitles": "tt0438102"
                    },
                    {
                        "nconst": "nm1805911",
                        "primaryName": "Maria Grazia Peirce",
                        "birthYear": "\\N",
                        "deathYear": "\\N",
                        "primaryProfession": "make_up_department",
                        "knownForTitles": "tt7222860,tt0112352"
                    },
                    {
                        "nconst": "nm1805912",
                        "primaryName": "Heli Pekuri",
                        "birthYear": "\\N",
                        "deathYear": "\\N",
                        "primaryProfession": "make_up_department",
                        "knownForTitles": "tt0249131"
                    },
                    {
                        "nconst": "nm1805913",
                        "primaryName": "Sam Penny",
                        "birthYear": "\\N",
                        "deathYear": "\\N",
                        "primaryProfession": "make_up_department,costume_department",
                        "knownForTitles": "tt0412074,tt1544562"
                    },
                    {
                        "nconst": "nm1805914",
                        "primaryName": "Alzira Pereira",
                        "birthYear": "\\N",
                        "deathYear": "\\N",
                        "primaryProfession": "make_up_department",
                        "knownForTitles": "tt0439460,tt14036938,tt6849890"
                    },
                    {
                        "nconst": "nm1805915",
                        "primaryName": "Clara Politi",
                        "birthYear": "\\N",
                        "deathYear": "\\N",
                        "primaryProfession": "make_up_department",
                        "knownForTitles": "tt0054609"
                    },
                    {
                        "nconst": "nm1805916",
                        "primaryName": "Galina Ponomaryova",
                        "birthYear": "\\N",
                        "deathYear": "\\N",
                        "primaryProfession": "make_up_department",
                        "knownForTitles": "tt8320378,tt1925421,tt2802154,tt0376968"
                    },
                    {
                        "nconst": "nm1805917",
                        "primaryName": "Elissa Prager",
                        "birthYear": "\\N",
                        "deathYear": "\\N",
                        "primaryProfession": "make_up_department,special_effects,actress",
                        "knownForTitles": "tt2270372,tt3204164,tt1866249,tt0772560"
                    },
                    {
                        "nconst": "nm1805918",
                        "primaryName": "Colleen Provost",
                        "birthYear": "\\N",
                        "deathYear": "\\N",
                        "primaryProfession": "make_up_department",
                        "knownForTitles": "tt0780567,tt0437245,tt0376890,tt0800205"
                    }
                ]
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/actors/{id}",
            "url": "https://moviesdatabase.p.rapidapi.com/actors/{id}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "Actor imdb id",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/actors/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/actors/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "error": "Wrong filter query parameter : id",
                "stack": "\ud83e\udd5e",
                "results": null
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/titles/utils/titleTypes",
            "url": "https://moviesdatabase.p.rapidapi.com/titles/utils/titleTypes",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/utils/titleTypes\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/utils/titleTypes\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "results": [
                    null,
                    "movie",
                    "musicVideo",
                    "podcastEpisode",
                    "podcastSeries",
                    "short",
                    "tvEpisode",
                    "tvMiniSeries",
                    "tvMovie",
                    "tvPilot",
                    "tvSeries",
                    "tvShort",
                    "tvSpecial",
                    "video",
                    "videoGame"
                ]
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/actors",
            "url": "https://moviesdatabase.p.rapidapi.com/actors",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "Page number",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Number of titles per page (default: 10) -> 10 max ",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/actors\"\nquerystring = {\"page\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/actors\"\nquerystring = {\"page\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "page": 1,
                "next": "/actors?page=2&limit=",
                "entries": 10,
                "results": [
                    {
                        "_id": "617082fa2299cb9f2c2717ac",
                        "nconst": "nm0000001",
                        "primaryName": "Fred Astaire",
                        "birthYear": 1899,
                        "deathYear": 1987,
                        "primaryProfession": "soundtrack,actor,miscellaneous",
                        "knownForTitles": "tt0053137,tt0072308,tt0031983,tt0050419"
                    },
                    {
                        "_id": "617082fa2299cb9f2c2717ad",
                        "nconst": "nm0000005",
                        "primaryName": "Ingmar Bergman",
                        "birthYear": 1918,
                        "deathYear": 2007,
                        "primaryProfession": "writer,director,actor",
                        "knownForTitles": "tt0050976,tt0050986,tt0060827,tt0069467"
                    },
                    {
                        "_id": "617082fa2299cb9f2c2717ae",
                        "nconst": "nm0000006",
                        "primaryName": "Ingrid Bergman",
                        "birthYear": 1915,
                        "deathYear": 1982,
                        "primaryProfession": "actress,soundtrack,producer",
                        "knownForTitles": "tt0038109,tt0038787,tt0034583,tt0036855"
                    },
                    {
                        "_id": "617082fa2299cb9f2c2717af",
                        "nconst": "nm0000007",
                        "primaryName": "Humphrey Bogart",
                        "birthYear": 1899,
                        "deathYear": 1957,
                        "primaryProfession": "actor,soundtrack,producer",
                        "knownForTitles": "tt0042593,tt0034583,tt0043265,tt0037382"
                    },
                    {
                        "_id": "617082fa2299cb9f2c2717b0",
                        "nconst": "nm0000008",
                        "primaryName": "Marlon Brando",
                        "birthYear": 1924,
                        "deathYear": 2004,
                        "primaryProfession": "actor,soundtrack,director",
                        "knownForTitles": "tt0070849,tt0078788,tt0047296,tt0068646"
                    },
                    {
                        "_id": "617082fa2299cb9f2c2717b1",
                        "nconst": "nm0000009",
                        "primaryName": "Richard Burton",
                        "birthYear": 1925,
                        "deathYear": 1984,
                        "primaryProfession": "actor,soundtrack,producer",
                        "knownForTitles": "tt0061184,tt0087803,tt0059749,tt0057877"
                    },
                    {
                        "_id": "617082fa2299cb9f2c2717b2",
                        "nconst": "nm0000010",
                        "primaryName": "James Cagney",
                        "birthYear": 1899,
                        "deathYear": 1986,
                        "primaryProfession": "actor,soundtrack,director",
                        "knownForTitles": "tt0035575,tt0029870,tt0042041,tt0031867"
                    },
                    {
                        "_id": "617082fa2299cb9f2c2717b3",
                        "nconst": "nm0000011",
                        "primaryName": "Gary Cooper",
                        "birthYear": 1901,
                        "deathYear": 1961,
                        "primaryProfession": "actor,soundtrack,stunts",
                        "knownForTitles": "tt0027996,tt0044706,tt0035896,tt0034167"
                    },
                    {
                        "_id": "617082fa2299cb9f2c2717b4",
                        "nconst": "nm0000012",
                        "primaryName": "Bette Davis",
                        "birthYear": 1908,
                        "deathYear": 1989,
                        "primaryProfession": "actress,soundtrack,make_up_department",
                        "knownForTitles": "tt0056687,tt0035140,tt0042192,tt0031210"
                    },
                    {
                        "_id": "617082fa2299cb9f2c2717b5",
                        "nconst": "nm0000004",
                        "primaryName": "John Belushi",
                        "birthYear": 1949,
                        "deathYear": 1982,
                        "primaryProfession": "actor,soundtrack,writer",
                        "knownForTitles": "tt0078723,tt0077975,tt0072562,tt0080455"
                    }
                ]
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/titles/series/{seriesId}",
            "url": "https://moviesdatabase.p.rapidapi.com/titles/series/{seriesId}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "seriesId",
                    "type": "STRING",
                    "description": "Series Imdb Id",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/series/{seriesId}\"\nquerystring = {\"seriesId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/series/{seriesId}\"\nquerystring = {\"seriesId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "error": "Wrong filter query parameter : seriesId",
                "stack": "\ud83e\udd5e",
                "results": null
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/titles/x/upcoming",
            "url": "https://moviesdatabase.p.rapidapi.com/titles/x/upcoming",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "titleType",
                    "type": "STRING",
                    "description": "Filter by type of title",
                    "default": ""
                },
                {
                    "name": "year",
                    "type": "NUMBER",
                    "description": "Year filter ex: ?year=2022",
                    "default": ""
                },
                {
                    "name": "genre",
                    "type": "STRING",
                    "description": "Year filter ex: ?genre=Drama",
                    "default": ""
                },
                {
                    "name": "info",
                    "type": "STRING",
                    "description": "Info type structure (default: mini-info) -> base_info / mini_info / image / ...",
                    "default": ""
                },
                {
                    "name": "endYear",
                    "type": "NUMBER",
                    "description": "Year range filter -to- ex: ?endYear=2020",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Number of titles per page (default: 10) -> 10 max ",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Add sorting (incr, decr) -> year.incr / year.decr",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "Page number",
                    "default": ""
                },
                {
                    "name": "startYear",
                    "type": "NUMBER",
                    "description": "Year range filter -from- ex: ?startYear=2020",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/x/upcoming\"\nquerystring = {\"titleType\": \"\", \"year\": \"\", \"genre\": \"\", \"info\": \"\", \"endYear\": \"\", \"limit\": \"\", \"sort\": \"\", \"page\": \"\", \"startYear\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/x/upcoming\"\nquerystring = {\"titleType\": \"\", \"year\": \"\", \"genre\": \"\", \"info\": \"\", \"endYear\": \"\", \"limit\": \"\", \"sort\": \"\", \"page\": \"\", \"startYear\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "page": 1,
                "next": null,
                "entries": 0,
                "results": []
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/titles/{id}/ratings",
            "url": "https://moviesdatabase.p.rapidapi.com/titles/{id}/ratings",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "Imdb Id of title ex: tt0000002",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/{id}/ratings\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/{id}/ratings\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "error": "Wrong filter query parameter : id",
                "stack": "\ud83e\udd5e",
                "results": null
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/titles/{id}/crew",
            "url": "https://moviesdatabase.p.rapidapi.com/titles/{id}/crew",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "Imdb Id of title ex: tt0000002",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/{id}/crew\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/{id}/crew\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "error": "Wrong filter query parameter : id",
                "stack": "\ud83e\udd5e",
                "results": null
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/titles/series/{seriesId}/{season}",
            "url": "https://moviesdatabase.p.rapidapi.com/titles/series/{seriesId}/{season}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "season",
                    "type": "STRING",
                    "description": "Season number",
                    "default": ""
                },
                {
                    "name": "seriesId",
                    "type": "STRING",
                    "description": "Series Imdb Id",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/series/{seriesId}/{season}\"\nquerystring = {\"season\": \"\", \"seriesId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/series/{seriesId}/{season}\"\nquerystring = {\"season\": \"\", \"seriesId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "error": "Wrong filter query parameter : season",
                "stack": "\ud83e\udd5e",
                "results": null
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/titles/episode/{id}",
            "url": "https://moviesdatabase.p.rapidapi.com/titles/episode/{id}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "Episode Imdb Id",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "info",
                    "type": "STRING",
                    "description": "Info type structure (default: mini-info) -> base_info / mini_info / image / ...",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/episode/{id}\"\nquerystring = {\"info\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/episode/{id}\"\nquerystring = {\"info\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "error": "Wrong filter query parameter : id",
                "stack": "\ud83e\udd5e",
                "results": null
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/titles/{id}/main_actors",
            "url": "https://moviesdatabase.p.rapidapi.com/titles/{id}/main_actors",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "Imdb Id of title ex: tt0000002",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/{id}/main_actors\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/{id}/main_actors\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "error": "Wrong filter query parameter : id",
                "stack": "\ud83e\udd5e",
                "results": null
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/titles/x/titles-by-ids",
            "url": "https://moviesdatabase.p.rapidapi.com/titles/x/titles-by-ids",
            "description": "Titles by ids list",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "idsList",
                    "type": "STRING",
                    "description": "Imdb id's comma separated -> tt0001702,tt0001856,tt0001856 ...",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "list",
                    "type": "STRING",
                    "description": "Selected list -> most_pop_movies / most_pop_series / top_rated_series_250 / ...",
                    "default": ""
                },
                {
                    "name": "info",
                    "type": "STRING",
                    "description": "Info type structure (default: mini-info) -> base_info / mini_info / image / ...",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/x/titles-by-ids\"\nquerystring = {\"list\": \"\", \"idsList\": \"\", \"info\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/x/titles-by-ids\"\nquerystring = {\"list\": \"\", \"idsList\": \"\", \"info\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "error": "List of id's is required",
                "stack": "\ud83e\udd5e",
                "results": null
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/titles/{id}/aka",
            "url": "https://moviesdatabase.p.rapidapi.com/titles/{id}/aka",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "Imdb Id of title ex: tt0000002",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/{id}/aka\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/{id}/aka\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "error": "Wrong filter query parameter : id",
                "stack": "\ud83e\udd5e",
                "results": null
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/titles/random",
            "url": "https://moviesdatabase.p.rapidapi.com/titles/random",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "startYear",
                    "type": "NUMBER",
                    "description": "Year range filter -from- ex: ?startYear=2020",
                    "default": ""
                },
                {
                    "name": "genre",
                    "type": "STRING",
                    "description": "Year filter ex: ?genre=Drama",
                    "default": ""
                },
                {
                    "name": "titleType",
                    "type": "STRING",
                    "description": "Filter by type of title",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Add sorting (incr, decr) -> year.incr /year.decr",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Number of titles per page (default: 10) -> 10 max ",
                    "default": ""
                },
                {
                    "name": "info",
                    "type": "STRING",
                    "description": "Info type structure (default: mini-info) -> base_info / mini_info / image / ...",
                    "default": ""
                },
                {
                    "name": "endYear",
                    "type": "NUMBER",
                    "description": "Year range filter -to- ex: ?endYear=2020",
                    "default": ""
                },
                {
                    "name": "year",
                    "type": "NUMBER",
                    "description": "Year filter ex: ?year=2020",
                    "default": ""
                },
                {
                    "name": "list",
                    "type": "STRING",
                    "description": "Selected list -> most_pop_movies / most_pop_series / top_rated_series_250 / ...",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/random\"\nquerystring = {\"startYear\": \"\", \"genre\": \"\", \"titleType\": \"\", \"sort\": \"\", \"limit\": \"\", \"info\": \"\", \"endYear\": \"\", \"year\": \"\", \"list\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/random\"\nquerystring = {\"startYear\": \"\", \"genre\": \"\", \"titleType\": \"\", \"sort\": \"\", \"limit\": \"\", \"info\": \"\", \"endYear\": \"\", \"year\": \"\", \"list\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "error": "Random titles can be used only with lists",
                "stack": "\ud83e\udd5e",
                "results": null
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/titles/{id}",
            "url": "https://moviesdatabase.p.rapidapi.com/titles/{id}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "Imdb Id of title ex: tt0000002",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "info",
                    "type": "STRING",
                    "description": "Info type structure (default: base-info) -> base_info / mini_info / image / ...",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/{id}\"\nquerystring = {\"id\": \"\", \"info\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/{id}\"\nquerystring = {\"id\": \"\", \"info\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "error": "Wrong filter query parameter : id",
                "stack": "\ud83e\udd5e",
                "results": null
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/titles",
            "url": "https://moviesdatabase.p.rapidapi.com/titles",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "genre",
                    "type": "STRING",
                    "description": "Year filter ex: ?genre=Drama",
                    "default": ""
                },
                {
                    "name": "startYear",
                    "type": "NUMBER",
                    "description": "Year range filter -from- ex: ?startYear=2020",
                    "default": ""
                },
                {
                    "name": "titleType",
                    "type": "STRING",
                    "description": "Filter by type of title",
                    "default": ""
                },
                {
                    "name": "list",
                    "type": "STRING",
                    "description": "Selected list -> most_pop_movies / most_pop_series / top_rated_series_250 / ...",
                    "default": ""
                },
                {
                    "name": "year",
                    "type": "NUMBER",
                    "description": "Year filter ex: ?year=2020",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Add sorting (incr, decr) -> year.incr /year.decr",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "Page number",
                    "default": ""
                },
                {
                    "name": "info",
                    "type": "STRING",
                    "description": "Info type structure (default: mini-info) -> base_info / mini_info / image / ...",
                    "default": ""
                },
                {
                    "name": "endYear",
                    "type": "NUMBER",
                    "description": "Year range filter -to- ex: ?endYear=2020",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Number of titles per page (default: 10) -> 10 max ",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles\"\nquerystring = {\"genre\": \"\", \"startYear\": \"\", \"titleType\": \"\", \"list\": \"\", \"year\": \"\", \"sort\": \"\", \"page\": \"\", \"info\": \"\", \"endYear\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles\"\nquerystring = {\"genre\": \"\", \"startYear\": \"\", \"titleType\": \"\", \"list\": \"\", \"year\": \"\", \"sort\": \"\", \"page\": \"\", \"info\": \"\", \"endYear\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "page": 1,
                "next": null,
                "entries": 0,
                "results": []
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/titles/seasons/{seriesId}",
            "url": "https://moviesdatabase.p.rapidapi.com/titles/seasons/{seriesId}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "seriesId",
                    "type": "STRING",
                    "description": "Series Imdb Id",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/seasons/{seriesId}\"\nquerystring = {\"seriesId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://moviesdatabase.p.rapidapi.com/titles/seasons/{seriesId}\"\nquerystring = {\"seriesId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moviesdatabase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "error": "Wrong filter query parameter : seriesId",
                "stack": "\ud83e\udd5e",
                "results": null
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    ],
    "standardized_name": "moviesdatabase"
}