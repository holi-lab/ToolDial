{
    "product_id": "api_73ab404c-0251-4153-b18e-470d6b6f1642",
    "tool_description": "PresentID QR-Code & Barcode scanner API can scan both QR code and barcode.",
    "home_url": "https://rapidapi.com/PresentID/api/qr-code-and-barcode-scanner/",
    "name": "QR-code and Barcode Scanner",
    "title": "QR-code and Barcode Scanner",
    "pricing": "FREEMIUM",
    "tool_name": "QR-code and Barcode Scanner",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 885,
        "avgSuccessRate": 100,
        "popularityScore": 9.3,
        "__typename": "Score"
    },
    "host": "qr-code-and-barcode-scanner.p.rapidapi.com",
    "api_list": [
        {
            "name": "FileUpload",
            "url": "https://qr-code-and-barcode-scanner.p.rapidapi.com/ScanCode",
            "description": "\u2022\tSend data via Base64 or an image URL or an image file.\n\u2022\tImage size should not exceed 8 MB.\n\u2022\tAlso, the images should not be larger than 5000 pixels and smaller than 50 pixels.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://qr-code-and-barcode-scanner.p.rapidapi.com/ScanCode\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qr-code-and-barcode-scanner.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://qr-code-and-barcode-scanner.p.rapidapi.com/ScanCode\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qr-code-and-barcode-scanner.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "integer"
                    },
                    "statusMessage": {
                        "type": "string"
                    },
                    "hasError": {
                        "type": "boolean"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string"
                                },
                                "codeType": {
                                    "type": "string"
                                },
                                "allFields": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "fieldName": {
                                                "type": "string"
                                            },
                                            "fieldType": {
                                                "type": "string"
                                            },
                                            "fieldValue": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "codeArea": {
                                    "type": "object",
                                    "properties": {
                                        "x0": {
                                            "type": "integer"
                                        },
                                        "y0": {
                                            "type": "integer"
                                        },
                                        "x1": {
                                            "type": "integer"
                                        },
                                        "y1": {
                                            "type": "integer"
                                        },
                                        "x2": {
                                            "type": "integer"
                                        },
                                        "y2": {
                                            "type": "integer"
                                        },
                                        "x3": {
                                            "type": "integer"
                                        },
                                        "y3": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "LinkFile",
            "url": "https://qr-code-and-barcode-scanner.p.rapidapi.com/ScanCode",
            "description": "\u2022\tSend data via Base64 or an image URL or an image file.\n\u2022\tImage size should not exceed 8 MB.\n\u2022\tAlso, the images should not be larger than 5000 pixels and smaller than 50 pixels.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "linkFile",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://qr-code-and-barcode-scanner.p.rapidapi.com/ScanCode\"\nquerystring = {\"linkFile\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qr-code-and-barcode-scanner.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://qr-code-and-barcode-scanner.p.rapidapi.com/ScanCode\"\nquerystring = {\"linkFile\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qr-code-and-barcode-scanner.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "integer"
                    },
                    "statusMessage": {
                        "type": "string"
                    },
                    "hasError": {
                        "type": "boolean"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string"
                                },
                                "codeType": {
                                    "type": "string"
                                },
                                "allFields": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "fieldName": {
                                                "type": "string"
                                            },
                                            "fieldType": {
                                                "type": "string"
                                            },
                                            "fieldValue": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "codeArea": {
                                    "type": "object",
                                    "properties": {
                                        "x0": {
                                            "type": "integer"
                                        },
                                        "y0": {
                                            "type": "integer"
                                        },
                                        "x1": {
                                            "type": "integer"
                                        },
                                        "y1": {
                                            "type": "integer"
                                        },
                                        "x2": {
                                            "type": "integer"
                                        },
                                        "y2": {
                                            "type": "integer"
                                        },
                                        "x3": {
                                            "type": "integer"
                                        },
                                        "y3": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Base64",
            "url": "https://qr-code-and-barcode-scanner.p.rapidapi.com/ScanCode",
            "description": "\u2022\tSend data via Base64 or an image URL or an image file.\n\u2022\tImage size should not exceed 8 MB.\n\u2022\tAlso, the images should not be larger than 5000 pixels and smaller than 50 pixels.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageBase64",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://qr-code-and-barcode-scanner.p.rapidapi.com/ScanCode\"\nquerystring = {\"imageBase64\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qr-code-and-barcode-scanner.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://qr-code-and-barcode-scanner.p.rapidapi.com/ScanCode\"\nquerystring = {\"imageBase64\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qr-code-and-barcode-scanner.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "integer"
                    },
                    "statusMessage": {
                        "type": "string"
                    },
                    "hasError": {
                        "type": "boolean"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string"
                                },
                                "codeType": {
                                    "type": "string"
                                },
                                "allFields": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "fieldName": {
                                                "type": "string"
                                            },
                                            "fieldType": {
                                                "type": "string"
                                            },
                                            "fieldValue": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "codeArea": {
                                    "type": "object",
                                    "properties": {
                                        "x0": {
                                            "type": "integer"
                                        },
                                        "y0": {
                                            "type": "integer"
                                        },
                                        "x1": {
                                            "type": "integer"
                                        },
                                        "y1": {
                                            "type": "integer"
                                        },
                                        "x2": {
                                            "type": "integer"
                                        },
                                        "y2": {
                                            "type": "integer"
                                        },
                                        "x3": {
                                            "type": "integer"
                                        },
                                        "y3": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    ]
}