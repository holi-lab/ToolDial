{
    "product_id": "api_23945157-b6f5-4d73-b41c-89fffd22416b",
    "tool_description": "DeepAPI is an object detection API that is known for being very fast, easy to use, and highly accurate.",
    "home_url": "https://rapidapi.com/deep-api-deep-api-default/api/deepapi-the-easiest-object-detector-for-images/",
    "name": "DeepAPI - The easiest object detector for images",
    "title": "DeepAPI - The easiest object detector for images",
    "pricing": "FREEMIUM",
    "tool_name": "DeepAPI - The easiest object detector for images",
    "score": null,
    "host": "deepapi-the-easiest-object-detector-for-images.p.rapidapi.com",
    "api_list": [
        {
            "name": "/predict/detect",
            "url": "https://deepapi-the-easiest-object-detector-for-images.p.rapidapi.com/predict/detect",
            "description": "Get bounding boxes for common objects that are shown in a given image. You can pass the image file via form-data",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "image",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://deepapi-the-easiest-object-detector-for-images.p.rapidapi.com/predict/detect\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"deepapi-the-easiest-object-detector-for-images.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://deepapi-the-easiest-object-detector-for-images.p.rapidapi.com/predict/detect\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"deepapi-the-easiest-object-detector-for-images.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "x1": {
                            "type": "number",
                            "format": "float",
                            "description": "x-coordinate of the top left corner",
                            "minimum": -3.402823669209385e+38,
                            "maximum": 3.402823669209385e+38
                        },
                        "y1": {
                            "type": "number",
                            "format": "float",
                            "description": "y-coordinate of the top left corner",
                            "minimum": -3.402823669209385e+38,
                            "maximum": 3.402823669209385e+38
                        },
                        "x2": {
                            "type": "number",
                            "format": "float",
                            "description": "x-coordinate of the bottom right corner",
                            "minimum": -3.402823669209385e+38,
                            "maximum": 3.402823669209385e+38
                        },
                        "y2": {
                            "type": "number",
                            "format": "float",
                            "description": "y-coordinate of the bottom right corner",
                            "minimum": -3.402823669209385e+38,
                            "maximum": 3.402823669209385e+38
                        }
                    }
                }
            }
        }
    ]
}