{
    "product_id": "api_b4f0e273-c68c-4fd5-bdb9-304a48bff68f",
    "tool_description": "ML models have the ability to predict demand. However, a step further would be to generate actionable insights from this demand forecast. The context for this API is the supply chain domain. Given a demand forecast for certain articles, it will be able to suggest optimal buying suggestions based on some constraints. This is a specific version of the API. We can always customize the constraints!",
    "home_url": "https://rapidapi.com/therasslinpod/api/optimal-buying-suggestions/",
    "name": "Optimal Buying Suggestions",
    "title": "Optimal Buying Suggestions",
    "pricing": "FREEMIUM",
    "tool_name": "Optimal Buying Suggestions",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 7861,
        "avgSuccessRate": 75,
        "popularityScore": 8.6,
        "__typename": "Score"
    },
    "host": "optimal-buying-suggestions.p.rapidapi.com",
    "api_list": [
        {
            "name": "generate_buying_suggestions_get_buying_suggestions_post",
            "url": "https://optimal-buying-suggestions.p.rapidapi.com/get-buying-suggestions",
            "description": "Get buying suggestions from demand",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://optimal-buying-suggestions.p.rapidapi.com/get-buying-suggestions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"optimal-buying-suggestions.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://optimal-buying-suggestions.p.rapidapi.com/get-buying-suggestions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"optimal-buying-suggestions.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "buying_suggestions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "time_period": {
                                    "type": "integer"
                                },
                                "demand": {
                                    "type": "integer"
                                },
                                "stock": {
                                    "type": "integer"
                                },
                                "order_size": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "metadata": {
                        "type": "object",
                        "properties": {
                            "user_name": {
                                "type": "object"
                            },
                            "elapsed_time": {
                                "type": "integer"
                            },
                            "id": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    ]
}