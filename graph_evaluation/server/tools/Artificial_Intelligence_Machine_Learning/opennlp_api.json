{
    "product_id": "api_68aac93c-aa88-4629-8d78-735e8e3d2a17",
    "tool_description": "This API provides natural language processing (NLP) services, including language detection, sentence detection, tokenization, name finding, part-of-speech tagging, chunking, and parsing. It supports multiple languages, including English, German, Dutch, Danish, Portuguese, and Swedish.",
    "home_url": "https://rapidapi.com/WishBox/api/opennlp-api/",
    "name": "OpenNLP API",
    "title": "OpenNLP API",
    "pricing": "FREEMIUM",
    "tool_name": "OpenNLP API",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 7583,
        "avgSuccessRate": 100,
        "popularityScore": 8.5,
        "__typename": "Score"
    },
    "host": "opennlp-api.p.rapidapi.com",
    "api_list": [
        {
            "name": "/api/v1/nlp/chunker",
            "url": "https://opennlp-api.p.rapidapi.com/api/v1/nlp/chunker",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://opennlp-api.p.rapidapi.com/api/v1/nlp/chunker\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"opennlp-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://opennlp-api.p.rapidapi.com/api/v1/nlp/chunker\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"opennlp-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/api/v1/nlp/name-finder",
            "url": "https://opennlp-api.p.rapidapi.com/api/v1/nlp/name-finder",
            "description": "supported languages: en, de, da, nl, pt, se",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://opennlp-api.p.rapidapi.com/api/v1/nlp/name-finder\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"opennlp-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://opennlp-api.p.rapidapi.com/api/v1/nlp/name-finder\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"opennlp-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/api/v1/nlp/sentence-detection",
            "url": "https://opennlp-api.p.rapidapi.com/api/v1/nlp/sentence-detection",
            "description": "supported languages: en, de, da, nl, pt, se",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://opennlp-api.p.rapidapi.com/api/v1/nlp/sentence-detection\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"opennlp-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://opennlp-api.p.rapidapi.com/api/v1/nlp/sentence-detection\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"opennlp-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/api/v1/nlp/language-detection",
            "url": "https://opennlp-api.p.rapidapi.com/api/v1/nlp/language-detection",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://opennlp-api.p.rapidapi.com/api/v1/nlp/language-detection\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"opennlp-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://opennlp-api.p.rapidapi.com/api/v1/nlp/language-detection\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"opennlp-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/api/v1/nlp/tokenization",
            "url": "https://opennlp-api.p.rapidapi.com/api/v1/nlp/tokenization",
            "description": "supported languages: en, de, da, nl, pt, se",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://opennlp-api.p.rapidapi.com/api/v1/nlp/tokenization\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"opennlp-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://opennlp-api.p.rapidapi.com/api/v1/nlp/tokenization\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"opennlp-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/api/v1/nlp/parser",
            "url": "https://opennlp-api.p.rapidapi.com/api/v1/nlp/parser",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://opennlp-api.p.rapidapi.com/api/v1/nlp/parser\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"opennlp-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://opennlp-api.p.rapidapi.com/api/v1/nlp/parser\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"opennlp-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/api/v1/nlp/part-of-speech-tagger",
            "url": "https://opennlp-api.p.rapidapi.com/api/v1/nlp/part-of-speech-tagger",
            "description": "supported languages: en, es, nl",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://opennlp-api.p.rapidapi.com/api/v1/nlp/part-of-speech-tagger\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"opennlp-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://opennlp-api.p.rapidapi.com/api/v1/nlp/part-of-speech-tagger\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"opennlp-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    ]
}