{
    "tool_name": "Midjourney best experience",
    "tool_description": "Connect your project to midjourney | mj contain generate\u3001upsample\u3001variation...",
    "title": "Midjourney best experience",
    "pricing": "FREEMIUM",
    "score": {
        "avgServiceLevel": 98,
        "avgLatency": 522,
        "avgSuccessRate": 98,
        "popularityScore": 9.8,
        "__typename": "Score"
    },
    "home_url": "https://rapidapi.com/liuzhaolong765481/api/midjourney-best-experience/",
    "host": "midjourney-best-experience.p.rapidapi.com",
    "api_list": [
        {
            "name": "Blend Fast",
            "url": "https://midjourney-best-experience.p.rapidapi.com/mj/blend-fast",
            "description": "Merge multiple images into a novel new image,  containing 2 to 5 Image URL path. The effect of composite images is shown in the following figure\n![](https://images.freeimages.com/images/large-previews/218/my-dog-cutter-1499799.jpg#pic_center =160x120)\n![](https://images.freeimages.com/images/large-previews/ddf/tour-d-eiffel-1447025.jpg#pic_center =80x120)\n![](https://img.midjourneyapi.xyz/mj/olivia0339_None_e8e1be14-dd3d-4ae4-9aff-77c9891605a8.png#pic_center =250x250)",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "images_url1",
                    "type": "STRING",
                    "description": "Accessible image URL address",
                    "default": "https://images.freeimages.com/images/large-previews/218/my-dog-cutter-1499799.jpg"
                },
                {
                    "name": "images_url2",
                    "type": "STRING",
                    "description": "Accessible image URL address",
                    "default": "https://images.freeimages.com/images/large-previews/ddf/tour-d-eiffel-1447025.jpg"
                }
            ],
            "optional_parameters": [
                {
                    "name": "hook_url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "images_url5",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "images_url3",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "images_url4",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://midjourney-best-experience.p.rapidapi.com/mj/blend-fast\"\nquerystring = {\"images_url1\": images_url1, \"images_url2\": images_url2}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"midjourney-best-experience.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {}
        },
        {
            "name": "Blend Relax",
            "url": "https://midjourney-best-experience.p.rapidapi.com/mj/blend-relax",
            "description": "Merge multiple images into a novel new image,  containing 2 to 5 Image URL path.\n![](https://images.freeimages.com/images/large-previews/218/my-dog-cutter-1499799.jpg#pic_center =160x120)\n![](https://images.freeimages.com/images/large-previews/ddf/tour-d-eiffel-1447025.jpg#pic_center =80x120)\n![](https://img.midjourneyapi.xyz/mj/olivia0339_None_e8e1be14-dd3d-4ae4-9aff-77c9891605a8.png#pic_center =250x250)",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "images_url1",
                    "type": "STRING",
                    "description": "Accessible image URL address",
                    "default": "https://images.freeimages.com/images/large-previews/218/my-dog-cutter-1499799.jpg"
                },
                {
                    "name": "images_url2",
                    "type": "STRING",
                    "description": "Accessible image URL address",
                    "default": "https://images.freeimages.com/images/large-previews/ddf/tour-d-eiffel-1447025.jpg"
                }
            ],
            "optional_parameters": [
                {
                    "name": "images_url4",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "images_url3",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "hook_url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "images_url5",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://midjourney-best-experience.p.rapidapi.com/mj/blend-relax\"\nquerystring = {\"images_url1\": images_url1, \"images_url2\": images_url2}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"midjourney-best-experience.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {}
        },
        {
            "name": "Generate Relax",
            "url": "https://midjourney-best-experience.p.rapidapi.com/mj/generate-relax",
            "description": "generate the images relax\nGenerate queue asynchronous notifications to hook_ url, overall generation time is Depends on account status and task queuing",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Content-Type",
                    "type": "STRING",
                    "description": "",
                    "default": "application/json"
                },
                {
                    "name": "prompt",
                    "type": "STRING",
                    "description": "",
                    "default": "a beautiful cat --ar 1920:1080"
                }
            ],
            "optional_parameters": [
                {
                    "name": "hook_url",
                    "type": "STRING",
                    "description": "if set will notify the result to your hook_url",
                    "default": "https://www.google.com"
                }
            ],
            "code": "import requests\n\nurl = \"https://midjourney-best-experience.p.rapidapi.com/mj/generate-relax\"\nquerystring = {\"Content-Type\": content_type, \"prompt\": prompt, \"hook_url\": hook_url}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"midjourney-best-experience.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {}
        },
        {
            "name": "Generate Fast",
            "url": "https://midjourney-best-experience.p.rapidapi.com/mj/generate-fast",
            "description": "generate the images fast  \nGenerate queue asynchronous notifications to hook_ url, overall generation time is around 40-60s",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "prompt",
                    "type": "STRING",
                    "description": "",
                    "default": "a beautiful cat --ar 1920:1080"
                }
            ],
            "optional_parameters": [
                {
                    "name": "hook_url",
                    "type": "STRING",
                    "description": "if set  will notify the result to your hook_url",
                    "default": "https://www.google.com/"
                }
            ],
            "code": "import requests\n\nurl = \"https://midjourney-best-experience.p.rapidapi.com/mj/generate-fast\"\nquerystring = {\"prompt\": prompt, \"hook_url\": hook_url}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"midjourney-best-experience.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {}
        },
        {
            "name": "Describe Fast",
            "url": "https://midjourney-best-experience.p.rapidapi.com/mj/describe-fast",
            "description": "Generate four possible prompts based on the uploaded image",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image_url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://images.freeimages.com/images/large-previews/218/my-dog-cutter-1499799.jpg"
                }
            ],
            "optional_parameters": [
                {
                    "name": "hook_url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://midjourney-best-experience.p.rapidapi.com/mj/describe-fast\"\nquerystring = {\"image_url\": image_url}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"midjourney-best-experience.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {}
        },
        {
            "name": "Action Relax(U&V...)",
            "url": "https://midjourney-best-experience.p.rapidapi.com/mj/action-relax",
            "description": "- Do the relax action\n\n- You can perform upsample (same as the UI, U2...), variation (V1, V2...), zoom out 1.5x, zoom out 2x, pan, and other operations on the images generated in the first step",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image_id",
                    "type": "STRING",
                    "description": "the relax  job  the last image_id",
                    "default": "11209086137713295861"
                },
                {
                    "name": "action",
                    "type": "STRING",
                    "description": "the action is the enumeration values returned in the action list in the callback ",
                    "default": "variation1"
                }
            ],
            "optional_parameters": [
                {
                    "name": "hook_url",
                    "type": "STRING",
                    "description": "if set will notify the result to your hook_url",
                    "default": "https://www.google.com"
                }
            ],
            "code": "import requests\n\nurl = \"https://midjourney-best-experience.p.rapidapi.com/mj/action-relax\"\nquerystring = {\"image_id\": image_id, \"action\": action, \"hook_url\": hook_url}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"midjourney-best-experience.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {}
        },
        {
            "name": "Describe Relax",
            "url": "https://midjourney-best-experience.p.rapidapi.com/mj/describe-relax",
            "description": "Generate four possible prompts based on the uploaded image",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image_url",
                    "type": "STRING",
                    "description": "Image URL path",
                    "default": "https://images.freeimages.com/images/large-previews/218/my-dog-cutter-1499799.jpg"
                }
            ],
            "optional_parameters": [
                {
                    "name": "hook_url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://midjourney-best-experience.p.rapidapi.com/mj/describe-relax\"\nquerystring = {\"image_url\": image_url}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"midjourney-best-experience.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {}
        },
        {
            "name": "get job by task id",
            "url": "https://midjourney-best-experience.p.rapidapi.com/mj/get-task-id",
            "description": "you can get the generate job  and  action job status by the task_id, and the task_id will expired at 24 hours after",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "task_id",
                    "type": "STRING",
                    "description": "",
                    "default": "6ddd8121-2ae4-af61-b73d-eaefc8318d09"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://midjourney-best-experience.p.rapidapi.com/mj/get-task-id\"\nquerystring = {\"task_id\": task_id}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"midjourney-best-experience.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {}
        },
        {
            "name": "Action Fast\uff08U&V...\uff09",
            "url": "https://midjourney-best-experience.p.rapidapi.com/mj/action-fast",
            "description": "- Do the fast action\n\n- You can perform upsample (same as the UI, U2...), variation (V1, V2...), zoom out 1.5x, zoom out 2x, pan, and other operations on the images generated in the first step",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "action",
                    "type": "STRING",
                    "description": "the action is the enumeration values returned in the action list in the callback ",
                    "default": "variation1"
                },
                {
                    "name": "image_id",
                    "type": "STRING",
                    "description": "the fast job callback the last image_id",
                    "default": "11209086137713295861"
                }
            ],
            "optional_parameters": [
                {
                    "name": "hook_url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.google.com"
                }
            ],
            "code": "import requests\n\nurl = \"https://midjourney-best-experience.p.rapidapi.com/mj/action-fast\"\nquerystring = {\"action\": action, \"image_id\": image_id, \"hook_url\": hook_url}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"midjourney-best-experience.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {}
        },
        {
            "name": "Blend Fast",
            "url": "https://midjourney-best-experience.p.rapidapi.com/mj/blend-fast",
            "description": "Merge multiple images into a novel new image,  containing 2 to 5 Image URL path. The effect of composite images is shown in the following figure\n![](https://images.freeimages.com/images/large-previews/218/my-dog-cutter-1499799.jpg#pic_center =160x120)\n![](https://images.freeimages.com/images/large-previews/ddf/tour-d-eiffel-1447025.jpg#pic_center =80x120)\n![](https://img.midjourneyapi.xyz/mj/olivia0339_None_e8e1be14-dd3d-4ae4-9aff-77c9891605a8.png#pic_center =250x250)",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "images_url1",
                    "type": "STRING",
                    "description": "Accessible image URL address",
                    "default": "https://images.freeimages.com/images/large-previews/218/my-dog-cutter-1499799.jpg"
                },
                {
                    "name": "images_url2",
                    "type": "STRING",
                    "description": "Accessible image URL address",
                    "default": "https://images.freeimages.com/images/large-previews/ddf/tour-d-eiffel-1447025.jpg"
                }
            ],
            "optional_parameters": [
                {
                    "name": "hook_url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "images_url5",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "images_url3",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "images_url4",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://midjourney-best-experience.p.rapidapi.com/mj/blend-fast\"\nquerystring = {\"hook_url\": \"\", \"images_url1\": \"https://images.freeimages.com/images/large-previews/218/my-dog-cutter-1499799.jpg\", \"images_url5\": \"\", \"images_url3\": \"\", \"images_url4\": \"\", \"images_url2\": \"https://images.freeimages.com/images/large-previews/ddf/tour-d-eiffel-1447025.jpg\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjourney-best-experience.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://midjourney-best-experience.p.rapidapi.com/mj/blend-fast\"\nquerystring = {\"hook_url\": \"\", \"images_url1\": \"https://images.freeimages.com/images/large-previews/218/my-dog-cutter-1499799.jpg\", \"images_url5\": \"\", \"images_url3\": \"\", \"images_url4\": \"\", \"images_url2\": \"https://images.freeimages.com/images/large-previews/ddf/tour-d-eiffel-1447025.jpg\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjourney-best-experience.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Blend Relax",
            "url": "https://midjourney-best-experience.p.rapidapi.com/mj/blend-relax",
            "description": "Merge multiple images into a novel new image,  containing 2 to 5 Image URL path.\n![](https://images.freeimages.com/images/large-previews/218/my-dog-cutter-1499799.jpg#pic_center =160x120)\n![](https://images.freeimages.com/images/large-previews/ddf/tour-d-eiffel-1447025.jpg#pic_center =80x120)\n![](https://img.midjourneyapi.xyz/mj/olivia0339_None_e8e1be14-dd3d-4ae4-9aff-77c9891605a8.png#pic_center =250x250)",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "images_url1",
                    "type": "STRING",
                    "description": "Accessible image URL address",
                    "default": "https://images.freeimages.com/images/large-previews/218/my-dog-cutter-1499799.jpg"
                },
                {
                    "name": "images_url2",
                    "type": "STRING",
                    "description": "Accessible image URL address",
                    "default": "https://images.freeimages.com/images/large-previews/ddf/tour-d-eiffel-1447025.jpg"
                }
            ],
            "optional_parameters": [
                {
                    "name": "images_url4",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "images_url3",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "hook_url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "images_url5",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://midjourney-best-experience.p.rapidapi.com/mj/blend-relax\"\nquerystring = {\"images_url4\": \"\", \"images_url3\": \"\", \"hook_url\": \"\", \"images_url5\": \"\", \"images_url1\": \"https://images.freeimages.com/images/large-previews/218/my-dog-cutter-1499799.jpg\", \"images_url2\": \"https://images.freeimages.com/images/large-previews/ddf/tour-d-eiffel-1447025.jpg\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjourney-best-experience.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://midjourney-best-experience.p.rapidapi.com/mj/blend-relax\"\nquerystring = {\"images_url4\": \"\", \"images_url3\": \"\", \"hook_url\": \"\", \"images_url5\": \"\", \"images_url1\": \"https://images.freeimages.com/images/large-previews/218/my-dog-cutter-1499799.jpg\", \"images_url2\": \"https://images.freeimages.com/images/large-previews/ddf/tour-d-eiffel-1447025.jpg\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjourney-best-experience.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Generate Relax",
            "url": "https://midjourney-best-experience.p.rapidapi.com/mj/generate-relax",
            "description": "generate the images relax\nGenerate queue asynchronous notifications to hook_ url, overall generation time is Depends on account status and task queuing",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "prompt",
                    "type": "STRING",
                    "description": "",
                    "default": "a beautiful cat --ar 1920:1080"
                }
            ],
            "optional_parameters": [
                {
                    "name": "hook_url",
                    "type": "STRING",
                    "description": "if set will notify the result to your hook_url",
                    "default": "https://www.google.com"
                }
            ],
            "code": "import requests\n\nurl = \"https://midjourney-best-experience.p.rapidapi.com/mj/generate-relax\"\nquerystring = {\"prompt\": \"a beautiful cat --ar 1920:1080\", \"hook_url\": \"https://www.google.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjourney-best-experience.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://midjourney-best-experience.p.rapidapi.com/mj/generate-relax\"\nquerystring = {\"prompt\": \"a beautiful cat --ar 1920:1080\", \"hook_url\": \"https://www.google.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjourney-best-experience.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Generate Fast",
            "url": "https://midjourney-best-experience.p.rapidapi.com/mj/generate-fast",
            "description": "generate the images fast  \nGenerate queue asynchronous notifications to hook_ url, overall generation time is around 40-60s",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "prompt",
                    "type": "STRING",
                    "description": "",
                    "default": "a beautiful cat --ar 1920:1080"
                }
            ],
            "optional_parameters": [
                {
                    "name": "hook_url",
                    "type": "STRING",
                    "description": "if set  will notify the result to your hook_url",
                    "default": "https://www.google.com/"
                }
            ],
            "code": "import requests\n\nurl = \"https://midjourney-best-experience.p.rapidapi.com/mj/generate-fast\"\nquerystring = {\"prompt\": \"a beautiful cat --ar 1920:1080\", \"hook_url\": \"https://www.google.com/\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjourney-best-experience.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://midjourney-best-experience.p.rapidapi.com/mj/generate-fast\"\nquerystring = {\"prompt\": \"a beautiful cat --ar 1920:1080\", \"hook_url\": \"https://www.google.com/\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjourney-best-experience.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Describe Fast",
            "url": "https://midjourney-best-experience.p.rapidapi.com/mj/describe-fast",
            "description": "Generate four possible prompts based on the uploaded image",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image_url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://images.freeimages.com/images/large-previews/218/my-dog-cutter-1499799.jpg"
                }
            ],
            "optional_parameters": [
                {
                    "name": "hook_url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://midjourney-best-experience.p.rapidapi.com/mj/describe-fast\"\nquerystring = {\"hook_url\": \"\", \"image_url\": \"https://images.freeimages.com/images/large-previews/218/my-dog-cutter-1499799.jpg\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjourney-best-experience.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://midjourney-best-experience.p.rapidapi.com/mj/describe-fast\"\nquerystring = {\"hook_url\": \"\", \"image_url\": \"https://images.freeimages.com/images/large-previews/218/my-dog-cutter-1499799.jpg\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjourney-best-experience.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Action Relax(U&V...)",
            "url": "https://midjourney-best-experience.p.rapidapi.com/mj/action-relax",
            "description": "- Do the relax action\n\n- You can perform upsample (same as the UI, U2...), variation (V1, V2...), zoom out 1.5x, zoom out 2x, pan, and other operations on the images generated in the first step",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image_id",
                    "type": "STRING",
                    "description": "the relax  job  the last image_id",
                    "default": "11209086137713295861"
                },
                {
                    "name": "action",
                    "type": "STRING",
                    "description": "the action is the enumeration values returned in the action list in the callback ",
                    "default": "variation1"
                }
            ],
            "optional_parameters": [
                {
                    "name": "hook_url",
                    "type": "STRING",
                    "description": "if set will notify the result to your hook_url",
                    "default": "https://www.google.com"
                }
            ],
            "code": "import requests\n\nurl = \"https://midjourney-best-experience.p.rapidapi.com/mj/action-relax\"\nquerystring = {\"image_id\": \"11209086137713295861\", \"action\": \"variation1\", \"hook_url\": \"https://www.google.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjourney-best-experience.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://midjourney-best-experience.p.rapidapi.com/mj/action-relax\"\nquerystring = {\"image_id\": \"11209086137713295861\", \"action\": \"variation1\", \"hook_url\": \"https://www.google.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjourney-best-experience.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Describe Relax",
            "url": "https://midjourney-best-experience.p.rapidapi.com/mj/describe-relax",
            "description": "Generate four possible prompts based on the uploaded image",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image_url",
                    "type": "STRING",
                    "description": "Image URL path",
                    "default": "https://images.freeimages.com/images/large-previews/218/my-dog-cutter-1499799.jpg"
                }
            ],
            "optional_parameters": [
                {
                    "name": "hook_url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://midjourney-best-experience.p.rapidapi.com/mj/describe-relax\"\nquerystring = {\"image_url\": \"https://images.freeimages.com/images/large-previews/218/my-dog-cutter-1499799.jpg\", \"hook_url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjourney-best-experience.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://midjourney-best-experience.p.rapidapi.com/mj/describe-relax\"\nquerystring = {\"image_url\": \"https://images.freeimages.com/images/large-previews/218/my-dog-cutter-1499799.jpg\", \"hook_url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjourney-best-experience.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Action Fast\uff08U&V...\uff09",
            "url": "https://midjourney-best-experience.p.rapidapi.com/mj/action-fast",
            "description": "- Do the fast action\n\n- You can perform upsample (same as the UI, U2...), variation (V1, V2...), zoom out 1.5x, zoom out 2x, pan, and other operations on the images generated in the first step",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "action",
                    "type": "STRING",
                    "description": "the action is the enumeration values returned in the action list in the callback ",
                    "default": "variation1"
                },
                {
                    "name": "image_id",
                    "type": "STRING",
                    "description": "the fast job callback the last image_id",
                    "default": "11209086137713295861"
                }
            ],
            "optional_parameters": [
                {
                    "name": "hook_url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.google.com"
                }
            ],
            "code": "import requests\n\nurl = \"https://midjourney-best-experience.p.rapidapi.com/mj/action-fast\"\nquerystring = {\"action\": \"variation1\", \"image_id\": \"11209086137713295861\", \"hook_url\": \"https://www.google.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjourney-best-experience.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://midjourney-best-experience.p.rapidapi.com/mj/action-fast\"\nquerystring = {\"action\": \"variation1\", \"image_id\": \"11209086137713295861\", \"hook_url\": \"https://www.google.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjourney-best-experience.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        }
    ]
}