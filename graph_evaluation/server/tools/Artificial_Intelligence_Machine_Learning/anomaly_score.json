{
    "tool_name": "Anomaly Score",
    "tool_description": "\"Unleash the Power of Random Tree Forest Algorithm to Spot Outliers in Your Data!\" With this cutting-edge technology, you can easily detect anomalies in both CSV batch and real-time data, and enrich your results with a unique anomaly score for further analysis. Say goodbye to manual outlier detection and hello to lightning-fast, efficient data processing!\"",
    "title": "Anomaly Score",
    "pricing": "FREEMIUM",
    "score": null,
    "home_url": "https://rapidapi.com/loreii/api/anomaly-score/",
    "host": "anomaly-score.p.rapidapi.com",
    "api_list": [
        {
            "name": "Evaluate",
            "url": "https://anomaly-score.p.rapidapi.com/eval",
            "description": "**!WARNING Rapid API add extra unneeded quotation marks in mock generation**\nGet the anomaly score from the random tree forest and return a CVS file with anomaly score ordered by line as batch. The CSV input must contain the same set of columns used during the init. For premium subscription is possible to specify the class as parameter \"/eval/{class}\" for each class is associated a different model.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://anomaly-score.p.rapidapi.com/eval\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"anomaly-score.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Stream",
            "url": "https://anomaly-score.p.rapidapi.com/stream",
            "description": "**!WARNING Rapid API add extra unneeded quotation marks in mock generation**\nPopulate model and get an anomaly score on live stream of batch data. Using this extension you are able to keep the model in sync with the data you are sending and retrieve the anomaly score for each entry. For premium subscription is possible to specify the class as parameter \"/init/{class}\" for each class is associated a different model.\n\n**!WARNING Rapid API add extra unneeded quotation marks in mock generation**\n\nYou can pre initialize the model as usual with the /init API and instead using the eval to retrieve the anomaly scores, use the /stream API which will add the entries to keep the model up to date.\n\nAs well as the other API if you are using the appropriate Plan you can use multiple model one for each Class of dataset.\nAs example if your Company have new requirement to retrieve the anomaly scores for Retail transactions coming from a POS and identify the anomaly in Warehouse bills, you are able to create two different CLASSES where as example the first one called POS include amount, number of items, cashier identifier and a second Class warehouse containing  as example Appraisal,Balance,Bid,Bill,Billing,Branch.",
            "method": "PUT",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://anomaly-score.p.rapidapi.com/stream\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"anomaly-score.p.rapidapi.com\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Model initialization",
            "url": "https://anomaly-score.p.rapidapi.com/init",
            "description": "**!WARNING Rapid API add extra unneeded quotation marks in mock generation**\nInitialize the random tree forest and built the model among the date sent in POST as CSV.\nThe CSV can contain an arbitrary number of column, but each line need to be consistent with all the others.\n Are supported both numbers and strings which will encoded as enums.\n\nFor premium subscription is possible to specify the class as parameter \"/init/{class}\" for each class is associated a different model.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://anomaly-score.p.rapidapi.com/init\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"anomaly-score.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Reset",
            "url": "https://anomaly-score.p.rapidapi.com/reset/{class}",
            "description": "Might happen time to time you want to recreate you model and clean it for a new training. In order to do it \"/reset\" API let you remove the default model or a class of it \"/reset/{class}\". \nThis is especially  useful when you init the model with a wrong data set.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "class",
                    "type": "string",
                    "description": "",
                    "default": "CLASS"
                }
            ],
            "code": "import requests\n\nurl = \"https://anomaly-score.p.rapidapi.com/reset/{class}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"anomaly-score.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Evaluate",
            "url": "https://anomaly-score.p.rapidapi.com/eval",
            "description": "**!WARNING Rapid API add extra unneeded quotation marks in mock generation**\nGet the anomaly score from the random tree forest and return a CVS file with anomaly score ordered by line as batch. The CSV input must contain the same set of columns used during the init. For premium subscription is possible to specify the class as parameter \"/eval/{class}\" for each class is associated a different model.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://anomaly-score.p.rapidapi.com/eval\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"anomaly-score.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://anomaly-score.p.rapidapi.com/eval\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"anomaly-score.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Model initialization",
            "url": "https://anomaly-score.p.rapidapi.com/init",
            "description": "**!WARNING Rapid API add extra unneeded quotation marks in mock generation**\nInitialize the random tree forest and built the model among the date sent in POST as CSV.\nThe CSV can contain an arbitrary number of column, but each line need to be consistent with all the others.\n Are supported both numbers and strings which will encoded as enums.\n\nFor premium subscription is possible to specify the class as parameter \"/init/{class}\" for each class is associated a different model.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://anomaly-score.p.rapidapi.com/init\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"anomaly-score.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://anomaly-score.p.rapidapi.com/init\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"anomaly-score.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}