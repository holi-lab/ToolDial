{
    "tool_name": "SpamSpy",
    "tool_description": "AI-powered spam detection to secure & streamline communication. ",
    "title": "SpamSpy",
    "pricing": "FREEMIUM",
    "score": {
        "avgServiceLevel": 51,
        "avgLatency": 11124,
        "avgSuccessRate": 44,
        "popularityScore": 9.3,
        "__typename": "Score"
    },
    "home_url": "https://rapidapi.com/deviated-systems-deviated-systems-default/api/spamspy/",
    "host": "spamspy.p.rapidapi.com",
    "api_list": [
        {
            "name": "Learn",
            "url": "https://spamspy.p.rapidapi.com/Learn",
            "description": "The \"Learn\" endpoint adds the content (located in the query string) provided to be processed at a later date and then  to be identified as spam or not during the next training cycles. \n**WARRNING/NOTE:** *While content submitted is not publicly viewable, submitted content sometimes does require our trusted internal reviewers intervention; as such, please refrain from submitting vulnerable information. For high security requirements, confidential, overly sensitive data, etc. , contact us directly about having a private/custom model setup for your needs. We can easily work with you in creating your custom/private models so they have endpoints created to conform with any desired/existing security measures.*\n\n***SpamSpy is not liable for any resulting consequences should  you disregard this warning.***\n\n- Fetch Method POST\n- Returns String: **'Learning Content** / **Learn API Unsuccessful**\nExample Response:\n`{\"SpamSpyResult\":'Learning Content'}` (content has been added to the learn queue)\n`{\"SpamSpyResult\":'Learn API Unsuccessful'}`",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "content",
                    "type": "STRING",
                    "description": "",
                    "default": "Get Free Tickets to this famous artist!!! Only pay shipping and handling"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://spamspy.p.rapidapi.com/Learn\"\nquerystring = {\"content\": content}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"spamspy.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {}
        },
        {
            "name": "Remember",
            "url": "https://spamspy.p.rapidapi.com/Remember",
            "description": "Functions as a free & unlimited version of the classic reactive spam filtering approach.  Recommended to be used to cut down on \"Comprehend\" endpoint call usage if the content has a match, there is no need to have SpamSpy recalculate responses it has already reviewed. \nThis endpoint checks the existing spam database for queried content and sends back the latest scanned result if the content exists yet.\n\nExample Responses:\n`{\"SpamSpyResult\":true}` (content is spam)\n`{\"SpamSpyResult\":false}`(content is not spam)\n`{\"SpamSpyResult\":\"Content not yet scanned\"}` (content has **NOT YET** been scanned)",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "content",
                    "type": "STRING",
                    "description": "",
                    "default": "SIX chances to win CASH! From 100 to 20,000 pounds txt> CSH11 and send to 87575. Cost 150p/day, 6days, 16+ TsandCs apply Reply HL 4 info"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://spamspy.p.rapidapi.com/Remember\"\nquerystring = {\"content\": content}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"spamspy.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Auth Check",
            "url": "https://spamspy.p.rapidapi.com/Auth",
            "description": "Checks if the API Key is still valid",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://spamspy.p.rapidapi.com/Auth\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"spamspy.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Comprehend",
            "url": "https://spamspy.p.rapidapi.com/Comprehend",
            "description": "Comprehend uses the current AI public modals and submits the content (located in the query string) to be identified as spam or not.\n- Fetch Method Get\n- Returns Boolean: **true** / **false**\nExample Response:\n`{\"SpamSpyResult\":true}` (content is spam)\n`{\"SpamSpyResult\":false}`(content is not spam)",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "content",
                    "type": "STRING",
                    "description": "",
                    "default": "You won $1,000,00 congratulations winner come recieve your prize!"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://spamspy.p.rapidapi.com/Comprehend\"\nquerystring = {\"content\": content}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"spamspy.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {}
        },
        {
            "name": "Learn",
            "url": "https://spamspy.p.rapidapi.com/Learn",
            "description": "The \"Learn\" endpoint adds the content (located in the query string) provided to be processed at a later date and then  to be identified as spam or not during the next training cycles. \n**WARRNING/NOTE:** *While content submitted is not publicly viewable, submitted content sometimes does require our trusted internal reviewers intervention; as such, please refrain from submitting vulnerable information. For high security requirements, confidential, overly sensitive data, etc. , contact us directly about having a private/custom model setup for your needs. We can easily work with you in creating your custom/private models so they have endpoints created to conform with any desired/existing security measures.*\n\n***SpamSpy is not liable for any resulting consequences should  you disregard this warning.***\n\n- Fetch Method POST\n- Returns String: **'Learning Content** / **Learn API Unsuccessful**\nExample Response:\n`{\"SpamSpyResult\":'Learning Content'}` (content has been added to the learn queue)\n`{\"SpamSpyResult\":'Learn API Unsuccessful'}`",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "content",
                    "type": "STRING",
                    "description": "",
                    "default": "Get Free Tickets to this famous artist!!! Only pay shipping and handling"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://spamspy.p.rapidapi.com/Learn\"\nquerystring = {\"content\": \"Get Free Tickets to this famous artist!!! Only pay shipping and handling\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"spamspy.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://spamspy.p.rapidapi.com/Learn\"\nquerystring = {\"content\": \"Get Free Tickets to this famous artist!!! Only pay shipping and handling\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"spamspy.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        }
    ]
}