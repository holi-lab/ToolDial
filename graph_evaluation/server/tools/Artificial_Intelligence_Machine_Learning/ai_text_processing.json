{
    "product_id": "api_29a8df62-95dd-47a7-9540-911fee367f5a",
    "tool_description": "The AI Text Processing API is an AI-powered solution for understanding and analyzing text.",
    "home_url": "https://rapidapi.com/protosim-protosim-default/api/ai-text-processing/",
    "name": "AI Text Processing",
    "title": "AI Text Processing",
    "pricing": "FREEMIUM",
    "tool_name": "AI Text Processing",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 521,
        "avgSuccessRate": 100,
        "popularityScore": 8.7,
        "__typename": "Score"
    },
    "host": "ai-text-processing.p.rapidapi.com",
    "api_list": [
        {
            "name": "Array to Centroid Similarity",
            "url": "https://ai-text-processing.p.rapidapi.com/rapidapi/ai-text-processing/array-to-centroid-similarity",
            "description": "Calculates the cosine similarity between the centroids of two arrays of texts.\r\n\r\nLeveraging AI techniques, it converts each text in both arrays into its corresponding embedding, calculates the centroid of the embeddings in each array, and computes the cosine similarity between the two centroids. The cosine similarity value ranges from 0 to 1, with 1 indicating identical vectors and 0 indicating completely dissimilar vectors.\r\n\r\nThis is particularly useful in various applications such as array-level text comparison, multi-document clustering, and cross-domain text similarity analysis.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ComparisonTextArray",
                    "type": "ARRAY",
                    "description": "The second array of text values whose centroid you want to compare.",
                    "default": "[]"
                },
                {
                    "name": "BaseTextArray",
                    "type": "ARRAY",
                    "description": "The first array of text values that you want to compare.",
                    "default": "[]"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ai-text-processing.p.rapidapi.com/rapidapi/ai-text-processing/array-to-centroid-similarity\"\nquerystring = {\"ComparisonTextArray\": \"[]\", \"BaseTextArray\": \"[]\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-text-processing.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ai-text-processing.p.rapidapi.com/rapidapi/ai-text-processing/array-to-centroid-similarity\"\nquerystring = {\"ComparisonTextArray\": \"[]\", \"BaseTextArray\": \"[]\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-text-processing.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Array Similarities",
            "url": "https://ai-text-processing.p.rapidapi.com/rapidapi/ai-text-processing/array-similarities",
            "description": "Calculates the pairwise cosine similarities between two arrays of texts.\r\n\r\nLeveraging AI techniques, it converts each text in both arrays into its corresponding embedding and computes the cosine similarity between each pair of texts from the two arrays. The cosine similarity value ranges from 0 to 1, with 1 indicating identical vectors and 0 indicating completely dissimilar vectors.\r\n\r\nThis is particularly useful in various applications such as cross-language similarity computation, multi-document comparison, and cross-domain text analysis.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "BaseTextArray",
                    "type": "ARRAY",
                    "description": "The first array of text values that you want to compare.",
                    "default": "[]"
                },
                {
                    "name": "ComparisonTextArray",
                    "type": "ARRAY",
                    "description": "The second array of text values that you want to compare.",
                    "default": "[]"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ai-text-processing.p.rapidapi.com/rapidapi/ai-text-processing/array-similarities\"\nquerystring = {\"BaseTextArray\": \"[]\", \"ComparisonTextArray\": \"[]\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-text-processing.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ai-text-processing.p.rapidapi.com/rapidapi/ai-text-processing/array-similarities\"\nquerystring = {\"BaseTextArray\": \"[]\", \"ComparisonTextArray\": \"[]\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-text-processing.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Centroid Similarity",
            "url": "https://ai-text-processing.p.rapidapi.com/rapidapi/ai-text-processing/centroid-similarity",
            "description": "Calculates the cosine similarity between the centroid of an array of texts and each text in the array.\r\n\r\nLeveraging AI techniques, it converts each text in the array into its corresponding embedding, calculates the centroid of the array embeddings, and computes the cosine similarity between the centroid and each array text. The cosine similarity value ranges from 0 to 1, with 1 indicating identical vectors and 0 indicating completely dissimilar vectors.\r\n\r\nThis is particularly useful in various applications such as outlier detection, text clustering, and topic modeling.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "BaseTextArray",
                    "type": "ARRAY",
                    "description": "The first array of text values whose centroid you want to compare.",
                    "default": "[]"
                },
                {
                    "name": "ComparisonTextArray",
                    "type": "ARRAY",
                    "description": "The second array of text values whose centroid you want to compare.",
                    "default": "[]"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ai-text-processing.p.rapidapi.com/rapidapi/ai-text-processing/centroid-similarity\"\nquerystring = {\"BaseTextArray\": \"[]\", \"ComparisonTextArray\": \"[]\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-text-processing.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ai-text-processing.p.rapidapi.com/rapidapi/ai-text-processing/centroid-similarity\"\nquerystring = {\"BaseTextArray\": \"[]\", \"ComparisonTextArray\": \"[]\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-text-processing.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Text to Array Similarities",
            "url": "https://ai-text-processing.p.rapidapi.com/rapidapi/ai-text-processing/text-to-array-similarities",
            "description": "Calculates the cosine similarity between a base text and an array of texts.\r\n\r\nLeveraging AI techniques, it converts the base text and each text in the array into embeddings, and computes the cosine similarity between the base text and each text in the array. The cosine similarity value ranges from 0 to 1, with 1 indicating identical vectors and 0 indicating completely dissimilar vectors.\r\n\r\nThis is particularly useful in various applications such as text classification, content recommendation, and nearest neighbor searches.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Text",
                    "type": "STRING",
                    "description": "The piece of text that you want to compare.",
                    "default": ""
                },
                {
                    "name": "TextArray",
                    "type": "ARRAY",
                    "description": "The array of texts that you want to compare.",
                    "default": "[]"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ai-text-processing.p.rapidapi.com/rapidapi/ai-text-processing/text-to-array-similarities\"\nquerystring = {\"Text\": \"\", \"TextArray\": \"[]\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-text-processing.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ai-text-processing.p.rapidapi.com/rapidapi/ai-text-processing/text-to-array-similarities\"\nquerystring = {\"Text\": \"\", \"TextArray\": \"[]\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-text-processing.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Text to Centroid Similarity",
            "url": "https://ai-text-processing.p.rapidapi.com/rapidapi/ai-text-processing/text-to-centroid-similarity",
            "description": "Calculates the cosine similarity between a base text and the centroid of an array of texts.\r\n\r\nLeveraging AI techniques, it converts the base text and the texts in the array into embeddings, calculates the centroid of the array embeddings, and finally computes the cosine similarity between the base text embedding and the centroid embedding. The cosine similarity value ranges from 0 to 1, with 1 indicating identical vectors and 0 indicating completely dissimilar vectors.\r\n\r\nThis is particularly useful in various applications such as text clustering, topic modeling, and document summarization.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "TextArray",
                    "type": "ARRAY",
                    "description": "The array of texts that will be used to calculate the centroid.",
                    "default": "[]"
                },
                {
                    "name": "Text",
                    "type": "STRING",
                    "description": "The piece of text that you want to compare.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ai-text-processing.p.rapidapi.com/rapidapi/ai-text-processing/text-to-centroid-similarity\"\nquerystring = {\"TextArray\": \"[]\", \"Text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-text-processing.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ai-text-processing.p.rapidapi.com/rapidapi/ai-text-processing/text-to-centroid-similarity\"\nquerystring = {\"TextArray\": \"[]\", \"Text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-text-processing.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "similarity": {
                        "type": "number",
                        "format": "double",
                        "minimum": -1.7976931348623157e+308,
                        "maximum": 1.7976931348623157e+308
                    }
                },
                "additionalProperties": false
            }
        },
        {
            "name": "Pairwise Similarity",
            "url": "https://ai-text-processing.p.rapidapi.com/rapidapi/ai-text-processing/pairwise-similarity",
            "description": "Calculates the pairwise cosine similarity among an array of text inputs.\r\n\r\nLeveraging AI techniques, it converts each piece of text in the array into its corresponding embedding and computes the cosine similarity between every pair of texts. The cosine similarity value ranges from 0 to 1, with 1 indicating identical vectors and 0 indicating completely dissimilar vectors.\r\n\r\nThis is particularly useful in various applications such as text clustering, semantic network analysis, and similarity visualization.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "TextArray",
                    "type": "ARRAY",
                    "description": "The array of text that you want to calculate the pairwise similarities for.",
                    "default": "[]"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ai-text-processing.p.rapidapi.com/rapidapi/ai-text-processing/pairwise-similarity\"\nquerystring = {\"TextArray\": \"[]\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-text-processing.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ai-text-processing.p.rapidapi.com/rapidapi/ai-text-processing/pairwise-similarity\"\nquerystring = {\"TextArray\": \"[]\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-text-processing.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Text Similarity",
            "url": "https://ai-text-processing.p.rapidapi.com/rapidapi/ai-text-processing/text-similarity",
            "description": "Calculates the cosine similarity between two pieces of text.\r\n\r\nLeveraging AI techniques, it converts the two input texts into their corresponding embeddings and calculates the cosine similarity. The cosine similarity value ranges from 0 to 1, with 1 indicating identical vectors and 0 indicating completely dissimilar vectors.\r\n\r\nThis is particularly useful in various applications such as semantic search, text matching, and content recommendation.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "BaseText",
                    "type": "STRING",
                    "description": "The first piece of text that you want to compare.",
                    "default": ""
                },
                {
                    "name": "ComparisonText",
                    "type": "STRING",
                    "description": "The second piece of text that you want to compare.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ai-text-processing.p.rapidapi.com/rapidapi/ai-text-processing/text-similarity\"\nquerystring = {\"BaseText\": \"\", \"ComparisonText\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-text-processing.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ai-text-processing.p.rapidapi.com/rapidapi/ai-text-processing/text-similarity\"\nquerystring = {\"BaseText\": \"\", \"ComparisonText\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-text-processing.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "similarity": {
                        "type": "number",
                        "format": "double",
                        "minimum": -1.7976931348623157e+308,
                        "maximum": 1.7976931348623157e+308
                    }
                },
                "additionalProperties": false
            }
        }
    ]
}