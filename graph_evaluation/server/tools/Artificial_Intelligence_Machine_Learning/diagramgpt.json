{
    "product_id": "api_72702f60-4d34-4616-a9db-b57588f1b4bf",
    "tool_description": "You can copy the svg output to https://www.svgviewer.dev/ to check the result. PNG output will be supported later. \n\nDiagramGPT is a powerful tool that uses ChatGPT to create diverse flowcharts and diagrams from text inputs, making information more accessible and visually appealing. With high-quality SVG image outputs, it is versatile for frontend applications and various integration possibilities.",
    "home_url": "https://rapidapi.com/godoorsun/api/diagramgpt/",
    "name": "DiagramGPT",
    "title": "DiagramGPT",
    "pricing": "FREEMIUM",
    "tool_name": "DiagramGPT",
    "score": null,
    "host": "diagramgpt.p.rapidapi.com",
    "api_list": [
        {
            "name": "diagram",
            "url": "https://diagramgpt.p.rapidapi.com/diagram",
            "description": "#### This interface allows users to provide input in the form of text or labeled data (text format), and it generates visual representations in the SVG format. This enables users to conveniently visualize information and data, facilitating communication and comprehension. The SVG format ensures high-quality images that can be easily integrated into various applications and frontend scenarios. \n\n-----------\n\n\n#### Example: Text Input with Numbers\n\n> the policy of exempting small-scale taxpayers with monthly sales of less than 100,000 yuan from value-added tax added 103.8 billion yuan in tax cuts, benefiting 22.11 million taxpayers; the collection rate of small-scale taxpayers was reduced from 3% to 1%. Added 40 billion yuan in tax cuts, benefiting 4.83 million taxpayers; continued to implement the policy of phased reductions in unemployment insurance premium rates and added 52.1 billion yuan in additional fee reductions, benefiting 14.34 million payers; the policy of reducing income taxes for small and micro enterprises added new cuts The tax was 47.3 billion yuan, benefiting 4.12 million taxpayers; the new energy vehicle purchase tax exemption policy added 29 billion yuan in tax cuts, benefiting 1.66 million car buyers.\n\n#### Example Output wit pie chart\n![Pie Chart Output](https://user-images.githubusercontent.com/844871/242325128-f021700f-1542-4dee-831f-b124a1209dff.jpg)\n\n#### Example:  Text Explanation for transformer models (Content from wikipedia)\n> The input text is parsed into tokens by a byte pair encoding tokenizer, and each token is converted via a word embedding into a vector. Then, positional information of the token is added to the word embedding.  \n> Like earlier seq2seq models, the original transformer model used an encoder/decoder architecture. The encoder consists of encoding layers that process the input iteratively one layer after another, while the decoder consists of decoding layers that do the same thing to the encoder's output.\n> The function of each encoder layer is to generate encodings that contain information about which parts of the inputs are relevant to each other. It passes its encodings to the next encoder layer as inputs. Each decoder layer does the opposite, taking all the encodings and using their incorporated contextual information to generate an output sequence.[12] To achieve this, each encoder and decoder layer makes use of an attention mechanism.\n> For each part of the input, attention weighs the relevance of every other part and draws from them to produce the output.[13] Each decoder layer has an additional attention mechanism that draws information from the outputs of previous decoders, before the decoder layer draws information from the encodings.\n> Both the encoder and decoder layers have a feed-forward neural network for additional processing of the outputs and contain residual connections and layer normalization steps.[13]\n\n#### Example Output with a diagram\n\n![diagram](https://user-images.githubusercontent.com/844871/242330660-c3d2e69d-64b7-4b19-ae8e-53330c9c38af.jpg)",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://diagramgpt.p.rapidapi.com/diagram\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"diagramgpt.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://diagramgpt.p.rapidapi.com/diagram\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"diagramgpt.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}