{
    "product_id": "api_769acd56-7101-4f53-b070-2813c043a8c0",
    "tool_description": "Midjourney. Relax, Fast and Turbo modes. Asynchonous and Synchnorous REST API; Upscale/variations/zooms/etc at any depth. Technical Support. API that just works.",
    "home_url": "https://rapidapi.com/midjournium/api/midjournium4/",
    "name": "Midjournium",
    "title": "Midjournium",
    "pricing": "FREEMIUM",
    "tool_name": "Midjournium",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 433,
        "avgSuccessRate": 100,
        "popularityScore": 8.5,
        "__typename": "Score"
    },
    "host": "midjournium4.p.rapidapi.com",
    "api_list": [
        {
            "name": "/turbo/command/{jobId}/{command}",
            "url": "https://midjournium4.p.rapidapi.com/turbo/command/{jobId}/{command}",
            "description": "Sample request:\r\n            \r\n    POST /turbo/command/b492b906f69e43bcb7910929fb0b48c9/MJ::JOB::upsample::4::2f11ba98-39da-4513-8599-217a37503f5e",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "jobId",
                    "type": "STRING",
                    "description": "job id",
                    "default": ""
                },
                {
                    "name": "command",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "commandId",
                    "type": "STRING",
                    "description": "command id from the job.commands array",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://midjournium4.p.rapidapi.com/turbo/command/{jobId}/{command}\"\nquerystring = {\"jobId\": \"\", \"command\": \"\", \"commandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjournium4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://midjournium4.p.rapidapi.com/turbo/command/{jobId}/{command}\"\nquerystring = {\"jobId\": \"\", \"command\": \"\", \"commandId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjournium4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "jobId": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "undefined",
                            "imagine",
                            "upscale",
                            "reroll",
                            "variation",
                            "highVariation",
                            "lowVariation",
                            "zoomOut2x",
                            "zoomOut15x",
                            "panLeft",
                            "panRight",
                            "panUp",
                            "panDown",
                            "appeal",
                            "makeSquare"
                        ],
                        "type": "string"
                    },
                    "mode": {
                        "enum": [
                            "undefined",
                            "relax",
                            "fast",
                            "turbo"
                        ],
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "undefined",
                            "new",
                            "submitted",
                            "inProgress",
                            "completed",
                            "error",
                            "rejected",
                            "timeout"
                        ],
                        "type": "string"
                    },
                    "startTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "endTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "notifyWebhookUrl": {
                        "type": "string"
                    },
                    "errorMessage": {
                        "type": "string"
                    },
                    "cost": {
                        "format": "int32",
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "progress": {
                        "format": "int32",
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "imageUrl": {
                        "type": "string"
                    },
                    "imageHeight": {
                        "format": "int32",
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "imageWidth": {
                        "format": "int32",
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "imageSize": {
                        "format": "int32",
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "commands": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "commandId": {
                                    "type": "string"
                                },
                                "groupIndex": {
                                    "format": "int32",
                                    "type": "integer",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647
                                },
                                "commandIndex": {
                                    "format": "int32",
                                    "type": "integer",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647
                                },
                                "label": {
                                    "type": "string"
                                },
                                "url": {
                                    "type": "string"
                                },
                                "cost": {
                                    "format": "int32",
                                    "type": "integer",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647
                                }
                            },
                            "additionalProperties": false
                        }
                    }
                },
                "additionalProperties": false
            }
        },
        {
            "name": "/turbo/imagine",
            "url": "https://midjournium4.p.rapidapi.com/turbo/imagine",
            "description": "Sample request:\r\n            \r\n    POST /turbo/imagine\r\n    {\r\n        \"prompt\": \"happy pony\",\r\n    }",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://midjournium4.p.rapidapi.com/turbo/imagine\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjournium4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://midjournium4.p.rapidapi.com/turbo/imagine\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjournium4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/relax/commandAsync/{jobId}/{command}",
            "url": "https://midjournium4.p.rapidapi.com/relax/commandAsync/{jobId}/{command}",
            "description": "Sample request:\r\n            \r\n    POST /relax/commandAsync/b492b906f69e43bcb7910929fb0b48c9/MJ::JOB::upsample::4::2f11ba98-39da-4513-8599-217a37503f5e\r\n    {\r\n        \"notifyWebhookUrl\": \"https://example.com/webhook?correlationId=1234567890\"\r\n    }",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "command",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "jobId",
                    "type": "STRING",
                    "description": "job id",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "commandId",
                    "type": "STRING",
                    "description": "command id from the job.commands array",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://midjournium4.p.rapidapi.com/relax/commandAsync/{jobId}/{command}\"\nquerystring = {\"commandId\": \"\", \"command\": \"\", \"jobId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjournium4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://midjournium4.p.rapidapi.com/relax/commandAsync/{jobId}/{command}\"\nquerystring = {\"commandId\": \"\", \"command\": \"\", \"jobId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjournium4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "jobId": {
                        "type": "string"
                    },
                    "errorMessage": {
                        "type": "string"
                    }
                },
                "additionalProperties": false
            }
        },
        {
            "name": "/turbo/commandAsync/{jobId}/{command}",
            "url": "https://midjournium4.p.rapidapi.com/turbo/commandAsync/{jobId}/{command}",
            "description": "Sample request:\r\n            \r\n    POST /turbo/commandAsync/b492b906f69e43bcb7910929fb0b48c9/MJ::JOB::upsample::4::2f11ba98-39da-4513-8599-217a37503f5e\r\n    {\r\n        \"notifyWebhookUrl\": \"https://example.com/webhook?correlationId=1234567890\"\r\n    }",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "jobId",
                    "type": "STRING",
                    "description": "job id",
                    "default": ""
                },
                {
                    "name": "command",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "commandId",
                    "type": "STRING",
                    "description": "command id from the job.commands array",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://midjournium4.p.rapidapi.com/turbo/commandAsync/{jobId}/{command}\"\nquerystring = {\"commandId\": \"\", \"jobId\": \"\", \"command\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjournium4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://midjournium4.p.rapidapi.com/turbo/commandAsync/{jobId}/{command}\"\nquerystring = {\"commandId\": \"\", \"jobId\": \"\", \"command\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjournium4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "jobId": {
                        "type": "string"
                    },
                    "errorMessage": {
                        "type": "string"
                    }
                },
                "additionalProperties": false
            }
        },
        {
            "name": "/fast/commandAsync/{jobId}/{command}",
            "url": "https://midjournium4.p.rapidapi.com/fast/commandAsync/{jobId}/{command}",
            "description": "Sample request:\r\n            \r\n    POST /fast/commandAsync/b492b906f69e43bcb7910929fb0b48c9/MJ::JOB::upsample::4::2f11ba98-39da-4513-8599-217a37503f5e\r\n    {\r\n        \"notifyWebhookUrl\": \"https://example.com/webhook?correlationId=1234567890\"\r\n    }",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "command",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "jobId",
                    "type": "STRING",
                    "description": "job id",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "commandId",
                    "type": "STRING",
                    "description": "command id from the job.commands array",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://midjournium4.p.rapidapi.com/fast/commandAsync/{jobId}/{command}\"\nquerystring = {\"commandId\": \"\", \"command\": \"\", \"jobId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjournium4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://midjournium4.p.rapidapi.com/fast/commandAsync/{jobId}/{command}\"\nquerystring = {\"commandId\": \"\", \"command\": \"\", \"jobId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjournium4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/turbo/imagineAsync",
            "url": "https://midjournium4.p.rapidapi.com/turbo/imagineAsync",
            "description": "Sample request:\r\n            \r\n    POST /turbo/imagineAsync\r\n    {\r\n        \"prompt\": \"happy pony\",\r\n        \"notifyWebhookUrl\": \"https://example.com/webhook?correlationId=1234567890\"\r\n    }",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://midjournium4.p.rapidapi.com/turbo/imagineAsync\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjournium4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://midjournium4.p.rapidapi.com/turbo/imagineAsync\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjournium4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "jobId": {
                        "type": "string"
                    },
                    "errorMessage": {
                        "type": "string"
                    }
                },
                "additionalProperties": false
            }
        },
        {
            "name": "/fast/imagineAsync",
            "url": "https://midjournium4.p.rapidapi.com/fast/imagineAsync",
            "description": "Sample request:\r\n            \r\n    POST /fast/imagineAsync\r\n    {\r\n        \"prompt\": \"happy pony\",\r\n        \"notifyWebhookUrl\": \"https://example.com/webhook?correlationId=1234567890\"\r\n    }",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://midjournium4.p.rapidapi.com/fast/imagineAsync\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjournium4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://midjournium4.p.rapidapi.com/fast/imagineAsync\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjournium4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/relax/imagineAsync",
            "url": "https://midjournium4.p.rapidapi.com/relax/imagineAsync",
            "description": "Sample request:\r\n            \r\n    POST /relax/imagineAsync\r\n    {\r\n        \"prompt\": \"happy pony\",\r\n        \"notifyWebhookUrl\": \"https://example.com/webhook?correlationId=1234567890\"\r\n    }",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://midjournium4.p.rapidapi.com/relax/imagineAsync\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjournium4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://midjournium4.p.rapidapi.com/relax/imagineAsync\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midjournium4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "jobId": {
                        "type": "string"
                    },
                    "errorMessage": {
                        "type": "string"
                    }
                },
                "additionalProperties": false
            }
        }
    ]
}