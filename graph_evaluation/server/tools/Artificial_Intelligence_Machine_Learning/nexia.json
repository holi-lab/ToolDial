{
    "product_id": "api_741d2560-bfd8-4918-9480-93cce512a544",
    "tool_description": "Revolutionize your text processing capabilities with Nexia API. Features, include  OpenAI GPT-3 powered prompt generation, prompt editing, sentiment and emotion analysis, and create customizable prompt instructions and save them for later usecases, will take your application to the next level.\n\nWith Nexia API, you can also create and update text tones, ensuring that your prompts always align with your brand's voice and tone. Plus, our secure API with secure authentication gives you peace of m...",
    "home_url": "https://rapidapi.com/AvidityLabs/api/nexia2/",
    "name": "nexia",
    "title": "nexia",
    "pricing": "FREEMIUM",
    "tool_name": "nexia",
    "score": null,
    "host": "nexia2.p.rapidapi.com",
    "api_list": [
        {
            "name": "Text Emotion Analysis",
            "url": "https://nexia2.p.rapidapi.com/emotion/analysis/",
            "description": "A Text Emotion Analysis endpoint is an API endpoint that is used to analyze the emotions expressed in a given text. This endpoint can be integrated into applications that require sentiment analysis, such as social media monitoring tools, customer feedback analysis, and chatbots.\n\nThe Text Emotion Analysis endpoint typically takes a text input as its parameter and returns the emotions expressed in the text. The emotions may be expressed as a list of scores or as a label that describes the overall sentiment of the text, such as positive, negative, or neutral.\n\nThe endpoint may use machine learning algorithms, natural language processing techniques, and sentiment analysis libraries to analyze the text and determine the emotions expressed. The endpoint may also leverage pre-trained models that have been trained on large datasets to improve the accuracy of the analysis.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://nexia2.p.rapidapi.com/emotion/analysis/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nexia2.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://nexia2.p.rapidapi.com/emotion/analysis/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nexia2.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Text Sentiment Analysis",
            "url": "https://nexia2.p.rapidapi.com/sentiment/analysis/",
            "description": "A Sentiment Analysis endpoint is an API endpoint that is used to analyze the sentiment expressed in a given text. Sentiment analysis is a process of identifying and extracting the emotional tone of a text, which can be positive, negative, or neutral.\n\nThe Sentiment Analysis endpoint typically takes a text input as its parameter and returns the sentiment expressed in the text. The sentiment may be expressed as a score between 0 and 1, with 0 representing a very negative sentiment and 1 representing a very positive sentiment. Alternatively, the sentiment may be expressed as a label that describes the overall sentiment of the text, such as positive, negative, or neutral.\n\nThe endpoint may use machine learning algorithms, natural language processing techniques, and sentiment analysis libraries to analyze the text and determine the sentiment expressed. The endpoint may also leverage pre-trained models that have been trained on large datasets to improve the accuracy of the analysis.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://nexia2.p.rapidapi.com/sentiment/analysis/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nexia2.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://nexia2.p.rapidapi.com/sentiment/analysis/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nexia2.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Prompt Edit",
            "url": "https://nexia2.p.rapidapi.com/prompt/create_edit/",
            "description": "The endpoint converts a given text into an edited version of the prompt based on the given instruction.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://nexia2.p.rapidapi.com/prompt/create_edit/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nexia2.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://nexia2.p.rapidapi.com/prompt/create_edit/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nexia2.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Create Instruction",
            "url": "https://nexia2.p.rapidapi.com/instructions/create/",
            "description": "**Create Instruction**\nCreate a new instruction.\n\n`URL: /instructions/create/`\n\n**Method: **POST\n\n**Auth required: **Yes\n\n**Data constraints:**\n\n**description:** The text of the instruction. Required.\n**category:** The category of the instruction. Required.\n**tones:** An array of tones associated with the instruction. Optional.\n\n**Success response:**\n\n**Code: **201 CREATED\n**Content:** { \"id\": 1, \"description\": \"Summarize the text\", \"tones\": [ { **\"id\":** 1, \"name\": \"professional\" } ], \"category\": 1 }\n\n**Error response:**\n\n**Code: **400 BAD REQUEST\n**Content:** { \"errors\": { \"description\": [ \"This field is required.\" ], **\"category\":** [ \"This field is required.\" ] } }",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://nexia2.p.rapidapi.com/instructions/create/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nexia2.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://nexia2.p.rapidapi.com/instructions/create/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nexia2.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Prompt Completion",
            "url": "https://nexia2.p.rapidapi.com/prompt/completion/",
            "description": "The endpoint accepts text as input.  Prompt completion is a natural language processing (NLP) technique where a machine learning model is trained to generate text that continues or completes a given prompt or input.\n\nThe model takes in the prompt or input, processes it, and then generates a continuation or completion of the text based on the patterns and structure it has learned from the training data. This technique is used in various applications, such as language translation, chatbots, and content generation.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://nexia2.p.rapidapi.com/prompt/completion/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nexia2.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://nexia2.p.rapidapi.com/prompt/completion/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nexia2.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Register API User",
            "url": "https://nexia2.p.rapidapi.com/register/",
            "description": "This endpoint is for registering a new API user and returns the API token key. It accepts a POST request with the email and password of the user. The request should be sent to the URL associated with this endpoint ** /register/**.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://nexia2.p.rapidapi.com/register/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nexia2.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://nexia2.p.rapidapi.com/register/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nexia2.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Get Token",
            "url": "https://nexia2.p.rapidapi.com/get_token/",
            "description": "This endpoint allows users to obtain their authentication token key by providing their email and password. This token is can then be used to authenticate API requests that require user authentication. \n\n1. Make sure you have registered as a developer using the **/register/ **endpoint. If you haven't registered yet, you can do so by following the instructions on our developer registration page.\n2.  Once you have registered, you should have received an API key. Keep this key safe and do not share it with anyone.\n3. If you have lost your API key or need to obtain a new one, you can use our API token authentication endpoint. Please note that this endpoint is only for obtaining an API key if you have already registered. If you have not registered, you will not be able to obtain an API key through this endpoint.\n4. To obtain an API key through the API token authentication endpoint, send a  **POST ** request to the following **URL: /api/get_token/.** Include your email and password in the request body.\n5. If your credentials are valid, the API will respond with a JSON object containing your API key. Save this key in a safe place and use it to authenticate your API requests.\n6. If your credentials are not valid, the API will respond with an error message. Please double-check your email and password and try again.\n\n7. Remember to keep your API key safe and secure. Do not share it with anyone, and do not include it in any public code repositories or scripts. If you suspect that your API key has been compromised, please contact us immediately.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://nexia2.p.rapidapi.com/get_token/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nexia2.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://nexia2.p.rapidapi.com/get_token/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nexia2.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        }
    ]
}