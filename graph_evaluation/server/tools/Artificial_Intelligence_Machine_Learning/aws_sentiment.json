{
    "product_id": "api_448ddcad-7f4b-477a-a688-590899a99ada",
    "tool_description": "Use the AWS Machine Learning Comprehend Service to understand the sentiment of text.",
    "home_url": "https://rapidapi.com/cpvdeveloper/api/aws-sentiment/",
    "name": "AWS Sentiment",
    "title": "AWS Sentiment",
    "pricing": "FREEMIUM",
    "tool_name": "AWS Sentiment",
    "score": null,
    "host": "aws-sentiment.p.rapidapi.com",
    "api_list": [
        {
            "name": "Sentiment",
            "url": "https://aws-sentiment.p.rapidapi.com/sentiment",
            "description": "Uses the AWS Machine Learning Comprehend Service to understand the sentiment of text.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://aws-sentiment.p.rapidapi.com/sentiment\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aws-sentiment.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aws-sentiment.p.rapidapi.com/sentiment\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aws-sentiment.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "Sentiment": {
                                "type": "string"
                            },
                            "SentimentScore": {
                                "type": "object",
                                "properties": {
                                    "Mixed": {
                                        "type": "number"
                                    },
                                    "Negative": {
                                        "type": "number"
                                    },
                                    "Neutral": {
                                        "type": "number"
                                    },
                                    "Positive": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    },
                    "error": {
                        "type": "null"
                    }
                }
            }
        }
    ]
}