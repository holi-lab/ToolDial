{
    "product_id": "api_686101e5-5fe8-43ea-99b4-7fb1e1a70243",
    "tool_description": "A cutting edge Virtual Try-On solution to integrate with your fashion e-commerce that allows customers to try-on clothing by uploading their own photos.",
    "home_url": "https://rapidapi.com/texel-inc-texel-inc-default/api/texel-virtual-try-on/",
    "name": "Texel Virtual Try-On",
    "title": "Texel Virtual Try-On",
    "pricing": "FREEMIUM",
    "tool_name": "Texel Virtual Try-On",
    "score": {
        "avgServiceLevel": 99,
        "avgLatency": 3291,
        "avgSuccessRate": 44,
        "popularityScore": 9.4,
        "__typename": "Score"
    },
    "host": "texel-virtual-try-on.p.rapidapi.com",
    "api_list": [
        {
            "name": "/try-on-file",
            "url": "https://texel-virtual-try-on.p.rapidapi.com/try-on-file",
            "description": "Transfer clothing from the clothing image to the avatar image.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "avatar_image",
                    "type": "BINARY",
                    "description": "Image file with user's avatar (JPEG, PNG or WEBP)",
                    "default": ""
                },
                {
                    "name": "clothing_image",
                    "type": "BINARY",
                    "description": "Image file with clothing on a person in frontal pose (JPEG, PNG or WEBP)",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://texel-virtual-try-on.p.rapidapi.com/try-on-file\"\nquerystring = {\"avatar_image\": \"\", \"clothing_image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"texel-virtual-try-on.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://texel-virtual-try-on.p.rapidapi.com/try-on-file\"\nquerystring = {\"avatar_image\": \"\", \"clothing_image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"texel-virtual-try-on.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "/try-on-url",
            "url": "https://texel-virtual-try-on.p.rapidapi.com/try-on-url",
            "description": "Transfer clothing from the clothing image to the avatar image passed by URLs",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clothing_image_url",
                    "type": "STRING",
                    "description": "URL of an image of clothing on a person in frontal pose (JPEG, PNG or WEBP)",
                    "default": ""
                },
                {
                    "name": "avatar_image_url",
                    "type": "STRING",
                    "description": "URL of an image with user's avatar (JPEG, PNG or WEBP)",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://texel-virtual-try-on.p.rapidapi.com/try-on-url\"\nquerystring = {\"clothing_image_url\": \"\", \"avatar_image_url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"texel-virtual-try-on.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://texel-virtual-try-on.p.rapidapi.com/try-on-url\"\nquerystring = {\"clothing_image_url\": \"\", \"avatar_image_url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"texel-virtual-try-on.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        }
    ]
}