{
    "product_id": "api_9dd9a38e-c9b3-486e-a4b2-9b125680657c",
    "tool_description": "Get Similarity Score from two comparable data structure like similarity between two images, two text etc.",
    "home_url": "https://rapidapi.com/iamirulofficial-zBzgFewQYYC/api/ai-similarity-engine/",
    "name": "AI Similarity Engine",
    "title": "AI Similarity Engine",
    "pricing": "FREEMIUM",
    "tool_name": "AI Similarity Engine",
    "score": null,
    "host": "ai-similarity-engine.p.rapidapi.com",
    "api_list": [
        {
            "name": "Image",
            "url": "https://ai-similarity-engine.p.rapidapi.com/image/",
            "description": "Get NP",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ai-similarity-engine.p.rapidapi.com/image/\"\nquerystring = {\"file\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-similarity-engine.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ai-similarity-engine.p.rapidapi.com/image/\"\nquerystring = {\"file\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-similarity-engine.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "ImageSimilarityScore",
            "url": "https://ai-similarity-engine.p.rapidapi.com/images/similarity",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "model",
                    "type": "STRING",
                    "description": "",
                    "default": "resnet50"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ai-similarity-engine.p.rapidapi.com/images/similarity\"\nquerystring = {\"file\": \"\", \"model\": \"resnet50\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-similarity-engine.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ai-similarity-engine.p.rapidapi.com/images/similarity\"\nquerystring = {\"file\": \"\", \"model\": \"resnet50\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-similarity-engine.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    ]
}