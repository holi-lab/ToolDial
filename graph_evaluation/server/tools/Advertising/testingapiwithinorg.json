{
    "tool_name": "TestingAPIwithinOrg",
    "tool_description": "TestingAPIwithinOrg",
    "title": "TestingAPIwithinOrg",
    "pricing": "FREEMIUM",
    "score": null,
    "home_url": "https://rapidapi.com/antonyorg-testinvitetoprivate/api/testingapiwithinorg/",
    "host": "testingapiwithinorg.p.rapidapi.com",
    "api_list": [
        {
            "name": "Createaccount",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/accounts",
            "description": "Create a new account in the specified venue. Account initializations may or may not be immediately performed (e.g. funding an account's reserve on Ripple or Stellar).\n\n## Response\n\nField | Type | Description\n--- | --- | ---\nresult | Account | The newly created account.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/accounts\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Deleteallaccountorders",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/accounts/{accountid}/orders",
            "description": "Delete all orders for the account.",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "accountId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                },
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/accounts/{accountid}/orders\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Gettime",
            "url": "https://testingapiwithinorg.p.rapidapi.com/utilities/time",
            "description": "Retrieve the server time. This endpoint is also useful as a method for a client to 'ping' the Stronghold Platform and measure latency.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/utilities/time\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Createcredential",
            "url": "https://testingapiwithinorg.p.rapidapi.com/iam/credentials",
            "description": "Create a new credential that is validated with the specified passphrase.\n\nIf you are using the Stronghold Identity APIs, you can also pass the access token as a field in the request to automatically link the 3rd party to the new credential.\n\n## Request\n\nField | Type | Description\n--- | --- | ---\npassphrase | string | The passphrase the requestor will use with the new credential.\n\n## Response\n\nField | Type | Description\n--- | --- | ---\nresult | Credential | The newly created credential.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/iam/credentials\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Listmarkets",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/markets",
            "description": "Retrieve a list of the well known markets on the venue.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/markets\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Placeorder",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/accounts/{accountid}/orders",
            "description": "Place a new order on the specific market.\n\n## Request\n\nField | Type | Description\n--- | --- | ---\nmarketID | string | The well-known market symbol, identifying the market to place the order on.\ntype | string | The type of order to place.\nside | string | Either `buy` or `sell`.\nsize | string | The size of the order, as measured in the base currency.\nprice | string | The price to offer or ask for each unit of the base currency, as measured in the counter currency.\ncustomerReference | string | (Optional) a customer-provided reference to identify the order.\n\n## Response\n\nField | Type | Description\n--- | --- | ---\n\n`404` is returned when the market symbol was not valid.\n`501` is returned when the order type is not supported.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Content-Type",
                    "type": "STRING",
                    "description": "",
                    "default": "application/json"
                },
                {
                    "name": "venueID",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                },
                {
                    "name": "accountId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/accounts/{accountid}/orders\"\nquerystring = {\"Content-Type\": content_type}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Getassets",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/assets",
            "description": "Retrieve a list of known assets for the current venue.\n\n## Response\n\nField | Type | Description\n--- | --- | ---\nResult | Asset[] | List of known assets for the current venue.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/assets\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Listaccounttrades",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/accounts/{accountid}/trades",
            "description": "Retrieve a list of the account's most recently executed trades.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                },
                {
                    "name": "accountId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/accounts/{accountid}/trades\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Prepareoperation",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/custody/accounts/{accountid}/operations",
            "description": "Prepare operation",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accountId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                },
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/custody/accounts/{accountid}/operations\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Signoperation",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/custody/accounts/{accountid}/operations/{operationid}/signatures",
            "description": "Sign operation",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                },
                {
                    "name": "accountId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                },
                {
                    "name": "operationId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/custody/accounts/{accountid}/operations/{operationid}/signatures\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Getmarketorderbook",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/markets/{marketid}/orderbook",
            "description": "Retrieve the orderbook for a given market.\n\n## Response\n\nField | Type | Description\n--- | --- | ---\nresult | Orderbook | The market orderbook.\nresult.bids | string[][] | The bid orders.\nresult.asks | string[][] | The ask orders.\n\nEach item in the bids or asks arrays is an array describing a particular price with a size: [\"(price)\", \"(size)\"].",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                },
                {
                    "name": "marketId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/markets/{marketid}/orderbook\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "GenerateaUUID",
            "url": "https://testingapiwithinorg.p.rapidapi.com/utilities/uuid",
            "description": "Generate an RFC 4122 v4 UUID.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/utilities/uuid\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Grantcredentialpermissions",
            "url": "https://testingapiwithinorg.p.rapidapi.com/iam/credentials/{credentialid}",
            "description": "Grants the specified credential permissions. If the credential is not already associated with an identity it receives the identity of the credential that is used to make the call.\n\n## Request\n\nField | Type | Description\n--- | --- | ---\nsecret | string | The secret of the credential that the permissions are being set for.\npassphrase | string | The passphrase of the credential that the permissions are being set for.\npermissions | string | The policy describing the permissions the credential will have.",
            "method": "PUT",
            "required_parameters": [
                {
                    "name": "credentialID",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/iam/credentials/{credentialid}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n}\n\nresponse = requests.put(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Listmarkettrades",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/markets/{marketid}/trades",
            "description": "Retrieve a list of historic trades for a given market. The last 200 trades are provided by default. If your use case requires more history, please contact developers@stronghold.co\n\n## Response\n\nField | Type | Description\n--- | --- | ---\nresult | Object | The latest historic trades.\nresult.marketId | string | The market's identifier.\nresult.trades | string[][] | The trades.\n\nEach item in the trades array is an array describing a particular trade: [\"(price)\", \"(size)\", \"(time)\"].",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                },
                {
                    "name": "marketId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/markets/{marketid}/trades\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Getaccount",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/accounts/{accountid}",
            "description": "Retrieve account information, including balances.\n\nThe result will contain the following information:\n- **ID**: the account's identifier. Stronghold associates a protocol-agnostic identifier that is used in preference to the 'native' ID, such as a 'public address'.\n- **Balances**: the account's balances. Asset information will be provided where possible.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "accountId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                },
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/accounts/{accountid}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Requestdeposit",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/accounts/{accountid}/deposit",
            "description": "# Deposits and Withdrawals\nTransactions are requested with `paymentMethodDetails` (details of the transaction, passed to Stronghold) and responses contain `paymentMethodInstructions` (instructions for the user, given by Stronghold) as follows:\n\n## PaymentMethodDetails on Requests\n\nKey | Description | Used In\n--- | --- | ---\namount | The amount of the transaction as a string with a maximum of 7 decimal places | Withdrawals for all\nwithdrawal_address | The venue-specific address for the asset to be withdrawn to | Withdrawals for `bitcoin`, `litecoin`, `ethereum`, `stellar`, and `ripple`\nreference | The venue-specific reference to be attached to the withdrawal | Withdrawals for `stellar` and `ripple`\nbank_name | The name of the bank, e.g. 'JPMorgan Chase Bank N.A.' | Deposits for `us-ach` and withdrawals for `us-ach` and `us-wire`\nbank_routing_number | The routing number of the bank account | Deposits for `us-ach` and withdrawals for `us-ach` and `us-wire`\nbank_account_number | The account number of the bank account | Deposits for `us-ach` and withdrawals for `us-ach` and `us-wire`\nbank_account_type | The type of bank account, either 'checking' or 'savings' | Deposits and withdrawals for `us-ach`\n\n## PaymentMethodInstructions on Responses\n\nKey | Description | Used In\n--- | --- | ---\ndeposit_address | The venue-specific address that the asset should to be deposited into | Deposits for `bitcoin`, `litecoin`, `ethereum`, `stellar`, and `ripple`\nreference | The venue-specific reference that must be attached to the deposit | Deposits for `stellar`, `ripple`, and `us-wire`\ninterledger_payment_pointer | The Interledger SPSP Payment Pointer used to receive streaming payments in a certain asset | Deposits for `ilp-spsp`\namount | The amount that must be sent for the deposit to succeed | Deposits for `us-wire`\nrecipient_name | The name of the recipient that the funds should be sent to | Deposits for `us-wire`\nrecipient_address | The address of the recipient that the funds should be sent to | Deposits for `us-wire`\nbank_name | The name of the bank, e.g. 'JPMorgan Chase Bank N.A.' | Deposits for `us-wire`\nbank_routing_number | The routing number of the bank account | Deposits for `us-wire`\nbank_account_number | The account number of the bank account | Deposits for `us-wire`\nbank_swift_code | The SWIFT code to use where the wire is being sent internationally | Deposits for `us-wire`\n\n## Notes\n\n- For `us-ach` and `us-wire`, the name on the bank account must match the name on the entity's Stronghold account.\n- `us-ach` deposits take a variable amount of time to be credited to a Stronghold account. Please contact us for more information on the timings for your particular use case.\n- The entity must have completed the account verification to use all payment methods with the exception of `ilp-spsp`.\n\n## Request\n\nField | Type | Description\n--- | --- | ---\nassetId | string | The identifier of the asset to deposit.\npaymentMethod | string | The payment method for the deposit.\npaymentMethodDetails | key-value string pairs | (Optional) If required for the deposit method, the details of the deposit.\n\n## Response\n\nField | Type | Description\n--- | --- | ---\nresult | AccountTransaction | The account transaction. A transaction may not necessarily been created (as seen by the absence of an identifier) but the payment method instructions can be followed to initiate the deposit.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                },
                {
                    "name": "accountId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/accounts/{accountid}/deposit\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Fundaccount",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/testing/friendbot",
            "description": "Fund account",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/testing/friendbot\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Directwithdrawal",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/direct/withdrawals",
            "description": "Withdrawal allows customers to directly withdraw anchored funds from a non-Stronghold account.\n\nThe payment method details must describe a payout made to an account owned by the customer. Using withdrawal to send funds to other beneficiaries will result in failure.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/direct/withdrawals\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Revokecredential",
            "url": "https://testingapiwithinorg.p.rapidapi.com/iam/credentials/{credentialid}",
            "description": "Revoke a credential, rendering it useless for API access purposes. The request can be signed with any authorized credential, including the credential that is being revoked (i.e. a credential can sign the request to revoke itself).",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "credentialID",
                    "type": "STRING",
                    "description": "The identifier of the credential to revoke.",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/iam/credentials/{credentialid}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Getaccountorders",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/accounts/{accountid}/orders",
            "description": "Retrieve the open orders for an account.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "accountId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                },
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/accounts/{accountid}/orders\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Deleteaccountorder",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/accounts/{accountid}/orders/{orderid}",
            "description": "Delete an order for an account.",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "accountId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                },
                {
                    "name": "orderId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                },
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/accounts/{accountid}/orders/{orderid}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Getavailablevenues",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues",
            "description": "Retrieve the venues the credential has access to.\n\nEach venue describes its:\n- **capabilities**: as each venue differs in protocol and context, not all Platform APIs are supported on all venues. The capabilities object describes which operations can be performed.\n- **attributes**: protocol/context-specific key-value pairs.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Getaccounttransactions",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/accounts/{accountid}/transactions",
            "description": "## Response\n\nField | Type | Description\n--- | --- | ---\nresult | AccountTransaction[] | The account's transactions.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "accountId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                },
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/accounts/{accountid}/transactions\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Createcustody-enabledaccount",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/custody/accounts",
            "description": "Create a new account in the specified venue that is available for use with the custody APIs. Account initializations may or may not be immeadiately performed (e.g. funding an account's reserve on Ripple or Stellar).\n\n## Response\n\nField | Type | Description\n--- | --- | ---\nresult | Custody Account | The newly created account.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "venueID",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/custody/accounts\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Requestwithdrawal",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/accounts/{accountid}/withdrawal",
            "description": "## Request\n\nField | Type | Description\n--- | --- | ---\nassetId | string | The identifier of the asset to withdraw.\npaymentMethod | string | The payment method requested for the withdrawal.\npaymentMethodDetails | key-value string pairs | (Optional) If required for the withdrawal method, the details of the withdrawal.\n\n## Response\n\nField | Type | Description\n--- | --- | ---\nresult | AccountTransaction | The account transaction for the withdrawal.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                },
                {
                    "name": "accountId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/accounts/{accountid}/withdrawal\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Createaccount",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/string/accounts",
            "description": "Create a new account in the specified venue. Account initializations may or may not be immediately performed (e.g. funding an account's reserve on Ripple or Stellar).\n\n## Response\n\nField | Type | Description\n--- | --- | ---\nresult | Account | The newly created account.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/string/accounts\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/accounts\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 201,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Createcredential",
            "url": "https://testingapiwithinorg.p.rapidapi.com/iam/credentials",
            "description": "Create a new credential that is validated with the specified passphrase.\n\nIf you are using the Stronghold Identity APIs, you can also pass the access token as a field in the request to automatically link the 3rd party to the new credential.\n\n## Request\n\nField | Type | Description\n--- | --- | ---\npassphrase | string | The passphrase the requestor will use with the new credential.\n\n## Response\n\nField | Type | Description\n--- | --- | ---\nresult | Credential | The newly created credential.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/iam/credentials\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/iam/credentials\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 201,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Placeorder",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/string/accounts/string/orders",
            "description": "Place a new order on the specific market.\n\n## Request\n\nField | Type | Description\n--- | --- | ---\nmarketID | string | The well-known market symbol, identifying the market to place the order on.\ntype | string | The type of order to place.\nside | string | Either `buy` or `sell`.\nsize | string | The size of the order, as measured in the base currency.\nprice | string | The price to offer or ask for each unit of the base currency, as measured in the counter currency.\ncustomerReference | string | (Optional) a customer-provided reference to identify the order.\n\n## Response\n\nField | Type | Description\n--- | --- | ---\n\n`404` is returned when the market symbol was not valid.\n`501` is returned when the order type is not supported.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "venueID",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                },
                {
                    "name": "accountId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/string/accounts/string/orders\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/accounts/{accountid}/orders\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Prepareoperation",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/string/custody/accounts/string/operations",
            "description": "Prepare operation",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accountId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                },
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/string/custody/accounts/string/operations\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/custody/accounts/{accountid}/operations\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Signoperation",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/string/custody/accounts/string/operations/string/signatures",
            "description": "Sign operation",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                },
                {
                    "name": "accountId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                },
                {
                    "name": "operationId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/string/custody/accounts/string/operations/string/signatures\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/custody/accounts/{accountid}/operations/{operationid}/signatures\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Requestdeposit",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/string/accounts/string/deposit",
            "description": "# Deposits and Withdrawals\nTransactions are requested with `paymentMethodDetails` (details of the transaction, passed to Stronghold) and responses contain `paymentMethodInstructions` (instructions for the user, given by Stronghold) as follows:\n\n## PaymentMethodDetails on Requests\n\nKey | Description | Used In\n--- | --- | ---\namount | The amount of the transaction as a string with a maximum of 7 decimal places | Withdrawals for all\nwithdrawal_address | The venue-specific address for the asset to be withdrawn to | Withdrawals for `bitcoin`, `litecoin`, `ethereum`, `stellar`, and `ripple`\nreference | The venue-specific reference to be attached to the withdrawal | Withdrawals for `stellar` and `ripple`\nbank_name | The name of the bank, e.g. 'JPMorgan Chase Bank N.A.' | Deposits for `us-ach` and withdrawals for `us-ach` and `us-wire`\nbank_routing_number | The routing number of the bank account | Deposits for `us-ach` and withdrawals for `us-ach` and `us-wire`\nbank_account_number | The account number of the bank account | Deposits for `us-ach` and withdrawals for `us-ach` and `us-wire`\nbank_account_type | The type of bank account, either 'checking' or 'savings' | Deposits and withdrawals for `us-ach`\n\n## PaymentMethodInstructions on Responses\n\nKey | Description | Used In\n--- | --- | ---\ndeposit_address | The venue-specific address that the asset should to be deposited into | Deposits for `bitcoin`, `litecoin`, `ethereum`, `stellar`, and `ripple`\nreference | The venue-specific reference that must be attached to the deposit | Deposits for `stellar`, `ripple`, and `us-wire`\ninterledger_payment_pointer | The Interledger SPSP Payment Pointer used to receive streaming payments in a certain asset | Deposits for `ilp-spsp`\namount | The amount that must be sent for the deposit to succeed | Deposits for `us-wire`\nrecipient_name | The name of the recipient that the funds should be sent to | Deposits for `us-wire`\nrecipient_address | The address of the recipient that the funds should be sent to | Deposits for `us-wire`\nbank_name | The name of the bank, e.g. 'JPMorgan Chase Bank N.A.' | Deposits for `us-wire`\nbank_routing_number | The routing number of the bank account | Deposits for `us-wire`\nbank_account_number | The account number of the bank account | Deposits for `us-wire`\nbank_swift_code | The SWIFT code to use where the wire is being sent internationally | Deposits for `us-wire`\n\n## Notes\n\n- For `us-ach` and `us-wire`, the name on the bank account must match the name on the entity's Stronghold account.\n- `us-ach` deposits take a variable amount of time to be credited to a Stronghold account. Please contact us for more information on the timings for your particular use case.\n- The entity must have completed the account verification to use all payment methods with the exception of `ilp-spsp`.\n\n## Request\n\nField | Type | Description\n--- | --- | ---\nassetId | string | The identifier of the asset to deposit.\npaymentMethod | string | The payment method for the deposit.\npaymentMethodDetails | key-value string pairs | (Optional) If required for the deposit method, the details of the deposit.\n\n## Response\n\nField | Type | Description\n--- | --- | ---\nresult | AccountTransaction | The account transaction. A transaction may not necessarily been created (as seen by the absence of an identifier) but the payment method instructions can be followed to initiate the deposit.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                },
                {
                    "name": "accountId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/string/accounts/string/deposit\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/accounts/{accountid}/deposit\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Fundaccount",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/string/testing/friendbot",
            "description": "Fund account",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/string/testing/friendbot\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/testing/friendbot\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Directwithdrawal",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/string/direct/withdrawals",
            "description": "Withdrawal allows customers to directly withdraw anchored funds from a non-Stronghold account.\n\nThe payment method details must describe a payout made to an account owned by the customer. Using withdrawal to send funds to other beneficiaries will result in failure.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/string/direct/withdrawals\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/direct/withdrawals\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 201,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Createcustody-enabledaccount",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/string/custody/accounts",
            "description": "Create a new account in the specified venue that is available for use with the custody APIs. Account initializations may or may not be immeadiately performed (e.g. funding an account's reserve on Ripple or Stellar).\n\n## Response\n\nField | Type | Description\n--- | --- | ---\nresult | Custody Account | The newly created account.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "venueID",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/string/custody/accounts\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/custody/accounts\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 201,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Requestwithdrawal",
            "url": "https://testingapiwithinorg.p.rapidapi.com/venues/string/accounts/string/withdrawal",
            "description": "## Request\n\nField | Type | Description\n--- | --- | ---\nassetId | string | The identifier of the asset to withdraw.\npaymentMethod | string | The payment method requested for the withdrawal.\npaymentMethodDetails | key-value string pairs | (Optional) If required for the withdrawal method, the details of the withdrawal.\n\n## Response\n\nField | Type | Description\n--- | --- | ---\nresult | AccountTransaction | The account transaction for the withdrawal.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                },
                {
                    "name": "accountId",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/string/accounts/string/withdrawal\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://testingapiwithinorg.p.rapidapi.com/venues/{venueid}/accounts/{accountid}/withdrawal\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testingapiwithinorg.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    ]
}