{
    "product_id": "api_467e05d5-5249-4dc9-acba-6ed62d70c478",
    "tool_description": "ThisshouldbeFREE",
    "home_url": "https://rapidapi.com/team22/api/thisshouldbefree/",
    "name": "ThisshouldbeFREE",
    "title": "ThisshouldbeFREE",
    "pricing": "FREE",
    "tool_name": "ThisshouldbeFREE",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 596,
        "avgSuccessRate": 45,
        "popularityScore": 6.3,
        "__typename": "Score"
    },
    "host": "thisshouldbefree.p.rapidapi.com",
    "api_list": [
        {
            "name": "getPetById",
            "url": "https://thisshouldbefree.p.rapidapi.com/pet/{petId}",
            "description": "Returns a single pet",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "petId",
                    "type": "NUMBER",
                    "description": "ID of pet to return",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/pet/{petId}\"\nquerystring = {\"petId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/pet/{petId}\"\nquerystring = {\"petId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Endpoint '/pet/{petId}' does not exist"
            },
            "statuscode": 200,
            "schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "properties": {
                    "category": {
                        "properties": {
                            "id": {
                                "format": "int64",
                                "maximum": 9223372036854776000,
                                "minimum": -9223372036854776000,
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "id": {
                        "format": "int64",
                        "maximum": 9223372036854776000,
                        "minimum": -9223372036854776000,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "photoUrls": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "status": {
                        "description": "pet status in the store",
                        "enum": [
                            "available",
                            "pending",
                            "sold"
                        ],
                        "type": "string"
                    },
                    "tags": {
                        "items": {
                            "properties": {
                                "id": {
                                    "format": "int64",
                                    "maximum": 9223372036854776000,
                                    "minimum": -9223372036854776000,
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "photoUrls"
                ],
                "type": "object"
            }
        },
        {
            "name": "logoutUser",
            "url": "https://thisshouldbefree.p.rapidapi.com/user/logout",
            "description": "",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/user/logout\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/user/logout\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "code": 200,
                "type": "unknown",
                "message": "ok"
            }
        },
        {
            "name": "getInventory",
            "url": "https://thisshouldbefree.p.rapidapi.com/store/inventory",
            "description": "Returns a map of status codes to quantities",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/store/inventory\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/store/inventory\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "Sale": 1,
                "totvs": 5,
                "sold": 11,
                "string": 634,
                "pending": 11,
                "cat": 1,
                "dgdfgdf": 1,
                "available": 270,
                "not available": 1,
                "Available": 3,
                "peric": 4,
                "disponible": 1
            },
            "statuscode": 200,
            "schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "additionalProperties": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer"
                },
                "type": "object"
            }
        },
        {
            "name": "loginUser",
            "url": "https://thisshouldbefree.p.rapidapi.com/user/login",
            "description": "",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "The password for login in clear text",
                    "default": ""
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "The user name for login",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/user/login\"\nquerystring = {\"password\": \"\", \"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/user/login\"\nquerystring = {\"password\": \"\", \"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "code": 200,
                "type": "unknown",
                "message": "logged in user session:1686929888170"
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "getUserByName",
            "url": "https://thisshouldbefree.p.rapidapi.com/user/{username}",
            "description": "",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "The name that needs to be fetched. Use user1 for testing. ",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/user/{username}\"\nquerystring = {\"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/user/{username}\"\nquerystring = {\"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Endpoint '/user/{username}' does not exist"
            },
            "statuscode": 200,
            "schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "id": {
                        "format": "int64",
                        "maximum": 9223372036854776000,
                        "minimum": -9223372036854776000,
                        "type": "integer"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "userStatus": {
                        "description": "User Status",
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "getOrderById",
            "url": "https://thisshouldbefree.p.rapidapi.com/store/order/{orderId}",
            "description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "orderId",
                    "type": "NUMBER",
                    "description": "ID of pet that needs to be fetched",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/store/order/{orderId}\"\nquerystring = {\"orderId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/store/order/{orderId}\"\nquerystring = {\"orderId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "Endpoint '/store/order/{orderId}' does not exist"
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "addPet",
            "url": "https://thisshouldbefree.p.rapidapi.com/pet",
            "description": "",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/pet\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/pet\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "uploadFile",
            "url": "https://thisshouldbefree.p.rapidapi.com/pet/{petId}/uploadImage",
            "description": "",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "petId",
                    "type": "NUMBER",
                    "description": "ID of pet to update",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/pet/{petId}/uploadImage\"\nquerystring = {\"petId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/pet/{petId}/uploadImage\"\nquerystring = {\"petId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "properties": {
                    "code": {
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "placeOrder",
            "url": "https://thisshouldbefree.p.rapidapi.com/store/order",
            "description": "",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/store/order\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/store/order\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "createUsersWithArrayInput",
            "url": "https://thisshouldbefree.p.rapidapi.com/user/createWithArray",
            "description": "",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/user/createWithArray\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/user/createWithArray\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updatePetWithForm",
            "url": "https://thisshouldbefree.p.rapidapi.com/pet/{petId}",
            "description": "",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "petId",
                    "type": "NUMBER",
                    "description": "ID of pet that needs to be updated",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Updated name of the pet",
                    "default": ""
                },
                {
                    "name": "status",
                    "type": "STRING",
                    "description": "Updated status of the pet",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/pet/{petId}\"\nquerystring = {\"name\": \"\", \"status\": \"\", \"petId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/pet/{petId}\"\nquerystring = {\"name\": \"\", \"status\": \"\", \"petId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "createUsersWithListInput",
            "url": "https://thisshouldbefree.p.rapidapi.com/user/createWithList",
            "description": "",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/user/createWithList\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/user/createWithList\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createUser",
            "url": "https://thisshouldbefree.p.rapidapi.com/user",
            "description": "This can only be done by the logged in user.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/user\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/user\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ],
    "standardized_name": "thisshouldbefree"
}