{
    "tool_name": "chaincerts",
    "tool_description": "APIs for NFT marktplace",
    "title": "chaincerts",
    "pricing": "FREE",
    "score": null,
    "home_url": "https://rapidapi.com/chaincerts-api-chaincerts-api-default/api/chaincerts1/",
    "host": "chaincerts1.p.rapidapi.com",
    "api_list": [
        {
            "name": "getFilesUnverified",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/getFilesUnverified",
            "description": "List of files  owned by the  user with the provided user ID where status is unverified. The API support pagination by specifying the page number using page query parameter and number of file using  pagination query parameter. If the pagination parameters are not defined the API will return the first eight files.\n\nThe API will return an a error for the following cases: \n- User ID not provided\n-  The user with the provided user ID is not found in the database. \n-  The file with the provided image ID and owned by the provided user ID is not found in the database. \n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code and the list of files owned by the user with the provided user ID  in data field.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/getFilesUnverified\"\nquerystring = {\"userId\": userid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "count": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "_id": {
                                                "type": "null"
                                            },
                                            "count": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "getMyCertNotVerified",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/getMyCertNotVerified",
            "description": "List of files owned by the user with the provided user ID not minted to the blockchain . The API support pagination by specifying the page number using page query parameter and number of file using pagination query parameter. If the pagination parameters are not defined the API will return the first eight files.\n\nThe API will return an a error for the following cases:\n\n- user ID is not provided.\n- The user with the provided user ID is not found in the database.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the list of files owned by the user with the provided user ID in data field, and confirmation message in message field.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/getMyCertNotVerified\"\nquerystring = {\"userId\": userid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "SearchingFiles",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/searchingFiles",
            "description": "List of files owned by the user with the provided user ID / username, the subject of the file contains the word provided as search parameter. The API support pagination by specifying the page number using page query parameter and number of file using pagination query parameter. If the pagination parameters are not defined the API will return the first eight files.\n\nThe API will return an a error for the following cases:\n- None of user ID or username are provided.\n- Search parameter not provided.\n- The user with the provided user ID/username is not found in the database.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the list of files owned by the user with the provided user ID in data field, and confirmation message in message field.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "searchFor",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "Page number for pagination",
                    "default": ""
                },
                {
                    "name": "pagination",
                    "type": "STRING",
                    "description": "Number of returned item.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/searchingFiles\"\nquerystring = {\"searchFor\": searchfor}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "status": true,
                "msg": "Successfull ",
                "data": [
                    {
                        "data": [
                            {
                                "_id": "62e9a7473dabd9f0cb683e1a",
                                "validUntil": "No expiry",
                                "linkedTo": "None",
                                "isOwned": "Yes",
                                "events": [
                                    {
                                        "type": "Airdrop",
                                        "Msg": "New certificate is created",
                                        "txHash": "0x4491edca228de0ddc6d481f4acad547bb0e3c7863e5c39185eefc27b83c90547",
                                        "date": "2022-08-02T22:39:08.522Z",
                                        "chainId": "137",
                                        "contract_address": "0xkpkdq8qpaz9",
                                        "owner_address": "0x836b301059c21aC2957C0F65d520A846C9e3537f",
                                        "token_id": 70
                                    }
                                ],
                                "imageStatus": "Verified",
                                "forSaleStatus": false,
                                "price": 0,
                                "validForSaleFrom": "2010-01-06T22:03:20.281Z",
                                "validForSaleUntil": "2030-01-06T22:03:20.281Z",
                                "attributes": [
                                    {
                                        "trait_type": "",
                                        "value": ""
                                    },
                                    {
                                        "display_type": "boost_number",
                                        "trait_type": "",
                                        "value": "",
                                        "max_value": ""
                                    }
                                ],
                                "issuerId": "jdojdnnosl858soq",
                                "ownerId": "8758d8697ef",
                                "imageName": "cartoonhockeyplayerskatingvectorDMNJ0Xjpeg-1659479878879.jpeg",
                                "imageHash": "96381f47203ead02dd11162bf74b09f5d44b9136149d42001e6475757e9cbe64",
                                "thumbNail": "cartoonhockeyplayerskatingvectorDMNJ0Xjpeg-1659479879055.jpeg",
                                "txHash": "0x4491edca228de0ddc6d481f4acad547bb0e3c7863e5c39185eefc27b83c90547",
                                "category": "A Sample of a NFT a user will recieve after redeeming their ticket",
                                "subject": "Sample Hockey NFT",
                                "place": "Canada",
                                "dateofIssue": "Tue Aug 02 2022 00:00:00 GMT-0700 (Pacific Daylight Time)",
                                "productionYear": "Tue Aug 02 2022 00:00:00 GMT-0700 (Pacific Daylight Time)",
                                "height": "",
                                "width": "",
                                "depth": "",
                                "unit": "Cm",
                                "stockDetails": "",
                                "issuerName": "store",
                                "IpfsHash": "QmQv6NJAohwJA58mFL7UCZMJXTiH32fU2fHrW3XE7QQPKf",
                                "quantity": 1,
                                "salesquantity": 1,
                                "type": "Digital art",
                                "createdDate": "2022-08-02T22:37:59.513Z",
                                "__v": 0,
                                "metaDataIpfsHash": "",
                                "tokenId": 70
                            },
                            {
                                "_id": "62e9a719a9f720001ba26ff4",
                                "validUntil": "No expiry",
                                "linkedTo": "62e9a6e13dabd9f0cb683d75",
                                "isOwned": "No",
                                "events": [
                                    {
                                        "type": "Creation",
                                        "Msg": "New certificate is created",
                                        "txHash": "0x046fb029e94040e83397576193d24d447567d9e88159d6c36d76add6673692c9",
                                        "date": "2022-08-02T22:36:33.570Z",
                                        "chainId": "137",
                                        "contract_address": "0xkpkdq8qpaz9",
                                        "owner_address": "0x46a6a374CB2B6145855577F7021c215ba62",
                                        "token_id": 69
                                    },
                                    {
                                        "type": "Transferred",
                                        "Msg": "Certificate is transferred ",
                                        "txHash": "0x1b5ced81518b1ff9b05259",
                                        "date": "2022-08-02T22:37:13.011Z"
                                    }
                                ],
                                "imageStatus": "Burned",
                                "forSaleStatus": false,
                                "price": 0,
                                "validForSaleFrom": "2010-01-06T22:03:20.281Z",
                                "validForSaleUntil": "2030-01-06T22:03:20.281Z",
                                "attributes": [
                                    {
                                        "trait_type": "",
                                        "value": ""
                                    },
                                    {
                                        "display_type": "boost_number",
                                        "trait_type": "",
                                        "value": "",
                                        "max_value": ""
                                    }
                                ],
                                "issuerId": "jdojdnnosl858soq",
                                "issuerName": "store",
                                "ownerId": "8758d8697ef",
                                "imageName": "Screenshot20220725151621png-1659479776774.png",
                                "imageHash": "96381f47203ead02dd11162bf74b09f5d44b9136149d42001e6475757e9cbe64",
                                "txHash": "0xee083d16f1b6a59633fb9227366d765ac0",
                                "category": "A Sample of a ticket for a sports event",
                                "subject": "Sample Ticket",
                                "place": "Canada",
                                "dateofIssue": "Tue Aug 02 2022 00:00:00 GMT-0700 (Pacific Daylight Time)",
                                "productionYear": "Tue Aug 02 2022 00:00:00 GMT-0700 (Pacific Daylight Time)",
                                "height": "",
                                "width": "",
                                "depth": "",
                                "unit": "Cm",
                                "stockDetails": "",
                                "type": "Digital art",
                                "IpfsHash": "QmcRaMNKX58xxWf8KwPt5XvB6h9K",
                                "quantity": 1,
                                "salesquantity": 1,
                                "metaDataIpfsHash": "",
                                "tokenId": null,
                                "blockNumber": 31449407,
                                "createdDate": "2022-08-02T22:37:13.012Z",
                                "__v": 0
                            }
                        ],
                        "count": [
                            {
                                "_id": null,
                                "count": 25
                            }
                        ]
                    }
                ]
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "count": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "_id": {
                                                "type": "null"
                                            },
                                            "count": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "filterForSaleCertificates40",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/filterForSaleCertificates40",
            "description": "List of files for sale  where the owner id or owner username equal the provided owner ID/ username and the type equal the provided type. The API support pagination by specifying the page number using page query parameter and number of file using  pagination query parameter. If the pagination parameters are not defined the API will return the first 40 files.\n\nThe API will return an a error for the following cases: \n-  User id is not provided.\n-  No user with the provided user ID in the database.\n \n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the list of files for sales  in the data filed, and the total number of files for sale in totalCert field.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "painting and the sculpture",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "Either username or userId is required",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Either username or userId is required",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/filterForSaleCertificates40\"\nquerystring = {\"type\": type}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "status": true,
                "msg": "These images are for sale with the specified type for this specific user",
                "data": [
                    {
                        "validUntil": "No expiry",
                        "linkedTo": "None",
                        "isOwned": "Yes",
                        "events": [
                            {
                                "type": "Creation",
                                "Msg": "New certificate is created",
                                "txHash": "0x9b00c784e284fbaad544ce8f73a0bfd2ea3a009cb16c799934fef7a39de8aa62",
                                "date": "2022-07-18T23:05:35.640Z",
                                "chainId": "137",
                                "contract_address": "0xdsfsdfqfsfq3EA76f313Ee19Eb3A",
                                "owner_address": "0xkfifjifjf",
                                "token_id": 1364
                            }
                        ],
                        "imageStatus": "Verified",
                        "forSaleStatus": true,
                        "price": 100,
                        "validForSaleFrom": "2010-01-06T22:03:20.281Z",
                        "validForSaleUntil": "2030-01-06T22:03:20.281Z",
                        "attributes": [
                            {
                                "trait_type": "",
                                "value": ""
                            },
                            {
                                "display_type": "boost_number",
                                "trait_type": "",
                                "value": "",
                                "max_value": ""
                            }
                        ],
                        "_id": "62d5e73338dbe4195143733a",
                        "issuerId": "789456456123789456",
                        "ownerId": "789456456123789456",
                        "imageName": "A1mp3-1658185522048.mp3",
                        "imageHash": "96381f47203ead02dd11162bf74b09f5d44b9136149d42001e6475757e9cbe64",
                        "thumbNail": "handsgafb2df26c_1280jpg-1658185522761.jpg",
                        "txHash": "0x9b00c784e284fbaad544ce8f73a0bfd2ea3a009cb16c799934fef7a39de8aa62",
                        "category": "Sample Song ",
                        "subject": "Sample Song ",
                        "place": "Canada",
                        "dateofIssue": "Mon Jul 18 2022 00:00:00 GMT-0700 (Pacific Daylight Time)",
                        "productionYear": "Mon Jul 18 2022 00:00:00 GMT-0700 (Pacific Daylight Time)",
                        "height": "",
                        "width": "",
                        "depth": "",
                        "unit": "Cm",
                        "stockDetails": "",
                        "issuerName": "test",
                        "IpfsHash": "QmT3dgsggvFkoxEdnjvb8SkQ57K6VvYZj8",
                        "quantity": 1,
                        "salesquantity": 1,
                        "type": "Digital art",
                        "createdDate": "2022-07-18T23:05:23.842Z",
                        "__v": 0,
                        "metaDataIpfsHash": "",
                        "tokenId": 1364,
                        "id": "62bfv8dbe4195143733a"
                    }
                ],
                "totalCert": 1
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "validUntil": {
                                    "type": "string"
                                },
                                "linkedTo": {
                                    "type": "string"
                                },
                                "isOwned": {
                                    "type": "string"
                                },
                                "events": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "Msg": {
                                                "type": "string"
                                            },
                                            "txHash": {
                                                "type": "string"
                                            },
                                            "date": {
                                                "type": "string"
                                            },
                                            "chainId": {
                                                "type": "string"
                                            },
                                            "contract_address": {
                                                "type": "string"
                                            },
                                            "owner_address": {
                                                "type": "string"
                                            },
                                            "token_id": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                },
                                "imageStatus": {
                                    "type": "string"
                                },
                                "forSaleStatus": {
                                    "type": "boolean"
                                },
                                "price": {
                                    "type": "integer"
                                },
                                "validForSaleFrom": {
                                    "type": "string"
                                },
                                "validForSaleUntil": {
                                    "type": "string"
                                },
                                "attributes": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "_id": {
                                    "type": "string"
                                },
                                "issuerId": {
                                    "type": "string"
                                },
                                "ownerId": {
                                    "type": "string"
                                },
                                "imageName": {
                                    "type": "string"
                                },
                                "imageHash": {
                                    "type": "string"
                                },
                                "thumbNail": {
                                    "type": "string"
                                },
                                "txHash": {
                                    "type": "string"
                                },
                                "category": {
                                    "type": "string"
                                },
                                "subject": {
                                    "type": "string"
                                },
                                "place": {
                                    "type": "string"
                                },
                                "dateofIssue": {
                                    "type": "string"
                                },
                                "productionYear": {
                                    "type": "string"
                                },
                                "height": {
                                    "type": "string"
                                },
                                "width": {
                                    "type": "string"
                                },
                                "depth": {
                                    "type": "string"
                                },
                                "unit": {
                                    "type": "string"
                                },
                                "stockDetails": {
                                    "type": "string"
                                },
                                "issuerName": {
                                    "type": "string"
                                },
                                "IpfsHash": {
                                    "type": "string"
                                },
                                "quantity": {
                                    "type": "integer"
                                },
                                "salesquantity": {
                                    "type": "integer"
                                },
                                "type": {
                                    "type": "string"
                                },
                                "createdDate": {
                                    "type": "string"
                                },
                                "__v": {
                                    "type": "integer"
                                },
                                "metaDataIpfsHash": {
                                    "type": "string"
                                },
                                "tokenId": {
                                    "type": "integer"
                                },
                                "id": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "totalCert": {
                        "type": "integer"
                    }
                }
            }
        },
        {
            "name": "listofitemsoldquantitygrterthn0",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/listofitemsoldquantitygrterthn0",
            "description": "List of files for sale where the owner id or owner username equal the provided owner ID/ username and the quantity is grater than zero. \nThe API will return an a error for the following cases:\n\nUser id is not provided.\nNo user with the provided user ID in the database.\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the list of files for sales in the data filed, and the total number of files for sale in total field.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "Either username or userId is required",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Either username or userId is required",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/listofitemsoldquantitygrterthn0\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "status": true,
                "msg": "Successful ",
                "data": [
                    {
                        "validUntil": "No expiry",
                        "linkedTo": "None",
                        "isOwned": "Yes",
                        "events": [
                            {
                                "type": "Creation",
                                "Msg": "New certificate is created",
                                "txHash": "0x9b00c784e284fbaad544ce8f73a0bfd2ea3a009cb16c799934fef7a39de8aa62",
                                "date": "2022-07-18T23:05:35.640Z",
                                "chainId": "137",
                                "contract_address": "0xdsfsdfqfsfq3EA76f313Ee19Eb3A",
                                "owner_address": "0xkfifjifjf",
                                "token_id": 1364
                            }
                        ],
                        "imageStatus": "Verified",
                        "forSaleStatus": true,
                        "price": 100,
                        "validForSaleFrom": "2010-01-06T22:03:20.281Z",
                        "validForSaleUntil": "2030-01-06T22:03:20.281Z",
                        "attributes": [
                            {
                                "trait_type": "",
                                "value": ""
                            },
                            {
                                "display_type": "boost_number",
                                "trait_type": "",
                                "value": "",
                                "max_value": ""
                            }
                        ],
                        "_id": "62d5e73338dbe4195143733a",
                        "issuerId": "789456456123789456",
                        "ownerId": "789456456123789456",
                        "imageName": "A1mp3-1658185522048.mp3",
                        "imageHash": "96381f47203ead02dd11162bf74b09f5d44b9136149d42001e6475757e9cbe64",
                        "thumbNail": "handsgafb2df26c_1280jpg-1658185522761.jpg",
                        "txHash": "0x9b00c784e284fbaad544ce8f73a0bfd2ea3a009cb16c799934fef7a39de8aa62",
                        "category": "Sample Song ",
                        "subject": "Sample Song ",
                        "place": "Canada",
                        "dateofIssue": "Mon Jul 18 2022 00:00:00 GMT-0700 (Pacific Daylight Time)",
                        "productionYear": "Mon Jul 18 2022 00:00:00 GMT-0700 (Pacific Daylight Time)",
                        "height": "",
                        "width": "",
                        "depth": "",
                        "unit": "Cm",
                        "stockDetails": "",
                        "issuerName": "test",
                        "IpfsHash": "QmT3dgsggvFkoxEdnjvb8SkQ57K6VvYZj8",
                        "quantity": 1,
                        "salesquantity": 1,
                        "type": "Digital art",
                        "createdDate": "2022-07-18T23:05:23.842Z",
                        "__v": 0,
                        "metaDataIpfsHash": "",
                        "tokenId": 1364,
                        "id": "62bfv8dbe4195143733a"
                    }
                ],
                "total": 1
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "validUntil": {
                                    "type": "string"
                                },
                                "linkedTo": {
                                    "type": "string"
                                },
                                "isOwned": {
                                    "type": "string"
                                },
                                "events": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "Msg": {
                                                "type": "string"
                                            },
                                            "txHash": {
                                                "type": "string"
                                            },
                                            "date": {
                                                "type": "string"
                                            },
                                            "chainId": {
                                                "type": "string"
                                            },
                                            "contract_address": {
                                                "type": "string"
                                            },
                                            "owner_address": {
                                                "type": "string"
                                            },
                                            "token_id": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                },
                                "imageStatus": {
                                    "type": "string"
                                },
                                "forSaleStatus": {
                                    "type": "boolean"
                                },
                                "price": {
                                    "type": "integer"
                                },
                                "validForSaleFrom": {
                                    "type": "string"
                                },
                                "validForSaleUntil": {
                                    "type": "string"
                                },
                                "attributes": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "_id": {
                                    "type": "string"
                                },
                                "issuerId": {
                                    "type": "string"
                                },
                                "ownerId": {
                                    "type": "string"
                                },
                                "imageName": {
                                    "type": "string"
                                },
                                "imageHash": {
                                    "type": "string"
                                },
                                "thumbNail": {
                                    "type": "string"
                                },
                                "txHash": {
                                    "type": "string"
                                },
                                "category": {
                                    "type": "string"
                                },
                                "subject": {
                                    "type": "string"
                                },
                                "place": {
                                    "type": "string"
                                },
                                "dateofIssue": {
                                    "type": "string"
                                },
                                "productionYear": {
                                    "type": "string"
                                },
                                "height": {
                                    "type": "string"
                                },
                                "width": {
                                    "type": "string"
                                },
                                "depth": {
                                    "type": "string"
                                },
                                "unit": {
                                    "type": "string"
                                },
                                "stockDetails": {
                                    "type": "string"
                                },
                                "issuerName": {
                                    "type": "string"
                                },
                                "IpfsHash": {
                                    "type": "string"
                                },
                                "quantity": {
                                    "type": "integer"
                                },
                                "salesquantity": {
                                    "type": "integer"
                                },
                                "type": {
                                    "type": "string"
                                },
                                "createdDate": {
                                    "type": "string"
                                },
                                "__v": {
                                    "type": "integer"
                                },
                                "metaDataIpfsHash": {
                                    "type": "string"
                                },
                                "tokenId": {
                                    "type": "integer"
                                },
                                "id": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "total": {
                        "type": "integer"
                    }
                }
            }
        },
        {
            "name": "getFilesTransferred",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/getFilesTransferred",
            "description": "List of files previously owned by the  user with the provided user ID. The API support pagination by specifying the page number using page query parameter and number of file using  pagination query parameter. If the pagination parameters are not defined the API will return the first eight files.\n\nThe API will return an a error for the following cases: \n- User ID not provided\n-  The user with the provided user ID is not found in the database. \n-  The file with the provided image ID and owned by the provided user ID is not found in the database. \n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code and the list of files owned by the user with the provided user ID  in data field.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "pagination",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/getFilesTransferred\"\nquerystring = {\"userId\": userid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "count": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "_id": {
                                                "type": "null"
                                            },
                                            "count": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "transferMultiplewithsqs",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/transferMultiplewithsqs",
            "description": "Transfer multiple files to an other user.\n\nThe API will return an a error for the following cases:\n\nThere is a provided quantity less then 1 .\nThe user with the provided user ID is not found in the database.\nProvided password is incorrect.\nThe user with the provided user ID is not active.\nThe receiver and public key not found in the database.\nThere is  a file with in the provided image ID list  not found in the database.\nThe user is not the owner of the file.\nThe user does not own the provided quantity.\nNot enough found in the wallet.\nIf there is no error, the file will be send to SQS queue where the transaction will be processed.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the image Ids in data field and a confirmation message in the message field.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/transferMultiplewithsqs\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "uploadMultFileMultBatchwithsqs",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/uploadMultFileMultBatchwithsqs",
            "description": "Mint multiple files to the polygon blockchain.\n\nThe API will return an a error for the following cases:\n\n- There is a provided quantity less then 1 .\n- Not all images id have quantities.\n- The user with the provided user ID is not found in the database.\n- Provided password is incorrect.\n- The user with the provided user ID is not active.\n- The user with the provided user ID is not owner.\n- There is a file with in the provided image ID list not found in the database.\n- One of the files is either Verified or Queued or Processing.\n- The user is not the owner of one of the files.\n- The user does not own the provided quantity.\n- Not enough found in the wallet.\n- If there is no error, the file will be send to SQS queue where the transaction will be processed.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the image Ids in data field and a confirmation message in the message field.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/uploadMultFileMultBatchwithsqs\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "imageId": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "filterForSaleCertificates",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/filterForSaleCertificates",
            "description": "List of files for sale  where the owner id or owner username equal the provided owner ID/ username and the type equal the provided type. The API support pagination by specifying the page number using page query parameter and number of file using  pagination query parameter. If the pagination parameters are not defined the API will return the first eight files.\n\nThe API will return an a error for the following cases: \n-  User id is not provided.\n-  No user with the provided user ID in the database.\n \n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the list of files for sales  in the data filed, and the total number of files for sale in totalCert field.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "example: painting , digital art, merchandise, etc.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/filterForSaleCertificates\"\nquerystring = {\"type\": type}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "status": true,
                "msg": "These images are for sale with the specified type for this specific user",
                "data": [
                    {
                        "validUntil": "No expiry",
                        "linkedTo": "None",
                        "isOwned": "Yes",
                        "events": [
                            {
                                "type": "Creation",
                                "Msg": "New certificate is created",
                                "txHash": "0x9b00c784e284fbaad544ce8f73a0bfd2ea3a009cb16c799934fef7a39de8aa62",
                                "date": "2022-07-18T23:05:35.640Z",
                                "chainId": "137",
                                "contract_address": "0xdsfsdfqfsfq3EA76f313Ee19Eb3A",
                                "owner_address": "0xkfifjifjf",
                                "token_id": 1364
                            }
                        ],
                        "imageStatus": "Verified",
                        "forSaleStatus": true,
                        "price": 100,
                        "validForSaleFrom": "2010-01-06T22:03:20.281Z",
                        "validForSaleUntil": "2030-01-06T22:03:20.281Z",
                        "attributes": [
                            {
                                "trait_type": "",
                                "value": ""
                            },
                            {
                                "display_type": "boost_number",
                                "trait_type": "",
                                "value": "",
                                "max_value": ""
                            }
                        ],
                        "_id": "62d5e73338dbe4195143733a",
                        "issuerId": "789456456123789456",
                        "ownerId": "789456456123789456",
                        "imageName": "A1mp3-1658185522048.mp3",
                        "imageHash": "96381f47203ead02dd11162bf74b09f5d44b9136149d42001e6475757e9cbe64",
                        "thumbNail": "handsgafb2df26c_1280jpg-1658185522761.jpg",
                        "txHash": "0x9b00c784e284fbaad544ce8f73a0bfd2ea3a009cb16c799934fef7a39de8aa62",
                        "category": "Sample Song ",
                        "subject": "Sample Song ",
                        "place": "Canada",
                        "dateofIssue": "Mon Jul 18 2022 00:00:00 GMT-0700 (Pacific Daylight Time)",
                        "productionYear": "Mon Jul 18 2022 00:00:00 GMT-0700 (Pacific Daylight Time)",
                        "height": "",
                        "width": "",
                        "depth": "",
                        "unit": "Cm",
                        "stockDetails": "",
                        "issuerName": "test",
                        "IpfsHash": "QmT3dgsggvFkoxEdnjvb8SkQ57K6VvYZj8",
                        "quantity": 1,
                        "salesquantity": 1,
                        "type": "Digital art",
                        "createdDate": "2022-07-18T23:05:23.842Z",
                        "__v": 0,
                        "metaDataIpfsHash": "",
                        "tokenId": 1364,
                        "id": "62bfv8dbe4195143733a"
                    }
                ],
                "totalCert": 1
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "validUntil": {
                                    "type": "string"
                                },
                                "linkedTo": {
                                    "type": "string"
                                },
                                "isOwned": {
                                    "type": "string"
                                },
                                "events": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "Msg": {
                                                "type": "string"
                                            },
                                            "txHash": {
                                                "type": "string"
                                            },
                                            "date": {
                                                "type": "string"
                                            },
                                            "chainId": {
                                                "type": "string"
                                            },
                                            "contract_address": {
                                                "type": "string"
                                            },
                                            "owner_address": {
                                                "type": "string"
                                            },
                                            "token_id": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                },
                                "imageStatus": {
                                    "type": "string"
                                },
                                "forSaleStatus": {
                                    "type": "boolean"
                                },
                                "price": {
                                    "type": "integer"
                                },
                                "validForSaleFrom": {
                                    "type": "string"
                                },
                                "validForSaleUntil": {
                                    "type": "string"
                                },
                                "attributes": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "_id": {
                                    "type": "string"
                                },
                                "issuerId": {
                                    "type": "string"
                                },
                                "ownerId": {
                                    "type": "string"
                                },
                                "imageName": {
                                    "type": "string"
                                },
                                "imageHash": {
                                    "type": "string"
                                },
                                "thumbNail": {
                                    "type": "string"
                                },
                                "txHash": {
                                    "type": "string"
                                },
                                "category": {
                                    "type": "string"
                                },
                                "subject": {
                                    "type": "string"
                                },
                                "place": {
                                    "type": "string"
                                },
                                "dateofIssue": {
                                    "type": "string"
                                },
                                "productionYear": {
                                    "type": "string"
                                },
                                "height": {
                                    "type": "string"
                                },
                                "width": {
                                    "type": "string"
                                },
                                "depth": {
                                    "type": "string"
                                },
                                "unit": {
                                    "type": "string"
                                },
                                "stockDetails": {
                                    "type": "string"
                                },
                                "issuerName": {
                                    "type": "string"
                                },
                                "IpfsHash": {
                                    "type": "string"
                                },
                                "quantity": {
                                    "type": "integer"
                                },
                                "salesquantity": {
                                    "type": "integer"
                                },
                                "type": {
                                    "type": "string"
                                },
                                "createdDate": {
                                    "type": "string"
                                },
                                "__v": {
                                    "type": "integer"
                                },
                                "metaDataIpfsHash": {
                                    "type": "string"
                                },
                                "tokenId": {
                                    "type": "integer"
                                },
                                "id": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "totalCert": {
                        "type": "integer"
                    }
                }
            }
        },
        {
            "name": "Signup",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/signup",
            "description": "Create a new user. A user can have one of the following roles:\n\nOwner : For users that create NFT.\nClient : For users that buy NFT.\nThe API will return an a error for the following cases:\n\nEither first-name, email, password or role is missing.\nEither username or email is duplicated.\nError storing to database.\nIf there is no error, a unique user id and a private key will be generated for the user. The user will be added to the database, and the private key will be stored in encrypted format.\nThe user will be unverified by default. A verification code will be send to the user via email with activation link.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code with the user information except for the private key and password.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "firstName",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userRole",
                    "type": "STRING",
                    "description": "`owner`  : For users that create NFT.\n\n`client` : For users that buy NFT.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/signup\"\nquerystring = {\"username\": username, \"email\": email, \"password\": password, \"firstName\": firstname}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "userRole": {
                                "type": "string"
                            },
                            "amount": {
                                "type": "integer"
                            },
                            "userStatus": {
                                "type": "string"
                            },
                            "store_opening_date": {
                                "type": "string"
                            },
                            "store_ending_date": {
                                "type": "string"
                            },
                            "phoneNumberVerified": {
                                "type": "string"
                            },
                            "twoFacAuthEnabled": {
                                "type": "string"
                            },
                            "isShippingAddressUS": {
                                "type": "boolean"
                            },
                            "_id": {
                                "type": "string"
                            },
                            "firstName": {
                                "type": "string"
                            },
                            "lastName": {
                                "type": "string"
                            },
                            "username": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "verificationCode": {
                                "type": "integer"
                            },
                            "publicKey": {
                                "type": "string"
                            },
                            "createdDate": {
                                "type": "string"
                            },
                            "__v": {
                                "type": "integer"
                            },
                            "id": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "changeForSaleStatus",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/changeForSaleStatus",
            "description": "Change file status to for sale and provide sale price.\n\nThe API will return an error for the following cases:\n- Image Id is not provided.\n- The file with the provided Image ID is not found in the database.\n- The user with the provided user ID is not active.\n- Price is not provided.\n- _forSaleStatus provided value is different from true or false.\n- File is not owned by the user with the provided ID.\n- Database error while updating image information.\n\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the image information in data field and a confirmation message in the message field.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "forSaleStatus",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "imageId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "price",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "validForSaleFrom",
                    "type": "STRING",
                    "description": "eg 2022-01-11T21:17:52.859+00:00",
                    "default": ""
                },
                {
                    "name": "validForSaleUntil",
                    "type": "STRING",
                    "description": "eg 2022-01-11T21:17:52.859+00:00",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/changeForSaleStatus\"\nquerystring = {\"forSaleStatus\": forsalestatus, \"imageId\": imageid, \"price\": price, \"userId\": userid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "status": true,
                "msg": "image data updated Successfully",
                "data": {
                    "validUntil": "2022-08-09",
                    "linkedTo": "None",
                    "isOwned": "Yes",
                    "events": [
                        {
                            "type": "Creation",
                            "Msg": "New certificate is created",
                            "txHash": "0xebdb2d88484szfq94994sf2",
                            "date": "2022-08-09T18:43:08.779Z",
                            "chainId": "111",
                            "contract_address": "0x964CFJOJ858DOPf20E5D8E5",
                            "owner_address": "0x46a88484szfq94994sF7021c215ba62",
                            "token_id": 120
                        }
                    ],
                    "imageStatus": "Verified",
                    "forSaleStatus": true,
                    "price": 5000,
                    "validForSaleFrom": "2010-01-06T22:03:20.281Z",
                    "validForSaleUntil": "2030-01-06T22:03:20.281Z",
                    "attributes": [
                        {
                            "trait_type": "test",
                            "value": "blue"
                        },
                        {
                            "display_type": "boost_number",
                            "trait_type": "length",
                            "value": "10",
                            "max_value": "100"
                        }
                    ],
                    "_id": "h849svfsq89qfq",
                    "issuerId": "7snoeq69eeoq",
                    "ownerId": "7snoeq69eeoq",
                    "imageName": "nftjpg-1660070322326.jpg",
                    "imageHash": "9638gf203sfqfq4b9136149d42001e6475757e9cbe64",
                    "thumbNail": "",
                    "txHash": "0xebdb2d895drfpsnhazzsse43ef1e413a0277de100b842",
                    "category": "test",
                    "subject": "test",
                    "place": "Montreal",
                    "dateofIssue": "Tue Aug 09 2022 00:00:00 GMT 0100 (Central European Standard Time)",
                    "productionYear": "Tue Aug 09 2022 00:00:00 GMT 0100 (Central European Standard Time)",
                    "height": "10",
                    "width": "20",
                    "depth": "10",
                    "unit": "Cm",
                    "stockDetails": "",
                    "issuerName": "username",
                    "IpfsHash": "QmQqWcUGTEDSNQCt5XPoj5enK2",
                    "quantity": 1,
                    "salesquantity": 1,
                    "type": "Digital art",
                    "createdDate": "2022-08-09T18:38:42.715Z",
                    "__v": 0,
                    "metaDataIpfsHash": "",
                    "tokenId": 111,
                    "id": "h849svfsq89qfq"
                }
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "validUntil": {
                                "type": "string"
                            },
                            "linkedTo": {
                                "type": "string"
                            },
                            "isOwned": {
                                "type": "string"
                            },
                            "events": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "Msg": {
                                            "type": "string"
                                        },
                                        "txHash": {
                                            "type": "string"
                                        },
                                        "date": {
                                            "type": "string"
                                        },
                                        "chainId": {
                                            "type": "string"
                                        },
                                        "contract_address": {
                                            "type": "string"
                                        },
                                        "owner_address": {
                                            "type": "string"
                                        },
                                        "token_id": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            },
                            "imageStatus": {
                                "type": "string"
                            },
                            "forSaleStatus": {
                                "type": "boolean"
                            },
                            "price": {
                                "type": "integer"
                            },
                            "validForSaleFrom": {
                                "type": "string"
                            },
                            "validForSaleUntil": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            "_id": {
                                "type": "string"
                            },
                            "issuerId": {
                                "type": "string"
                            },
                            "ownerId": {
                                "type": "string"
                            },
                            "imageName": {
                                "type": "string"
                            },
                            "imageHash": {
                                "type": "string"
                            },
                            "thumbNail": {
                                "type": "string"
                            },
                            "txHash": {
                                "type": "string"
                            },
                            "category": {
                                "type": "string"
                            },
                            "subject": {
                                "type": "string"
                            },
                            "place": {
                                "type": "string"
                            },
                            "dateofIssue": {
                                "type": "string"
                            },
                            "productionYear": {
                                "type": "string"
                            },
                            "height": {
                                "type": "string"
                            },
                            "width": {
                                "type": "string"
                            },
                            "depth": {
                                "type": "string"
                            },
                            "unit": {
                                "type": "string"
                            },
                            "stockDetails": {
                                "type": "string"
                            },
                            "issuerName": {
                                "type": "string"
                            },
                            "IpfsHash": {
                                "type": "string"
                            },
                            "quantity": {
                                "type": "integer"
                            },
                            "salesquantity": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            },
                            "createdDate": {
                                "type": "string"
                            },
                            "__v": {
                                "type": "integer"
                            },
                            "metaDataIpfsHash": {
                                "type": "string"
                            },
                            "tokenId": {
                                "type": "integer"
                            },
                            "id": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "UploadFile",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/uploadFile",
            "description": "Upload a file to IPFS using pinata and to the aws server.\n\nThe API will return an a error for the following cases: \n-  Quantity is less or equal then zero.\n-  The user with the provided user ID is not found in the database. \n- The user role with the provided user ID  is not owner.\n- File is not uploaded.\n- Error in uploading the file to the server.\n- File is not one of the following formats: JPEG, JPG, PNG, GIF,  mp4 , m4v, mp3.\n- Error in uploading the file to IPFS.\n- Error in uploading the metadata to IPFS.\n\nIf there is no error, the file will be upload to IPFS using pinata along side with metadata: description,  external url, image ipfs hash, name and attributes.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the metadata in data field, the metadata Ipfs Hash in the metadataipfs and the file  Ipfs Hash imageipfs field.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "subject",
                    "type": "STRING",
                    "description": "Title of the NFT",
                    "default": ""
                },
                {
                    "name": "category",
                    "type": "STRING",
                    "description": "Description of the NFT",
                    "default": ""
                },
                {
                    "name": "quantity",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "imageHash",
                    "type": "STRING",
                    "description": "image hash must be calculated externally, otherwise null value is accepted ",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "thumbnail",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "place",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "location",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "team",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "width",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "stockDetails",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "validUntil",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "imageFilename",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "dateofIssue",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "unit",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "height",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "productionYear",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "depth",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "attributes",
                    "type": "ARRAY",
                    "description": "Attributes supported keys are: display_type,  trait_type, value and max_value\n",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/uploadFile\"\nquerystring = {\"file\": file, \"userId\": userid, \"subject\": subject, \"category\": category, \"quantity\": quantity, \"imageHash\": imagehash}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "status": true,
                "msg": "Certificate and metadata uploaded on IPFS successfully",
                "data": {
                    "validUntil": "2022-08-09",
                    "linkedTo": "None",
                    "isOwned": "Yes",
                    "events": [
                        {
                            "type": "Creation",
                            "Msg": "New certificate is created"
                        }
                    ],
                    "imageStatus": "Unverified",
                    "forSaleStatus": false,
                    "price": 0,
                    "validForSaleFrom": "2010-01-06T22:03:20.281Z",
                    "validForSaleUntil": "2030-01-06T22:03:20.281Z",
                    "attributes": [
                        {
                            "trait_type": "eyes",
                            "value": "blue"
                        },
                        {
                            "display_type": "boost_number",
                            "trait_type": "length",
                            "value": "10",
                            "max_value": "100"
                        }
                    ],
                    "_id": "62f2a9b23dabd9f0cb6e8d59",
                    "issuerId": "5644ssfa82zaf84g",
                    "ownerId": "5644ssfa82zaf84g",
                    "imageName": "nftjpg-5644ssfa82zaf84g.jpg",
                    "imageHash": "96381f5644ssfa82zaf84g5644ssfa82zaf84g01e6475757e9cbe64",
                    "thumbNail": "",
                    "txHash": "0x",
                    "category": "test",
                    "subject": "test",
                    "place": "Montreal",
                    "dateofIssue": "Tue Aug 09 2022 00:00:00 GMT 0100 (Central European Standard Time)",
                    "productionYear": "Tue Aug 09 2022 00:00:00 GMT 0100 (Central European Standard Time)",
                    "height": "10",
                    "width": "20",
                    "depth": "10",
                    "unit": "Cm",
                    "stockDetails": "",
                    "issuerName": "username",
                    "IpfsHash": "QmQqWcUW5644ssfa82zaf84gvHQCt5XPoj5enK2",
                    "quantity": 1,
                    "salesquantity": 1,
                    "type": "Digital art",
                    "createdDate": "2022-08-09T18:38:42.715Z",
                    "__v": 0,
                    "id": "62f25644ssfa82zaf84gd59"
                },
                "metadataipfs": "QmY6zLxZ5644ssfa82zaf84gADGuM2tVH",
                "imageipfs": "QmQqWc5644ssfa82zaf84gP3Y761KWCkafuvHQCt5XPoj5enK2"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "validUntil": {
                                "type": "string"
                            },
                            "linkedTo": {
                                "type": "string"
                            },
                            "isOwned": {
                                "type": "string"
                            },
                            "events": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "Msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "imageStatus": {
                                "type": "string"
                            },
                            "forSaleStatus": {
                                "type": "boolean"
                            },
                            "price": {
                                "type": "integer"
                            },
                            "validForSaleFrom": {
                                "type": "string"
                            },
                            "validForSaleUntil": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            "_id": {
                                "type": "string"
                            },
                            "issuerId": {
                                "type": "string"
                            },
                            "ownerId": {
                                "type": "string"
                            },
                            "imageName": {
                                "type": "string"
                            },
                            "imageHash": {
                                "type": "string"
                            },
                            "thumbNail": {
                                "type": "string"
                            },
                            "txHash": {
                                "type": "string"
                            },
                            "category": {
                                "type": "string"
                            },
                            "subject": {
                                "type": "string"
                            },
                            "place": {
                                "type": "string"
                            },
                            "dateofIssue": {
                                "type": "string"
                            },
                            "productionYear": {
                                "type": "string"
                            },
                            "height": {
                                "type": "string"
                            },
                            "width": {
                                "type": "string"
                            },
                            "depth": {
                                "type": "string"
                            },
                            "unit": {
                                "type": "string"
                            },
                            "stockDetails": {
                                "type": "string"
                            },
                            "issuerName": {
                                "type": "string"
                            },
                            "IpfsHash": {
                                "type": "string"
                            },
                            "quantity": {
                                "type": "integer"
                            },
                            "salesquantity": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            },
                            "createdDate": {
                                "type": "string"
                            },
                            "__v": {
                                "type": "integer"
                            },
                            "id": {
                                "type": "string"
                            }
                        }
                    },
                    "metadataipfs": {
                        "type": "string"
                    },
                    "imageipfs": {
                        "type": "string"
                    }
                }
            }
        },
        {
            "name": "GetFileById",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/getFilesById",
            "description": "Shows the details of the file/NFT  with the provided id such as name or other description.\n\nThe API will return an a error for the following cases:\n- No file with the provided image id found in the database.\n- Database error while looking for the file.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the file information details in data field and organization id in org_ownerId field.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/getFilesById\"\nquerystring = {\"imageId\": imageid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "UploadFileIntoBlockchainwithSQS",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/uploadFileIntoBlockchainwithsqs",
            "description": "Mint a single NFT to polygon blockchain.\n\nThe API will return an a error for the following cases:\n\n\nThe user with the provided user ID is not found in the database.\nThe user with the provided user ID is not owner.\nThe user with the provided user ID is not active.\nThe file with the provided image ID is not found in the database.\nThe user is not the owner of the file.\nFile is either Verified or Queued or Processing.\nNot enough found in the wallet.\nIf there is no error, the file will be send to SQS queue where the transaction will be processed.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the image Id in data field and a confirmation message in the message field.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/uploadFileIntoBlockchainwithsqs\"\nquerystring = {\"imageId\": imageid, \"userId\": userid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "imageId": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "GetUserById",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/getUserById",
            "description": "Get user information by id",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/getUserById\"\nquerystring = {\"userId\": userid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "userRole": {
                                "type": "string"
                            },
                            "userStatus": {
                                "type": "string"
                            },
                            "store_opening_date": {
                                "type": "string"
                            },
                            "store_ending_date": {
                                "type": "string"
                            },
                            "phoneNumberVerified": {
                                "type": "string"
                            },
                            "twoFacAuthEnabled": {
                                "type": "string"
                            },
                            "isShippingAddressUS": {
                                "type": "boolean"
                            },
                            "_id": {
                                "type": "string"
                            },
                            "firstName": {
                                "type": "string"
                            },
                            "lastName": {
                                "type": "string"
                            },
                            "username": {
                                "type": "string"
                            },
                            "organizationName": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "createdDate": {
                                "type": "string"
                            },
                            "__v": {
                                "type": "integer"
                            },
                            "emailVerifiedAt": {
                                "type": "string"
                            },
                            "banner": {
                                "type": "string"
                            },
                            "banner_details": {
                                "type": "string"
                            },
                            "contact": {
                                "type": "string"
                            },
                            "logo": {
                                "type": "string"
                            },
                            "store_details": {
                                "type": "string"
                            },
                            "title": {
                                "type": "string"
                            },
                            "metamaskPublickey": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "getBalance",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/getBalance",
            "description": "Get balance in Matic of the logged in user",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/getBalance\"\nquerystring = {\"userId\": userid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "string"
                    }
                }
            }
        },
        {
            "name": "setUsername",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/setUsername",
            "description": "Change current username. An error will occur if:\n- No username is provided.\n- The new username equal the old username.\n- The new username already exist.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/setUsername\"\nquerystring = {\"userId\": userid, \"username\": username}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "CheckUsername",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/check-username",
            "description": "Check if the provided username already exist in the database.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/check-username\"\nquerystring = {\"username\": username}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    }
                }
            }
        },
        {
            "name": "ChangeDetails",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/changeDetails",
            "description": "Update user profile: first name, last name or/and organization name.\n\nThe API will return an a error for the following cases:\n\nUser ID is not provided.\nThe user with the specified user ID is not found in the database.\nDatabase error while updating profile.\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code and a confirmation message.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "lastName",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "firstName",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "organizationName",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/changeDetails\"\nquerystring = {\"userId\": userid, \"lastName\": lastname, \"firstName\": firstname, \"organizationName\": organizationname}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "ForgotPassword",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/forgotPassword",
            "description": "Send reset token via email to change password .\n\nThe API will return an a error for the following cases:\n\nEmail is not provided.\nThe user with the specified email is not found in the database.\nIf there is no error a reset token will be send via email.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code and a confirmation message.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "emailId",
                    "type": "STRING",
                    "description": "user email",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/forgotPassword\"\nquerystring = {\"emailId\": emailid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "ConfirmVerificationCode",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/confirm-verification-code",
            "description": "Confirm that user have the correct verification code .\n\nThe API will return an a error for the following cases:\n\nThe user with the specified user ID is not found in the database.\nThe specified code does not match the verification code stored in the database.\nIf there is no error, the user status will be update from unverified to verified.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code with a confirmation message.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "code",
                    "type": "STRING",
                    "description": "The verification code received by email.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/confirm-verification-code\"\nquerystring = {\"userId\": userid, \"code\": code}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "updateProfile",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/updateProfile",
            "description": "Update marketplace information including: title, description, contract information, banner details, store details, store opening and ending date.\n\nThe API will return an error for the following cases:\n\nUser ID, is not provided.\nUser with the provided id not found in the database.\nLogo or banner is not one of the following formats: JPEG, JPG, PNG, GIF, mp4 , m4v, mp3.\nError saving to the database.\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code with a confirmation message.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "store_ending_date",
                    "type": "STRING",
                    "description": "",
                    "default": "2021-12-03T09:14:00.813+00:00"
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "store_details",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "banner_details",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "contact",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "store_opening_date",
                    "type": "STRING",
                    "description": "",
                    "default": "2021-12-03T09:14:00.813+00:00"
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/updateProfile\"\nquerystring = {\"userId\": userid, \"store_ending_date\": store_ending_date, \"store_opening_date\": store_opening_date}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "null"
                    }
                }
            }
        },
        {
            "name": "updateEmail",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/updateEmail",
            "description": "Update the email of the user with the provided id.\n\nThe API will return an error for the following cases:\n\nUser ID, new email or password are not provided.\nThe user with the provided user ID is not found in the database.\nEmail already exist.\nDatabase error while updating email.\nIf there is no error, the email will be update. The user status is inactive. A verification code will be send via email.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code with a confirmation message.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "newemail",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "newemail",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/updateEmail\"\nquerystring = {\"newemail\": newemail, \"userId\": userid, \"password\": password}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "ChangePassword",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/changePassword",
            "description": "Update password, user ID and old password must be provided.\n\nThe API will return an a error for the following cases:\n\nUser ID is not provided.\nThe user with the specified user ID is not found in the database.\nOld password does not match the existing one.\nDatabase error while updating the password.\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code and a confirmation message.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "oldPass",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "newPass",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/changePassword\"\nquerystring = {\"oldPass\": oldpass, \"userId\": userid, \"newPass\": newpass}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "ResetPassword",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/resetPassword",
            "description": "Change password with the provided one after confirming reset token received via email .\n\nThe API will return an a error for the following cases:\n\nReset token is not provided.\nReset token is not valid.\nReset token is expired.\nDatabase error while updating the password.\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code and a confirmation message.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "rtoken",
                    "type": "STRING",
                    "description": "Reset token received via email",
                    "default": ""
                },
                {
                    "name": "upass",
                    "type": "STRING",
                    "description": "new password",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/resetPassword\"\nquerystring = {\"rtoken\": rtoken, \"upass\": upass}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "SendVerificationCode",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/send-verification-code",
            "description": "Send a verification code to the user via email.\n\nThe API will return an a error for the following cases:\n\nThe user with the specified user ID is not found in the database\nError storing the generated code to database.\nIf there is no error, the verification code will be send to the user via email.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code with a confirmation message.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/send-verification-code\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "login",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/login",
            "description": "Login a user by email and password.\n\nThe API will return an a error for the following cases:\n\nEmail or password are not provided.\nThe user with the specified email is not found in the database.\nEmail not verified.\nProvided password hash does not match the one stored in the database.\nError storing the the user session code to database.\nIf there is no error, a new JWT token will be generated. The user session will be either updated or created in the database with the following information:\n\nHeaders referer.\nRequest url.\nUser IP address.\nUser agent.\nBrowser name.\nBrowser version.\nOperator System.\nUser ID.\nLogin time.\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code the JWT token in token field and the user information expect for private key and password in the data field.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/login\"\nquerystring = {\"email\": email, \"password\": password}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "userRole": {
                                "type": "string"
                            },
                            "amount": {
                                "type": "integer"
                            },
                            "userStatus": {
                                "type": "string"
                            },
                            "store_opening_date": {
                                "type": "string"
                            },
                            "store_ending_date": {
                                "type": "string"
                            },
                            "phoneNumberVerified": {
                                "type": "string"
                            },
                            "twoFacAuthEnabled": {
                                "type": "string"
                            },
                            "isShippingAddressUS": {
                                "type": "boolean"
                            },
                            "_id": {
                                "type": "string"
                            },
                            "firstName": {
                                "type": "string"
                            },
                            "lastName": {
                                "type": "string"
                            },
                            "username": {
                                "type": "string"
                            },
                            "organizationName": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "verificationCode": {
                                "type": "integer"
                            },
                            "publicKey": {
                                "type": "string"
                            },
                            "createdDate": {
                                "type": "string"
                            },
                            "__v": {
                                "type": "integer"
                            },
                            "emailVerifiedAt": {
                                "type": "string"
                            },
                            "banner": {
                                "type": "string"
                            },
                            "banner_details": {
                                "type": "string"
                            },
                            "contact": {
                                "type": "string"
                            },
                            "logo": {
                                "type": "string"
                            },
                            "store_details": {
                                "type": "string"
                            },
                            "title": {
                                "type": "string"
                            },
                            "metamaskPublickey": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "NewSignup",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/NewSignup",
            "description": "Create a new user with password generation. A user can have one of the following roles:\n\nOwner : For users that create NFT.\nClient : For users that buy NFT.\nThe API will return an a error for the following cases:\n\nEither first-name, email, password or role is missing.\nEither username or email is duplicated.\nError storing to database.\nIf there is no error, a unique user id and a private key and password will be generated for the user. The user will be added to the database, and the private key will be stored in encrypted format and password in hashed format.\nThe user will be unverified by default. A verification code will be send to the user via email with activation link.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code with the user information except for the private key and password.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userRole",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "firstName",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "orgName",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "phonNumber",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "lastName",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/NewSignup\"\nquerystring = {\"userRole\": userrole, \"firstName\": firstname, \"email\": email}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "transferSinglewithsqs",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/transferSinglewithsqs",
            "description": "Transfer a file to an other user.\n\nThe API will return an a error for the following cases:\n\nProvided quantity is less then 1.\nThe user with the provided user ID is not found in the database.\nProvided password is incorrect.\nThe user with the provided user ID is not active.\nThe receiver and public key not found in the database.\nThe file with the provided image ID is not found in the database.\nThe user is not the owner of the file.\nThe user does not own the provided quantity.\nNot enough found in the wallet.\nIf there is no error, the file will be send to SQS queue where the transaction will be processed.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the image Id in data field and a confirmation message in the message field.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "receiverId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "imageId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "quantity",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/transferSinglewithsqs\"\nquerystring = {\"password\": password, \"userId\": userid, \"receiverId\": receiverid, \"imageId\": imageid, \"quantity\": quantity}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "getMyCertificates",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/getMyCertificates",
            "description": "List of files owned by the  user with the provided user ID. The API support pagination by specifying the page number using page query parameter and number of file using  pagination query parameter. If the pagination parameters are not defined the API will return the first eight files.\n\nThe API will return an a error for the following cases: \n- User ID not provided\n-  The user with the provided user ID is not found in the database. \n-  The file with the provided image ID and owned by the provided user ID is not found in the database. \n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code and the list of files owned by the user with the provided user ID  in data field.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/getMyCertificates\"\nquerystring = {\"userId\": userid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "status": true,
                "msg": "Successfull azertyuiop\u0109idfvd5",
                "data": [
                    {
                        "data": [
                            {
                                "_id": "62f0dsezfefzfgr",
                                "validUntil": "\"No expiry\"",
                                "linkedTo": "None",
                                "isOwned": "Yes",
                                "events": [
                                    {
                                        "type": "Creation",
                                        "Msg": "New certificate is created"
                                    }
                                ],
                                "imageStatus": "Unverified",
                                "forSaleStatus": false,
                                "price": 0,
                                "validForSaleFrom": "2010-01-06T22:03:20.281Z",
                                "validForSaleUntil": "2030-01-06T22:03:20.281Z",
                                "attributes": [],
                                "issuerId": "azertyuiop\u0109idfvd5",
                                "ownerId": "azertyuiop\u0109idfvd5",
                                "imageName": "1jpeg-1659907360804.jpeg",
                                "imageHash": "0cffb4d1fe76afff50d30e958434b9a4",
                                "thumbNail": "",
                                "txHash": "0x",
                                "category": "Jess",
                                "subject": "Jess",
                                "place": "MLSE",
                                "dateofIssue": "\"13.05.2021\"",
                                "productionYear": "\"2022\"",
                                "issuerName": "balloonfestival",
                                "IpfsHash": "Qmf1dprQzmEuRH5cHpwPJSjNwZxrobKMZBotMFR9U2cLtN",
                                "quantity": 1,
                                "salesquantity": 1,
                                "team": "Winnipeg Jets",
                                "createdDate": "2022-08-07T21:22:41.345Z",
                                "__v": 0,
                                "metaDataIpfsHash": "QmbUj1SrSWCVvkE2Mio3o91hhQZhTsweByTG9ohvJ4jdmJ"
                            },
                            {
                                "_id": "62e9a7413dabd9f0cb683e14",
                                "validUntil": "No expiry",
                                "linkedTo": "None",
                                "isOwned": "Yes",
                                "events": [
                                    {
                                        "type": "Creation",
                                        "Msg": "New certificate is created"
                                    }
                                ],
                                "imageStatus": "Unverified",
                                "forSaleStatus": false,
                                "price": 0,
                                "validForSaleFrom": "2010-01-06T22:03:20.281Z",
                                "validForSaleUntil": "2030-01-06T22:03:20.281Z",
                                "attributes": [
                                    {
                                        "trait_type": "",
                                        "value": ""
                                    },
                                    {
                                        "display_type": "boost_number",
                                        "trait_type": "",
                                        "value": "",
                                        "max_value": ""
                                    }
                                ],
                                "issuerId": "azertyuiopdidfvd5",
                                "ownerId": "azertyuiopdidfvd5",
                                "imageName": "cartoon.jpeg",
                                "imageHash": "bfknfkfnfjbfjbjbjsbdjbskskrkfnsknvkdpen",
                                "thumbNail": "test.jpeg",
                                "txHash": "0x",
                                "category": "A Sample of a NFT ",
                                "subject": "Sample Hockey NFT",
                                "place": "Canada",
                                "dateofIssue": "Tue Aug 02 2022 00:00:00 GMT-0700 (Pacific Daylight Time)",
                                "productionYear": "Tue Aug 02 2022 00:00:00 GMT-0700 (Pacific Daylight Time)",
                                "height": "",
                                "width": "",
                                "depth": "",
                                "unit": "Cm",
                                "stockDetails": "",
                                "issuerName": "username",
                                "IpfsHash": "QmQsgdgsfgnininincfff",
                                "quantity": 1,
                                "salesquantity": 1,
                                "type": "Digital art",
                                "createdDate": "2022-08-02T22:37:53.327Z",
                                "__v": 0,
                                "metaDataIpfsHash": "QmQNfbfbdwfd4fDsvsgP4KD"
                            }
                        ],
                        "count": [
                            {
                                "_id": null,
                                "count": 916
                            }
                        ]
                    }
                ]
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "count": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "_id": {
                                                "type": "null"
                                            },
                                            "count": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "GetFilesByUserId40",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/getFilesByuserId40",
            "description": "List of files owned by the  user with the provided user ID (collection) . The API support pagination by specifying the page number using page query parameter and number of file using  pagination query parameter. If the pagination parameters are not defined the API will return the first Forty files.\n\nThe API will return an a error for the following cases: \n-  The user with the provided user ID is not found in the database. \n-  The file with the provided image ID and owned by the provided user ID is not found in the database. \n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the list of files owned by the user with the provided user ID  in data field, and the total number of files in totalCert field.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/getFilesByuserId40\"\nquerystring = {\"userId\": userid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "status": true,
                "msg": "Successfull",
                "org_ownerId": "ffffffffff4",
                "data": {
                    "validUntil": "No expiry",
                    "linkedTo": "None",
                    "isOwned": "No",
                    "events": [
                        {
                            "type": "Creation",
                            "Msg": "New certificate is created",
                            "txHash": "0xaffffffffff3a0278fffffff55bdc",
                            "date": "2022-07-28T21:10:35.343Z",
                            "chainId": "137",
                            "contract_address": "0x2fffffffffffffffffffffff",
                            "owner_address": "0xfffffffffffffffffffffffffff2",
                            "token_id": 58
                        },
                        {
                            "type": "Transferred",
                            "Msg": "Certificate is Transferred.",
                            "txHash": "0x2a0adffffffffffffffff",
                            "date": "2022-07-28T22:28:59.441Z"
                        }
                    ],
                    "imageStatus": "Verified",
                    "forSaleStatus": false,
                    "price": 0,
                    "validForSaleFrom": "2010-01-06T22:03:20.281Z",
                    "validForSaleUntil": "2030-01-06T22:03:20.281Z",
                    "attributes": [
                        {
                            "trait_type": "",
                            "value": ""
                        },
                        {
                            "display_type": "boost_number",
                            "trait_type": "",
                            "value": "",
                            "max_value": ""
                        }
                    ],
                    "_id": "aaaaaaaaaaaaaa",
                    "issuerId": "62fffffffffffffffff",
                    "ownerId": "62bfffffffffffffff",
                    "imageName": "nft.jpeg",
                    "imageHash": "ffffffffff4b9136149d42001e6475757e9cbe64",
                    "thumbNail": "",
                    "txHash": "0xafffffffffff8fb6727f3d55bdc",
                    "category": "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                    "subject": "q22",
                    "place": "New Jersey",
                    "dateofIssue": "Fri Jul 01 2022 00:00:00 GMT-0400 (Eastern Daylight Time)",
                    "productionYear": "Fri Jul 01 2022 00:00:00 GMT-0400 (Eastern Daylight Time)",
                    "height": "",
                    "width": "",
                    "depth": "",
                    "unit": "Cm",
                    "stockDetails": "",
                    "issuerName": "username",
                    "IpfsHash": "fffffffffff1kjvXFiAZ",
                    "quantity": 0,
                    "salesquantity": 0,
                    "type": "Digital art",
                    "createdDate": "2022-07-28T21:10:18.930Z",
                    "__v": 1,
                    "metaDataIpfsHash": "",
                    "tokenId": -1,
                    "id": "aaaaaaaaaaaaaa"
                }
            },
            "headers": {},
            "schema": {}
        },
        {
            "name": "GetFilesByUserId",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/getFilesByuserId",
            "description": "List of files owned by the  user with the provided user ID. The API support pagination by specifying the page number using page query parameter and number of file using  pagination query parameter. If the pagination parameters are not defined the API will return the first eight files.\n\nThe API will return an a error for the following cases: \n-  The user with the provided user ID is not found in the database. \n-  The file with the provided image ID and owned by the provided user ID is not found in the database. \n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the list of files owned by the user with the provided user ID  in data field, and the total number of files in totalCert field.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "Page number for pagination.",
                    "default": ""
                },
                {
                    "name": "pagination",
                    "type": "STRING",
                    "description": "Maximum number of file to return for pagination",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/getFilesByuserId\"\nquerystring = {\"userId\": userid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "status": true,
                "msg": "Successfull",
                "org_ownerId": "ffffffffff4",
                "data": {
                    "validUntil": "No expiry",
                    "linkedTo": "None",
                    "isOwned": "No",
                    "events": [
                        {
                            "type": "Creation",
                            "Msg": "New certificate is created",
                            "txHash": "0xaffffffffff3a0278fffffff55bdc",
                            "date": "2022-07-28T21:10:35.343Z",
                            "chainId": "137",
                            "contract_address": "0x2fffffffffffffffffffffff",
                            "owner_address": "0xfffffffffffffffffffffffffff2",
                            "token_id": 58
                        },
                        {
                            "type": "Transferred",
                            "Msg": "Certificate is Transferred.",
                            "txHash": "0x2a0adffffffffffffffff",
                            "date": "2022-07-28T22:28:59.441Z"
                        }
                    ],
                    "imageStatus": "Verified",
                    "forSaleStatus": false,
                    "price": 0,
                    "validForSaleFrom": "2010-01-06T22:03:20.281Z",
                    "validForSaleUntil": "2030-01-06T22:03:20.281Z",
                    "attributes": [
                        {
                            "trait_type": "",
                            "value": ""
                        },
                        {
                            "display_type": "boost_number",
                            "trait_type": "",
                            "value": "",
                            "max_value": ""
                        }
                    ],
                    "_id": "aaaaaaaaaaaaaa",
                    "issuerId": "62fffffffffffffffff",
                    "ownerId": "62bfffffffffffffff",
                    "imageName": "nft.jpeg",
                    "imageHash": "ffffffffff4b9136149d42001e6475757e9cbe64",
                    "thumbNail": "",
                    "txHash": "0xafffffffffff8fb6727f3d55bdc",
                    "category": "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                    "subject": "q22",
                    "place": "New Jersey",
                    "dateofIssue": "Fri Jul 01 2022 00:00:00 GMT-0400 (Eastern Daylight Time)",
                    "productionYear": "Fri Jul 01 2022 00:00:00 GMT-0400 (Eastern Daylight Time)",
                    "height": "",
                    "width": "",
                    "depth": "",
                    "unit": "Cm",
                    "stockDetails": "",
                    "issuerName": "username",
                    "IpfsHash": "fffffffffff1kjvXFiAZ",
                    "quantity": 0,
                    "salesquantity": 0,
                    "type": "Digital art",
                    "createdDate": "2022-07-28T21:10:18.930Z",
                    "__v": 1,
                    "metaDataIpfsHash": "",
                    "tokenId": -1,
                    "id": "aaaaaaaaaaaaaa"
                }
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "org_ownerId": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "validUntil": {
                                "type": "string"
                            },
                            "linkedTo": {
                                "type": "string"
                            },
                            "isOwned": {
                                "type": "string"
                            },
                            "events": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            "imageStatus": {
                                "type": "string"
                            },
                            "forSaleStatus": {
                                "type": "boolean"
                            },
                            "price": {
                                "type": "integer"
                            },
                            "validForSaleFrom": {
                                "type": "string"
                            },
                            "validForSaleUntil": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            "_id": {
                                "type": "string"
                            },
                            "issuerId": {
                                "type": "string"
                            },
                            "ownerId": {
                                "type": "string"
                            },
                            "imageName": {
                                "type": "string"
                            },
                            "imageHash": {
                                "type": "string"
                            },
                            "thumbNail": {
                                "type": "string"
                            },
                            "txHash": {
                                "type": "string"
                            },
                            "category": {
                                "type": "string"
                            },
                            "subject": {
                                "type": "string"
                            },
                            "place": {
                                "type": "string"
                            },
                            "dateofIssue": {
                                "type": "string"
                            },
                            "productionYear": {
                                "type": "string"
                            },
                            "height": {
                                "type": "string"
                            },
                            "width": {
                                "type": "string"
                            },
                            "depth": {
                                "type": "string"
                            },
                            "unit": {
                                "type": "string"
                            },
                            "stockDetails": {
                                "type": "string"
                            },
                            "issuerName": {
                                "type": "string"
                            },
                            "IpfsHash": {
                                "type": "string"
                            },
                            "quantity": {
                                "type": "integer"
                            },
                            "salesquantity": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            },
                            "createdDate": {
                                "type": "string"
                            },
                            "__v": {
                                "type": "integer"
                            },
                            "metaDataIpfsHash": {
                                "type": "string"
                            },
                            "tokenId": {
                                "type": "integer"
                            },
                            "id": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "updateMetamaskKey",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/updateMetamaskKey",
            "description": "Update metamask public key.\n\nThe API will return an error for the following cases:\n-The user with the provided user ID is not found in the database.\nThe provided password is incorrect.\n- Database error while storing the public key.\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code with confirmation message.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "STRING",
                    "description": "Metamask public key",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/updateMetamaskKey\"\nquerystring = {\"userId\": userid, \"publicKey\": publickey}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "servercheck",
            "url": "https://chaincerts1.p.rapidapi.com/",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "getuserPrivateKeybyPwd",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/getuserPrivateKeybyPwd",
            "description": "Get User Private Key by providing password.\n\nThe API will return an error for the following cases:\n- The user with the provided user ID is not found in the database.\n- The provided password is incorrect. \n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code and the private key in the data field.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/getuserPrivateKeybyPwd\"\nquerystring = {\"userId\": userid, \"password\": password}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "status": true,
                "msg": "User Private Key",
                "data": "0xc9f13f62290548b04c517188380b3ae6d9c9fd31cb3c445adf3ca7c849218555"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "string"
                    }
                }
            }
        },
        {
            "name": "getForSaleCertificatesByUsername",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/getForSaleCertificatesByUsername",
            "description": "List of files for sale  where the owner username equal the provided  username. The API support pagination by specifying the page number using page query parameter and number of file using  pagination query parameter. If the pagination parameters are not defined the API will return the first eight files.\n\nThe API will return an a error for the following cases: \n-  Username is not provided.\n-  No user with the provided username in the database.\n \n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the list of files for sales  in the data filed, and the total number of files for sale in totalCert field.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/getForSaleCertificatesByUsername\"\nquerystring = {\"username\": username}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "status": true,
                "msg": "These certificates were found for this username",
                "data": [
                    {
                        "validUntil": "No expiry",
                        "linkedTo": "None",
                        "isOwned": "Yes",
                        "events": [
                            {
                                "type": "Creation",
                                "Msg": "New certificate is created",
                                "txHash": "0x9b00c784e284fbaad544ce8f73a0bfd2ea3a009cb16c799934fef7a39de8aa62",
                                "date": "2022-07-18T23:05:35.640Z",
                                "chainId": "137",
                                "contract_address": "0xdsfsdfqfsfq3EA76f313Ee19Eb3A",
                                "owner_address": "0xkfifjifjf",
                                "token_id": 1364
                            }
                        ],
                        "imageStatus": "Verified",
                        "forSaleStatus": true,
                        "price": 100,
                        "validForSaleFrom": "2010-01-06T22:03:20.281Z",
                        "validForSaleUntil": "2030-01-06T22:03:20.281Z",
                        "attributes": [
                            {
                                "trait_type": "",
                                "value": ""
                            },
                            {
                                "display_type": "boost_number",
                                "trait_type": "",
                                "value": "",
                                "max_value": ""
                            }
                        ],
                        "_id": "62d5e73338dbe4195143733a",
                        "issuerId": "789456456123789456",
                        "ownerId": "789456456123789456",
                        "imageName": "A1mp3-1658185522048.mp3",
                        "imageHash": "96381f47203ead02dd11162bf74b09f5d44b9136149d42001e6475757e9cbe64",
                        "thumbNail": "handsgafb2df26c_1280jpg-1658185522761.jpg",
                        "txHash": "0x9b00c784e284fbaad544ce8f73a0bfd2ea3a009cb16c799934fef7a39de8aa62",
                        "category": "Sample Song ",
                        "subject": "Sample Song ",
                        "place": "Canada",
                        "dateofIssue": "Mon Jul 18 2022 00:00:00 GMT-0700 (Pacific Daylight Time)",
                        "productionYear": "Mon Jul 18 2022 00:00:00 GMT-0700 (Pacific Daylight Time)",
                        "height": "",
                        "width": "",
                        "depth": "",
                        "unit": "Cm",
                        "stockDetails": "",
                        "issuerName": "test",
                        "IpfsHash": "QmT3dgsggvFkoxEdnjvb8SkQ57K6VvYZj8",
                        "quantity": 1,
                        "salesquantity": 1,
                        "type": "Digital art",
                        "createdDate": "2022-07-18T23:05:23.842Z",
                        "__v": 0,
                        "metaDataIpfsHash": "",
                        "tokenId": 1364,
                        "id": "62bfv8dbe4195143733a"
                    }
                ],
                "totalCert": 1
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "validUntil": {
                                    "type": "string"
                                },
                                "linkedTo": {
                                    "type": "string"
                                },
                                "isOwned": {
                                    "type": "string"
                                },
                                "events": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "Msg": {
                                                "type": "string"
                                            },
                                            "txHash": {
                                                "type": "string"
                                            },
                                            "date": {
                                                "type": "string"
                                            },
                                            "chainId": {
                                                "type": "string"
                                            },
                                            "contract_address": {
                                                "type": "string"
                                            },
                                            "owner_address": {
                                                "type": "string"
                                            },
                                            "token_id": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                },
                                "imageStatus": {
                                    "type": "string"
                                },
                                "forSaleStatus": {
                                    "type": "boolean"
                                },
                                "price": {
                                    "type": "integer"
                                },
                                "validForSaleFrom": {
                                    "type": "string"
                                },
                                "validForSaleUntil": {
                                    "type": "string"
                                },
                                "attributes": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "_id": {
                                    "type": "string"
                                },
                                "issuerId": {
                                    "type": "string"
                                },
                                "ownerId": {
                                    "type": "string"
                                },
                                "imageName": {
                                    "type": "string"
                                },
                                "imageHash": {
                                    "type": "string"
                                },
                                "thumbNail": {
                                    "type": "string"
                                },
                                "txHash": {
                                    "type": "string"
                                },
                                "category": {
                                    "type": "string"
                                },
                                "subject": {
                                    "type": "string"
                                },
                                "place": {
                                    "type": "string"
                                },
                                "dateofIssue": {
                                    "type": "string"
                                },
                                "productionYear": {
                                    "type": "string"
                                },
                                "height": {
                                    "type": "string"
                                },
                                "width": {
                                    "type": "string"
                                },
                                "depth": {
                                    "type": "string"
                                },
                                "unit": {
                                    "type": "string"
                                },
                                "stockDetails": {
                                    "type": "string"
                                },
                                "issuerName": {
                                    "type": "string"
                                },
                                "IpfsHash": {
                                    "type": "string"
                                },
                                "quantity": {
                                    "type": "integer"
                                },
                                "salesquantity": {
                                    "type": "integer"
                                },
                                "type": {
                                    "type": "string"
                                },
                                "createdDate": {
                                    "type": "string"
                                },
                                "__v": {
                                    "type": "integer"
                                },
                                "metaDataIpfsHash": {
                                    "type": "string"
                                },
                                "tokenId": {
                                    "type": "integer"
                                },
                                "id": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "totalCert": {
                        "type": "integer"
                    }
                }
            }
        },
        {
            "name": "sortForSaleCertificates40",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/sortForSaleCertificates40",
            "description": "List of files for sale  where the owner username equal the provided  username, sorted by price either ascending or descending . The API support pagination by specifying the page number using page query parameter and number of file using  pagination query parameter. If the pagination parameters are not defined the API will return the first forty files.\n\nThe API will return an a error for the following cases: \n-  Username or user id are not provided.\n-  No user found with the provided username is the database.\n-  Order value is not ascending or descending.\n \n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the list of files for sales  in the data filed, and the total number of files for sale in totalCert field.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "order",
                    "type": "STRING",
                    "description": "ascending or descending",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/sortForSaleCertificates40\"\nquerystring = {\"order\": order}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "status": true,
                "msg": "These images are for sale that belong to the specified user",
                "data": [
                    {
                        "validUntil": "No expiry",
                        "linkedTo": "None",
                        "isOwned": "Yes",
                        "events": [
                            {
                                "type": "Creation",
                                "Msg": "New certificate is created",
                                "txHash": "0x9b00c784e284fbaad544ce8f73a0bfd2ea3a009cb16c799934fef7a39de8aa62",
                                "date": "2022-07-18T23:05:35.640Z",
                                "chainId": "137",
                                "contract_address": "0xdsfsdfqfsfq3EA76f313Ee19Eb3A",
                                "owner_address": "0xkfifjifjf",
                                "token_id": 1364
                            }
                        ],
                        "imageStatus": "Verified",
                        "forSaleStatus": true,
                        "price": 100,
                        "validForSaleFrom": "2010-01-06T22:03:20.281Z",
                        "validForSaleUntil": "2030-01-06T22:03:20.281Z",
                        "attributes": [
                            {
                                "trait_type": "",
                                "value": ""
                            },
                            {
                                "display_type": "boost_number",
                                "trait_type": "",
                                "value": "",
                                "max_value": ""
                            }
                        ],
                        "_id": "62d5e73338dbe4195143733a",
                        "issuerId": "789456456123789456",
                        "ownerId": "789456456123789456",
                        "imageName": "A1mp3-1658185522048.mp3",
                        "imageHash": "96381f47203ead02dd11162bf74b09f5d44b9136149d42001e6475757e9cbe64",
                        "thumbNail": "handsgafb2df26c_1280jpg-1658185522761.jpg",
                        "txHash": "0x9b00c784e284fbaad544ce8f73a0bfd2ea3a009cb16c799934fef7a39de8aa62",
                        "category": "Sample Song ",
                        "subject": "Sample Song ",
                        "place": "Canada",
                        "dateofIssue": "Mon Jul 18 2022 00:00:00 GMT-0700 (Pacific Daylight Time)",
                        "productionYear": "Mon Jul 18 2022 00:00:00 GMT-0700 (Pacific Daylight Time)",
                        "height": "",
                        "width": "",
                        "depth": "",
                        "unit": "Cm",
                        "stockDetails": "",
                        "issuerName": "test",
                        "IpfsHash": "QmT3dgsggvFkoxEdnjvb8SkQ57K6VvYZj8",
                        "quantity": 1,
                        "salesquantity": 1,
                        "type": "Digital art",
                        "createdDate": "2022-07-18T23:05:23.842Z",
                        "__v": 0,
                        "metaDataIpfsHash": "",
                        "tokenId": 1364,
                        "id": "62bfv8dbe4195143733a"
                    },
                    {
                        "validUntil": "No expiry",
                        "linkedTo": "None",
                        "isOwned": "Yes",
                        "events": [
                            {
                                "type": "Creation",
                                "Msg": "New certificate is created",
                                "txHash": "0xfwdfsdfbc3b753272eff4669fa2d49753",
                                "date": "2022-07-19T17:16:45.085Z",
                                "chainId": "137",
                                "contract_address": "0xddsffgdggdffrb3A",
                                "owner_address": "0xkfifjifjf",
                                "token_id": 1395
                            }
                        ],
                        "imageStatus": "Verified",
                        "forSaleStatus": true,
                        "price": 100,
                        "validForSaleFrom": "2010-01-06T22:03:20.281Z",
                        "validForSaleUntil": "2030-01-06T22:03:20.281Z",
                        "attributes": [
                            {
                                "trait_type": "",
                                "value": ""
                            },
                            {
                                "display_type": "boost_number",
                                "trait_type": "",
                                "value": "",
                                "max_value": ""
                            }
                        ],
                        "_id": "62d6e6f556907a206d4ef54d",
                        "issuerId": "789456456123789456",
                        "ownerId": "789456456123789456",
                        "imageName": "nft1.jpeg",
                        "imageHash": "96381f47203ead02dd11162bf74b09f5d44b9136149d42001e6475757e9cbe64",
                        "thumbNail": "Image.jpg",
                        "txHash": "0xf62ea47e5552a1eb46b51c99747bc4b6bb12956c3b753272eff4669fa2d49753",
                        "category": "Lorem Ipsum is simply dummy text of the printing and typesetting industry. ",
                        "subject": "Song 2",
                        "place": "Toronto",
                        "dateofIssue": "Wed Jun 29 2022 00:00:00 GMT-0400 (Eastern Daylight Time)",
                        "productionYear": "Tue Jun 28 2022 00:00:00 GMT-0400 (Eastern Daylight Time)",
                        "height": "",
                        "width": "",
                        "depth": "",
                        "unit": "Cm",
                        "stockDetails": "",
                        "issuerName": "test",
                        "IpfsHash": "dkpkdfsoqovFkoxEdnjvb8SkQ57K6VvYZj8",
                        "quantity": 1,
                        "salesquantity": 1,
                        "type": "Digital art",
                        "createdDate": "2022-07-19T17:16:37.947Z",
                        "__v": 0,
                        "metaDataIpfsHash": "",
                        "tokenId": 1395,
                        "id": "62d6e6f556907a206d4ef54d"
                    },
                    {
                        "validUntil": "No expiry",
                        "linkedTo": "None",
                        "isOwned": "Yes",
                        "events": [
                            {
                                "type": "Creation",
                                "Msg": "New certificate is created",
                                "txHash": "0xfefenkffkpfkpf0bcdc9183686819816806062e4296993642b8",
                                "date": "2022-07-22T23:23:14.388Z",
                                "chainId": "1d711",
                                "contract_address": "0xazerty44848ddffff",
                                "owner_address": "0xkfifjifjf",
                                "token_id": 532
                            }
                        ],
                        "imageStatus": "Verified",
                        "forSaleStatus": true,
                        "price": 1900,
                        "validForSaleFrom": "2010-01-06T22:03:20.281Z",
                        "validForSaleUntil": "2030-01-06T22:03:20.281Z",
                        "attributes": [
                            {
                                "trait_type": "",
                                "value": ""
                            },
                            {
                                "display_type": "boost_number",
                                "trait_type": "",
                                "value": "",
                                "max_value": ""
                            }
                        ],
                        "_id": "62db1f6d5b792a582b0ad3aa",
                        "issuerId": "789456456123789456",
                        "ownerId": "789456456123789456",
                        "imageName": "nft.png",
                        "imageHash": "gggggggggggggggg6475757e9cbe64",
                        "thumbNail": "gg.png",
                        "txHash": "0xfefenkffkpfkpf0bcdc9183686819816806062e4296993642b8",
                        "category": "test",
                        "subject": "test minting",
                        "place": "test",
                        "dateofIssue": "Fri Jul 29 2022 00:00:00 GMT-0700 (Pacific Daylight Time)",
                        "productionYear": "Fri Jul 22 2022 00:00:00 GMT-0700 (Pacific Daylight Time)",
                        "height": "",
                        "width": "",
                        "depth": "",
                        "unit": "Cm",
                        "stockDetails": "",
                        "issuerName": "test",
                        "IpfsHash": "aeepihqpfjjfoejofjoeo,",
                        "quantity": 2,
                        "salesquantity": 2,
                        "type": "Digital art",
                        "createdDate": "2022-07-22T22:06:37.387Z",
                        "__v": 0,
                        "metaDataIpfsHash": "",
                        "tokenId": 532,
                        "id": "62db1f6d5b792affff"
                    }
                ],
                "totalCert": 3
            },
            "headers": {},
            "schema": {}
        },
        {
            "name": "sortForSaleCertificates",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/sortForSaleCertificates",
            "description": "List of files for sale  where the owner username equal the provided  username, sorted by price either ascending or descending . The API support pagination by specifying the page number using page query parameter and number of file using  pagination query parameter. If the pagination parameters are not defined the API will return the first eight files.\n\nThe API will return an a error for the following cases: \n-  Username or user id are not provided.\n-  No user found with the provided username is the database.\n-  Order value is not ascending or descending.\n \n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the list of files for sales  in the data filed, and the total number of files for sale in totalCert field.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "order",
                    "type": "STRING",
                    "description": "accepted values: ascending or descending.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/sortForSaleCertificates\"\nquerystring = {\"order\": order}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "status": true,
                "msg": "These images are for sale that belong to the specified user",
                "data": [
                    {
                        "validUntil": "No expiry",
                        "linkedTo": "None",
                        "isOwned": "Yes",
                        "events": [
                            {
                                "type": "Creation",
                                "Msg": "New certificate is created",
                                "txHash": "0x9b00c784e284fbaad544ce8f73a0bfd2ea3a009cb16c799934fef7a39de8aa62",
                                "date": "2022-07-18T23:05:35.640Z",
                                "chainId": "137",
                                "contract_address": "0xdsfsdfqfsfq3EA76f313Ee19Eb3A",
                                "owner_address": "0xkfifjifjf",
                                "token_id": 1364
                            }
                        ],
                        "imageStatus": "Verified",
                        "forSaleStatus": true,
                        "price": 100,
                        "validForSaleFrom": "2010-01-06T22:03:20.281Z",
                        "validForSaleUntil": "2030-01-06T22:03:20.281Z",
                        "attributes": [
                            {
                                "trait_type": "",
                                "value": ""
                            },
                            {
                                "display_type": "boost_number",
                                "trait_type": "",
                                "value": "",
                                "max_value": ""
                            }
                        ],
                        "_id": "62d5e73338dbe4195143733a",
                        "issuerId": "789456456123789456",
                        "ownerId": "789456456123789456",
                        "imageName": "A1mp3-1658185522048.mp3",
                        "imageHash": "96381f47203ead02dd11162bf74b09f5d44b9136149d42001e6475757e9cbe64",
                        "thumbNail": "handsgafb2df26c_1280jpg-1658185522761.jpg",
                        "txHash": "0x9b00c784e284fbaad544ce8f73a0bfd2ea3a009cb16c799934fef7a39de8aa62",
                        "category": "Sample Song ",
                        "subject": "Sample Song ",
                        "place": "Canada",
                        "dateofIssue": "Mon Jul 18 2022 00:00:00 GMT-0700 (Pacific Daylight Time)",
                        "productionYear": "Mon Jul 18 2022 00:00:00 GMT-0700 (Pacific Daylight Time)",
                        "height": "",
                        "width": "",
                        "depth": "",
                        "unit": "Cm",
                        "stockDetails": "",
                        "issuerName": "test",
                        "IpfsHash": "QmT3dgsggvFkoxEdnjvb8SkQ57K6VvYZj8",
                        "quantity": 1,
                        "salesquantity": 1,
                        "type": "Digital art",
                        "createdDate": "2022-07-18T23:05:23.842Z",
                        "__v": 0,
                        "metaDataIpfsHash": "",
                        "tokenId": 1364,
                        "id": "62bfv8dbe4195143733a"
                    },
                    {
                        "validUntil": "No expiry",
                        "linkedTo": "None",
                        "isOwned": "Yes",
                        "events": [
                            {
                                "type": "Creation",
                                "Msg": "New certificate is created",
                                "txHash": "0xfwdfsdfbc3b753272eff4669fa2d49753",
                                "date": "2022-07-19T17:16:45.085Z",
                                "chainId": "137",
                                "contract_address": "0xddsffgdggdffrb3A",
                                "owner_address": "0xkfifjifjf",
                                "token_id": 1395
                            }
                        ],
                        "imageStatus": "Verified",
                        "forSaleStatus": true,
                        "price": 100,
                        "validForSaleFrom": "2010-01-06T22:03:20.281Z",
                        "validForSaleUntil": "2030-01-06T22:03:20.281Z",
                        "attributes": [
                            {
                                "trait_type": "",
                                "value": ""
                            },
                            {
                                "display_type": "boost_number",
                                "trait_type": "",
                                "value": "",
                                "max_value": ""
                            }
                        ],
                        "_id": "62d6e6f556907a206d4ef54d",
                        "issuerId": "789456456123789456",
                        "ownerId": "789456456123789456",
                        "imageName": "nft1.jpeg",
                        "imageHash": "96381f47203ead02dd11162bf74b09f5d44b9136149d42001e6475757e9cbe64",
                        "thumbNail": "Image.jpg",
                        "txHash": "0xf62ea47e5552a1eb46b51c99747bc4b6bb12956c3b753272eff4669fa2d49753",
                        "category": "Lorem Ipsum is simply dummy text of the printing and typesetting industry. ",
                        "subject": "Song 2",
                        "place": "Toronto",
                        "dateofIssue": "Wed Jun 29 2022 00:00:00 GMT-0400 (Eastern Daylight Time)",
                        "productionYear": "Tue Jun 28 2022 00:00:00 GMT-0400 (Eastern Daylight Time)",
                        "height": "",
                        "width": "",
                        "depth": "",
                        "unit": "Cm",
                        "stockDetails": "",
                        "issuerName": "test",
                        "IpfsHash": "dkpkdfsoqovFkoxEdnjvb8SkQ57K6VvYZj8",
                        "quantity": 1,
                        "salesquantity": 1,
                        "type": "Digital art",
                        "createdDate": "2022-07-19T17:16:37.947Z",
                        "__v": 0,
                        "metaDataIpfsHash": "",
                        "tokenId": 1395,
                        "id": "62d6e6f556907a206d4ef54d"
                    },
                    {
                        "validUntil": "No expiry",
                        "linkedTo": "None",
                        "isOwned": "Yes",
                        "events": [
                            {
                                "type": "Creation",
                                "Msg": "New certificate is created",
                                "txHash": "0xfefenkffkpfkpf0bcdc9183686819816806062e4296993642b8",
                                "date": "2022-07-22T23:23:14.388Z",
                                "chainId": "1d711",
                                "contract_address": "0xazerty44848ddffff",
                                "owner_address": "0xkfifjifjf",
                                "token_id": 532
                            }
                        ],
                        "imageStatus": "Verified",
                        "forSaleStatus": true,
                        "price": 1900,
                        "validForSaleFrom": "2010-01-06T22:03:20.281Z",
                        "validForSaleUntil": "2030-01-06T22:03:20.281Z",
                        "attributes": [
                            {
                                "trait_type": "",
                                "value": ""
                            },
                            {
                                "display_type": "boost_number",
                                "trait_type": "",
                                "value": "",
                                "max_value": ""
                            }
                        ],
                        "_id": "62db1f6d5b792a582b0ad3aa",
                        "issuerId": "789456456123789456",
                        "ownerId": "789456456123789456",
                        "imageName": "nft.png",
                        "imageHash": "gggggggggggggggg6475757e9cbe64",
                        "thumbNail": "gg.png",
                        "txHash": "0xfefenkffkpfkpf0bcdc9183686819816806062e4296993642b8",
                        "category": "test",
                        "subject": "test minting",
                        "place": "test",
                        "dateofIssue": "Fri Jul 29 2022 00:00:00 GMT-0700 (Pacific Daylight Time)",
                        "productionYear": "Fri Jul 22 2022 00:00:00 GMT-0700 (Pacific Daylight Time)",
                        "height": "",
                        "width": "",
                        "depth": "",
                        "unit": "Cm",
                        "stockDetails": "",
                        "issuerName": "test",
                        "IpfsHash": "aeepihqpfjjfoejofjoeo,",
                        "quantity": 2,
                        "salesquantity": 2,
                        "type": "Digital art",
                        "createdDate": "2022-07-22T22:06:37.387Z",
                        "__v": 0,
                        "metaDataIpfsHash": "",
                        "tokenId": 532,
                        "id": "62db1f6d5b792affff"
                    }
                ],
                "totalCert": 3
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "validUntil": {
                                    "type": "string"
                                },
                                "linkedTo": {
                                    "type": "string"
                                },
                                "isOwned": {
                                    "type": "string"
                                },
                                "events": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "Msg": {
                                                "type": "string"
                                            },
                                            "txHash": {
                                                "type": "string"
                                            },
                                            "date": {
                                                "type": "string"
                                            },
                                            "chainId": {
                                                "type": "string"
                                            },
                                            "contract_address": {
                                                "type": "string"
                                            },
                                            "owner_address": {
                                                "type": "string"
                                            },
                                            "token_id": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                },
                                "imageStatus": {
                                    "type": "string"
                                },
                                "forSaleStatus": {
                                    "type": "boolean"
                                },
                                "price": {
                                    "type": "integer"
                                },
                                "validForSaleFrom": {
                                    "type": "string"
                                },
                                "validForSaleUntil": {
                                    "type": "string"
                                },
                                "attributes": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "_id": {
                                    "type": "string"
                                },
                                "issuerId": {
                                    "type": "string"
                                },
                                "ownerId": {
                                    "type": "string"
                                },
                                "imageName": {
                                    "type": "string"
                                },
                                "imageHash": {
                                    "type": "string"
                                },
                                "thumbNail": {
                                    "type": "string"
                                },
                                "txHash": {
                                    "type": "string"
                                },
                                "category": {
                                    "type": "string"
                                },
                                "subject": {
                                    "type": "string"
                                },
                                "place": {
                                    "type": "string"
                                },
                                "dateofIssue": {
                                    "type": "string"
                                },
                                "productionYear": {
                                    "type": "string"
                                },
                                "height": {
                                    "type": "string"
                                },
                                "width": {
                                    "type": "string"
                                },
                                "depth": {
                                    "type": "string"
                                },
                                "unit": {
                                    "type": "string"
                                },
                                "stockDetails": {
                                    "type": "string"
                                },
                                "issuerName": {
                                    "type": "string"
                                },
                                "IpfsHash": {
                                    "type": "string"
                                },
                                "quantity": {
                                    "type": "integer"
                                },
                                "salesquantity": {
                                    "type": "integer"
                                },
                                "type": {
                                    "type": "string"
                                },
                                "createdDate": {
                                    "type": "string"
                                },
                                "__v": {
                                    "type": "integer"
                                },
                                "metaDataIpfsHash": {
                                    "type": "string"
                                },
                                "tokenId": {
                                    "type": "integer"
                                },
                                "id": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "totalCert": {
                        "type": "integer"
                    }
                }
            }
        },
        {
            "name": "certMinted",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/certMinted",
            "description": "Get certificates that are minted and not transferred",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "enddate",
                    "type": "STRING",
                    "description": "eg 2022-01-04",
                    "default": ""
                },
                {
                    "name": "subject",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "startdate",
                    "type": "STRING",
                    "description": "eg 2021-12-28",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/certMinted\"\nquerystring = {\"userId\": userid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "validateDiscountCode",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/validateDiscountCode",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "discountCode",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/validateDiscountCode\"\nquerystring = {\"discountCode\": discountcode}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "SearchFiles",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/searchFiles",
            "description": "List of files owned by the user with the provided user ID / orgID and where txHash, subject,  placeOfIssue and/or dateOfIssue match the provided  . The API support pagination by specifying the page number using page query parameter and number of file using pagination query parameter. If the pagination parameters are not defined the API will return the first eight files.\n\nThe API will return an a error for the following cases:\n- No search parameter is provided.\n- The user with the provided user ID/username is not found in the database.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the list of files owned by the user with the provided user ID in data field, and confirmation message in message field.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "txHash",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "docId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "orgName",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "subject",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "orgId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/searchFiles\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "getWalletTxs",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/getWalletTxs",
            "description": "List of transactions made to add money to wallet by the provided user ID. The API support pagination by specifying the page number using page query parameter and number of file using  pagination query parameter. If the pagination parameters are not defined the API will return the first eight files.\n\nThe API will return an a error for the following cases: \n-  The user with the provided user ID is not found in the database. \n\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the list of transactions   in data field, and the total number of transactions in count field.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/getWalletTxs\"\nquerystring = {\"userId\": userid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "genDiscountCode",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/genDiscountCode",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "expiryDate",
                    "type": "STRING",
                    "description": "eg 2023-01-11T21:17:52.859+00:00",
                    "default": ""
                },
                {
                    "name": "discountName",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "discountPercentage",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/genDiscountCode\"\nquerystring = {\"userId\": userid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "listDiscountCode",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/listDiscountCode",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/listDiscountCode\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "validatePromoCode",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/validatePromoCode",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "PromoCode",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/validatePromoCode\"\nquerystring = {\"PromoCode\": promocode}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "getCertificatesByUsername40",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/getForSaleCertificatesByUsername40",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/getForSaleCertificatesByUsername40\"\nquerystring = {\"username\": username}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "getUserProfile",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/getUserProfile",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/getUserProfile\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "getCertificatesForSale",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/getCertificatesForSale",
            "description": "List of files for sale. The API support pagination by specifying the page number using page query parameter and number of file using  pagination query parameter. If the pagination parameters are not defined the API will return the first eight files.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the list of files for sales  in the data filed, and the total number of files for sale in totalCert field.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/getCertificatesForSale\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "matchTraits",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/matchTraits",
            "description": "List of files for sale  where the owner id or owner username equal the provided owner ID/ username and the trait match one of the provided traits.\n\nThe API will return an a error for the following cases: \n-  User id or username is not provided.\n-  No user with the provided user ID in the database.\n \n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the list of files for sales  in the data filed, and the total number of files for sale in total field.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "traitValue",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Either username or userId is required",
                    "default": ""
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "Either username or userId is required",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/matchTraits\"\nquerystring = {\"traitValue\": traitvalue}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "status": true,
                "msg": "Data Below",
                "data": [
                    {
                        "validUntil": "No expiry",
                        "linkedTo": "None",
                        "isOwned": "Yes",
                        "events": [
                            {
                                "type": "Creation",
                                "Msg": "New certificate is created",
                                "txHash": "0x9b00c784e284fbaad544ce8f73a0bfd2ea3a009cb16c799934fef7a39de8aa62",
                                "date": "2022-07-18T23:05:35.640Z",
                                "chainId": "137",
                                "contract_address": "0xdsfsdfqfsfq3EA76f313Ee19Eb3A",
                                "owner_address": "0xkfifjifjf",
                                "token_id": 1364
                            }
                        ],
                        "imageStatus": "Verified",
                        "forSaleStatus": true,
                        "price": 100,
                        "validForSaleFrom": "2010-01-06T22:03:20.281Z",
                        "validForSaleUntil": "2030-01-06T22:03:20.281Z",
                        "attributes": [
                            {
                                "trait_type": "",
                                "value": ""
                            },
                            {
                                "display_type": "boost_number",
                                "trait_type": "",
                                "value": "",
                                "max_value": ""
                            }
                        ],
                        "_id": "62d5e73338dbe4195143733a",
                        "issuerId": "789456456123789456",
                        "ownerId": "789456456123789456",
                        "imageName": "A1mp3-1658185522048.mp3",
                        "imageHash": "96381f47203ead02dd11162bf74b09f5d44b9136149d42001e6475757e9cbe64",
                        "thumbNail": "handsgafb2df26c_1280jpg-1658185522761.jpg",
                        "txHash": "0x9b00c784e284fbaad544ce8f73a0bfd2ea3a009cb16c799934fef7a39de8aa62",
                        "category": "Sample Song ",
                        "subject": "Sample Song ",
                        "place": "Canada",
                        "dateofIssue": "Mon Jul 18 2022 00:00:00 GMT-0700 (Pacific Daylight Time)",
                        "productionYear": "Mon Jul 18 2022 00:00:00 GMT-0700 (Pacific Daylight Time)",
                        "height": "",
                        "width": "",
                        "depth": "",
                        "unit": "Cm",
                        "stockDetails": "",
                        "issuerName": "test",
                        "IpfsHash": "QmT3dgsggvFkoxEdnjvb8SkQ57K6VvYZj8",
                        "quantity": 1,
                        "salesquantity": 1,
                        "type": "Digital art",
                        "createdDate": "2022-07-18T23:05:23.842Z",
                        "__v": 0,
                        "metaDataIpfsHash": "",
                        "tokenId": 1364,
                        "id": "62bfv8dbe4195143733a"
                    }
                ],
                "total": 1
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "validUntil": {
                                    "type": "string"
                                },
                                "linkedTo": {
                                    "type": "string"
                                },
                                "isOwned": {
                                    "type": "string"
                                },
                                "events": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "Msg": {
                                                "type": "string"
                                            },
                                            "txHash": {
                                                "type": "string"
                                            },
                                            "date": {
                                                "type": "string"
                                            },
                                            "chainId": {
                                                "type": "string"
                                            },
                                            "contract_address": {
                                                "type": "string"
                                            },
                                            "owner_address": {
                                                "type": "string"
                                            },
                                            "token_id": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                },
                                "imageStatus": {
                                    "type": "string"
                                },
                                "forSaleStatus": {
                                    "type": "boolean"
                                },
                                "price": {
                                    "type": "integer"
                                },
                                "validForSaleFrom": {
                                    "type": "string"
                                },
                                "validForSaleUntil": {
                                    "type": "string"
                                },
                                "attributes": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "_id": {
                                    "type": "string"
                                },
                                "issuerId": {
                                    "type": "string"
                                },
                                "ownerId": {
                                    "type": "string"
                                },
                                "imageName": {
                                    "type": "string"
                                },
                                "imageHash": {
                                    "type": "string"
                                },
                                "thumbNail": {
                                    "type": "string"
                                },
                                "txHash": {
                                    "type": "string"
                                },
                                "category": {
                                    "type": "string"
                                },
                                "subject": {
                                    "type": "string"
                                },
                                "place": {
                                    "type": "string"
                                },
                                "dateofIssue": {
                                    "type": "string"
                                },
                                "productionYear": {
                                    "type": "string"
                                },
                                "height": {
                                    "type": "string"
                                },
                                "width": {
                                    "type": "string"
                                },
                                "depth": {
                                    "type": "string"
                                },
                                "unit": {
                                    "type": "string"
                                },
                                "stockDetails": {
                                    "type": "string"
                                },
                                "issuerName": {
                                    "type": "string"
                                },
                                "IpfsHash": {
                                    "type": "string"
                                },
                                "quantity": {
                                    "type": "integer"
                                },
                                "salesquantity": {
                                    "type": "integer"
                                },
                                "type": {
                                    "type": "string"
                                },
                                "createdDate": {
                                    "type": "string"
                                },
                                "__v": {
                                    "type": "integer"
                                },
                                "metaDataIpfsHash": {
                                    "type": "string"
                                },
                                "tokenId": {
                                    "type": "integer"
                                },
                                "id": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "total": {
                        "type": "integer"
                    }
                }
            }
        },
        {
            "name": "listoftheitemsoldandquantity0",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/listoftheitemsoldandquantity0",
            "description": "List of sold out  where the owner id or owner username equal the provided owner ID/ username. \nThe API will return an a error for the following cases:\n\nUser id is not provided.\nNo user with the provided user ID in the database.\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the list of files for sales in the data filed, and the total number of files for sale in total field.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "Either userId or username is required",
                    "default": ""
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "Either userId or username is required",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/listoftheitemsoldandquantity0\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "status": true,
                "msg": "Successfully",
                "data": [
                    {
                        "validUntil": "No expiry",
                        "linkedTo": "None",
                        "isOwned": "Yes",
                        "events": [
                            {
                                "type": "Creation",
                                "Msg": "New certificate is created",
                                "txHash": "0x9b00c784e284fbaad544ce8f73a0bfd2ea3a009cb16c799934fef7a39de8aa62",
                                "date": "2022-07-18T23:05:35.640Z",
                                "chainId": "137",
                                "contract_address": "0xdsfsdfqfsfq3EA76f313Ee19Eb3A",
                                "owner_address": "0xkfifjifjf",
                                "token_id": 1364
                            }
                        ],
                        "imageStatus": "Verified",
                        "forSaleStatus": true,
                        "price": 100,
                        "validForSaleFrom": "2010-01-06T22:03:20.281Z",
                        "validForSaleUntil": "2030-01-06T22:03:20.281Z",
                        "attributes": [
                            {
                                "trait_type": "",
                                "value": ""
                            },
                            {
                                "display_type": "boost_number",
                                "trait_type": "",
                                "value": "",
                                "max_value": ""
                            }
                        ],
                        "_id": "62d5e73338dbe4195143733a",
                        "issuerId": "789456456123789456",
                        "ownerId": "789456456123789456",
                        "imageName": "A1mp3-1658185522048.mp3",
                        "imageHash": "96381f47203ead02dd11162bf74b09f5d44b9136149d42001e6475757e9cbe64",
                        "thumbNail": "handsgafb2df26c_1280jpg-1658185522761.jpg",
                        "txHash": "0x9b00c784e284fbaad544ce8f73a0bfd2ea3a009cb16c799934fef7a39de8aa62",
                        "category": "Sample Song ",
                        "subject": "Sample Song ",
                        "place": "Canada",
                        "dateofIssue": "Mon Jul 18 2022 00:00:00 GMT-0700 (Pacific Daylight Time)",
                        "productionYear": "Mon Jul 18 2022 00:00:00 GMT-0700 (Pacific Daylight Time)",
                        "height": "",
                        "width": "",
                        "depth": "",
                        "unit": "Cm",
                        "stockDetails": "",
                        "issuerName": "test",
                        "IpfsHash": "QmT3dgsggvFkoxEdnjvb8SkQ57K6VvYZj8",
                        "quantity": 1,
                        "salesquantity": 1,
                        "type": "Digital art",
                        "createdDate": "2022-07-18T23:05:23.842Z",
                        "__v": 0,
                        "metaDataIpfsHash": "",
                        "tokenId": 1364,
                        "id": "62bfv8dbe4195143733a"
                    }
                ],
                "total": 1
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "validUntil": {
                                    "type": "string"
                                },
                                "linkedTo": {
                                    "type": "string"
                                },
                                "isOwned": {
                                    "type": "string"
                                },
                                "events": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "Msg": {
                                                "type": "string"
                                            },
                                            "txHash": {
                                                "type": "string"
                                            },
                                            "date": {
                                                "type": "string"
                                            },
                                            "chainId": {
                                                "type": "string"
                                            },
                                            "contract_address": {
                                                "type": "string"
                                            },
                                            "owner_address": {
                                                "type": "string"
                                            },
                                            "token_id": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                },
                                "imageStatus": {
                                    "type": "string"
                                },
                                "forSaleStatus": {
                                    "type": "boolean"
                                },
                                "price": {
                                    "type": "integer"
                                },
                                "validForSaleFrom": {
                                    "type": "string"
                                },
                                "validForSaleUntil": {
                                    "type": "string"
                                },
                                "attributes": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "_id": {
                                    "type": "string"
                                },
                                "issuerId": {
                                    "type": "string"
                                },
                                "ownerId": {
                                    "type": "string"
                                },
                                "imageName": {
                                    "type": "string"
                                },
                                "imageHash": {
                                    "type": "string"
                                },
                                "thumbNail": {
                                    "type": "string"
                                },
                                "txHash": {
                                    "type": "string"
                                },
                                "category": {
                                    "type": "string"
                                },
                                "subject": {
                                    "type": "string"
                                },
                                "place": {
                                    "type": "string"
                                },
                                "dateofIssue": {
                                    "type": "string"
                                },
                                "productionYear": {
                                    "type": "string"
                                },
                                "height": {
                                    "type": "string"
                                },
                                "width": {
                                    "type": "string"
                                },
                                "depth": {
                                    "type": "string"
                                },
                                "unit": {
                                    "type": "string"
                                },
                                "stockDetails": {
                                    "type": "string"
                                },
                                "issuerName": {
                                    "type": "string"
                                },
                                "IpfsHash": {
                                    "type": "string"
                                },
                                "quantity": {
                                    "type": "integer"
                                },
                                "salesquantity": {
                                    "type": "integer"
                                },
                                "type": {
                                    "type": "string"
                                },
                                "createdDate": {
                                    "type": "string"
                                },
                                "__v": {
                                    "type": "integer"
                                },
                                "metaDataIpfsHash": {
                                    "type": "string"
                                },
                                "tokenId": {
                                    "type": "integer"
                                },
                                "id": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "total": {
                        "type": "integer"
                    }
                }
            }
        },
        {
            "name": "sendPromotionmails",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/sendPromotionmails",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "subject",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "messagebody",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "eg 2020-01-11",
                    "default": ""
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "eg 2022-01-11",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/sendPromotionmails\"\nquerystring = {\"subject\": subject, \"messagebody\": messagebody, \"from\": is_from, \"to\": to, \"userId\": userid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "SearchingFiles",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/searchingFiles",
            "description": "List of files owned by the user with the provided user ID / username, the subject of the file contains the word provided as search parameter. The API support pagination by specifying the page number using page query parameter and number of file using pagination query parameter. If the pagination parameters are not defined the API will return the first eight files.\n\nThe API will return an a error for the following cases:\n- None of user ID or username are provided.\n- Search parameter not provided.\n- The user with the provided user ID/username is not found in the database.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the list of files owned by the user with the provided user ID in data field, and confirmation message in message field.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "searchFor",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "Page number for pagination",
                    "default": ""
                },
                {
                    "name": "pagination",
                    "type": "STRING",
                    "description": "Number of returned item.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/searchingFiles\"\nquerystring = {\"userId\": \"\", \"username\": \"\", \"page\": \"\", \"pagination\": \"\", \"searchFor\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/searchingFiles\"\nquerystring = {\"userId\": \"\", \"username\": \"\", \"page\": \"\", \"pagination\": \"\", \"searchFor\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "count": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "_id": {
                                                "type": "null"
                                            },
                                            "count": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "transferMultiplewithsqs",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/transferMultiplewithsqs",
            "description": "Transfer multiple files to an other user.\n\nThe API will return an a error for the following cases:\n\nThere is a provided quantity less then 1 .\nThe user with the provided user ID is not found in the database.\nProvided password is incorrect.\nThe user with the provided user ID is not active.\nThe receiver and public key not found in the database.\nThere is  a file with in the provided image ID list  not found in the database.\nThe user is not the owner of the file.\nThe user does not own the provided quantity.\nNot enough found in the wallet.\nIf there is no error, the file will be send to SQS queue where the transaction will be processed.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the image Ids in data field and a confirmation message in the message field.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/transferMultiplewithsqs\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/transferMultiplewithsqs\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "uploadMultFileMultBatchwithsqs",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/uploadMultFileMultBatchwithsqs",
            "description": "Mint multiple files to the polygon blockchain.\n\nThe API will return an a error for the following cases:\n\n- There is a provided quantity less then 1 .\n- Not all images id have quantities.\n- The user with the provided user ID is not found in the database.\n- Provided password is incorrect.\n- The user with the provided user ID is not active.\n- The user with the provided user ID is not owner.\n- There is a file with in the provided image ID list not found in the database.\n- One of the files is either Verified or Queued or Processing.\n- The user is not the owner of one of the files.\n- The user does not own the provided quantity.\n- Not enough found in the wallet.\n- If there is no error, the file will be send to SQS queue where the transaction will be processed.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the image Ids in data field and a confirmation message in the message field.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/uploadMultFileMultBatchwithsqs\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/uploadMultFileMultBatchwithsqs\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "imageId": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Signup",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/signup",
            "description": "Create a new user. A user can have one of the following roles:\n\nOwner : For users that create NFT.\nClient : For users that buy NFT.\nThe API will return an a error for the following cases:\n\nEither first-name, email, password or role is missing.\nEither username or email is duplicated.\nError storing to database.\nIf there is no error, a unique user id and a private key will be generated for the user. The user will be added to the database, and the private key will be stored in encrypted format.\nThe user will be unverified by default. A verification code will be send to the user via email with activation link.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code with the user information except for the private key and password.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "firstName",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "userRole",
                    "type": "STRING",
                    "description": "`owner`  : For users that create NFT.\n\n`client` : For users that buy NFT.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/signup\"\nquerystring = {\"username\": \"\", \"email\": \"\", \"password\": \"\", \"userRole\": \"\", \"firstName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/signup\"\nquerystring = {\"username\": \"\", \"email\": \"\", \"password\": \"\", \"userRole\": \"\", \"firstName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "userRole": {
                                "type": "string"
                            },
                            "amount": {
                                "type": "integer"
                            },
                            "userStatus": {
                                "type": "string"
                            },
                            "store_opening_date": {
                                "type": "string"
                            },
                            "store_ending_date": {
                                "type": "string"
                            },
                            "phoneNumberVerified": {
                                "type": "string"
                            },
                            "twoFacAuthEnabled": {
                                "type": "string"
                            },
                            "isShippingAddressUS": {
                                "type": "boolean"
                            },
                            "_id": {
                                "type": "string"
                            },
                            "firstName": {
                                "type": "string"
                            },
                            "lastName": {
                                "type": "string"
                            },
                            "username": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "verificationCode": {
                                "type": "integer"
                            },
                            "publicKey": {
                                "type": "string"
                            },
                            "createdDate": {
                                "type": "string"
                            },
                            "__v": {
                                "type": "integer"
                            },
                            "id": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "changeForSaleStatus",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/changeForSaleStatus",
            "description": "Change file status to for sale and provide sale price.\n\nThe API will return an error for the following cases:\n- Image Id is not provided.\n- The file with the provided Image ID is not found in the database.\n- The user with the provided user ID is not active.\n- Price is not provided.\n- _forSaleStatus provided value is different from true or false.\n- File is not owned by the user with the provided ID.\n- Database error while updating image information.\n\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the image information in data field and a confirmation message in the message field.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "forSaleStatus",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "imageId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "price",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "validForSaleFrom",
                    "type": "STRING",
                    "description": "eg 2022-01-11T21:17:52.859+00:00",
                    "default": ""
                },
                {
                    "name": "validForSaleUntil",
                    "type": "STRING",
                    "description": "eg 2022-01-11T21:17:52.859+00:00",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/changeForSaleStatus\"\nquerystring = {\"forSaleStatus\": \"\", \"validForSaleFrom\": \"\", \"imageId\": \"\", \"price\": \"\", \"validForSaleUntil\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/changeForSaleStatus\"\nquerystring = {\"forSaleStatus\": \"\", \"validForSaleFrom\": \"\", \"imageId\": \"\", \"price\": \"\", \"validForSaleUntil\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "validUntil": {
                                "type": "string"
                            },
                            "linkedTo": {
                                "type": "string"
                            },
                            "isOwned": {
                                "type": "string"
                            },
                            "events": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "Msg": {
                                            "type": "string"
                                        },
                                        "txHash": {
                                            "type": "string"
                                        },
                                        "date": {
                                            "type": "string"
                                        },
                                        "chainId": {
                                            "type": "string"
                                        },
                                        "contract_address": {
                                            "type": "string"
                                        },
                                        "owner_address": {
                                            "type": "string"
                                        },
                                        "token_id": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            },
                            "imageStatus": {
                                "type": "string"
                            },
                            "forSaleStatus": {
                                "type": "boolean"
                            },
                            "price": {
                                "type": "integer"
                            },
                            "validForSaleFrom": {
                                "type": "string"
                            },
                            "validForSaleUntil": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            "_id": {
                                "type": "string"
                            },
                            "issuerId": {
                                "type": "string"
                            },
                            "ownerId": {
                                "type": "string"
                            },
                            "imageName": {
                                "type": "string"
                            },
                            "imageHash": {
                                "type": "string"
                            },
                            "thumbNail": {
                                "type": "string"
                            },
                            "txHash": {
                                "type": "string"
                            },
                            "category": {
                                "type": "string"
                            },
                            "subject": {
                                "type": "string"
                            },
                            "place": {
                                "type": "string"
                            },
                            "dateofIssue": {
                                "type": "string"
                            },
                            "productionYear": {
                                "type": "string"
                            },
                            "height": {
                                "type": "string"
                            },
                            "width": {
                                "type": "string"
                            },
                            "depth": {
                                "type": "string"
                            },
                            "unit": {
                                "type": "string"
                            },
                            "stockDetails": {
                                "type": "string"
                            },
                            "issuerName": {
                                "type": "string"
                            },
                            "IpfsHash": {
                                "type": "string"
                            },
                            "quantity": {
                                "type": "integer"
                            },
                            "salesquantity": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            },
                            "createdDate": {
                                "type": "string"
                            },
                            "__v": {
                                "type": "integer"
                            },
                            "metaDataIpfsHash": {
                                "type": "string"
                            },
                            "tokenId": {
                                "type": "integer"
                            },
                            "id": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "UploadFile",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/uploadFile",
            "description": "Upload a file to IPFS using pinata and to the aws server.\n\nThe API will return an a error for the following cases: \n-  Quantity is less or equal then zero.\n-  The user with the provided user ID is not found in the database. \n- The user role with the provided user ID  is not owner.\n- File is not uploaded.\n- Error in uploading the file to the server.\n- File is not one of the following formats: JPEG, JPG, PNG, GIF,  mp4 , m4v, mp3.\n- Error in uploading the file to IPFS.\n- Error in uploading the metadata to IPFS.\n\nIf there is no error, the file will be upload to IPFS using pinata along side with metadata: description,  external url, image ipfs hash, name and attributes.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the metadata in data field, the metadata Ipfs Hash in the metadataipfs and the file  Ipfs Hash imageipfs field.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "subject",
                    "type": "STRING",
                    "description": "Title of the NFT",
                    "default": ""
                },
                {
                    "name": "category",
                    "type": "STRING",
                    "description": "Description of the NFT",
                    "default": ""
                },
                {
                    "name": "quantity",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "imageHash",
                    "type": "STRING",
                    "description": "image hash must be calculated externally, otherwise null value is accepted ",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "thumbnail",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "place",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "location",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "team",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "width",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "stockDetails",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "validUntil",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "imageFilename",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "dateofIssue",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "unit",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "height",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "productionYear",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "depth",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "attributes",
                    "type": "ARRAY",
                    "description": "Attributes supported keys are: display_type,  trait_type, value and max_value\n",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/uploadFile\"\nquerystring = {\"thumbnail\": \"\", \"file\": \"\", \"userId\": \"\", \"subject\": \"\", \"category\": \"\", \"quantity\": \"\", \"place\": \"\", \"location\": \"\", \"team\": \"\", \"width\": \"\", \"stockDetails\": \"\", \"validUntil\": \"\", \"imageFilename\": \"\", \"type\": \"\", \"dateofIssue\": \"\", \"unit\": \"\", \"height\": \"\", \"imageHash\": \"\", \"productionYear\": \"\", \"depth\": \"\", \"attributes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/uploadFile\"\nquerystring = {\"thumbnail\": \"\", \"file\": \"\", \"userId\": \"\", \"subject\": \"\", \"category\": \"\", \"quantity\": \"\", \"place\": \"\", \"location\": \"\", \"team\": \"\", \"width\": \"\", \"stockDetails\": \"\", \"validUntil\": \"\", \"imageFilename\": \"\", \"type\": \"\", \"dateofIssue\": \"\", \"unit\": \"\", \"height\": \"\", \"imageHash\": \"\", \"productionYear\": \"\", \"depth\": \"\", \"attributes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "validUntil": {
                                "type": "string"
                            },
                            "linkedTo": {
                                "type": "string"
                            },
                            "isOwned": {
                                "type": "string"
                            },
                            "events": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "Msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "imageStatus": {
                                "type": "string"
                            },
                            "forSaleStatus": {
                                "type": "boolean"
                            },
                            "price": {
                                "type": "integer"
                            },
                            "validForSaleFrom": {
                                "type": "string"
                            },
                            "validForSaleUntil": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            "_id": {
                                "type": "string"
                            },
                            "issuerId": {
                                "type": "string"
                            },
                            "ownerId": {
                                "type": "string"
                            },
                            "imageName": {
                                "type": "string"
                            },
                            "imageHash": {
                                "type": "string"
                            },
                            "thumbNail": {
                                "type": "string"
                            },
                            "txHash": {
                                "type": "string"
                            },
                            "category": {
                                "type": "string"
                            },
                            "subject": {
                                "type": "string"
                            },
                            "place": {
                                "type": "string"
                            },
                            "dateofIssue": {
                                "type": "string"
                            },
                            "productionYear": {
                                "type": "string"
                            },
                            "height": {
                                "type": "string"
                            },
                            "width": {
                                "type": "string"
                            },
                            "depth": {
                                "type": "string"
                            },
                            "unit": {
                                "type": "string"
                            },
                            "stockDetails": {
                                "type": "string"
                            },
                            "issuerName": {
                                "type": "string"
                            },
                            "IpfsHash": {
                                "type": "string"
                            },
                            "quantity": {
                                "type": "integer"
                            },
                            "salesquantity": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            },
                            "createdDate": {
                                "type": "string"
                            },
                            "__v": {
                                "type": "integer"
                            },
                            "id": {
                                "type": "string"
                            }
                        }
                    },
                    "metadataipfs": {
                        "type": "string"
                    },
                    "imageipfs": {
                        "type": "string"
                    }
                }
            }
        },
        {
            "name": "GetFileById",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/getFilesById",
            "description": "Shows the details of the file/NFT  with the provided id such as name or other description.\n\nThe API will return an a error for the following cases:\n- No file with the provided image id found in the database.\n- Database error while looking for the file.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the file information details in data field and organization id in org_ownerId field.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/getFilesById\"\nquerystring = {\"imageId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/getFilesById\"\nquerystring = {\"imageId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "UploadFileIntoBlockchainwithSQS",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/uploadFileIntoBlockchainwithsqs",
            "description": "Mint a single NFT to polygon blockchain.\n\nThe API will return an a error for the following cases:\n\n\nThe user with the provided user ID is not found in the database.\nThe user with the provided user ID is not owner.\nThe user with the provided user ID is not active.\nThe file with the provided image ID is not found in the database.\nThe user is not the owner of the file.\nFile is either Verified or Queued or Processing.\nNot enough found in the wallet.\nIf there is no error, the file will be send to SQS queue where the transaction will be processed.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the image Id in data field and a confirmation message in the message field.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/uploadFileIntoBlockchainwithsqs\"\nquerystring = {\"imageId\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/uploadFileIntoBlockchainwithsqs\"\nquerystring = {\"imageId\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "imageId": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "setUsername",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/setUsername",
            "description": "Change current username. An error will occur if:\n- No username is provided.\n- The new username equal the old username.\n- The new username already exist.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/setUsername\"\nquerystring = {\"userId\": \"\", \"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/setUsername\"\nquerystring = {\"userId\": \"\", \"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "CheckUsername",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/check-username",
            "description": "Check if the provided username already exist in the database.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/check-username\"\nquerystring = {\"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/check-username\"\nquerystring = {\"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "ChangeDetails",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/changeDetails",
            "description": "Update user profile: first name, last name or/and organization name.\n\nThe API will return an a error for the following cases:\n\nUser ID is not provided.\nThe user with the specified user ID is not found in the database.\nDatabase error while updating profile.\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code and a confirmation message.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "lastName",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "firstName",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "organizationName",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/changeDetails\"\nquerystring = {\"userId\": \"\", \"lastName\": \"\", \"firstName\": \"\", \"organizationName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/changeDetails\"\nquerystring = {\"userId\": \"\", \"lastName\": \"\", \"firstName\": \"\", \"organizationName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "ForgotPassword",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/forgotPassword",
            "description": "Send reset token via email to change password .\n\nThe API will return an a error for the following cases:\n\nEmail is not provided.\nThe user with the specified email is not found in the database.\nIf there is no error a reset token will be send via email.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code and a confirmation message.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "emailId",
                    "type": "STRING",
                    "description": "user email",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/forgotPassword\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/forgotPassword\"\nquerystring = {\"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "ConfirmVerificationCode",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/confirm-verification-code",
            "description": "Confirm that user have the correct verification code .\n\nThe API will return an a error for the following cases:\n\nThe user with the specified user ID is not found in the database.\nThe specified code does not match the verification code stored in the database.\nIf there is no error, the user status will be update from unverified to verified.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code with a confirmation message.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "code",
                    "type": "STRING",
                    "description": "The verification code received by email.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/confirm-verification-code\"\nquerystring = {\"userId\": \"\", \"code\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/confirm-verification-code\"\nquerystring = {\"userId\": \"\", \"code\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateProfile",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/updateProfile",
            "description": "Update marketplace information including: title, description, contract information, banner details, store details, store opening and ending date.\n\nThe API will return an error for the following cases:\n\nUser ID, is not provided.\nUser with the provided id not found in the database.\nLogo or banner is not one of the following formats: JPEG, JPG, PNG, GIF, mp4 , m4v, mp3.\nError saving to the database.\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code with a confirmation message.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "store_ending_date",
                    "type": "STRING",
                    "description": "",
                    "default": "2021-12-03T09:14:00.813+00:00"
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "store_details",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "banner_details",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "contact",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "store_opening_date",
                    "type": "STRING",
                    "description": "",
                    "default": "2021-12-03T09:14:00.813+00:00"
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/updateProfile\"\nquerystring = {\"userId\": \"\", \"store_ending_date\": \"2021-12-03T09:14:00.813+00:00\", \"description\": \"\", \"store_details\": \"\", \"banner_details\": \"\", \"contact\": \"\", \"store_opening_date\": \"2021-12-03T09:14:00.813+00:00\", \"title\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/updateProfile\"\nquerystring = {\"userId\": \"\", \"store_ending_date\": \"2021-12-03T09:14:00.813+00:00\", \"description\": \"\", \"store_details\": \"\", \"banner_details\": \"\", \"contact\": \"\", \"store_opening_date\": \"2021-12-03T09:14:00.813+00:00\", \"title\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "null"
                    }
                }
            }
        },
        {
            "name": "updateEmail",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/updateEmail",
            "description": "Update the email of the user with the provided id.\n\nThe API will return an error for the following cases:\n\nUser ID, new email or password are not provided.\nThe user with the provided user ID is not found in the database.\nEmail already exist.\nDatabase error while updating email.\nIf there is no error, the email will be update. The user status is inactive. A verification code will be send via email.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code with a confirmation message.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "newemail",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "newemail",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/updateEmail\"\nquerystring = {\"newemail\": \"\", \"userId\": \"\", \"password\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/updateEmail\"\nquerystring = {\"newemail\": \"\", \"userId\": \"\", \"password\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "ChangePassword",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/changePassword",
            "description": "Update password, user ID and old password must be provided.\n\nThe API will return an a error for the following cases:\n\nUser ID is not provided.\nThe user with the specified user ID is not found in the database.\nOld password does not match the existing one.\nDatabase error while updating the password.\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code and a confirmation message.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "oldPass",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "newPass",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/changePassword\"\nquerystring = {\"oldPass\": \"\", \"userId\": \"\", \"newPass\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/changePassword\"\nquerystring = {\"oldPass\": \"\", \"userId\": \"\", \"newPass\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "ResetPassword",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/resetPassword",
            "description": "Change password with the provided one after confirming reset token received via email .\n\nThe API will return an a error for the following cases:\n\nReset token is not provided.\nReset token is not valid.\nReset token is expired.\nDatabase error while updating the password.\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code and a confirmation message.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "rtoken",
                    "type": "STRING",
                    "description": "Reset token received via email",
                    "default": ""
                },
                {
                    "name": "upass",
                    "type": "STRING",
                    "description": "new password",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/resetPassword\"\nquerystring = {\"rtoken\": \"\", \"upass\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/resetPassword\"\nquerystring = {\"rtoken\": \"\", \"upass\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "login",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/login",
            "description": "Login a user by email and password.\n\nThe API will return an a error for the following cases:\n\nEmail or password are not provided.\nThe user with the specified email is not found in the database.\nEmail not verified.\nProvided password hash does not match the one stored in the database.\nError storing the the user session code to database.\nIf there is no error, a new JWT token will be generated. The user session will be either updated or created in the database with the following information:\n\nHeaders referer.\nRequest url.\nUser IP address.\nUser agent.\nBrowser name.\nBrowser version.\nOperator System.\nUser ID.\nLogin time.\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code the JWT token in token field and the user information expect for private key and password in the data field.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/login\"\nquerystring = {\"email\": \"\", \"password\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/login\"\nquerystring = {\"email\": \"\", \"password\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "userRole": {
                                "type": "string"
                            },
                            "amount": {
                                "type": "integer"
                            },
                            "userStatus": {
                                "type": "string"
                            },
                            "store_opening_date": {
                                "type": "string"
                            },
                            "store_ending_date": {
                                "type": "string"
                            },
                            "phoneNumberVerified": {
                                "type": "string"
                            },
                            "twoFacAuthEnabled": {
                                "type": "string"
                            },
                            "isShippingAddressUS": {
                                "type": "boolean"
                            },
                            "_id": {
                                "type": "string"
                            },
                            "firstName": {
                                "type": "string"
                            },
                            "lastName": {
                                "type": "string"
                            },
                            "username": {
                                "type": "string"
                            },
                            "organizationName": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "verificationCode": {
                                "type": "integer"
                            },
                            "publicKey": {
                                "type": "string"
                            },
                            "createdDate": {
                                "type": "string"
                            },
                            "__v": {
                                "type": "integer"
                            },
                            "emailVerifiedAt": {
                                "type": "string"
                            },
                            "banner": {
                                "type": "string"
                            },
                            "banner_details": {
                                "type": "string"
                            },
                            "contact": {
                                "type": "string"
                            },
                            "logo": {
                                "type": "string"
                            },
                            "store_details": {
                                "type": "string"
                            },
                            "title": {
                                "type": "string"
                            },
                            "metamaskPublickey": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "NewSignup",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/NewSignup",
            "description": "Create a new user with password generation. A user can have one of the following roles:\n\nOwner : For users that create NFT.\nClient : For users that buy NFT.\nThe API will return an a error for the following cases:\n\nEither first-name, email, password or role is missing.\nEither username or email is duplicated.\nError storing to database.\nIf there is no error, a unique user id and a private key and password will be generated for the user. The user will be added to the database, and the private key will be stored in encrypted format and password in hashed format.\nThe user will be unverified by default. A verification code will be send to the user via email with activation link.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code with the user information except for the private key and password.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userRole",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "firstName",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "orgName",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "phonNumber",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "lastName",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/NewSignup\"\nquerystring = {\"userRole\": \"\", \"orgName\": \"\", \"phonNumber\": \"\", \"firstName\": \"\", \"email\": \"\", \"lastName\": \"\", \"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/NewSignup\"\nquerystring = {\"userRole\": \"\", \"orgName\": \"\", \"phonNumber\": \"\", \"firstName\": \"\", \"email\": \"\", \"lastName\": \"\", \"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "transferSinglewithsqs",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/transferSinglewithsqs",
            "description": "Transfer a file to an other user.\n\nThe API will return an a error for the following cases:\n\nProvided quantity is less then 1.\nThe user with the provided user ID is not found in the database.\nProvided password is incorrect.\nThe user with the provided user ID is not active.\nThe receiver and public key not found in the database.\nThe file with the provided image ID is not found in the database.\nThe user is not the owner of the file.\nThe user does not own the provided quantity.\nNot enough found in the wallet.\nIf there is no error, the file will be send to SQS queue where the transaction will be processed.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the image Id in data field and a confirmation message in the message field.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "receiverId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "imageId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "quantity",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/transferSinglewithsqs\"\nquerystring = {\"password\": \"\", \"userId\": \"\", \"receiverId\": \"\", \"imageId\": \"\", \"quantity\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/transferSinglewithsqs\"\nquerystring = {\"password\": \"\", \"userId\": \"\", \"receiverId\": \"\", \"imageId\": \"\", \"quantity\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "GetFilesByUserId40",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/getFilesByuserId40",
            "description": "List of files owned by the  user with the provided user ID (collection) . The API support pagination by specifying the page number using page query parameter and number of file using  pagination query parameter. If the pagination parameters are not defined the API will return the first Forty files.\n\nThe API will return an a error for the following cases: \n-  The user with the provided user ID is not found in the database. \n-  The file with the provided image ID and owned by the provided user ID is not found in the database. \n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the list of files owned by the user with the provided user ID  in data field, and the total number of files in totalCert field.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/getFilesByuserId40\"\nquerystring = {\"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/getFilesByuserId40\"\nquerystring = {\"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "GetFilesByUserId",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/getFilesByuserId",
            "description": "List of files owned by the  user with the provided user ID. The API support pagination by specifying the page number using page query parameter and number of file using  pagination query parameter. If the pagination parameters are not defined the API will return the first eight files.\n\nThe API will return an a error for the following cases: \n-  The user with the provided user ID is not found in the database. \n-  The file with the provided image ID and owned by the provided user ID is not found in the database. \n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the list of files owned by the user with the provided user ID  in data field, and the total number of files in totalCert field.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "Page number for pagination.",
                    "default": ""
                },
                {
                    "name": "pagination",
                    "type": "STRING",
                    "description": "Maximum number of file to return for pagination",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/getFilesByuserId\"\nquerystring = {\"userId\": \"\", \"page\": \"\", \"pagination\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/getFilesByuserId\"\nquerystring = {\"userId\": \"\", \"page\": \"\", \"pagination\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "org_ownerId": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "validUntil": {
                                "type": "string"
                            },
                            "linkedTo": {
                                "type": "string"
                            },
                            "isOwned": {
                                "type": "string"
                            },
                            "events": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            "imageStatus": {
                                "type": "string"
                            },
                            "forSaleStatus": {
                                "type": "boolean"
                            },
                            "price": {
                                "type": "integer"
                            },
                            "validForSaleFrom": {
                                "type": "string"
                            },
                            "validForSaleUntil": {
                                "type": "string"
                            },
                            "attributes": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            "_id": {
                                "type": "string"
                            },
                            "issuerId": {
                                "type": "string"
                            },
                            "ownerId": {
                                "type": "string"
                            },
                            "imageName": {
                                "type": "string"
                            },
                            "imageHash": {
                                "type": "string"
                            },
                            "thumbNail": {
                                "type": "string"
                            },
                            "txHash": {
                                "type": "string"
                            },
                            "category": {
                                "type": "string"
                            },
                            "subject": {
                                "type": "string"
                            },
                            "place": {
                                "type": "string"
                            },
                            "dateofIssue": {
                                "type": "string"
                            },
                            "productionYear": {
                                "type": "string"
                            },
                            "height": {
                                "type": "string"
                            },
                            "width": {
                                "type": "string"
                            },
                            "depth": {
                                "type": "string"
                            },
                            "unit": {
                                "type": "string"
                            },
                            "stockDetails": {
                                "type": "string"
                            },
                            "issuerName": {
                                "type": "string"
                            },
                            "IpfsHash": {
                                "type": "string"
                            },
                            "quantity": {
                                "type": "integer"
                            },
                            "salesquantity": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            },
                            "createdDate": {
                                "type": "string"
                            },
                            "__v": {
                                "type": "integer"
                            },
                            "metaDataIpfsHash": {
                                "type": "string"
                            },
                            "tokenId": {
                                "type": "integer"
                            },
                            "id": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "updateMetamaskKey",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/updateMetamaskKey",
            "description": "Update metamask public key.\n\nThe API will return an error for the following cases:\n-The user with the provided user ID is not found in the database.\nThe provided password is incorrect.\n- Database error while storing the public key.\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code with confirmation message.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "publicKey",
                    "type": "STRING",
                    "description": "Metamask public key",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/updateMetamaskKey\"\nquerystring = {\"userId\": \"\", \"publicKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/updateMetamaskKey\"\nquerystring = {\"userId\": \"\", \"publicKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getuserPrivateKeybyPwd",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/getuserPrivateKeybyPwd",
            "description": "Get User Private Key by providing password.\n\nThe API will return an error for the following cases:\n- The user with the provided user ID is not found in the database.\n- The provided password is incorrect. \n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code and the private key in the data field.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/getuserPrivateKeybyPwd\"\nquerystring = {\"userId\": \"\", \"password\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/getuserPrivateKeybyPwd\"\nquerystring = {\"userId\": \"\", \"password\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "data": {
                        "type": "string"
                    }
                }
            }
        },
        {
            "name": "validateDiscountCode",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/validateDiscountCode",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "discountCode",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/validateDiscountCode\"\nquerystring = {\"discountCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/validateDiscountCode\"\nquerystring = {\"discountCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "SearchFiles",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/searchFiles",
            "description": "List of files owned by the user with the provided user ID / orgID and where txHash, subject,  placeOfIssue and/or dateOfIssue match the provided  . The API support pagination by specifying the page number using page query parameter and number of file using pagination query parameter. If the pagination parameters are not defined the API will return the first eight files.\n\nThe API will return an a error for the following cases:\n- No search parameter is provided.\n- The user with the provided user ID/username is not found in the database.\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the list of files owned by the user with the provided user ID in data field, and confirmation message in message field.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "txHash",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "docId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "orgName",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "subject",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "orgId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/searchFiles\"\nquerystring = {\"txHash\": \"\", \"docId\": \"\", \"orgName\": \"\", \"subject\": \"\", \"orgId\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/searchFiles\"\nquerystring = {\"txHash\": \"\", \"docId\": \"\", \"orgName\": \"\", \"subject\": \"\", \"orgId\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getWalletTxs",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/getWalletTxs",
            "description": "List of transactions made to add money to wallet by the provided user ID. The API support pagination by specifying the page number using page query parameter and number of file using  pagination query parameter. If the pagination parameters are not defined the API will return the first eight files.\n\nThe API will return an a error for the following cases: \n-  The user with the provided user ID is not found in the database. \n\n\nIn case of error the API will return 400 status code with a detailed message.\nIn case of success the API will return 200 status code, the list of transactions   in data field, and the total number of transactions in count field.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/getWalletTxs\"\nquerystring = {\"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/getWalletTxs\"\nquerystring = {\"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "genDiscountCode",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/genDiscountCode",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "expiryDate",
                    "type": "STRING",
                    "description": "eg 2023-01-11T21:17:52.859+00:00",
                    "default": ""
                },
                {
                    "name": "discountName",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "discountPercentage",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/genDiscountCode\"\nquerystring = {\"expiryDate\": \"\", \"userId\": \"\", \"discountName\": \"\", \"discountPercentage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/genDiscountCode\"\nquerystring = {\"expiryDate\": \"\", \"userId\": \"\", \"discountName\": \"\", \"discountPercentage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "validatePromoCode",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/validatePromoCode",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "PromoCode",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/validatePromoCode\"\nquerystring = {\"PromoCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/validatePromoCode\"\nquerystring = {\"PromoCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "sendPromotionmails",
            "url": "https://chaincerts1.p.rapidapi.com/api/users/sendPromotionmails",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "subject",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "messagebody",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "eg 2020-01-11",
                    "default": ""
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "eg 2022-01-11",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/sendPromotionmails\"\nquerystring = {\"subject\": \"\", \"messagebody\": \"\", \"from\": \"\", \"to\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaincerts1.p.rapidapi.com/api/users/sendPromotionmails\"\nquerystring = {\"subject\": \"\", \"messagebody\": \"\", \"from\": \"\", \"to\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaincerts1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        }
    ]
}