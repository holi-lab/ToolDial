{
    "product_id": "661",
    "tool_description": "Best Buy is a leading provider of technology products, services and solutions.",
    "home_url": "https://rapidapi.com/raygorodskij/api/BestBuy/",
    "name": "BestBuy",
    "title": "BestBuy",
    "pricing": "FREE",
    "tool_name": "BestBuy",
    "score": {
        "avgServiceLevel": 0,
        "avgLatency": 127256,
        "avgSuccessRate": 0,
        "popularityScore": 1,
        "__typename": "Score"
    },
    "host": "BestBuyraygorodskijV1.p.rapidapi.com",
    "api_list": [
        {
            "name": "getAllCategories",
            "url": "https://BestBuyraygorodskijV1.p.rapidapi.com/getAllCategories",
            "description": "The query to the right will return all the Best Buy product categories. Query is filtered to show only ids.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key that you received from BestBuy.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "facetsQuery",
                    "type": "NUMBER",
                    "description": "You can retrieve summary information about the items that are returned by your query by using the facets query parameter.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "By default, we include 10 results per page, but you can ask for up to 100 per page by making use of the `pageSize` parameter. ",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "You can specify the way in which you\u2019d like to have the results sorted by one or more attribute value(s).`attribute.asc` - Sort the results in ascending order of the specified attribute. `attribute.dsc` - Sort the results in descending order of the specified attribute. `attribute.desc` - Sort the results in descending order of the specified attribute.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Use the `page` parameter to choose which page of results you\u2019d like returned.",
                    "default": ""
                },
                {
                    "name": "facetsNumber",
                    "type": "NUMBER",
                    "description": "Facets number.Required if use facetsQuery.",
                    "default": ""
                },
                {
                    "name": "returnedFields",
                    "type": "STRING",
                    "description": "The show attribute allows you to control which attributes are returned.To return all attributes `all`.",
                    "default": ""
                },
                {
                    "name": "cursorMask",
                    "type": "STRING",
                    "description": "With large result sets - e.g., query sets with more than 10 pages of results - we recommend you use the cursorMark parameter to walk through your results. You can use cursorMark to walk through the full product or store catalog, deltas since you last queried for active products, or any other query result. The cursorMark works a lot like a bookmark, keeping track of what subset of items are currently shown in your result set and how to get to the next subset of items.To use the cursorMark with your result set, add cursorMark=* to your query parameters.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://BestBuyraygorodskijV1.p.rapidapi.com/getAllCategories\"\nquerystring = {\"apiKey\": \"\", \"facetsQuery\": \"\", \"pageSize\": \"\", \"sort\": \"\", \"page\": \"\", \"facetsNumber\": \"\", \"returnedFields\": \"\", \"cursorMask\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"BestBuyraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://BestBuyraygorodskijV1.p.rapidapi.com/getAllCategories\"\nquerystring = {\"apiKey\": \"\", \"facetsQuery\": \"\", \"pageSize\": \"\", \"sort\": \"\", \"page\": \"\", \"facetsNumber\": \"\", \"returnedFields\": \"\", \"cursorMask\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"BestBuyraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAllOpenBox",
            "url": "https://BestBuyraygorodskijV1.p.rapidapi.com/getAllOpenBox",
            "description": "The endpoint will return any available Open Box offers.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key that you received from BestBuy.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "By default, we include 10 results per page, but you can ask for up to 100 per page by making use of the `pageSize` parameter. ",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Use the `page` parameter to choose which page of results you\u2019d like returned.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://BestBuyraygorodskijV1.p.rapidapi.com/getAllOpenBox\"\nquerystring = {\"pageSize\": \"\", \"apiKey\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"BestBuyraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://BestBuyraygorodskijV1.p.rapidapi.com/getAllOpenBox\"\nquerystring = {\"pageSize\": \"\", \"apiKey\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"BestBuyraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAlsoViewedProduct",
            "url": "https://BestBuyraygorodskijV1.p.rapidapi.com/getAlsoViewedProduct",
            "description": "The Also Viewed Products endpoint can be used to identify top ten products that were viewed along with the originating product. These results are determined based on aggregated customer browsing behavior over the past thirty days on BESTBUY.COM.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key that you received from BestBuy.",
                    "default": ""
                },
                {
                    "name": "SKU",
                    "type": "STRING",
                    "description": "Product SKU.Example - 6139532.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Use the `page` parameter to choose which page of results you\u2019d like returned.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "By default, we include 10 results per page, but you can ask for up to 100 per page by making use of the `pageSize` parameter. ",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://BestBuyraygorodskijV1.p.rapidapi.com/getAlsoViewedProduct\"\nquerystring = {\"page\": \"\", \"pageSize\": \"\", \"apiKey\": \"\", \"SKU\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"BestBuyraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://BestBuyraygorodskijV1.p.rapidapi.com/getAlsoViewedProduct\"\nquerystring = {\"page\": \"\", \"pageSize\": \"\", \"apiKey\": \"\", \"SKU\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"BestBuyraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCategoriesById",
            "url": "https://BestBuyraygorodskijV1.p.rapidapi.com/getCategoriesById",
            "description": "The following query will return the category path for the category id specified in the input.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "categoryId",
                    "type": "STRING",
                    "description": "Category id.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key that you received from BestBuy.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "By default, we include 10 results per page, but you can ask for up to 100 per page by making use of the `pageSize` parameter. ",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "You can specify the way in which you\u2019d like to have the results sorted by one or more attribute value(s).`attribute.asc` - Sort the results in ascending order of the specified attribute. `attribute.dsc` - Sort the results in descending order of the specified attribute. `attribute.desc` - Sort the results in descending order of the specified attribute.",
                    "default": ""
                },
                {
                    "name": "facetsQuery",
                    "type": "NUMBER",
                    "description": "You can retrieve summary information about the items that are returned by your query by using the facets query parameter.",
                    "default": ""
                },
                {
                    "name": "returnedFields",
                    "type": "STRING",
                    "description": "The show attribute allows you to control which attributes are returned.To return all attributes `all`.",
                    "default": ""
                },
                {
                    "name": "cursorMask",
                    "type": "STRING",
                    "description": "With large result sets - e.g., query sets with more than 10 pages of results - we recommend you use the cursorMark parameter to walk through your results. You can use cursorMark to walk through the full product or store catalog, deltas since you last queried for active products, or any other query result. The cursorMark works a lot like a bookmark, keeping track of what subset of items are currently shown in your result set and how to get to the next subset of items.To use the cursorMark with your result set, add cursorMark=* to your query parameters.",
                    "default": ""
                },
                {
                    "name": "facetsNumber",
                    "type": "NUMBER",
                    "description": "Facets number.Required if use facetsQuery.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Use the `page` parameter to choose which page of results you\u2019d like returned.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://BestBuyraygorodskijV1.p.rapidapi.com/getCategoriesById\"\nquerystring = {\"pageSize\": \"\", \"sort\": \"\", \"categoryId\": \"\", \"facetsQuery\": \"\", \"returnedFields\": \"\", \"cursorMask\": \"\", \"facetsNumber\": \"\", \"apiKey\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"BestBuyraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://BestBuyraygorodskijV1.p.rapidapi.com/getCategoriesById\"\nquerystring = {\"pageSize\": \"\", \"sort\": \"\", \"categoryId\": \"\", \"facetsQuery\": \"\", \"returnedFields\": \"\", \"cursorMask\": \"\", \"facetsNumber\": \"\", \"apiKey\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"BestBuyraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCategoriesByName",
            "url": "https://BestBuyraygorodskijV1.p.rapidapi.com/getCategoriesByName",
            "description": "The following query will return the category path for the category name specified in the input.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "categoryName",
                    "type": "STRING",
                    "description": "Category name.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key that you received from BestBuy.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "By default, we include 10 results per page, but you can ask for up to 100 per page by making use of the `pageSize` parameter. ",
                    "default": ""
                },
                {
                    "name": "facetsQuery",
                    "type": "NUMBER",
                    "description": "You can retrieve summary information about the items that are returned by your query by using the facets query parameter.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "You can specify the way in which you\u2019d like to have the results sorted by one or more attribute value(s).`attribute.asc` - Sort the results in ascending order of the specified attribute. `attribute.dsc` - Sort the results in descending order of the specified attribute. `attribute.desc` - Sort the results in descending order of the specified attribute.",
                    "default": ""
                },
                {
                    "name": "returnedFields",
                    "type": "STRING",
                    "description": "The show attribute allows you to control which attributes are returned.To return all attributes `all`.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Use the `page` parameter to choose which page of results you\u2019d like returned.",
                    "default": ""
                },
                {
                    "name": "facetsNumber",
                    "type": "NUMBER",
                    "description": "Facets number.Required if use facetsQuery.",
                    "default": ""
                },
                {
                    "name": "cursorMask",
                    "type": "STRING",
                    "description": "With large result sets - e.g., query sets with more than 10 pages of results - we recommend you use the cursorMark parameter to walk through your results. You can use cursorMark to walk through the full product or store catalog, deltas since you last queried for active products, or any other query result. The cursorMark works a lot like a bookmark, keeping track of what subset of items are currently shown in your result set and how to get to the next subset of items.To use the cursorMark with your result set, add cursorMark=* to your query parameters.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://BestBuyraygorodskijV1.p.rapidapi.com/getCategoriesByName\"\nquerystring = {\"categoryName\": \"\", \"pageSize\": \"\", \"facetsQuery\": \"\", \"sort\": \"\", \"returnedFields\": \"\", \"page\": \"\", \"facetsNumber\": \"\", \"apiKey\": \"\", \"cursorMask\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"BestBuyraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://BestBuyraygorodskijV1.p.rapidapi.com/getCategoriesByName\"\nquerystring = {\"categoryName\": \"\", \"pageSize\": \"\", \"facetsQuery\": \"\", \"sort\": \"\", \"returnedFields\": \"\", \"page\": \"\", \"facetsNumber\": \"\", \"apiKey\": \"\", \"cursorMask\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"BestBuyraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPopularViewedProductsByCategoryId",
            "url": "https://BestBuyraygorodskijV1.p.rapidapi.com/getPopularViewedProductsByCategoryId",
            "description": "The Most Popular Viewed endpoint returns the top ten products, by rank, of the most frequently viewed products on BESTBUY.COM. You can also pull this same information by category or subcategory. To find out additional information about identifying category ids please refer to our Categories API documentation. This data for Most Popular Viewed is refreshed every two hours with a maximum accumulation time of 48 hours when determining the top ten products.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key that you received from BestBuy.",
                    "default": ""
                },
                {
                    "name": "categoryId",
                    "type": "STRING",
                    "description": "Category Id.Example - abcat0400000.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "By default, we include 10 results per page, but you can ask for up to 100 per page by making use of the `pageSize` parameter. ",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Use the `page` parameter to choose which page of results you\u2019d like returned.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://BestBuyraygorodskijV1.p.rapidapi.com/getPopularViewedProductsByCategoryId\"\nquerystring = {\"pageSize\": \"\", \"apiKey\": \"\", \"page\": \"\", \"categoryId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"BestBuyraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://BestBuyraygorodskijV1.p.rapidapi.com/getPopularViewedProductsByCategoryId\"\nquerystring = {\"pageSize\": \"\", \"apiKey\": \"\", \"page\": \"\", \"categoryId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"BestBuyraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getProductBySearchQuery",
            "url": "https://BestBuyraygorodskijV1.p.rapidapi.com/getProductBySearchQuery",
            "description": "The Products API gives you access to the full Best Buy catalog.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "searchQuery",
                    "type": "STRING",
                    "description": "Search consists of one or more terms that generally include an attribute, operator and value. Terms are combined with ampersands & or pipes |. Searches are implemented as part of an HTTP GET request to the deisred Best Buy API. term1&term2 - specifies term1 AND term2 term1|term2 - specifies term1 OR term2.Example - `customerReviewCount=5&dollarSavings=10.99&(categoryPath.id=pcmcat310200050004)`.More information in readme.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key that you received from BestBuy.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "facetsNumber",
                    "type": "NUMBER",
                    "description": "Facets number.Required if use facetsQuery.",
                    "default": ""
                },
                {
                    "name": "cursorMask",
                    "type": "STRING",
                    "description": "With large result sets - e.g., query sets with more than 10 pages of results - we recommend you use the cursorMark parameter to walk through your results. You can use cursorMark to walk through the full product or store catalog, deltas since you last queried for active products, or any other query result. The cursorMark works a lot like a bookmark, keeping track of what subset of items are currently shown in your result set and how to get to the next subset of items.To use the cursorMark with your result set, add cursorMark=* to your query parameters.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Use the `page` parameter to choose which page of results you\u2019d like returned.",
                    "default": ""
                },
                {
                    "name": "facetsQuery",
                    "type": "NUMBER",
                    "description": "You can retrieve summary information about the items that are returned by your query by using the facets query parameter.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "You can specify the way in which you\u2019d like to have the results sorted by one or more attribute value(s).`attribute.asc` - Sort the results in ascending order of the specified attribute. `attribute.dsc` - Sort the results in descending order of the specified attribute. `attribute.desc` - Sort the results in descending order of the specified attribute.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "By default, we include 10 results per page, but you can ask for up to 100 per page by making use of the `pageSize` parameter. ",
                    "default": ""
                },
                {
                    "name": "returnedFields",
                    "type": "STRING",
                    "description": "The show attribute allows you to control which attributes are returned.To return all attributes `all`.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://BestBuyraygorodskijV1.p.rapidapi.com/getProductBySearchQuery\"\nquerystring = {\"searchQuery\": \"\", \"facetsNumber\": \"\", \"apiKey\": \"\", \"cursorMask\": \"\", \"page\": \"\", \"facetsQuery\": \"\", \"sort\": \"\", \"pageSize\": \"\", \"returnedFields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"BestBuyraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://BestBuyraygorodskijV1.p.rapidapi.com/getProductBySearchQuery\"\nquerystring = {\"searchQuery\": \"\", \"facetsNumber\": \"\", \"apiKey\": \"\", \"cursorMask\": \"\", \"page\": \"\", \"facetsQuery\": \"\", \"sort\": \"\", \"pageSize\": \"\", \"returnedFields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"BestBuyraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getStoresBySearchQuery",
            "url": "https://BestBuyraygorodskijV1.p.rapidapi.com/getStoresBySearchQuery",
            "description": "The Best Buy Stores API provides store information for all Best Buy stores in the United States and Puerto Rico. This information includes address, location, hours and services offered.In addition, store availability of a product can be determined by querying the Products API together with the Stores API. Refer to In Store Availability for more information on these type of queries.See more in readme.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key that you received from BestBuy.",
                    "default": ""
                },
                {
                    "name": "searchQuery",
                    "type": "STRING",
                    "description": "Search consists of one or more terms that generally include an attribute, operator and value. Terms are combined with ampersands & or pipes |. Searches are implemented as part of an HTTP GET request to the deisred Best Buy API. term1&term2 - specifies term1 AND term2 term1|term2 - specifies term1 OR term2.Example - `(city=New-York)&((storeType=warehouse sale))&((services.service=\"car & gps installation services\"))`.More information in readme.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "returnedFields",
                    "type": "STRING",
                    "description": "The show attribute allows you to control which attributes are returned.To return all attributes `all`.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Use the `page` parameter to choose which page of results you\u2019d like returned.",
                    "default": ""
                },
                {
                    "name": "cursorMask",
                    "type": "STRING",
                    "description": "With large result sets - e.g., query sets with more than 10 pages of results - we recommend you use the cursorMark parameter to walk through your results. You can use cursorMark to walk through the full product or store catalog, deltas since you last queried for active products, or any other query result. The cursorMark works a lot like a bookmark, keeping track of what subset of items are currently shown in your result set and how to get to the next subset of items.To use the cursorMark with your result set, add cursorMark=* to your query parameters.",
                    "default": ""
                },
                {
                    "name": "facetsNumber",
                    "type": "NUMBER",
                    "description": "Facets number.Required if use facetsQuery.",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "You can specify the way in which you\u2019d like to have the results sorted by one or more attribute value(s).`attribute.asc` - Sort the results in ascending order of the specified attribute. `attribute.dsc` - Sort the results in descending order of the specified attribute. `attribute.desc` - Sort the results in descending order of the specified attribute.",
                    "default": ""
                },
                {
                    "name": "facetsQuery",
                    "type": "NUMBER",
                    "description": "You can retrieve summary information about the items that are returned by your query by using the facets query parameter.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "By default, we include 10 results per page, but you can ask for up to 100 per page by making use of the `pageSize` parameter. ",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://BestBuyraygorodskijV1.p.rapidapi.com/getStoresBySearchQuery\"\nquerystring = {\"returnedFields\": \"\", \"apiKey\": \"\", \"page\": \"\", \"cursorMask\": \"\", \"facetsNumber\": \"\", \"sort\": \"\", \"searchQuery\": \"\", \"facetsQuery\": \"\", \"pageSize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"BestBuyraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://BestBuyraygorodskijV1.p.rapidapi.com/getStoresBySearchQuery\"\nquerystring = {\"returnedFields\": \"\", \"apiKey\": \"\", \"page\": \"\", \"cursorMask\": \"\", \"facetsNumber\": \"\", \"sort\": \"\", \"searchQuery\": \"\", \"facetsQuery\": \"\", \"pageSize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"BestBuyraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getTrendingProductsByCategoryId",
            "url": "https://BestBuyraygorodskijV1.p.rapidapi.com/getTrendingProductsByCategoryId",
            "description": "The Trending Products endpoint returns top ten products, by rank, based on customer views of the BESTBUY.COM product detail page over a rolling three hour time period. Trending growth is based on a comparison against the previous three hour time period.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "categoryId",
                    "type": "STRING",
                    "description": "Category Id.Example - abcat0400000.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key that you received from BestBuy.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Use the `page` parameter to choose which page of results you\u2019d like returned.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "By default, we include 10 results per page, but you can ask for up to 100 per page by making use of the `pageSize` parameter. ",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://BestBuyraygorodskijV1.p.rapidapi.com/getTrendingProductsByCategoryId\"\nquerystring = {\"page\": \"\", \"categoryId\": \"\", \"apiKey\": \"\", \"pageSize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"BestBuyraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://BestBuyraygorodskijV1.p.rapidapi.com/getTrendingProductsByCategoryId\"\nquerystring = {\"page\": \"\", \"categoryId\": \"\", \"apiKey\": \"\", \"pageSize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"BestBuyraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "openBoxByCategory",
            "url": "https://BestBuyraygorodskijV1.p.rapidapi.com/openBoxByCategory",
            "description": "The Open Box by Category endpoint allows you to query all Open Box offers associated with the SKUs in the requested category. If there are no Open Box offers available, the query will return a HTTP 200 response code with an empty result set.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "categoryId",
                    "type": "STRING",
                    "description": "Category Id.Example - abcat0400000.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key that you received from BestBuy.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Use the `page` parameter to choose which page of results you\u2019d like returned.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "By default, we include 10 results per page, but you can ask for up to 100 per page by making use of the `pageSize` parameter. ",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://BestBuyraygorodskijV1.p.rapidapi.com/openBoxByCategory\"\nquerystring = {\"page\": \"\", \"categoryId\": \"\", \"apiKey\": \"\", \"pageSize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"BestBuyraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://BestBuyraygorodskijV1.p.rapidapi.com/openBoxByCategory\"\nquerystring = {\"page\": \"\", \"categoryId\": \"\", \"apiKey\": \"\", \"pageSize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"BestBuyraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "openBoxByListSKUs",
            "url": "https://BestBuyraygorodskijV1.p.rapidapi.com/openBoxByListSKUs",
            "description": "The Open Box by List of SKUs endpoint allows you to query all Open Box offers associated with a list of SKUs. The endpoint will return any available Open Box offers. If there is not an offer for a particular SKU in the list, that SKU will not be represented in the results.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key that you received from BestBuy.",
                    "default": ""
                },
                {
                    "name": "SKUs",
                    "type": "LIST",
                    "description": "The Open Box by List of SKUs endpoint allows you to query all Open Box offers associated with a list of SKUs. The endpoint will return any available Open Box offers. If there is not an offer for a particular SKU in the list, that SKU will not be represented in the results.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Use the `page` parameter to choose which page of results you\u2019d like returned.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "By default, we include 10 results per page, but you can ask for up to 100 per page by making use of the `pageSize` parameter. ",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://BestBuyraygorodskijV1.p.rapidapi.com/openBoxByListSKUs\"\nquerystring = {\"apiKey\": \"\", \"page\": \"\", \"pageSize\": \"\", \"SKUs\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"BestBuyraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://BestBuyraygorodskijV1.p.rapidapi.com/openBoxByListSKUs\"\nquerystring = {\"apiKey\": \"\", \"page\": \"\", \"pageSize\": \"\", \"SKUs\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"BestBuyraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "openBoxBySKU",
            "url": "https://BestBuyraygorodskijV1.p.rapidapi.com/openBoxBySKU",
            "description": "The Open Box Single SKU endpoint allows you to query by SKU all Open Box offers associated with a SKU. If there are no Open Box offers available, the query will return a HTTP 200 response code with an empty result set.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key that you received from BestBuy.",
                    "default": ""
                },
                {
                    "name": "SKU",
                    "type": "NUMBER",
                    "description": "Search all open box offers for SKU. We can see there are at least two offers excellent and certified.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "By default, we include 10 results per page, but you can ask for up to 100 per page by making use of the `pageSize` parameter. ",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Use the `page` parameter to choose which page of results you\u2019d like returned.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://BestBuyraygorodskijV1.p.rapidapi.com/openBoxBySKU\"\nquerystring = {\"pageSize\": \"\", \"apiKey\": \"\", \"SKU\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"BestBuyraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://BestBuyraygorodskijV1.p.rapidapi.com/openBoxBySKU\"\nquerystring = {\"pageSize\": \"\", \"apiKey\": \"\", \"SKU\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"BestBuyraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}