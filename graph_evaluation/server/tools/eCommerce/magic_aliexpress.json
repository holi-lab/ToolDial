{
    "product_id": "api_2178d311-751e-4f69-90e3-31b76b971470",
    "tool_description": "Increase your e-commerce business with this API, we offer all services that you **need**<br>1.  product detail from product ID<br>2.  shipping information<br>3.  detect the new future nuggets<br>4.  trend and hitoric of sales and price on more than **80000** products (best products)<br>5.  Request the products by categories filter by **brands** and **attributes**<br>",
    "home_url": "https://rapidapi.com/b2g.corporation/api/magic-aliexpress1/",
    "name": "Magic AliExpress",
    "title": "Magic AliExpress",
    "pricing": "FREEMIUM",
    "tool_name": "Magic AliExpress",
    "score": {
        "avgServiceLevel": 0,
        "avgLatency": 127258,
        "avgSuccessRate": 0,
        "popularityScore": 0.4,
        "__typename": "Score"
    },
    "host": "magic-aliexpress1.p.rapidapi.com",
    "api_list": [
        {
            "name": "/api/product/{productId}",
            "url": "https://magic-aliexpress1.p.rapidapi.com/api/product/3256804150697616",
            "description": "This resource represents a product, each product is identifier by ID",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "productId",
                    "type": "NUMBER",
                    "description": "The Aliexpress product ID",
                    "default": "3256804150697616"
                }
            ],
            "optional_parameters": [
                {
                    "name": "targetCurrency",
                    "type": "STRING",
                    "description": "Represents the currency whished when the product is retrieved",
                    "default": ""
                },
                {
                    "name": "lg",
                    "type": "STRING",
                    "description": "Represents the language wished when displaying the single product. He must compliant with ISO 639-1 either have two digits",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/product/3256804150697616\"\nquerystring = {\"targetCurrency\": \"\", \"lg\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/product/{productid}\"\nquerystring = {\"targetCurrency\": \"\", \"lg\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You are not subscribed to this API."
            },
            "statuscode": 200,
            "schema": {
                "description": "A product description",
                "properties": {
                    "app_sale_price": {
                        "description": "price normally displayed in the Aliexpress Website",
                        "type": "number"
                    },
                    "app_sale_price_currency": {
                        "format": "ISO 4217 three letter",
                        "type": "string"
                    },
                    "discount": {
                        "description": "discount applicated to the product in percentage",
                        "type": "string"
                    },
                    "discount_rate": {
                        "description": "Represents tjhe discount applicated",
                        "type": "number"
                    },
                    "evaluate_rate": {
                        "description": "Evaluate rate of product",
                        "type": "string"
                    },
                    "feedBackRating": {
                        "propeties": {
                            "averageStar": {
                                "example": 4.7,
                                "type": "number"
                            },
                            "averageStarRage": {
                                "example": 94.8,
                                "type": "number"
                            },
                            "display": {
                                "example": true,
                                "type": "boolean"
                            },
                            "evarageStar": {
                                "example": 4.7,
                                "type": "number"
                            },
                            "evarageStarRage": {
                                "example": 94.8,
                                "type": "number"
                            },
                            "fiveStarNum": {
                                "example": 74,
                                "type": "number"
                            },
                            "fiveStarRate": {
                                "example": 85,
                                "type": "number"
                            },
                            "fourStarNum": {
                                "example": 9,
                                "type": "number"
                            },
                            "fourStarRate": {
                                "example": 11,
                                "type": "number"
                            },
                            "oneStarNum": {
                                "example": 2,
                                "type": "number"
                            },
                            "oneStarRate": {
                                "example": 2,
                                "type": "number"
                            },
                            "positiveRate": {
                                "example": 84.7,
                                "type": "number"
                            },
                            "threeStarNum": {
                                "example": 1,
                                "type": "number"
                            },
                            "threeStarRate": {
                                "example": 1,
                                "type": "number"
                            },
                            "totalValidNum": {
                                "example": 85,
                                "type": "number"
                            },
                            "trialReviewNum": {
                                "example": 0,
                                "type": "number"
                            },
                            "twoStarNum": {
                                "example": 1,
                                "type": "number"
                            },
                            "twoStarRate": {
                                "example": 1,
                                "type": "number"
                            }
                        },
                        "type": "object"
                    },
                    "first_level_category_id": {
                        "description": "Represents the id of parent category where the provider is API of product.",
                        "type": "string"
                    },
                    "first_level_category_name": {
                        "description": "Represents the name of the parent category",
                        "type": "string"
                    },
                    "lastest_volume": {
                        "description": "Represents the last volume knwows of sell",
                        "type": "number"
                    },
                    "metadata": {
                        "type": "object"
                    },
                    "original_price": {
                        "description": "Represents the original price without the discount",
                        "type": "number"
                    },
                    "original_price_currency": {
                        "description": "ISO 4217 three letter",
                        "type": "string"
                    },
                    "productCategoriesBreadcrumb": {
                        "items": {
                            "properties": {
                                "cateId": {
                                    "type": "number"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "remark": {
                                    "type": "string"
                                },
                                "url": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "product_detail_url": {
                        "description": "Represents the URL to access directly on the product detail in the ALiexpress Website",
                        "type": "string"
                    },
                    "product_id": {
                        "description": "Represents the ID of product managed by Aliexpress",
                        "format": "int64",
                        "maximum": 9223372036854776000,
                        "minimum": -9223372036854776000,
                        "type": "number"
                    },
                    "product_main_image_url": {
                        "description": "the picture list of product",
                        "type": "string"
                    },
                    "product_small_image_urls": {
                        "items": {
                            "description": "are the little pictures on the catergory view",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "product_title": {
                        "description": "Represents the product title displays on the Aliexpress Website",
                        "type": "string"
                    },
                    "product_video_url": {
                        "description": "Represents the URL of  productpresentation video.",
                        "type": "string"
                    },
                    "promotion_link": {
                        "description": "If you want to participate to project support, you expose this URL, and the API earns commission.",
                        "type": "string"
                    },
                    "quantityObject": {
                        "properties": {
                            "activity": {
                                "type": "boolean"
                            },
                            "displayBulkInfo": {
                                "type": "boolean"
                            },
                            "id": {
                                "format": "int64",
                                "maximum": 9223372036854776000,
                                "minimum": -9223372036854776000,
                                "type": "number"
                            },
                            "lot": {
                                "type": "boolean"
                            },
                            "multiUnitName": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "oddUnitName": {
                                "type": "string"
                            },
                            "purchaseLimitNumMax": {
                                "type": "number"
                            },
                            "skuBulkDiscount": {
                                "type": "number"
                            },
                            "skuBulkOrder": {
                                "type": "number"
                            },
                            "totalAvailQuantity": {
                                "type": "number"
                            }
                        },
                        "type": "object"
                    },
                    "sale_price": {
                        "description": "Represents the sale displayed in the website with the discount",
                        "type": "number"
                    },
                    "sale_price_currency": {
                        "description": "ISO 4217 three letter",
                        "type": "string"
                    },
                    "second_level_category_id": {
                        "description": "Represents the category of product",
                        "type": "string"
                    },
                    "second_level_category_name": {
                        "description": "Represents the category name of product",
                        "type": "string"
                    },
                    "shop_id": {
                        "description": "Represents the shop ID which sells the product",
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "number"
                    },
                    "shop_url": {
                        "description": "Represents the shop URL which selles the product",
                        "type": "string"
                    },
                    "skuList": {
                        "items": {
                            "properties": {
                                "freightExt": {
                                    "type": "string"
                                },
                                "skuAttr": {
                                    "type": "string"
                                },
                                "skuId": {
                                    "format": "int64",
                                    "maximum": 9223372036854776000,
                                    "minimum": -9223372036854776000,
                                    "type": "number"
                                },
                                "skuIdStr": {
                                    "type": "string"
                                },
                                "skuPropIds": {
                                    "type": "string"
                                },
                                "skuVal": {
                                    "properties": {
                                        "actSkuBulkCalPrice": {
                                            "type": "number"
                                        },
                                        "actSkuCalPrice": {
                                            "type": "number"
                                        },
                                        "actSkuDisplayBulkPrice": {
                                            "type": "string"
                                        },
                                        "actSkuMultiCurrencyBulkPrice": {
                                            "type": "number"
                                        },
                                        "actSkuMultiCurrencyCalPrice": {
                                            "type": "number"
                                        },
                                        "actSkuMultiCurrencyDisplayPrice": {
                                            "type": "number"
                                        },
                                        "availQuantity": {
                                            "type": "number"
                                        },
                                        "bulOrder": {
                                            "type": "number"
                                        },
                                        "inventory": {
                                            "type": "number"
                                        },
                                        "isActivity": {
                                            "type": "boolean"
                                        },
                                        "skuActivityAmount": {
                                            "properties": {
                                                "currency": {
                                                    "type": "string"
                                                },
                                                "formatedAmount": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "skuAmount": {
                                            "properties": {
                                                "currency": {
                                                    "type": "string"
                                                },
                                                "formatedAmount": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "skuDisplayBulkPrice": {
                                            "type": "string"
                                        },
                                        "skuMultiCurrencyBulkPrice": {
                                            "type": "number"
                                        },
                                        "skuMultiCurrencyCalPrice": {
                                            "type": "number"
                                        },
                                        "skuMultiCurrencyDisplayPrice": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "skuProperties": {
                        "description": "Represents the product properties, like Color, size, height informations",
                        "items": {
                            "properties": {
                                "isShowTypeColor": {
                                    "type": "boolean"
                                },
                                "order": {
                                    "type": "number"
                                },
                                "showType": {
                                    "type": "string"
                                },
                                "showTypeColor": {
                                    "type": "boolean"
                                },
                                "skuPropertyId": {
                                    "type": "number"
                                },
                                "skuPropertyName": {
                                    "type": "string"
                                },
                                "skuPropertyValues": {
                                    "items": {
                                        "properties": {
                                            "propertyValueDefinitionName": {
                                                "type": "string"
                                            },
                                            "propertyValueDisplayName": {
                                                "type": "string"
                                            },
                                            "propertyValueId": {
                                                "type": "number"
                                            },
                                            "propertyValueIdLong": {
                                                "type": "number"
                                            },
                                            "propertyValueName": {
                                                "type": "string"
                                            },
                                            "skuColorValue": {
                                                "type": "string"
                                            },
                                            "skuPropertyImagePath": {
                                                "type": "string"
                                            },
                                            "skuPropertyImageSummPath": {
                                                "type": "string"
                                            },
                                            "skuPropertyTips": {
                                                "type": "string"
                                            },
                                            "skuPropertyValueShowOrder": {
                                                "type": "number"
                                            },
                                            "skuPropertyValueTips": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "specs": {
                        "description": "Represents the specification, you can found here, brand name, different elements like age range, the product origin ect ..",
                        "items": {
                            "properties": {
                                "attrName": {
                                    "type": "string"
                                },
                                "attrNameId": {
                                    "type": "number"
                                },
                                "attrValue": {
                                    "type": "string"
                                },
                                "attrValueId": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "target_app_sale_price": {
                        "description": "Represents the app_sale attribute converted with the target currency whished",
                        "type": "number"
                    },
                    "target_app_sale_price_currency": {
                        "description": "Represents the target currency whished",
                        "type": "string"
                    },
                    "target_original_price": {
                        "description": "Represents the original_price converted qith the target currency whished",
                        "type": "number"
                    },
                    "target_original_price_currency": {
                        "description": "Represents the target currency whished",
                        "type": "string"
                    },
                    "target_sale_price": {
                        "description": "Represents the sale_price converted with the target currency whished",
                        "type": "number"
                    },
                    "target_sale_price_currency": {
                        "description": "Represents the target currency whished",
                        "type": "string"
                    },
                    "wishedCount": {
                        "type": "number"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "/api/store/{storeID}/seller/{sellerID}/products",
            "url": "https://magic-aliexpress1.p.rapidapi.com/api/store/2227187/seller/{sellerID}/products",
            "description": "This ressource displays the products by Store",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "storeID",
                    "type": "NUMBER",
                    "description": "The Aliexpress store ID",
                    "default": "2227187"
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "sellerID",
                    "type": "STRING",
                    "description": "You can found the ID in the attribute under sellerAdminSeq, this one  can be found  in the /api/product/{productId}  in the storeModule inside the metadata.\n",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/store/2227187/seller/{sellerID}/products\"\nquerystring = {\"page\": \"1\", \"sellerID\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/store/{storeid}/seller/{sellerID}/products\"\nquerystring = {\"page\": \"1\", \"sellerID\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "messages": "The API is unreachable, please contact the API provider",
                "info": "Your Client (working) ---> Gateway (working) ---> API (not working)"
            },
            "statuscode": 200,
            "schema": {
                "items": {
                    "properties": {
                        "docs": {
                            "description": "Represents all products retrieves for this paging informations",
                            "items": {
                                "properties": {
                                    "currency": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "Represents the product name",
                                        "type": "string"
                                    },
                                    "orders": {
                                        "type": "string"
                                    },
                                    "price": {
                                        "type": "string"
                                    },
                                    "product_id": {
                                        "type": "string"
                                    },
                                    "url": {
                                        "description": "URL to access to the product website page",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "hasNextPage": {
                            "description": "attribute that informe if there are next page",
                            "type": "boolean"
                        },
                        "hasPrevPage": {
                            "description": "attribute that informe if there are previous page",
                            "type": "boolean"
                        },
                        "limit": {
                            "description": "number of products displayed in the page",
                            "type": "number"
                        },
                        "nextPage": {
                            "description": "value of next page",
                            "type": "number"
                        },
                        "prvPage": {
                            "description": "value of previous page",
                            "type": "number"
                        },
                        "totalPages": {
                            "description": "total pages number",
                            "type": "number"
                        },
                        "total_record_count": {
                            "description": "total record count on the Aliexpress Website",
                            "type": "number"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            }
        },
        {
            "name": "/api/products/search",
            "url": "https://magic-aliexpress1.p.rapidapi.com/api/products/search",
            "description": "Search a product by his name",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filter the products compatible with the name",
                    "default": "Playstation"
                }
            ],
            "optional_parameters": [
                {
                    "name": "getShopInformation",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": "false"
                },
                {
                    "name": "lg",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "shipToCountry",
                    "type": "STRING",
                    "description": "Filter the products that can be to ship to the country wished. you can use the service countriesAvailable to set the country wished.",
                    "default": "FR"
                },
                {
                    "name": "minSalePrice",
                    "type": "NUMBER",
                    "description": "Filter products by the min Sale price",
                    "default": 5
                },
                {
                    "name": "targetCurrency",
                    "type": "STRING",
                    "description": "Represents the currency whished when the product is retrieved",
                    "default": ""
                },
                {
                    "name": "shipFromCountry",
                    "type": "STRING",
                    "description": "Filter the products that can be to ship from  country wished. you can use the service countriesAvailable to set the good information.",
                    "default": "CN"
                },
                {
                    "name": "fastDelivery",
                    "type": "BOOLEAN",
                    "description": "Filter products that are compatible with fast delivery",
                    "default": "true"
                },
                {
                    "name": "maxSalePrice",
                    "type": "NUMBER",
                    "description": "Filter products by the max Sale price",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "the products are sorted",
                    "default": "NEWEST_DESC"
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Represents the page wished",
                    "default": 1
                }
            ],
            "code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/products/search\"\nquerystring = {\"getShopInformation\": \"false\", \"lg\": \"\", \"shipToCountry\": \"FR\", \"minSalePrice\": 5, \"targetCurrency\": \"\", \"shipFromCountry\": \"CN\", \"fastDelivery\": \"true\", \"maxSalePrice\": \"\", \"sort\": \"NEWEST_DESC\", \"name\": \"Playstation\", \"page\": 1}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/products/search\"\nquerystring = {\"getShopInformation\": \"false\", \"lg\": \"\", \"shipToCountry\": \"FR\", \"minSalePrice\": 5, \"targetCurrency\": \"\", \"shipFromCountry\": \"CN\", \"fastDelivery\": \"true\", \"maxSalePrice\": \"\", \"sort\": \"NEWEST_DESC\", \"name\": \"Playstation\", \"page\": 1}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "description": "Represents a product filtered by a category",
                "items": {
                    "properties": {
                        "docs": {
                            "description": "Represents all products retrieves for this paging informations",
                            "items": {
                                "properties": {
                                    "app_sale_price": {
                                        "description": "app sale price displayed on web site",
                                        "schema": {
                                            "example": 4.42,
                                            "type": "number"
                                        }
                                    },
                                    "app_sale_price_currency": {
                                        "description": "currency of product displayed on web site",
                                        "schema": {
                                            "example": "USD",
                                            "type": "string"
                                        }
                                    },
                                    "discount_rate": {
                                        "description": "rate discount applicated on product",
                                        "schema": {
                                            "example": 9,
                                            "type": "number"
                                        }
                                    },
                                    "metadata": {
                                        "description": "all data retrieve during the scraping",
                                        "properties": {
                                            "image": {
                                                "description": "image module that have yhe informations about image",
                                                "properties": {
                                                    "imageHeight": {
                                                        "description": "image height",
                                                        "schema": {
                                                            "example": 800,
                                                            "type": "number"
                                                        }
                                                    },
                                                    "imageType": {
                                                        "description": "image type",
                                                        "schema": {
                                                            "example": 11,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "imageUrl": {
                                                        "description": "imagge URL",
                                                        "schema": {
                                                            "example": "http://ae01.alicdn.com/kf/H314e8a9cdc004e3283c6d28d13e2e39dF.jpg",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "imageWidth": {
                                                        "description": "image width",
                                                        "schema": {
                                                            "example": 800,
                                                            "type": "number"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "itemType": {
                                                "description": "item type",
                                                "schema": {
                                                    "example": "product",
                                                    "type": "string"
                                                }
                                            },
                                            "prices": {
                                                "description": "Module that managed the price",
                                                "properties": {
                                                    "sale_price": {
                                                        "description": "An object that encapsulates all elements about price",
                                                        "properties": {
                                                            "currencyCode": {
                                                                "description": "Repr\u00e9sents the product currency",
                                                                "type": "string"
                                                            },
                                                            "discount": {
                                                                "description": "Represents the discount actually applicated",
                                                                "type": "number"
                                                            },
                                                            "formattedPrice": {
                                                                "description": "Price displayed with the currency",
                                                                "type": "string"
                                                            },
                                                            "minPrice": {
                                                                "description": "minimum price of the range displayed on the Aliexpress website",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "productId": {
                                                "type": "number"
                                            },
                                            "sellingPoint": {
                                                "description": "Represents the selling information like the charge shipping",
                                                "items": {
                                                    "description": "Represents the charge shipping",
                                                    "properties": {
                                                        "displayStyle": {
                                                            "type": "string"
                                                        },
                                                        "sellingPointTag": {
                                                            "description": "Represents the shipping tag",
                                                            "properties": {
                                                                "displayTagType": {
                                                                    "type": "string"
                                                                },
                                                                "tagText": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "sellingPointType": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "title": {
                                                "description": "module that managed the product title  and seo title",
                                                "properties": {
                                                    "displayTitle": {
                                                        "description": "Represents the product title",
                                                        "type": "string"
                                                    },
                                                    "seoTitle": {
                                                        "description": "Represents the SEO title",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "product_id": {
                                        "description": "product ID",
                                        "schema": {
                                            "format": "int64",
                                            "type": "number"
                                        }
                                    },
                                    "product_main_image_url": {
                                        "description": "url image displayed on website",
                                        "schema": {
                                            "example": "http://ae01.alicdn.com/kf/H314e8a9cdc004e3283c6d28d13e2e39dF.jpg",
                                            "type": "string"
                                        }
                                    },
                                    "product_title": {
                                        "description": "product title displayed on website",
                                        "schema": {
                                            "example": "10Pcs HDMI Port Socket Connector New Replacement Part For Playstation 4 PS4",
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "hasNextPage": {
                            "description": "attribute that informe if there are next page",
                            "type": "boolean"
                        },
                        "hasPrevPage": {
                            "description": "attribute that informe if there are previous page",
                            "type": "boolean"
                        },
                        "limit": {
                            "description": "number of products displayed in the page",
                            "type": "number"
                        },
                        "nextPage": {
                            "description": "value of next page",
                            "type": "number"
                        },
                        "prvPage": {
                            "description": "value of previous page",
                            "type": "number"
                        },
                        "totalPages": {
                            "description": "total pages number",
                            "type": "number"
                        },
                        "total_record_count": {
                            "description": "total record count on the Aliexpress Website",
                            "type": "number"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            }
        },
        {
            "name": "/api/product/{productID}/feedbacks",
            "url": "https://magic-aliexpress1.p.rapidapi.com/api/product/32845755054/feedbacks",
            "description": "This ressource displays the feedbacks for one product",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "productID",
                    "type": "NUMBER",
                    "description": "The Aliexpress product ID",
                    "default": "32845755054"
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                }
            ],
            "code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/product/32845755054/feedbacks\"\nquerystring = {\"page\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/product/{productid}/feedbacks\"\nquerystring = {\"page\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "description": "Repressents the client feddbacks posted on the Aliexpress Website",
                "items": {
                    "description": "Represent one feedback",
                    "properties": {
                        "content": {
                            "description": "the feedback content wrote by the client",
                            "type": "string"
                        },
                        "country": {
                            "description": "The client nationality that gave the feedback",
                            "type": "string"
                        },
                        "date": {
                            "description": "the feedback date",
                            "format": "date",
                            "type": "string"
                        },
                        "displayName": {
                            "description": "Represnts the client alias, is not mandatory",
                            "type": "string"
                        },
                        "info": {
                            "description": "Represents the information about the sale. You can found the ships from, the logistics ....",
                            "properties": {
                                "Logistics": {
                                    "type": "string"
                                },
                                "Ships From": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "name": {
                            "description": "Represents the client name",
                            "type": "string"
                        },
                        "photos": {
                            "description": "Photos published by the client",
                            "items": {
                                "description": "url of photo's link",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "rating": {
                            "description": "The rating gave by the client",
                            "type": "number"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            }
        },
        {
            "name": "/api/shipping/{productID}",
            "url": "https://magic-aliexpress1.p.rapidapi.com/api/shipping/4000961087745",
            "description": "This ressource displays the shipping information for one product",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "productID",
                    "type": "NUMBER",
                    "description": "The Aliexpress product ID",
                    "default": "4000961087745"
                }
            ],
            "optional_parameters": [
                {
                    "name": "toCountry",
                    "type": "STRING",
                    "description": "The country to calcul the freight ",
                    "default": "FR"
                }
            ],
            "code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/shipping/4000961087745\"\nquerystring = {\"toCountry\": \"FR\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/shipping/{productid}\"\nquerystring = {\"toCountry\": \"FR\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "desription": "An object that represents the shipping charge, delays and package info like length, width, weight and height",
                "properties": {
                    "freightResult": {
                        "description": "Freight informations, you can find the delivery date, the compagny ect...",
                        "items": {
                            "properties": {
                                "commitDay": {
                                    "type": "string"
                                },
                                "compagny": {
                                    "description": "Company that realizes the delivery",
                                    "type": "string"
                                },
                                "currency": {
                                    "type": "string"
                                },
                                "deliveryDate": {
                                    "format": "date",
                                    "type": "string"
                                },
                                "freightAmount": {
                                    "description": "Represents the freight amount",
                                    "properties": {
                                        "currency": {
                                            "type": "string"
                                        },
                                        "formatedAmount": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "sendGoodsCountry": {
                                    "description": "sending country",
                                    "type": "string"
                                },
                                "sendGoodsCountryFullName": {
                                    "type": "string"
                                },
                                "time": {
                                    "type": "string"
                                },
                                "tracking": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "packageInfo": {
                        "description": "Represents the package info",
                        "properties": {
                            "height": {
                                "type": "number"
                            },
                            "length": {
                                "type": "number"
                            },
                            "lot": {
                                "type": "boolean"
                            },
                            "weight": {
                                "description": "unity is KG",
                                "type": "number"
                            },
                            "width": {
                                "type": "number"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "/api/category/{categoryId}/products",
            "url": "https://magic-aliexpress1.p.rapidapi.com/api/category/100003819/products",
            "description": "This resource represents the product list; you can filter by\n - attributes\n - minimum price\n - brand \n - ship to country\n - ship from country\n - max sale price \n<br> **For information, One first request, you must not indicate the attr & brands, you retrieve this informations in the Product Object.**",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "categoryId",
                    "type": "NUMBER",
                    "description": "The Aliexpress product ID",
                    "default": "100003819"
                }
            ],
            "optional_parameters": [
                {
                    "name": "brand",
                    "type": "STRING",
                    "description": "filter the products by brand. <br> In order todo this :<br> 1. Filter the products with all filters that you want,  without **brand** <br> 2. Search the `brands` element at the same level that pagination level (limit, page hasPrevPage ... ) <br> 3. Indicate the content id  <br>content:[<br>{ <br>brandName:MEGE KNIGHT<br>**brandId:201549252** <br>brandLogo://ae01.alicdn.com/kf/HTB1XyEwE1OSBuNjy0Fdq6zDnVXaw.jpg<br>}<br>If you want filter by the MEGE KNIGHT you must indicate 201549252. <br> **Warning, when you indicate brand element, the attr parameter must be empty.**",
                    "default": ""
                },
                {
                    "name": "shipToCountry",
                    "type": "STRING",
                    "description": "Filter the products that can be to ship to the country wished. you can use the service countriesAvailable to set the good information",
                    "default": "FR"
                },
                {
                    "name": "attr",
                    "type": "STRING",
                    "description": "filter the products by an attribute.<br> In order todo this :<br>1. Filter the products with all filters that you want,  without **attr** <br>2. Search the `attributes` element at the same level that pagination level (limit, page hasPrevPage ... ) <br>3. concatenate the content parent with children element <br>content:[<br>{ <br>**attributeId:14** <br>displayType:colour_atla <br>attributeValues:[ <br>{<br>**attributeValueId:10**<br>attributeValueName:Red<br>selected:true<br>}<br>If you want filter the products by the color red, you must indicate 14-10.<br> **Warning, when you indicate attribute element, the brand parameter must be empty.**",
                    "default": ""
                },
                {
                    "name": "maxSalePrice",
                    "type": "NUMBER",
                    "description": "Filter products by the max Sale price",
                    "default": 50
                },
                {
                    "name": "getShopInformation",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "targetCurrency",
                    "type": "STRING",
                    "description": "Represents the currency whished when the product is retrieved",
                    "default": ""
                },
                {
                    "name": "lg",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "shipFromCountry",
                    "type": "STRING",
                    "description": "Filter the products that can be to ship from  country wished. you can use the service countriesAvailable to set the good information",
                    "default": "CN"
                },
                {
                    "name": "minSalePrice",
                    "type": "NUMBER",
                    "description": "Filter products by the min Sale price",
                    "default": 10
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "filter the products",
                    "default": "NEWEST_DESC"
                }
            ],
            "code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/category/100003819/products\"\nquerystring = {\"brand\": \"\", \"shipToCountry\": \"FR\", \"attr\": \"\", \"maxSalePrice\": 50, \"getShopInformation\": \"\", \"targetCurrency\": \"\", \"lg\": \"\", \"shipFromCountry\": \"CN\", \"minSalePrice\": 10, \"sort\": \"NEWEST_DESC\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/category/{categoryid}/products\"\nquerystring = {\"brand\": \"\", \"shipToCountry\": \"FR\", \"attr\": \"\", \"maxSalePrice\": 50, \"getShopInformation\": \"\", \"targetCurrency\": \"\", \"lg\": \"\", \"shipFromCountry\": \"CN\", \"minSalePrice\": 10, \"sort\": \"NEWEST_DESC\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "description": "Represents a product filtered by a category",
                "items": {
                    "properties": {
                        "docs": {
                            "description": "Represents all products retrieves for this paging informations",
                            "items": {
                                "properties": {
                                    "app_sale_price": {
                                        "description": "app sale price displayed on web site",
                                        "schema": {
                                            "example": 4.42,
                                            "type": "number"
                                        }
                                    },
                                    "app_sale_price_currency": {
                                        "description": "currency of product displayed on web site",
                                        "schema": {
                                            "example": "USD",
                                            "type": "string"
                                        }
                                    },
                                    "discount_rate": {
                                        "description": "rate discount applicated on product",
                                        "schema": {
                                            "example": 9,
                                            "type": "number"
                                        }
                                    },
                                    "metadata": {
                                        "description": "all data retrieve during the scraping",
                                        "properties": {
                                            "image": {
                                                "description": "image module that have yhe informations about image",
                                                "properties": {
                                                    "imageHeight": {
                                                        "description": "image height",
                                                        "schema": {
                                                            "example": 800,
                                                            "type": "number"
                                                        }
                                                    },
                                                    "imageType": {
                                                        "description": "image type",
                                                        "schema": {
                                                            "example": 11,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "imageUrl": {
                                                        "description": "imagge URL",
                                                        "schema": {
                                                            "example": "http://ae01.alicdn.com/kf/H314e8a9cdc004e3283c6d28d13e2e39dF.jpg",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "imageWidth": {
                                                        "description": "image width",
                                                        "schema": {
                                                            "example": 800,
                                                            "type": "number"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "itemType": {
                                                "description": "item type",
                                                "schema": {
                                                    "example": "product",
                                                    "type": "string"
                                                }
                                            },
                                            "prices": {
                                                "description": "Module that managed the price",
                                                "properties": {
                                                    "sale_price": {
                                                        "description": "An object that encapsulates all elements about price",
                                                        "properties": {
                                                            "currencyCode": {
                                                                "description": "Repr\u00e9sents the product currency",
                                                                "type": "string"
                                                            },
                                                            "discount": {
                                                                "description": "Represents the discount actually applicated",
                                                                "type": "number"
                                                            },
                                                            "formattedPrice": {
                                                                "description": "Price displayed with the currency",
                                                                "type": "string"
                                                            },
                                                            "minPrice": {
                                                                "description": "minimum price of the range displayed on the Aliexpress website",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "productId": {
                                                "type": "number"
                                            },
                                            "sellingPoint": {
                                                "description": "Represents the selling information like the charge shipping",
                                                "items": {
                                                    "description": "Represents the charge shipping",
                                                    "properties": {
                                                        "displayStyle": {
                                                            "type": "string"
                                                        },
                                                        "sellingPointTag": {
                                                            "description": "Represents the shipping tag",
                                                            "properties": {
                                                                "displayTagType": {
                                                                    "type": "string"
                                                                },
                                                                "tagText": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "sellingPointType": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "title": {
                                                "description": "module that managed the product title  and seo title",
                                                "properties": {
                                                    "displayTitle": {
                                                        "description": "Represents the product title",
                                                        "type": "string"
                                                    },
                                                    "seoTitle": {
                                                        "description": "Represents the SEO title",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "product_id": {
                                        "description": "product ID",
                                        "schema": {
                                            "format": "int64",
                                            "type": "number"
                                        }
                                    },
                                    "product_main_image_url": {
                                        "description": "url image displayed on website",
                                        "schema": {
                                            "example": "http://ae01.alicdn.com/kf/H314e8a9cdc004e3283c6d28d13e2e39dF.jpg",
                                            "type": "string"
                                        }
                                    },
                                    "product_title": {
                                        "description": "product title displayed on website",
                                        "schema": {
                                            "example": "10Pcs HDMI Port Socket Connector New Replacement Part For Playstation 4 PS4",
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "hasNextPage": {
                            "description": "attribute that informe if there are next page",
                            "type": "boolean"
                        },
                        "hasPrevPage": {
                            "description": "attribute that informe if there are previous page",
                            "type": "boolean"
                        },
                        "limit": {
                            "description": "number of products displayed in the page",
                            "type": "number"
                        },
                        "nextPage": {
                            "description": "value of next page",
                            "type": "number"
                        },
                        "prvPage": {
                            "description": "value of previous page",
                            "type": "number"
                        },
                        "totalPages": {
                            "description": "total pages number",
                            "type": "number"
                        },
                        "total_record_count": {
                            "description": "total record count on the Aliexpress Website",
                            "type": "number"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            }
        },
        {
            "name": "/api/bestSales/SortedByNewest",
            "url": "https://magic-aliexpress1.p.rapidapi.com/api/bestSales/SortedByNewest",
            "description": "Retrieves the last best product added in the system",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "",
                    "default": "10"
                }
            ],
            "code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/bestSales/SortedByNewest\"\nquerystring = {\"limit\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/bestSales/SortedByNewest\"\nquerystring = {\"limit\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "/api/product/{productId}/historic/prices",
            "url": "https://magic-aliexpress1.p.rapidapi.com/api/product/1005002011652590/historic/prices",
            "description": "This endpoint returns the prices historic of product loaded by a client",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "productId",
                    "type": "string",
                    "description": "",
                    "default": "1005002011652590"
                }
            ],
            "optional_parameters": [
                {
                    "name": "maxDate",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minDate",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/product/1005002011652590/historic/prices\"\nquerystring = {\"maxDate\": \"\", \"minDate\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/product/{productid}/historic/prices\"\nquerystring = {\"maxDate\": \"\", \"minDate\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "/api/product/{productId}/historic/sales",
            "url": "https://magic-aliexpress1.p.rapidapi.com/api/product/1005002011652590/historic/sales",
            "description": "This endpoint returns the sales historic of product loaded by a client",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "productId",
                    "type": "string",
                    "description": "",
                    "default": "1005002011652590"
                }
            ],
            "optional_parameters": [
                {
                    "name": "minDate",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "maxDate",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/product/1005002011652590/historic/sales\"\nquerystring = {\"minDate\": \"\", \"maxDate\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/product/{productid}/historic/sales\"\nquerystring = {\"minDate\": \"\", \"maxDate\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "/api/v2/categories",
            "url": "https://magic-aliexpress1.p.rapidapi.com/api/v2/categories",
            "description": "This resource represents a category in the system. We have 3 provider type <br> - API\n -WEBSITE\n -HYBRID\n <br> 1.API<br> This category is manager by the API, the ID indicated is the Alibaba ID and not Aliexpress ID.<br> 2. WESITE <br> This category is scraping of Aliexpress website <br> 3. HYBRID <br> This category has correspondence between Aliexpress and API; you have in the same object twice ID `alie_category_id` for Website and `api_category_id` for API<br> In the API to request by example product, in the category ID, you can indicate the both.  ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/v2/categories\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/v2/categories\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "description": "A category description",
                "properties": {
                    "__v": {
                        "description": "the object's version",
                        "type": "number"
                    },
                    "_id": {
                        "type": "string"
                    },
                    "alie_category_id": {
                        "description": "if the ID is not null, the the ID indicates is the same of Aliexpress Website.",
                        "type": "number"
                    },
                    "alie_category_name": {
                        "description": "If the name is not null, then the name indicates is the same of Aliexpress Website"
                    },
                    "alie_parent_id": {
                        "description": "The parent ID indicates if the catgegory has one parent, it allows  the developer to implement a tree in his application.If the category is managed by HYBRID or WEBSITE provider, then the ID of parent is not null. You can also merged all provider to have a finer granularity.",
                        "type": "number"
                    },
                    "api_category_id": {
                        "description": "Represent the id managed by the API system.",
                        "type": "number"
                    },
                    "api_parent_id": {
                        "description": "The parent ID indicates if the catgegory has one parent, it allows  the developer to implement a tree in his application.If the category is managed by HYBRID or WEBSITE provider, then the ID of parent is not null. You can also merged all provider to have a finer granularity.",
                        "type": "number"
                    },
                    "category_name": {
                        "description": "The name of the category used by Aliexpress or Aliebaba websites",
                        "type": "string"
                    },
                    "modificationDate": {
                        "format": "date",
                        "type": "string"
                    },
                    "provider": {
                        "description": "describe the origin of the category. API indicates that the category is manages by the API which means that the ID/Name can be different of Aliexpress. Website, indicates that the category comes from ALiexpress WEBSITE. HYBRID indicates that the name and or ID is the same between WEBSITE and API",
                        "enum": [
                            "API",
                            "WEBSITE",
                            "HYBRID"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "/api/currenciesAvailable",
            "url": "https://magic-aliexpress1.p.rapidapi.com/api/currenciesAvailable",
            "description": "This resource represents a currency in the system. Each currency is composed of Code and Name Attributes. This service can be used to communicate with product service with the target currency attribute.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/currenciesAvailable\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/currenciesAvailable\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "description": "non-exhaustive list of currencies, you can retrieve all currencies availables via /api/currenciesAvailable and set the Code in the query parameters",
                "items": {
                    "examples": {
                        "Euros": {
                            "value": "EUR"
                        },
                        "Indian Rupee": {
                            "value": "INR"
                        },
                        "United States Dollar": {
                            "value": "USD"
                        }
                    },
                    "properties": {
                        "Code": {
                            "description": "code to set in the targetCurrency of services",
                            "format": "ISO 4217 is three-letter",
                            "type": "string"
                        },
                        "Name": {
                            "description": "Represents the currency name",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            }
        },
        {
            "name": "/api/countriesAvailableToShipping",
            "url": "https://magic-aliexpress1.p.rapidapi.com/api/countriesAvailableToShipping",
            "description": "This resource represents the countries. Each country is composed of Code and Name Attributes. This service can be used to communicate with product service for the countryFrom and countryTo query parameters.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/countriesAvailableToShipping\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/countriesAvailableToShipping\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "items": {
                    "properties": {
                        "Code": {
                            "type": "string"
                        },
                        "Name": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            }
        },
        {
            "name": "/api/bestSales/product/{productID}/salesHistory",
            "url": "https://magic-aliexpress1.p.rapidapi.com/api/bestSales/product/4001017422834/salesHistory",
            "description": "This resource returns the historic of sales",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "productID",
                    "type": "NUMBER",
                    "description": "The Aliexpress product ID",
                    "default": "4001017422834"
                }
            ],
            "optional_parameters": [
                {
                    "name": "minDate",
                    "type": "STRING",
                    "description": "filter the historic by min date",
                    "default": "2020-09-28"
                },
                {
                    "name": "maxDate",
                    "type": "STRING",
                    "description": "filter the historic by max date",
                    "default": "2021-08-05"
                }
            ],
            "code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/bestSales/product/4001017422834/salesHistory\"\nquerystring = {\"minDate\": \"2020-09-28\", \"maxDate\": \"2021-08-05\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/bestSales/product/{productid}/salesHistory\"\nquerystring = {\"minDate\": \"2020-09-28\", \"maxDate\": \"2021-08-05\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "/api/bestSales/products",
            "url": "https://magic-aliexpress1.p.rapidapi.com/api/bestSales/products",
            "description": "This resource represents the best sales detected by our system",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "you can sorted the products",
                    "default": 1
                }
            ],
            "optional_parameters": [
                {
                    "name": "priceMin",
                    "type": "NUMBER",
                    "description": "filter by the price min",
                    "default": 5
                },
                {
                    "name": "categoryID",
                    "type": "NUMBER",
                    "description": "filter by the category's ID",
                    "default": ""
                },
                {
                    "name": "priceMax",
                    "type": "NUMBER",
                    "description": "filter by the price max",
                    "default": 20
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "you can sorted the products",
                    "default": "EVALUATE_RATE_ASC"
                },
                {
                    "name": "searchName",
                    "type": "STRING",
                    "description": "Returns products with the name",
                    "default": "shoes"
                }
            ],
            "code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/bestSales/products\"\nquerystring = {\"priceMin\": 5, \"categoryID\": \"\", \"page\": 1, \"priceMax\": 20, \"sort\": \"EVALUATE_RATE_ASC\", \"searchName\": \"shoes\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/bestSales/products\"\nquerystring = {\"priceMin\": 5, \"categoryID\": \"\", \"page\": 1, \"priceMax\": 20, \"sort\": \"EVALUATE_RATE_ASC\", \"searchName\": \"shoes\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "/api/bestSales/product/{productID}/pricesHistory",
            "url": "https://magic-aliexpress1.p.rapidapi.com/api/bestSales/product/4001017422834/pricesHistory",
            "description": "This resource returns the historic of prices",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "productID",
                    "type": "NUMBER",
                    "description": "The Aliexpress product ID",
                    "default": "4001017422834"
                }
            ],
            "optional_parameters": [
                {
                    "name": "minDate",
                    "type": "STRING",
                    "description": "filter the historic min date",
                    "default": "2020-09-28"
                },
                {
                    "name": "maxDate",
                    "type": "STRING",
                    "description": "filter the historic by max date",
                    "default": "2021-08-05"
                }
            ],
            "code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/bestSales/product/4001017422834/pricesHistory\"\nquerystring = {\"minDate\": \"2020-09-28\", \"maxDate\": \"2021-08-05\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/bestSales/product/{productid}/pricesHistory\"\nquerystring = {\"minDate\": \"2020-09-28\", \"maxDate\": \"2021-08-05\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ],
    "standardized_name": "magic_aliexpress"
}