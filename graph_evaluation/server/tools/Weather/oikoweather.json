{
    "tool_name":"OikoWeather",
    "tool_description":"Hourly time-series weather data for any location from 1940",
    "title":"OikoWeather",
    "pricing":"FREEMIUM",
    "score":{
        "avgServiceLevel":100,
        "avgLatency":1724,
        "avgSuccessRate":28,
        "popularityScore":2.1,
        "__typename":"Score"
    },
    "home_url":"https://rapidapi.com/oikolab-oikolab-default/api/oikoweather/",
    "host":"oikoweather.p.rapidapi.com",
    "api_list":[
        {
            "name":"Weather Data",
            "url":"https://oikoweather.p.rapidapi.com/weather",
            "description":"Hourly historical and forecast weather parameters in time-series format, from 1950 to 16 days ahead for any location.",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[
                {
                    "name":"resample_method",
                    "type":"STRING",
                    "description":"max, mean, min, or sum. When the frequency is set to daily (D) or monthly (M), use this to specify the aggregation method.",
                    "default":""
                },
                {
                    "name":"model",
                    "type":"STRING",
                    "description":"Possible values: era5, era5land, gfs, gefs, hrrr, cfs\nUse to specify dataset if applicable.",
                    "default":""
                },
                {
                    "name":"west",
                    "type":"NUMBER",
                    "description":"Latitude West. For bounding box.",
                    "default":""
                },
                {
                    "name":"south",
                    "type":"NUMBER",
                    "description":"Latitude south. For bounding box.",
                    "default":""
                },
                {
                    "name":"lon",
                    "type":"NUMBER",
                    "description":"Longitude(s). If location is not provided. Up to 100 locations allowed.",
                    "default":"114.2"
                },
                {
                    "name":"east",
                    "type":"NUMBER",
                    "description":"Latitude East. For bounding box.",
                    "default":""
                },
                {
                    "name":"north",
                    "type":"NUMBER",
                    "description":"Latitude North. For bounding box.",
                    "default":""
                },
                {
                    "name":"param",
                    "type":"STRING",
                    "description":"",
                    "default":"temperature"
                },
                {
                    "name":"freq",
                    "type":"STRING",
                    "description":"H (hourly), D (daily), or M (monthly). \nDefaults to H.",
                    "default":""
                },
                {
                    "name":"end",
                    "type":"DATE (YYYY-MM-DD)",
                    "description":"End date. Defaults to 7 days into the future. Provided time is interpreted as UTC.",
                    "default":"2023-05-30"
                },
                {
                    "name":"lat",
                    "type":"NUMBER",
                    "description":"Latitude(s). If location is not provided. Up to 100 locations allowed.",
                    "default":"23.3"
                },
                {
                    "name":"start",
                    "type":"DATE (YYYY-MM-DD)",
                    "description":"Start date. Defaults to 3 days into the past. Provided time is interpreted as UTC.",
                    "default":"2023-01-01"
                }
            ],
            "code":"import requests\n\nurl = \"https://oikoweather.p.rapidapi.com/weather\"\nquerystring = {\"lon\": lon, \"param\": param, \"end\": end, \"lat\": lat, \"start\": start}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"oikoweather.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        }
    ]
}