{
    "tool_name":"WeatherAPI.com",
    "tool_description":"WeatherAPI.com is a powerful fully managed free weather and geolocation API provider that provides extensive APIs that range from the weather forecast, historical weather, future weather, weather alerts, air quality data, IP lookup, and astronomy through to sports, time zone, and geolocation.",
    "title":"WeatherAPI.com",
    "pricing":"FREEMIUM",
    "score":{
        "avgServiceLevel":100,
        "avgLatency":151,
        "avgSuccessRate":95,
        "popularityScore":9.9,
        "__typename":"Score"
    },
    "home_url":"https://rapidapi.com/weatherapi/api/weatherapi-com/",
    "host":"weatherapi-com.p.rapidapi.com",
    "api_list":[
        {
            "name":"Realtime Weather API",
            "url":"https://weatherapi-com.p.rapidapi.com/current.json",
            "description":"Current weather or realtime weather API method allows a user to get up to date current weather information in json and xml. The data is returned as a Current Object.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"q",
                    "type":"STRING",
                    "description":"Query parameter based on which data is sent back. It could be following:  Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508 city name e.g.: q=Paris US zip e.g.: q=10001 UK postcode e.g: q=SW1 Canada postal code e.g: q=G2J metar:<metar code> e.g: q=metar:EGLL iata:<3 digit airport code> e.g: q=iata:DXB auto:ip IP lookup e.g: q=auto:ip IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
                    "default":"53.1,-0.13"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://weatherapi-com.p.rapidapi.com/current.json\"\nquerystring = {\"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"weatherapi-com.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Forecast Weather API",
            "url":"https://weatherapi-com.p.rapidapi.com/forecast.json",
            "description":"Forecast weather API method returns upto next 14 day weather forecast and weather alert as json. It contains astronomy data, day weather forecast and hourly interval weather information for a given city.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"q",
                    "type":"STRING",
                    "description":"Query parameter based on which data is sent back. It could be following:\n\nLatitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508\ncity name e.g.: q=Paris\nUS zip e.g.: q=10001\nUK postcode e.g: q=SW1\nCanada postal code e.g: q=G2J\nmetar:<metar code> e.g: q=metar:EGLL\niata:<3 digit airport code> e.g: q=iata:DXB\nauto:ip IP lookup e.g: q=auto:ip\nIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
                    "default":"London"
                }
            ],
            "optional_parameters":[
                {
                    "name":"days",
                    "type":"NUMBER",
                    "description":"Number of days of forecast required.",
                    "default":"3"
                },
                {
                    "name":"dt",
                    "type":"DATE (YYYY-MM-DD)",
                    "description":"If passing 'dt', it should be between today and next 10 day in yyyy-MM-dd format.",
                    "default":""
                },
                {
                    "name":"lang",
                    "type":"STRING",
                    "description":"Returns 'condition:text' field in API in the desired language",
                    "default":""
                }
            ],
            "code":"import requests\n\nurl = \"https://weatherapi-com.p.rapidapi.com/forecast.json\"\nquerystring = {\"days\": days, \"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"weatherapi-com.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Time Zone API",
            "url":"https://weatherapi-com.p.rapidapi.com/timezone.json",
            "description":"Time Zone API method allows a user to get up to date time zone and local time information in json.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"q",
                    "type":"STRING",
                    "description":"Query parameter based on which data is sent back. It could be following:\n\nLatitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508\ncity name e.g.: q=Paris\nUS zip e.g.: q=10001\nUK postcode e.g: q=SW1\nCanada postal code e.g: q=G2J\nmetar:<metar code> e.g: q=metar:EGLL\niata:<3 digit airport code> e.g: q=iata:DXB\nauto:ip IP lookup e.g: q=auto:ip\nIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
                    "default":""
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://weatherapi-com.p.rapidapi.com/timezone.json\"\nquerystring = {\"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"weatherapi-com.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Future Weather API",
            "url":"https://weatherapi-com.p.rapidapi.com/future.json",
            "description":"Future weather API method returns weather in a 3 hourly interval in future for a date between 14 days and 300 days from today in the future.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"dt",
                    "type":"DATE (YYYY-MM-DD)",
                    "description":"'dt' should be between 14 days and 300 days from today in the future in yyyy-MM-dd format (i.e. dt=2023-01-01)",
                    "default":"2022-12-25"
                },
                {
                    "name":"q",
                    "type":"STRING",
                    "description":"Query parameter based on which data is sent back. It could be following:\n\nLatitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508\ncity name e.g.: q=Paris\nUS zip e.g.: q=10001\nUK postcode e.g: q=SW1\nCanada postal code e.g: q=G2J\nmetar:<metar code> e.g: q=metar:EGLL\niata:<3 digit airport code> e.g: q=iata:DXB\nauto:ip IP lookup e.g: q=auto:ip\nIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
                    "default":"London"
                }
            ],
            "optional_parameters":[
                {
                    "name":"lang",
                    "type":"STRING",
                    "description":"Returns 'condition:text' field in API in the desired language",
                    "default":""
                }
            ],
            "code":"import requests\n\nurl = \"https://weatherapi-com.p.rapidapi.com/future.json\"\nquerystring = {\"dt\": dt, \"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"weatherapi-com.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Sports API",
            "url":"https://weatherapi-com.p.rapidapi.com/sports.json",
            "description":"Sports API method allows a user to get listing of all upcoming sports events for football, cricket and golf in json.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"q",
                    "type":"STRING",
                    "description":"",
                    "default":"London"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://weatherapi-com.p.rapidapi.com/sports.json\"\nquerystring = {\"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"weatherapi-com.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"History Weather API",
            "url":"https://weatherapi-com.p.rapidapi.com/history.json",
            "description":"History weather API method returns historical weather for a date on or after 1st Jan, 2010 (depending upon subscription level) as json.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"dt",
                    "type":"DATE (YYYY-MM-DD)",
                    "description":"For history API 'dt' should be on or after 1st Jan, 2010 in yyyy-MM-dd format",
                    "default":""
                },
                {
                    "name":"q",
                    "type":"STRING",
                    "description":"Query parameter based on which data is sent back. It could be following:\n\nLatitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508\ncity name e.g.: q=Paris\nUS zip e.g.: q=10001\nUK postcode e.g: q=SW1\nCanada postal code e.g: q=G2J\nmetar:<metar code> e.g: q=metar:EGLL\niata:<3 digit airport code> e.g: q=iata:DXB\nauto:ip IP lookup e.g: q=auto:ip\nIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
                    "default":"London"
                }
            ],
            "optional_parameters":[
                {
                    "name":"hour",
                    "type":"NUMBER",
                    "description":"Restricting history output to a specific hour in a given day.",
                    "default":""
                },
                {
                    "name":"end_dt",
                    "type":"DATE (YYYY-MM-DD)",
                    "description":"Restrict date output for History API method. Should be on or after 1st Jan, 2010. Make sure end_dt is equal to or greater than 'dt'. ",
                    "default":""
                },
                {
                    "name":"lang",
                    "type":"STRING",
                    "description":"Returns 'condition:text' field in API in the desired language",
                    "default":"en"
                }
            ],
            "code":"import requests\n\nurl = \"https://weatherapi-com.p.rapidapi.com/history.json\"\nquerystring = {\"dt\": dt, \"q\": q, \"lang\": lang}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"weatherapi-com.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"IP Lookup API",
            "url":"https://weatherapi-com.p.rapidapi.com/ip.json",
            "description":"IP Lookup API method allows a user to get up to date information for an IP address in json.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"q",
                    "type":"STRING",
                    "description":"e.g: q=auto:ip\n\nIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
                    "default":""
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://weatherapi-com.p.rapidapi.com/ip.json\"\nquerystring = {\"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"weatherapi-com.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Astronomy API",
            "url":"https://weatherapi-com.p.rapidapi.com/astronomy.json",
            "description":"Astronomy API method allows a user to get up to date information for sunrise, sunset, moonrise, moonset, moon phase and illumination in json.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"q",
                    "type":"STRING",
                    "description":"Query parameter based on which data is sent back. It could be following:\n\nLatitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508\ncity name e.g.: q=Paris\nUS zip e.g.: q=10001\nUK postcode e.g: q=SW1\nCanada postal code e.g: q=G2J\nmetar:<metar code> e.g: q=metar:EGLL\niata:<3 digit airport code> e.g: q=iata:DXB\nauto:ip IP lookup e.g: q=auto:ip\nIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
                    "default":"London"
                }
            ],
            "optional_parameters":[
                {
                    "name":"dt",
                    "type":"DATE (YYYY-MM-DD)",
                    "description":"Date",
                    "default":""
                }
            ],
            "code":"import requests\n\nurl = \"https://weatherapi-com.p.rapidapi.com/astronomy.json\"\nquerystring = {\"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"weatherapi-com.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Search/Autocomplete API",
            "url":"https://weatherapi-com.p.rapidapi.com/search.json",
            "description":"Search or Autocomplete API returns matching cities and towns.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"q",
                    "type":"STRING",
                    "description":"Query parameter based on which data is sent back. It could be following:\n\nLatitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508\ncity name e.g.: q=Paris\nUS zip e.g.: q=10001\nUK postcode e.g: q=SW1\nCanada postal code e.g: q=G2J\nmetar:<metar code> e.g: q=metar:EGLL\niata:<3 digit airport code> e.g: q=iata:DXB\nauto:ip IP lookup e.g: q=auto:ip\nIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
                    "default":""
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://weatherapi-com.p.rapidapi.com/search.json\"\nquerystring = {\"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"weatherapi-com.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        }
    ]
}