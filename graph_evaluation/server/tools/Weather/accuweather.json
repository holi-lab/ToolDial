{
    "product_id": "639",
    "tool_description": "AccuWeather provides hourly and Minute by Minute\u2122 forecasts with Superior Accuracy\u2122.",
    "home_url": "https://rapidapi.com/stefan.skliarov/api/AccuWeather/",
    "name": "AccuWeather",
    "title": "AccuWeather",
    "pricing": "FREE",
    "tool_name": "AccuWeather",
    "score": {
        "avgServiceLevel": 0,
        "avgLatency": 127260,
        "avgSuccessRate": 0,
        "popularityScore": 4.4,
        "__typename": "Score"
    },
    "host": "AccuWeatherstefan-skliarovV1.p.rapidapi.com",
    "api_list": [
        {
            "name": "get24HoursConditionsByLocationKey",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/get24HoursConditionsByLocationKey",
            "description": "Historical Current Conditions (past 24 hours) By LocationKey",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "locationKey",
                    "type": "STRING",
                    "description": "Unique ID used to search for a specific location",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                },
                {
                    "name": "details",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies whether or not to include a truncated version of the current conditions object or the full object",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/get24HoursConditionsByLocationKey\"\nquerystring = {\"apiKey\": \"\", \"language\": \"\", \"locationKey\": \"\", \"details\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/get24HoursConditionsByLocationKey\"\nquerystring = {\"apiKey\": \"\", \"language\": \"\", \"locationKey\": \"\", \"details\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "get6HoursConditionsByLocationKey",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/get6HoursConditionsByLocationKey",
            "description": "Historical Current Conditions (past 6 hours) By LocationKey",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "locationKey",
                    "type": "STRING",
                    "description": "Unique ID used to search for a specific location",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "details",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies whether or not to include a truncated version of the current conditions object or the full object",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/get6HoursConditionsByLocationKey\"\nquerystring = {\"details\": \"\", \"locationKey\": \"\", \"language\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/get6HoursConditionsByLocationKey\"\nquerystring = {\"details\": \"\", \"locationKey\": \"\", \"language\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCurrentConditionsByLocationKey",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getCurrentConditionsByLocationKey",
            "description": "Current Conditions By LocationKey",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "locationKey",
                    "type": "STRING",
                    "description": "Unique ID used to search for a specific location",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                },
                {
                    "name": "details",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies whether or not to include a truncated version of the current conditions object or the full object",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getCurrentConditionsByLocationKey\"\nquerystring = {\"locationKey\": \"\", \"apiKey\": \"\", \"language\": \"\", \"details\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getCurrentConditionsByLocationKey\"\nquerystring = {\"locationKey\": \"\", \"apiKey\": \"\", \"language\": \"\", \"details\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCurrentConditionsForTopCities",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getCurrentConditionsForTopCities",
            "description": "Returns current conditions data for the top 50, 100, or 150 cities worldwide, based on rank.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "group",
                    "type": "SELECT",
                    "description": "Number of cities",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "details",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies whether or not to include a truncated version of the current conditions object or the full object",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getCurrentConditionsForTopCities\"\nquerystring = {\"group\": \"\", \"details\": \"\", \"language\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getCurrentConditionsForTopCities\"\nquerystring = {\"group\": \"\", \"details\": \"\", \"language\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getDailyForecastByLocationKey",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getDailyForecastByLocationKey",
            "description": "Daily Forecasts By Location Key",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "days",
                    "type": "SELECT",
                    "description": "Number of days to get forecast for",
                    "default": ""
                },
                {
                    "name": "locationKey",
                    "type": "STRING",
                    "description": "Unique ID used to search for a specific location",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "details",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies whether or not to include a truncated version of the current conditions object or the full object",
                    "default": ""
                },
                {
                    "name": "metric",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies to return the data in either metric (=true) or imperial units ",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getDailyForecastByLocationKey\"\nquerystring = {\"apiKey\": \"\", \"days\": \"\", \"details\": \"\", \"metric\": \"\", \"language\": \"\", \"locationKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getDailyForecastByLocationKey\"\nquerystring = {\"apiKey\": \"\", \"days\": \"\", \"details\": \"\", \"metric\": \"\", \"language\": \"\", \"locationKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getHoursForecastByLocationKey",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getHoursForecastByLocationKey",
            "description": "Hourly Forecasts By Location Key",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "locationKey",
                    "type": "STRING",
                    "description": "Unique ID used to search for a specific location",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "hours",
                    "type": "SELECT",
                    "description": "Number of hours to get forecast for",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                },
                {
                    "name": "metric",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies to return the data in either metric (=true) or imperial units ",
                    "default": ""
                },
                {
                    "name": "details",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies whether or not to include a truncated version of the current conditions object or the full object",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getHoursForecastByLocationKey\"\nquerystring = {\"language\": \"\", \"locationKey\": \"\", \"metric\": \"\", \"details\": \"\", \"apiKey\": \"\", \"hours\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getHoursForecastByLocationKey\"\nquerystring = {\"language\": \"\", \"locationKey\": \"\", \"metric\": \"\", \"details\": \"\", \"apiKey\": \"\", \"hours\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getImagesByLocationKey",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getImagesByLocationKey",
            "description": "Radar and Satellite Images by LocationKey",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "resolution",
                    "type": "SELECT",
                    "description": "Available resolutions: 480x480, 640x480, 1024x1024",
                    "default": ""
                },
                {
                    "name": "locationKey",
                    "type": "STRING",
                    "description": "Unique ID used to search for a specific location",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getImagesByLocationKey\"\nquerystring = {\"language\": \"\", \"apiKey\": \"\", \"resolution\": \"\", \"locationKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getImagesByLocationKey\"\nquerystring = {\"language\": \"\", \"apiKey\": \"\", \"resolution\": \"\", \"locationKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getIndicesByGroupId",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getIndicesByGroupId",
            "description": "Metadata List of Indices in a Specific Group",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "Unique ID used to search for a specific group",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getIndicesByGroupId\"\nquerystring = {\"apiKey\": \"\", \"language\": \"\", \"groupId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getIndicesByGroupId\"\nquerystring = {\"apiKey\": \"\", \"language\": \"\", \"groupId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getLocationIndicesByGroupId",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getLocationIndicesByGroupId",
            "description": "Daily Indices By LocationKey and GroupId",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "days",
                    "type": "SELECT",
                    "description": "Days for get indice for",
                    "default": ""
                },
                {
                    "name": "locationKey",
                    "type": "STRING",
                    "description": "Unique ID used to search for a specific location",
                    "default": ""
                },
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "Unique ID used to search for a specific group",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                },
                {
                    "name": "details",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies whether or not to include a truncated version of the current conditions object or the full object",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getLocationIndicesByGroupId\"\nquerystring = {\"apiKey\": \"\", \"language\": \"\", \"days\": \"\", \"locationKey\": \"\", \"details\": \"\", \"groupId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getLocationIndicesByGroupId\"\nquerystring = {\"apiKey\": \"\", \"language\": \"\", \"days\": \"\", \"locationKey\": \"\", \"details\": \"\", \"groupId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getLocationIndicesByIndexId",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getLocationIndicesByIndexId",
            "description": "Daily Indices By LocationKey and IndexId",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "locationKey",
                    "type": "STRING",
                    "description": "Unique ID used to search for a specific location",
                    "default": ""
                },
                {
                    "name": "indexId",
                    "type": "STRING",
                    "description": "Unique ID used to search for a specific index",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "days",
                    "type": "SELECT",
                    "description": "Days for get indice for",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "details",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies whether or not to include a truncated version of the current conditions object or the full object",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getLocationIndicesByIndexId\"\nquerystring = {\"locationKey\": \"\", \"details\": \"\", \"indexId\": \"\", \"apiKey\": \"\", \"language\": \"\", \"days\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getLocationIndicesByIndexId\"\nquerystring = {\"locationKey\": \"\", \"details\": \"\", \"indexId\": \"\", \"apiKey\": \"\", \"language\": \"\", \"days\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getLocationIndicesByLocationKey",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getLocationIndicesByLocationKey",
            "description": "Daily Indices By LocationKey",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "days",
                    "type": "SELECT",
                    "description": "Days for get indice for",
                    "default": ""
                },
                {
                    "name": "locationKey",
                    "type": "STRING",
                    "description": "Unique ID used to search for a specific location",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "details",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies whether or not to include a truncated version of the current conditions object or the full object",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getLocationIndicesByLocationKey\"\nquerystring = {\"apiKey\": \"\", \"days\": \"\", \"details\": \"\", \"locationKey\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getLocationIndicesByLocationKey\"\nquerystring = {\"apiKey\": \"\", \"days\": \"\", \"details\": \"\", \"locationKey\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getNeighborCitiesByLocationKey",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getNeighborCitiesByLocationKey",
            "description": "Returns information about neighboring cities, by location key.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "locationKey",
                    "type": "STRING",
                    "description": "Unique ID used to search for a specific location",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                },
                {
                    "name": "details",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies whether or not to include a truncated version of the current conditions object or the full object",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getNeighborCitiesByLocationKey\"\nquerystring = {\"language\": \"\", \"apiKey\": \"\", \"details\": \"\", \"locationKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getNeighborCitiesByLocationKey\"\nquerystring = {\"language\": \"\", \"apiKey\": \"\", \"details\": \"\", \"locationKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleActiveCyclone",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getSingleActiveCyclone",
            "description": "Returns basic information about a specific tropical cyclone that is currrently active in the specified basin.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "cycloneId",
                    "type": "NUMBER",
                    "description": "Numeric id of the tropical cyclone",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "basinId",
                    "type": "SELECT",
                    "description": "Unique id used to identify a basin (NP, SP, NI, SI, AL, EP )",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getSingleActiveCyclone\"\nquerystring = {\"cycloneId\": \"\", \"apiKey\": \"\", \"basinId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getSingleActiveCyclone\"\nquerystring = {\"cycloneId\": \"\", \"apiKey\": \"\", \"basinId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleCyclone",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getSingleCyclone",
            "description": "Get cyclone information",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "year",
                    "type": "DATEPICKER",
                    "description": "Date in format yyyy",
                    "default": ""
                },
                {
                    "name": "basinId",
                    "type": "SELECT",
                    "description": "Unique id used to identify a basin (NP, SP, NI, SI, AL, EP )",
                    "default": ""
                },
                {
                    "name": "cycloneId",
                    "type": "NUMBER",
                    "description": "Numeric id of the tropical cyclone",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getSingleCyclone\"\nquerystring = {\"year\": \"\", \"basinId\": \"\", \"cycloneId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getSingleCyclone\"\nquerystring = {\"year\": \"\", \"basinId\": \"\", \"cycloneId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleCycloneForecast",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getSingleCycloneForecast",
            "description": "Returns all recorded forecast information for a specific tropical cyclone.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "basinId",
                    "type": "SELECT",
                    "description": "Unique id used to identify a basin (NP, SP, NI, SI, AL, EP )",
                    "default": ""
                },
                {
                    "name": "year",
                    "type": "DATEPICKER",
                    "description": "Date in format yyyy",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "cycloneId",
                    "type": "NUMBER",
                    "description": "Numeric id of the tropical cyclone",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getSingleCycloneForecast\"\nquerystring = {\"basinId\": \"\", \"year\": \"\", \"apiKey\": \"\", \"cycloneId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getSingleCycloneForecast\"\nquerystring = {\"basinId\": \"\", \"year\": \"\", \"apiKey\": \"\", \"cycloneId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleCyclonePosition",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getSingleCyclonePosition",
            "description": "Returns current (most recently updated) position information for a specific tropical cyclone.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "year",
                    "type": "DATEPICKER",
                    "description": "Date in format yyyy",
                    "default": ""
                },
                {
                    "name": "basinId",
                    "type": "SELECT",
                    "description": "Unique id used to identify a basin (NP, SP, NI, SI, AL, EP )",
                    "default": ""
                },
                {
                    "name": "cycloneId",
                    "type": "NUMBER",
                    "description": "Numeric id of the tropical cyclone",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getSingleCyclonePosition\"\nquerystring = {\"year\": \"\", \"basinId\": \"\", \"cycloneId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getSingleCyclonePosition\"\nquerystring = {\"year\": \"\", \"basinId\": \"\", \"cycloneId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleGroupTranslations",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getSingleGroupTranslations",
            "description": "List of Translations for a Specific Group",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "groupId",
                    "type": "STRING",
                    "description": "Unique ID of a translation group",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getSingleGroupTranslations\"\nquerystring = {\"groupId\": \"\", \"apiKey\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getSingleGroupTranslations\"\nquerystring = {\"groupId\": \"\", \"apiKey\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleIndice",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getSingleIndice",
            "description": "Returns metadata for a specific index type.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "indiceId",
                    "type": "STRING",
                    "description": "Unique ID used to search for a specific indice",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getSingleIndice\"\nquerystring = {\"apiKey\": \"\", \"indiceId\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getSingleIndice\"\nquerystring = {\"apiKey\": \"\", \"indiceId\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getWeatherAlarmByLocationKey",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getWeatherAlarmByLocationKey",
            "description": "DailyWeather Alarms By Location Key ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "days",
                    "type": "SELECT",
                    "description": "Days for get indice for",
                    "default": ""
                },
                {
                    "name": "locationKey",
                    "type": "STRING",
                    "description": "Unique ID used to search for a specific location",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getWeatherAlarmByLocationKey\"\nquerystring = {\"apiKey\": \"\", \"days\": \"\", \"locationKey\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getWeatherAlarmByLocationKey\"\nquerystring = {\"apiKey\": \"\", \"days\": \"\", \"locationKey\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listActiveCyclons",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listActiveCyclons",
            "description": "Returns basic information about tropical cyclones that are currrently active",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listActiveCyclons\"\nquerystring = {\"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listActiveCyclons\"\nquerystring = {\"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listActiveCyclonsByBasin",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listActiveCyclonsByBasin",
            "description": "Returns basic information about tropical cyclones that are currrently active in the specified basin.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "basinId",
                    "type": "SELECT",
                    "description": "Unique id used to identify a basin (NP, SP, NI, SI, AL, EP )",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listActiveCyclonsByBasin\"\nquerystring = {\"apiKey\": \"\", \"basinId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listActiveCyclonsByBasin\"\nquerystring = {\"apiKey\": \"\", \"basinId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listAdminAreas",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listAdminAreas",
            "description": "Returns basic information about administrative areas in the specified country.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "countryCode",
                    "type": "STRING",
                    "description": "Country code",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Integer, along with the limit (25) that determines the first resource to be returned.",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listAdminAreas\"\nquerystring = {\"countryCode\": \"\", \"offset\": \"\", \"apiKey\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listAdminAreas\"\nquerystring = {\"countryCode\": \"\", \"offset\": \"\", \"apiKey\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listCountries",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listCountries",
            "description": "Returns basic information about all countries within a specified region.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "regionCode",
                    "type": "STRING",
                    "description": "Region code",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listCountries\"\nquerystring = {\"apiKey\": \"\", \"language\": \"\", \"regionCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listCountries\"\nquerystring = {\"apiKey\": \"\", \"language\": \"\", \"regionCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listCyclonesByYear",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listCyclonesByYear",
            "description": "Returns basic information about tropical cyclones for a specific year and basin.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "year",
                    "type": "DATEPICKER",
                    "description": "Date in format yyyy",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "basinId",
                    "type": "SELECT",
                    "description": "Unique id used to identify a basin (NP, SP, NI, SI, AL, EP )",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listCyclonesByYear\"\nquerystring = {\"year\": \"\", \"apiKey\": \"\", \"basinId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listCyclonesByYear\"\nquerystring = {\"year\": \"\", \"apiKey\": \"\", \"basinId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listDailyIndices",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listDailyIndices",
            "description": "Metadata List of Daily Indices",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listDailyIndices\"\nquerystring = {\"apiKey\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listDailyIndices\"\nquerystring = {\"apiKey\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listDailyIndicesGroups",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listDailyIndicesGroups",
            "description": "Metadata List of Index Groups",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listDailyIndicesGroups\"\nquerystring = {\"language\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listDailyIndicesGroups\"\nquerystring = {\"language\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listLanguages",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listLanguages",
            "description": "List all Languages",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listLanguages\"\nquerystring = {\"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listLanguages\"\nquerystring = {\"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listRegions",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listRegions",
            "description": "Returns basic information about all regions.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listRegions\"\nquerystring = {\"apiKey\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listRegions\"\nquerystring = {\"apiKey\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listSingleCyclonePositions",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listSingleCyclonePositions",
            "description": "Returns all recorded position information for a specific tropical cyclone",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "cycloneId",
                    "type": "NUMBER",
                    "description": "Numeric id of the tropical cyclone",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "year",
                    "type": "DATEPICKER",
                    "description": "Date in format yyyy",
                    "default": ""
                },
                {
                    "name": "basinId",
                    "type": "SELECT",
                    "description": "Unique id used to identify a basin (NP, SP, NI, SI, AL, EP )",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listSingleCyclonePositions\"\nquerystring = {\"cycloneId\": \"\", \"apiKey\": \"\", \"year\": \"\", \"basinId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listSingleCyclonePositions\"\nquerystring = {\"cycloneId\": \"\", \"apiKey\": \"\", \"year\": \"\", \"basinId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listTopCities",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listTopCities",
            "description": "Returns information for the top 50, 100, or 150 cities, worldwide.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "group",
                    "type": "NUMBER",
                    "description": "Integer value (50, 100, or 150) that specifies the number of cities to return",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "details",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies whether or not to include a truncated version of the current conditions object or the full object",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listTopCities\"\nquerystring = {\"details\": \"\", \"group\": \"\", \"language\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listTopCities\"\nquerystring = {\"details\": \"\", \"group\": \"\", \"language\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listTranslationGroups",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listTranslationGroups",
            "description": "List of Available Translation Groups",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listTranslationGroups\"\nquerystring = {\"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/listTranslationGroups\"\nquerystring = {\"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchByGeoposition",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchByGeoposition",
            "description": "Returns information about a specific location, by GeoPosition (Latitude and Longitude).",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "coordinates",
                    "type": "MAP",
                    "description": "Text to search for. In this case, the text should be a comma-separated lat/lon pair (lat,lon).",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "details",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies whether or not to include a truncated version of the current conditions object or the full object",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                },
                {
                    "name": "toplevel",
                    "type": "SELECT",
                    "description": "When toplevel=true, the city with the highest rank will be returned. Large cities have higher rank than the neighborhoods within them, so toplevel=true delivers a more generic location result. (Example: 40.73,-74.00 returns Greenwich Village, NY when toplevel=false. If toplevel=true, the same lat/lon pair will return New York, NY.)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchByGeoposition\"\nquerystring = {\"coordinates\": \"\", \"details\": \"\", \"language\": \"\", \"toplevel\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchByGeoposition\"\nquerystring = {\"coordinates\": \"\", \"details\": \"\", \"language\": \"\", \"toplevel\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchByIp",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchByIp",
            "description": "Returns information about a specific location, by IP Address.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ipAddress",
                    "type": "STRING",
                    "description": "Text to search for. In this case, the text should be a valid ip address.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "details",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies whether or not to include a truncated version of the current conditions object or the full object",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchByIp\"\nquerystring = {\"ipAddress\": \"\", \"details\": \"\", \"apiKey\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchByIp\"\nquerystring = {\"ipAddress\": \"\", \"details\": \"\", \"apiKey\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchByLocationKey",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchByLocationKey",
            "description": "Returns information about a specific location, by location key. ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "locationKey",
                    "type": "STRING",
                    "description": "Unique ID used to search for a specific location",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "details",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies whether or not to include a truncated version of the current conditions object or the full object",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchByLocationKey\"\nquerystring = {\"details\": \"\", \"locationKey\": \"\", \"language\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchByLocationKey\"\nquerystring = {\"details\": \"\", \"locationKey\": \"\", \"language\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchCity",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchCity",
            "description": "Returns information for an array of cities that match the search text.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Text to search for.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Integer, along with the limit (25) that determines the first resource to be returned.",
                    "default": ""
                },
                {
                    "name": "alias",
                    "type": "SELECT",
                    "description": "Enumeration that specifies when alias locations should be included in the results. By default, an alias will only be returned if no official match for the search text was found. Enumeration values: Never or Always",
                    "default": ""
                },
                {
                    "name": "details",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies whether or not to include a truncated version of the current conditions object or the full object",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchCity\"\nquerystring = {\"language\": \"\", \"apiKey\": \"\", \"offset\": \"\", \"alias\": \"\", \"query\": \"\", \"details\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchCity\"\nquerystring = {\"language\": \"\", \"apiKey\": \"\", \"offset\": \"\", \"alias\": \"\", \"query\": \"\", \"details\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchCityWithAdminCode",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchCityWithAdminCode",
            "description": "Returns information for an array of cities that match the search text.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "countryCode",
                    "type": "STRING",
                    "description": "Code of country",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Text to search for.",
                    "default": ""
                },
                {
                    "name": "adminCode",
                    "type": "STRING",
                    "description": "Code of administrative territory",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "alias",
                    "type": "SELECT",
                    "description": "Enumeration that specifies when alias locations should be included in the results. By default, an alias will only be returned if no official match for the search text was found. Enumeration values: Never or Always",
                    "default": ""
                },
                {
                    "name": "details",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies whether or not to include a truncated version of the current conditions object or the full object",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Integer, along with the limit (25) that determines the first resource to be returned.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchCityWithAdminCode\"\nquerystring = {\"countryCode\": \"\", \"alias\": \"\", \"details\": \"\", \"query\": \"\", \"language\": \"\", \"adminCode\": \"\", \"apiKey\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchCityWithAdminCode\"\nquerystring = {\"countryCode\": \"\", \"alias\": \"\", \"details\": \"\", \"query\": \"\", \"language\": \"\", \"adminCode\": \"\", \"apiKey\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchCityWithCountryCode",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchCityWithCountryCode",
            "description": "Returns information for an array of cities that match the search text.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Text to search for.",
                    "default": ""
                },
                {
                    "name": "countryCode",
                    "type": "STRING",
                    "description": "Code of country",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "details",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies whether or not to include a truncated version of the current conditions object or the full object",
                    "default": ""
                },
                {
                    "name": "alias",
                    "type": "SELECT",
                    "description": "Enumeration that specifies when alias locations should be included in the results. By default, an alias will only be returned if no official match for the search text was found. Enumeration values: Never or Always",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Integer, along with the limit (25) that determines the first resource to be returned.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchCityWithCountryCode\"\nquerystring = {\"apiKey\": \"\", \"details\": \"\", \"query\": \"\", \"countryCode\": \"\", \"alias\": \"\", \"language\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchCityWithCountryCode\"\nquerystring = {\"apiKey\": \"\", \"details\": \"\", \"query\": \"\", \"countryCode\": \"\", \"alias\": \"\", \"language\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchLocation",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchLocation",
            "description": "Returns information for an array of locations that match the search text.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Text to search for.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "alias",
                    "type": "SELECT",
                    "description": "Enumeration that specifies when alias locations should be included in the results. By default, an alias will only be returned if no official match for the search text was found. Enumeration values: Never or Always",
                    "default": ""
                },
                {
                    "name": "details",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies whether or not to include a truncated version of the current conditions object or the full object",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Integer, along with the limit (25) that determines the first resource to be returned.",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchLocation\"\nquerystring = {\"alias\": \"\", \"query\": \"\", \"details\": \"\", \"offset\": \"\", \"apiKey\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchLocation\"\nquerystring = {\"alias\": \"\", \"query\": \"\", \"details\": \"\", \"offset\": \"\", \"apiKey\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchLocationWithAdminCode",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchLocationWithAdminCode",
            "description": "Returns information for an array of locations that match the search text.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "adminCode",
                    "type": "STRING",
                    "description": "Code of administrative territory",
                    "default": ""
                },
                {
                    "name": "countryCode",
                    "type": "STRING",
                    "description": "Code of country",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Text to search for.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Integer, along with the limit (25) that determines the first resource to be returned.",
                    "default": ""
                },
                {
                    "name": "alias",
                    "type": "SELECT",
                    "description": "Enumeration that specifies when alias locations should be included in the results. By default, an alias will only be returned if no official match for the search text was found. Enumeration values: Never or Always",
                    "default": ""
                },
                {
                    "name": "details",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies whether or not to include a truncated version of the current conditions object or the full object",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchLocationWithAdminCode\"\nquerystring = {\"language\": \"\", \"apiKey\": \"\", \"adminCode\": \"\", \"offset\": \"\", \"countryCode\": \"\", \"alias\": \"\", \"details\": \"\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchLocationWithAdminCode\"\nquerystring = {\"language\": \"\", \"apiKey\": \"\", \"adminCode\": \"\", \"offset\": \"\", \"countryCode\": \"\", \"alias\": \"\", \"details\": \"\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchLocationWithCountryCode",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchLocationWithCountryCode",
            "description": "Returns information for an array of locations that match the search text.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Text to search for.",
                    "default": ""
                },
                {
                    "name": "countryCode",
                    "type": "STRING",
                    "description": "Code of country",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Integer, along with the limit (25) that determines the first resource to be returned.",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                },
                {
                    "name": "alias",
                    "type": "SELECT",
                    "description": "Enumeration that specifies when alias locations should be included in the results. By default, an alias will only be returned if no official match for the search text was found. Enumeration values: Never or Always",
                    "default": ""
                },
                {
                    "name": "details",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies whether or not to include a truncated version of the current conditions object or the full object",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchLocationWithCountryCode\"\nquerystring = {\"offset\": \"\", \"query\": \"\", \"language\": \"\", \"countryCode\": \"\", \"alias\": \"\", \"apiKey\": \"\", \"details\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchLocationWithCountryCode\"\nquerystring = {\"offset\": \"\", \"query\": \"\", \"language\": \"\", \"countryCode\": \"\", \"alias\": \"\", \"apiKey\": \"\", \"details\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchLocations",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchLocations",
            "description": "Returns basic information about locations matching an autocomplete of the search text.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Text to search for.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchLocations\"\nquerystring = {\"language\": \"\", \"query\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchLocations\"\nquerystring = {\"language\": \"\", \"query\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchPoi",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchPoi",
            "description": "Returns information for an array of Points of Interest that match the search text.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Text to search for.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                },
                {
                    "name": "details",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies whether or not to include a truncated version of the current conditions object or the full object",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchPoi\"\nquerystring = {\"language\": \"\", \"apiKey\": \"\", \"details\": \"\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchPoi\"\nquerystring = {\"language\": \"\", \"apiKey\": \"\", \"details\": \"\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchPoiWithAdminCode",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchPoiWithAdminCode",
            "description": "Returns information for an array of pois that match the search text.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Text to search for.",
                    "default": ""
                },
                {
                    "name": "countryCode",
                    "type": "STRING",
                    "description": "Code of country",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "adminCode",
                    "type": "STRING",
                    "description": "Code of administrative territory",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "details",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies whether or not to include a truncated version of the current conditions object or the full object",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchPoiWithAdminCode\"\nquerystring = {\"query\": \"\", \"details\": \"\", \"countryCode\": \"\", \"apiKey\": \"\", \"adminCode\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchPoiWithAdminCode\"\nquerystring = {\"query\": \"\", \"details\": \"\", \"countryCode\": \"\", \"apiKey\": \"\", \"adminCode\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchPoiWithCountryCode",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchPoiWithCountryCode",
            "description": "Returns information for an array of pois that match the search text.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Text to search for.",
                    "default": ""
                },
                {
                    "name": "countryCode",
                    "type": "STRING",
                    "description": "Code of country",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "details",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies whether or not to include a truncated version of the current conditions object or the full object",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchPoiWithCountryCode\"\nquerystring = {\"apiKey\": \"\", \"query\": \"\", \"details\": \"\", \"language\": \"\", \"countryCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchPoiWithCountryCode\"\nquerystring = {\"apiKey\": \"\", \"query\": \"\", \"details\": \"\", \"language\": \"\", \"countryCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchPostalCode",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchPostalCode",
            "description": "Returns information for an array of postal codes that match the search text.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Text to search for.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                },
                {
                    "name": "details",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies whether or not to include a truncated version of the current conditions object or the full object",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchPostalCode\"\nquerystring = {\"language\": \"\", \"apiKey\": \"\", \"details\": \"\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchPostalCode\"\nquerystring = {\"language\": \"\", \"apiKey\": \"\", \"details\": \"\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchPostalCodeWithCountryCode",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchPostalCodeWithCountryCode",
            "description": "Returns information for an array of postal codes that match the search text.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "countryCode",
                    "type": "STRING",
                    "description": "Code of country",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Text to search for.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "details",
                    "type": "SELECT",
                    "description": "Boolean value (true or false) that specifies whether or not to include a truncated version of the current conditions object or the full object",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "SELECT",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchPostalCodeWithCountryCode\"\nquerystring = {\"details\": \"\", \"apiKey\": \"\", \"language\": \"\", \"countryCode\": \"\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/searchPostalCodeWithCountryCode\"\nquerystring = {\"details\": \"\", \"apiKey\": \"\", \"language\": \"\", \"countryCode\": \"\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAlertsByLocationKey",
            "url": "https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getAlertsByLocationKey",
            "description": "Alerts By LocationKey",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "locationKey",
                    "type": "STRING",
                    "description": "Unique Id used to search for location",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "STRING",
                    "description": "Your API key",
                    "default": ""
                },
                {
                    "name": "locationKey",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "details",
                    "type": "STRING",
                    "description": "Boolean value (true or false) that specifies whether or not to include a truncated version of the current conditions object or the full object",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "String indicating the language in which to return the resource",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getAlertsByLocationKey\"\nquerystring = {\"details\": \"\", \"locationKey\": \"\", \"apiKey\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AccuWeatherstefan-skliarovV1.p.rapidapi.com/getAlertsByLocationKey\"\nquerystring = {\"details\": \"\", \"locationKey\": \"\", \"apiKey\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AccuWeatherstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}