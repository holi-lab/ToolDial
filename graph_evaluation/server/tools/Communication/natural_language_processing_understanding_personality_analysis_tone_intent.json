{
    "product_id": "58f6d891e4b0d7c7f0a5a17d",
    "tool_description": "This API provides text analysis for Tone, Sentiment, Summarization, Personality Analysis, and more.\r\n\r\nThis API can be used for:\r\nPart of Speech Tagging\r\nNamed Entity Recognition\r\nSentence Disambiguation\r\nKeyWord Extraction\r\nSummarization and Sentence Significance\r\nSentiment Analysis\r\nAlliteration Detection\r\nWord Sense Disambiguation\r\nClustering\r\nLogistic Regression Scoring\r\nProminence\r\nTagging for Latent Semantic Indexing\r\nTagging for Singular Value Decomposition\r\nPhonetic Decomposition\r\nReading Difficulty Modeling\r\nTechnical Difficulty Modeling\r\nSpelling Correction\r\nString Comparison and Plagiarism Detection\r\nAuthor Profiling\r\nPsychographic Modeling\r\nFact and Statistic Extraction\r\nIsm Extraction\r\nCharacter Language Modeling\r\n\r\nIt is also useful in the creation of ChatBots, SearchEngines, and KnolExtraction for Automated Documentation.",
    "home_url": "https://rapidapi.com/Recognant/api/natural-language-processing-understanding-personality-analysis-tone-intent/",
    "name": "Natural Language Processing - Understanding - Personality Analysis - Tone - Intent",
    "title": "Natural Language Processing - Understanding - Personality Analysis - Tone - Intent",
    "pricing": "FREEMIUM",
    "tool_name": "Natural Language Processing - Understanding - Personality Analysis - Tone - Intent",
    "score": {
        "avgServiceLevel": 0,
        "avgLatency": 180022,
        "avgSuccessRate": 0,
        "popularityScore": 0,
        "__typename": "Score"
    },
    "host": "nlp-nlu.p.rapidapi.com",
    "api_list": [
        {
            "name": "Natural Language Processing - Understanding - Personality Analysis - Tone - Intent",
            "url": "https://nlp-nlu.p.rapidapi.com/superstring/",
            "description": "Natural Language Understanding-Computational Linguistics-Personality Profiling",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "The text to be analyzed.",
                    "default": "This is text to analyze. It can be quite long. Up to 10k characters."
                },
                {
                    "name": "m",
                    "type": "STRING",
                    "description": "The analysis to be performed",
                    "default": "tokencount,composition"
                }
            ],
            "code": "import requests\n\nurl = \"https://nlp-nlu.p.rapidapi.com/superstring/\"\nquerystring = {\"q\": \"This is text to analyze. It can be quite long. Up to 10k characters.\", \"m\": \"tokencount,composition\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nlp-nlu.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://nlp-nlu.p.rapidapi.com/superstring/\"\nquerystring = {\"q\": \"This is text to analyze. It can be quite long. Up to 10k characters.\", \"m\": \"tokencount,composition\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nlp-nlu.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        }
    ]
}