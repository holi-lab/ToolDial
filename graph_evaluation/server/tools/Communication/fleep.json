{
    "product_id": "660",
    "tool_description": "Fleep is a messenger for your teams and projects.",
    "home_url": "https://rapidapi.com/raygorodskij/api/Fleep/",
    "name": "Fleep",
    "title": "Fleep",
    "pricing": "FREE",
    "tool_name": "Fleep",
    "score": null,
    "host": "FleepraygorodskijV1.p.rapidapi.com",
    "api_list": [
        {
            "name": "addEmailAlias",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/addEmailAlias",
            "description": "Register email aliases for given account. Requires confirmation through email. All conversations are transferred under primary account as a result.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "Email to be registered as alias.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/addEmailAlias\"\nquerystring = {\"tokenId\": \"\", \"ticket\": \"\", \"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/addEmailAlias\"\nquerystring = {\"tokenId\": \"\", \"ticket\": \"\", \"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addMembersToConversation",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/addMembersToConversation",
            "description": "Add member to the conversation.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Add members to the conversation by id.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "Email address.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fromMessageNumber",
                    "type": "NUMBER",
                    "description": "Used to return next batch of changes.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/addMembersToConversation\"\nquerystring = {\"conversationId\": \"\", \"ticket\": \"\", \"email\": \"\", \"fromMessageNumber\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/addMembersToConversation\"\nquerystring = {\"conversationId\": \"\", \"ticket\": \"\", \"email\": \"\", \"fromMessageNumber\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addReminder",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/addReminder",
            "description": "Informs backend that given reminder has been show to the user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "reminderId",
                    "type": "STRING",
                    "description": "Reminder id.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/addReminder\"\nquerystring = {\"tokenId\": \"\", \"reminderId\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/addReminder\"\nquerystring = {\"tokenId\": \"\", \"reminderId\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "autojoinConversation",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/autojoinConversation",
            "description": "Autojoin conversation if not member yet.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "conversationUrlKey",
                    "type": "STRING",
                    "description": "Either convinfo.conversation_id or last part of convinfo.autojoin_url (KEY).",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/autojoinConversation\"\nquerystring = {\"conversationUrlKey\": \"\", \"ticket\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/autojoinConversation\"\nquerystring = {\"conversationUrlKey\": \"\", \"ticket\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "autojoinToTeam",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/autojoinToTeam",
            "description": "Autojoin team if not member yet. Autojoin url has following format https://fleep.io/team/KEY",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "teamUrlKey",
                    "type": "STRING",
                    "description": "Either teaminfo.team_id or last part of teaminfo.autojoin_url (KEY).",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/autojoinToTeam\"\nquerystring = {\"teamUrlKey\": \"\", \"ticket\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/autojoinToTeam\"\nquerystring = {\"teamUrlKey\": \"\", \"ticket\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "changeConversationTopic",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/changeConversationTopic",
            "description": "Change conversation topic.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Conversation id.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "topic",
                    "type": "STRING",
                    "description": "Conversation topic.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fromMessageNumber",
                    "type": "NUMBER",
                    "description": "Used to return next batch of changes.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/changeConversationTopic\"\nquerystring = {\"conversationId\": \"\", \"ticket\": \"\", \"topic\": \"\", \"tokenId\": \"\", \"fromMessageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/changeConversationTopic\"\nquerystring = {\"conversationId\": \"\", \"ticket\": \"\", \"topic\": \"\", \"tokenId\": \"\", \"fromMessageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "checkPermissions",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/checkPermissions",
            "description": "Check if account has modification rights on the conversation. Same check is done in all conversation services so this here mainly helps with testing and documentation at first.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Check permission conversation by id.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/checkPermissions\"\nquerystring = {\"conversationId\": \"\", \"ticket\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/checkPermissions\"\nquerystring = {\"conversationId\": \"\", \"ticket\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "configureConversationWebhook",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/configureConversationWebhook",
            "description": "Change webhook name and/or other settings.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Conversation by id.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "hookKey",
                    "type": "STRING",
                    "description": "Hook key.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "hookName",
                    "type": "STRING",
                    "description": "Name for hook.",
                    "default": ""
                },
                {
                    "name": "outgoingDisabled",
                    "type": "SELECT",
                    "description": "Whether outgoing URL functionality is disabled or not only relevant for plain and slack hooks.",
                    "default": ""
                },
                {
                    "name": "fromMessageNumber",
                    "type": "NUMBER",
                    "description": "Used to return next batch of changes.",
                    "default": ""
                },
                {
                    "name": "outgoingUrl",
                    "type": "STRING",
                    "description": "URL for outgoing messages only relevant for plain and slack hooks.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/configureConversationWebhook\"\nquerystring = {\"conversationId\": \"\", \"hookName\": \"\", \"ticket\": \"\", \"hookKey\": \"\", \"tokenId\": \"\", \"outgoingDisabled\": \"\", \"fromMessageNumber\": \"\", \"outgoingUrl\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/configureConversationWebhook\"\nquerystring = {\"conversationId\": \"\", \"hookName\": \"\", \"ticket\": \"\", \"hookKey\": \"\", \"tokenId\": \"\", \"outgoingDisabled\": \"\", \"fromMessageNumber\": \"\", \"outgoingUrl\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "configureTeam",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/configureTeam",
            "description": "Add or remove members and change team name.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "teamId",
                    "type": "STRING",
                    "description": "Id of team.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "addEmail",
                    "type": "STRING",
                    "description": "Email to be added to team.",
                    "default": ""
                },
                {
                    "name": "teamName",
                    "type": "STRING",
                    "description": "Team name.",
                    "default": ""
                },
                {
                    "name": "removeEmail",
                    "type": "STRING",
                    "description": "Email to be removed from team.",
                    "default": ""
                },
                {
                    "name": "isManaged",
                    "type": "SELECT",
                    "description": "Set team managed or not.",
                    "default": ""
                },
                {
                    "name": "isAutojoin",
                    "type": "SELECT",
                    "description": "Is autojoin enabled.",
                    "default": ""
                },
                {
                    "name": "addConversations",
                    "type": "LIST",
                    "description": "List of conversation id's to add.",
                    "default": ""
                },
                {
                    "name": "removeConversations",
                    "type": "LIST",
                    "description": "List of conversation id's to remove.",
                    "default": ""
                },
                {
                    "name": "addAccountIds",
                    "type": "LIST",
                    "description": "List of account ids to be added to team.",
                    "default": ""
                },
                {
                    "name": "removeAccountIds",
                    "type": "LIST",
                    "description": "List of account ids to be removed from team.",
                    "default": ""
                },
                {
                    "name": "kickAccountIds",
                    "type": "LIST",
                    "description": "List of account ids to be kicked from team , together with confistacion of managed history.",
                    "default": ""
                },
                {
                    "name": "addAdminIds",
                    "type": "LIST",
                    "description": "Add team admins.",
                    "default": ""
                },
                {
                    "name": "removeAdminIds",
                    "type": "LIST",
                    "description": "Remove team admins.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/configureTeam\"\nquerystring = {\"teamId\": \"\", \"ticket\": \"\", \"addEmail\": \"\", \"teamName\": \"\", \"tokenId\": \"\", \"removeEmail\": \"\", \"isManaged\": \"\", \"isAutojoin\": \"\", \"addConversations\": \"\", \"removeConversations\": \"\", \"addAccountIds\": \"\", \"removeAccountIds\": \"\", \"kickAccountIds\": \"\", \"addAdminIds\": \"\", \"removeAdminIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/configureTeam\"\nquerystring = {\"teamId\": \"\", \"ticket\": \"\", \"addEmail\": \"\", \"teamName\": \"\", \"tokenId\": \"\", \"removeEmail\": \"\", \"isManaged\": \"\", \"isAutojoin\": \"\", \"addConversations\": \"\", \"removeConversations\": \"\", \"addAccountIds\": \"\", \"removeAccountIds\": \"\", \"kickAccountIds\": \"\", \"addAdminIds\": \"\", \"removeAdminIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "confirmAccount",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/confirmAccount",
            "description": "Confirm receiving email with confirmation code and activate account.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "notificationId",
                    "type": "STRING",
                    "description": "notification token",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/confirmAccount\"\nquerystring = {\"ticket\": \"\", \"notificationId\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/confirmAccount\"\nquerystring = {\"ticket\": \"\", \"notificationId\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "confirmAndConfigureAccount",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/confirmAndConfigureAccount",
            "description": "Confirm receiving email and configure account.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "notificationId",
                    "type": "STRING",
                    "description": "notification token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fleepAddress",
                    "type": "STRING",
                    "description": "Fleep address.",
                    "default": ""
                },
                {
                    "name": "displayName",
                    "type": "STRING",
                    "description": "Display name.",
                    "default": ""
                },
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "User password.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/confirmAndConfigureAccount\"\nquerystring = {\"ticket\": \"\", \"fleepAddress\": \"\", \"displayName\": \"\", \"tokenId\": \"\", \"password\": \"\", \"notificationId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/confirmAndConfigureAccount\"\nquerystring = {\"ticket\": \"\", \"fleepAddress\": \"\", \"displayName\": \"\", \"tokenId\": \"\", \"password\": \"\", \"notificationId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "confirmEmailAlias",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/confirmEmailAlias",
            "description": "Confirm that alias email received confirmation code.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "notificationId",
                    "type": "STRING",
                    "description": "Notification id.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/confirmEmailAlias\"\nquerystring = {\"tokenId\": \"\", \"notificationId\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/confirmEmailAlias\"\nquerystring = {\"tokenId\": \"\", \"notificationId\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "convertConversation",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/convertConversation",
            "description": "Convert conversation to new API.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Convert conversation by id.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/convertConversation\"\nquerystring = {\"conversationId\": \"\", \"ticket\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/convertConversation\"\nquerystring = {\"conversationId\": \"\", \"ticket\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "copyMessage",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/copyMessage",
            "description": "Copy message from another chat.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "messageNumber",
                    "type": "NUMBER",
                    "description": "Number of pinned message.",
                    "default": ""
                },
                {
                    "name": "fromMessageNumber",
                    "type": "NUMBER",
                    "description": "Used to return next batch of changes.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Conversation id.",
                    "default": ""
                },
                {
                    "name": "toConversationId",
                    "type": "STRING",
                    "description": "Destination conversation.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/copyMessage\"\nquerystring = {\"tokenId\": \"\", \"messageNumber\": \"\", \"fromMessageNumber\": \"\", \"ticket\": \"\", \"conversationId\": \"\", \"toConversationId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/copyMessage\"\nquerystring = {\"tokenId\": \"\", \"messageNumber\": \"\", \"fromMessageNumber\": \"\", \"ticket\": \"\", \"conversationId\": \"\", \"toConversationId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createAccount",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/createAccount",
            "description": "Create new account and send verification email.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "Initial password to set.",
                    "default": ""
                },
                {
                    "name": "displayName",
                    "type": "STRING",
                    "description": "Name to be displayed in conversations.",
                    "default": ""
                },
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "User email.",
                    "default": ""
                },
                {
                    "name": "useCode",
                    "type": "SELECT",
                    "description": "Use flow based on registration code.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "referer",
                    "type": "STRING",
                    "description": "Page that referred used to fleep.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/createAccount\"\nquerystring = {\"password\": \"\", \"referer\": \"\", \"displayName\": \"\", \"email\": \"\", \"useCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/createAccount\"\nquerystring = {\"password\": \"\", \"referer\": \"\", \"displayName\": \"\", \"email\": \"\", \"useCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createConversation",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/createConversation",
            "description": "Create new conversation.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "topic",
                    "type": "STRING",
                    "description": "Conversation topic.",
                    "default": ""
                },
                {
                    "name": "subject",
                    "type": "STRING",
                    "description": "Subject for first message.",
                    "default": ""
                },
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "Email address.",
                    "default": ""
                },
                {
                    "name": "message",
                    "type": "STRING",
                    "description": "Initial message into the conversation.",
                    "default": ""
                },
                {
                    "name": "isDisclose",
                    "type": "SELECT",
                    "description": "Enable/disable auto disclose.",
                    "default": ""
                },
                {
                    "name": "isInvite",
                    "type": "SELECT",
                    "description": "Send out invite emails to fresh fleepers",
                    "default": ""
                },
                {
                    "name": "isAutojoin",
                    "type": "SELECT",
                    "description": "Allow autojoin to the conversation.",
                    "default": ""
                },
                {
                    "name": "fwdConversationId",
                    "type": "STRING",
                    "description": "Forwarded conversation id (for forwarding html messages).",
                    "default": ""
                },
                {
                    "name": "isList",
                    "type": "SELECT",
                    "description": "Behaves as mailing list. Set true for group conversations with more than two members as a default.",
                    "default": ""
                },
                {
                    "name": "mkConvType",
                    "type": "SELECT",
                    "description": "Conversation type.",
                    "default": ""
                },
                {
                    "name": "isManaged",
                    "type": "SELECT",
                    "description": "Is this conversation managed conversation.",
                    "default": ""
                },
                {
                    "name": "forkConversationId",
                    "type": "STRING",
                    "description": "Parent conversation.",
                    "default": ""
                },
                {
                    "name": "attachments",
                    "type": "LIST",
                    "description": "List of AttachmentInfos to be added to conversation.",
                    "default": ""
                },
                {
                    "name": "teamIds",
                    "type": "LIST",
                    "description": "Add teams to conversation.",
                    "default": ""
                },
                {
                    "name": "accountIds",
                    "type": "LIST",
                    "description": "List of account ids.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/createConversation\"\nquerystring = {\"topic\": \"\", \"ticket\": \"\", \"subject\": \"\", \"tokenId\": \"\", \"email\": \"\", \"message\": \"\", \"isDisclose\": \"\", \"isInvite\": \"\", \"isAutojoin\": \"\", \"fwdConversationId\": \"\", \"isList\": \"\", \"mkConvType\": \"\", \"isManaged\": \"\", \"forkConversationId\": \"\", \"attachments\": \"\", \"teamIds\": \"\", \"accountIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/createConversation\"\nquerystring = {\"topic\": \"\", \"ticket\": \"\", \"subject\": \"\", \"tokenId\": \"\", \"email\": \"\", \"message\": \"\", \"isDisclose\": \"\", \"isInvite\": \"\", \"isAutojoin\": \"\", \"fwdConversationId\": \"\", \"isList\": \"\", \"mkConvType\": \"\", \"isManaged\": \"\", \"forkConversationId\": \"\", \"attachments\": \"\", \"teamIds\": \"\", \"accountIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createConversationWebhook",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/createConversationWebhook",
            "description": "Create webhook for given conversation.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Conversation by id.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "hookName",
                    "type": "STRING",
                    "description": "Name for hook.",
                    "default": ""
                },
                {
                    "name": "outgoingUrl",
                    "type": "STRING",
                    "description": "URL for outgoing messages only relevant for plain and slack hooks.",
                    "default": ""
                },
                {
                    "name": "fromMessageNumber",
                    "type": "NUMBER",
                    "description": "Used to return next batch of changes.",
                    "default": ""
                },
                {
                    "name": "externalObjectId",
                    "type": "STRING",
                    "description": "Id of the object in external system that should be hooked only relevant for trello (board id).",
                    "default": ""
                },
                {
                    "name": "hookType",
                    "type": "SELECT",
                    "description": "Select hook type.",
                    "default": ""
                },
                {
                    "name": "outgoingDisabled",
                    "type": "SELECT",
                    "description": "Whether outgoing URL functionality is disabled or not only relevant for plain and slack hooks.",
                    "default": ""
                },
                {
                    "name": "externalAccountId",
                    "type": "STRING",
                    "description": "Id of the external account (see ExternalAccountInfo)only relevant for trello.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/createConversationWebhook\"\nquerystring = {\"hookName\": \"\", \"outgoingUrl\": \"\", \"tokenId\": \"\", \"fromMessageNumber\": \"\", \"externalObjectId\": \"\", \"hookType\": \"\", \"conversationId\": \"\", \"outgoingDisabled\": \"\", \"ticket\": \"\", \"externalAccountId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/createConversationWebhook\"\nquerystring = {\"hookName\": \"\", \"outgoingUrl\": \"\", \"tokenId\": \"\", \"fromMessageNumber\": \"\", \"externalObjectId\": \"\", \"hookType\": \"\", \"conversationId\": \"\", \"outgoingDisabled\": \"\", \"ticket\": \"\", \"externalAccountId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createTeam",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/createTeam",
            "description": "Create team with given members and conversations.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "teamName",
                    "type": "STRING",
                    "description": "Team name.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "addEmail",
                    "type": "STRING",
                    "description": "Email to be added to team.",
                    "default": ""
                },
                {
                    "name": "isManaged",
                    "type": "SELECT",
                    "description": "Set team managed or not.",
                    "default": ""
                },
                {
                    "name": "isAutojoin",
                    "type": "SELECT",
                    "description": "Is autojoin enabled.",
                    "default": ""
                },
                {
                    "name": "addConversations",
                    "type": "LIST",
                    "description": "List of conversation id's to add.",
                    "default": ""
                },
                {
                    "name": "addAccountIds",
                    "type": "LIST",
                    "description": "List of account ids to be added to team.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/createTeam\"\nquerystring = {\"tokenId\": \"\", \"addEmail\": \"\", \"ticket\": \"\", \"teamName\": \"\", \"isManaged\": \"\", \"isAutojoin\": \"\", \"addConversations\": \"\", \"addAccountIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/createTeam\"\nquerystring = {\"tokenId\": \"\", \"addEmail\": \"\", \"ticket\": \"\", \"teamName\": \"\", \"isManaged\": \"\", \"isAutojoin\": \"\", \"addConversations\": \"\", \"addAccountIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createVideoCall",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/createVideoCall",
            "description": "Create a new (video)call.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "provider",
                    "type": "STRING",
                    "description": "Call service provider (appear.in).",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Create video call by conversation id.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "roomName",
                    "type": "STRING",
                    "description": "If not provided, room will have an unique random name.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/createVideoCall\"\nquerystring = {\"tokenId\": \"\", \"roomName\": \"\", \"provider\": \"\", \"ticket\": \"\", \"conversationId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/createVideoCall\"\nquerystring = {\"tokenId\": \"\", \"roomName\": \"\", \"provider\": \"\", \"ticket\": \"\", \"conversationId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteConversation",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/deleteConversation",
            "description": "Remove conversation from your conversation list. If you don\u2019t leave conversation before deleting it will still reappear when someone writes in it.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Delete conversation by id.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/deleteConversation\"\nquerystring = {\"conversationId\": \"\", \"ticket\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/deleteConversation\"\nquerystring = {\"conversationId\": \"\", \"ticket\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteCurrentAvatar",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/deleteCurrentAvatar",
            "description": "Delete current avatar.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/deleteCurrentAvatar\"\nquerystring = {\"ticket\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/deleteCurrentAvatar\"\nquerystring = {\"ticket\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteMessageFromConversation",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/deleteMessageFromConversation",
            "description": "Delete message from conversation.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Conversation id.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "messageNumber",
                    "type": "NUMBER",
                    "description": "Number of pinned message.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fromMessageNumber",
                    "type": "NUMBER",
                    "description": "Used to return next batch of changes.",
                    "default": ""
                },
                {
                    "name": "attachmentId",
                    "type": "STRING",
                    "description": "Delete only given attachment.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/deleteMessageFromConversation\"\nquerystring = {\"conversationId\": \"\", \"tokenId\": \"\", \"messageNumber\": \"\", \"fromMessageNumber\": \"\", \"attachmentId\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/deleteMessageFromConversation\"\nquerystring = {\"conversationId\": \"\", \"tokenId\": \"\", \"messageNumber\": \"\", \"fromMessageNumber\": \"\", \"attachmentId\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "describeFofContact",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/describeFofContact",
            "description": "Provide description for the contact that will be displayed only to the user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "contactId",
                    "type": "STRING",
                    "description": "Contact id.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "phoneNumber",
                    "type": "STRING",
                    "description": "Set users phone number.",
                    "default": ""
                },
                {
                    "name": "contactName",
                    "type": "STRING",
                    "description": "Description to set.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/describeFofContact\"\nquerystring = {\"ticket\": \"\", \"contactId\": \"\", \"phoneNumber\": \"\", \"contactName\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/describeFofContact\"\nquerystring = {\"ticket\": \"\", \"contactId\": \"\", \"phoneNumber\": \"\", \"contactName\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "synchronizeTeam",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/synchronizeTeam",
            "description": "Synchronize team.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "ConversationId to prove team access.",
                    "default": ""
                },
                {
                    "name": "teamId",
                    "type": "STRING",
                    "description": "Team id.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/synchronizeTeam\"\nquerystring = {\"tokenId\": \"\", \"conversationId\": \"\", \"teamId\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/synchronizeTeam\"\nquerystring = {\"tokenId\": \"\", \"conversationId\": \"\", \"teamId\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "discloseAllConversationsHistory",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/discloseAllConversationsHistory",
            "description": "Disclose conversation history to members. All content of last membership is disclosed. ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Disclose conversation by id.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "Email address.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fromMessageNumber",
                    "type": "NUMBER",
                    "description": "Used to return next batch of changes.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/discloseAllConversationsHistory\"\nquerystring = {\"conversationId\": \"\", \"fromMessageNumber\": \"\", \"ticket\": \"\", \"email\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/discloseAllConversationsHistory\"\nquerystring = {\"conversationId\": \"\", \"fromMessageNumber\": \"\", \"ticket\": \"\", \"email\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "discloseConversationHistory",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/discloseConversationHistory",
            "description": "Disclose conversation history to members until given message.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "Email addresses.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Disclose conversation by id.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fromMessageNumber",
                    "type": "NUMBER",
                    "description": "Used to return next batch of changes.",
                    "default": ""
                },
                {
                    "name": "messageNumber",
                    "type": "NUMBER",
                    "description": "Disclose up to this message.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/discloseConversationHistory\"\nquerystring = {\"tokenId\": \"\", \"fromMessageNumber\": \"\", \"email\": \"\", \"messageNumber\": \"\", \"ticket\": \"\", \"conversationId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/discloseConversationHistory\"\nquerystring = {\"tokenId\": \"\", \"fromMessageNumber\": \"\", \"email\": \"\", \"messageNumber\": \"\", \"ticket\": \"\", \"conversationId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "dropIndexDataToCache",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/dropIndexDataToCache",
            "description": "Drop user\u2019s index from cache.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/dropIndexDataToCache\"\nquerystring = {\"ticket\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/dropIndexDataToCache\"\nquerystring = {\"ticket\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "editAccountSettings",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/editAccountSettings",
            "description": "Change account related settings.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "phoneNumber",
                    "type": "STRING",
                    "description": "User's phone number.",
                    "default": ""
                },
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "New password.",
                    "default": ""
                },
                {
                    "name": "primaryEmail",
                    "type": "STRING",
                    "description": "Set new primary email (it has to be confirmed as alias first).",
                    "default": ""
                },
                {
                    "name": "isAutomuteEnabled",
                    "type": "SELECT",
                    "description": "Enable/disable incoming email automute.",
                    "default": ""
                },
                {
                    "name": "isFullPrivacy",
                    "type": "SELECT",
                    "description": "Stop sending out reading writing activity.",
                    "default": ""
                },
                {
                    "name": "isNewsletterDisabled",
                    "type": "SELECT",
                    "description": "Enable/disable newsletter sending",
                    "default": ""
                },
                {
                    "name": "displayName",
                    "type": "STRING",
                    "description": "Name displayed instead of email in chats.",
                    "default": ""
                },
                {
                    "name": "clientSettings",
                    "type": "JSON",
                    "description": "Json encoded dict of changed client settings.",
                    "default": ""
                },
                {
                    "name": "fleepAddress",
                    "type": "STRING",
                    "description": "Set fleep address (results in error if account already has one).",
                    "default": ""
                },
                {
                    "name": "oldPassword",
                    "type": "STRING",
                    "description": "Required when submitting new password.",
                    "default": ""
                },
                {
                    "name": "emailInterval",
                    "type": "STRING",
                    "description": "Email interval.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/editAccountSettings\"\nquerystring = {\"phoneNumber\": \"\", \"password\": \"\", \"primaryEmail\": \"\", \"tokenId\": \"\", \"isAutomuteEnabled\": \"\", \"isFullPrivacy\": \"\", \"isNewsletterDisabled\": \"\", \"displayName\": \"\", \"clientSettings\": \"\", \"fleepAddress\": \"\", \"oldPassword\": \"\", \"emailInterval\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/editAccountSettings\"\nquerystring = {\"phoneNumber\": \"\", \"password\": \"\", \"primaryEmail\": \"\", \"tokenId\": \"\", \"isAutomuteEnabled\": \"\", \"isFullPrivacy\": \"\", \"isNewsletterDisabled\": \"\", \"displayName\": \"\", \"clientSettings\": \"\", \"fleepAddress\": \"\", \"oldPassword\": \"\", \"emailInterval\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "editConversationMessage",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/editConversationMessage",
            "description": "Edit conversation message.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "messageNumber",
                    "type": "NUMBER",
                    "description": "Number of pinned message.",
                    "default": ""
                },
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Conversation id.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "message",
                    "type": "STRING",
                    "description": "Message content.",
                    "default": ""
                },
                {
                    "name": "fromMessageNumber",
                    "type": "NUMBER",
                    "description": "Used to return next batch of changes.",
                    "default": ""
                },
                {
                    "name": "attachments",
                    "type": "LIST",
                    "description": "List of AttachmentInfo objects to be added.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/editConversationMessage\"\nquerystring = {\"tokenId\": \"\", \"messageNumber\": \"\", \"conversationId\": \"\", \"ticket\": \"\", \"message\": \"\", \"fromMessageNumber\": \"\", \"attachments\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/editConversationMessage\"\nquerystring = {\"tokenId\": \"\", \"messageNumber\": \"\", \"conversationId\": \"\", \"ticket\": \"\", \"message\": \"\", \"fromMessageNumber\": \"\", \"attachments\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "exportConversationHistory",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/exportConversationHistory",
            "description": "Export conversation history. User is notified when files are available for download.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "exportAction",
                    "type": "STRING",
                    "description": "What to export: history_all - conversation history, all file types.",
                    "default": ""
                },
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "If set, generate files for this conversation only,and return ConvInfo else return ContactInfo.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/exportConversationHistory\"\nquerystring = {\"ticket\": \"\", \"exportAction\": \"\", \"conversationId\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/exportConversationHistory\"\nquerystring = {\"ticket\": \"\", \"exportAction\": \"\", \"conversationId\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getActivity",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/getActivity",
            "description": "Show writing pen and/or pinboard editing status. This works both ways. Any call activates this conversation for this account. So to start receiving activity call with empty parameters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Conversation id.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "isWriting",
                    "type": "SELECT",
                    "description": "true - writing, false - cancel",
                    "default": ""
                },
                {
                    "name": "messageNumber",
                    "type": "NUMBER",
                    "description": "Edited flow or pinboard message number.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/getActivity\"\nquerystring = {\"ticket\": \"\", \"isWriting\": \"\", \"conversationId\": \"\", \"messageNumber\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/getActivity\"\nquerystring = {\"ticket\": \"\", \"isWriting\": \"\", \"conversationId\": \"\", \"messageNumber\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAllConversation",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/getAllConversation",
            "description": "List all conversations for this account. Same conversations may pop up several times due to shifting order caused by incoming messages. Stop calling when you receive empty conversation list.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "synchronizeHorizon",
                    "type": "NUMBER",
                    "description": "Keeps track of conversations loaded set 0 for first call.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/getAllConversation\"\nquerystring = {\"ticket\": \"\", \"synchronizeHorizon\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/getAllConversation\"\nquerystring = {\"ticket\": \"\", \"synchronizeHorizon\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getClassificators",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/getClassificators",
            "description": "Get list of classificators.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/getClassificators\"\nquerystring = {\"ticket\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/getClassificators\"\nquerystring = {\"ticket\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getContactsRecordList",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/getContactsRecordList",
            "description": "Lookup accounts.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "lookupList",
                    "type": "LIST",
                    "description": "List of lookup strings.",
                    "default": ""
                },
                {
                    "name": "ignoreList",
                    "type": "LIST",
                    "description": "List of accountId's to ignore.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/getContactsRecordList\"\nquerystring = {\"ticket\": \"\", \"tokenId\": \"\", \"lookupList\": \"\", \"ignoreList\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/getContactsRecordList\"\nquerystring = {\"ticket\": \"\", \"tokenId\": \"\", \"lookupList\": \"\", \"ignoreList\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getContentBySearchQuery",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/getContentBySearchQuery",
            "description": "Set conversation read horizon for this account. Used when client determines that it has shown messages to user for long enough for them to get read or user wants to move read horizon up again.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "keywords",
                    "type": "LIST",
                    "description": "Query search for content.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Limit search to one conversation.",
                    "default": ""
                },
                {
                    "name": "needSuggestions",
                    "type": "SELECT",
                    "description": "Request suggestion list.",
                    "default": ""
                },
                {
                    "name": "ignoreConversationIds",
                    "type": "LIST",
                    "description": "Client side matches no need to search duplicate matches.",
                    "default": ""
                },
                {
                    "name": "searchTypes",
                    "type": "LIST",
                    "description": "Do only search in specific areas`topic` - topic search only;`chat` - search in message content; `file` - search in file names; `pin` - search in pins;`task` - search in tasks.`subject` - search in email subjects;",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/getContentBySearchQuery\"\nquerystring = {\"conversationId\": \"\", \"ticket\": \"\", \"tokenId\": \"\", \"needSuggestions\": \"\", \"keywords\": \"\", \"ignoreConversationIds\": \"\", \"searchTypes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/getContentBySearchQuery\"\nquerystring = {\"conversationId\": \"\", \"ticket\": \"\", \"tokenId\": \"\", \"needSuggestions\": \"\", \"keywords\": \"\", \"ignoreConversationIds\": \"\", \"searchTypes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getConversationWebhook",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/getConversationWebhook",
            "description": "Show webhooks in conversation.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Conversation by id.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/getConversationWebhook\"\nquerystring = {\"ticket\": \"\", \"conversationId\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/getConversationWebhook\"\nquerystring = {\"ticket\": \"\", \"conversationId\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getExternalAccountInfo",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/getExternalAccountInfo",
            "description": "Get External Account Info.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "mkPermissionType",
                    "type": "SELECT",
                    "description": "Type of permissions that external account has granted to Fleep.",
                    "default": ""
                },
                {
                    "name": "mkExternalAccountType",
                    "type": "SELECT",
                    "description": "Type of the connected external account.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/getExternalAccountInfo\"\nquerystring = {\"mkPermissionType\": \"\", \"tokenId\": \"\", \"ticket\": \"\", \"mkExternalAccountType\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/getExternalAccountInfo\"\nquerystring = {\"mkPermissionType\": \"\", \"tokenId\": \"\", \"ticket\": \"\", \"mkExternalAccountType\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getNextBatchOfConversations",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/getNextBatchOfConversations",
            "description": "Get next or previous batch of conversations.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "conversationIds",
                    "type": "LIST",
                    "description": "List of conversation id's to synchronize.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "mkInitMode",
                    "type": "SELECT",
                    "description": "`ic_header` - header only.`ic_tiny` - for minimal.`ic_full` - ready for display.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/getNextBatchOfConversations\"\nquerystring = {\"tokenId\": \"\", \"ticket\": \"\", \"mkInitMode\": \"\", \"conversationIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/getNextBatchOfConversations\"\nquerystring = {\"tokenId\": \"\", \"ticket\": \"\", \"mkInitMode\": \"\", \"conversationIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getNotificationIdForFurtherRequests",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/getNotificationIdForFurtherRequests",
            "description": "Get notificationId for further requests.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "registrationCode",
                    "type": "STRING",
                    "description": "Registration code.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "registrationMail",
                    "type": "STRING",
                    "description": "Registration mail.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "notificationId",
                    "type": "STRING",
                    "description": "Notification id.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/getNotificationIdForFurtherRequests\"\nquerystring = {\"tokenId\": \"\", \"registrationCode\": \"\", \"notificationId\": \"\", \"ticket\": \"\", \"registrationMail\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/getNotificationIdForFurtherRequests\"\nquerystring = {\"tokenId\": \"\", \"registrationCode\": \"\", \"notificationId\": \"\", \"ticket\": \"\", \"registrationMail\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSuggestWords",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/getSuggestWords",
            "description": "Suggest words.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "keywords",
                    "type": "LIST",
                    "description": "Query search for suggest words.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Conversation id.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/getSuggestWords\"\nquerystring = {\"ticket\": \"\", \"tokenId\": \"\", \"conversationId\": \"\", \"keywords\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/getSuggestWords\"\nquerystring = {\"ticket\": \"\", \"tokenId\": \"\", \"conversationId\": \"\", \"keywords\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getTrelloBoardList",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/getTrelloBoardList",
            "description": "Get Trello board list.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "mkPermissionType",
                    "type": "SELECT",
                    "description": "Type of permissions that external account has granted to Fleep.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "externalAccountId",
                    "type": "STRING",
                    "description": "Id of the external account (see ExternalAccountInfo).",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/getTrelloBoardList\"\nquerystring = {\"tokenId\": \"\", \"mkPermissionType\": \"\", \"ticket\": \"\", \"externalAccountId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/getTrelloBoardList\"\nquerystring = {\"tokenId\": \"\", \"mkPermissionType\": \"\", \"ticket\": \"\", \"externalAccountId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "hideContact",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/hideContact",
            "description": "Hide contacts from this user\u2019s contactlist.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "contactIds",
                    "type": "LIST",
                    "description": "List of contacts to hide.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/hideContact\"\nquerystring = {\"tokenId\": \"\", \"ticket\": \"\", \"contactIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/hideContact\"\nquerystring = {\"tokenId\": \"\", \"ticket\": \"\", \"contactIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "hideConversation",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/hideConversation",
            "description": "Hide conversation until new messages arrives. Useful for people who want to keep their inbox clear.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Hide conversation by id.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fromMessageNumber",
                    "type": "NUMBER",
                    "description": "Used to return next batch of changes.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/hideConversation\"\nquerystring = {\"conversationId\": \"\", \"ticket\": \"\", \"fromMessageNumber\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/hideConversation\"\nquerystring = {\"conversationId\": \"\", \"ticket\": \"\", \"fromMessageNumber\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "importContact",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/importContact",
            "description": "Import contacts into users contactlist. Used for gmail contact import.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "contacts",
                    "type": "ARRAY",
                    "description": "List of ContactImport objects.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/importContact\"\nquerystring = {\"tokenId\": \"\", \"ticket\": \"\", \"contacts\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/importContact\"\nquerystring = {\"tokenId\": \"\", \"ticket\": \"\", \"contacts\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "leaveConversation",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/leaveConversation",
            "description": "Leave the conversation.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Leave conversation by id.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fromMessageNumber",
                    "type": "NUMBER",
                    "description": "Used to return next batch of changes.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/leaveConversation\"\nquerystring = {\"fromMessageNumber\": \"\", \"tokenId\": \"\", \"ticket\": \"\", \"conversationId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/leaveConversation\"\nquerystring = {\"fromMessageNumber\": \"\", \"tokenId\": \"\", \"ticket\": \"\", \"conversationId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "listenForNotificationsFromFleep",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/listenForNotificationsFromFleep",
            "description": "Use long poll to listen for notifications from Fleep.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "eventHorizon",
                    "type": "NUMBER",
                    "description": "Latest event client has seen.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "wait",
                    "type": "SELECT",
                    "description": "Set to False if you want to get latest events but not stay waiting if there isn't any.",
                    "default": ""
                },
                {
                    "name": "downloadUrl",
                    "type": "STRING",
                    "description": "url from where to download new binary sent when server decides that client is too old and needs to be upgraded.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/listenForNotificationsFromFleep\"\nquerystring = {\"wait\": \"\", \"tokenId\": \"\", \"downloadUrl\": \"\", \"eventHorizon\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/listenForNotificationsFromFleep\"\nquerystring = {\"wait\": \"\", \"tokenId\": \"\", \"downloadUrl\": \"\", \"eventHorizon\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "loadIndexDataToCache",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/loadIndexDataToCache",
            "description": "Load current user\u2019s index data to cache.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/loadIndexDataToCache\"\nquerystring = {\"tokenId\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/loadIndexDataToCache\"\nquerystring = {\"tokenId\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "loginAccount",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/loginAccount",
            "description": "Handle user login business logic. If login is successful, it sets session token and returns account info.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "email",
                    "type": "CREDENTIALS",
                    "description": "User email.",
                    "default": ""
                },
                {
                    "name": "password",
                    "type": "CREDENTIALS",
                    "description": "User password.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "rememberMe",
                    "type": "SELECT",
                    "description": "Whether user wants long-term session cookie.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/loginAccount\"\nquerystring = {\"rememberMe\": \"\", \"email\": \"\", \"password\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/loginAccount\"\nquerystring = {\"rememberMe\": \"\", \"email\": \"\", \"password\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "logoutAccount",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/logoutAccount",
            "description": "Close session.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/logoutAccount\"\nquerystring = {\"ticket\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/logoutAccount\"\nquerystring = {\"ticket\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "markConversationAsRead",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/markConversationAsRead",
            "description": "Mark conversation as read regardless of how many unread messages there are. Useful for marking read conversations that you are not planning to read. For example error log after it has rolled up thousands of messages. Returns init conversation stream so the client side conversation will be reset to new read position and all the possibly skipped messages will not get misinterpreted.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Leave conversation by id.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "mkInitMode",
                    "type": "SELECT",
                    "description": "`ic_tiny` - for minimal.`ic_full` - ready for display.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/markConversationAsRead\"\nquerystring = {\"ticket\": \"\", \"conversationId\": \"\", \"tokenId\": \"\", \"mkInitMode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/markConversationAsRead\"\nquerystring = {\"ticket\": \"\", \"conversationId\": \"\", \"tokenId\": \"\", \"mkInitMode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "synchronizeTeamsList",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/synchronizeTeamsList",
            "description": "Synchronize teams.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Conversation by id.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "teamIds",
                    "type": "LIST",
                    "description": "Add teams to conversation.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/synchronizeTeamsList\"\nquerystring = {\"ticket\": \"\", \"conversationId\": \"\", \"tokenId\": \"\", \"teamIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/synchronizeTeamsList\"\nquerystring = {\"ticket\": \"\", \"conversationId\": \"\", \"tokenId\": \"\", \"teamIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "markMessageAsRead",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/markMessageAsRead",
            "description": "Set conversation read horizon for this account. Used when client determines that it has shown messages to user for long enough for them to get read or user wants to move read horizon up again.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Conversation id.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "messageNumber",
                    "type": "NUMBER",
                    "description": "Client read horizon. Last message number that we have shown to user. We update database and send notifications to other connected clients if it is larger than current value in database.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fromMessageNumber",
                    "type": "NUMBER",
                    "description": "Used to return next batch of changes.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/markMessageAsRead\"\nquerystring = {\"conversationId\": \"\", \"ticket\": \"\", \"fromMessageNumber\": \"\", \"messageNumber\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/markMessageAsRead\"\nquerystring = {\"conversationId\": \"\", \"ticket\": \"\", \"fromMessageNumber\": \"\", \"messageNumber\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "removeContactFromConversation",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/removeContactFromConversation",
            "description": "Remove contact from conversation list dialog suggestions.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "contactId",
                    "type": "STRING",
                    "description": "Account id to synchronize.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/removeContactFromConversation\"\nquerystring = {\"ticket\": \"\", \"contactId\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/removeContactFromConversation\"\nquerystring = {\"ticket\": \"\", \"contactId\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "removeConversationWebhook",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/removeConversationWebhook",
            "description": "Remove webhook from conversation.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Conversation by id.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "hookKey",
                    "type": "STRING",
                    "description": "Key used as identifier.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fromMessageNumber",
                    "type": "NUMBER",
                    "description": "Used to return next batch of changes.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/removeConversationWebhook\"\nquerystring = {\"conversationId\": \"\", \"ticket\": \"\", \"hookKey\": \"\", \"tokenId\": \"\", \"fromMessageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/removeConversationWebhook\"\nquerystring = {\"conversationId\": \"\", \"ticket\": \"\", \"hookKey\": \"\", \"tokenId\": \"\", \"fromMessageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "removeEmailAlias",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/removeEmailAlias",
            "description": "Remove email alias from given account.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "Email to be removed.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/removeEmailAlias\"\nquerystring = {\"tokenId\": \"\", \"ticket\": \"\", \"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/removeEmailAlias\"\nquerystring = {\"tokenId\": \"\", \"ticket\": \"\", \"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "removeMembersFromConversation",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/removeMembersFromConversation",
            "description": "Remove members from the conversation.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "Email address.",
                    "default": ""
                },
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Leave conversation by id.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fromMessageNumber",
                    "type": "NUMBER",
                    "description": "Used to return next batch of changes.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/removeMembersFromConversation\"\nquerystring = {\"ticket\": \"\", \"email\": \"\", \"conversationId\": \"\", \"fromMessageNumber\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/removeMembersFromConversation\"\nquerystring = {\"ticket\": \"\", \"email\": \"\", \"conversationId\": \"\", \"fromMessageNumber\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "removeTeam",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/removeTeam",
            "description": "Remove team.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "teamId",
                    "type": "STRING",
                    "description": "Team id.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/removeTeam\"\nquerystring = {\"tokenId\": \"\", \"teamId\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/removeTeam\"\nquerystring = {\"tokenId\": \"\", \"teamId\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "repeatEmailCode",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/repeatEmailCode",
            "description": "Trigger registration code email.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "User email.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "referer",
                    "type": "STRING",
                    "description": "Page that referred used to fleep.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/repeatEmailCode\"\nquerystring = {\"tokenId\": \"\", \"referer\": \"\", \"ticket\": \"\", \"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/repeatEmailCode\"\nquerystring = {\"tokenId\": \"\", \"referer\": \"\", \"ticket\": \"\", \"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "sendMessage",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/sendMessage",
            "description": "Send message to flow.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Conversation id.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fromMessageNumber",
                    "type": "NUMBER",
                    "description": "Used to return next batch of changes.",
                    "default": ""
                },
                {
                    "name": "message",
                    "type": "STRING",
                    "description": "Message content.",
                    "default": ""
                },
                {
                    "name": "isRetry",
                    "type": "SELECT",
                    "description": "Client is retrying same message send n'th time. Will fail if fromMessageNumber != lastMessageNumber.",
                    "default": ""
                },
                {
                    "name": "attachments",
                    "type": "LIST",
                    "description": "List of attachment urls.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/sendMessage\"\nquerystring = {\"ticket\": \"\", \"fromMessageNumber\": \"\", \"conversationId\": \"\", \"message\": \"\", \"isRetry\": \"\", \"tokenId\": \"\", \"attachments\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/sendMessage\"\nquerystring = {\"ticket\": \"\", \"fromMessageNumber\": \"\", \"conversationId\": \"\", \"message\": \"\", \"isRetry\": \"\", \"tokenId\": \"\", \"attachments\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "sendPokeEven",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/sendPokeEven",
            "description": "Send poke event, used for testing synchronize between clients.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "messageNumber",
                    "type": "NUMBER",
                    "description": "Disclose up to this message.",
                    "default": ""
                },
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Conversation id.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "isBgPoke",
                    "type": "SELECT",
                    "description": "Go through bgworker.",
                    "default": ""
                },
                {
                    "name": "fromMessageNumber",
                    "type": "NUMBER",
                    "description": "Used to return next batch of changes.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/sendPokeEven\"\nquerystring = {\"tokenId\": \"\", \"messageNumber\": \"\", \"isBgPoke\": \"\", \"fromMessageNumber\": \"\", \"conversationId\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/sendPokeEven\"\nquerystring = {\"tokenId\": \"\", \"messageNumber\": \"\", \"isBgPoke\": \"\", \"fromMessageNumber\": \"\", \"conversationId\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "sendResetPasswordLink",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/sendResetPasswordLink",
            "description": "Request password reset email for active account. Password is not reset yet just email with rest token is sent out. User must click on link in email and then enter new passord to rest it.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "User email.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/sendResetPasswordLink\"\nquerystring = {\"email\": \"\", \"tokenId\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/sendResetPasswordLink\"\nquerystring = {\"email\": \"\", \"tokenId\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "setAccountFlag",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/setAccountFlag",
            "description": "Set flag for given account that may be used by clients to display or hide content etc.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "clientFlag",
                    "type": "STRING",
                    "description": "Name of the flag to set or clear.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "boolValue",
                    "type": "SELECT",
                    "description": "Clear given flag from account.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/setAccountFlag\"\nquerystring = {\"boolValue\": \"\", \"tokenId\": \"\", \"clientFlag\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/setAccountFlag\"\nquerystring = {\"boolValue\": \"\", \"tokenId\": \"\", \"clientFlag\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "setConversationAlerts",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/setConversationAlerts",
            "description": "Set conversation alerts.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "mkAlertLevel",
                    "type": "SELECT",
                    "description": "`never` - do not alert for this conversation;`default` - default behaviour.",
                    "default": ""
                },
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Conversation by id.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fromMessageNumber",
                    "type": "NUMBER",
                    "description": "Used to return next batch of changes.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/setConversationAlerts\"\nquerystring = {\"mkAlertLevel\": \"\", \"conversationId\": \"\", \"ticket\": \"\", \"fromMessageNumber\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/setConversationAlerts\"\nquerystring = {\"mkAlertLevel\": \"\", \"conversationId\": \"\", \"ticket\": \"\", \"fromMessageNumber\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "storeConversationHeaderFields",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/storeConversationHeaderFields",
            "description": "Store conversation header fields. Store only fields that have changed. Call only when cache is fully synced.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Conversation id.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "mkAlertLevel",
                    "type": "SELECT",
                    "description": "`never` - do not alert for this conversation;`default` - default behaviour.",
                    "default": ""
                },
                {
                    "name": "topic",
                    "type": "STRING",
                    "description": "Shared topic for conversation.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "readMessageNumber",
                    "type": "NUMBER",
                    "description": "New read horizon for conversation.",
                    "default": ""
                },
                {
                    "name": "discloseEmail",
                    "type": "STRING",
                    "description": "Disclose conversation to these user.",
                    "default": ""
                },
                {
                    "name": "addEmail",
                    "type": "STRING",
                    "description": "Email to be added (map to fleep accounts if possible).",
                    "default": ""
                },
                {
                    "name": "snoozeInterval",
                    "type": "STRING",
                    "description": "For how long to snooze conversation in seconds.",
                    "default": ""
                },
                {
                    "name": "removeEmail",
                    "type": "STRING",
                    "description": "email to be removed (map to fleep accounts if possible).",
                    "default": ""
                },
                {
                    "name": "isDeleted",
                    "type": "SELECT",
                    "description": "Set to true to delete the conversation.",
                    "default": ""
                },
                {
                    "name": "fromMessageNumber",
                    "type": "NUMBER",
                    "description": "Used to return next batch of changes.",
                    "default": ""
                },
                {
                    "name": "isDisclose",
                    "type": "SELECT",
                    "description": "Enable/disable auto disclose.",
                    "default": ""
                },
                {
                    "name": "isUrlPreviewDisabled",
                    "type": "SELECT",
                    "description": "Don't show url previews for all users.",
                    "default": ""
                },
                {
                    "name": "hideMessageNumber",
                    "type": "NUMBER",
                    "description": "Hide the conversation from this message number.",
                    "default": ""
                },
                {
                    "name": "isAutojoin",
                    "type": "SELECT",
                    "description": "Enable disable auto join.",
                    "default": ""
                },
                {
                    "name": "isList",
                    "type": "SELECT",
                    "description": "Behaves as mailing list.",
                    "default": ""
                },
                {
                    "name": "isDeletedByAdmin",
                    "type": "SELECT",
                    "description": "Delete by admin (affects all members).",
                    "default": ""
                },
                {
                    "name": "canPost",
                    "type": "SELECT",
                    "description": "Set to false to leave the conversation.",
                    "default": ""
                },
                {
                    "name": "isManaged",
                    "type": "SELECT",
                    "description": "Is this conversation managed conversation.",
                    "default": ""
                },
                {
                    "name": "mkConvType",
                    "type": "SELECT",
                    "description": "Change conversation email behavior.",
                    "default": ""
                },
                {
                    "name": "removeAccountIds",
                    "type": "LIST",
                    "description": "Account ids to be removed from the conversation.",
                    "default": ""
                },
                {
                    "name": "kickAccountIds",
                    "type": "LIST",
                    "description": "Account ids to be removed from the conversation with no access to history - only useable with managed conversations.",
                    "default": ""
                },
                {
                    "name": "labels",
                    "type": "LIST",
                    "description": "User labels for conversation.",
                    "default": ""
                },
                {
                    "name": "labelIds",
                    "type": "LIST",
                    "description": "User labels for conversation.",
                    "default": ""
                },
                {
                    "name": "addAccountIds",
                    "type": "LIST",
                    "description": "Account ids to be added to the conversation.",
                    "default": ""
                },
                {
                    "name": "discloseAccountIds",
                    "type": "LIST",
                    "description": "Disclose conversation to these users.",
                    "default": ""
                },
                {
                    "name": "addTeamIds",
                    "type": "LIST",
                    "description": "Add teams to conversation.",
                    "default": ""
                },
                {
                    "name": "removeTeamIds",
                    "type": "LIST",
                    "description": "Remove teams from conversation.",
                    "default": ""
                },
                {
                    "name": "addAdmins",
                    "type": "LIST",
                    "description": "Add conversation admins. Allow settingi non organisation admins as admins for conv.",
                    "default": ""
                },
                {
                    "name": "removeAdmins",
                    "type": "LIST",
                    "description": "Remove conversation admins.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/storeConversationHeaderFields\"\nquerystring = {\"ticket\": \"\", \"conversationId\": \"\", \"readMessageNumber\": \"\", \"tokenId\": \"\", \"mkAlertLevel\": \"\", \"discloseEmail\": \"\", \"addEmail\": \"\", \"snoozeInterval\": \"\", \"removeEmail\": \"\", \"topic\": \"\", \"isDeleted\": \"\", \"fromMessageNumber\": \"\", \"isDisclose\": \"\", \"isUrlPreviewDisabled\": \"\", \"hideMessageNumber\": \"\", \"isAutojoin\": \"\", \"isList\": \"\", \"isDeletedByAdmin\": \"\", \"canPost\": \"\", \"isManaged\": \"\", \"mkConvType\": \"\", \"removeAccountIds\": \"\", \"kickAccountIds\": \"\", \"labels\": \"\", \"labelIds\": \"\", \"addAccountIds\": \"\", \"discloseAccountIds\": \"\", \"addTeamIds\": \"\", \"removeTeamIds\": \"\", \"addAdmins\": \"\", \"removeAdmins\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/storeConversationHeaderFields\"\nquerystring = {\"ticket\": \"\", \"conversationId\": \"\", \"readMessageNumber\": \"\", \"tokenId\": \"\", \"mkAlertLevel\": \"\", \"discloseEmail\": \"\", \"addEmail\": \"\", \"snoozeInterval\": \"\", \"removeEmail\": \"\", \"topic\": \"\", \"isDeleted\": \"\", \"fromMessageNumber\": \"\", \"isDisclose\": \"\", \"isUrlPreviewDisabled\": \"\", \"hideMessageNumber\": \"\", \"isAutojoin\": \"\", \"isList\": \"\", \"isDeletedByAdmin\": \"\", \"canPost\": \"\", \"isManaged\": \"\", \"mkConvType\": \"\", \"removeAccountIds\": \"\", \"kickAccountIds\": \"\", \"labels\": \"\", \"labelIds\": \"\", \"addAccountIds\": \"\", \"discloseAccountIds\": \"\", \"addTeamIds\": \"\", \"removeTeamIds\": \"\", \"addAdmins\": \"\", \"removeAdmins\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "synchronizehronizePinboard",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/synchronizehronizePinboard",
            "description": "Synchronize pinboard.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Conversation id.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pinLimit",
                    "type": "NUMBER",
                    "description": "Pin limit.",
                    "default": ""
                },
                {
                    "name": "pinWeight",
                    "type": "STRING",
                    "description": "Pin weight.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/synchronizehronizePinboard\"\nquerystring = {\"conversationId\": \"\", \"pinLimit\": \"\", \"ticket\": \"\", \"tokenId\": \"\", \"pinWeight\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/synchronizehronizePinboard\"\nquerystring = {\"conversationId\": \"\", \"pinLimit\": \"\", \"ticket\": \"\", \"tokenId\": \"\", \"pinWeight\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "storeMessage",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/storeMessage",
            "description": "Store message changes whatever they are. Do changes in local cache and send only changed fields.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Conversation id.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "CrapNetId",
                    "type": "NUMBER",
                    "description": "CrapNet id for message.",
                    "default": ""
                },
                {
                    "name": "pinWeight",
                    "type": "NUMBER",
                    "description": "Used for sorting.",
                    "default": ""
                },
                {
                    "name": "forwardedMessageNumber",
                    "type": "STRING",
                    "description": "Forwarded message number (for forwarding html messages).",
                    "default": ""
                },
                {
                    "name": "isRetry",
                    "type": "SELECT",
                    "description": "Client is retrying same message send n'th time. Will fail if fromMessageNumber != lastMessageNumber.",
                    "default": ""
                },
                {
                    "name": "fromMessageNumber",
                    "type": "NUMBER",
                    "description": "Used to return next batch of changes.",
                    "default": ""
                },
                {
                    "name": "isUrlPreviewDisabled",
                    "type": "SELECT",
                    "description": "Disable generating url previews for this message and remove if generated.",
                    "default": ""
                },
                {
                    "name": "forwardedConversationId",
                    "type": "STRING",
                    "description": "Forwarded conversation id (for forwarding html messages).",
                    "default": ""
                },
                {
                    "name": "messageNumber",
                    "type": "NUMBER",
                    "description": "Message number for edits and deletes.",
                    "default": ""
                },
                {
                    "name": "message",
                    "type": "STRING",
                    "description": "Message content.",
                    "default": ""
                },
                {
                    "name": "subject",
                    "type": "STRING",
                    "description": "Subject for first message.",
                    "default": ""
                },
                {
                    "name": "attachments",
                    "type": "LIST",
                    "description": "List of attachment urls.",
                    "default": ""
                },
                {
                    "name": "assigneeIds",
                    "type": "LIST",
                    "description": "Assignees for task or message.",
                    "default": ""
                },
                {
                    "name": "tags",
                    "type": "LIST",
                    "description": "List of tags for message;`pin` - pinned message;`is_todo` - task incomplete;`is_done` - done task;`is_separator` - task separator;`is_deleted` - message deleted;`is_archived` - pin or task archived;",
                    "default": ""
                },
                {
                    "name": "addReactions",
                    "type": "LIST",
                    "description": "Reactions to add.",
                    "default": ""
                },
                {
                    "name": "deleteReactions",
                    "type": "LIST",
                    "description": "Reactions to remove.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/storeMessage\"\nquerystring = {\"CrapNetId\": \"\", \"pinWeight\": \"\", \"conversationId\": \"\", \"forwardedMessageNumber\": \"\", \"ticket\": \"\", \"isRetry\": \"\", \"fromMessageNumber\": \"\", \"isUrlPreviewDisabled\": \"\", \"forwardedConversationId\": \"\", \"messageNumber\": \"\", \"message\": \"\", \"tokenId\": \"\", \"subject\": \"\", \"attachments\": \"\", \"assigneeIds\": \"\", \"tags\": \"\", \"addReactions\": \"\", \"deleteReactions\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/storeMessage\"\nquerystring = {\"CrapNetId\": \"\", \"pinWeight\": \"\", \"conversationId\": \"\", \"forwardedMessageNumber\": \"\", \"ticket\": \"\", \"isRetry\": \"\", \"fromMessageNumber\": \"\", \"isUrlPreviewDisabled\": \"\", \"forwardedConversationId\": \"\", \"messageNumber\": \"\", \"message\": \"\", \"tokenId\": \"\", \"subject\": \"\", \"attachments\": \"\", \"assigneeIds\": \"\", \"tags\": \"\", \"addReactions\": \"\", \"deleteReactions\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "storingConnectionInformation",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/storingConnectionInformation",
            "description": "Handles long poll server side by storing connection information into connection table by the token.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "wait",
                    "type": "SELECT",
                    "description": "Set to False if you want to get latest events but not stay waiting if there isn't any.",
                    "default": ""
                },
                {
                    "name": "eventHorizon",
                    "type": "NUMBER",
                    "description": "Latest event client has seen.",
                    "default": ""
                },
                {
                    "name": "pollFlags",
                    "type": "SELECT",
                    "description": "Can be used to fine tune polls according to client needs. skip_hidden - skip hidden conversations during initial synchronize. skip_rest - skip other conversations and start polling events used for limiting number of conversations loaded into client cache.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/storingConnectionInformation\"\nquerystring = {\"tokenId\": \"\", \"wait\": \"\", \"ticket\": \"\", \"eventHorizon\": \"\", \"pollFlags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/storingConnectionInformation\"\nquerystring = {\"tokenId\": \"\", \"wait\": \"\", \"ticket\": \"\", \"eventHorizon\": \"\", \"pollFlags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "synchronizeAccount",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/synchronizeAccount",
            "description": "Use it to initialize some information using token.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "accountId",
                    "type": "STRING",
                    "description": "Account ID.",
                    "default": ""
                },
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "Account's email.",
                    "default": ""
                },
                {
                    "name": "displayName",
                    "type": "STRING",
                    "description": "Account's display name.",
                    "default": ""
                },
                {
                    "name": "eventHorizon",
                    "type": "NUMBER",
                    "description": "No point to read historic events either server must return good enough guess so that contacts and conversations will be.",
                    "default": ""
                },
                {
                    "name": "mkAccountStatus",
                    "type": "SELECT",
                    "description": "`new` - email has been registered but is goodness is unknown;`active` - user has stored a password and can participate;`banned` - user has been banned for some unacceptable activity;`closed` - user has requested this account to be closed;",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/synchronizeAccount\"\nquerystring = {\"tokenId\": \"\", \"accountId\": \"\", \"email\": \"\", \"displayName\": \"\", \"ticket\": \"\", \"eventHorizon\": \"\", \"mkAccountStatus\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/synchronizeAccount\"\nquerystring = {\"tokenId\": \"\", \"accountId\": \"\", \"email\": \"\", \"displayName\": \"\", \"ticket\": \"\", \"eventHorizon\": \"\", \"mkAccountStatus\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "synchronizeAllContact",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/synchronizeAllContact",
            "description": "Returns profile data for all. Use it to update local client side cache.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "searchString",
                    "type": "STRING",
                    "description": "Returns profile data for given list of id\u2019s. Use it to update local client side cache.",
                    "default": ""
                },
                {
                    "name": "ignoreIds",
                    "type": "LIST",
                    "description": "List of account_ids client already has.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/synchronizeAllContact\"\nquerystring = {\"tokenId\": \"\", \"ticket\": \"\", \"searchString\": \"\", \"ignoreIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/synchronizeAllContact\"\nquerystring = {\"tokenId\": \"\", \"ticket\": \"\", \"searchString\": \"\", \"ignoreIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "synchronizeBackwardForConversation",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/synchronizeBackwardForConversation",
            "description": "Synchronize state for single conversation. Used to fetch messages for backward scroll.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Conversation id.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fromMessageNumber",
                    "type": "NUMBER",
                    "description": "Earliest message number client has received or previous messages are read and returned.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/synchronizeBackwardForConversation\"\nquerystring = {\"ticket\": \"\", \"conversationId\": \"\", \"tokenId\": \"\", \"fromMessageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/synchronizeBackwardForConversation\"\nquerystring = {\"ticket\": \"\", \"conversationId\": \"\", \"tokenId\": \"\", \"fromMessageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "synchronizeContactActivity",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/synchronizeContactActivity",
            "description": "Synchronize last seen time for requested contacts.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "contactIds",
                    "type": "LIST",
                    "description": "List of account_ids to synchronize.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/synchronizeContactActivity\"\nquerystring = {\"tokenId\": \"\", \"ticket\": \"\", \"contactIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/synchronizeContactActivity\"\nquerystring = {\"tokenId\": \"\", \"ticket\": \"\", \"contactIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "synchronizeContact",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/synchronizeContact",
            "description": "Returns profile data for given id. Use it to update local client side cache.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "contactId",
                    "type": "STRING",
                    "description": "Id of contact to synchronize.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/synchronizeContact\"\nquerystring = {\"tokenId\": \"\", \"ticket\": \"\", \"contactId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/synchronizeContact\"\nquerystring = {\"tokenId\": \"\", \"ticket\": \"\", \"contactId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "synchronizeContactList",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/synchronizeContactList",
            "description": "Returns profile data for given list of id\u2019s. Use it to update local client side cache.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "contactsIds",
                    "type": "LIST",
                    "description": "List of account_ids to synchronize.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/synchronizeContactList\"\nquerystring = {\"ticket\": \"\", \"tokenId\": \"\", \"contactsIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/synchronizeContactList\"\nquerystring = {\"ticket\": \"\", \"tokenId\": \"\", \"contactsIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "synchronizeEmailAlias",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/synchronizeEmailAlias",
            "description": "Fetch all aliases for given account. Used for displaying aliases in UI.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/synchronizeEmailAlias\"\nquerystring = {\"tokenId\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/synchronizeEmailAlias\"\nquerystring = {\"tokenId\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "synchronizePinboardForConversation",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/synchronizePinboardForConversation",
            "description": "Synchronize pinboard for conversation where it was not fully sent with init.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Conversation id.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fromMessageNumber",
                    "type": "NUMBER",
                    "description": "Earliest message number client has received or previous messages are read and returned.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/synchronizePinboardForConversation\"\nquerystring = {\"conversationId\": \"\", \"ticket\": \"\", \"tokenId\": \"\", \"fromMessageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/synchronizePinboardForConversation\"\nquerystring = {\"conversationId\": \"\", \"ticket\": \"\", \"tokenId\": \"\", \"fromMessageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "synchronizeStateForConversation",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/synchronizeStateForConversation",
            "description": "Synchronize state for single conversation. If used with default values 5 messages before and after last reported readMessageNumber are returned. Also all conversation state are returned: PinInfo, memberInfo. All optional fields (o) are returned for first synchronize. After that these are included only when there have been changes. Changes are detected from system messages in message flow.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Conversation id.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fromMessageNumber",
                    "type": "NUMBER",
                    "description": "Earliest message number client has received or previous messages are read and returned.",
                    "default": ""
                },
                {
                    "name": "mkDirection",
                    "type": "SELECT",
                    "description": "mkDirection select.See more in readme.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/synchronizeStateForConversation\"\nquerystring = {\"tokenId\": \"\", \"fromMessageNumber\": \"\", \"ticket\": \"\", \"conversationId\": \"\", \"mkDirection\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/synchronizeStateForConversation\"\nquerystring = {\"tokenId\": \"\", \"fromMessageNumber\": \"\", \"ticket\": \"\", \"conversationId\": \"\", \"mkDirection\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "synchronizeTaskboard",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/synchronizeTaskboard",
            "description": "Synchronize taskboard.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Conversation id.",
                    "default": ""
                },
                {
                    "name": "sectionId",
                    "type": "STRING",
                    "description": "Section id.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "taskWeight",
                    "type": "STRING",
                    "description": "Task weight from cursor if provided.",
                    "default": ""
                },
                {
                    "name": "taskLimit",
                    "type": "NUMBER",
                    "description": "Tasks to synchronize in one batch (between 1 and 100).",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/synchronizeTaskboard\"\nquerystring = {\"ticket\": \"\", \"taskWeight\": \"\", \"conversationId\": \"\", \"sectionId\": \"\", \"tokenId\": \"\", \"taskLimit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/synchronizeTaskboard\"\nquerystring = {\"ticket\": \"\", \"taskWeight\": \"\", \"conversationId\": \"\", \"sectionId\": \"\", \"tokenId\": \"\", \"taskLimit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "unhideConversation",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/unhideConversation",
            "description": "Bring conversation out of hiding.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Conversation id.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fromMessageNumber",
                    "type": "NUMBER",
                    "description": "Earliest message number client has received or previous messages are read and returned.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/unhideConversation\"\nquerystring = {\"ticket\": \"\", \"conversationId\": \"\", \"fromMessageNumber\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/unhideConversation\"\nquerystring = {\"ticket\": \"\", \"conversationId\": \"\", \"fromMessageNumber\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "unsubscribeForNotification",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/unsubscribeForNotification",
            "description": "Unsubscribe for notification.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "notificationId",
                    "type": "STRING",
                    "description": "Id of notification.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/unsubscribeForNotification\"\nquerystring = {\"ticket\": \"\", \"notificationId\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/unsubscribeForNotification\"\nquerystring = {\"ticket\": \"\", \"notificationId\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "unsubscribeFromConversation",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/unsubscribeFromConversation",
            "description": "Unsubscribe from conversation.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "Email address to remove from conversation.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Conversation id.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/unsubscribeFromConversation\"\nquerystring = {\"email\": \"\", \"tokenId\": \"\", \"conversationId\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/unsubscribeFromConversation\"\nquerystring = {\"email\": \"\", \"tokenId\": \"\", \"conversationId\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "uploadAvatar",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/uploadAvatar",
            "description": "Upload avatar.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageName",
                    "type": "STRING",
                    "description": "Name of the image.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                },
                {
                    "name": "contentType",
                    "type": "STRING",
                    "description": "Content-Type of the image.Example - image/jpg.",
                    "default": ""
                },
                {
                    "name": "imageFile",
                    "type": "FILE",
                    "description": "Image for avatar.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/uploadAvatar\"\nquerystring = {\"imageName\": \"\", \"tokenId\": \"\", \"contentType\": \"\", \"imageFile\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/uploadAvatar\"\nquerystring = {\"imageName\": \"\", \"tokenId\": \"\", \"contentType\": \"\", \"imageFile\": \"\", \"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "uploadExternalFile",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/uploadExternalFile",
            "description": "Add file into Fleep from an external source. Maximum allowed file size is 1GB. Upload request is put into queue and processed by a background job. Upload progress events are sent to the client during the upload process.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "fileUrl",
                    "type": "STRING",
                    "description": "Input field for files.",
                    "default": ""
                },
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "fileName",
                    "type": "STRING",
                    "description": "Name for files.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "conversationId",
                    "type": "STRING",
                    "description": "Needed, if file is related to a conversation.",
                    "default": ""
                },
                {
                    "name": "fileSize",
                    "type": "STRING",
                    "description": "max 1073741824.",
                    "default": ""
                },
                {
                    "name": "fileOrigin",
                    "type": "STRING",
                    "description": "From where the file originates (Dropbox, Google Drive, Giphy, ...).",
                    "default": ""
                },
                {
                    "name": "uploadId",
                    "type": "STRING",
                    "description": "Upload id in client side.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/uploadExternalFile\"\nquerystring = {\"fileUrl\": \"\", \"conversationId\": \"\", \"fileSize\": \"\", \"ticket\": \"\", \"fileName\": \"\", \"fileOrigin\": \"\", \"tokenId\": \"\", \"uploadId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/uploadExternalFile\"\nquerystring = {\"fileUrl\": \"\", \"conversationId\": \"\", \"fileSize\": \"\", \"ticket\": \"\", \"fileName\": \"\", \"fileOrigin\": \"\", \"tokenId\": \"\", \"uploadId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "uploadFile",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/uploadFile",
            "description": "Upload one or more files. File upload url-s can be used in message API calls storeMessage and sendMessage as attachments parameter.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "Must be sent as parameter to all subsequent api calls.",
                    "default": ""
                },
                {
                    "name": "contentType",
                    "type": "STRING",
                    "description": "Content-Type of the file.Example - image/jpg.",
                    "default": ""
                },
                {
                    "name": "file",
                    "type": "FILE",
                    "description": "Input field for files.",
                    "default": ""
                },
                {
                    "name": "fileName",
                    "type": "STRING",
                    "description": "Name of the file.",
                    "default": ""
                },
                {
                    "name": "tokenId",
                    "type": "STRING",
                    "description": "Token id from loginAccount endpoint.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/uploadFile\"\nquerystring = {\"ticket\": \"\", \"contentType\": \"\", \"file\": \"\", \"fileName\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/uploadFile\"\nquerystring = {\"ticket\": \"\", \"contentType\": \"\", \"file\": \"\", \"fileName\": \"\", \"tokenId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "webhookEvent",
            "url": "https://FleepraygorodskijV1.p.rapidapi.com/webhookEvent",
            "description": "This API allows you to create, edit, and delete conversation webhooks programmatically.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "Your fleep username.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/webhookEvent\"\nquerystring = {\"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FleepraygorodskijV1.p.rapidapi.com/webhookEvent\"\nquerystring = {\"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FleepraygorodskijV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}