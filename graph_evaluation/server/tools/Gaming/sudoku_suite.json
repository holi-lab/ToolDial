{
    "product_id": "api_477ae0f6-2acb-4823-841a-8deca15da01b",
    "tool_description": "Service provides API for making Sudoku games development easier.",
    "home_url": "https://rapidapi.com/izhekka/api/sudoku-suite/",
    "name": "Sudoku Suite",
    "title": "Sudoku Suite",
    "pricing": "FREEMIUM",
    "tool_name": "Sudoku Suite",
    "score": {
        "avgServiceLevel": 75,
        "avgLatency": 3030,
        "avgSuccessRate": 75,
        "popularityScore": 8.3,
        "__typename": "Score"
    },
    "host": "sudoku-suite.p.rapidapi.com",
    "api_list": [
        {
            "name": "/game/{difficulty}",
            "url": "https://sudoku-suite.p.rapidapi.com/game/BEGINNER",
            "description": "Generates a new puzzle with a given level of difficulty",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "difficulty",
                    "type": "STRING",
                    "description": "Level of difficulty",
                    "default": "BEGINNER"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sudoku-suite.p.rapidapi.com/game/BEGINNER\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sudoku-suite.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://sudoku-suite.p.rapidapi.com/game/{difficulty}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sudoku-suite.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/solution/solve",
            "url": "https://sudoku-suite.p.rapidapi.com/solution/solve",
            "description": "Solves an arbitrary puzzle. Returns game information that includes an initial puzzle, solved state and a list of steps to solve the puzzle.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sudoku-suite.p.rapidapi.com/solution/solve\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sudoku-suite.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://sudoku-suite.p.rapidapi.com/solution/solve\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sudoku-suite.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "initialGrid": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64",
                                "minimum": -9223372036854776000,
                                "maximum": 9223372036854776000
                            },
                            "minItems": 9,
                            "maxItems": 9
                        },
                        "minItems": 9,
                        "maxItems": 9
                    },
                    "solvedGrid": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64",
                                "minimum": -9223372036854776000,
                                "maximum": 9223372036854776000
                            },
                            "minItems": 9,
                            "maxItems": 9
                        },
                        "minItems": 9,
                        "maxItems": 9
                    },
                    "steps": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "index": {
                                    "type": "integer",
                                    "format": "int64",
                                    "minimum": -9223372036854776000,
                                    "maximum": 9223372036854776000
                                },
                                "step": {
                                    "type": "object",
                                    "properties": {
                                        "row": {
                                            "type": "integer",
                                            "format": "int64",
                                            "minimum": -9223372036854776000,
                                            "maximum": 9223372036854776000
                                        },
                                        "col": {
                                            "type": "integer",
                                            "format": "int64",
                                            "minimum": -9223372036854776000,
                                            "maximum": 9223372036854776000
                                        },
                                        "value": {
                                            "type": "integer",
                                            "format": "int64",
                                            "minimum": -9223372036854776000,
                                            "maximum": 9223372036854776000
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/solution/validate",
            "url": "https://sudoku-suite.p.rapidapi.com/solution/validate",
            "description": "Validates if an arbitrary puzzle has been soled correcly. Returns a list with cells that are filled with mistake.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sudoku-suite.p.rapidapi.com/solution/validate\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sudoku-suite.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://sudoku-suite.p.rapidapi.com/solution/validate\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sudoku-suite.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "issues": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "row": {
                                    "type": "integer",
                                    "format": "int64",
                                    "minimum": -9223372036854776000,
                                    "maximum": 9223372036854776000
                                },
                                "col": {
                                    "type": "integer",
                                    "format": "int64",
                                    "minimum": -9223372036854776000,
                                    "maximum": 9223372036854776000
                                },
                                "value": {
                                    "type": "integer",
                                    "format": "int64",
                                    "minimum": -9223372036854776000,
                                    "maximum": 9223372036854776000
                                }
                            }
                        }
                    }
                }
            }
        }
    ]
}