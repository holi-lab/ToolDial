{
    "product_id": "api_13392c66-bbe8-4219-a3ba-648142c1eb9c",
    "tool_description": "Quickly access 1.000.000+ chess puzzles!",
    "home_url": "https://rapidapi.com/yess-chess-yess-chess-default/api/chess-puzzles2/",
    "name": "Chess Puzzles_v2",
    "title": "Chess Puzzles",
    "pricing": "FREEMIUM",
    "tool_name": "Chess Puzzles_v2",
    "score": {
        "avgServiceLevel": 98,
        "avgLatency": 2840,
        "avgSuccessRate": 97,
        "popularityScore": 9.3,
        "__typename": "Score"
    },
    "host": "chess-puzzles2.p.rapidapi.com",
    "api_list": [
        {
            "name": "advanced",
            "url": "https://chess-puzzles2.p.rapidapi.com/advanced",
            "description": "Advanced search options",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "number_of_puzzles",
                    "type": "NUMBER",
                    "description": "Number of puzzles you will get",
                    "default": "1"
                },
                {
                    "name": "themes",
                    "type": "STRING",
                    "description": "Themes of the puzzles",
                    "default": "kingsideAttack,middlegame"
                },
                {
                    "name": "theme_search_type",
                    "type": "STRING",
                    "description": "AND: if puzzles need to have all themes;  OR: if puzzles can have either theme",
                    "default": "AND"
                },
                {
                    "name": "number_of_moves",
                    "type": "NUMBER",
                    "description": "Total number of moves of the puzzles",
                    "default": "4"
                },
                {
                    "name": "opening_variation",
                    "type": "STRING",
                    "description": "Puzzle's opening variation",
                    "default": "Kings_Gambit_Accepted_Abbazia_Defense"
                },
                {
                    "name": "rating",
                    "type": "STRING",
                    "description": "Rating of the puzzles",
                    "default": "1200"
                },
                {
                    "name": "opening_family",
                    "type": "STRING",
                    "description": "Puzzle's opening family",
                    "default": "Kings_Gambit_Accepted"
                },
                {
                    "name": "max_deviation",
                    "type": "NUMBER",
                    "description": "Maximum possible rating deviation",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chess-puzzles2.p.rapidapi.com/advanced\"\nquerystring = {\"number_of_puzzles\": \"1\", \"themes\": \"kingsideAttack,middlegame\", \"theme_search_type\": \"AND\", \"number_of_moves\": \"4\", \"opening_variation\": \"Kings_Gambit_Accepted_Abbazia_Defense\", \"rating\": \"1200\", \"opening_family\": \"Kings_Gambit_Accepted\", \"max_deviation\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chess-puzzles2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chess-puzzles2.p.rapidapi.com/advanced\"\nquerystring = {\"number_of_puzzles\": \"1\", \"themes\": \"kingsideAttack,middlegame\", \"theme_search_type\": \"AND\", \"number_of_moves\": \"4\", \"opening_variation\": \"Kings_Gambit_Accepted_Abbazia_Defense\", \"rating\": \"1200\", \"opening_family\": \"Kings_Gambit_Accepted\", \"max_deviation\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chess-puzzles2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "range",
            "url": "https://chess-puzzles2.p.rapidapi.com/range",
            "description": "Get random puzzles within a specified rating range",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "number_of_puzzles",
                    "type": "NUMBER",
                    "description": "Number of puzzles you will get",
                    "default": "1"
                },
                {
                    "name": "max_deviation",
                    "type": "NUMBER",
                    "description": "Maximum possible rating deviation",
                    "default": "100"
                },
                {
                    "name": "min",
                    "type": "NUMBER",
                    "description": "Minimum rating the puzzle can have ",
                    "default": "1200"
                },
                {
                    "name": "max",
                    "type": "NUMBER",
                    "description": "Maximum rating the puzzle can have ",
                    "default": "1600"
                }
            ],
            "code": "import requests\n\nurl = \"https://chess-puzzles2.p.rapidapi.com/range\"\nquerystring = {\"number_of_puzzles\": \"1\", \"max_deviation\": \"100\", \"min\": \"1200\", \"max\": \"1600\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chess-puzzles2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chess-puzzles2.p.rapidapi.com/range\"\nquerystring = {\"number_of_puzzles\": \"1\", \"max_deviation\": \"100\", \"min\": \"1200\", \"max\": \"1600\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chess-puzzles2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "id",
            "url": "https://chess-puzzles2.p.rapidapi.com/id/002VP",
            "description": "Get  a chess puzzle by its id",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Unique id assigned to a certain puzzle",
                    "default": "002VP"
                }
            ],
            "optional_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://chess-puzzles2.p.rapidapi.com/id/002VP\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chess-puzzles2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chess-puzzles2.p.rapidapi.com/id/{is_id}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chess-puzzles2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "random",
            "url": "https://chess-puzzles2.p.rapidapi.com/random",
            "description": "Get random chess puzzles",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "number_of_puzzles",
                    "type": "NUMBER",
                    "description": "Number of puzzles you will get",
                    "default": "2"
                }
            ],
            "code": "import requests\n\nurl = \"https://chess-puzzles2.p.rapidapi.com/random\"\nquerystring = {\"number_of_puzzles\": \"2\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chess-puzzles2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chess-puzzles2.p.rapidapi.com/random\"\nquerystring = {\"number_of_puzzles\": \"2\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chess-puzzles2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ],
    "standardized_name": "chess_puzzles_v2"
}