{
    "tool_name": "Sudoku Service",
    "tool_description": "Generate new puzzles, solve puzzles, receive hints, find candidates, and more.",
    "title": "Sudoku Service",
    "pricing": "FREEMIUM",
    "score": null,
    "home_url": "https://rapidapi.com/nicknlsn/api/sudoku-service/",
    "host": "sudoku-service.p.rapidapi.com",
    "api_list": [
        {
            "name": "Candidates",
            "url": "https://sudoku-service.p.rapidapi.com/v1/sudoku/candidates",
            "description": "Find all the candidates for all the empty cells.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sudoku-service.p.rapidapi.com/v1/sudoku/candidates\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"sudoku-service.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {}
        },
        {
            "name": "Create",
            "url": "https://sudoku-service.p.rapidapi.com/v1/sudoku",
            "description": "Get a new Sudoku puzzle. Currently, this endpoint does not offer control over the difficulty level of the puzzle returned. It will be be made randomly, and can be anywhere from extremely easy to extremely difficult.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "withSolution",
                    "type": "BOOLEAN",
                    "description": "This optional parameter can be set to true to to make the endpoint return the solution along with the puzzle.",
                    "default": "true"
                }
            ],
            "code": "import requests\n\nurl = \"https://sudoku-service.p.rapidapi.com/v1/sudoku\"\nquerystring = {\"withSolution\": withsolution}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"sudoku-service.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {}
        },
        {
            "name": "Hint",
            "url": "https://sudoku-service.p.rapidapi.com/v1/sudoku/hint",
            "description": "Reveal the value of a single cell, without solving the entire board.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sudoku-service.p.rapidapi.com/v1/sudoku/hint\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"sudoku-service.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {}
        },
        {
            "name": "Verify",
            "url": "https://sudoku-service.p.rapidapi.com/v1/sudoku/verify",
            "description": "Verify a solved or unsolved board. This endpoint returns true for boards that are valid according to the Sudoku rules, and false otherwise.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sudoku-service.p.rapidapi.com/v1/sudoku/verify\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"sudoku-service.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {}
        },
        {
            "name": "Verify",
            "url": "https://sudoku-service.p.rapidapi.com/v1/sudoku/verify",
            "description": "Verify a solved or unsolved board. This endpoint returns true for boards that are valid according to the Sudoku rules, and false otherwise.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sudoku-service.p.rapidapi.com/v1/sudoku/verify\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"sudoku-service.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": "text example!",
            "headers": {},
            "schema": {}
        },
        {
            "name": "Solve",
            "url": "https://sudoku-service.p.rapidapi.com/v1/sudoku/solve",
            "description": "Find one or more solutions to a board, if possible. This endpoint will return all the solutions to the board up to either the total number of solutions, or the number specified by the count parameter (maximum 10), whichever is lower.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "count",
                    "type": "NUMBER",
                    "description": "Optional query parameter to ask for more than one solution. Default is 2, maximum is 10. Set this parameter to 2 so that when only one solution comes back, you can be sure your board has only one unique solution.",
                    "default": "2"
                }
            ],
            "code": "import requests\n\nurl = \"https://sudoku-service.p.rapidapi.com/v1/sudoku/solve\"\nquerystring = {\"count\": count}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"sudoku-service.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "key1": "value",
                "key2": "value"
            },
            "headers": {},
            "schema": {}
        },
        {
            "name": "Candidates",
            "url": "https://sudoku-service.p.rapidapi.com/v1/sudoku/candidates",
            "description": "Find all the candidates for all the empty cells.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sudoku-service.p.rapidapi.com/v1/sudoku/candidates\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sudoku-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://sudoku-service.p.rapidapi.com/v1/sudoku/candidates\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sudoku-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Hint",
            "url": "https://sudoku-service.p.rapidapi.com/v1/sudoku/hint",
            "description": "Reveal the value of a single cell, without solving the entire board.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sudoku-service.p.rapidapi.com/v1/sudoku/hint\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sudoku-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://sudoku-service.p.rapidapi.com/v1/sudoku/hint\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sudoku-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Verify",
            "url": "https://sudoku-service.p.rapidapi.com/v1/sudoku/verify",
            "description": "Verify a solved or unsolved board. This endpoint returns true for boards that are valid according to the Sudoku rules, and false otherwise.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sudoku-service.p.rapidapi.com/v1/sudoku/verify\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sudoku-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://sudoku-service.p.rapidapi.com/v1/sudoku/verify\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sudoku-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Solve",
            "url": "https://sudoku-service.p.rapidapi.com/v1/sudoku/solve",
            "description": "Find one or more solutions to a board, if possible. This endpoint will return all the solutions to the board up to either the total number of solutions, or the number specified by the count parameter (maximum 10), whichever is lower.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "count",
                    "type": "NUMBER",
                    "description": "Optional query parameter to ask for more than one solution. Default is 2, maximum is 10. Set this parameter to 2 so that when only one solution comes back, you can be sure your board has only one unique solution.",
                    "default": "2"
                }
            ],
            "code": "import requests\n\nurl = \"https://sudoku-service.p.rapidapi.com/v1/sudoku/solve\"\nquerystring = {\"count\": \"2\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sudoku-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://sudoku-service.p.rapidapi.com/v1/sudoku/solve\"\nquerystring = {\"count\": \"2\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sudoku-service.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        }
    ]
}