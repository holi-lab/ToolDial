{
    "product_id": "api_29297c69-c2ee-4761-a244-6efaeb521611",
    "tool_description": "PENTESTON - API Requests, are software interfaces and protocols designed to enhance the security posture tools for check computer systems, networks, and applications. These APIs play a crucial role in the field of cybersecurity by providing tools and functionalities that enable developers and security professionals to integrate security features into their applications and infrastructure.",
    "home_url": "https://rapidapi.com/munsirado-0ktPCF0Rp0w/api/penteston-api/",
    "name": "PENTESTON - API",
    "title": "PENTESTON - API",
    "pricing": "FREE",
    "tool_name": "PENTESTON - API",
    "score": null,
    "host": "penteston-api.p.rapidapi.com",
    "api_list": [
        {
            "name": "/v1/add_target",
            "url": "https://penteston-api.p.rapidapi.com/v1/add_target",
            "description": "API for Add New Target (Host)",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "target_name",
                    "type": "STRING",
                    "description": "Target display name",
                    "default": "Test target"
                },
                {
                    "name": "target_host",
                    "type": "STRING",
                    "description": "Target host Full URL",
                    "default": "http://example.com"
                }
            ],
            "code": "import requests\n\nurl = \"https://penteston-api.p.rapidapi.com/v1/add_target\"\nquerystring = {\"target_name\": \"Test target\", \"target_host\": \"http://example.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"penteston-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://penteston-api.p.rapidapi.com/v1/add_target\"\nquerystring = {\"target_name\": \"Test target\", \"target_host\": \"http://example.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"penteston-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/v1/start_scan",
            "url": "https://penteston-api.p.rapidapi.com/v1/start_scan",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "host_http_user",
                    "type": "STRING",
                    "description": "HTTP User (If restriction on host)",
                    "default": ""
                },
                {
                    "name": "scan_type",
                    "type": "STRING",
                    "description": "Scan type\n\tinfo => Information Gathering\n\trcnc => Reconnaissance\n\tbrte => Brute-force\n\tenum => Enumeration\n\tscan => Scanner\n\tosnt => OSINT\n\tssls => SSL",
                    "default": "{{scan_type}}"
                },
                {
                    "name": "host_http_pass",
                    "type": "STRING",
                    "description": "HTTP Password (If restriction on host)",
                    "default": ""
                },
                {
                    "name": "target_name",
                    "type": "STRING",
                    "description": "Target display name",
                    "default": "Test target (for scan)"
                },
                {
                    "name": "tools",
                    "type": "STRING",
                    "description": "Tools by scan_type, seperated by comma (,)\n\tinfo => Information Gathering\n\t\twhois => Whois \n\t\tnmaps => Nmap (Normal Nmap Scan)\n\t\twhat3 => WhatWeb\n\t\tgodns => Gobuster (DNS subdomain enumeration mode)\n\t\tdnsrc => DNSRecon (DNS Enumeration and Scanning Tool)\n\t\tanubs => Anubis (Subdomain enumeration and information gathering tool)\n\t\trusts => RustScan (The Modern Port Scanner)\n\t\tmstcp => TCP Scan by Metasploit\n\t\tmstwb => Pulling urls from Archive.org by Metasploit\n\t\tdataf => Default File Check by DataSploit\n\t\tdatag => Check Google PDF by DataSploit\n\t\tdatad => Find DNS Records by DataSploit\n\t\tcmsmp => CMS scanner that automates the process of detecting security flaws of the most popular CMSs\n\t\tdmitr => DMitry (Deepmagic Information Gathering Tool)\n\t\tdnsen => dnsenum (enumerates DNS information)\n\t\tjooms => OWASP JoomScan (Joomla Vulnerability Scanner)\n\t\tdiggg => DiG\n\t\t\t\n\trcnc => Reconnaissance\n\t\twhat3 => WhatWeb - Additional requests will be made.\n\t\tdnsdp => DNSDumpster (A tool to perform DNS reconnaissance on target networks.)\n\t\tferce => Fierce (A DNS reconnaissance tool for locating non-contiguous IP space)\n\t\t\n\tbrte => Brute-force\n\t\tgodns => Gobuster (DNS subdomain enumeration mode)\n\t\tdnscn => dnscan (DNS subdomain scanner)\n\t\tdirb0 => Dirb (A web content scanner)\n\t\tdnsmp => Dnsmap (Scan for subdomains using bruteforcing techniques)\n\t\t\n\tenum => Enumeration\n\t\tgodns => Gobuster (DNS subdomain enumeration mode)\n\t\tdnsrc => DNSRecon (DNS Enumeration and Scanning Tool)\n\t\tanubs => Anubis (Subdomain enumeration and information gathering tool)\n\t\tlepus => Lepus (Subdomain finder)\n\t\tdnsen => dnsenum (enumerates DNS information)\n\t\t\n\tscan => Scanner\n\t\tnmaps => Nmap (Normal Nmap Scan)\n\t\tnikto => Nikto web server scanner\n\t\tdnsrc => DNSRecon (DNS Enumeration and Scanning Tool)\n\t\tdnscn => dnscan (DNS subdomain scanner)\n\t\tdirb0 => Dirb (A web content scanner)\n\t\trusts => RustScan (The Modern Port Scanner)\n\t\tmstcp => TCP Scan by Metasploit\n\t\tcmsmp => CMS scanner that automates the process of detecting security flaws of the most popular CMSs\n\t\tjooms => OWASP JoomScan (Joomla Vulnerability Scanner)\n\t\t\n\tosnt => OSINT\n\t\twhois => Whois (Obtain Whois information and name server of a website)\n\t\tmstwb => Pulling urls from Archive.org by Metasploit\n\t\tdataf => Default File Check by DataSploit\n\t\tdatag => Check Google PDF by DataSploit\n\t\tdatad => Find DNS Records by DataSploit\n\t\tghsdm => Goohost (Extracts hosts/subdomains for a specific domain with Google search)\n\t\tghsip => Goohost (Extracts IP or emails for a specific domain with Google search)\n\t\t\n\tssls => SSL\n\t\tciphr => Cipherscan (Tests the ordering of the SSL/TLS ciphers on a given target)\n\t\t\t",
                    "default": "{{tools}}"
                },
                {
                    "name": "test_name",
                    "type": "STRING",
                    "description": "Assessment (Test) display name",
                    "default": "Test Name"
                },
                {
                    "name": "target_host",
                    "type": "STRING",
                    "description": "Target host Full URL",
                    "default": "http://example.com"
                }
            ],
            "code": "import requests\n\nurl = \"https://penteston-api.p.rapidapi.com/v1/start_scan\"\nquerystring = {\"host_http_user\": \"\", \"scan_type\": \"{{scan_type}}\", \"host_http_pass\": \"\", \"target_name\": \"Test target (for scan)\", \"tools\": \"{{tools}}\", \"test_name\": \"Test Name\", \"target_host\": \"http://example.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"penteston-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://penteston-api.p.rapidapi.com/v1/start_scan\"\nquerystring = {\"host_http_user\": \"\", \"scan_type\": \"{{scan_type}}\", \"host_http_pass\": \"\", \"target_name\": \"Test target (for scan)\", \"tools\": \"{{tools}}\", \"test_name\": \"Test Name\", \"target_host\": \"http://example.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"penteston-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "/v1/add_test",
            "url": "https://penteston-api.p.rapidapi.com/v1/add_test",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "target_id",
                    "type": "STRING",
                    "description": "Target ID",
                    "default": "{{target_id}}"
                },
                {
                    "name": "test_name",
                    "type": "STRING",
                    "description": "Assessment (Test) display name",
                    "default": "Test Name"
                },
                {
                    "name": "host_http_pass",
                    "type": "STRING",
                    "description": "HTTP Password (If restriction on host)",
                    "default": ""
                },
                {
                    "name": "host_http_user",
                    "type": "STRING",
                    "description": "HTTP User (If restriction on host)",
                    "default": ""
                },
                {
                    "name": "tools",
                    "type": "STRING",
                    "description": "Tools by scan_type, seperated by comma (,)\n\tinfo => Information Gathering\n\t\twhois => Whois \n\t\tnmaps => Nmap (Normal Nmap Scan)\n\t\twhat3 => WhatWeb\n\t\tgodns => Gobuster (DNS subdomain enumeration mode)\n\t\tdnsrc => DNSRecon (DNS Enumeration and Scanning Tool)\n\t\tanubs => Anubis (Subdomain enumeration and information gathering tool)\n\t\trusts => RustScan (The Modern Port Scanner)\n\t\tmstcp => TCP Scan by Metasploit\n\t\tmstwb => Pulling urls from Archive.org by Metasploit\n\t\tdataf => Default File Check by DataSploit\n\t\tdatag => Check Google PDF by DataSploit\n\t\tdatad => Find DNS Records by DataSploit\n\t\tcmsmp => CMS scanner that automates the process of detecting security flaws of the most popular CMSs\n\t\tdmitr => DMitry (Deepmagic Information Gathering Tool)\n\t\tdnsen => dnsenum (enumerates DNS information)\n\t\tjooms => OWASP JoomScan (Joomla Vulnerability Scanner)\n\t\tdiggg => DiG\n\t\t\t\n\trcnc => Reconnaissance\n\t\twhat3 => WhatWeb - Additional requests will be made.\n\t\tdnsdp => DNSDumpster (A tool to perform DNS reconnaissance on target networks.)\n\t\tferce => Fierce (A DNS reconnaissance tool for locating non-contiguous IP space)\n\t\t\n\tbrte => Brute-force\n\t\tgodns => Gobuster (DNS subdomain enumeration mode)\n\t\tdnscn => dnscan (DNS subdomain scanner)\n\t\tdirb0 => Dirb (A web content scanner)\n\t\tdnsmp => Dnsmap (Scan for subdomains using bruteforcing techniques)\n\t\t\n\tenum => Enumeration\n\t\tgodns => Gobuster (DNS subdomain enumeration mode)\n\t\tdnsrc => DNSRecon (DNS Enumeration and Scanning Tool)\n\t\tanubs => Anubis (Subdomain enumeration and information gathering tool)\n\t\tlepus => Lepus (Subdomain finder)\n\t\tdnsen => dnsenum (enumerates DNS information)\n\t\t\n\tscan => Scanner\n\t\tnmaps => Nmap (Normal Nmap Scan)\n\t\tnikto => Nikto web server scanner\n\t\tdnsrc => DNSRecon (DNS Enumeration and Scanning Tool)\n\t\tdnscn => dnscan (DNS subdomain scanner)\n\t\tdirb0 => Dirb (A web content scanner)\n\t\trusts => RustScan (The Modern Port Scanner)\n\t\tmstcp => TCP Scan by Metasploit\n\t\tcmsmp => CMS scanner that automates the process of detecting security flaws of the most popular CMSs\n\t\tjooms => OWASP JoomScan (Joomla Vulnerability Scanner)\n\t\t\n\tosnt => OSINT\n\t\twhois => Whois (Obtain Whois information and name server of a website)\n\t\tmstwb => Pulling urls from Archive.org by Metasploit\n\t\tdataf => Default File Check by DataSploit\n\t\tdatag => Check Google PDF by DataSploit\n\t\tdatad => Find DNS Records by DataSploit\n\t\tghsdm => Goohost (Extracts hosts/subdomains for a specific domain with Google search)\n\t\tghsip => Goohost (Extracts IP or emails for a specific domain with Google search)\n\t\t\n\tssls => SSL\n\t\tciphr => Cipherscan (Tests the ordering of the SSL/TLS ciphers on a given target)\n\t\t\t",
                    "default": "{{tools}}"
                },
                {
                    "name": "scan_type",
                    "type": "STRING",
                    "description": "Scan type\n\tinfo => Information Gathering\n\trcnc => Reconnaissance\n\tbrte => Brute-force\n\tenum => Enumeration\n\tscan => Scanner\n\tosnt => OSINT\n\tssls => SSL",
                    "default": "{{scan_type}}"
                }
            ],
            "code": "import requests\n\nurl = \"https://penteston-api.p.rapidapi.com/v1/add_test\"\nquerystring = {\"target_id\": \"{{target_id}}\", \"test_name\": \"Test Name\", \"host_http_pass\": \"\", \"host_http_user\": \"\", \"tools\": \"{{tools}}\", \"scan_type\": \"{{scan_type}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"penteston-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://penteston-api.p.rapidapi.com/v1/add_test\"\nquerystring = {\"target_id\": \"{{target_id}}\", \"test_name\": \"Test Name\", \"host_http_pass\": \"\", \"host_http_user\": \"\", \"tools\": \"{{tools}}\", \"scan_type\": \"{{scan_type}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"penteston-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    ]
}