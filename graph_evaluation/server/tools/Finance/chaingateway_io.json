{
    "product_id": "api_609d162f-779d-4b06-89f4-7515ebefe909",
    "tool_description": "Blockchain API to connect Web 2.0 with Web 3.0 in an easy way. We provide all tools you need to manage non custody wallets, send and receive transactions, use web hooks to receive notifications on deposits or check balances of tokens in an automatic way. All major blockchains are supported, as well as the tokens on them. Our API is secure and made in Germany.",
    "home_url": "https://rapidapi.com/Chaingateway/api/chaingateway-io/",
    "name": "Chaingateway.io",
    "title": "Chaingateway.io",
    "pricing": "FREE",
    "tool_name": "Chaingateway.io",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 936,
        "avgSuccessRate": 100,
        "popularityScore": 9.1,
        "__typename": "Score"
    },
    "host": "chaingateway-io.p.rapidapi.com",
    "api_list": [
        {
            "name": "clearAddress",
            "url": "https://chaingateway-io.p.rapidapi.com/v1/clearAddress",
            "description": "Sends all available ethereum funds of an address to a specified receiver address.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/clearAddress\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/clearAddress\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "ok": false,
                "description": "API Key is missing. Please add your API Key to prevent getting banned."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "listSubscribedAddresses",
            "url": "https://chaingateway-io.p.rapidapi.com/v1/listSubscribedAddresses",
            "description": "Returns all subscriptions/IPNs created with an account.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/listSubscribedAddresses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/listSubscribedAddresses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "ok": false,
                "description": "API Key is missing. Please add your API Key to prevent getting banned."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getLastBlockNumber",
            "url": "https://chaingateway-io.p.rapidapi.com/v1/getLastBlockNumber",
            "description": "Returns the block number of the last mined ethereum block.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/getLastBlockNumber\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/getLastBlockNumber\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "ok": false,
                "description": "API Key is missing. Please add your API Key to prevent getting banned."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getTransactions",
            "url": "https://chaingateway-io.p.rapidapi.com/v1/getTransactions",
            "description": "Returns information like confirmations, token contract address, amount, gas price and more of a given transaction.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/getTransactions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/getTransactions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "ok": false,
                "description": "API Key is missing. Please add your API Key to prevent getting banned."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "subscribeAddress",
            "url": "https://chaingateway-io.p.rapidapi.com/v1/subscribeAddress",
            "description": "Creates a new subscription/IPN for the given address (and contractaddress). You will receive a notification to the given url every time a deposit is received. Unsubscribe the address before sending tokens/ETH from it or you won't get reliable notifications anymore.\r\n",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/subscribeAddress\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/subscribeAddress\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "ok": false,
                "description": "API Key is missing. Please add your API Key to prevent getting banned."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "unsubscribeAddress",
            "url": "https://chaingateway-io.p.rapidapi.com/v1/unsubscribeAddress",
            "description": "Deletes an existing subscription/IPN for the given address (and contractaddress).",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/unsubscribeAddress\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/unsubscribeAddress\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "ok": false,
                "description": "API Key is missing. Please add your API Key to prevent getting banned."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getToken",
            "url": "https://chaingateway-io.p.rapidapi.com/v1/getToken",
            "description": "Returns information about a specific ERC20 token like name, symbol, decimal places and total supply.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/getToken\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/getToken\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "ok": false,
                "description": "API Key is missing. Please add your API Key to prevent getting banned."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "sendToken",
            "url": "https://chaingateway-io.p.rapidapi.com/v1/sendToken",
            "description": "Sends ERC20 tokens from an address controlled by the account to a specified receiver address. The token contract address is needed to specify the token. The use of the identifier parameter is recommend and awaits an unique string. Whenever a transaction is beeing sent, the identifier is checked and the transaction gets dropped if there is one with that identifier already.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/sendToken\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/sendToken\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "ok": false,
                "description": "API Key is missing. Please add your API Key to prevent getting banned."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getEthereumBalance",
            "url": "https://chaingateway-io.p.rapidapi.com/v1/getEthereumBalance",
            "description": "Returns the ethereum balance of a given address.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/getEthereumBalance\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/getEthereumBalance\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "ok": false,
                "description": "API Key is missing. Please add your API Key to prevent getting banned."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "listAddresses",
            "url": "https://chaingateway-io.p.rapidapi.com/v1/listAddresses",
            "description": "Returns all ethereum addresses created with an account.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/listAddresses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/listAddresses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "ok": false,
                "description": "API Key is missing. Please add your API Key to prevent getting banned."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getExchangeRate",
            "url": "https://chaingateway-io.p.rapidapi.com/v1/getExchangeRate",
            "description": "Returns the current Ethereum price in Euro or US Dollar.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/getExchangeRate\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/getExchangeRate\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "ok": false,
                "description": "API Key is missing. Please add your API Key to prevent getting banned."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "sendEthereum",
            "url": "https://chaingateway-io.p.rapidapi.com/v1/sendEthereum",
            "description": "Sends ethereum from an address controlled by the account to a specified receiver address.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/sendEthereum\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/sendEthereum\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "ok": false,
                "description": "API Key is missing. Please add your API Key to prevent getting banned."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getTokenBalance",
            "url": "https://chaingateway-io.p.rapidapi.com/v1/getTokenBalance",
            "description": "Returns the token balance of a given address.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/getTokenBalance\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/getTokenBalance\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "ok": false,
                "description": "API Key is missing. Please add your API Key to prevent getting banned."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getGasPrice",
            "url": "https://chaingateway-io.p.rapidapi.com/v1/getGasPrice",
            "description": "Returns the current gas price in GWEI.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/getGasPrice\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/getGasPrice\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "ok": false,
                "description": "API Key is missing. Please add your API Key to prevent getting banned."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "newAddress",
            "url": "https://chaingateway-io.p.rapidapi.com/v1/newAddress",
            "description": "Generates a new ethereum addresses you can use to send or receive funds. Do not lose the password! We can't restore access to an address if you lose it.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/newAddress\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/newAddress\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "ok": false,
                "description": "API Key is missing. Please add your API Key to prevent getting banned."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "deleteAddress",
            "url": "https://chaingateway-io.p.rapidapi.com/v1/deleteAddress",
            "description": "Deletes an existing ethereum address. Be careful when using this function.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/deleteAddress\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/deleteAddress\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "ok": false,
                "description": "API Key is missing. Please add your API Key to prevent getting banned."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "getBlock",
            "url": "https://chaingateway-io.p.rapidapi.com/v1/getBlock",
            "description": "Returns information of an ethereum block with or without transactions",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/getBlock\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/getBlock\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "ok": false,
                "description": "API Key is missing. Please add your API Key to prevent getting banned."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "exportAddress",
            "url": "https://chaingateway-io.p.rapidapi.com/v1/exportAddress",
            "description": "Returns all ethereum addresses created with an account.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/exportAddress\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/exportAddress\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "ok": false,
                "description": "API Key is missing. Please add your API Key to prevent getting banned."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "importAddress",
            "url": "https://chaingateway-io.p.rapidapi.com/v1/importAddress",
            "description": "Returns all ethereum addresses created with an account.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/importAddress\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v1/importAddress\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "ok": false,
                "description": "API Key is missing. Please add your API Key to prevent getting banned."
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "withdrawExpireUnfreezeCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/withdrawexpireunfreeze",
            "description": "Withdraw unfrozen balance in Stake2.0,  the user can call this API to get back their funds after executing /wallet/unfreezebalancev2 transaction and waiting N days, N is a network parameter",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/withdrawexpireunfreeze\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/withdrawexpireunfreeze\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "getAddressTransactions",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/ethereum/addresses/0x0b0ee8e6570c47debe98710c60a265bf3db7fb89/transactions",
            "description": "Our API provides an endpoint for retrieving all transactions associated with a particular blockchain address. To use this endpoint, you will need to provide the wallet address as a parameter in the request.\n\nEach page of results returned by this endpoint contains up to 100 entries, and you can use a paginator to navigate through the pages of results.\n\nTo use the paginator, you can include parameter in your request: \"page\" . The \"page\" parameter specifies which page of results to retrieve,\n\nFor example, to retrieve the first 100 transactions associated with a particular blockchain address, you would make a request to the following URL:\n\n```\n/addresses//transactions/1\n\n```\n\nIf there are more than 100 transactions associated with the blockchain address, you can retrieve additional pages of results by incrementing the \"page\" parameter in your request. For example, to retrieve the next 100 transactions, you would make a request to the following URL:\n\n```\n/addresses//transactions/2\n```\n\nBy using the paginator, you can retrieve all transactions associated with a particular blockchain address, regardless of the total number of transactions in the blockchain.\n\neach request tells you the max pages within the Request in the **max_pages** field\n\n`\"max_pages\": 515`",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "address",
                    "type": "STRING",
                    "description": "account address",
                    "default": "0x0b0ee8e6570c47debe98710c60a265bf3db7fb89"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/ethereum/addresses/0x0b0ee8e6570c47debe98710c60a265bf3db7fb89/transactions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/ethereum/addresses/{address}/transactions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "unfreezeBalanceV2Copy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/unfreezebalancev2",
            "description": "Unstake some TRX staked in Stake2.0, release the corresponding amount of bandwidth or energy, and voting rights (TP)",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/unfreezebalancev2\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/unfreezebalancev2\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "broadcastTransaction",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/bsc/transactions/broadcast",
            "description": "Broadcast raw transactions",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bsc/transactions/broadcast\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bsc/transactions/broadcast\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "createWallet",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/bitcoin/wallets",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bitcoin/wallets\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bitcoin/wallets\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "sendBep20",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/bsc/transactions/bep20",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bsc/transactions/bep20\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bsc/transactions/bep20\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "sendTransaction",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/bsc/transactions",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bsc/transactions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bsc/transactions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "sendBep721",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/bsc/transactions/bep721",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bsc/transactions/bep721\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bsc/transactions/bep721\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "resendFailedIpn",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/webhooks/notifications/failed/62640817eb594da78c7bee00",
            "description": "Returns all subscriptions/IPNs created with an account.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/webhooks/notifications/failed/62640817eb594da78c7bee00\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/webhooks/notifications/failed/62640817eb594da78c7bee00\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "subscribeAddress",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/webhooks",
            "description": "Creates a new subscription/IPN for the given address (and contractaddress). You will receive a notification to the given url every time a deposit is received. Unsubscribe the address before sending tokens/ETH from it or you won't get reliable notifications anymore.\r\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/webhooks\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/webhooks\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "getUncleByBlockNumberAndIndex",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/rpc",
            "description": "Returns information about a uncle of a block by number and uncle index position.\r\n\r\n**Parameters**\r\n\r\n`QUANTITY|TAG` - a block number, or the string `\"earliest\"`, `\"latest\"` or `\"pending\"`, as in the default block parameter.\r\n\r\n`QUANTITY` - the uncle's index position.\r\n\r\n```\r\nparams: [\r\n   '0x29c', // 668\r\n   '0x0' // 0\r\n]\r\n```\r\n\r\n**Returns**\r\n\r\nSee `eth_getBlockByHash`\r\n\r\n**Note:** An uncle doesn't contain individual transactions.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/rpc\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/rpc\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "getUncleByBlockNumberAndIndex",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/bsc/rpc",
            "description": "Returns information about a uncle of a block by number and uncle index position.\r\n\r\n**Parameters**\r\n\r\n`QUANTITY|TAG` - a block number, or the string `\"earliest\"`, `\"latest\"` or `\"pending\"`, as in the default block parameter.\r\n\r\n`QUANTITY` - the uncle's index position.\r\n\r\n```\r\nparams: [\r\n   '0x29c', // 668\r\n   '0x0' // 0\r\n]\r\n```\r\n\r\n**Returns**\r\n\r\nSee `eth_getBlockByHash`\r\n\r\n**Note:** An uncle doesn't contain individual transactions.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bsc/rpc\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bsc/rpc\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "help",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/bitcoin/rpc",
            "description": "# help \n`help ( \"command\" )`\n\nList all commands, or get help for a specified command.\n\n## Argument #1 - command\n**Type**: string, optional, default=all commands\n\nThe command to get help on",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bitcoin/rpc\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bitcoin/rpc\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "exportAddress",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/polygon/addresses/export/0xfa343ee01667869cfb409b24ae33f7ce8b110eb0",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "address",
                    "type": "STRING",
                    "description": "Polygon address",
                    "default": "0xfa343ee01667869cfb409b24ae33f7ce8b110eb0"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/polygon/addresses/export/0xfa343ee01667869cfb409b24ae33f7ce8b110eb0\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/polygon/addresses/export/{address}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "importAddress",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/polygon/addresses/import",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/polygon/addresses/import\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/polygon/addresses/import\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "resendFailedIpn",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/ethereum/webhooks/notifications/failed/62640817eb594da78c7bee00",
            "description": "Returns all subscriptions/IPNs created with an account.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "notification",
                    "type": "STRING",
                    "description": "Notification api",
                    "default": "62640817eb594da78c7bee00"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/ethereum/webhooks/notifications/failed/62640817eb594da78c7bee00\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/ethereum/webhooks/notifications/failed/{notification}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "newAddress",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/polygon/addresses",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/polygon/addresses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/polygon/addresses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "subscribeAddress",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/ethereum/webhooks",
            "description": "Creates a new subscription/IPN for the given address (and contractaddress). You will receive a notification to the given url every time a deposit is received. Unsubscribe the address before sending tokens/ETH from it or you won't get reliable notifications anymore.\n\nYou can choose one or more from following filter criterias\n\n| **Parameter** | **Description** |\n| --- | --- |\n| from | ethereum address |\n| to | ethereum address |\n| contractaddress | contract address |\n| tokenid | token id |\n\nYou also need to dpecify the parameter \"type\". you can choose between \\['ETH', 'ERC20', 'ERC721', null\\]",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/ethereum/webhooks\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/ethereum/webhooks\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "freeze",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/freeze",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/freeze\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/freeze\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "sendTrc10",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/transactions/trc10",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/transactions/trc10\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/transactions/trc10\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "sendTransaction",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/transactions",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/transactions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/transactions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "unfreeze",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/unfreeze",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/unfreeze\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/unfreeze\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "subscribeAddress",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/bsc/webhooks",
            "description": "Creates a new subscription/IPN for the given address (and contractaddress). You will receive a notification to the given url every time a deposit is received. Unsubscribe the address before sending tokens/ETH from it or you won't get reliable notifications anymore.\r\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bsc/webhooks\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bsc/webhooks\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "sendTrc721",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/transactions/trc721",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/transactions/trc721\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/transactions/trc721\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "sendTrc20",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/transactions/trc20",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/transactions/trc20\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/transactions/trc20\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "resendFailedIpn",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/bsc/webhooks/notifications/failed/62640817eb594da78c7bee00",
            "description": "Returns all subscriptions/IPNs created with an account.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "notification_id",
                    "type": "STRING",
                    "description": "Notification id",
                    "default": "62640817eb594da78c7bee00"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bsc/webhooks/notifications/failed/62640817eb594da78c7bee00\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bsc/webhooks/notifications/failed/{notification_id}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "sendErc20",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/polygon/transactions/erc20",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/polygon/transactions/erc20\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/polygon/transactions/erc20\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "sendTransaction",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/polygon/transactions",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/polygon/transactions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/polygon/transactions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "sendErc721",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/polygon/transactions/erc721",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/polygon/transactions/erc721\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/polygon/transactions/erc721\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "broadcastTransaction",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/polygon/transactions/broadcast",
            "description": "Broadcast raw transactions",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/polygon/transactions/broadcast\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/polygon/transactions/broadcast\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "getAddressTransactionsCopy2",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/polygon/addresses/0xd848f724602b0c4bbd8d6a72e231126202b3182e/transactions",
            "description": "Our API provides an endpoint for retrieving all transactions associated with a particular blockchain address. To use this endpoint, you will need to provide the wallet address as a parameter in the request.\n\nEach page of results returned by this endpoint contains up to 100 entries, and you can use a paginator to navigate through the pages of results.\n\nTo use the paginator, you can include parameter in your request: \"page\" . The \"page\" parameter specifies which page of results to retrieve,\n\nFor example, to retrieve the first 100 transactions associated with a particular blockchain address, you would make a request to the following URL:\n\n```\n/addresses//transactions/1\n\n```\n\nIf there are more than 100 transactions associated with the blockchain address, you can retrieve additional pages of results by incrementing the \"page\" parameter in your request. For example, to retrieve the next 100 transactions, you would make a request to the following URL:\n\n```\n/addresses//transactions/2\n```\n\nBy using the paginator, you can retrieve all transactions associated with a particular blockchain address, regardless of the total number of transactions in the blockchain.\n\neach request tells you the max pages within the Request in the **max_pages** field\n\n`\"max_pages\": 515`",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "address",
                    "type": "STRING",
                    "description": "account address",
                    "default": "0xd848f724602b0c4bbd8d6a72e231126202b3182e"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/polygon/addresses/0xd848f724602b0c4bbd8d6a72e231126202b3182e/transactions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/polygon/addresses/{address}/transactions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "sendTransaction",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/ethereum/transactions",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/ethereum/transactions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/ethereum/transactions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "sendErc721",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/ethereum/transactions/erc721",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/ethereum/transactions/erc721\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/ethereum/transactions/erc721\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "broadcastTransaction",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/eth/transactions/broadcast",
            "description": "Broadcast raw transactions",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/eth/transactions/broadcast\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/eth/transactions/broadcast\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "resendFailedIpn",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/polygon/webhooks/notifications/failed/626407c62e5e8235ca561dce",
            "description": "Returns all subscriptions/IPNs created with an account.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "notification_id",
                    "type": "STRING",
                    "description": "Notification Id",
                    "default": "626407c62e5e8235ca561dce"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/polygon/webhooks/notifications/failed/626407c62e5e8235ca561dce\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/polygon/webhooks/notifications/failed/{notification_id}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "estimateEnergyCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/estimateenergy",
            "description": "Estimate the energy required for the successful execution of smart contract transactions",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/estimateenergy\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/estimateenergy\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "sendErc20",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/ethereum/transactions/erc20",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/ethereum/transactions/erc20\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/ethereum/transactions/erc20\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "triggerConstantContractCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/triggerconstantcontract",
            "description": "Invoke the readonly function (modified by the `view` or `pure` modifier) of a contract for contract data query; or Invoke the non-readonly function of a  contract for predicting whether the transaction can be successfully executed or estimating the energy consumption",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/triggerconstantcontract\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/triggerconstantcontract\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "broadcastHexCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/broadcasthex",
            "description": "Broadcast the protobuf encoded transaction hex string after sign",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/broadcasthex\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/broadcasthex\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "subscribeAddress",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/polygon/webhooks",
            "description": "Creates a new subscription/IPN for the given address (and contractaddress). You will receive a notification to the given url every time a deposit is received. Unsubscribe the address before sending tokens/ETH from it or you won't get reliable notifications anymore.\n\nYou can choose one or more from following filter criterias\n\n| **Parameter** | **Description** |\n| --- | --- |\n| from | ethereum address |\n| to | ethereum address |\n| contractaddress | contract address |\n| tokenid | token id |\n\nYou also need to dpecify the parameter \"type\". you can choose between \\['ETH', 'ERC20', 'ERC721', null\\]",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/polygon/webhooks\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/polygon/webhooks\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "updateAssetCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/updateasset",
            "description": "Update basic TRC10 token information.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/updateasset\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/updateasset\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "getTransactionInfoByBlockNumCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/gettransactioninfobyblocknum",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/gettransactioninfobyblocknum\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/gettransactioninfobyblocknum\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "getContractInfoCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getcontractinfo",
            "description": "Queries a contract's information from the blockchain. The difference from the `wallet/getcontract` interface is that this interface returns not only the `bytecode` but also the `runtime bytecode` of the contract. Compared with `bytecode`, `runtime bytecode` does not contain constructor and constructor parameter information.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getcontractinfo\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getcontractinfo\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "getBlockByNumCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getblockbynum",
            "description": "Returns the Block Object corresponding to the 'Block Height' specified (number of blocks preceding it).",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getblockbynum\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getblockbynum\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "getDelegatedResourceCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getdelegatedresource",
            "description": "Returns all resources delegations during stake1.0 phase from an account to another account. The fromAddress can be retrieved from the GetDelegatedResourceAccountIndex API.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getdelegatedresource\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getdelegatedresource\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "getAvailableUnfreezeCountCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getavailableunfreezecount",
            "description": "Remaining times of executing unstake operation in Stake2.0",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getavailableunfreezecount\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getavailableunfreezecount\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "getCanDelegatedMaxSizeCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getcandelegatedmaxsize",
            "description": "In Stake2.0, query the amount of delegatable resources share of the specified resource type for an address, unit is sun.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getcandelegatedmaxsize\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getcandelegatedmaxsize\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "sendTransaction",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/bitcoin/transactions",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bitcoin/transactions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bitcoin/transactions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "newAddressCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/addresses",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/addresses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/addresses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "importAddress",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/bsc/addresses/import",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bsc/addresses/import\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bsc/addresses/import\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "exportAddress",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/bsc/addresses/export/0xa1f36016221d48ce7f15cde7b826a4fbe09bacce",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "address",
                    "type": "STRING",
                    "description": "BSC address",
                    "default": "0xa1f36016221d48ce7f15cde7b826a4fbe09bacce"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bsc/addresses/export/0xa1f36016221d48ce7f15cde7b826a4fbe09bacce\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bsc/addresses/export/{address}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "getAddressTransactionsCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/bsc/addresses/0x3032cE567c21329fC95B150022d50753ecCB4F1d/transactions",
            "description": "Our API provides an endpoint for retrieving all transactions associated with a particular blockchain address. To use this endpoint, you will need to provide the wallet address as a parameter in the request.\n\nEach page of results returned by this endpoint contains up to 100 entries, and you can use a paginator to navigate through the pages of results.\n\nTo use the paginator, you can include parameter in your request: \"page\" . The \"page\" parameter specifies which page of results to retrieve,\n\nFor example, to retrieve the first 100 transactions associated with a particular blockchain address, you would make a request to the following URL:\n\n```\n/addresses//transactions/1\n\n```\n\nIf there are more than 100 transactions associated with the blockchain address, you can retrieve additional pages of results by incrementing the \"page\" parameter in your request. For example, to retrieve the next 100 transactions, you would make a request to the following URL:\n\n```\n/addresses//transactions/2\n```\n\nBy using the paginator, you can retrieve all transactions associated with a particular blockchain address, regardless of the total number of transactions in the blockchain.\n\neach request tells you the max pages within the Request in the **max_pages** field\n\n`\"max_pages\": 515`",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "address",
                    "type": "STRING",
                    "description": "account address",
                    "default": "0x3032cE567c21329fC95B150022d50753ecCB4F1d"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bsc/addresses/0x3032cE567c21329fC95B150022d50753ecCB4F1d/transactions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bsc/addresses/{address}/transactions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "newAddress",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/bsc/addresses",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bsc/addresses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bsc/addresses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "importAddress",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/ethereum/addresses/import",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/ethereum/addresses/import\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/ethereum/addresses/import\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "newAddress",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/ethereum/addresses",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/ethereum/addresses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/ethereum/addresses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "getUncleByBlockNumberAndIndex",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/ethereum/rpc",
            "description": "Returns information about a uncle of a block by number and uncle index position.\r\n\r\n**Parameters**\r\n\r\n`QUANTITY|TAG` - a block number, or the string `\"earliest\"`, `\"latest\"` or `\"pending\"`, as in the default block parameter.\r\n\r\n`QUANTITY` - the uncle's index position.\r\n\r\n```\r\nparams: [\r\n   '0x29c', // 668\r\n   '0x0' // 0\r\n]\r\n```\r\n\r\n**Returns**\r\n\r\nSee `eth_getBlockByHash`\r\n\r\n**Note:** An uncle doesn't contain individual transactions.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/ethereum/rpc\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/ethereum/rpc\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "exportAddress",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/ethereum/addresses/export/0xacc767f4042360c5f08c7b98bac8e66a5c679cef",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "address",
                    "type": "STRING",
                    "description": "0xe7114f0dbd5a5fa62ed2df905f7391c957ff9e36",
                    "default": "0xacc767f4042360c5f08c7b98bac8e66a5c679cef"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/ethereum/addresses/export/0xacc767f4042360c5f08c7b98bac8e66a5c679cef\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/ethereum/addresses/export/{address}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "getUncleByBlockNumberAndIndex",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/polygon/rpc",
            "description": "Returns information about a uncle of a block by number and uncle index position.\r\n\r\n**Parameters**\r\n\r\n`QUANTITY|TAG` - a block number, or the string `\"earliest\"`, `\"latest\"` or `\"pending\"`, as in the default block parameter.\r\n\r\n`QUANTITY` - the uncle's index position.\r\n\r\n```\r\nparams: [\r\n   '0x29c', // 668\r\n   '0x0' // 0\r\n]\r\n```\r\n\r\n**Returns**\r\n\r\nSee `eth_getBlockByHash`\r\n\r\n**Note:** An uncle doesn't contain individual transactions.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/polygon/rpc\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/polygon/rpc\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "clearAbiCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/clearabi",
            "description": "To clear the ABI info of a smart contract.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/clearabi\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/clearabi\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "getAssetIssueByNameCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getassetissuebyname",
            "description": "Query a token by name, returns token info.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getassetissuebyname\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getassetissuebyname\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "triggerSmartContractCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/triggersmartcontract",
            "description": "Returns TransactionExtention, which contains the unsigned Transaction",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/triggersmartcontract\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/triggersmartcontract\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "getBlockByLimitNextCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getblockbylimitnext",
            "description": "Returns the list of Block Objects included in the 'Block Height' range specified.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getblockbylimitnext\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getblockbylimitnext\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "getBlockByIdCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getblockbyid",
            "description": "Query block by ID(block hash).",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getblockbyid\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getblockbyid\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "getTransactionInfoByIdCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/gettransactioninfobyid",
            "description": "Query the transaction fee, block height by transaction id",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/gettransactioninfobyid\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/gettransactioninfobyid\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "subscribeAddress",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/bitcoin/webhooks",
            "description": "Creates a new subscription/IPN for the given address You will receive a notification to the given url every time a deposit is received. Unsubscribe the address before sending sats from it or you won't get reliable notifications anymore.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bitcoin/webhooks\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bitcoin/webhooks\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "getLastBlockNumber",
            "url": "https://chaingateway-io.p.rapidapi.com/receiver/forumpay",
            "description": "Get the latest block number",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/receiver/forumpay\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/receiver/forumpay\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "createWalletAddress",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/bitcoin/wallets/Evolo_2163532/addresses",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "wallet_name",
                    "type": "STRING",
                    "description": "Wallet name",
                    "default": "Evolo_2163532"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bitcoin/wallets/Evolo_2163532/addresses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bitcoin/wallets/{wallet_name}/addresses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "deployContractCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/deploycontract",
            "description": "Deploys a contract. Returns TransactionExtention, which contains an unsigned transaction.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/deploycontract\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/deploycontract\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "getDelegatedResourceAccountIndexCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getdelegatedresourceaccountindex",
            "description": "Query the resource delegation by an account during stake1.0 phase. i.e. list all addresses that have delegated resources to an account.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getdelegatedresourceaccountindex\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getdelegatedresourceaccountindex\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "updateEnergyLimitCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/updateenergylimit",
            "description": "Update the origin_energy_limit parameter of a smart contract",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/updateenergylimit\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/updateenergylimit\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "updateSettingCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/updatesetting",
            "description": "Update the consume_user_resource_percent parameter of a smart contract",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/updatesetting\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/updatesetting\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "getAssetIssueByIdCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getassetissuebyid",
            "description": "Query a token by token id. Returns the token object, which contains the token name.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getassetissuebyid\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getassetissuebyid\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "getAccountNetCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getaccountnet",
            "description": "Query bandwidth information.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getaccountnet\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getaccountnet\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "getTransactionByIdCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/gettransactionbyid",
            "description": "Query transaction information by transaction id.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/gettransactionbyid\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/gettransactionbyid\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "getAccountResourceCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getaccountresource",
            "description": "Query the resource information of an account(bandwidth,energy,etc)",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getaccountresource\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getaccountresource\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "getCanWithdrawUnfreezeAmountCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getcanwithdrawunfreezeamount",
            "description": "Query the withdrawable balance at the specified timestamp In Stake2.0",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getcanwithdrawunfreezeamount\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getcanwithdrawunfreezeamount\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "freezeBalanceV2Copy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/freezebalancev2",
            "description": "In Stake2.0, stake an amount of TRX to obtain bandwidth or energy, and obtain equivalent TRON Power(TP) according to the staked amount",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/freezebalancev2\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/freezebalancev2\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "getNowBlockCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getnowblock",
            "description": "Query the latest block information",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getnowblock\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getnowblock\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "getAccountBalanceCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getaccountbalance",
            "description": "Get the account balance in a specific block.(Note: At present, the interface data can only be queried through the following official nodes 13.228.119.63 & 18.139.193.235 & 18.141.79.38 & 18.139.248.26)",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getaccountbalance\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getaccountbalance\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "getContractCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getcontract",
            "description": "Queries a contract's information from the blockchain, including the bytecode of the contract, ABI, configuration parameters, etc.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getcontract\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getcontract\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "getDelegatedResourceAccountIndexV2Copy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getdelegatedresourceaccountindexv2",
            "description": "In Stake2.0, query the resource delegation index by an account. Two lists will return, one is the list of addresses the account has delegated its resources(toAddress), and the other is the list of addresses that have delegated resources to the account(fromAddress).",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getdelegatedresourceaccountindexv2\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getdelegatedresourceaccountindexv2\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "getBlockByLatestNumCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getblockbylatestnum",
            "description": "Returns a list of block objects.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getblockbylatestnum\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getblockbylatestnum\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "unDelegateResourceCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/undelegateresource",
            "description": "Cancel the delegation of bandwidth or energy resources to other accounts in Stake2.0",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/undelegateresource\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/undelegateresource\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "createTransactionCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/createtransaction",
            "description": "Create a TRX transfer transaction. If to_address does not exist, then create the account on the blockchain.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/createtransaction\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/createtransaction\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "broadcastTransactionCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/broadcasttransaction",
            "description": "Broadcast the signed transaction",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/broadcasttransaction\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/broadcasttransaction\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "resendFailedIpn",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/bitcoin/webhooks/notifications/failed/62640817eb594da78c7bee00",
            "description": "Returns all subscriptions/IPNs created with an account.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "notification_id",
                    "type": "STRING",
                    "description": "Notification id",
                    "default": "62640817eb594da78c7bee00"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bitcoin/webhooks/notifications/failed/62640817eb594da78c7bee00\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bitcoin/webhooks/notifications/failed/{notification_id}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "validateAddressCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/validateaddress",
            "description": "Validates address, returns either true or false.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/validateaddress\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/validateaddress\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "getBlockBalanceCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getblockbalance",
            "description": "Get all balance change operations in a block.(Note: At present, the interface data can only be queried through the following official nodes 13.228.119.63 & 18.139.193.235&18.141.79.38 &18.139.248.26)",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getblockbalance\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getblockbalance\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "delegateResourceCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/delegateresource",
            "description": "Delegate bandwidth or energy resources to other accounts in Stake2.0.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/delegateresource\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/delegateresource\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "getBlockCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getblock",
            "description": "Query block header information or entire block information according to block height or block hash",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getblock\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/getblock\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "unfreezeAssetCopy",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/unfreezeasset",
            "description": "Unstake a token that has passed the minimum freeze duration.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/unfreezeasset\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/tron/wallet/unfreezeasset\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "exportAddressPrivateKey",
            "url": "https://chaingateway-io.p.rapidapi.com/v2/bitcoin/wallets/Evolo_4215179/addresses/bc1qz3hdws5lt5ug7qwfv4m4ttanaq67ts77ekv95x/export",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": "Evolo_4215179"
                },
                {
                    "name": "address",
                    "type": "STRING",
                    "description": "",
                    "default": "bc1qz3hdws5lt5ug7qwfv4m4ttanaq67ts77ekv95x"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bitcoin/wallets/Evolo_4215179/addresses/bc1qz3hdws5lt5ug7qwfv4m4ttanaq67ts77ekv95x/export\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://chaingateway-io.p.rapidapi.com/v2/bitcoin/wallets/{name}/addresses/{address}/export\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chaingateway-io.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        }
    ],
    "standardized_name": "chaingateway_io"
}