{
    "product_id": "api_6b2bb50c-9968-40b4-90eb-bfdb6cde6a3b",
    "tool_description": "Portfolio Optimizer is a Web API democratizing the access to the Nobel Prize-winning science of portfolio optimization.",
    "home_url": "https://rapidapi.com/lequant40/api/portfolio-optimizer/",
    "name": "Portfolio Optimizer",
    "title": "Portfolio Optimizer",
    "pricing": "FREE",
    "tool_name": "Portfolio Optimizer",
    "score": null,
    "host": "portfolio-optimizer.p.rapidapi.com",
    "api_list": [
        {
            "name": "/portfolio/analysis/value-at-risk",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/value-at-risk",
            "description": "Compute the value at risk of one or several portfolio(s) from portfolio values.\n\nReferences\n* [Wikipedia, Value at risk](https://en.wikipedia.org/wiki/Value_at_risk)\n* [Acerbi, C. and Tasche, D. (2002), Expected Shortfall: A Natural Coherent Alternative to Value at Risk. Economic Notes, 31: 379-388](https://onlinelibrary.wiley.com/doi/abs/10.1111/1468-0300.00091)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/value-at-risk\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/value-at-risk\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "portfolios"
                ],
                "properties": {
                    "portfolios": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                            "type": "object",
                            "required": [
                                "portfolioValueAtRisk"
                            ],
                            "properties": {
                                "portfolioValueAtRisk": {
                                    "description": "The value at risk of the portfolio",
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/analysis/returns/average",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/returns/average",
            "description": "Compute the arithmetic average of the arithmetic return(s) of one or several portfolio(s).\n\nReferences\n* [Wikipedia, Arithmetic Average Rate of Return](https://en.wikipedia.org/wiki/Rate_of_return#Arithmetic_average_rate_of_return)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/returns/average\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/returns/average\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "portfolios"
                ],
                "properties": {
                    "portfolios": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "portfolioAverageReturn"
                            ],
                            "properties": {
                                "portfolioAverageReturn": {
                                    "description": "The arithmetic average return of the portfolio",
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/assets/correlation/matrix/effective-rank",
            "url": "https://portfolio-optimizer.p.rapidapi.com/assets/correlation/matrix/effective-rank",
            "description": "Compute the effective rank of an asset correlation matrix.\n\nReferences\n* [Olivier Roy and Martin Vetterli, The effective rank: A measure of effective dimensionality, 15th European Signal Processing Conference, 2007](https://ieeexplore.ieee.org/document/7098875)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/correlation/matrix/effective-rank\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/correlation/matrix/effective-rank\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsCorrelationMatrixEffectiveRank"
                ],
                "properties": {
                    "assetsCorrelationMatrixEffectiveRank": {
                        "description": "The effective rank of the asset correlation matrix",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "array",
                            "minItems": 2,
                            "items": {
                                "type": "number"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/analysis/contributions/risk",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/contributions/risk",
            "description": "Perform a risk contribution analysis of one or several portfolio(s), optionally using groups of assets.\n\nReferences\n* Carl R. Bacon, Practical Portfolio Performance Measurement and Attribution\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/contributions/risk\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/contributions/risk\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "portfolios"
                ],
                "properties": {
                    "portfolios": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "assetsRiskContributions"
                            ],
                            "properties": {
                                "assetsRiskContributions": {
                                    "description": "assetsRiskContributions[i] is the risk contribution of the asset i to the risk of the portfolio",
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                        "type": "number"
                                    }
                                },
                                "assetsGroupsRiskContributions": {
                                    "description": "assetsGroupsRiskContributions[k] is the risk contribution of the group of assets k to the risk of the portfolio",
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/analysis/ulcer-performance-index",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/ulcer-performance-index",
            "description": "Compute the Ulcer Performance Index of one or several portfolio(s).\n\nReferences\n* Carl R. Bacon, Practical Portfolio Performance Measurement and Attribution\n* [Peter G. Martin, Ulcer Index, An Alternative Approach to the Measurement of Investment Risk & Risk-Adjusted Performance](http://www.tangotools.com/ui/ui.htm)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/ulcer-performance-index\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/ulcer-performance-index\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "portfolios"
                ],
                "properties": {
                    "portfolios": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "portfolioUlcerPerformanceIndex"
                            ],
                            "properties": {
                                "portfolioUlcerPerformanceIndex": {
                                    "description": "The Ulcer Performance Index of the portfolio",
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/optimization/maximum-return/diversified",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/maximum-return/diversified",
            "description": "Compute the asset weights of the diversified maximum return portfolio, as defined in the first reference, optionally subject to:  \n* Minimum and maximum weights constraints\n* Maximum group weights constraints\n* Minimum and maximum portfolio exposure constraints\n\nThe diversification measure used in the optimization procedure is the [Herfindahl-Hirschman Index](https://en.wikipedia.org/wiki/Herfindahl%E2%80%93Hirschman_index) of the assets weights.\n\nReferences\n * [Alejandro Corvalan, 2005. Well Diversified Efficient Portfolios, Working Papers Central Bank of Chile 336, Central Bank of Chile](https://ideas.repec.org/p/chb/bcchwp/336.html)\n * [Bouchaud, Jean-Philippe and Potters, Marc and Aguilar, Jean-Pierre, Missing Information and Asset Allocation, arXiv, 1997](https://arxiv.org/abs/cond-mat/9707042)\n * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/maximum-return/diversified\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/maximum-return/diversified\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsWeights"
                ],
                "properties": {
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/analysis/sharpe-ratio",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/sharpe-ratio",
            "description": "Compute the Sharpe ratio of one or several portfolio(s) from either:\n* Portfolio assets arithmetic returns and assets covariance matrix\n* Portfolio values\n\nReferences\n* Carl R. Bacon, Practical Portfolio Performance Measurement and Attribution\n* Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/sharpe-ratio\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/sharpe-ratio\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "portfolios"
                ],
                "properties": {
                    "portfolios": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "portfolioSharpeRatio"
                            ],
                            "properties": {
                                "portfolioSharpeRatio": {
                                    "description": "The Sharpe ratio of the portfolio",
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/optimization/inverse-variance-weighted",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/inverse-variance-weighted",
            "description": "Compute the asset weights of the inverse variance-weighted portfolio.\n\nReferences\n * [Raul Leote de Carvalho and al., Demystifying Equity Risk-Based Strategies: A Simple Alpha Plus Beta Description](https://doi.org/10.3905/jpm.2012.38.3.056)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/inverse-variance-weighted\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/inverse-variance-weighted\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsWeights"
                ],
                "properties": {
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/assets/covariance/matrix/sample",
            "url": "https://portfolio-optimizer.p.rapidapi.com/assets/covariance/matrix/sample",
            "description": "Compute the sample covariance matrix of assets returns.\n\n> This endpoint is similar to the endpoint [`/assets/covariance/matrix`](#post-/assets/covariance/matrix), but uses [Bessel's correction](https://en.wikipedia.org/wiki/Bessel%27s_correction) to compute the covariance matrix.\n\nReferences\n* [Wikipedia, Sample Mean and Covariance](https://en.wikipedia.org/wiki/Sample_mean_and_covariance)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/covariance/matrix/sample\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/covariance/matrix/sample\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsCovarianceMatrix"
                ],
                "properties": {
                    "assetsCovarianceMatrix": {
                        "description": "assetsCovarianceMatrix[i][j] is the sample covariance between the asset i returns and the asset j returns",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "array",
                            "minItems": 2,
                            "items": {
                                "type": "number"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/assets/covariance/matrix",
            "url": "https://portfolio-optimizer.p.rapidapi.com/assets/covariance/matrix",
            "description": "Compute the covariance matrix of assets from either:  \n* The asset correlation matrix and their volatilities (i.e., standard deviations)\n* The asset correlation matrix and their variances\n* The asset returns\n\nReferences\n* [Wikipedia, Covariance Matrix](https://en.wikipedia.org/wiki/Covariance_matrix)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/covariance/matrix\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/covariance/matrix\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsCovarianceMatrix"
                ],
                "properties": {
                    "assetsCovarianceMatrix": {
                        "description": "assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "array",
                            "minItems": 2,
                            "items": {
                                "type": "number"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/assets/correlation/matrix/nearest",
            "url": "https://portfolio-optimizer.p.rapidapi.com/assets/correlation/matrix/nearest",
            "description": "Compute the _closest_ correlation matrix to an approximate assets correlation matrix, optionally keeping a selected number of correlations fixed, _closest_ being defined in terms of [the Frobenius norm](https://en.wikipedia.org/wiki/Matrix_norm#Frobenius_norm).\n\nReferences\n* [Nicholas J. Higham, Computing the Nearest Correlation Matrix\u2014A Problem from Finance, IMA J. Numer. Anal. 22, 329\u2013343, 2002.](http://www.maths.manchester.ac.uk/~higham/narep/narep369.pdf)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/correlation/matrix/nearest\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/correlation/matrix/nearest\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsCorrelationMatrix"
                ],
                "properties": {
                    "assetsCorrelationMatrix": {
                        "description": "assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "array",
                            "minItems": 2,
                            "items": {
                                "type": "number"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/analysis/volatility",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/volatility",
            "description": "Compute the volatility (i.e., standard deviation) of one or several portfolio(s) from either:  \n* Portfolio assets covariance matrix\n* Portfolio values\n\nReferences\n* [Wikipedia, Standard Deviation](https://en.wikipedia.org/wiki/Standard_deviation#Finance)\n* Carl R. Bacon, Practical Portfolio Performance Measurement and Attribution\n* Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/volatility\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/volatility\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "portfolios"
                ],
                "properties": {
                    "portfolios": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                            "type": "object",
                            "required": [
                                "portfolioVolatility"
                            ],
                            "properties": {
                                "portfolioVolatility": {
                                    "description": "The volatility of the portfolio",
                                    "type": "number",
                                    "minimum": 0
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/assets/correlation/matrix",
            "url": "https://portfolio-optimizer.p.rapidapi.com/assets/correlation/matrix",
            "description": "Compute the Pearson correlation matrix of assets from either:  \n* The asset returns\n* The asset covariance matrix\n\nReferences\n* [Wikipedia, Correlation and Dependence](https://en.wikipedia.org/wiki/Correlation_and_dependence#Correlation_matrices)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/correlation/matrix\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/correlation/matrix\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsCorrelationMatrix"
                ],
                "properties": {
                    "assetsCorrelationMatrix": {
                        "description": "assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "array",
                            "minItems": 2,
                            "items": {
                                "type": "number"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/optimization/maximum-return/subset-resampling-based",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/maximum-return/subset-resampling-based",
            "description": "Compute the asset weights of the subset resampling-based maximum return portfolio, following the methodology described in the first and the second references, optionally subject to:  \n* Minimum and maximum weights constraints\n* Maximum group weights constraints\n* Minimum and maximum portfolio exposure constraints\n\nReferences\n * [CSSA, Random Subspace Optimization (RSO)](https://cssanalytics.wordpress.com/2013/10/06/random-subspace-optimization-rso/)\n * [Subset Optimization for Asset Allocation,Benjamin J. Gillen](https://www.bengillen.com/uploads/1/2/3/8/123891022/subsets.pdf)\n * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/maximum-return/subset-resampling-based\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/maximum-return/subset-resampling-based\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsWeights"
                ],
                "properties": {
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/analysis/mean-variance/minimum-variance-frontier",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/mean-variance/minimum-variance-frontier",
            "description": "Compute the discretized mean-variance minimum variance frontier associated to a list of assets, optionally subject to:\n* Minimum and maximum weights constraints\n* Maximum group weights constraints\n* Minimum and maximum portfolio exposure constraint\n\n> This endpoint is similar to the endpoint [`/portfolio/analysis/mean-variance/efficient-frontier`](#post-/portfolio/analysis/mean-variance/efficient-frontier), because the mean-variance efficient frontier is the \"top\" portion of the mean-variance minimum variance frontier.\n\nReferences\n * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/mean-variance/minimum-variance-frontier\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/mean-variance/minimum-variance-frontier\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "portfolios"
                ],
                "properties": {
                    "portfolios": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                            "type": "object",
                            "required": [
                                "assetsWeights",
                                "portfolioReturn",
                                "portfolioVolatility"
                            ],
                            "properties": {
                                "assetsWeights": {
                                    "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                                    "type": "array",
                                    "minItems": 2,
                                    "items": {
                                        "type": "number",
                                        "minimum": 0,
                                        "maximum": 1
                                    }
                                },
                                "portfolioReturn": {
                                    "description": "The arithmetic return of the portfolio",
                                    "type": "number"
                                },
                                "portfolioVolatility": {
                                    "description": "The volatility of the portfolio",
                                    "type": "number",
                                    "minimum": 0
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/analysis/return",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/return",
            "description": "Compute the arithmetic return of one or several portfolio(s) from either:  \n* Portfolio assets arithmetic returns\n* Portfolio values\n\nReferences\n* [Wikipedia, Rate of Return](https://en.wikipedia.org/wiki/Rate_of_return#Return)\n* Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/return\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/return\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "portfolios"
                ],
                "properties": {
                    "portfolios": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                            "type": "object",
                            "required": [
                                "portfolioReturn"
                            ],
                            "properties": {
                                "portfolioReturn": {
                                    "description": "The arithmetic return of the portfolio",
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/analysis/factors/exposures",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/factors/exposures",
            "description": "Compute the exposures of one or several portfolio(s) to a set of factors, using a returns-based linear regression analysis.\n\nReferences\n* [Measuring Factor Exposures: Uses and Abuses, Ronen Israel and Adrienne Ross, The Journal of Alternative Investments Summer 2017, 20 (1) 10-25](https://jai.pm-research.com/content/20/1/10.short) \n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/factors/exposures\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/factors/exposures\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "portfolios"
                ],
                "properties": {
                    "portfolios": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                            "type": "object",
                            "required": [
                                "portfolioAlpha",
                                "portfolioBetas",
                                "portfolioRSquared"
                            ],
                            "properties": {
                                "portfolioAlpha": {
                                    "description": "The portfolio alpha, which correponds to the portion of the portfolio returns that cannot be explained by the portfolio factor exposures",
                                    "type": "number"
                                },
                                "portfolioBetas": {
                                    "description": "The portfolio betas, which correspond to the portfolio factor exposures",
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                        "type": "number"
                                    }
                                },
                                "portfolioRSquared": {
                                    "description": "The portfolio R^2, which indicates how much of the variability in the portfolio returns can be explained by the portfolio factor exposures; generally, the higher the R^2 the better the portfolio factor exposures explain the portfolio returns",
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/optimization/mean-variance-efficient/subset-resampling-based",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/mean-variance-efficient/subset-resampling-based",
            "description": "Compute the asset weights of a subset resampling-based  mean-variance efficient portfolio, following the methodology described in the first and the second references, optionally subject to:  \n* Minimum and maximum weights constraints\n* Maximum group weights constraints\n* Minimum and maximum portfolio exposure constraints\n\nReferences\n * [CSSA, Random Subspace Optimization (RSO)](https://cssanalytics.wordpress.com/2013/10/06/random-subspace-optimization-rso/)\n * [Subset Optimization for Asset Allocation,Benjamin J. Gillen](https://www.bengillen.com/uploads/1/2/3/8/123891022/subsets.pdf)\n * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/mean-variance-efficient/subset-resampling-based\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/mean-variance-efficient/subset-resampling-based\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsWeights"
                ],
                "properties": {
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/analysis/diversification-ratio",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/diversification-ratio",
            "description": "Compute the diversification ratio of one or several portfolio(s).\n\nReferences\n* [Yves Choueifaty and Yves Coignard, Toward Maximum Diversification, The Journal of Portfolio Management Fall 2008, 35 (1) 40-51](https://doi.org/10.3905/JPM.2008.35.1.40)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/diversification-ratio\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/diversification-ratio\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "portfolios"
                ],
                "properties": {
                    "portfolios": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "portfolioDiversificationRatio"
                            ],
                            "properties": {
                                "portfolioDiversificationRatio": {
                                    "description": "The diversification ratio of the portfolio",
                                    "type": "number",
                                    "minimum": 0
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/analysis/mean-variance/efficient-frontier",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/mean-variance/efficient-frontier",
            "description": "Compute the discretized mean-variance efficient frontier associated to a list of assets, optionally subject to:\n* Minimum and maximum weights constraints\n* Maximum group weights constraints\n* Minimum and maximum portfolio exposure constraint\n\nReferences\n * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/mean-variance/efficient-frontier\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/mean-variance/efficient-frontier\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "portfolios"
                ],
                "properties": {
                    "portfolios": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                            "type": "object",
                            "required": [
                                "assetsWeights",
                                "portfolioReturn",
                                "portfolioVolatility"
                            ],
                            "properties": {
                                "assetsWeights": {
                                    "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                                    "minItems": 2,
                                    "type": "array",
                                    "items": {
                                        "type": "number",
                                        "minimum": 0,
                                        "maximum": 1
                                    }
                                },
                                "portfolioReturn": {
                                    "description": "The arithmetic return of the portfolio",
                                    "type": "number"
                                },
                                "portfolioVolatility": {
                                    "description": "The volatility of the portfolio",
                                    "type": "number",
                                    "minimum": 0
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/analysis/tracking-error",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/tracking-error",
            "description": "Compute the tracking error between a benchmark and one or several portfolio(s).\n\nReferences\n* [Wikipedia, Tracking error](https://en.wikipedia.org/wiki/Tracking_error) \n* Carl R. Bacon, Practical Portfolio Performance Measurement and Attribution \n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/tracking-error\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/tracking-error\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "portfolios"
                ],
                "properties": {
                    "portfolios": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                            "type": "object",
                            "required": [
                                "portfolioTrackingError"
                            ],
                            "properties": {
                                "portfolioTrackingError": {
                                    "description": "The tracking error of the portfolio",
                                    "type": "number",
                                    "minimum": 0
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/analysis/drawdowns",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/drawdowns",
            "description": "Compute the drawdown function - also called the underwater equity curve -, as well as the worst 10 drawdowns of one or several portfolio(s).\n\nReferences\n* [Wikipedia, Drawdown](https://en.wikipedia.org/wiki/Drawdown_(economics))        \n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/drawdowns\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/drawdowns\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "portfolios"
                ],
                "properties": {
                    "portfolios": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "portfolioDrawdowns",
                                "portfolioWorstDrawdowns"
                            ],
                            "properties": {
                                "portfolioDrawdowns": {
                                    "description": "portfolioDrawdowns[t] is the value of the drawdown function at the time t",
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                        "type": "number",
                                        "minimum": 0
                                    }
                                },
                                "portfolioWorstDrawdowns": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "drawdownDepth",
                                            "drawdownStart",
                                            "drawdownBottom",
                                            "drawdownEnd"
                                        ],
                                        "properties": {
                                            "drawdownDepth": {
                                                "type": "number",
                                                "minimum": 0
                                            },
                                            "drawdownStart": {
                                                "type": "integer",
                                                "minimum": 0
                                            },
                                            "drawdownBottom": {
                                                "type": "integer",
                                                "minimum": 0
                                            },
                                            "drawdownEnd": {
                                                "type": "integer",
                                                "minimum": 0
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/optimization/minimum-variance/subset-resampling-based",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/minimum-variance/subset-resampling-based",
            "description": "Compute the asset weights of the subset resampling-based minimum variance portfolio, following the methodology described in the first and the second references, optionally subject to:  \n* Minimum and maximum weights constraints\n* Maximum group weights constraints\n* Minimum and maximum portfolio exposure constraints\n\nReferences\n * [CSSA, Random Subspace Optimization (RSO)](https://cssanalytics.wordpress.com/2013/10/06/random-subspace-optimization-rso/)\n * [Subset Optimization for Asset Allocation,Benjamin J. Gillen](https://www.bengillen.com/uploads/1/2/3/8/123891022/subsets.pdf)\n * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/minimum-variance/subset-resampling-based\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/minimum-variance/subset-resampling-based\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsWeights"
                ],
                "properties": {
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/analysis/ulcer-index",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/ulcer-index",
            "description": "Compute the Ulcer Index of one or several portfolio(s).\n\nReferences\n* Carl R. Bacon, Practical Portfolio Performance Measurement and Attribution\n* [Peter G. Martin, Ulcer Index, An Alternative Approach to the Measurement of Investment Risk & Risk-Adjusted Performance](http://www.tangotools.com/ui/ui.htm)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/ulcer-index\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/ulcer-index\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "portfolios"
                ],
                "properties": {
                    "portfolios": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "portfolioUlcerIndex"
                            ],
                            "properties": {
                                "portfolioUlcerIndex": {
                                    "description": "The Ulcer Index of the portfolio",
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/optimization/maximum-sharpe-ratio/subset-resampling-based",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/maximum-sharpe-ratio/subset-resampling-based",
            "description": "Compute the asset weights of the susbet resampling-based maximum Sharpe ratio portfolio, following the methodology described in the first and the second references, optionally subject to:  \n* Minimum and maximum weights constraints\n* Maximum group weights constraints\n* Minimum and maximum portfolio exposure constraints\n\nReferences\n * [CSSA, Random Subspace Optimization (RSO)](https://cssanalytics.wordpress.com/2013/10/06/random-subspace-optimization-rso/)\n * [Subset Optimization for Asset Allocation,Benjamin J. Gillen](https://www.bengillen.com/uploads/1/2/3/8/123891022/subsets.pdf)\n * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/maximum-sharpe-ratio/subset-resampling-based\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/maximum-sharpe-ratio/subset-resampling-based\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsWeights"
                ],
                "properties": {
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/analysis/beta",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/beta",
            "description": "Compute the beta of one or several portfolio(s) in the Capital Asset Pricing Model (CAPM)..\n\nReferences\n* Carl R. Bacon, Practical Portfolio Performance Measurement and Attribution  \n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/beta\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/beta\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "portfolios"
                ],
                "properties": {
                    "portfolios": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                            "type": "object",
                            "required": [
                                "portfolioBeta"
                            ],
                            "properties": {
                                "portfolioBeta": {
                                    "description": "The portfolio beta, which correponds to the portfolio systematic risk in the Capital Asset Pricing Model (CAPM)",
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/analysis/alpha",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/alpha",
            "description": "Compute the Jensen\u2019s alpha of one or several portfolio(s) in the Capital Asset Pricing Model (CAPM).\n\nReferences\n* Carl R. Bacon, Practical Portfolio Performance Measurement and Attribution  \n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/alpha\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/alpha\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "portfolios"
                ],
                "properties": {
                    "portfolios": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                            "type": "object",
                            "required": [
                                "portfolioAlpha"
                            ],
                            "properties": {
                                "portfolioAlpha": {
                                    "description": "The portfolio Jensen's alpha, which correponds to the portfolio excess return adjusted for the systematic risk in the Capital Asset Pricing Model (CAPM)",
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/optimization/maximum-sharpe-ratio/diversified",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/maximum-sharpe-ratio/diversified",
            "description": "Compute the asset weights of the diversified maximum Sharpe ratio portfolio, as defined in the first reference, optionally subject to:  \n* Minimum and maximum weights constraints\n* Maximum group weights constraints\n* Minimum and maximum portfolio exposure constraints\n\nThe diversification measure used in the optimization procedure is the [Herfindahl-Hirschman Index](https://en.wikipedia.org/wiki/Herfindahl%E2%80%93Hirschman_index) of the assets weights.\n\nReferences\n * [Alejandro Corvalan, 2005. Well Diversified Efficient Portfolios, Working Papers Central Bank of Chile 336, Central Bank of Chile](https://ideas.repec.org/p/chb/bcchwp/336.html)\n * [Bouchaud, Jean-Philippe and Potters, Marc and Aguilar, Jean-Pierre, Missing Information and Asset Allocation, arXiv, 1997](https://arxiv.org/abs/cond-mat/9707042)\n * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/maximum-sharpe-ratio/diversified\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/maximum-sharpe-ratio/diversified\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsWeights"
                ],
                "properties": {
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/optimization/mean-variance-efficient/diversified",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/mean-variance-efficient/diversified",
            "description": "Compute the asset weights of a diversified mean-variance efficient portfolio, as defined in the first reference, optionally subject to:  \n* Minimum and maximum weights constraints\n* Maximum group weights constraints\n* Minimum and maximum portfolio exposure constraints\n\nThe diversification measure used in the optimization procedure is the [Herfindahl-Hirschman Index](https://en.wikipedia.org/wiki/Herfindahl%E2%80%93Hirschman_index) of the assets weights.\n\n> A diversified mean-variance efficient portfolio does NOT belong to [the mean-variance efficient frontier](#post-/portfolio/analysis/mean-variance/efficient-frontier), but is close to this frontier.\n\nReferences\n * [Alejandro Corvalan, 2005. Well Diversified Efficient Portfolios, Working Papers Central Bank of Chile 336, Central Bank of Chile](https://ideas.repec.org/p/chb/bcchwp/336.html)\n * [Bouchaud, Jean-Philippe and Potters, Marc and Aguilar, Jean-Pierre, Missing Information and Asset Allocation, arXiv, 1997](https://arxiv.org/abs/cond-mat/9707042)\n * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/mean-variance-efficient/diversified\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/mean-variance-efficient/diversified\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsWeights"
                ],
                "properties": {
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/optimization/minimum-variance/diversified",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/minimum-variance/diversified",
            "description": "Compute the asset weights of the diversified minimum variance portfolio, as defined in the first reference, optionally subject to:  \n* Minimum and maximum weights constraints\n* Maximum group weights constraints\n* Minimum and maximum portfolio exposure constraints\n\nThe diversification measure used in the optimization procedure is the [Herfindahl-Hirschman Index](https://en.wikipedia.org/wiki/Herfindahl%E2%80%93Hirschman_index) of the assets weights.\n\nReferences\n * [Alejandro Corvalan, 2005. Well Diversified Efficient Portfolios, Working Papers Central Bank of Chile 336, Central Bank of Chile](https://ideas.repec.org/p/chb/bcchwp/336.html)\n * [Bouchaud, Jean-Philippe and Potters, Marc and Aguilar, Jean-Pierre, Missing Information and Asset Allocation, arXiv, 1997](https://arxiv.org/abs/cond-mat/9707042)\n * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/minimum-variance/diversified\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/minimum-variance/diversified\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsWeights"
                ],
                "properties": {
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/assets/analysis/absorption-ratio",
            "url": "https://portfolio-optimizer.p.rapidapi.com/assets/analysis/absorption-ratio",
            "description": "Compute the absorption ratio associated to a universe of assets.\n\nReferences\n* [Mark Kritzman, Yuanzhen Li, Sebastien Page and Roberto Rigobon, Principal Components as a Measure of Systemic Risk, The Journal of Portfolio Management Summer 2011, 37 (4) 112-126](https://jpm.pm-research.com/content/37/4/112)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/analysis/absorption-ratio\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/analysis/absorption-ratio\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "portfolios"
                ],
                "properties": {
                    "portfolios": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "assetsAbsorptionRatio"
                            ],
                            "properties": {
                                "assetsAbsorptionRatio": {
                                    "description": "The absorption ratio of the universe of assets",
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/assets/analysis/turbulence-index",
            "url": "https://portfolio-optimizer.p.rapidapi.com/assets/analysis/turbulence-index",
            "description": "Compute the turbulence index associated to a universe of assets.\n\nReferences\n* [M. Kritzman, Y. Li, Skulls, Financial Turbulence, and Risk Management,Financial Analysts Journal, Volume 66, Number 5, Pages 30-41, Year 2010](https://www.tandfonline.com/doi/abs/10.2469/faj.v66.n5.3)\n* [Kinlaw, W., Turkington, D. Correlation surprise. J Asset Manag 14, 385\u2013399 (2013)](https://link.springer.com/article/10.1057/jam.2013.27)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/analysis/turbulence-index\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/analysis/turbulence-index\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "portfolios"
                ],
                "properties": {
                    "portfolios": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "assetsTurbulenceIndex"
                            ],
                            "properties": {
                                "assetsTurbulenceIndex": {
                                    "description": "the turbulence index of the universe of assets",
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/optimization/minimum-variance",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/minimum-variance",
            "description": "Compute the asset weights of the minimum variance portfolio, optionally subject to:  \n* Minimum and maximum weights constraints\n* Maximum group weights constraints\n* Minimum and maximum portfolio exposure constraints\n\nReferences\n * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/minimum-variance\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/minimum-variance\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsWeights"
                ],
                "properties": {
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/optimization/maximum-sharpe-ratio",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/maximum-sharpe-ratio",
            "description": "Compute the asset weights of the maximum Sharpe ratio portfolio, optionally subject to:  \n* Minimum and maximum weights constraints\n* Maximum group weights constraints\n* Minimum and maximum portfolio exposure constraints\n\nReferences\n * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/maximum-sharpe-ratio\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/maximum-sharpe-ratio\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsWeights"
                ],
                "properties": {
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/optimization/maximum-ulcer-performance-index",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/maximum-ulcer-performance-index",
            "description": "Compute the asset weights of the maximum Ulcer Performance Index portfolio, optionally subject to:  \n* Minimum and maximum weights constraints\n* Maximum group weights constraints\n* Minimum and maximum portfolio exposure constraints\n\nNotes:  \n* This endpoint will return an error if the maximum Ulcer Performance Index portfolio has a negative Ulcer Performance Index\n\nReferences\n * [Peter G. Martin, Ulcer Index, An Alternative Approach to the Measurement of Investment Risk & Risk-Adjusted Performance](http://www.tangotools.com/ui/ui.htm)\n * [A. Chekhlov, S. Uryasev, M. Zabarankin, Portfolio Optimization with Drawdown Constraints, Supply Chain and Finance, p 209-228](https://doi.org/10.1142/9789812562586_0013)\n * [A. Chekhlov, S. Uryasev, M. Zabarankin, Drawdown Measure in Portfolio Optimization, International Journal of Theoretical and Applied FinanceVol. 08, No. 01, pp. 13-58 (2005)](https://www.worldscientific.com/doi/10.1142/S0219024905002767)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/maximum-ulcer-performance-index\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/maximum-ulcer-performance-index\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsWeights"
                ],
                "properties": {
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/optimization/minimum-ulcer-index",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/minimum-ulcer-index",
            "description": "Compute the asset weights of the minimum Ulcer Index portfolio, optionally subject to:  \n* Minimum and maximum weights constraints\n* Maximum group weights constraints\n* Minimum and maximum portfolio exposure constraints\n\nReferences\n * [Peter G. Martin, Ulcer Index, An Alternative Approach to the Measurement of Investment Risk & Risk-Adjusted Performance](http://www.tangotools.com/ui/ui.htm)\n * [A. Chekhlov, S. Uryasev, M. Zabarankin, Portfolio Optimization with Drawdown Constraints, Supply Chain and Finance, p 209-228](https://doi.org/10.1142/9789812562586_0013)\n * [A. Chekhlov, S. Uryasev, M. Zabarankin, Drawdown Measure in Portfolio Optimization, International Journal of Theoretical and Applied FinanceVol. 08, No. 01, pp. 13-58 (2005)](https://www.worldscientific.com/doi/10.1142/S0219024905002767)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/minimum-ulcer-index\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/minimum-ulcer-index\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsWeights"
                ],
                "properties": {
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/optimization/maximum-decorrelation",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/maximum-decorrelation",
            "description": "Compute the asset weights of the maximum decorrelation portfolio, optionally subject to:  \n* Minimum and maximum weights constraints\n* Maximum group weights constraints\n* Minimum and maximum portfolio exposure constraints\n\nReferences\n * [F. Goltz, S. Sivasubramanian, Scientific Beta Maximum Decorrelation Indices](http://www.scientificbeta.com/download/file/scientific-beta-max-decorrelation-indices)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/maximum-decorrelation\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/maximum-decorrelation\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsWeights"
                ],
                "properties": {
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/optimization/mean-variance-efficient",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/mean-variance-efficient",
            "description": "Compute the asset weights of a mean-variance efficient portfolio, optionally subject to:  \n* Minimum and maximum weights constraints\n* Maximum group weights constraints\n* Minimum and maximum portfolio exposure constraints\n\n> A mean-variance efficient portfolio is a portfolio belonging to [the mean-variance efficient frontier](#post-/portfolio/analysis/mean-variance/efficient-frontier).\n\nReferences\n * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/mean-variance-efficient\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/mean-variance-efficient\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsWeights"
                ],
                "properties": {
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/optimization/equal-sharpe-ratio-contributions",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/equal-sharpe-ratio-contributions",
            "description": "Compute the asset weights of the equal Sharpe Ratio contributions portfolio.\n\nReferences\n * [Andreas Steiner, Sharpe Ratio Contribution and Attribution Analysis](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=1839166\")\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/equal-sharpe-ratio-contributions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/equal-sharpe-ratio-contributions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsWeights"
                ],
                "properties": {
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/optimization/market-capitalization-weighted",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/market-capitalization-weighted",
            "description": "Compute the asset weights of the market capitalization-weighted portfolio.\n\nReferences\n * [Wikipedia, Capitalization-weighted Index](https://en.wikipedia.org/wiki/Capitalization-weighted_index)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/market-capitalization-weighted\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/market-capitalization-weighted\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsWeights"
                ],
                "properties": {
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/optimization/hierarchical-risk-parity/clustering-based",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/hierarchical-risk-parity/clustering-based",
            "description": "Compute the asset weights of the hierarchical clustering-based risk parity portfolio, optionally subject to:  \n* Minimum and maximum weights constraints\n* Minimum and maximum portfolio exposure constraints\n\nReferences\n * [Machine Learning for Asset Management: New Developments and Financial Applications, Emmanuel Jurczenko, Chapter 9, Harald Lohre,Carsten Rother,Kilian Axel Sch\u00e4fer, Hierarchical Risk Parity: Accounting for Tail Dependencies in Multi-asset Multi-factor Allocations](https://onlinelibrary.wiley.com/doi/10.1002/9781119751182.ch9)\n * [Thomas Raffinot, Hierarchical Clustering-Based Asset Allocation, The Journal of Portfolio Management Multi-Asset Special Issue 2018, 44 (2) 89-99](https://jpm.pm-research.com/content/44/2/89.abstract)\n * [Raffinot, Thomas, The Hierarchical Equal Risk Contribution Portfolio](https://ssrn.com/abstract=3237540)\n * [Johann Pfitzinger & Nico Katzke, 2019. A constrained hierarchical risk parity algorithm with cluster-based capital allocation. Working Papers 14/2019, Stellenbosch University, Department of Economics](https://ideas.repec.org/p/sza/wpaper/wpapers328.html)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/hierarchical-risk-parity/clustering-based\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/hierarchical-risk-parity/clustering-based\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsWeights"
                ],
                "properties": {
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/optimization/hierarchical-risk-parity",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/hierarchical-risk-parity",
            "description": "Compute the asset weights of the hierarchical risk parity portfolio, optionally subject to:  \n* Minimum and maximum weights constraints\n* Minimum and maximum portfolio exposure constraints\n\nReferences\n * [Lopez de Prado, M. (2016). Building diversified portfolios that outperform out-of-sample. Journal of Portfolio Management, 42(4), 59\u201369](https://jpm.pm-research.com/content/42/4/59)\n * [Johann Pfitzinger & Nico Katzke, 2019. A constrained hierarchical risk parity algorithm with cluster-based capital allocation. Working Papers 14/2019, Stellenbosch University, Department of Economics](https://ideas.repec.org/p/sza/wpaper/wpapers328.html)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/hierarchical-risk-parity\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/hierarchical-risk-parity\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsWeights"
                ],
                "properties": {
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/optimization/equal-risk-contributions",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/equal-risk-contributions",
            "description": "Compute the asset weights of the equal risk contributions portfolio, optionally subject to:  \n* Minimum and maximum weights constraints  \n\nReferences\n * [Richard, Jean-Charles and Roncalli, Thierry, Constrained Risk Budgeting Portfolios: Theory, Algorithms, Applications & Puzzles](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3331184)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/equal-risk-contributions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/equal-risk-contributions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsWeights"
                ],
                "properties": {
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/optimization/minimum-correlation",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/minimum-correlation",
            "description": "Compute the asset weights of the (heuristic) minimum correlation portfolio, which is a portfolio built using the Minimum Correlation Algorithm discovered by [David Varadi](https://cssanalytics.wordpress.com/).\n\nReferences\n * [CSSA, Minimum Correlation Algorithm Paper Release](https://cssanalytics.wordpress.com/2012/09/21/minimum-correlation-algorithm-paper-release/)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/minimum-correlation\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/minimum-correlation\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsWeights"
                ],
                "properties": {
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/optimization/inverse-volatility-weighted",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/inverse-volatility-weighted",
            "description": "Compute the asset weights of the inverse volatility-weighted portfolio.\n\nReferences\n * [Raul Leote de Carvalho and al., Demystifying Equity Risk-Based Strategies: A Simple Alpha Plus Beta Description](https://doi.org/10.3905/jpm.2012.38.3.056)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/inverse-volatility-weighted\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/inverse-volatility-weighted\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsWeights"
                ],
                "properties": {
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/optimization/equal-weighted",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/equal-weighted",
            "description": "Compute the asset weights of the equal-weighted portfolio.\n\nReferences\n * [Victor DeMiguel and al., Optimal Versus Naive Diversification: How Inefficient is the 1/N Portfolio Strategy?](https://academic.oup.com/rfs/article-abstract/22/5/1915/1592901?redirectedFrom=fulltext)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/equal-weighted\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/equal-weighted\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsWeights"
                ],
                "properties": {
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/optimization/most-diversified",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/most-diversified",
            "description": "Compute the asset weights of the most diversified portfolio, optionally subject to:  \n* Minimum and maximum weights constraints\n* Maximum group weights constraints\n* Minimum and maximum portfolio exposure constraints\n\nReferences\n * [Yves Choueifaty and Yves Coignard, Toward Maximum Diversification, The Journal of Portfolio Management Fall 2008, 35 (1) 40-51](https://doi.org/10.3905/JPM.2008.35.1.40)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/most-diversified\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/most-diversified\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsWeights"
                ],
                "properties": {
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/optimization/maximum-return",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/maximum-return",
            "description": "Compute the asset weights of the maximum return portfolio, optionally subject to:  \n* Minimum and maximum weights constraints\n* Maximum group weights constraints\n* Minimum and maximum portfolio exposure constraints\n\nReferences\n * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/maximum-return\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/optimization/maximum-return\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsWeights"
                ],
                "properties": {
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/assets/prices/adjusted",
            "url": "https://portfolio-optimizer.p.rapidapi.com/assets/prices/adjusted",
            "description": "Compute the adjusted prices of one or several asset(s) for one or several date(s) from:\n* Unadjusted prices\n* Capital distributions, like stock dividends\n* Splits, like stock splits\n\nPrice data on the last available date are left unadjusted.\n\nPrice data on any other date are adjusted based on the capital distributions and the splits which occurred between this date and the last available date.\n\nReferences\n* [Center for Research in Security Prices](https://www.crsp.org/products/documentation/crsp-calculations)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/prices/adjusted\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/prices/adjusted\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assets"
                ],
                "properties": {
                    "assets": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "assetAdjustedPrices"
                            ],
                            "properties": {
                                "assetAdjustedPrices": {
                                    "description": "assetAdjustedPrices[t] contains adjusted price information for the asset at the date t",
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "date",
                                            "fullyAdjustedClose"
                                        ],
                                        "properties": {
                                            "date": {
                                                "type": "string",
                                                "description": "The date corresponding to the date t in format YYYY-MM-DD"
                                            },
                                            "fullyAdjustedClose": {
                                                "type": "number",
                                                "description": "The dividend(s) and split(s) adjusted close price of the asset at the date t",
                                                "minimum": 0,
                                                "exclusiveMinimum": true
                                            },
                                            "splitAdjustedClose": {
                                                "type": "number",
                                                "description": "The split(s) adjusted close price of the asset at the date t, only present if split(s) information are provided",
                                                "minimum": 0,
                                                "exclusiveMinimum": true
                                            },
                                            "dividendAdjustedClose": {
                                                "type": "number",
                                                "description": "The dividend(s) adjusted close price of the asset at the date t, only present if dividend(s) information are provided",
                                                "minimum": 0,
                                                "exclusiveMinimum": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/assets/covariance/matrix/effective-rank",
            "url": "https://portfolio-optimizer.p.rapidapi.com/assets/covariance/matrix/effective-rank",
            "description": "Compute the effective rank of an asset covariance matrix.\n\nReferences\n* [Olivier Roy and Martin Vetterli, The effective rank: A measure of effective dimensionality, 15th European Signal Processing Conference, 2007](https://ieeexplore.ieee.org/document/7098875)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/covariance/matrix/effective-rank\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/covariance/matrix/effective-rank\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsCovarianceMatrixEffectiveRank"
                ],
                "properties": {
                    "assetsCovarianceMatrixEffectiveRank": {
                        "description": "The effective rank of the asset covariance matrix",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "array",
                            "minItems": 2,
                            "items": {
                                "type": "number"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/assets/correlation/matrix/validation",
            "url": "https://portfolio-optimizer.p.rapidapi.com/assets/correlation/matrix/validation",
            "description": "Validate whether a matrix is a correlation matrix.\n\nReferences\n* [Wikipedia, Correlation and Dependence](https://en.wikipedia.org/wiki/Correlation_and_dependence#Correlation_matrices)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/correlation/matrix/validation\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/correlation/matrix/validation\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "description": "Indicates whether the matrix is a valid correlation matrix",
                        "type": "string",
                        "enum": [
                            "valid correlation matrix",
                            "invalid correlation matrix - non symmetric matrix",
                            "invalid correlation matrix - non positive diagonal elements",
                            "invalid correlation matrix - non positive semi-definite matrix"
                        ]
                    }
                }
            }
        },
        {
            "name": "/portfolio/construction/random",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/construction/random",
            "description": "Construct one or several random portfolio(s), optionally subject to:       \n* Minimum and maximum weights constraints\n* Minimum and maximum portfolio exposure constraints\n\n> Because of the nature of the endpoint, subsequent calls with the same input data will result in different output data.\n\nReferences\n* [William Thornton Shaw, Monte Carlo Portfolio Optimization for General Investor Risk-Return Objectives and Arbitrary Return Distributions: A Solution for Long-Only Portfolios](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=1680224)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/construction/random\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/construction/random\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "portfolios"
                ],
                "properties": {
                    "portfolios": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                            "type": "object",
                            "required": [
                                "assetsWeights"
                            ],
                            "properties": {
                                "assetsWeights": {
                                    "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                                    "minItems": 1,
                                    "type": "array",
                                    "items": {
                                        "type": "number",
                                        "minimum": 0,
                                        "maximum": 1
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/assets/volatility/sample",
            "url": "https://portfolio-optimizer.p.rapidapi.com/assets/volatility/sample",
            "description": "Compute the sample volatility (i.e., sample standard deviation) of one or several asset(s) from the asset(s) returns.\n\n> This endpoint is similar to the endpoint [`/assets/volatility`](#post-/assets/volatility), but uses [Bessel's correction](https://en.wikipedia.org/wiki/Bessel%27s_correction) to compute the volatility.\n\nReferences\n* [Wikipedia, Standard Deviation](https://en.wikipedia.org/wiki/Standard_deviation)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/volatility/sample\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/volatility/sample\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assets"
                ],
                "properties": {
                    "assets": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "assetVolatility"
                            ],
                            "properties": {
                                "assetVolatility": {
                                    "description": "The sample volatility of the asset",
                                    "type": "number",
                                    "minimum": 0
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/simulation/rebalancing/fixed-weight",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/simulation/rebalancing/fixed-weight",
            "description": "Simulate the evolution of one or several portfolio(s) over one or several time period(s), the portfolio(s) being rebalanced toward fixed weights at the beginning of each time period.\n\nReferences\n* [Hillion, Pierre, The Ex-Ante Rebalancing Premium (March 11, 2016). INSEAD Working Paper No. 2016/15/FIN](https://ssrn.com/abstract=2746471)        \n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/simulation/rebalancing/fixed-weight\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/simulation/rebalancing/fixed-weight\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "portfolios"
                ],
                "properties": {
                    "portfolios": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "portfolioValues"
                            ],
                            "properties": {
                                "portfolioValues": {
                                    "description": "portfolioValues[t] is the value of the portfolio at the time t",
                                    "type": "array",
                                    "items": {
                                        "type": "number",
                                        "minimum": 0
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/assets/volatility",
            "url": "https://portfolio-optimizer.p.rapidapi.com/assets/volatility",
            "description": "Compute the volatility (i.e., standard deviation) of one or several asset(s) from either:  \n* The asset returns\n* The asset covariance matrix\n* The asset variance(s)\n\nReferences\n* [Wikipedia, Standard Deviation](https://en.wikipedia.org/wiki/Standard_deviation)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/volatility\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/volatility\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assets"
                ],
                "properties": {
                    "assets": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "assetVolatility"
                            ],
                            "properties": {
                                "assetVolatility": {
                                    "description": "The volatility of the asset",
                                    "type": "number",
                                    "minimum": 0
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/construction/mimicking",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/construction/mimicking",
            "description": "Construct a portfolio as close as possible, in terms of returns, to a benchmark, optionally subject to:\n* Minimum and maximum weights constraints\n* Maximum group weights constraints\n* Minimum and maximum portfolio exposure constraints\n\nReferences \n* Konstantinos Benidis, Yiyong Feng, Daniel P. Palomar, Optimization Methods for Financial Index Tracking: From Theory to Practice, now publishers Inc (7 juin 2018)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/construction/mimicking\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/construction/mimicking\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsWeights"
                ],
                "properties": {
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/construction/investable",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/construction/investable",
            "description": "Compute an investable portfolio as close as possible, in terms of assets weights, to a desired portfolio, taking into account:\n* The desired assets weights\n* The desired assets groups weights\n* The desired maximum assets groups weights\n* The prices of the assets\n* The portfolio value\n* The requirement to purchase some assets by round lots or by odd lots\n* The possibility to purchase some assets by a fractional quantity of shares\n* The requirement to purchase a minimum number of shares, or a minimum monetary value, for some assets\n\nReferences\n* [Steiner, Andreas, Accuracy and Rounding in Portfolio Construction](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=2261131)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/construction/investable\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/construction/investable\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsPositions",
                    "assetsWeights"
                ],
                "properties": {
                    "assetsPositions": {
                        "description": "assetsPositions[i] is the number of shares of the asset i in the portfolio",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0
                        }
                    },
                    "assetsWeights": {
                        "description": "assetsWeights[i] is the weight of the asset i in the portfolio, in percentage",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/simulation/rebalancing/random-weight",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/simulation/rebalancing/random-weight",
            "description": "Simulate the evolution of one or several portfolio(s) over one or several time period(s), the portfolio(s) being rebalanced toward random weights at the beginning of each time period.\n\nReferences\n* [R Stein, Not fooled by randomness: Using random portfolios to analyse investment funds, Investment Analysts Journal, 43:79, 1-15, DOI: 10.1080/10293523.2014.11082564](https://www.tandfonline.com/doi/abs/10.1080/10293523.2014.11082564)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/simulation/rebalancing/random-weight\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/simulation/rebalancing/random-weight\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "portfolios"
                ],
                "properties": {
                    "portfolios": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "portfolioValues"
                            ],
                            "properties": {
                                "portfolioValues": {
                                    "description": "portfolioValues[t] is the value of the portfolio at the time t",
                                    "type": "array",
                                    "items": {
                                        "type": "number",
                                        "minimum": 0
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/assets/covariance/matrix/validation",
            "url": "https://portfolio-optimizer.p.rapidapi.com/assets/covariance/matrix/validation",
            "description": "Validate whether a matrix is a covariance matrix.\n\nReferences\n* [Wikipedia, Covariance Matrix](https://en.wikipedia.org/wiki/Covariance_matrix)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/covariance/matrix/validation\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/covariance/matrix/validation\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "description": "Indicates whether the matrix is a valid covariance matrix",
                        "type": "string",
                        "enum": [
                            "valid covariance matrix",
                            "invalid covariance matrix - non symmetric matrix",
                            "invalid covariance matrix - non positive diagonal elements",
                            "invalid covariance matrix - non positive semi-definite matrix"
                        ]
                    }
                }
            }
        },
        {
            "name": "/factors/residualization",
            "url": "https://portfolio-optimizer.p.rapidapi.com/factors/residualization",
            "description": "Compute the residuals of a factor against a set of factors, using a returns-based linear regression analysis.\n\nReferences\n* [Factor Research, Factor Exposure Analysis: Exploring Residualization](https://insights.factorresearch.com/research-factor-exposure-analysis-exploring-residualization/)\n* [Catalina B. Garcia, Rom\u00e1n Salmeron, Claudia Garcia & Jose Garcia (2019): Residualization: justification, properties and application, Journal of Applied Statistics](https://doi.org/10.1080/02664763.2019.1701638)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/factors/residualization\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/factors/residualization\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "residualizedFactorReturns"
                ],
                "properties": {
                    "residualizedFactorReturns": {
                        "description": "residualizedFactorReturns[t] is the return of the residualized factor at the time t",
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                }
            }
        },
        {
            "name": "/assets/returns/average",
            "url": "https://portfolio-optimizer.p.rapidapi.com/assets/returns/average",
            "description": "Compute the arithmetic average of the return(s) of one or several asset(s).\n\nReferences\n* [Wikipedia, Arithmetic Average Rate of Return](https://en.wikipedia.org/wiki/Rate_of_return#Arithmetic_average_rate_of_return)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/returns/average\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/returns/average\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assets"
                ],
                "properties": {
                    "assets": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "assetAverageReturn"
                            ],
                            "properties": {
                                "assetAverageReturn": {
                                    "description": "The arithmetic average return of the asset",
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/assets/variance",
            "url": "https://portfolio-optimizer.p.rapidapi.com/assets/variance",
            "description": "Compute the variance of one or several asset(s) from either:  \n* The asset returns\n* The asset covariance matrix\n* The asset volatility(ies)\n\nReferences\n* [Wikipedia, Variance](https://en.wikipedia.org/wiki/Variance)        \n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/variance\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/variance\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assets"
                ],
                "properties": {
                    "assets": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "assetVariance"
                            ],
                            "properties": {
                                "assetVariance": {
                                    "description": "The variance of the asset",
                                    "type": "number",
                                    "minimum": 0
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/analysis/conditional-value-at-risk",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/conditional-value-at-risk",
            "description": "Compute the conditional value at risk of one or several portfolio(s) from portfolio values.\n\nReferences\n* [Wikipedia, Value at risk](https://en.wikipedia.org/wiki/Value_at_risk)\n* [Acerbi, C. and Tasche, D. (2002), Expected Shortfall: A Natural Coherent Alternative to Value at Risk. Economic Notes, 31: 379-388](https://onlinelibrary.wiley.com/doi/abs/10.1111/1468-0300.00091)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/conditional-value-at-risk\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/conditional-value-at-risk\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "portfolios"
                ],
                "properties": {
                    "portfolios": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                            "type": "object",
                            "required": [
                                "portfolioConditionalValueAtRisk"
                            ],
                            "properties": {
                                "portfolioConditionalValueAtRisk": {
                                    "description": "The conditional value at risk of the portfolio",
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/simulation/rebalancing/drift-weight",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/simulation/rebalancing/drift-weight",
            "description": "Simulate the evolution of one or several portfolio(s) over one or several time period(s), the portfolio(s) being never rebalanced (a.k.a. buy and hold).\n\nReferences\n* [Hillion, Pierre, The Ex-Ante Rebalancing Premium (March 11, 2016). INSEAD Working Paper No. 2016/15/FIN](https://ssrn.com/abstract=2746471)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/simulation/rebalancing/drift-weight\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/simulation/rebalancing/drift-weight\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "portfolios"
                ],
                "properties": {
                    "portfolios": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "portfolioValues"
                            ],
                            "properties": {
                                "portfolioValues": {
                                    "description": "portfolioValues[t] is the value of the portfolio at the time t",
                                    "type": "array",
                                    "items": {
                                        "type": "number",
                                        "minimum": 0
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/assets/covariance/matrix/exponentially-weighted",
            "url": "https://portfolio-optimizer.p.rapidapi.com/assets/covariance/matrix/exponentially-weighted",
            "description": "Compute an exponentially weighted covariance matrix of assets returns.\n\nReferences\n* [RiskMetrics Group. Longerstaey, J. (1996). RiskMetrics technical document, Technical Report fourth edition](https://www.msci.com/documents/10199/5915b101-4206-4ba0-aee2-3449d5c7e95a)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/covariance/matrix/exponentially-weighted\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/covariance/matrix/exponentially-weighted\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsCovarianceMatrix"
                ],
                "properties": {
                    "assetsCovarianceMatrix": {
                        "description": "assetsCovarianceMatrix[i][j] is the sample covariance between the asset i returns and the asset j returns",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "array",
                            "minItems": 2,
                            "items": {
                                "type": "number"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/assets/correlation/matrix/shrinkage",
            "url": "https://portfolio-optimizer.p.rapidapi.com/assets/correlation/matrix/shrinkage",
            "description": "Compute a correlation matrix as a convex linear combination of an assets correlation matrix and a target correlation matrix, the target correlation matrix being either:  \n * An equicorrelation matrix made of 1\n * An equicorrelation matrix made of 0\n * An equicorrelation matrix made of -1/(n-1), with n the number of assets\n * A provided correlation matrix\n \n References\n * [Steiner, Andreas, Manipulating Valid Correlation Matrices](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=1878165)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/correlation/matrix/shrinkage\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/correlation/matrix/shrinkage\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsCorrelationMatrix"
                ],
                "properties": {
                    "assetsCorrelationMatrix": {
                        "description": "assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "array",
                            "minItems": 2,
                            "items": {
                                "type": "number"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/assets/correlation/matrix/random",
            "url": "https://portfolio-optimizer.p.rapidapi.com/assets/correlation/matrix/random",
            "description": "Generatea correlation matrix uniformly at random over the space of positive definite correlation matrices.\n\nReferences\n* [Joe, H., Generating random correlation matrices based on partial correlations. Journal of Multivariate Analysis, 2006, 97, 2177-2189](https://www.sciencedirect.com/science/article/pii/S0047259X05000886)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/correlation/matrix/random\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/correlation/matrix/random\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assetsCorrelationMatrix"
                ],
                "properties": {
                    "assetsCorrelationMatrix": {
                        "description": "assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j",
                        "type": "array",
                        "minItems": 2,
                        "items": {
                            "type": "array",
                            "minItems": 2,
                            "items": {
                                "type": "number"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/assets/returns",
            "url": "https://portfolio-optimizer.p.rapidapi.com/assets/returns",
            "description": "Compute the arithmetic return(s) of one or several asset(s) for one or several time period(s).\n\nReferences\n* [Wikipedia, Rate of Return](https://en.wikipedia.org/wiki/Rate_of_return#Return)\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/returns\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/returns\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assets"
                ],
                "properties": {
                    "assets": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "assetReturns"
                            ],
                            "properties": {
                                "assetReturns": {
                                    "description": "assetReturns[t] is the arithmetic return of the asset from the time t-1 to the time t, in percentage",
                                    "type": "array",
                                    "items": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/portfolio/analysis/contributions/return",
            "url": "https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/contributions/return",
            "description": "Perform a return contribution analysis of one or several portfolio(s), optionally using groups of assets.\n\nReferences\n* Carl R. Bacon, Practical Portfolio Performance Measurement and Attribution\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/contributions/return\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/portfolio/analysis/contributions/return\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "portfolios"
                ],
                "properties": {
                    "portfolios": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "assetsReturnContributions"
                            ],
                            "properties": {
                                "assetsReturnContributions": {
                                    "description": "assetsReturnContributions[i] is the return contribution of the asset i to the return of the portfolio",
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                        "type": "number"
                                    }
                                },
                                "assetsGroupsReturnContributions": {
                                    "description": "assetsGroupsReturnContributions[k] is the return contribution of the group of assets k to the return of the portfolio",
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/assets/variance/sample",
            "url": "https://portfolio-optimizer.p.rapidapi.com/assets/variance/sample",
            "description": "Compute the sample variance of one or several asset(s) from the asset(s) returns.\n        \n> This endpoint is similar to the endpoint [`/assets/variance`](#post-/assets/variance), but uses [Bessel's correction](https://en.wikipedia.org/wiki/Bessel%27s_correction) to compute the variance.\n\nReferences\n* [Wikipedia, Variance](https://en.wikipedia.org/wiki/Variance)        \n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/variance/sample\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://portfolio-optimizer.p.rapidapi.com/assets/variance/sample\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"portfolio-optimizer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "required": [
                    "assets"
                ],
                "properties": {
                    "assets": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "assetVariance"
                            ],
                            "properties": {
                                "assetVariance": {
                                    "description": "The sample variance of the asset",
                                    "type": "number",
                                    "minimum": 0
                                }
                            }
                        }
                    }
                }
            }
        }
    ]
}