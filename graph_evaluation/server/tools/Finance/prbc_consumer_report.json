{
    "tool_name": "PRBC Consumer Report",
    "tool_description": "This API provides an alternative credit score between 350-800 using alternative credit tradelines, public records (bankruptcies, evictions, liens and judgments), ACH/check transaction history and other data scoring attributes. It is used to evaluate the credit worthiness of consumers who otherwise have little or no credit history.\nUser credentialing is required for access.",
    "title": "PRBC Consumer Report",
    "pricing": "FREE",
    "score": null,
    "home_url": "https://rapidapi.com/IgorMicrobilt/api/prbc-consumer-report/",
    "host": "prbc-consumer-report.p.rapidapi.com",
    "api_list": [
        {
            "name": "/GetArchiveReport",
            "url": "https://prbc-consumer-report.p.rapidapi.com/GetArchiveReport",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Accept",
                    "type": "STRING",
                    "description": "Specifies the format of the response",
                    "default": "application/json"
                },
                {
                    "name": "AppId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://prbc-consumer-report.p.rapidapi.com/GetArchiveReport\"\nquerystring = {\"Accept\": accept, \"AppId\": appid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"prbc-consumer-report.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "/GetReport",
            "url": "https://prbc-consumer-report.p.rapidapi.com/GetReport",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Accept",
                    "type": "STRING",
                    "description": "Specifies the format of the response",
                    "default": "application/json"
                },
                {
                    "name": "Content-Type",
                    "type": "STRING",
                    "description": "Specifies the format of the request",
                    "default": "application/json"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://prbc-consumer-report.p.rapidapi.com/GetReport\"\nquerystring = {\"Accept\": accept, \"Content-Type\": content_type}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"prbc-consumer-report.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "/GetReport",
            "url": "https://prbc-consumer-report.p.rapidapi.com/GetReport",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://prbc-consumer-report.p.rapidapi.com/GetReport\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"prbc-consumer-report.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://prbc-consumer-report.p.rapidapi.com/GetReport\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"prbc-consumer-report.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}