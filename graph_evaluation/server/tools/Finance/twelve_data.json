{
    "product_id": "api_3f90d297-3157-494a-92c1-6fa5136ffc8f",
    "tool_description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "home_url": "https://rapidapi.com/twelvedata/api/twelve-data1/",
    "name": "Twelve Data",
    "title": "Twelve Data",
    "pricing": "FREEMIUM",
    "tool_name": "Twelve Data",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 436,
        "avgSuccessRate": 100,
        "popularityScore": 9.9,
        "__typename": "Score"
    },
    "host": "twelve-data1.p.rapidapi.com",
    "api_list": [
        {
            "name": "Ratings",
            "url": "https://twelve-data1.p.rapidapi.com/mutual_funds/world/ratings",
            "description": "This API request returns ratings of a mutual fund.\n\nAvailability: Mega plan\nData weighting: 200 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Symbol ticker of mutual fund",
                    "default": "VFIAX"
                }
            ],
            "optional_parameters": [
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Filter by country name or alpha code",
                    "default": ""
                },
                {
                    "name": "dp",
                    "type": "STRING",
                    "description": "Number of decimal places for floating values",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mutual_funds/world/ratings\"\nquerystring = {\"country\": \"\", \"dp\": \"\", \"symbol\": \"VFIAX\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mutual_funds/world/ratings\"\nquerystring = {\"country\": \"\", \"dp\": \"\", \"symbol\": \"VFIAX\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "mutual_fund": {
                    "ratings": {
                        "performance_rating": 4,
                        "risk_rating": 3,
                        "return_rating": 0
                    }
                },
                "status": "ok"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Composition",
            "url": "https://twelve-data1.p.rapidapi.com/mutual_funds/world/composition",
            "description": "This API request returns the portfolio composition of a mutual fund, including sectors, holding details, weighted exposure, and others.\n\nAvailability: Mega plan\nData weighting: 200 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Symbol ticker of mutual fund",
                    "default": "VFIAX"
                }
            ],
            "optional_parameters": [
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Filter by country name or alpha code",
                    "default": ""
                },
                {
                    "name": "dp",
                    "type": "STRING",
                    "description": "Number of decimal places for floating values",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mutual_funds/world/composition\"\nquerystring = {\"symbol\": \"VFIAX\", \"country\": \"\", \"dp\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mutual_funds/world/composition\"\nquerystring = {\"symbol\": \"VFIAX\", \"country\": \"\", \"dp\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "mutual_fund": {
                    "composition": {
                        "major_market_sectors": [
                            {
                                "sector": "Technology",
                                "weight": 0.2634
                            },
                            {
                                "sector": "Healthcare",
                                "weight": 0.1444
                            },
                            {
                                "sector": "Financial Services",
                                "weight": 0.1255
                            },
                            {
                                "sector": "Consumer Cyclical",
                                "weight": 0.1013
                            },
                            {
                                "sector": "Communication Services",
                                "weight": 0.0825
                            },
                            {
                                "sector": "Industrials",
                                "weight": 0.0816
                            },
                            {
                                "sector": "Consumer Defensive",
                                "weight": 0.0729
                            },
                            {
                                "sector": "Energy",
                                "weight": 0.0467
                            },
                            {
                                "sector": "Utilities",
                                "weight": 0.0287
                            },
                            {
                                "sector": "Realestate",
                                "weight": 0.0262
                            },
                            {
                                "sector": "Basic Materials",
                                "weight": 0.0235
                            }
                        ],
                        "asset_allocation": {
                            "cash": 0.0034,
                            "stocks": 0.9966,
                            "preferred_stocks": 0,
                            "convertables": 0,
                            "bonds": 0,
                            "others": 0
                        },
                        "top_holdings": [
                            {
                                "symbol": "AAPL",
                                "name": "Apple Inc",
                                "weight": 0.07223
                            },
                            {
                                "symbol": "MSFT",
                                "name": "Microsoft Corp",
                                "weight": 0.06547
                            },
                            {
                                "symbol": "AMZN",
                                "name": "Amazon.com Inc",
                                "weight": 0.02691
                            },
                            {
                                "symbol": "NVDA",
                                "name": "NVIDIA Corp",
                                "weight": 0.01954
                            },
                            {
                                "symbol": "GOOGL",
                                "name": "Alphabet Inc Class A",
                                "weight": 0.0183
                            },
                            {
                                "symbol": "BRK.B",
                                "name": "Berkshire Hathaway Inc Class B",
                                "weight": 0.01694
                            },
                            {
                                "symbol": "GOOG",
                                "name": "Alphabet Inc Class C",
                                "weight": 0.01608
                            },
                            {
                                "symbol": "META",
                                "name": "Meta Platforms Inc Class A",
                                "weight": 0.01531
                            },
                            {
                                "symbol": "XOM",
                                "name": "Exxon Mobil Corp",
                                "weight": 0.01395
                            },
                            {
                                "symbol": "UNH",
                                "name": "UnitedHealth Group Inc",
                                "weight": 0.01316
                            }
                        ],
                        "bond_breakdown": {
                            "average_maturity": {
                                "fund": null,
                                "category": null
                            },
                            "average_duration": {
                                "fund": null,
                                "category": -1.15
                            },
                            "credit_quality": [
                                {
                                    "grade": "U.S. Government",
                                    "weight": 0
                                }
                            ]
                        }
                    }
                },
                "status": "ok"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Purchase Info",
            "url": "https://twelve-data1.p.rapidapi.com/mutual_funds/world/purchase_info",
            "description": "This API request returns essential information on purchasing a mutual fund, including minimums, pricing, and available brokerages.\n\nAvailability: Mega plan\nData weighting: 200 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Symbol ticker of mutual fund",
                    "default": "VFIAX"
                }
            ],
            "optional_parameters": [
                {
                    "name": "dp",
                    "type": "STRING",
                    "description": "Number of decimal places for floating values",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Filter by country name or alpha code",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mutual_funds/world/purchase_info\"\nquerystring = {\"dp\": \"\", \"symbol\": \"VFIAX\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mutual_funds/world/purchase_info\"\nquerystring = {\"dp\": \"\", \"symbol\": \"VFIAX\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "mutual_fund": {
                    "purchase_info": {
                        "expenses": {
                            "expense_ratio_gross": 0.0003,
                            "expense_ratio_net": 0.0003
                        },
                        "minimums": {
                            "initial_investment": 5000000000,
                            "additional_investment": 0,
                            "initial_ira_investment": null,
                            "additional_ira_investment": null
                        },
                        "pricing": {
                            "nav": 409.75,
                            "12_month_low": 330.200012207031,
                            "12_month_high": 409.75,
                            "last_month": 354.109985351563
                        },
                        "brokerages": [
                            "ADP Access",
                            "ADP Access Open Fund Architecture",
                            "American PlanPremier",
                            "Ameriprise Brokerage",
                            "Ameriprise SPS Advantage",
                            "Ameriprise SPS Advisor",
                            "Ameritas NTFN",
                            "Avantax",
                            "Bear Stearns",
                            "Bear Stearns Load-Waived NTF",
                            "Cetera Advisor Networks LLC",
                            "Cetera Advisor Networks LLC- PAM, PRIME, Premier",
                            "Cetera Advisors LLC",
                            "Cetera Advisors LLC- PAM, PRIME, Premier",
                            "Cetera Financial Specialists LLC- Premier",
                            "CommonWealth 401k",
                            "Commonwealth (PPS Access Program)",
                            "Commonwealth (PPS/Advisory)",
                            "Commonwealth Universe",
                            "DailyAccess Corporation FRIAG",
                            "DailyAccess Corporation MATC",
                            "DailyAccess Corporation Matrix",
                            "DailyAccess Corporation Mid-Atlantic",
                            "DailyAccess Corporation RTC",
                            "DWS Retirement Sevs Investment Offerings",
                            "E TRADE Financial",
                            "ETrade No Load Fee",
                            "Fidelity Advisor 401(k) ACT Shares",
                            "Fidelity Advisor 401(k) A Shares",
                            "Fidelity Advisor 401(k) I Shares",
                            "Fidelity Advisor 401(k) T Shares",
                            "Fidelity Institutional FundsNetwork",
                            "Fidelity Institutional FundsNetwork-NTF",
                            "Fidelity Retail FundsNetwork",
                            "Fifth Third Securities, Inc.",
                            "Firstrade",
                            "Hartford CPS",
                            "Hartford RK Plus",
                            "HD Vest",
                            "HD Vest - Vest Advisor",
                            "ING Financial Advisers - SAS Funds",
                            "ING Financial Partners Inc.",
                            "ING Financial Ptnrs PAM and PRIME Approv",
                            "JPMorgan",
                            "JP MORGAN LOAD",
                            "JP MORGAN LOAD-WAIVED NTF",
                            "JP MORGAN NO-LOAD NTF",
                            "JP MORGAN NO-LOAD TRANSACTION FEE",
                            "JP MORGAN NTF",
                            "(Junk)CommonWealth PPS",
                            "Lincoln Investment Planning",
                            "LPL Brokerage Availability - 10.29.2021",
                            "LPL SAM Eligible - June 2022",
                            "LPL SWM - 10.25.2021",
                            "Matrix Financial Solutions",
                            "Merrill Edge",
                            "Merrill Lynch",
                            "Met Life Resources MFSP Alliance List",
                            "Mid Atlantic Capital Corp",
                            "Mid Atlantic Capital Group",
                            "Morgan Stanley - Brokerage Accounts",
                            "Morgan Stanley Consulting Group Advisor",
                            "Morgan Stanley Portfolio Management",
                            "MSWM Brokerage",
                            "Mutual Of Omaha Investor Services Inc",
                            "Nationwide Retirement Innovator",
                            "Nationwide Retirement Resource",
                            "NYLIM 401(k) Complete",
                            "Pershing FundCenter",
                            "Pershing Retirement Plan Network",
                            "Protected Investors of America",
                            "PruChoice Investments",
                            "Pruco Securities, LLC",
                            "Pruco Securities LLC -PruChoice Mutual Funds",
                            "Prudential Retail",
                            "Raymond James",
                            "Raymond James WRAP Eligible",
                            "RBC Wealth Management-Advisory Eligible",
                            "RBC Wealth Management-Network Eligible",
                            "RBC Wealth Management-Wrap Eligible",
                            "SB Pychx OFS R",
                            "Schwab All (Retail, Instl, Retirement)",
                            "Schwab Institutional",
                            "Schwab Institutional Only",
                            "Schwab OneSource & NTF (No Load & No Transaction Fee)",
                            "Schwab Retirement Only",
                            "Scottrade Load",
                            "Scottrade TF",
                            "Securities America Advisors",
                            "Securities America Inc.",
                            "Shareholders Services Group",
                            "Smith Barney Portfolio Manager",
                            "Sterne, Agee & Leach, Inc.,",
                            "SunGard Transaction Network",
                            "Sun Life CPS",
                            "Sun Life Recordkeeper Plus",
                            "TD Ameritrade Institutional",
                            "TD Ameritrade Institutional NTF",
                            "TD Ameritrade Retail",
                            "TD Ameritrade Retail NTF",
                            "TD Ameritrade Trust Company",
                            "Thrivent \u2013 Advisory Eligible",
                            "Trade PMR NTF",
                            "Trade PMR Transaction Fee",
                            "UBS Financial Services Inc",
                            "Vanguard",
                            "Vanguard Load",
                            "Vanguard NTF",
                            "Vanguard TF",
                            "Waddell & Reed Choice MAP Flex",
                            "WFA Fdntl Choice/PIM Updated 12.1.22",
                            "WFA MF Advisory Updated 12.1.22"
                        ]
                    }
                },
                "status": "ok"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "EPS Revisions",
            "url": "https://twelve-data1.p.rapidapi.com/eps_revisions",
            "description": "This API endpoint returns analysts\u2019 revisions of a company's future quarterly and annual earnings per share (EPS) over the last week and month.\n\nAvailability: Mega plan\nData weighting: 20 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "Filter by exchange name or mic code",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Filter by country name or alpha code",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/eps_revisions\"\nquerystring = {\"exchange\": \"\", \"country\": \"\", \"symbol\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/eps_revisions\"\nquerystring = {\"exchange\": \"\", \"country\": \"\", \"symbol\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "code": 403,
                "message": "/eps_revisions is available exclusively with enterprise plans. Consider upgrading your API Key now at https://twelvedata.com/pricing",
                "status": "error"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Growth Estimates",
            "url": "https://twelve-data1.p.rapidapi.com/growth_estimates",
            "description": "This API endpoint returns consensus analyst estimates over the company's growth rates for various periods.\n\nAvailability: Mega plan\nData weighting: 20 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "Filter by exchange name or mic code",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Filter by country name or alpha code",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/growth_estimates\"\nquerystring = {\"exchange\": \"\", \"country\": \"\", \"symbol\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/growth_estimates\"\nquerystring = {\"exchange\": \"\", \"country\": \"\", \"symbol\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "code": 403,
                "message": "/growth_estimates is available exclusively with enterprise plans. Consider upgrading your API Key now at https://twelvedata.com/pricing",
                "status": "error"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Analyst Ratings - US Equities",
            "url": "https://twelve-data1.p.rapidapi.com/analyst_ratings/us_equities",
            "description": "This API endpoint returns complete information on ratings issued by analyst firms. Works only for US equities.\n\nAvailability: Mega plan\nData weighting: 200 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "Filter by exchange name or mic code",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Filter by country name or alpha code",
                    "default": ""
                },
                {
                    "name": "rating_change",
                    "type": "STRING",
                    "description": "Filter by rating change action: `Maintains`, `Upgrade`, `Downgrade`, `Initiates` or `Reiterates`",
                    "default": ""
                },
                {
                    "name": "outputsize",
                    "type": "STRING",
                    "description": "Number of records in response; default `30`",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/analyst_ratings/us_equities\"\nquerystring = {\"exchange\": \"\", \"country\": \"\", \"rating_change\": \"\", \"symbol\": \"\", \"outputsize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/analyst_ratings/us_equities\"\nquerystring = {\"exchange\": \"\", \"country\": \"\", \"rating_change\": \"\", \"symbol\": \"\", \"outputsize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "code": 403,
                "message": "/analyst_ratings/us_equities is available exclusively with enterprise plans. Consider upgrading your API Key now at https://twelvedata.com/pricing",
                "status": "error"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Analyst Ratings - Light",
            "url": "https://twelve-data1.p.rapidapi.com/analyst_ratings/light",
            "description": "This API endpoint returns a lightweight version of ratings issued by analyst firms. Works for US and international markets.\n\nAvailability: Mega plan\nData weighting: 75 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "Filter by exchange name or mic code",
                    "default": ""
                },
                {
                    "name": "rating_change",
                    "type": "STRING",
                    "description": "Filter by rating change action: `Maintains`, `Upgrade`, `Downgrade`, `Initiates` or `Reiterates`",
                    "default": ""
                },
                {
                    "name": "outputsize",
                    "type": "STRING",
                    "description": "Number of records in response; default `30`",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Filter by country name or alpha code",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/analyst_ratings/light\"\nquerystring = {\"exchange\": \"\", \"rating_change\": \"\", \"outputsize\": \"\", \"symbol\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/analyst_ratings/light\"\nquerystring = {\"exchange\": \"\", \"rating_change\": \"\", \"outputsize\": \"\", \"symbol\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "code": 403,
                "message": "/analyst_ratings/light is available exclusively with enterprise plans. Consider upgrading your API Key now at https://twelvedata.com/pricing",
                "status": "error"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Price Target",
            "url": "https://twelve-data1.p.rapidapi.com/price_target",
            "description": "This API endpoint returns the analysts' projection of a security's future price.\n\nAvailability: Mega plan\nData weighting: 75 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Filter by country name or alpha code",
                    "default": ""
                },
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "Filter by exchange name or mic code",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/price_target\"\nquerystring = {\"symbol\": \"\", \"country\": \"\", \"exchange\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/price_target\"\nquerystring = {\"symbol\": \"\", \"country\": \"\", \"exchange\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "code": 403,
                "message": "/price_target is available exclusively with enterprise plans. Consider upgrading your API Key now at https://twelvedata.com/pricing",
                "status": "error"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Recommendations",
            "url": "https://twelve-data1.p.rapidapi.com/recommendations",
            "description": "This API endpoint returns the average of all analyst recommendations and classifies them as Strong Buy, Buy, Hold, or Sell. Also, it returns a recommendation score.\n\nAvailability: Mega plan\nData weighting: 100 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "Filter by exchange name or mic code",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Filter by country name or alpha code",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/recommendations\"\nquerystring = {\"exchange\": \"\", \"country\": \"\", \"symbol\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/recommendations\"\nquerystring = {\"exchange\": \"\", \"country\": \"\", \"symbol\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "EPS Trend",
            "url": "https://twelve-data1.p.rapidapi.com/eps_trend",
            "description": "This API endpoint returns a breakdown of the estimated historical EPS changes at a given period.\n\nAvailability: Mega plan\nData weighting: 20 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "Filter by exchange name or mic code",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Filter by country name or alpha code",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/eps_trend\"\nquerystring = {\"exchange\": \"\", \"symbol\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/eps_trend\"\nquerystring = {\"exchange\": \"\", \"symbol\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Revenue Estimate",
            "url": "https://twelve-data1.p.rapidapi.com/revenue_estimate",
            "description": "This API endpoint returns analysts' estimate for a company's future quarterly and annual sales (total revenue).\n\nAvailability: Mega plan\nData weighting: 20 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "Filter by exchange name or mic code",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Filter by country name or alpha code",
                    "default": ""
                },
                {
                    "name": "dp",
                    "type": "NUMBER",
                    "description": "\u2022 Number of decimal places for floating values \n\u2022 Should be in range `[0,11]` inclusive. Default `5`",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/revenue_estimate\"\nquerystring = {\"exchange\": \"\", \"country\": \"\", \"dp\": \"\", \"symbol\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/revenue_estimate\"\nquerystring = {\"exchange\": \"\", \"country\": \"\", \"dp\": \"\", \"symbol\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Earnings Estimate",
            "url": "https://twelve-data1.p.rapidapi.com/earnings_estimate",
            "description": "This API endpoint returns analysts' estimate for a company's future quarterly and annual earnings per share (EPS).\n\nAvailability: Mega plan\nData weighting: 20 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Filter by country name or alpha code",
                    "default": ""
                },
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "Filter by exchange name or mic code",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/earnings_estimate\"\nquerystring = {\"country\": \"\", \"symbol\": \"\", \"exchange\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/earnings_estimate\"\nquerystring = {\"country\": \"\", \"symbol\": \"\", \"exchange\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Institutional Holders",
            "url": "https://twelve-data1.p.rapidapi.com/institutional_holders",
            "description": "Returns the amount of the company\u2019s available stock owned by institutions (pension funds, insurance companies, investment firms, private foundations, endowments, or other large entities that manage funds on behalf of others).\n\nAvailability: Mega plan\nData weighting: 1500 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/institutional_holders\"\nquerystring = {\"symbol\": \"AAPL\", \"country\": \"\", \"exchange\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/institutional_holders\"\nquerystring = {\"symbol\": \"AAPL\", \"country\": \"\", \"exchange\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Fund Holders",
            "url": "https://twelve-data1.p.rapidapi.com/fund_holders",
            "description": "Returns the amount of the company\u2019s available stock owned by mutual fund holders.\n\nAvailability: Mega plan\nData weighting: 1500 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/fund_holders\"\nquerystring = {\"country\": \"\", \"symbol\": \"AAPL\", \"exchange\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/fund_holders\"\nquerystring = {\"country\": \"\", \"symbol\": \"AAPL\", \"exchange\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Options Expiration",
            "url": "https://twelve-data1.p.rapidapi.com/options/expiration",
            "description": "Return the expiration dates of an option contract.\n\nAvailability: Ultra plan\nData weighting: 200 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/options/expiration\"\nquerystring = {\"exchange\": \"\", \"country\": \"\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/options/expiration\"\nquerystring = {\"exchange\": \"\", \"country\": \"\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Cash Flow",
            "url": "https://twelve-data1.p.rapidapi.com/cash_flow",
            "description": "Returns complete cash flow of a company showing net the amount of cash and cash equivalents being transferred into and out of a business.\n\nAvailability: Ultra plan\nData weighting: 100 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "period",
                    "type": "STRING",
                    "description": "",
                    "default": "annual"
                },
                {
                    "name": "end_date",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "start_date",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/cash_flow\"\nquerystring = {\"exchange\": \"\", \"country\": \"\", \"period\": \"annual\", \"end_date\": \"\", \"symbol\": \"AAPL\", \"start_date\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/cash_flow\"\nquerystring = {\"exchange\": \"\", \"country\": \"\", \"period\": \"annual\", \"end_date\": \"\", \"symbol\": \"AAPL\", \"start_date\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Balance Sheet",
            "url": "https://twelve-data1.p.rapidapi.com/balance_sheet",
            "description": "Returns complete balance sheet of a company showing the summary of assets, liabilities, and shareholders\u2019 equity.\n\nAvailability: Ultra plan\nData weighting: 100 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "start_date",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "end_date",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "period",
                    "type": "STRING",
                    "description": "",
                    "default": "annual"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/balance_sheet\"\nquerystring = {\"exchange\": \"\", \"country\": \"\", \"symbol\": \"AAPL\", \"start_date\": \"\", \"end_date\": \"\", \"period\": \"annual\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/balance_sheet\"\nquerystring = {\"exchange\": \"\", \"country\": \"\", \"symbol\": \"AAPL\", \"start_date\": \"\", \"end_date\": \"\", \"period\": \"annual\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Income Statement",
            "url": "https://twelve-data1.p.rapidapi.com/income_statement",
            "description": "Returns complete income statement of a company and shows the company\u2019s revenues and expenses during a period (annual or quarter).\n\nAvailability: Ultra plan\nData weighting: 100 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "period",
                    "type": "STRING",
                    "description": "",
                    "default": "annual"
                },
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "start_date",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "end_date",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/income_statement\"\nquerystring = {\"period\": \"annual\", \"exchange\": \"\", \"start_date\": \"\", \"country\": \"\", \"symbol\": \"AAPL\", \"end_date\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/income_statement\"\nquerystring = {\"period\": \"annual\", \"exchange\": \"\", \"start_date\": \"\", \"country\": \"\", \"symbol\": \"AAPL\", \"end_date\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Insider Transactions",
            "url": "https://twelve-data1.p.rapidapi.com/insider_transactions",
            "description": "Returns trading information performed by insiders.\n\nAvailability: Ultra plan\nData weighting: 200 API credits per symbol",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/insider_transactions\"\nquerystring = {\"symbol\": \"\", \"exchange\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/insider_transactions\"\nquerystring = {\"symbol\": \"\", \"exchange\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Earnings Calendar",
            "url": "https://twelve-data1.p.rapidapi.com/earnings_calendar",
            "description": "This API method returns earning data as a calendar for a given date range. By default today\u2019s earning is returned. To call a custom period, use start_date and end_date parameters.\n\nAvailability: Pro plan\nData weighting: 40 API credits per symbol",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "end_date",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "start_date",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/earnings_calendar\"\nquerystring = {\"format\": \"\", \"end_date\": \"\", \"start_date\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/earnings_calendar\"\nquerystring = {\"format\": \"\", \"end_date\": \"\", \"start_date\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Earnings",
            "url": "https://twelve-data1.p.rapidapi.com/earnings",
            "description": "This API call returns earnings data for a given company, including EPS estimate and EPS actual. Earnings are available for complete company history.\n\nAvailability: Pro plan\nData weighting: 20 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "outputsize",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "period",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/earnings\"\nquerystring = {\"symbol\": \"AAPL\", \"format\": \"\", \"outputsize\": \"\", \"type\": \"\", \"exchange\": \"\", \"country\": \"\", \"period\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/earnings\"\nquerystring = {\"symbol\": \"AAPL\", \"format\": \"\", \"outputsize\": \"\", \"type\": \"\", \"exchange\": \"\", \"country\": \"\", \"period\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Splits",
            "url": "https://twelve-data1.p.rapidapi.com/splits",
            "description": "Returns the date and the split factor of shares of the company for the last 10+ years.\n\nAvailability: Pro plan\nData weighting: 20 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "start_date",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "range",
                    "type": "STRING",
                    "description": "",
                    "default": "6m"
                },
                {
                    "name": "end_date",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/splits\"\nquerystring = {\"start_date\": \"\", \"country\": \"\", \"exchange\": \"\", \"range\": \"6m\", \"end_date\": \"\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/splits\"\nquerystring = {\"start_date\": \"\", \"country\": \"\", \"exchange\": \"\", \"range\": \"6m\", \"end_date\": \"\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Dividends",
            "url": "https://twelve-data1.p.rapidapi.com/dividends",
            "description": "Returns the amount of dividends paid out for the last 10+ years.\n\nAvailability: Pro plan\nData weighting: 20 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "start_date",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "end_date",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "range",
                    "type": "STRING",
                    "description": "",
                    "default": "6m"
                },
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/dividends\"\nquerystring = {\"start_date\": \"\", \"end_date\": \"\", \"symbol\": \"AAPL\", \"country\": \"\", \"range\": \"6m\", \"exchange\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/dividends\"\nquerystring = {\"start_date\": \"\", \"end_date\": \"\", \"symbol\": \"AAPL\", \"country\": \"\", \"range\": \"6m\", \"exchange\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Profile",
            "url": "https://twelve-data1.p.rapidapi.com/profile",
            "description": "Returns general information about the company.\n\nAvailability: Pro plan\nData weighting: 10 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/profile\"\nquerystring = {\"exchange\": \"\", \"symbol\": \"AAPL\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/profile\"\nquerystring = {\"exchange\": \"\", \"symbol\": \"AAPL\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Logo",
            "url": "https://twelve-data1.p.rapidapi.com/logo",
            "description": "Returns logo of the company.\n\nAvailability: Basic plan\nData weighting: 1 API credit per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/logo\"\nquerystring = {\"country\": \"\", \"exchange\": \"\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/logo\"\nquerystring = {\"country\": \"\", \"exchange\": \"\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Sustainability",
            "url": "https://twelve-data1.p.rapidapi.com/mutual_funds/world/sustainability",
            "description": "This API request returns brief information on mutual fund sustainability and ESG.\n\nAvailability: Mega plan\nData weighting: 200 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Symbol ticker of mutual fund",
                    "default": "VFIAX"
                }
            ],
            "optional_parameters": [
                {
                    "name": "dp",
                    "type": "STRING",
                    "description": "Number of decimal places for floating values",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Filter by country name or alpha code",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mutual_funds/world/sustainability\"\nquerystring = {\"dp\": \"\", \"symbol\": \"VFIAX\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mutual_funds/world/sustainability\"\nquerystring = {\"dp\": \"\", \"symbol\": \"VFIAX\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Performance",
            "url": "https://twelve-data1.p.rapidapi.com/mutual_funds/world/performance",
            "description": "This API request returns the detailed performance of a mutual fund, including trailing, annual, quarterly, and load-adjusted returns.\n\nAvailability: Mega plan\nData weighting: 200 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Symbol ticker of mutual fund",
                    "default": "VFIAX"
                }
            ],
            "optional_parameters": [
                {
                    "name": "dp",
                    "type": "STRING",
                    "description": "Number of decimal places for floating values",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Filter by country name or alpha code",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mutual_funds/world/performance\"\nquerystring = {\"dp\": \"\", \"symbol\": \"VFIAX\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mutual_funds/world/performance\"\nquerystring = {\"dp\": \"\", \"symbol\": \"VFIAX\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Summary",
            "url": "https://twelve-data1.p.rapidapi.com/mutual_funds/world/summary",
            "description": "This API request returns a brief summary of a mutual fund.\n\nAvailability: Mega plan\nData weighting: 200 API credits per symbol",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Symbol ticker of mutual fund",
                    "default": "VFIAX"
                },
                {
                    "name": "dp",
                    "type": "STRING",
                    "description": "Number of decimal places for floating values",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Filter by country name or alpha code",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mutual_funds/world/summary\"\nquerystring = {\"symbol\": \"VFIAX\", \"dp\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mutual_funds/world/summary\"\nquerystring = {\"symbol\": \"VFIAX\", \"dp\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "MFs Family List",
            "url": "https://twelve-data1.p.rapidapi.com/mutual_funds/family",
            "description": "This API request returns a list of mutual funds families.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Filter by country name or alpha code",
                    "default": ""
                },
                {
                    "name": "fund_family",
                    "type": "STRING",
                    "description": "Filter by investment company that manages the fund",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mutual_funds/family\"\nquerystring = {\"country\": \"\", \"fund_family\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mutual_funds/family\"\nquerystring = {\"country\": \"\", \"fund_family\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "MFs List",
            "url": "https://twelve-data1.p.rapidapi.com/mutual_funds/list",
            "description": "This API request returns a list of mutual funds available at Twelve Data. Sorting is in descending order by total assets value. The list is updated daily.\n\nWith Basic, Pro, and Ultra plans, only 50 records will be in response. Mega and Custom plans can access complete data on over 200,000 Mutual Funds.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "apikey",
                    "type": "STRING",
                    "description": "",
                    "default": "demo"
                },
                {
                    "name": "performance_rating",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "fund_type",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "outputsize",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "fund_family",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "risk_rating",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mutual_funds/list\"\nquerystring = {\"apikey\": \"demo\", \"performance_rating\": \"\", \"fund_type\": \"\", \"outputsize\": \"\", \"country\": \"\", \"fund_family\": \"\", \"symbol\": \"\", \"risk_rating\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mutual_funds/list\"\nquerystring = {\"apikey\": \"demo\", \"performance_rating\": \"\", \"fund_type\": \"\", \"outputsize\": \"\", \"country\": \"\", \"fund_family\": \"\", \"symbol\": \"\", \"risk_rating\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Market Movers - ETFs",
            "url": "https://twelve-data1.p.rapidapi.com/market_movers/etf",
            "description": "Get the list of the top gaining or losing ETFs today.\n\nTop gainers are ordered by the highest rate of price increase since the previous day's close. Top losers are ordered by the highest percentage of price decrease since the last day.\n\nAvailability: Ultra plan\nData weighting: 100 API credits per symbol",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Country of the snapshot, applicable to non-currencies only\n\nTakes country name or alpha code; default `USA`",
                    "default": ""
                },
                {
                    "name": "outputsize",
                    "type": "STRING",
                    "description": "Specifies the size of the snapshot\n\nCan be in a range from `1` to `50`; default `30`",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "STRING",
                    "description": "Specifies the direction of the snapshot `gainers` or `losers`\n\nBy `default` gainers",
                    "default": ""
                },
                {
                    "name": "dp",
                    "type": "STRING",
                    "description": "Specifies the number of decimal places for floating values\n\nShould be in range `[0,11]` inclusive; default `5`",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/market_movers/etf\"\nquerystring = {\"country\": \"\", \"outputsize\": \"\", \"direction\": \"\", \"dp\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/market_movers/etf\"\nquerystring = {\"country\": \"\", \"outputsize\": \"\", \"direction\": \"\", \"dp\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Market Movers - Stocks",
            "url": "https://twelve-data1.p.rapidapi.com/market_movers/stocks",
            "description": "Get the list of the top gaining or losing stocks today.\n\nTop gainers are ordered by the highest rate of price increase since the previous day's close. Top losers are ordered by the highest percentage of price decrease since the last day.\n\nAvailability: Ultra plan\nData weighting: 100 API credits per symbol",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Country of the snapshot, applicable to non-currencies only\n\nTakes country name or alpha code; default `USA`",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "STRING",
                    "description": "Specifies the direction of the snapshot `gainers` or `losers`\n\nBy `default` gainers",
                    "default": ""
                },
                {
                    "name": "dp",
                    "type": "STRING",
                    "description": "Specifies the number of decimal places for floating values\n\nShould be in range `[0,11]` inclusive; default `5`",
                    "default": ""
                },
                {
                    "name": "outputsize",
                    "type": "STRING",
                    "description": "Specifies the size of the snapshot\n\nCan be in a range from `1` to `50`; default `30`",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/market_movers/stocks\"\nquerystring = {\"country\": \"\", \"direction\": \"\", \"dp\": \"\", \"outputsize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/market_movers/stocks\"\nquerystring = {\"country\": \"\", \"direction\": \"\", \"dp\": \"\", \"outputsize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Stocks List",
            "url": "https://twelve-data1.p.rapidapi.com/stocks",
            "description": "This API call returns an array of symbols available at Twelve Data API. This list is updated daily.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "Filter by country name or alpha code",
                    "default": ""
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Filter by symbol",
                    "default": ""
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Filter by country name or alpha code",
                    "default": ""
                },
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "Filter by exchange name or mic code",
                    "default": "NASDAQ"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/stocks\"\nquerystring = {\"type\": \"\", \"symbol\": \"\", \"format\": \"json\", \"country\": \"\", \"exchange\": \"NASDAQ\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/stocks\"\nquerystring = {\"type\": \"\", \"symbol\": \"\", \"format\": \"json\", \"country\": \"\", \"exchange\": \"NASDAQ\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Market Movers - Crypto",
            "url": "https://twelve-data1.p.rapidapi.com/market_movers/crypto",
            "description": "Get the list of the top gaining or losing crypto today.\n\nTop gainers are ordered by the highest rate of price increase since the previous day's close. Top losers are ordered by the highest percentage of price decrease since the last day.\n\nAvailability: Ultra plan\nData weighting: 100 API credits per symbol",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "STRING",
                    "description": "Specifies the size of the snapshot\n\nCan be in a range from `1` to `50`; default `30`",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "STRING",
                    "description": "Specifies the direction of the snapshot `gainers` or `losers`\n\nBy `default` gainers",
                    "default": ""
                },
                {
                    "name": "dp",
                    "type": "STRING",
                    "description": "Specifies the number of decimal places for floating values\n\nShould be in range `[0,11]` inclusive; default `5`",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Country of the snapshot, applicable to non-currencies only\n\nTakes country name or alpha code; default `USA`",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/market_movers/crypto\"\nquerystring = {\"outputsize\": \"\", \"direction\": \"\", \"dp\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/market_movers/crypto\"\nquerystring = {\"outputsize\": \"\", \"direction\": \"\", \"dp\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Market Movers - Forex",
            "url": "https://twelve-data1.p.rapidapi.com/market_movers/forex",
            "description": "Get the list of the top gaining or losing forex today.\n\nTop gainers are ordered by the highest rate of price increase since the previous day's close. Top losers are ordered by the highest percentage of price decrease since the last day.\n\nAvailability: Ultra plan\nData weighting: 100 API credits per symbol",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "dp",
                    "type": "STRING",
                    "description": "Specifies the number of decimal places for floating values\n\nShould be in range `[0,11]` inclusive; default `5`",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "STRING",
                    "description": "Specifies the direction of the snapshot `gainers` or `losers`\n\nBy `default` gainers",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Country of the snapshot, applicable to non-currencies only\n\nTakes country name or alpha code; default `USA`",
                    "default": ""
                },
                {
                    "name": "outputsize",
                    "type": "STRING",
                    "description": "Specifies the size of the snapshot\n\nCan be in a range from `1` to `50`; default `30`",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/market_movers/forex\"\nquerystring = {\"dp\": \"\", \"direction\": \"\", \"country\": \"\", \"outputsize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/market_movers/forex\"\nquerystring = {\"dp\": \"\", \"direction\": \"\", \"country\": \"\", \"outputsize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "All data",
            "url": "https://twelve-data1.p.rapidapi.com/mutual_funds/world",
            "description": "This API request returns a complete breakdown of a mutual fund, including summary, performance, risk, ratings, composition, purchase_info, and sustainability.\n\nAvailability: Mega plan\nData weighting: 1000 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Symbol ticker of mutual fund",
                    "default": "VFIAX"
                }
            ],
            "optional_parameters": [
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Filter by country name or alpha code",
                    "default": ""
                },
                {
                    "name": "dp",
                    "type": "STRING",
                    "description": "Number of decimal places for floating values",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mutual_funds/world\"\nquerystring = {\"symbol\": \"VFIAX\", \"country\": \"\", \"dp\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mutual_funds/world\"\nquerystring = {\"symbol\": \"VFIAX\", \"country\": \"\", \"dp\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Market Movers",
            "url": "https://twelve-data1.p.rapidapi.com/market_movers/mutual_funds",
            "description": "Get the list of the top gaining or losing mutual funds today.\n\nTop gainers are ordered by the highest rate of price increase since the previous day's close. Top losers are ordered by the highest percentage of price decrease since the last day.\n\nAvailability: Ultra plan\nData weighting: 100 API credits per symbol",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "STRING",
                    "description": "Specifies the size of the snapshot\n\nCan be in a range from `1` to `50`; default `30`",
                    "default": ""
                },
                {
                    "name": "dp",
                    "type": "STRING",
                    "description": "Specifies the number of decimal places for floating values\n\nShould be in range `[0,11]` inclusive; default `5`",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "STRING",
                    "description": "Specifies the direction of the snapshot `gainers` or `losers`\n\nBy `default` gainers",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Country of the snapshot, applicable to non-currencies only\n\nTakes country name or alpha code; default `USA`",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/market_movers/mutual_funds\"\nquerystring = {\"outputsize\": \"\", \"dp\": \"\", \"direction\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/market_movers/mutual_funds\"\nquerystring = {\"outputsize\": \"\", \"dp\": \"\", \"direction\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Risk",
            "url": "https://twelve-data1.p.rapidapi.com/mutual_funds/world/risk",
            "description": "This API request returns core metrics to measure the risk of investing in a mutual fund.\n\nAvailability: Mega plan\nData weighting: 200 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Symbol ticker of mutual fund",
                    "default": "VFIAX"
                }
            ],
            "optional_parameters": [
                {
                    "name": "dp",
                    "type": "STRING",
                    "description": "Number of decimal places for floating values",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Filter by country name or alpha code",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mutual_funds/world/risk\"\nquerystring = {\"symbol\": \"VFIAX\", \"dp\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mutual_funds/world/risk\"\nquerystring = {\"symbol\": \"VFIAX\", \"dp\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "MFs Type List",
            "url": "https://twelve-data1.p.rapidapi.com/mutual_funds/type",
            "description": "This API request returns a list of mutual funds types.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Filter by country name or alpha code",
                    "default": ""
                },
                {
                    "name": "fund_type",
                    "type": "STRING",
                    "description": "Filter by the type of fund",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mutual_funds/type\"\nquerystring = {\"country\": \"\", \"fund_type\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mutual_funds/type\"\nquerystring = {\"country\": \"\", \"fund_type\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Earliest Timestamp",
            "url": "https://twelve-data1.p.rapidapi.com/earliest_timestamp",
            "description": "This method returns the first available DateTime for a given instrument at the specific interval.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Supports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1day"
                }
            ],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30`",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/earliest_timestamp\"\nquerystring = {\"outputsize\": 30, \"symbol\": \"AAPL\", \"interval\": \"1day\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/earliest_timestamp\"\nquerystring = {\"outputsize\": 30, \"symbol\": \"AAPL\", \"interval\": \"1day\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Symbol Search",
            "url": "https://twelve-data1.p.rapidapi.com/symbol_search",
            "description": "This method helps to find the best matching symbol. It can be used as the base for custom lookups. The response is returned in descending order, with the most relevant instrument at the beginning.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Symbol to search",
                    "default": "AA"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Number of matches in response\nDefault `30`, Max `120`",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/symbol_search\"\nquerystring = {\"symbol\": \"AA\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/symbol_search\"\nquerystring = {\"symbol\": \"AA\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Technical Indicators Interface",
            "url": "https://twelve-data1.p.rapidapi.com/technical_indicators",
            "description": "This API call return array of objects with available technical indicators. This endpoint might be used to build an abstract interface to make more convenient API calls from the application.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/technical_indicators\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/technical_indicators\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Cryptocurrencies List",
            "url": "https://twelve-data1.p.rapidapi.com/cryptocurrencies",
            "description": "This API call return array of cryptocurrency pairs available at Twelve Data API. This list is daily updated.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Filter by symbol",
                    "default": ""
                },
                {
                    "name": "currency_quote",
                    "type": "STRING",
                    "description": "Filter by currency quote",
                    "default": ""
                },
                {
                    "name": "currency_base",
                    "type": "STRING",
                    "description": "Filter by currency base",
                    "default": "BTC"
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "Filter by crypto exchange name",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/cryptocurrencies\"\nquerystring = {\"symbol\": \"\", \"currency_quote\": \"\", \"currency_base\": \"BTC\", \"format\": \"json\", \"exchange\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/cryptocurrencies\"\nquerystring = {\"symbol\": \"\", \"currency_quote\": \"\", \"currency_base\": \"BTC\", \"format\": \"json\", \"exchange\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "ETFs List",
            "url": "https://twelve-data1.p.rapidapi.com/etf",
            "description": "This API call return array of ETFs available at Twelve Data API. This list is daily updated.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "Filter by exchange name or mic code",
                    "default": "Euronext"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Filter by symbol",
                    "default": ""
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/etf\"\nquerystring = {\"exchange\": \"Euronext\", \"symbol\": \"\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/etf\"\nquerystring = {\"exchange\": \"Euronext\", \"symbol\": \"\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Forex Pairs List",
            "url": "https://twelve-data1.p.rapidapi.com/forex_pairs",
            "description": "This API call return array of forex pairs available at Twelve Data API. This list is daily updated.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "currency_base",
                    "type": "STRING",
                    "description": "Filter by currency base",
                    "default": "EUR"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Filter by symbol",
                    "default": ""
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "currency_quote",
                    "type": "STRING",
                    "description": "Filter by currency quote",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/forex_pairs\"\nquerystring = {\"currency_base\": \"EUR\", \"symbol\": \"\", \"format\": \"json\", \"currency_quote\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/forex_pairs\"\nquerystring = {\"currency_base\": \"EUR\", \"symbol\": \"\", \"format\": \"json\", \"currency_quote\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Indices List",
            "url": "https://twelve-data1.p.rapidapi.com/indices",
            "description": "This API call return array of indices available at Twelve Data API. This list is daily updated.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "Filter by exchange name or mic code",
                    "default": "NYSE"
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Filter by symbol",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/indices\"\nquerystring = {\"exchange\": \"NYSE\", \"format\": \"json\", \"symbol\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/indices\"\nquerystring = {\"exchange\": \"NYSE\", \"format\": \"json\", \"symbol\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Currency Conversion",
            "url": "https://twelve-data1.p.rapidapi.com/currency_conversion",
            "description": "This API call returns real-time exchange rate and converted amount for currency pair. Works with forex and cryptocurrency.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": "USD/JPY"
                },
                {
                    "name": "amount",
                    "type": "STRING",
                    "description": "",
                    "default": "122"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/currency_conversion\"\nquerystring = {\"symbol\": \"USD/JPY\", \"amount\": \"122\", \"format\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/currency_conversion\"\nquerystring = {\"symbol\": \"USD/JPY\", \"amount\": \"122\", \"format\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Exchange Rate",
            "url": "https://twelve-data1.p.rapidapi.com/exchange_rate",
            "description": "This API call returns real-time exchange rate for currency pair. Works with forex and cryptocurrency.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": "EUR/USD"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/exchange_rate\"\nquerystring = {\"symbol\": \"EUR/USD\", \"format\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/exchange_rate\"\nquerystring = {\"symbol\": \"EUR/USD\", \"format\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Key Executives",
            "url": "https://twelve-data1.p.rapidapi.com/key_executives",
            "description": "Returns individuals at the highest level of management of an organization.\n\nAvailability: Mega plan\nData weighting: 1000 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/key_executives\"\nquerystring = {\"exchange\": \"\", \"country\": \"\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/key_executives\"\nquerystring = {\"exchange\": \"\", \"country\": \"\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Options Chain",
            "url": "https://twelve-data1.p.rapidapi.com/options/chain",
            "description": "Returns a listing of all available options contracts for given security. It shows all listed puts, calls, their expiration, strike prices, and pricing information for a single underlying asset within a given maturity period.\n\nAvailability: Ultra plan\nData weighting: 50 API credits per symbol",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "option_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "expiration_date",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "side",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/options/chain\"\nquerystring = {\"option_id\": \"\", \"expiration_date\": \"\", \"exchange\": \"\", \"symbol\": \"AAPL\", \"side\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/options/chain\"\nquerystring = {\"option_id\": \"\", \"expiration_date\": \"\", \"exchange\": \"\", \"symbol\": \"AAPL\", \"side\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Statistics",
            "url": "https://twelve-data1.p.rapidapi.com/statistics",
            "description": "Returns current overview of company\u2019s main statistics including valuation metrics and financials.\n\nAvailability: Ultra plan\nData weighting: 50 API credits per symbol",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/statistics\"\nquerystring = {\"symbol\": \"\", \"exchange\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/statistics\"\nquerystring = {\"symbol\": \"\", \"exchange\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "IPO Calendar",
            "url": "https://twelve-data1.p.rapidapi.com/ipo_calendar",
            "description": "This endpoint returns past, today, or upcoming IPOs.\n\nAvailability: Pro plan\nData weighting: 40 API credits per symbol",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "end_date",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "start_date",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ipo_calendar\"\nquerystring = {\"end_date\": \"\", \"symbol\": \"\", \"country\": \"\", \"start_date\": \"\", \"exchange\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ipo_calendar\"\nquerystring = {\"end_date\": \"\", \"symbol\": \"\", \"country\": \"\", \"start_date\": \"\", \"exchange\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "COPPOCK",
            "url": "https://twelve-data1.p.rapidapi.com/coppock",
            "description": "Coppock Curve(COPPOCK) is usually used to detect long-term trend changes, typically on monthly charts.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "long_roc_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 14
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "wma_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 10
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "short_roc_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 11
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/coppock\"\nquerystring = {\"interval\": \"1min\", \"long_roc_period\": 14, \"format\": \"json\", \"outputsize\": 30, \"wma_period\": 10, \"symbol\": \"AAPL\", \"series_type\": \"close\", \"short_roc_period\": 11}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/coppock\"\nquerystring = {\"interval\": \"1min\", \"long_roc_period\": 14, \"format\": \"json\", \"outputsize\": 30, \"wma_period\": 10, \"symbol\": \"AAPL\", \"series_type\": \"close\", \"short_roc_period\": 11}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "KELTNER",
            "url": "https://twelve-data1.p.rapidapi.com/keltner",
            "description": "Keltner Channels(KELTNER) is a volatility indicator used to spot trend changes and accelerations.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "atr_time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 10
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 20
                },
                {
                    "name": "multiplier",
                    "type": "NUMBER",
                    "description": "",
                    "default": 2
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "ma_type",
                    "type": "STRING",
                    "description": "Supports: `SMA`, `EMA`, `WMA`, `DEMA`, `TEMA`, `TRIMA`, `KAMA`, `MAMA`, `T3MA`",
                    "default": "SMA"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/keltner\"\nquerystring = {\"atr_time_period\": 10, \"time_period\": 20, \"multiplier\": 2, \"interval\": \"1min\", \"format\": \"json\", \"symbol\": \"AAPL\", \"series_type\": \"close\", \"ma_type\": \"SMA\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/keltner\"\nquerystring = {\"atr_time_period\": 10, \"time_period\": 20, \"multiplier\": 2, \"interval\": \"1min\", \"format\": \"json\", \"symbol\": \"AAPL\", \"series_type\": \"close\", \"ma_type\": \"SMA\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "DX",
            "url": "https://twelve-data1.p.rapidapi.com/dx",
            "description": "Directional Movement Index(DX) identifies which direction the price is moving.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 14
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/dx\"\nquerystring = {\"time_period\": 14, \"interval\": \"1min\", \"outputsize\": 30, \"format\": \"json\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/dx\"\nquerystring = {\"time_period\": 14, \"interval\": \"1min\", \"outputsize\": 30, \"format\": \"json\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "ULTOSC",
            "url": "https://twelve-data1.p.rapidapi.com/ultosc",
            "description": "Ultimate Oscillator(ULTOSC) takes into account three different time periods to enhance the quality of overbought and oversold signals.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "time_period_1",
                    "type": "NUMBER",
                    "description": "",
                    "default": 7
                },
                {
                    "name": "time_period_2",
                    "type": "NUMBER",
                    "description": "",
                    "default": 14
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "time_period_3",
                    "type": "NUMBER",
                    "description": "",
                    "default": 28
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ultosc\"\nquerystring = {\"time_period_1\": 7, \"time_period_2\": 14, \"format\": \"json\", \"time_period_3\": 28, \"symbol\": \"AAPL\", \"interval\": \"1min\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ultosc\"\nquerystring = {\"time_period_1\": 7, \"time_period_2\": 14, \"format\": \"json\", \"time_period_3\": 28, \"symbol\": \"AAPL\", \"interval\": \"1min\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "WMA",
            "url": "https://twelve-data1.p.rapidapi.com/wma",
            "description": "Weighted Moving Average(WMA) smooths out price fluctuations, and puts more weight on recent data points and less on past.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/wma\"\nquerystring = {\"format\": \"json\", \"outputsize\": 30, \"symbol\": \"AAPL\", \"time_period\": 9, \"series_type\": \"close\", \"interval\": \"1min\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/wma\"\nquerystring = {\"format\": \"json\", \"outputsize\": 30, \"symbol\": \"AAPL\", \"time_period\": 9, \"series_type\": \"close\", \"interval\": \"1min\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "TRANGE",
            "url": "https://twelve-data1.p.rapidapi.com/trange",
            "description": "True Range(TRANGE) is usually used as the base when calculating other indicators. TRANGE determines the normal trading range of an asset.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/trange\"\nquerystring = {\"interval\": \"1min\", \"outputsize\": 30, \"symbol\": \"AAPL\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/trange\"\nquerystring = {\"interval\": \"1min\", \"outputsize\": 30, \"symbol\": \"AAPL\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "MACDEXT",
            "url": "https://twelve-data1.p.rapidapi.com/macdext",
            "description": "Moving Average Convergence Divergence Extended(MACDEXT) gives greater control over MACD input parameters. MACDEXT has an unstable period ~ 100.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "signal_ma_type",
                    "type": "STRING",
                    "description": "Supports: `SMA`, `EMA`, `WMA`, `DEMA`, `TEMA`, `TRIMA`, `KAMA`, `MAMA`, `T3MA`",
                    "default": "SMA"
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "signal_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "slow_ma_type",
                    "type": "STRING",
                    "description": "Supports: `SMA`, `EMA`, `WMA`, `DEMA`, `TEMA`, `TRIMA`, `KAMA`, `MAMA`, `T3MA`",
                    "default": "SMA"
                },
                {
                    "name": "fast_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 12
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "fast_ma_type",
                    "type": "STRING",
                    "description": "Supports: `SMA`, `EMA`, `WMA`, `DEMA`, `TEMA`, `TRIMA`, `KAMA`, `MAMA`, `T3MA`",
                    "default": "SMA"
                },
                {
                    "name": "slow_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 26
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/macdext\"\nquerystring = {\"signal_ma_type\": \"SMA\", \"series_type\": \"close\", \"format\": \"json\", \"signal_period\": 9, \"slow_ma_type\": \"SMA\", \"fast_period\": 12, \"outputsize\": 30, \"symbol\": \"AAPL\", \"fast_ma_type\": \"SMA\", \"interval\": \"1min\", \"slow_period\": 26}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/macdext\"\nquerystring = {\"signal_ma_type\": \"SMA\", \"series_type\": \"close\", \"format\": \"json\", \"signal_period\": 9, \"slow_ma_type\": \"SMA\", \"fast_period\": 12, \"outputsize\": 30, \"symbol\": \"AAPL\", \"fast_ma_type\": \"SMA\", \"interval\": \"1min\", \"slow_period\": 26}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "LINEARREGSLOPE",
            "url": "https://twelve-data1.p.rapidapi.com/linearregslope",
            "description": "Linear Regression Slope(LINEARREGSLOPE) calculates the slope for the linear regression trendline for each data point.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/linearregslope\"\nquerystring = {\"interval\": \"1min\", \"format\": \"json\", \"symbol\": \"AAPL\", \"time_period\": 9, \"series_type\": \"close\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/linearregslope\"\nquerystring = {\"interval\": \"1min\", \"format\": \"json\", \"symbol\": \"AAPL\", \"time_period\": 9, \"series_type\": \"close\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "HLC3",
            "url": "https://twelve-data1.p.rapidapi.com/hlc3",
            "description": "High, Low, Close Average Values(HLC3) give alternative candlesticks patter. Every element is defined as follows: (high + low + close) / 3.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/hlc3\"\nquerystring = {\"symbol\": \"AAPL\", \"format\": \"json\", \"outputsize\": 30, \"interval\": \"1min\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/hlc3\"\nquerystring = {\"symbol\": \"AAPL\", \"format\": \"json\", \"outputsize\": 30, \"interval\": \"1min\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "MINMAXINDEX",
            "url": "https://twelve-data1.p.rapidapi.com/minmaxindex",
            "description": "Indexes of lowest and highest values over period(MINMAXINDEX).",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/minmaxindex\"\nquerystring = {\"symbol\": \"AAPL\", \"time_period\": 9, \"interval\": \"1min\", \"format\": \"json\", \"series_type\": \"close\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/minmaxindex\"\nquerystring = {\"symbol\": \"AAPL\", \"time_period\": 9, \"interval\": \"1min\", \"format\": \"json\", \"series_type\": \"close\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "MEDPRICE",
            "url": "https://twelve-data1.p.rapidapi.com/medprice",
            "description": "Median Price(MEDPRICE).",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/medprice\"\nquerystring = {\"interval\": \"1min\", \"format\": \"json\", \"outputsize\": 30, \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/medprice\"\nquerystring = {\"interval\": \"1min\", \"format\": \"json\", \"outputsize\": 30, \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "LINEARREG",
            "url": "https://twelve-data1.p.rapidapi.com/linearreg",
            "description": "Linear Regression(LINEARREG) is used to determine trend direction by a straight line.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/linearreg\"\nquerystring = {\"time_period\": 9, \"format\": \"json\", \"interval\": \"1min\", \"series_type\": \"close\", \"outputsize\": 30, \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/linearreg\"\nquerystring = {\"time_period\": 9, \"format\": \"json\", \"interval\": \"1min\", \"series_type\": \"close\", \"outputsize\": 30, \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "HT_TRENDLINE",
            "url": "https://twelve-data1.p.rapidapi.com/ht_trendline",
            "description": "Hilbert Transform Instantaneous Trendline(HT_TRENDLINE) comes from the concept of Digital Signal Processing (DSP). It creates complex signals from the simple chart data. You can read more about it in the Rocket Science for Traders book by John F. Ehlers.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ht_trendline\"\nquerystring = {\"interval\": \"1min\", \"series_type\": \"close\", \"outputsize\": 30, \"format\": \"json\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ht_trendline\"\nquerystring = {\"interval\": \"1min\", \"series_type\": \"close\", \"outputsize\": 30, \"format\": \"json\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "AVGPRICE",
            "url": "https://twelve-data1.p.rapidapi.com/avgprice",
            "description": "Average Price(AVGPRICE) uses the formula: (open + high + low + close) / 4.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/avgprice\"\nquerystring = {\"outputsize\": 30, \"interval\": \"1min\", \"symbol\": \"AAPL\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/avgprice\"\nquerystring = {\"outputsize\": 30, \"interval\": \"1min\", \"symbol\": \"AAPL\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "HT_TRENDMODE",
            "url": "https://twelve-data1.p.rapidapi.com/ht_trendmode",
            "description": "Hilbert Transform Trend vs. Cycle Mode(HT_TRENDMODE) is part of Hilbert Transforms concepts. You can read more about it in the Rocket Science for Traders book by John F. Ehlers.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ht_trendmode\"\nquerystring = {\"symbol\": \"AAPL\", \"interval\": \"1min\", \"series_type\": \"close\", \"format\": \"json\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ht_trendmode\"\nquerystring = {\"symbol\": \"AAPL\", \"interval\": \"1min\", \"series_type\": \"close\", \"format\": \"json\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "MA",
            "url": "https://twelve-data1.p.rapidapi.com/ma",
            "description": "Moving Average(MA) is used to smooth out price fluctuations and get rid of market noise.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "ma_type",
                    "type": "STRING",
                    "description": "Supports: `SMA`, `EMA`, `WMA`, `DEMA`, `TEMA`, `TRIMA`, `KAMA`, `MAMA`, `T3MA`",
                    "default": "SMA"
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ma\"\nquerystring = {\"interval\": \"1min\", \"time_period\": 9, \"outputsize\": 30, \"ma_type\": \"SMA\", \"series_type\": \"close\", \"symbol\": \"AAPL\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ma\"\nquerystring = {\"interval\": \"1min\", \"time_period\": 9, \"outputsize\": 30, \"ma_type\": \"SMA\", \"series_type\": \"close\", \"symbol\": \"AAPL\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "EXP",
            "url": "https://twelve-data1.p.rapidapi.com/exp",
            "description": "Exponential(EXP) transforms input data with the mathematical exponent function.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/exp\"\nquerystring = {\"symbol\": \"AAPL\", \"series_type\": \"close\", \"interval\": \"1min\", \"outputsize\": 30, \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/exp\"\nquerystring = {\"symbol\": \"AAPL\", \"series_type\": \"close\", \"interval\": \"1min\", \"outputsize\": 30, \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "WCLPRICE",
            "url": "https://twelve-data1.p.rapidapi.com/wclprice",
            "description": "Weighted Close Price(WCLPRICE) is usually used as the base for other indicators for smoothness. Formula: (high + low + close * 2) / 4.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/wclprice\"\nquerystring = {\"outputsize\": 30, \"interval\": \"1min\", \"format\": \"json\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/wclprice\"\nquerystring = {\"outputsize\": 30, \"interval\": \"1min\", \"format\": \"json\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "STOCHF",
            "url": "https://twelve-data1.p.rapidapi.com/stochf",
            "description": "Stochastic Fast(STOCHF) is more sensitive to price changes; therefore, it changes direction more quickly.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "fast_dma_type",
                    "type": "STRING",
                    "description": "Supports: `SMA`, `EMA`, `WMA`, `DEMA`, `TEMA`, `TRIMA`, `KAMA`, `MAMA`, `T3MA`",
                    "default": "SMA"
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "fast_k_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 14
                },
                {
                    "name": "fast_d_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 3
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/stochf\"\nquerystring = {\"fast_dma_type\": \"SMA\", \"format\": \"json\", \"fast_k_period\": 14, \"interval\": \"1min\", \"symbol\": \"AAPL\", \"fast_d_period\": 3, \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/stochf\"\nquerystring = {\"fast_dma_type\": \"SMA\", \"format\": \"json\", \"fast_k_period\": 14, \"interval\": \"1min\", \"symbol\": \"AAPL\", \"fast_d_period\": 3, \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "KAMA",
            "url": "https://twelve-data1.p.rapidapi.com/kama",
            "description": "Kaufman's Adaptive Moving Average(KAMA) is a type of Moving Average(MA) that incorporates market noise and volatility.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/kama\"\nquerystring = {\"outputsize\": 30, \"symbol\": \"AAPL\", \"interval\": \"1min\", \"time_period\": 9, \"format\": \"json\", \"series_type\": \"close\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/kama\"\nquerystring = {\"outputsize\": 30, \"symbol\": \"AAPL\", \"interval\": \"1min\", \"time_period\": 9, \"format\": \"json\", \"series_type\": \"close\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "ADOSC",
            "url": "https://twelve-data1.p.rapidapi.com/adosc",
            "description": "Chaikin A/D Oscillator(ADOSC) is an indicator, which finds the relationship between increasing and decreasing volume with price fluctuations. The Chaikin Oscillator measures the momentum of the Accumulation/Distribution Line(ADL) using two Exponential Moving Averages of varying length to the line(MACD).",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "slow_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 26
                },
                {
                    "name": "fast_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 12
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/adosc\"\nquerystring = {\"interval\": \"1min\", \"slow_period\": 26, \"fast_period\": 12, \"format\": \"json\", \"symbol\": \"AAPL\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/adosc\"\nquerystring = {\"interval\": \"1min\", \"slow_period\": 26, \"fast_period\": 12, \"format\": \"json\", \"symbol\": \"AAPL\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "MIN",
            "url": "https://twelve-data1.p.rapidapi.com/min",
            "description": "Lowest value over period(MIN).",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/min\"\nquerystring = {\"symbol\": \"AAPL\", \"outputsize\": 30, \"series_type\": \"close\", \"interval\": \"1min\", \"time_period\": 9, \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/min\"\nquerystring = {\"symbol\": \"AAPL\", \"outputsize\": 30, \"series_type\": \"close\", \"interval\": \"1min\", \"time_period\": 9, \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "VWAP",
            "url": "https://twelve-data1.p.rapidapi.com/vwap",
            "description": "Volume Weighted Average Price(VWAP) is commonly used as a trading benchmark that gives an average price at which the instrument has been trading during the day.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "sd_time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 0
                },
                {
                    "name": "sd",
                    "type": "NUMBER",
                    "description": "",
                    "default": 0
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/vwap\"\nquerystring = {\"interval\": \"1min\", \"symbol\": \"AAPL\", \"format\": \"json\", \"outputsize\": 30, \"sd_time_period\": 0, \"sd\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/vwap\"\nquerystring = {\"interval\": \"1min\", \"symbol\": \"AAPL\", \"format\": \"json\", \"outputsize\": 30, \"sd_time_period\": 0, \"sd\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "PLUS_DM",
            "url": "https://twelve-data1.p.rapidapi.com/plus_dm",
            "description": "Plus Directional Movement(PLUS_DM) is calculated as High - Previous High.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/plus_dm\"\nquerystring = {\"outputsize\": 30, \"symbol\": \"AAPL\", \"time_period\": 9, \"interval\": \"1min\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/plus_dm\"\nquerystring = {\"outputsize\": 30, \"symbol\": \"AAPL\", \"time_period\": 9, \"interval\": \"1min\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "CMO",
            "url": "https://twelve-data1.p.rapidapi.com/cmo",
            "description": "Chande Momentum Oscillator(CMO) is used to show overbought and oversold conditions.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/cmo\"\nquerystring = {\"symbol\": \"AAPL\", \"outputsize\": 30, \"series_type\": \"close\", \"interval\": \"1min\", \"format\": \"json\", \"time_period\": 9}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/cmo\"\nquerystring = {\"symbol\": \"AAPL\", \"outputsize\": 30, \"series_type\": \"close\", \"interval\": \"1min\", \"format\": \"json\", \"time_period\": 9}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "WILLR",
            "url": "https://twelve-data1.p.rapidapi.com/willr",
            "description": "Williams %R(WILLR) calculates overbought and oversold levels. It can also be used to find entry and exit signals.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/willr\"\nquerystring = {\"interval\": \"1min\", \"time_period\": 9, \"format\": \"json\", \"outputsize\": 30, \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/willr\"\nquerystring = {\"interval\": \"1min\", \"time_period\": 9, \"format\": \"json\", \"outputsize\": 30, \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "MOM",
            "url": "https://twelve-data1.p.rapidapi.com/mom",
            "description": "Momentum(MOM) compares the current price with the previous price N timeperiods ago.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mom\"\nquerystring = {\"series_type\": \"close\", \"format\": \"json\", \"interval\": \"1min\", \"symbol\": \"AAPL\", \"outputsize\": 30, \"time_period\": 9}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mom\"\nquerystring = {\"series_type\": \"close\", \"format\": \"json\", \"interval\": \"1min\", \"symbol\": \"AAPL\", \"outputsize\": 30, \"time_period\": 9}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "LINEARREGANGLE",
            "url": "https://twelve-data1.p.rapidapi.com/linearregangle",
            "description": "Linear Regression Angle(LINEARREGANGLE) calculates the angle of the linear regression trendline.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/linearregangle\"\nquerystring = {\"time_period\": 9, \"format\": \"json\", \"outputsize\": 30, \"interval\": \"1min\", \"symbol\": \"AAPL\", \"series_type\": \"close\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/linearregangle\"\nquerystring = {\"time_period\": 9, \"format\": \"json\", \"outputsize\": 30, \"interval\": \"1min\", \"symbol\": \"AAPL\", \"series_type\": \"close\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "ROCR",
            "url": "https://twelve-data1.p.rapidapi.com/rocr",
            "description": "Rate of change ratio(ROCR) calculates the ratio between the current price and price n timeperiods ago. Formula: (price / prevPrice).",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/rocr\"\nquerystring = {\"format\": \"json\", \"interval\": \"1min\", \"symbol\": \"AAPL\", \"time_period\": 9, \"series_type\": \"close\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/rocr\"\nquerystring = {\"format\": \"json\", \"interval\": \"1min\", \"symbol\": \"AAPL\", \"time_period\": 9, \"series_type\": \"close\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "EMA",
            "url": "https://twelve-data1.p.rapidapi.com/ema",
            "description": "Exponential Moving Average(EMA) places greater importance on recent data points than the normal Moving Average(MA).",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ema\"\nquerystring = {\"symbol\": \"AAPL\", \"series_type\": \"close\", \"format\": \"json\", \"interval\": \"1min\", \"outputsize\": 30, \"time_period\": 9}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ema\"\nquerystring = {\"symbol\": \"AAPL\", \"series_type\": \"close\", \"format\": \"json\", \"interval\": \"1min\", \"outputsize\": 30, \"time_period\": 9}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "SUB",
            "url": "https://twelve-data1.p.rapidapi.com/sub",
            "description": "Subtraction of values of two specified time series.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "series_type_1",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "open"
                },
                {
                    "name": "series_type_2",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/sub\"\nquerystring = {\"interval\": \"1min\", \"outputsize\": 30, \"format\": \"json\", \"series_type_1\": \"open\", \"series_type_2\": \"close\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/sub\"\nquerystring = {\"interval\": \"1min\", \"outputsize\": 30, \"format\": \"json\", \"series_type_1\": \"open\", \"series_type_2\": \"close\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "APO",
            "url": "https://twelve-data1.p.rapidapi.com/apo",
            "description": "Absolute Price Oscillator(APO) calculates the difference between two price moving averages.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "slow_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 26
                },
                {
                    "name": "fast_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 12
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "ma_type",
                    "type": "STRING",
                    "description": "Supports: `SMA`, `EMA`, `WMA`, `DEMA`, `TEMA`, `TRIMA`, `KAMA`, `MAMA`, `T3MA`",
                    "default": "SMA"
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/apo\"\nquerystring = {\"interval\": \"1min\", \"symbol\": \"AAPL\", \"slow_period\": 26, \"fast_period\": 12, \"format\": \"json\", \"ma_type\": \"SMA\", \"series_type\": \"close\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/apo\"\nquerystring = {\"interval\": \"1min\", \"symbol\": \"AAPL\", \"slow_period\": 26, \"fast_period\": 12, \"format\": \"json\", \"ma_type\": \"SMA\", \"series_type\": \"close\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "ROCR100",
            "url": "https://twelve-data1.p.rapidapi.com/rocr100",
            "description": "Rate of change ratio 100 scale(ROCR100) calculates the ratio with 100 scale between the current price and price n timeperiods ago. Formula: (price / prevPrice) * 100.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/rocr100\"\nquerystring = {\"interval\": \"1min\", \"outputsize\": 30, \"time_period\": 9, \"format\": \"json\", \"symbol\": \"AAPL\", \"series_type\": \"close\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/rocr100\"\nquerystring = {\"interval\": \"1min\", \"outputsize\": 30, \"time_period\": 9, \"format\": \"json\", \"symbol\": \"AAPL\", \"series_type\": \"close\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "TYPPRICE",
            "url": "https://twelve-data1.p.rapidapi.com/typprice",
            "description": "Typical Price(TYPPRICE).",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/typprice\"\nquerystring = {\"interval\": \"1min\", \"format\": \"json\", \"outputsize\": 30, \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/typprice\"\nquerystring = {\"interval\": \"1min\", \"format\": \"json\", \"outputsize\": 30, \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "SMA",
            "url": "https://twelve-data1.p.rapidapi.com/sma",
            "description": "Simple Moving Average(SMA) is an arithmetic moving average calculated by adding the latest closing prices and then dividing them by the number of time periods.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/sma\"\nquerystring = {\"time_period\": 9, \"outputsize\": 30, \"format\": \"json\", \"series_type\": \"close\", \"interval\": \"1min\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/sma\"\nquerystring = {\"time_period\": 9, \"outputsize\": 30, \"format\": \"json\", \"series_type\": \"close\", \"interval\": \"1min\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "VAR",
            "url": "https://twelve-data1.p.rapidapi.com/var",
            "description": "Variance(VAR) calculates the spread between data points to determine how far they from the mean.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/var\"\nquerystring = {\"symbol\": \"AAPL\", \"interval\": \"1min\", \"time_period\": 9, \"format\": \"json\", \"series_type\": \"close\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/var\"\nquerystring = {\"symbol\": \"AAPL\", \"interval\": \"1min\", \"time_period\": 9, \"format\": \"json\", \"series_type\": \"close\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "STDDEV",
            "url": "https://twelve-data1.p.rapidapi.com/stddev",
            "description": "Standard Deviation(STDDEV) is used to measure volatility. This might be important when assessing risks.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "sd",
                    "type": "NUMBER",
                    "description": "",
                    "default": 2
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/stddev\"\nquerystring = {\"interval\": \"1min\", \"series_type\": \"close\", \"sd\": 2, \"time_period\": 9, \"format\": \"json\", \"symbol\": \"AAPL\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/stddev\"\nquerystring = {\"interval\": \"1min\", \"series_type\": \"close\", \"sd\": 2, \"time_period\": 9, \"format\": \"json\", \"symbol\": \"AAPL\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "CCI",
            "url": "https://twelve-data1.p.rapidapi.com/cci",
            "description": "Commodity Channel Index(CCI) is a universal indicator that can help to identify new trends and assess current critical conditions.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 20
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/cci\"\nquerystring = {\"outputsize\": 30, \"time_period\": 20, \"symbol\": \"AAPL\", \"interval\": \"1min\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/cci\"\nquerystring = {\"outputsize\": 30, \"time_period\": 20, \"symbol\": \"AAPL\", \"interval\": \"1min\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "HT_PHASOR",
            "url": "https://twelve-data1.p.rapidapi.com/ht_phasor",
            "description": "Hilbert Transform Phasor Components(HT_PHASOR) is part of Hilbert Transforms concepts. You can read more about it in the Rocket Science for Traders book by John F. Ehlers.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ht_phasor\"\nquerystring = {\"format\": \"json\", \"series_type\": \"close\", \"symbol\": \"AAPL\", \"outputsize\": 30, \"interval\": \"1min\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ht_phasor\"\nquerystring = {\"format\": \"json\", \"series_type\": \"close\", \"symbol\": \"AAPL\", \"outputsize\": 30, \"interval\": \"1min\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "ADX",
            "url": "https://twelve-data1.p.rapidapi.com/adx",
            "description": "Average Directional Index(ADX) is used to decide if the price trend is strong.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 14
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/adx\"\nquerystring = {\"symbol\": \"AAPL\", \"format\": \"json\", \"outputsize\": 30, \"interval\": \"1min\", \"time_period\": 14}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/adx\"\nquerystring = {\"symbol\": \"AAPL\", \"format\": \"json\", \"outputsize\": 30, \"interval\": \"1min\", \"time_period\": 14}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "SAREXT",
            "url": "https://twelve-data1.p.rapidapi.com/sarext",
            "description": "Parabolic SAR Extended(SAREXT) inherits the idea of classic SAR indicator but adds more flexibility in setting parameters.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "offset_on_reverse",
                    "type": "NUMBER",
                    "description": "",
                    "default": 0
                },
                {
                    "name": "acceleration_max_short",
                    "type": "NUMBER",
                    "description": "",
                    "default": 0.2
                },
                {
                    "name": "start_value",
                    "type": "NUMBER",
                    "description": "",
                    "default": 0
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "acceleration_limit_long",
                    "type": "NUMBER",
                    "description": "",
                    "default": 0.02
                },
                {
                    "name": "acceleration_limit_short",
                    "type": "NUMBER",
                    "description": "",
                    "default": 0.02
                },
                {
                    "name": "acceleration_short",
                    "type": "NUMBER",
                    "description": "",
                    "default": 0.02
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "acceleration_max_long",
                    "type": "NUMBER",
                    "description": "",
                    "default": 0.2
                },
                {
                    "name": "acceleration_long",
                    "type": "NUMBER",
                    "description": "",
                    "default": 0.02
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/sarext\"\nquerystring = {\"offset_on_reverse\": 0, \"symbol\": \"AAPL\", \"acceleration_max_short\": 0.2, \"start_value\": 0, \"format\": \"json\", \"acceleration_limit_long\": 0.02, \"acceleration_limit_short\": 0.02, \"acceleration_short\": 0.02, \"outputsize\": 30, \"acceleration_max_long\": 0.2, \"interval\": \"1min\", \"acceleration_long\": 0.02}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/sarext\"\nquerystring = {\"offset_on_reverse\": 0, \"symbol\": \"AAPL\", \"acceleration_max_short\": 0.2, \"start_value\": 0, \"format\": \"json\", \"acceleration_limit_long\": 0.02, \"acceleration_limit_short\": 0.02, \"acceleration_short\": 0.02, \"outputsize\": 30, \"acceleration_max_long\": 0.2, \"interval\": \"1min\", \"acceleration_long\": 0.02}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "LOG10",
            "url": "https://twelve-data1.p.rapidapi.com/log10",
            "description": "Logarithm to base 10(LOG10) transforms all data points with logarithm to base 10.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/log10\"\nquerystring = {\"symbol\": \"AAPL\", \"format\": \"json\", \"interval\": \"1min\", \"series_type\": \"close\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/log10\"\nquerystring = {\"symbol\": \"AAPL\", \"format\": \"json\", \"interval\": \"1min\", \"series_type\": \"close\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "CRSI",
            "url": "https://twelve-data1.p.rapidapi.com/crsi",
            "description": "ConnorsRSI(CRSI) is used to show the oversold and overbought levels of the RSI values.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "percent_rank_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 100
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "rsi_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 3
                },
                {
                    "name": "up_down_length",
                    "type": "NUMBER",
                    "description": "",
                    "default": 2
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/crsi\"\nquerystring = {\"percent_rank_period\": 100, \"outputsize\": 30, \"series_type\": \"close\", \"format\": \"json\", \"interval\": \"1min\", \"symbol\": \"AAPL\", \"rsi_period\": 3, \"up_down_length\": 2}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/crsi\"\nquerystring = {\"percent_rank_period\": 100, \"outputsize\": 30, \"series_type\": \"close\", \"format\": \"json\", \"interval\": \"1min\", \"symbol\": \"AAPL\", \"rsi_period\": 3, \"up_down_length\": 2}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "DPO",
            "url": "https://twelve-data1.p.rapidapi.com/dpo",
            "description": "Detrended Price Oscillator(DPO) is used to separate price from the trend, in order to more clearly identify the length of cycles.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 21
                },
                {
                    "name": "centered",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": false
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/dpo\"\nquerystring = {\"outputsize\": 30, \"time_period\": 21, \"centered\": false, \"series_type\": \"close\", \"interval\": \"1min\", \"symbol\": \"AAPL\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/dpo\"\nquerystring = {\"outputsize\": 30, \"time_period\": 21, \"centered\": false, \"series_type\": \"close\", \"interval\": \"1min\", \"symbol\": \"AAPL\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "MACD",
            "url": "https://twelve-data1.p.rapidapi.com/macd",
            "description": "Moving Average Convergence Divergence(MACD) is a trend following momentum indicator, which works by subtracting the longer moving average from the shorter one. MACD has an unstable period ~ 100.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "signal_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "fast_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 12
                },
                {
                    "name": "slow_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 26
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/macd\"\nquerystring = {\"signal_period\": 9, \"outputsize\": 30, \"series_type\": \"close\", \"fast_period\": 12, \"slow_period\": 26, \"interval\": \"1min\", \"symbol\": \"AAPL\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/macd\"\nquerystring = {\"signal_period\": 9, \"outputsize\": 30, \"series_type\": \"close\", \"fast_period\": 12, \"slow_period\": 26, \"interval\": \"1min\", \"symbol\": \"AAPL\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "LINEARREGINTERCEPT",
            "url": "https://twelve-data1.p.rapidapi.com/linearregintercept",
            "description": "Linear Regression Intercept(LINEARREGINTERCEPT) calculates the intercept for the linear regression trendline for each data point.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/linearregintercept\"\nquerystring = {\"series_type\": \"close\", \"time_period\": 9, \"format\": \"json\", \"symbol\": \"AAPL\", \"outputsize\": 30, \"interval\": \"1min\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/linearregintercept\"\nquerystring = {\"series_type\": \"close\", \"time_period\": 9, \"format\": \"json\", \"symbol\": \"AAPL\", \"outputsize\": 30, \"interval\": \"1min\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "MININDEX",
            "url": "https://twelve-data1.p.rapidapi.com/minindex",
            "description": "Index of lowest value over period(MININDEX).",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/minindex\"\nquerystring = {\"interval\": \"1min\", \"format\": \"json\", \"outputsize\": 30, \"series_type\": \"close\", \"symbol\": \"AAPL\", \"time_period\": 9}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/minindex\"\nquerystring = {\"interval\": \"1min\", \"format\": \"json\", \"outputsize\": 30, \"series_type\": \"close\", \"symbol\": \"AAPL\", \"time_period\": 9}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "MIDPOINT",
            "url": "https://twelve-data1.p.rapidapi.com/midpoint",
            "description": "MidPoint over period(MIDPOINT) is calculated as (highest value + lowest value) / 2.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/midpoint\"\nquerystring = {\"format\": \"json\", \"interval\": \"1min\", \"outputsize\": 30, \"time_period\": 9, \"symbol\": \"AAPL\", \"series_type\": \"close\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/midpoint\"\nquerystring = {\"format\": \"json\", \"interval\": \"1min\", \"outputsize\": 30, \"time_period\": 9, \"symbol\": \"AAPL\", \"series_type\": \"close\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "ADD",
            "url": "https://twelve-data1.p.rapidapi.com/add",
            "description": "Composite of values of two specified time series.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "series_type_2",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "series_type_1",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "open"
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/add\"\nquerystring = {\"interval\": \"1min\", \"outputsize\": 30, \"symbol\": \"AAPL\", \"series_type_2\": \"close\", \"series_type_1\": \"open\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/add\"\nquerystring = {\"interval\": \"1min\", \"outputsize\": 30, \"symbol\": \"AAPL\", \"series_type_2\": \"close\", \"series_type_1\": \"open\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "STOCH",
            "url": "https://twelve-data1.p.rapidapi.com/stoch",
            "description": "Stochastic Oscillator(STOCH) is used to decide if the price trend is strong.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "slow_k_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 1
                },
                {
                    "name": "slow_kma_type",
                    "type": "STRING",
                    "description": "Supports: `SMA`, `EMA`, `WMA`, `DEMA`, `TEMA`, `TRIMA`, `KAMA`, `MAMA`, `T3MA`",
                    "default": "SMA"
                },
                {
                    "name": "slow_dma_type",
                    "type": "STRING",
                    "description": "Supports: `SMA`, `EMA`, `WMA`, `DEMA`, `TEMA`, `TRIMA`, `KAMA`, `MAMA`, `T3MA`",
                    "default": "SMA"
                },
                {
                    "name": "fast_k_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 14
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "slow_d_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 3
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/stoch\"\nquerystring = {\"slow_k_period\": 1, \"symbol\": \"AAPL\", \"interval\": \"1min\", \"slow_kma_type\": \"SMA\", \"slow_dma_type\": \"SMA\", \"fast_k_period\": 14, \"format\": \"json\", \"slow_d_period\": 3, \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/stoch\"\nquerystring = {\"slow_k_period\": 1, \"symbol\": \"AAPL\", \"interval\": \"1min\", \"slow_kma_type\": \"SMA\", \"slow_dma_type\": \"SMA\", \"fast_k_period\": 14, \"format\": \"json\", \"slow_d_period\": 3, \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "HT_DCPHASE",
            "url": "https://twelve-data1.p.rapidapi.com/ht_dcphase",
            "description": "Hilbert Transform Dominant Cycle Phase(HT_DCPHASE) is part of Hilbert Transforms concepts. You can read more about it in the Rocket Science for Traders book by John F. Ehlers.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ht_dcphase\"\nquerystring = {\"series_type\": \"close\", \"format\": \"json\", \"symbol\": \"AAPL\", \"outputsize\": 30, \"interval\": \"1min\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ht_dcphase\"\nquerystring = {\"series_type\": \"close\", \"format\": \"json\", \"symbol\": \"AAPL\", \"outputsize\": 30, \"interval\": \"1min\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Exchanges",
            "url": "https://twelve-data1.p.rapidapi.com/exchanges",
            "description": "This API call return array of stock, ETF or index exchanges available at Twelve Data API. This list is daily updated.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filter by exchange name",
                    "default": ""
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "Value can be `stock`, `etf` or `index`\nDefault `stock`",
                    "default": ""
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "code",
                    "type": "STRING",
                    "description": "Filter by exchange mic code",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Filter by country name or alpha code",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/exchanges\"\nquerystring = {\"name\": \"\", \"type\": \"\", \"format\": \"json\", \"code\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/exchanges\"\nquerystring = {\"name\": \"\", \"type\": \"\", \"format\": \"json\", \"code\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "SQRT",
            "url": "https://twelve-data1.p.rapidapi.com/sqrt",
            "description": "Square Root(SQRT) transforms input data with square root.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/sqrt\"\nquerystring = {\"interval\": \"1min\", \"outputsize\": 30, \"series_type\": \"close\", \"format\": \"json\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/sqrt\"\nquerystring = {\"interval\": \"1min\", \"outputsize\": 30, \"series_type\": \"close\", \"format\": \"json\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "TRIMA",
            "url": "https://twelve-data1.p.rapidapi.com/trima",
            "description": "Triangular Moving Average(TRIMA) smooths out price fluctuations, but places more weight on the prices in middle of the time period.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/trima\"\nquerystring = {\"format\": \"json\", \"outputsize\": 30, \"symbol\": \"AAPL\", \"series_type\": \"close\", \"time_period\": 9, \"interval\": \"1min\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/trima\"\nquerystring = {\"format\": \"json\", \"outputsize\": 30, \"symbol\": \"AAPL\", \"series_type\": \"close\", \"time_period\": 9, \"interval\": \"1min\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "TSF",
            "url": "https://twelve-data1.p.rapidapi.com/tsf",
            "description": "Time Series Forecast(TSF) calculates trend based on the last points of multiple regression trendlines.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/tsf\"\nquerystring = {\"format\": \"json\", \"series_type\": \"close\", \"time_period\": 9, \"symbol\": \"AAPL\", \"interval\": \"1min\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/tsf\"\nquerystring = {\"format\": \"json\", \"series_type\": \"close\", \"time_period\": 9, \"symbol\": \"AAPL\", \"interval\": \"1min\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "ADXR",
            "url": "https://twelve-data1.p.rapidapi.com/adxr",
            "description": "Average Directional Movement Index Rating(ADXR) is a smoothed version of the ADX indicator. ADXR quantifies momentum change in the ADX.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 14
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/adxr\"\nquerystring = {\"format\": \"json\", \"outputsize\": 30, \"time_period\": 14, \"interval\": \"1min\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/adxr\"\nquerystring = {\"format\": \"json\", \"outputsize\": 30, \"time_period\": 14, \"interval\": \"1min\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "HT_DCPERIOD",
            "url": "https://twelve-data1.p.rapidapi.com/ht_dcperiod",
            "description": "Hilbert Transform Dominant Cycle Period(HT_DCPERIOD) is part of Hilbert Transforms concepts. You can read more about it in the Rocket Science for Traders book by John F. Ehlers.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ht_dcperiod\"\nquerystring = {\"format\": \"json\", \"series_type\": \"close\", \"outputsize\": 30, \"symbol\": \"AAPL\", \"interval\": \"1min\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ht_dcperiod\"\nquerystring = {\"format\": \"json\", \"series_type\": \"close\", \"outputsize\": 30, \"symbol\": \"AAPL\", \"interval\": \"1min\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "OBV",
            "url": "https://twelve-data1.p.rapidapi.com/obv",
            "description": "On Balance Volume(OBV) is a momentum indicator, which uses volume flow to forecast upcoming price changes.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/obv\"\nquerystring = {\"symbol\": \"AAPL\", \"format\": \"json\", \"interval\": \"1min\", \"outputsize\": 30, \"series_type\": \"close\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/obv\"\nquerystring = {\"symbol\": \"AAPL\", \"format\": \"json\", \"interval\": \"1min\", \"outputsize\": 30, \"series_type\": \"close\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "SUM",
            "url": "https://twelve-data1.p.rapidapi.com/sum",
            "description": "Summation of values of two specified time series.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/sum\"\nquerystring = {\"time_period\": 9, \"format\": \"json\", \"series_type\": \"close\", \"interval\": \"1min\", \"outputsize\": 30, \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/sum\"\nquerystring = {\"time_period\": 9, \"format\": \"json\", \"series_type\": \"close\", \"interval\": \"1min\", \"outputsize\": 30, \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "ICHIMOKU",
            "url": "https://twelve-data1.p.rapidapi.com/ichimoku",
            "description": "Ichimoku Kink\u014d Hy\u014d(ICHIMOKU) is a group of technical indicators that shows trend direction, momentum, and support & resistance levels. Overall it tends to improve the accuracy of forecasts.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "base_line_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 26
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "leading_span_b_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 52
                },
                {
                    "name": "lagging_span_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 26
                },
                {
                    "name": "include_ahead_span_period",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": true
                },
                {
                    "name": "conversion_line_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ichimoku\"\nquerystring = {\"base_line_period\": 26, \"symbol\": \"AAPL\", \"format\": \"json\", \"leading_span_b_period\": 52, \"lagging_span_period\": 26, \"include_ahead_span_period\": true, \"conversion_line_period\": 9, \"interval\": \"1min\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ichimoku\"\nquerystring = {\"base_line_period\": 26, \"symbol\": \"AAPL\", \"format\": \"json\", \"leading_span_b_period\": 52, \"lagging_span_period\": 26, \"include_ahead_span_period\": true, \"conversion_line_period\": 9, \"interval\": \"1min\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "AD",
            "url": "https://twelve-data1.p.rapidapi.com/ad",
            "description": "Chaikin A/D Line(AD) calculates the Advance/Decline of an asset. This indicator belongs to the group of Volume Indicators.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ad\"\nquerystring = {\"interval\": \"1min\", \"outputsize\": 30, \"format\": \"json\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ad\"\nquerystring = {\"interval\": \"1min\", \"outputsize\": 30, \"format\": \"json\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "MINUS_DI",
            "url": "https://twelve-data1.p.rapidapi.com/minus_di",
            "description": "Minus Directional Indicator(MINUS_DI) is a component of the Average Directional Index(ADX), and it measures the existence of downtrend.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/minus_di\"\nquerystring = {\"outputsize\": 30, \"symbol\": \"AAPL\", \"time_period\": 9, \"interval\": \"1min\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/minus_di\"\nquerystring = {\"outputsize\": 30, \"symbol\": \"AAPL\", \"time_period\": 9, \"interval\": \"1min\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "MCGINLEY_DYNAMIC",
            "url": "https://twelve-data1.p.rapidapi.com/mcginley_dynamic",
            "description": "McGinley Dynamic(MCGINLEY_DYNAMIC) keeps all the benefits from the moving averages but adds an adjustment to market speed.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 14
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mcginley_dynamic\"\nquerystring = {\"outputsize\": 30, \"format\": \"json\", \"symbol\": \"AAPL\", \"interval\": \"1min\", \"time_period\": 14}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mcginley_dynamic\"\nquerystring = {\"outputsize\": 30, \"format\": \"json\", \"symbol\": \"AAPL\", \"interval\": \"1min\", \"time_period\": 14}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "DEMA",
            "url": "https://twelve-data1.p.rapidapi.com/dema",
            "description": "Double Exponential Moving Average(DEMA) is used to eliminate lag. It does this by taking two Exponential Moving Averages(EMA).",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/dema\"\nquerystring = {\"interval\": \"1min\", \"outputsize\": 30, \"time_period\": 9, \"series_type\": \"close\", \"symbol\": \"AAPL\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/dema\"\nquerystring = {\"interval\": \"1min\", \"outputsize\": 30, \"time_period\": 9, \"series_type\": \"close\", \"symbol\": \"AAPL\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "AVG",
            "url": "https://twelve-data1.p.rapidapi.com/avg",
            "description": "Average(AVG) calculates the average value of series in a given time period. Widely used to calculate the 9-day average volume.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`, `volume`",
                    "default": "close"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/avg\"\nquerystring = {\"outputsize\": 30, \"time_period\": 9, \"format\": \"json\", \"series_type\": \"close\", \"interval\": \"1min\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/avg\"\nquerystring = {\"outputsize\": 30, \"time_period\": 9, \"format\": \"json\", \"series_type\": \"close\", \"interval\": \"1min\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "KST",
            "url": "https://twelve-data1.p.rapidapi.com/kst",
            "description": "Know Sure Thing(KST) calculates price momentum for four distinct price cycles(ROC).",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "sma_period_3",
                    "type": "NUMBER",
                    "description": "",
                    "default": 10
                },
                {
                    "name": "roc_period_2",
                    "type": "NUMBER",
                    "description": "",
                    "default": 15
                },
                {
                    "name": "sma_period_4",
                    "type": "NUMBER",
                    "description": "",
                    "default": 15
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "sma_period_1",
                    "type": "NUMBER",
                    "description": "",
                    "default": 10
                },
                {
                    "name": "roc_period_3",
                    "type": "NUMBER",
                    "description": "",
                    "default": 20
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "roc_period_4",
                    "type": "NUMBER",
                    "description": "",
                    "default": 30
                },
                {
                    "name": "roc_period_1",
                    "type": "NUMBER",
                    "description": "",
                    "default": 10
                },
                {
                    "name": "sma_period_2",
                    "type": "NUMBER",
                    "description": "",
                    "default": 10
                },
                {
                    "name": "signal_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/kst\"\nquerystring = {\"sma_period_3\": 10, \"roc_period_2\": 15, \"interval\": \"1min\", \"sma_period_4\": 15, \"format\": \"json\", \"sma_period_1\": 10, \"roc_period_3\": 20, \"outputsize\": 30, \"roc_period_4\": 30, \"symbol\": \"AAPL\", \"roc_period_1\": 10, \"sma_period_2\": 10, \"signal_period\": 9}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/kst\"\nquerystring = {\"sma_period_3\": 10, \"roc_period_2\": 15, \"interval\": \"1min\", \"sma_period_4\": 15, \"format\": \"json\", \"sma_period_1\": 10, \"roc_period_3\": 20, \"outputsize\": 30, \"roc_period_4\": 30, \"symbol\": \"AAPL\", \"roc_period_1\": 10, \"sma_period_2\": 10, \"signal_period\": 9}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "AROONOSC",
            "url": "https://twelve-data1.p.rapidapi.com/aroonosc",
            "description": "Aroon Oscillator(AROONOSC) uses classic Aroon(Aroon Up and Aroon down) to measure the strength of persisting trends and whether they will continue.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 14
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/aroonosc\"\nquerystring = {\"format\": \"json\", \"interval\": \"1min\", \"outputsize\": 30, \"symbol\": \"AAPL\", \"time_period\": 14}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/aroonosc\"\nquerystring = {\"format\": \"json\", \"interval\": \"1min\", \"outputsize\": 30, \"symbol\": \"AAPL\", \"time_period\": 14}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "CORREL",
            "url": "https://twelve-data1.p.rapidapi.com/correl",
            "description": "Measures linear correlation between two time series. Takes values in the range from -1 to 1, where -1 is total negative correlation, 0 is no correlation, and 1 is total positive correlation. ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "series_type_2",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "series_type_1",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "open"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/correl\"\nquerystring = {\"series_type_2\": \"close\", \"symbol\": \"AAPL\", \"outputsize\": 30, \"interval\": \"1min\", \"time_period\": 9, \"format\": \"json\", \"series_type_1\": \"open\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/correl\"\nquerystring = {\"series_type_2\": \"close\", \"symbol\": \"AAPL\", \"outputsize\": 30, \"interval\": \"1min\", \"time_period\": 9, \"format\": \"json\", \"series_type_1\": \"open\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "HT_SINE",
            "url": "https://twelve-data1.p.rapidapi.com/ht_sine",
            "description": "Hilbert Transform SineWave(HT_SINE) is part of Hilbert Transforms concepts. You can read more about it in the Rocket Science for Traders book by John F. Ehlers.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ht_sine\"\nquerystring = {\"interval\": \"1min\", \"series_type\": \"close\", \"symbol\": \"AAPL\", \"format\": \"json\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ht_sine\"\nquerystring = {\"interval\": \"1min\", \"series_type\": \"close\", \"symbol\": \"AAPL\", \"format\": \"json\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "BBANDS",
            "url": "https://twelve-data1.p.rapidapi.com/bbands",
            "description": "Bollinger Bands\u00ae(BBANDS) are volatility bands located above and below a moving average. The volatility size parameter depends on standard deviation.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "sd",
                    "type": "NUMBER",
                    "description": "",
                    "default": 2
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "ma_type",
                    "type": "STRING",
                    "description": "Supports: `SMA`, `EMA`, `WMA`, `DEMA`, `TEMA`, `TRIMA`, `KAMA`, `MAMA`, `T3MA`",
                    "default": "SMA"
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 20
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/bbands\"\nquerystring = {\"sd\": 2, \"series_type\": \"close\", \"symbol\": \"AAPL\", \"ma_type\": \"SMA\", \"interval\": \"1min\", \"time_period\": 20, \"outputsize\": 30, \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/bbands\"\nquerystring = {\"sd\": 2, \"series_type\": \"close\", \"symbol\": \"AAPL\", \"ma_type\": \"SMA\", \"interval\": \"1min\", \"time_period\": 20, \"outputsize\": 30, \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "NATR",
            "url": "https://twelve-data1.p.rapidapi.com/natr",
            "description": "Normalized Average True Range(NATR) is used to compare and analyze across different price levels due to its normalized quality, which might be more effective than the original ATR.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 14
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/natr\"\nquerystring = {\"outputsize\": 30, \"time_period\": 14, \"symbol\": \"AAPL\", \"interval\": \"1min\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/natr\"\nquerystring = {\"outputsize\": 30, \"time_period\": 14, \"symbol\": \"AAPL\", \"interval\": \"1min\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "AROON",
            "url": "https://twelve-data1.p.rapidapi.com/aroon",
            "description": "Aroon Indicator(AROON) is used to identify if the price is trending. It can also spot the beginning of a new trend and its strength.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 14
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/aroon\"\nquerystring = {\"format\": \"json\", \"symbol\": \"AAPL\", \"interval\": \"1min\", \"time_period\": 14, \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/aroon\"\nquerystring = {\"format\": \"json\", \"symbol\": \"AAPL\", \"interval\": \"1min\", \"time_period\": 14, \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "FLOOR",
            "url": "https://twelve-data1.p.rapidapi.com/floor",
            "description": "Vector FLOOR(FLOOR) transforms input data with the mathematical floor function.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/floor\"\nquerystring = {\"outputsize\": 30, \"symbol\": \"AAPL\", \"series_type\": \"close\", \"interval\": \"1min\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/floor\"\nquerystring = {\"outputsize\": 30, \"symbol\": \"AAPL\", \"series_type\": \"close\", \"interval\": \"1min\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "RSI",
            "url": "https://twelve-data1.p.rapidapi.com/rsi",
            "description": "Relative Strength Index(RSI) is a momentum indicator, which calculates the magnitude of a price change to assess the overbought and oversold conditions in the price of an asset.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 14
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/rsi\"\nquerystring = {\"format\": \"json\", \"time_period\": 14, \"interval\": \"1min\", \"series_type\": \"close\", \"outputsize\": 30, \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/rsi\"\nquerystring = {\"format\": \"json\", \"time_period\": 14, \"interval\": \"1min\", \"series_type\": \"close\", \"outputsize\": 30, \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "PERCENT_B",
            "url": "https://twelve-data1.p.rapidapi.com/percent_b",
            "description": "%B Indicator(PERCENT_B) measures the position of an asset price relative to upper and lower Bollinger Bands.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "ma_type",
                    "type": "STRING",
                    "description": "Supports: `SMA`, `EMA`, `WMA`, `DEMA`, `TEMA`, `TRIMA`, `KAMA`, `MAMA`, `T3MA`",
                    "default": "SMA"
                },
                {
                    "name": "sd",
                    "type": "NUMBER",
                    "description": "",
                    "default": 2
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 20
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/percent_b\"\nquerystring = {\"ma_type\": \"SMA\", \"sd\": 2, \"series_type\": \"close\", \"time_period\": 20, \"outputsize\": 30, \"format\": \"json\", \"interval\": \"1min\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/percent_b\"\nquerystring = {\"ma_type\": \"SMA\", \"sd\": 2, \"series_type\": \"close\", \"time_period\": 20, \"outputsize\": 30, \"format\": \"json\", \"interval\": \"1min\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "STOCHRSI",
            "url": "https://twelve-data1.p.rapidapi.com/stochrsi",
            "description": "Stochastic RSI(STOCHRSI) as an independent indicator takes advantage of the STOCH and RSI indicators. It is used to determine overbought and oversold levels, as well as current market trends for an asset.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "fast_dma_type",
                    "type": "STRING",
                    "description": "Supports: `SMA`, `EMA`, `WMA`, `DEMA`, `TEMA`, `TRIMA`, `KAMA`, `MAMA`, `T3MA`",
                    "default": "SMA"
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "fast_d_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 3
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "fast_k_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 3
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 14
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/stochrsi\"\nquerystring = {\"fast_dma_type\": \"SMA\", \"symbol\": \"AAPL\", \"interval\": \"1min\", \"series_type\": \"close\", \"fast_d_period\": 3, \"outputsize\": 30, \"fast_k_period\": 3, \"format\": \"json\", \"time_period\": 14}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/stochrsi\"\nquerystring = {\"fast_dma_type\": \"SMA\", \"symbol\": \"AAPL\", \"interval\": \"1min\", \"series_type\": \"close\", \"fast_d_period\": 3, \"outputsize\": 30, \"fast_k_period\": 3, \"format\": \"json\", \"time_period\": 14}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "MAX",
            "url": "https://twelve-data1.p.rapidapi.com/max",
            "description": "Highest value over period(MAX).",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/max\"\nquerystring = {\"time_period\": 9, \"symbol\": \"AAPL\", \"outputsize\": 30, \"interval\": \"1min\", \"series_type\": \"close\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/max\"\nquerystring = {\"time_period\": 9, \"symbol\": \"AAPL\", \"outputsize\": 30, \"interval\": \"1min\", \"series_type\": \"close\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "MINUS_DM",
            "url": "https://twelve-data1.p.rapidapi.com/minus_dm",
            "description": "Minus Directional Movement(MINUS_DM) is calculated as Previous Low - Low.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/minus_dm\"\nquerystring = {\"time_period\": 9, \"symbol\": \"AAPL\", \"format\": \"json\", \"outputsize\": 30, \"interval\": \"1min\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/minus_dm\"\nquerystring = {\"time_period\": 9, \"symbol\": \"AAPL\", \"format\": \"json\", \"outputsize\": 30, \"interval\": \"1min\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "DIV",
            "url": "https://twelve-data1.p.rapidapi.com/div",
            "description": "Division of values of two specified time series.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "series_type_1",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "open"
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "series_type_2",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/div\"\nquerystring = {\"series_type_1\": \"open\", \"format\": \"json\", \"interval\": \"1min\", \"outputsize\": 30, \"series_type_2\": \"close\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/div\"\nquerystring = {\"series_type_1\": \"open\", \"format\": \"json\", \"interval\": \"1min\", \"outputsize\": 30, \"series_type_2\": \"close\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "ROC",
            "url": "https://twelve-data1.p.rapidapi.com/roc",
            "description": "Rate of change(ROC) calculates the rate of change between the current price and price n timeperiods ago. Formula: ((price / prevPrice) - 1) * 100.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/roc\"\nquerystring = {\"series_type\": \"close\", \"outputsize\": 30, \"interval\": \"1min\", \"symbol\": \"AAPL\", \"format\": \"json\", \"time_period\": 9}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/roc\"\nquerystring = {\"series_type\": \"close\", \"outputsize\": 30, \"interval\": \"1min\", \"symbol\": \"AAPL\", \"format\": \"json\", \"time_period\": 9}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "ROCP",
            "url": "https://twelve-data1.p.rapidapi.com/rocp",
            "description": "Rate of change percentage(ROCP) calculates the rate of change in % between the current price and price n timeperiods ago. Formula: (price - prevPrice) / prevPrice.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/rocp\"\nquerystring = {\"interval\": \"1min\", \"outputsize\": 30, \"symbol\": \"AAPL\", \"time_period\": 9, \"format\": \"json\", \"series_type\": \"close\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/rocp\"\nquerystring = {\"interval\": \"1min\", \"outputsize\": 30, \"symbol\": \"AAPL\", \"time_period\": 9, \"format\": \"json\", \"series_type\": \"close\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "BOP",
            "url": "https://twelve-data1.p.rapidapi.com/bop",
            "description": "Balance of Power(BOP) measures the relative strength between buyers and sellers by assessing the ability of move price to an extreme level.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/bop\"\nquerystring = {\"symbol\": \"AAPL\", \"interval\": \"1min\", \"format\": \"json\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/bop\"\nquerystring = {\"symbol\": \"AAPL\", \"interval\": \"1min\", \"format\": \"json\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "MFI",
            "url": "https://twelve-data1.p.rapidapi.com/mfi",
            "description": "Money Flow Index(MFI) is used to identify overbought and oversold levels in an asset. In some cases, it can be used to detect divergences, which might be a sign of upcoming trend changes.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 14
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mfi\"\nquerystring = {\"interval\": \"1min\", \"time_period\": 14, \"format\": \"json\", \"outputsize\": 30, \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mfi\"\nquerystring = {\"interval\": \"1min\", \"time_period\": 14, \"format\": \"json\", \"outputsize\": 30, \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "MAMA",
            "url": "https://twelve-data1.p.rapidapi.com/mama",
            "description": "MESA Adaptive Moving Average(MAMA) adapts to price fluctuations based on the rate of change of the Hilbert Transform Discriminator. More about MAMA can be read [here](http://www.mesasoftware.com/papers/MAMA.pdf).",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "slow_limit",
                    "type": "NUMBER",
                    "description": "",
                    "default": 0.05
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "fast_limit",
                    "type": "NUMBER",
                    "description": "",
                    "default": 0.5
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mama\"\nquerystring = {\"format\": \"json\", \"slow_limit\": 0.05, \"series_type\": \"close\", \"interval\": \"1min\", \"fast_limit\": 0.5, \"symbol\": \"AAPL\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mama\"\nquerystring = {\"format\": \"json\", \"slow_limit\": 0.05, \"series_type\": \"close\", \"interval\": \"1min\", \"fast_limit\": 0.5, \"symbol\": \"AAPL\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "BETA",
            "url": "https://twelve-data1.p.rapidapi.com/beta",
            "description": "Statistic Beta function.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "series_type_2",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "series_type_1",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "open"
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/beta\"\nquerystring = {\"format\": \"json\", \"series_type_2\": \"close\", \"series_type_1\": \"open\", \"interval\": \"1min\", \"symbol\": \"AAPL\", \"time_period\": 9, \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/beta\"\nquerystring = {\"format\": \"json\", \"series_type_2\": \"close\", \"series_type_1\": \"open\", \"interval\": \"1min\", \"symbol\": \"AAPL\", \"time_period\": 9, \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "ATR",
            "url": "https://twelve-data1.p.rapidapi.com/atr",
            "description": "Average True Range(ATR) is used to measure market volatility by decomposing all asset prices over a specified time period.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 14
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/atr\"\nquerystring = {\"interval\": \"1min\", \"time_period\": 14, \"symbol\": \"AAPL\", \"outputsize\": 30, \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/atr\"\nquerystring = {\"interval\": \"1min\", \"time_period\": 14, \"symbol\": \"AAPL\", \"outputsize\": 30, \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "HEIKINASHICANDLES",
            "url": "https://twelve-data1.p.rapidapi.com/heikinashicandles",
            "description": "Heikin-Ashi Candles(HEIKINASHICANDLES) translated from Japanese means \"average bar\". It can be used to detect market trends and predict future price fluctuations.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/heikinashicandles\"\nquerystring = {\"interval\": \"1min\", \"format\": \"json\", \"outputsize\": 30, \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/heikinashicandles\"\nquerystring = {\"interval\": \"1min\", \"format\": \"json\", \"outputsize\": 30, \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "CEIL",
            "url": "https://twelve-data1.p.rapidapi.com/ceil",
            "description": "Vector CEIL(CEIL) transforms input data with the mathematical ceil function.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ceil\"\nquerystring = {\"format\": \"json\", \"series_type\": \"close\", \"interval\": \"1min\", \"outputsize\": 30, \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ceil\"\nquerystring = {\"format\": \"json\", \"series_type\": \"close\", \"interval\": \"1min\", \"outputsize\": 30, \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "MULT",
            "url": "https://twelve-data1.p.rapidapi.com/mult",
            "description": "Multiplication of values of two specified time series.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "series_type_2",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "series_type_1",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "open"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mult\"\nquerystring = {\"series_type_2\": \"close\", \"format\": \"json\", \"series_type_1\": \"open\", \"symbol\": \"AAPL\", \"interval\": \"1min\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mult\"\nquerystring = {\"series_type_2\": \"close\", \"format\": \"json\", \"series_type_1\": \"open\", \"symbol\": \"AAPL\", \"interval\": \"1min\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "MIDPRICE",
            "url": "https://twelve-data1.p.rapidapi.com/midprice",
            "description": "Midpoint Price over period(MIDPRICE) is calculated as (highest high + lowest low) / 2.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/midprice\"\nquerystring = {\"outputsize\": 30, \"time_period\": 9, \"format\": \"json\", \"interval\": \"1min\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/midprice\"\nquerystring = {\"outputsize\": 30, \"time_period\": 9, \"format\": \"json\", \"interval\": \"1min\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "PLUS_DI",
            "url": "https://twelve-data1.p.rapidapi.com/plus_di",
            "description": "Plus Directional Indicator(PLUS_DI) is a component of the Average Directional Index(ADX), and it measures the existence of uptrend.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/plus_di\"\nquerystring = {\"interval\": \"1min\", \"time_period\": 9, \"outputsize\": 30, \"symbol\": \"AAPL\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/plus_di\"\nquerystring = {\"interval\": \"1min\", \"time_period\": 9, \"outputsize\": 30, \"symbol\": \"AAPL\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "SUPERTREND",
            "url": "https://twelve-data1.p.rapidapi.com/supertrend",
            "description": "SuperTrend Indicator(SUPERTREND) is mostly used on intraday timeframes to detect the price upward or downward direction in the trending market.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 10
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "multiplier",
                    "type": "NUMBER",
                    "description": "",
                    "default": 3
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/supertrend\"\nquerystring = {\"symbol\": \"AAPL\", \"period\": 10, \"format\": \"json\", \"multiplier\": 3, \"interval\": \"1min\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/supertrend\"\nquerystring = {\"symbol\": \"AAPL\", \"period\": 10, \"format\": \"json\", \"multiplier\": 3, \"interval\": \"1min\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "MAXINDEX",
            "url": "https://twelve-data1.p.rapidapi.com/maxindex",
            "description": "Index of highest value over period(MAXINDEX).",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/maxindex\"\nquerystring = {\"time_period\": 9, \"series_type\": \"close\", \"interval\": \"1min\", \"outputsize\": 30, \"symbol\": \"AAPL\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/maxindex\"\nquerystring = {\"time_period\": 9, \"series_type\": \"close\", \"interval\": \"1min\", \"outputsize\": 30, \"symbol\": \"AAPL\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "MINMAX",
            "url": "https://twelve-data1.p.rapidapi.com/minmax",
            "description": "Lowest and highest values over period(MINMAX).",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/minmax\"\nquerystring = {\"series_type\": \"close\", \"outputsize\": 30, \"interval\": \"1min\", \"format\": \"json\", \"symbol\": \"AAPL\", \"time_period\": 9}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/minmax\"\nquerystring = {\"series_type\": \"close\", \"outputsize\": 30, \"interval\": \"1min\", \"format\": \"json\", \"symbol\": \"AAPL\", \"time_period\": 9}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "TEMA",
            "url": "https://twelve-data1.p.rapidapi.com/tema",
            "description": "Triple Exponential Moving Average(TEMA) smooths out price fluctuations, making it more trend detection and more transparent without the lag.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/tema\"\nquerystring = {\"format\": \"json\", \"outputsize\": 30, \"interval\": \"1min\", \"time_period\": 9, \"symbol\": \"AAPL\", \"series_type\": \"close\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/tema\"\nquerystring = {\"format\": \"json\", \"outputsize\": 30, \"interval\": \"1min\", \"time_period\": 9, \"symbol\": \"AAPL\", \"series_type\": \"close\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "SAR",
            "url": "https://twelve-data1.p.rapidapi.com/sar",
            "description": "Parabolic SAR(SAR) is used to identify and spot upcoming asset momentum.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "maximum",
                    "type": "NUMBER",
                    "description": "",
                    "default": 0.2
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "acceleration",
                    "type": "NUMBER",
                    "description": "",
                    "default": 0.02
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/sar\"\nquerystring = {\"symbol\": \"AAPL\", \"maximum\": 0.2, \"outputsize\": 30, \"format\": \"json\", \"acceleration\": 0.02, \"interval\": \"1min\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/sar\"\nquerystring = {\"symbol\": \"AAPL\", \"maximum\": 0.2, \"outputsize\": 30, \"format\": \"json\", \"acceleration\": 0.02, \"interval\": \"1min\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "T3MA",
            "url": "https://twelve-data1.p.rapidapi.com/t3ma",
            "description": "Triple Exponential Moving Average(T3MA) makes better smoothing of moving average than the classical TEMA indicator by extending the lookback period and applying other enhanced parameters.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "v_factor",
                    "type": "NUMBER",
                    "description": "",
                    "default": 0.7
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "time_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 9
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/t3ma\"\nquerystring = {\"symbol\": \"AAPL\", \"format\": \"json\", \"v_factor\": 0.7, \"series_type\": \"close\", \"interval\": \"1min\", \"outputsize\": 30, \"time_period\": 9}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/t3ma\"\nquerystring = {\"symbol\": \"AAPL\", \"format\": \"json\", \"v_factor\": 0.7, \"series_type\": \"close\", \"interval\": \"1min\", \"outputsize\": 30, \"time_period\": 9}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Crypto Exchanges",
            "url": "https://twelve-data1.p.rapidapi.com/cryptocurrency_exchanges",
            "description": "This API call return array of cryptocurrency exchanges available at Twelve Data API. This list is daily updated.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/cryptocurrency_exchanges\"\nquerystring = {\"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/cryptocurrency_exchanges\"\nquerystring = {\"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Time Series",
            "url": "https://twelve-data1.p.rapidapi.com/time_series",
            "description": "This API call returns meta and time series for equities. Meta object consists of general information about the requested symbol. Time series is the array of objects ordered by time descending with Open, High, Low, Close prices + Volume.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AMZN"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Supports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1day"
                }
            ],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30`",
                    "default": 30
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/time_series\"\nquerystring = {\"outputsize\": 30, \"symbol\": \"AMZN\", \"interval\": \"1day\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/time_series\"\nquerystring = {\"outputsize\": 30, \"symbol\": \"AMZN\", \"interval\": \"1day\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "meta": {
                    "symbol": "AMZN",
                    "interval": "1day",
                    "currency": "USD",
                    "exchange_timezone": "America/New_York",
                    "exchange": "NASDAQ",
                    "mic_code": "XNGS",
                    "type": "Common Stock"
                },
                "values": [
                    {
                        "datetime": "2023-06-16",
                        "open": "127.72000",
                        "high": "127.87000",
                        "low": "125.43000",
                        "close": "126.34000",
                        "volume": "33729687"
                    },
                    {
                        "datetime": "2023-06-15",
                        "open": "125.21000",
                        "high": "127.69000",
                        "low": "124.32000",
                        "close": "127.11000",
                        "volume": "60411500"
                    },
                    {
                        "datetime": "2023-06-14",
                        "open": "126.70000",
                        "high": "126.95000",
                        "low": "124.12000",
                        "close": "126.42000",
                        "volume": "52422500"
                    },
                    {
                        "datetime": "2023-06-13",
                        "open": "128.12000",
                        "high": "128.41000",
                        "low": "125.18000",
                        "close": "126.66000",
                        "volume": "50564800"
                    },
                    {
                        "datetime": "2023-06-12",
                        "open": "124.02000",
                        "high": "126.78000",
                        "low": "123.53000",
                        "close": "126.57000",
                        "volume": "51338000"
                    },
                    {
                        "datetime": "2023-06-09",
                        "open": "124.08000",
                        "high": "125.80000",
                        "low": "123.19000",
                        "close": "123.43000",
                        "volume": "51330000"
                    },
                    {
                        "datetime": "2023-06-08",
                        "open": "123.01000",
                        "high": "125.63000",
                        "low": "122.26000",
                        "close": "124.25000",
                        "volume": "62159300"
                    },
                    {
                        "datetime": "2023-06-07",
                        "open": "127.01000",
                        "high": "127.37000",
                        "low": "120.63000",
                        "close": "121.23000",
                        "volume": "95663300"
                    },
                    {
                        "datetime": "2023-06-06",
                        "open": "125.07000",
                        "high": "127.40000",
                        "low": "125.00000",
                        "close": "126.61000",
                        "volume": "45695200"
                    },
                    {
                        "datetime": "2023-06-05",
                        "open": "123.36000",
                        "high": "125.80000",
                        "low": "123.03000",
                        "close": "125.30000",
                        "volume": "47950100"
                    },
                    {
                        "datetime": "2023-06-02",
                        "open": "124.92000",
                        "high": "126.39000",
                        "low": "124.02000",
                        "close": "124.25000",
                        "volume": "61215000"
                    },
                    {
                        "datetime": "2023-06-01",
                        "open": "120.69000",
                        "high": "123.49000",
                        "low": "119.93000",
                        "close": "122.77000",
                        "volume": "54375100"
                    },
                    {
                        "datetime": "2023-05-31",
                        "open": "121.45000",
                        "high": "122.04000",
                        "low": "119.17000",
                        "close": "120.58000",
                        "volume": "72800800"
                    },
                    {
                        "datetime": "2023-05-30",
                        "open": "122.37000",
                        "high": "122.92000",
                        "low": "119.86000",
                        "close": "121.66000",
                        "volume": "64314800"
                    },
                    {
                        "datetime": "2023-05-26",
                        "open": "116.04000",
                        "high": "121.50000",
                        "low": "116.02000",
                        "close": "120.11000",
                        "volume": "96779900"
                    },
                    {
                        "datetime": "2023-05-25",
                        "open": "116.63000",
                        "high": "116.87000",
                        "low": "114.31000",
                        "close": "115.00000",
                        "volume": "66496700"
                    },
                    {
                        "datetime": "2023-05-24",
                        "open": "115.35000",
                        "high": "117.34000",
                        "low": "115.02000",
                        "close": "116.75000",
                        "volume": "63487900"
                    },
                    {
                        "datetime": "2023-05-23",
                        "open": "114.27000",
                        "high": "117.14000",
                        "low": "113.78000",
                        "close": "114.99000",
                        "volume": "67576300"
                    },
                    {
                        "datetime": "2023-05-22",
                        "open": "116.77000",
                        "high": "116.77000",
                        "low": "114.25000",
                        "close": "115.01000",
                        "volume": "70741100"
                    },
                    {
                        "datetime": "2023-05-19",
                        "open": "118.16000",
                        "high": "118.31000",
                        "low": "115.70000",
                        "close": "116.25000",
                        "volume": "54990200"
                    },
                    {
                        "datetime": "2023-05-18",
                        "open": "116.69000",
                        "high": "118.60000",
                        "low": "116.34000",
                        "close": "118.15000",
                        "volume": "73174100"
                    },
                    {
                        "datetime": "2023-05-17",
                        "open": "114.89000",
                        "high": "115.83000",
                        "low": "114.22000",
                        "close": "115.50000",
                        "volume": "65655200"
                    },
                    {
                        "datetime": "2023-05-16",
                        "open": "111.05000",
                        "high": "114.79000",
                        "low": "111.05000",
                        "close": "113.40000",
                        "volume": "71472900"
                    },
                    {
                        "datetime": "2023-05-15",
                        "open": "111.15000",
                        "high": "112.29000",
                        "low": "109.25000",
                        "close": "111.20000",
                        "volume": "53011100"
                    },
                    {
                        "datetime": "2023-05-12",
                        "open": "112.16000",
                        "high": "112.64000",
                        "low": "109.32000",
                        "close": "110.26000",
                        "volume": "49810100"
                    },
                    {
                        "datetime": "2023-05-11",
                        "open": "111.03000",
                        "high": "113.28000",
                        "low": "110.49000",
                        "close": "112.18000",
                        "volume": "74924800"
                    },
                    {
                        "datetime": "2023-05-10",
                        "open": "108.10000",
                        "high": "110.67000",
                        "low": "108.05000",
                        "close": "110.19000",
                        "volume": "78627600"
                    },
                    {
                        "datetime": "2023-05-09",
                        "open": "105.48000",
                        "high": "106.79000",
                        "low": "105.16000",
                        "close": "106.62000",
                        "volume": "44089400"
                    },
                    {
                        "datetime": "2023-05-08",
                        "open": "105.04000",
                        "high": "106.10000",
                        "low": "104.70000",
                        "close": "105.83000",
                        "volume": "49430900"
                    },
                    {
                        "datetime": "2023-05-05",
                        "open": "104.27000",
                        "high": "105.76000",
                        "low": "103.55000",
                        "close": "105.66000",
                        "volume": "56912900"
                    }
                ],
                "status": "ok"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Real-Time Price",
            "url": "https://twelve-data1.p.rapidapi.com/price",
            "description": "This endpoint is a lightweight method that allows retrieving only the real-time price of the selected instrument.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AMZN"
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30`",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/price\"\nquerystring = {\"format\": \"json\", \"outputsize\": 30, \"symbol\": \"AMZN\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/price\"\nquerystring = {\"format\": \"json\", \"outputsize\": 30, \"symbol\": \"AMZN\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "price": "126.40000"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Quote",
            "url": "https://twelve-data1.p.rapidapi.com/quote",
            "description": "Quote endpoint is an efficient method to retrieve the latest quote of the selected instrument.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AMZN"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Supports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1day"
                }
            ],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30`",
                    "default": 30
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/quote\"\nquerystring = {\"symbol\": \"AMZN\", \"outputsize\": 30, \"format\": \"json\", \"interval\": \"1day\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/quote\"\nquerystring = {\"symbol\": \"AMZN\", \"outputsize\": 30, \"format\": \"json\", \"interval\": \"1day\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "symbol": "AMZN",
                "name": "Amazon.com Inc",
                "exchange": "NASDAQ",
                "mic_code": "XNGS",
                "currency": "USD",
                "datetime": "2023-06-16",
                "timestamp": 1686930739,
                "open": "127.72000",
                "high": "127.87000",
                "low": "125.43000",
                "close": "126.34000",
                "volume": "33729687",
                "previous_close": "127.11000",
                "change": "-0.77000",
                "percent_change": "-0.60578",
                "average_volume": "55126439",
                "is_market_open": true,
                "fifty_two_week": {
                    "low": "81.43000",
                    "high": "146.57001",
                    "low_change": "44.91000",
                    "high_change": "-20.23001",
                    "low_change_percent": "55.15166",
                    "high_change_percent": "-13.80229",
                    "range": "81.430000 - 146.570007"
                }
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "LN",
            "url": "https://twelve-data1.p.rapidapi.com/ln",
            "description": "Natural Logarithm to the base of constant e(LN) transforms all data points with natural logarithm.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                }
            ],
            "optional_parameters": [
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ln\"\nquerystring = {\"symbol\": \"AAPL\", \"interval\": \"1min\", \"outputsize\": 30, \"format\": \"json\", \"series_type\": \"close\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ln\"\nquerystring = {\"symbol\": \"AAPL\", \"interval\": \"1min\", \"outputsize\": 30, \"format\": \"json\", \"series_type\": \"close\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "meta": {
                    "symbol": "AAPL",
                    "interval": "1min",
                    "currency": "USD",
                    "exchange_timezone": "America/New_York",
                    "exchange": "NASDAQ",
                    "mic_code": "XNGS",
                    "type": "Common Stock",
                    "indicator": {
                        "name": "LN - Natural Logarithm to the base of constant e",
                        "series_type": "close"
                    }
                },
                "values": [
                    {
                        "datetime": "2023-06-16 11:50:00",
                        "ln": "5.22307"
                    },
                    {
                        "datetime": "2023-06-16 11:49:00",
                        "ln": "5.22284"
                    },
                    {
                        "datetime": "2023-06-16 11:48:00",
                        "ln": "5.22276"
                    },
                    {
                        "datetime": "2023-06-16 11:47:00",
                        "ln": "5.22333"
                    },
                    {
                        "datetime": "2023-06-16 11:46:00",
                        "ln": "5.22354"
                    },
                    {
                        "datetime": "2023-06-16 11:45:00",
                        "ln": "5.22432"
                    },
                    {
                        "datetime": "2023-06-16 11:44:00",
                        "ln": "5.22408"
                    },
                    {
                        "datetime": "2023-06-16 11:43:00",
                        "ln": "5.22381"
                    },
                    {
                        "datetime": "2023-06-16 11:42:00",
                        "ln": "5.22341"
                    },
                    {
                        "datetime": "2023-06-16 11:41:00",
                        "ln": "5.22341"
                    },
                    {
                        "datetime": "2023-06-16 11:40:00",
                        "ln": "5.22413"
                    },
                    {
                        "datetime": "2023-06-16 11:39:00",
                        "ln": "5.22316"
                    },
                    {
                        "datetime": "2023-06-16 11:38:00",
                        "ln": "5.22322"
                    },
                    {
                        "datetime": "2023-06-16 11:37:00",
                        "ln": "5.22279"
                    },
                    {
                        "datetime": "2023-06-16 11:36:00",
                        "ln": "5.22281"
                    },
                    {
                        "datetime": "2023-06-16 11:35:00",
                        "ln": "5.22262"
                    },
                    {
                        "datetime": "2023-06-16 11:34:00",
                        "ln": "5.22262"
                    },
                    {
                        "datetime": "2023-06-16 11:33:00",
                        "ln": "5.22282"
                    },
                    {
                        "datetime": "2023-06-16 11:32:00",
                        "ln": "5.22338"
                    },
                    {
                        "datetime": "2023-06-16 11:31:00",
                        "ln": "5.22289"
                    },
                    {
                        "datetime": "2023-06-16 11:30:00",
                        "ln": "5.22322"
                    },
                    {
                        "datetime": "2023-06-16 11:29:00",
                        "ln": "5.22295"
                    },
                    {
                        "datetime": "2023-06-16 11:28:00",
                        "ln": "5.22252"
                    },
                    {
                        "datetime": "2023-06-16 11:27:00",
                        "ln": "5.22273"
                    },
                    {
                        "datetime": "2023-06-16 11:26:00",
                        "ln": "5.22316"
                    },
                    {
                        "datetime": "2023-06-16 11:25:00",
                        "ln": "5.22359"
                    },
                    {
                        "datetime": "2023-06-16 11:24:00",
                        "ln": "5.22408"
                    },
                    {
                        "datetime": "2023-06-16 11:23:00",
                        "ln": "5.22327"
                    },
                    {
                        "datetime": "2023-06-16 11:22:00",
                        "ln": "5.22394"
                    },
                    {
                        "datetime": "2023-06-16 11:21:00",
                        "ln": "5.22510"
                    }
                ],
                "status": "ok"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "PPO",
            "url": "https://twelve-data1.p.rapidapi.com/ppo",
            "description": "Percentage Price Oscillator(PPO) shows the relationship between two Moving Averages(MA) as a percentage.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
                    "default": "1min"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
                    "default": "AAPL"
                }
            ],
            "optional_parameters": [
                {
                    "name": "ma_type",
                    "type": "STRING",
                    "description": "Supports: `SMA`, `EMA`, `WMA`, `DEMA`, `TEMA`, `TRIMA`, `KAMA`, `MAMA`, `T3MA`",
                    "default": "SMA"
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
                    "default": "json"
                },
                {
                    "name": "series_type",
                    "type": "STRING",
                    "description": "Supports: `open`, `high`, `low`, `close`",
                    "default": "close"
                },
                {
                    "name": "slow_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 26
                },
                {
                    "name": "fast_period",
                    "type": "NUMBER",
                    "description": "",
                    "default": 12
                },
                {
                    "name": "outputsize",
                    "type": "NUMBER",
                    "description": "Default `30` when no date parameters are set, otherwise set to maximum",
                    "default": 30
                }
            ],
            "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ppo\"\nquerystring = {\"interval\": \"1min\", \"ma_type\": \"SMA\", \"format\": \"json\", \"series_type\": \"close\", \"slow_period\": 26, \"symbol\": \"AAPL\", \"fast_period\": 12, \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ppo\"\nquerystring = {\"interval\": \"1min\", \"ma_type\": \"SMA\", \"format\": \"json\", \"series_type\": \"close\", \"slow_period\": 26, \"symbol\": \"AAPL\", \"fast_period\": 12, \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "meta": {
                    "symbol": "AAPL",
                    "interval": "1min",
                    "currency": "USD",
                    "exchange_timezone": "America/New_York",
                    "exchange": "NASDAQ",
                    "mic_code": "XNGS",
                    "type": "Common Stock",
                    "indicator": {
                        "name": "PPO - Percentage Price Oscillator",
                        "series_type": "close",
                        "fast_period": 12,
                        "slow_period": 26,
                        "ma_type": "SMA"
                    }
                },
                "values": [
                    {
                        "datetime": "2023-06-16 11:50:00",
                        "ppo": "0.02886"
                    },
                    {
                        "datetime": "2023-06-16 11:49:00",
                        "ppo": "0.02621"
                    },
                    {
                        "datetime": "2023-06-16 11:48:00",
                        "ppo": "0.02409"
                    },
                    {
                        "datetime": "2023-06-16 11:47:00",
                        "ppo": "0.01998"
                    },
                    {
                        "datetime": "2023-06-16 11:46:00",
                        "ppo": "0.00729"
                    },
                    {
                        "datetime": "2023-06-16 11:45:00",
                        "ppo": "-0.00698"
                    },
                    {
                        "datetime": "2023-06-16 11:44:00",
                        "ppo": "-0.02228"
                    },
                    {
                        "datetime": "2023-06-16 11:43:00",
                        "ppo": "-0.03495"
                    },
                    {
                        "datetime": "2023-06-16 11:42:00",
                        "ppo": "-0.05061"
                    },
                    {
                        "datetime": "2023-06-16 11:41:00",
                        "ppo": "-0.06181"
                    },
                    {
                        "datetime": "2023-06-16 11:40:00",
                        "ppo": "-0.07443"
                    },
                    {
                        "datetime": "2023-06-16 11:39:00",
                        "ppo": "-0.09525"
                    },
                    {
                        "datetime": "2023-06-16 11:38:00",
                        "ppo": "-0.10949"
                    },
                    {
                        "datetime": "2023-06-16 11:37:00",
                        "ppo": "-0.12101"
                    },
                    {
                        "datetime": "2023-06-16 11:36:00",
                        "ppo": "-0.12545"
                    },
                    {
                        "datetime": "2023-06-16 11:35:00",
                        "ppo": "-0.12473"
                    },
                    {
                        "datetime": "2023-06-16 11:34:00",
                        "ppo": "-0.13030"
                    },
                    {
                        "datetime": "2023-06-16 11:33:00",
                        "ppo": "-0.12994"
                    },
                    {
                        "datetime": "2023-06-16 11:32:00",
                        "ppo": "-0.11660"
                    },
                    {
                        "datetime": "2023-06-16 11:31:00",
                        "ppo": "-0.10173"
                    },
                    {
                        "datetime": "2023-06-16 11:30:00",
                        "ppo": "-0.08958"
                    },
                    {
                        "datetime": "2023-06-16 11:29:00",
                        "ppo": "-0.07194"
                    },
                    {
                        "datetime": "2023-06-16 11:28:00",
                        "ppo": "-0.05315"
                    },
                    {
                        "datetime": "2023-06-16 11:27:00",
                        "ppo": "-0.02976"
                    },
                    {
                        "datetime": "2023-06-16 11:26:00",
                        "ppo": "-0.01006"
                    },
                    {
                        "datetime": "2023-06-16 11:25:00",
                        "ppo": "0.01072"
                    },
                    {
                        "datetime": "2023-06-16 11:24:00",
                        "ppo": "0.02753"
                    },
                    {
                        "datetime": "2023-06-16 11:23:00",
                        "ppo": "0.04352"
                    },
                    {
                        "datetime": "2023-06-16 11:22:00",
                        "ppo": "0.05894"
                    },
                    {
                        "datetime": "2023-06-16 11:21:00",
                        "ppo": "0.06843"
                    }
                ],
                "status": "ok"
            },
            "statuscode": 200,
            "schema": {}
        }
    ],
    "standardized_name": "twelve_data"
}