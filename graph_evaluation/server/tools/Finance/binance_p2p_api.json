{
    "product_id": "api_75877044-223d-4e0a-9afe-b55366c2b0ce",
    "tool_description": "Binance P2P API.\nGet SELL and BUY ads according to your criterias. Use for profitable P2P trading.\n\n#BTC #ETH #USDT #BNB",
    "home_url": "https://rapidapi.com/zigzagway/api/binance-p2p-api/",
    "name": "Binance P2P API",
    "title": "Binance P2P API",
    "pricing": "PAID",
    "tool_name": "Binance P2P API",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 500,
        "avgSuccessRate": 100,
        "popularityScore": 8.1,
        "__typename": "Score"
    },
    "host": "binance-p2p-api.p.rapidapi.com",
    "api_list": [
        {
            "name": "Search Binance P2P Sell Ads",
            "url": "https://binance-p2p-api.p.rapidapi.com/binance/p2p/search/sell",
            "description": "This API will help you to get real-time sell ads from Binance P2P exchange for any supported crypto and fiat currency pair.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://binance-p2p-api.p.rapidapi.com/binance/p2p/search/sell\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"binance-p2p-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://binance-p2p-api.p.rapidapi.com/binance/p2p/search/sell\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"binance-p2p-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Search Binance P2P Buy Ads",
            "url": "https://binance-p2p-api.p.rapidapi.com/binance/p2p/search/buy",
            "description": "This API will help you to get real-time buy ads from Binance P2P exchange for any supported crypto and fiat currency pair.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://binance-p2p-api.p.rapidapi.com/binance/p2p/search/buy\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"binance-p2p-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://binance-p2p-api.p.rapidapi.com/binance/p2p/search/buy\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"binance-p2p-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Search Binance P2P Ads",
            "url": "https://binance-p2p-api.p.rapidapi.com/binance/p2p/search",
            "description": "This API will help you to get real-time buy and sell ads from Binance P2P exchange for any supported crypto and fiat currency pair.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://binance-p2p-api.p.rapidapi.com/binance/p2p/search\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"binance-p2p-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://binance-p2p-api.p.rapidapi.com/binance/p2p/search\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"binance-p2p-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        }
    ]
}