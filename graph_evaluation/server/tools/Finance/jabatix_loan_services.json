{
    "tool_name": "Jabatix Loan Services",
    "tool_description": "Jabatix is the state-of-the-art cloud banking platform for finance and risk incl. reporting with simple RESTful API design. Jabatix Loan Services allows you to create or update specific loan products.",
    "title": "Jabatix Loan Services",
    "pricing": "FREE",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 447,
        "avgSuccessRate": 0,
        "popularityScore": 0,
        "__typename": "Score"
    },
    "home_url": "https://rapidapi.com/Jabatix/api/jabatix-loan-services/",
    "host": "jabatix-loan-services.p.rapidapi.com",
    "api_list": [
        {
            "name": "Retrievalofriskratiosforloansviaid,companyandgaapatspecificpostingdate",
            "url": "https://jabatix-loan-services.p.rapidapi.com/risk-ratios",
            "description": "<p>\n      The output interface &#8222;GET loans/risk-ratios&#8220; provides the most important \n      risk ratios.\n    </p>\n    <p>\n      <br>\n      Detailed information can be found here: <a href=\"https://confluence.jabatix.net/x/fAlbAw\" target=_blank>GET \n      /loans/risk-ratios</a>\n    </p>",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "dealId",
                    "type": "STRING",
                    "description": "Unique deal id",
                    "default": "001-FK_LN-A-Consumer-Annuity"
                },
                {
                    "name": "postingDate",
                    "type": "STRING",
                    "description": "(Required) Posting date for which data is requested",
                    "default": "2019-03-31"
                },
                {
                    "name": "companyId",
                    "type": "NUMBER",
                    "description": "(Required) Unique company id",
                    "default": 1
                },
                {
                    "name": "gaap",
                    "type": "STRING",
                    "description": "Accounting guideline",
                    "default": "IFRS9"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jabatix-loan-services.p.rapidapi.com/risk-ratios\"\nquerystring = {\"dealId\": dealid, \"postingDate\": postingdate, \"companyId\": companyid, \"gaap\": gaap}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"jabatix-loan-services.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "ImportErrorLog": [
                    {
                        "errorLogTime": "1973-02-04",
                        "errorCode": 0,
                        "errorReason": "qu"
                    }
                ]
            },
            "headers": {},
            "schema": {
                "properties": {
                    "ImportErrorLog": {
                        "items": {
                            "properties": {
                                "errorCode": {
                                    "default": -96805732.4368007,
                                    "description": "",
                                    "type": "integer"
                                },
                                "errorFlag": {},
                                "errorLogTime": {
                                    "default": "1973-02-04",
                                    "description": "",
                                    "type": "string"
                                },
                                "errorReason": {
                                    "default": "qu",
                                    "description": "",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "Updateexistinggenericloans",
            "url": "https://jabatix-loan-services.p.rapidapi.com/generic-loans",
            "description": "<p>\n      The &quot;update existing generic loans&quot; offers you the possibility to change \n      or add new information to the currently available data in the system of \n      already existing generic loans of your company portfolio. It has a \n      common usage for updating new information about real payments in the <i>&#8220;PaymentEvents&#8221;</i>. \n      Additionally, there may be a need to correct an already existing \n      product, because eventually it was created with incorrect data.\n    </p>\n    <p>\n      The deal data are expected as for the &quot;POST&quot; operation. That means a \n      full object replacement is expected. Differences should only exist \n      within desired input changes.\n    </p>\n    <p>\n      As example, general changes of the contractual instalment are possible, \n      like a term extension or the adjustment of the initial amount. Just the \n      related property from the main data needs to be adjusted accordingly for \n      this purpose.\n    </p>",
            "method": "PUT",
            "required_parameters": [
                {
                    "name": "Content-Type",
                    "type": "STRING",
                    "description": "",
                    "default": "application/json"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jabatix-loan-services.p.rapidapi.com/generic-loans\"\nquerystring = {\"Content-Type\": content_type}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"jabatix-loan-services.p.rapidapi.com\"\n}\n\nresponse = requests.put(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "ImportErrorLog": [
                    {
                        "errorLogTime": "1973-02-04",
                        "errorCode": 0,
                        "errorReason": "qu"
                    }
                ]
            },
            "headers": {},
            "schema": {
                "properties": {
                    "ImportErrorLog": {
                        "items": {
                            "properties": {
                                "errorCode": {
                                    "default": -96805732.4368007,
                                    "description": "",
                                    "type": "integer"
                                },
                                "errorFlag": {},
                                "errorLogTime": {
                                    "default": "1973-02-04",
                                    "description": "",
                                    "type": "string"
                                },
                                "errorReason": {
                                    "default": "qu",
                                    "description": "",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "Updateexistingcustomerfinance",
            "url": "https://jabatix-loan-services.p.rapidapi.com/customer-finance",
            "description": "<p>\n      The &quot;update existing customer finance&quot; offers the possibility to change \n      or add new information to the currently available data in the system of \n      already existing customer financings of your company portfolio. It has a \n      common usage for updating new information about real payments in the <i>&#8220;PaymentEvents&#8221;</i>. \n      Additionally, there may be a need to correct an already existing product \n      because it was eventually created with incorrect data.\n    </p>\n    <p>\n      The deal data are expected as for the &quot;POST&quot; operation. That means a \n      full object replacement is expected. Differences should only exist \n      within desired input changes.\n    </p>\n    <p>\n      From a business point of view, it is possible to add various typical \n      changes that only occur during the term of a customer finance. That \n      means, on a later posting date than the creation day. One typical event \n      would be an early redemption, which can be uploaded in property <i>&#8220;IrregularRepaymentsUnexpected&#8221;</i>. \n      The same part of the interface can cover partial early repayments.\n    </p>\n    <p>\n      Of course, general changes of the contractual instalment are possible, \n      like a term extension or the adjustment of the initial amount. Just the \n      related property from the main data needs to be adjusted accordingly for \n      this purpose.\n    </p>\n    <br>",
            "method": "PUT",
            "required_parameters": [
                {
                    "name": "Content-Type",
                    "type": "STRING",
                    "description": "",
                    "default": "application/json"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jabatix-loan-services.p.rapidapi.com/customer-finance\"\nquerystring = {\"Content-Type\": content_type}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"jabatix-loan-services.p.rapidapi.com\"\n}\n\nresponse = requests.put(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "ImportErrorLog": [
                    {
                        "errorLogTime": "1973-02-04",
                        "errorCode": 0,
                        "errorReason": "qu"
                    }
                ]
            },
            "headers": {},
            "schema": {
                "properties": {
                    "ImportErrorLog": {
                        "items": {
                            "properties": {
                                "errorCode": {
                                    "default": -96805732.4368007,
                                    "description": "",
                                    "type": "integer"
                                },
                                "errorFlag": {},
                                "errorLogTime": {
                                    "default": "1973-02-04",
                                    "description": "",
                                    "type": "string"
                                },
                                "errorReason": {
                                    "default": "qu",
                                    "description": "",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "Retrievalofaccountingtransactionsandrelatedratiosforloansviaid,companyandgaapatspecificpostingdate",
            "url": "https://jabatix-loan-services.p.rapidapi.com/accounting-transaction-related-accounting-ratios",
            "description": "<p>\n      The output interface &quot;Accounting Transactions and related Accounting \n      Ratios&quot; provides for each individual deal for various accounting \n      transactions values for accounting ratios. These accounting ratios form \n      the basis for the generation of debit/credit entries.\n    </p>\n    <p>\n      An accounting transaction is defined by the combination of\n    </p>\n    <ul>\n      <li>\n        an accounting event type, such as payment or periodical valuation \n        requests and\n      </li>\n      <li>\n        an accounting event.\n      </li>\n    </ul>\n    <p>\n      <br>\n      Detailed information can be found here: <a href=\"https://confluence.jabatix.net/x/agdbAw\" target=_blank>GET \n      loans/accounting-transaction-related-accounting-ratios</a>\n    </p>",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "dealId",
                    "type": "STRING",
                    "description": "Unique deal id",
                    "default": "001-FK_LN-A-Consumer-Annuity"
                },
                {
                    "name": "companyId",
                    "type": "NUMBER",
                    "description": "(Required) Unique company id",
                    "default": 1
                },
                {
                    "name": "gaap",
                    "type": "STRING",
                    "description": "Accounting guideline",
                    "default": "IFRS9"
                },
                {
                    "name": "postingDate",
                    "type": "STRING",
                    "description": "(Required) Posting date for which data is requested",
                    "default": "2019-03-31"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jabatix-loan-services.p.rapidapi.com/accounting-transaction-related-accounting-ratios\"\nquerystring = {\"dealId\": dealid, \"companyId\": companyid, \"gaap\": gaap, \"postingDate\": postingdate}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"jabatix-loan-services.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "ImportErrorLog": [
                    {
                        "errorLogTime": "1973-02-04",
                        "errorCode": 0,
                        "errorReason": "qu"
                    }
                ]
            },
            "headers": {},
            "schema": {
                "properties": {
                    "ImportErrorLog": {
                        "items": {
                            "properties": {
                                "errorCode": {
                                    "default": -96805732.4368007,
                                    "description": "",
                                    "type": "integer"
                                },
                                "errorFlag": {},
                                "errorLogTime": {
                                    "default": "1973-02-04",
                                    "description": "",
                                    "type": "string"
                                },
                                "errorReason": {
                                    "default": "qu",
                                    "description": "",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "Retrievalofdebitcreditentriesforloansviaid,companyandgaapatspecificpostingdate",
            "url": "https://jabatix-loan-services.p.rapidapi.com/debit-credit-entries",
            "description": "<p>\n      The output interface &#8222;GET Debit/Credit Entries&#8220; provides for each \n      individual deal and related accounting transaction the appropriate set \n      of entries. For each set of entry debit and credit bookings are \n      provided, taking a standard chart of accounts into account.\n    </p>\n    <p>\n      Set of entries provided cover the full life cycle of a loan. Different \n      accounting event types such as contractual maturity, payment, accrual \n      and fair valuing ensure timely generation.&#160; For each accounting event \n      type relevant accounting events are considered, appropriate set of \n      entries identified and related debit/credit entries on a standard chart \n      of accounts generated.\n    </p>\n    <p>\n      <br>\n      Detailed information can be found here: <a href=\"https://confluence.jabatix.net/x/XgdbAw\" target=_blank>GET \n      /loans/debit-credit-entries</a>\n    </p>",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "gaap",
                    "type": "STRING",
                    "description": "Accounting guideline",
                    "default": "IFRS9"
                },
                {
                    "name": "dealId",
                    "type": "STRING",
                    "description": "Unique deal id",
                    "default": "001-FK_LN-A-Consumer-Annuity"
                },
                {
                    "name": "postingDate",
                    "type": "STRING",
                    "description": "(Required) Posting date for which data is requested",
                    "default": "2019-03-31"
                },
                {
                    "name": "companyId",
                    "type": "NUMBER",
                    "description": "(Required) Unique company id",
                    "default": 1
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jabatix-loan-services.p.rapidapi.com/debit-credit-entries\"\nquerystring = {\"gaap\": gaap, \"dealId\": dealid, \"postingDate\": postingdate, \"companyId\": companyid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"jabatix-loan-services.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "ImportErrorLog": [
                    {
                        "errorLogTime": "1973-02-04",
                        "errorCode": 0,
                        "errorReason": "qu"
                    }
                ]
            },
            "headers": {},
            "schema": {
                "properties": {
                    "ImportErrorLog": {
                        "items": {
                            "properties": {
                                "errorCode": {
                                    "default": -96805732.4368007,
                                    "description": "",
                                    "type": "integer"
                                },
                                "errorFlag": {},
                                "errorLogTime": {
                                    "default": "1973-02-04",
                                    "description": "",
                                    "type": "string"
                                },
                                "errorReason": {
                                    "default": "qu",
                                    "description": "",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "Updateexistingmortgageloans",
            "url": "https://jabatix-loan-services.p.rapidapi.com/mortgage-loans",
            "description": "<p>\n      The &quot;update existing mortgage loans&quot; offers the possibility to change or \n      add new information to the currently available data in the system of \n      already existing mortgage loans of your company portfolio. It has a \n      common usage for updating new information about real payments in the <i>&#8220;PaymentEvents&#8221;</i>. \n      Additionally, there may be a need to correct an already existing \n      product, because eventually it was created with incorrect data.\n    </p>\n    <p>\n      The deal data are expected as for the &quot;POST&quot; operation. That means a \n      full object replacement is expected. Differences should only exist \n      within desired input changes.\n    </p>\n    <p>\n      From a business point of view, it is possible to add various typical \n      changes that only occur during the term of a mortgage. That means, on a \n      later posting date than the creation day. One typical event would be an \n      early redemption, which can be uploaded in property &#8220;<i>IrregularRepaymentsUnexpected&#8221;</i>. \n      The same part of the interface can cover partial early repayments. \n      Partial outpayments on the other hand can adjusted with <i>&#8220;IrregularOutpaymentsContractual&#8221;</i>. \n      The <i>&quot;InterestTranches&quot;</i> offers to add fixing dates.\n    </p>\n    <p>\n      Of course, general changes of the contractual instalment are possible, \n      like a term extension or the adjustment of the initial amount. Just the \n      related property from the main data needs to be adjusted accordingly for \n      this purpose.\n    </p>",
            "method": "PUT",
            "required_parameters": [
                {
                    "name": "Content-Type",
                    "type": "STRING",
                    "description": "",
                    "default": "application/json"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jabatix-loan-services.p.rapidapi.com/mortgage-loans\"\nquerystring = {\"Content-Type\": content_type}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"jabatix-loan-services.p.rapidapi.com\"\n}\n\nresponse = requests.put(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "ImportErrorLog": [
                    {
                        "errorLogTime": "1973-02-04",
                        "errorCode": 0,
                        "errorReason": "qu"
                    }
                ]
            },
            "headers": {},
            "schema": {
                "properties": {
                    "ImportErrorLog": {
                        "items": {
                            "properties": {
                                "errorCode": {
                                    "default": -96805732.4368007,
                                    "description": "",
                                    "type": "integer"
                                },
                                "errorFlag": {},
                                "errorLogTime": {
                                    "default": "1973-02-04",
                                    "description": "",
                                    "type": "string"
                                },
                                "errorReason": {
                                    "default": "qu",
                                    "description": "",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "Createnewgenericloans",
            "url": "https://jabatix-loan-services.p.rapidapi.com/generic-loans",
            "description": "<p>\n      The &quot;create new generic loans&quot; offers you a high-level interface to \n      deliver several various loan products. Hence, the specification depends \n      on the concrete input data (e.g. on dealType).\n    </p>\n    <p>\n      The deal data are expected in this standard interface formatted as a \n      JSON representation. A detailed description of all property structures \n      can be found in the following model schema. To complete missing data, \n      default values are added to uploaded data during processing. Therefore, \n      it is possible to leave individual properties empty, that means within \n      sending filled data, and default values will be entered during \n      subsequent processing. Default values are fixed or can be derived from \n      other attributes or configurations.\n    </p>\n    <p>\n      During processing, payment plans, ratios such as fair value as well as \n      entries are generated from the deal information delivered. The values \n      that are delivered are also validated. Individual plausibility checks \n      are performed such as a check on the customer or the consistency of \n      maturity information.\n    </p>",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Content-Type",
                    "type": "STRING",
                    "description": "",
                    "default": "application/json"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jabatix-loan-services.p.rapidapi.com/generic-loans\"\nquerystring = {\"Content-Type\": content_type}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"jabatix-loan-services.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Retrievalofgrossbookvalueevidenceforloansviaid,companyandgaapatspecificpostingdate",
            "url": "https://jabatix-loan-services.p.rapidapi.com/gross-book-value-evidence",
            "description": "<p>\n      The output interface &#8220;Gross Book Value Evidence&#8221; provides valuation \n      elements which are part of the gross book value on individual deal level.<br>\n    </p>\n    <p>\n      <br>\n      Detailed information can be found here: <a href=\"https://confluence.jabatix.net/x/WAdbAw\" target=_blank>GET \n      /loans/gross-book-value-evidence</a>\n    </p>\n    <br>",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "companyId",
                    "type": "NUMBER",
                    "description": "(Required) Unique company id",
                    "default": 1
                },
                {
                    "name": "gaap",
                    "type": "STRING",
                    "description": "Accounting guideline",
                    "default": "IFRS9"
                },
                {
                    "name": "postingDate",
                    "type": "STRING",
                    "description": "(Required) Posting date for which data is requested",
                    "default": "2019-03-31"
                },
                {
                    "name": "dealId",
                    "type": "STRING",
                    "description": "Unique deal id",
                    "default": "001-FK_LN-A-Consumer-Annuity"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jabatix-loan-services.p.rapidapi.com/gross-book-value-evidence\"\nquerystring = {\"companyId\": companyid, \"gaap\": gaap, \"postingDate\": postingdate, \"dealId\": dealid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"jabatix-loan-services.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "ImportErrorLog": [
                    {
                        "errorLogTime": "1973-02-04",
                        "errorCode": 0,
                        "errorReason": "qu"
                    }
                ]
            },
            "headers": {},
            "schema": {
                "properties": {
                    "ImportErrorLog": {
                        "items": {
                            "properties": {
                                "errorCode": {
                                    "default": -96805732.4368007,
                                    "description": "",
                                    "type": "integer"
                                },
                                "errorFlag": {},
                                "errorLogTime": {
                                    "default": "1973-02-04",
                                    "description": "",
                                    "type": "string"
                                },
                                "errorReason": {
                                    "default": "qu",
                                    "description": "",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "Createnewmortgageloans",
            "url": "https://jabatix-loan-services.p.rapidapi.com/mortgage-loans",
            "description": "<p>\n      A usual mortgage loan is a consumer loan to finance the acquisition or \n      maintenance of property rights to real estate. They are secured by liens \n      on real estate.\n    </p>\n    <p>\n      The schema for a mortgage loan object consists of several properties \n      under which additional properties are grouped as items. The master \n      property (<i>&quot;MortgageLoan&quot;</i>) has to be filled for all \n      deals. It contains the fundamental information of the new product just \n      as address of the counterparty, planned duration, deal conclusion date \n      and so on. Relevant secondary properties are available such as capital \n      disbursement and repayment, interest agreement, actual payment and other \n      information. It can have none or several entries in a secondary property \n      uploaded formatted as a list.\n    </p>\n    <p>\n      Especially indispensable for a mortgage loan is the reference to a \n      collateral. It can be done via <i>&#8220;ReferencebetweenLoanandCollateral&#8221;</i>. \n      From this it can be concluded that when a new mortgage is created, the \n      referenced collateral already exists or must also be created.\n    </p>\n    <p>\n      In the body input below, example values for the sample deal \n      &quot;153-WM_LN-A_Mortgage&quot; can be found. It represents a mortgage loan with \n      fixed monthly capital decrease and fixed interest rate, for which the \n      capital is payed out in one drawing. A related collateral has the deal \n      id &quot;153-WM_COL-A_Mortgage&quot;.\n    </p>\n    <br>",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Content-Type",
                    "type": "STRING",
                    "description": "",
                    "default": "application/json"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jabatix-loan-services.p.rapidapi.com/mortgage-loans\"\nquerystring = {\"Content-Type\": content_type}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"jabatix-loan-services.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Createnewcustomerfinance",
            "url": "https://jabatix-loan-services.p.rapidapi.com/customer-finance",
            "description": "<p>\n      A usual customer finance is an on-balance financial instrument with \n      annuity repayment and a fixed interest rate.\n    </p>\n    <p>\n      The schema for creating a new customer finance object consists of \n      several properties, under which additional properties are grouped as \n      items. The master property (<i>&quot;CustomerFinanceLoan&quot;</i>) has \n      to be filled for all deals. It contains the fundamental information of \n      the new product just as address of the customer, planned duration, deal \n      conclusion date and so on. In addition, relevant secondary properties \n      are available, such as for capital disbursement and repayment, interest \n      agreement, transaction cost, actual payment, deal events and other \n      information. It can have none or multiple entries in a secondary \n      property uploaded formatted as a list.\n    </p>\n    <p>\n      As example, for annuity repayment and interest rate agreement at least \n      one entry of properties <i>&#8220;RegularRepaymentsContractual&#8221;</i>\n      and <i>&#8220;InterestTranches&#8221;</i> is expected. Together with the \n      mandatory master data, the raw deal data is complete for an ideal course \n      of an usual customer finance product (cf. example values for sample deal \n      &quot;001-FK_LN-A-Consumer-Annuity&quot;).<br><br>Other secondary \n      properties are available to cover further deal characteristics of a \n      customer finance, outside the ideal course. For example, information \n      about payment holidays can be uploaded via <i>&#8220;DeferralsAndSuspensions&#8220;</i>.\n    </p>\n    <p>\n      In case where customer may not pay in schedule, <i>&#8220;PaymentEvents&#8221;</i>\n      can reflect this behaviour. This information could have additional use \n      as historical data for PD and LGD in impairment calculation for periodic \n      recalibration. In the case of delivery, ALL amounts actually paid are to \n      be delivered as part of <i>&#8220;PaymentEvents&#8221;</i>, formatted as \n      a list. This information is also used and compared against all other \n      data delivered in order to determine overdue amounts.\n    </p>\n    <br>",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Content-Type",
                    "type": "STRING",
                    "description": "",
                    "default": "application/json"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jabatix-loan-services.p.rapidapi.com/customer-finance\"\nquerystring = {\"Content-Type\": content_type}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"jabatix-loan-services.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {},
            "headers": {},
            "schema": {}
        },
        {
            "name": "Createnewgenericloans",
            "url": "https://jabatix-loan-services.p.rapidapi.com/generic-loans",
            "description": "<p>\n      The &quot;create new generic loans&quot; offers you a high-level interface to \n      deliver several various loan products. Hence, the specification depends \n      on the concrete input data (e.g. on dealType).\n    </p>\n    <p>\n      The deal data are expected in this standard interface formatted as a \n      JSON representation. A detailed description of all property structures \n      can be found in the following model schema. To complete missing data, \n      default values are added to uploaded data during processing. Therefore, \n      it is possible to leave individual properties empty, that means within \n      sending filled data, and default values will be entered during \n      subsequent processing. Default values are fixed or can be derived from \n      other attributes or configurations.\n    </p>\n    <p>\n      During processing, payment plans, ratios such as fair value as well as \n      entries are generated from the deal information delivered. The values \n      that are delivered are also validated. Individual plausibility checks \n      are performed such as a check on the customer or the consistency of \n      maturity information.\n    </p>",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jabatix-loan-services.p.rapidapi.com/generic-loans\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jabatix-loan-services.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jabatix-loan-services.p.rapidapi.com/generic-loans\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jabatix-loan-services.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Createnewmortgageloans",
            "url": "https://jabatix-loan-services.p.rapidapi.com/mortgage-loans",
            "description": "<p>\n      A usual mortgage loan is a consumer loan to finance the acquisition or \n      maintenance of property rights to real estate. They are secured by liens \n      on real estate.\n    </p>\n    <p>\n      The schema for a mortgage loan object consists of several properties \n      under which additional properties are grouped as items. The master \n      property (<i>&quot;MortgageLoan&quot;</i>) has to be filled for all \n      deals. It contains the fundamental information of the new product just \n      as address of the counterparty, planned duration, deal conclusion date \n      and so on. Relevant secondary properties are available such as capital \n      disbursement and repayment, interest agreement, actual payment and other \n      information. It can have none or several entries in a secondary property \n      uploaded formatted as a list.\n    </p>\n    <p>\n      Especially indispensable for a mortgage loan is the reference to a \n      collateral. It can be done via <i>&#8220;ReferencebetweenLoanandCollateral&#8221;</i>. \n      From this it can be concluded that when a new mortgage is created, the \n      referenced collateral already exists or must also be created.\n    </p>\n    <p>\n      In the body input below, example values for the sample deal \n      &quot;153-WM_LN-A_Mortgage&quot; can be found. It represents a mortgage loan with \n      fixed monthly capital decrease and fixed interest rate, for which the \n      capital is payed out in one drawing. A related collateral has the deal \n      id &quot;153-WM_COL-A_Mortgage&quot;.\n    </p>\n    <br>",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jabatix-loan-services.p.rapidapi.com/mortgage-loans\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jabatix-loan-services.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jabatix-loan-services.p.rapidapi.com/mortgage-loans\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jabatix-loan-services.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Createnewcustomerfinance",
            "url": "https://jabatix-loan-services.p.rapidapi.com/customer-finance",
            "description": "<p>\n      A usual customer finance is an on-balance financial instrument with \n      annuity repayment and a fixed interest rate.\n    </p>\n    <p>\n      The schema for creating a new customer finance object consists of \n      several properties, under which additional properties are grouped as \n      items. The master property (<i>&quot;CustomerFinanceLoan&quot;</i>) has \n      to be filled for all deals. It contains the fundamental information of \n      the new product just as address of the customer, planned duration, deal \n      conclusion date and so on. In addition, relevant secondary properties \n      are available, such as for capital disbursement and repayment, interest \n      agreement, transaction cost, actual payment, deal events and other \n      information. It can have none or multiple entries in a secondary \n      property uploaded formatted as a list.\n    </p>\n    <p>\n      As example, for annuity repayment and interest rate agreement at least \n      one entry of properties <i>&#8220;RegularRepaymentsContractual&#8221;</i>\n      and <i>&#8220;InterestTranches&#8221;</i> is expected. Together with the \n      mandatory master data, the raw deal data is complete for an ideal course \n      of an usual customer finance product (cf. example values for sample deal \n      &quot;001-FK_LN-A-Consumer-Annuity&quot;).<br><br>Other secondary \n      properties are available to cover further deal characteristics of a \n      customer finance, outside the ideal course. For example, information \n      about payment holidays can be uploaded via <i>&#8220;DeferralsAndSuspensions&#8220;</i>.\n    </p>\n    <p>\n      In case where customer may not pay in schedule, <i>&#8220;PaymentEvents&#8221;</i>\n      can reflect this behaviour. This information could have additional use \n      as historical data for PD and LGD in impairment calculation for periodic \n      recalibration. In the case of delivery, ALL amounts actually paid are to \n      be delivered as part of <i>&#8220;PaymentEvents&#8221;</i>, formatted as \n      a list. This information is also used and compared against all other \n      data delivered in order to determine overdue amounts.\n    </p>\n    <br>",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://jabatix-loan-services.p.rapidapi.com/customer-finance\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jabatix-loan-services.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://jabatix-loan-services.p.rapidapi.com/customer-finance\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jabatix-loan-services.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        }
    ]
}