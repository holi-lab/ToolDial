{
    "product_id": "api_4ec4f342-ca84-4f2e-84e8-fb93f927587d",
    "tool_description": "XTRM is a powerful global payment platform powered by an intelligent digital wallet architecture that allows consumers and companies of all sizes to receive, manage and make any type of B2B, B2C, C2C and C2B global payments.",
    "home_url": "https://rapidapi.com/lev-VcVGPrAJ-/api/xtrm/",
    "name": "XTRM",
    "title": "XTRM",
    "pricing": "FREE",
    "tool_name": "XTRM",
    "score": null,
    "host": "xtrm.p.rapidapi.com",
    "api_list": [
        {
            "name": "GetUserPaymentMethods",
            "url": "https://xtrm.p.rapidapi.com/Payment/GetUserPaymentMethods",
            "description": "# Remitter Payment Methods\nChoose the payment method. You can pay to the XTRM &lsquo;AnyPay\u2122\u2019 digital wallet (recommended) where the user can choose how to transfer the funds out of XTRM. Alternatively you create a pass through payment directly to a number of end points such as bank account, gift cards, or a prepaid debit card.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Payment/GetUserPaymentMethods\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Payment/GetUserPaymentMethods\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetUserPaymentMethodsResponse": {
                        "properties": {
                            "GetUserPaymentMethodResult": {
                                "properties": {
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "UserPaymentMethods": {
                                        "properties": {
                                            "UserPaymentMethodDetails": {
                                                "items": {
                                                    "properties": {
                                                        "UserPaymentMethodID": {
                                                            "type": "string"
                                                        },
                                                        "UserPaymentMethodName": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "CreateUser",
            "url": "https://xtrm.p.rapidapi.com/Register/CreateUser",
            "description": "## Create Beneficiary User Account <p>This creates a beneficiary user account where the beneficiary can send and receive all payments. A wallet is also created for the user, holding the currency for the country specified during creation. These will be reviewed for KYC (<i>Know Your Customer</i>) compliance so information submitted must be real and accurate. <b>Do not create test users or emails on production servers.</b></p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Register/CreateUser\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Register/CreateUser\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "CreateUserResponse": {
                        "properties": {
                            "CreateUserResult": {
                                "properties": {
                                    "AccountIdentityLevel": {
                                        "type": "string"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "UserID": {
                                        "description": "the `AccountID`, `IssuerAccountNumber`, `UserID` (and possibly some others) is a unique XTRM account identifier, starting with `SPN` for companies (usually remitters), or `PAT` for individual beneficiaries.\n",
                                        "maxLength": 20,
                                        "minLength": 1,
                                        "pattern": "(SPN[1-9][0-9]*|PAT[1-9][0-9]*)",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "FundCompanyWalletUsingCreditCard",
            "url": "https://xtrm.p.rapidapi.com/Wallet/FundCompanyWalletUsingCreditCard",
            "description": "companies may fund their own company wallets using the company\u2019s own credit card. ** *Please note:* This call is not intended to take payments from consumers; it meant only for companies to fund their own wallets.**\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/FundCompanyWalletUsingCreditCard\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/FundCompanyWalletUsingCreditCard\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "FundCompanyWalletUsingCreditCardResponse": {
                        "properties": {
                            "FundCompanyWalletUsingCreditCardResult": {
                                "properties": {
                                    "Amount": {
                                        "description": "An amount representing some value in a specific currency, as a string\n",
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "pattern": "([0-9]*\\.?[0-9]*)",
                                        "type": "string"
                                    },
                                    "Fee": {
                                        "description": "An amount representing some value in a specific currency, as a string\n",
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "pattern": "([0-9]*\\.?[0-9]*)",
                                        "type": "string"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "TotalAmount": {
                                        "description": "An amount representing some value in a specific currency, as a string\n",
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "pattern": "([0-9]*\\.?[0-9]*)",
                                        "type": "string"
                                    },
                                    "TransactionID": {
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "required": [
                            "FundCompanyWalletUsingCreditCardResult"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "FundCompanyWalletUsingCreditCardResponse"
                ],
                "type": "object"
            }
        },
        {
            "name": "GetPaymentMethods",
            "url": "https://xtrm.p.rapidapi.com/Payment/GetPaymentMethods",
            "description": "# Remitter Payment Methods\nChoose the payment method. You can pay to the XTRM AnyPay\u2122 digital wallet (recommended) where the user can choose how to transfer the funds out of XTRM. Alternatively you create a pass through payment directly to a number of end points such as bank account, gift cards, or a prepaid debit card.\nThe body of this request consist of the empty JSON string <b>` { } `</b>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Payment/GetPaymentMethods\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Payment/GetPaymentMethods\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetPaymentMethodsResponse": {
                        "properties": {
                            "PaymentMethodResult": {
                                "properties": {
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "PaymentMethodDetails": {
                                        "items": {
                                            "properties": {
                                                "PaymentMethodID": {
                                                    "maxLength": 25,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "PaymentMethodName": {
                                                    "maxLength": 100,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "UpdateUser",
            "url": "https://xtrm.p.rapidapi.com/Register/UpdateUser",
            "description": "## Update Beneficiary User Account\nThis will update a user\u2019s beneficiary account or digital wallet.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Register/UpdateUser\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Register/UpdateUser\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "UpdateUserResponse": {
                        "properties": {
                            "UpdateUserResult": {
                                "properties": {
                                    "AccountIdentityLevel": {
                                        "type": "string"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "UserID": {
                                        "description": "the `AccountID`, `IssuerAccountNumber`, `UserID` (and possibly some others) is a unique XTRM account identifier, starting with `SPN` for companies (usually remitters), or `PAT` for individual beneficiaries.\n",
                                        "maxLength": 20,
                                        "minLength": 1,
                                        "pattern": "(SPN[1-9][0-9]*|PAT[1-9][0-9]*)",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "CheckUserExist",
            "url": "https://xtrm.p.rapidapi.com/Beneficiary/CheckUserExist",
            "description": "# Check User Exist\nThis returns some minimal details about a user, if the user exists.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Beneficiary/CheckUserExist\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Beneficiary/CheckUserExist\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "CheckUserExistResponse": {
                        "properties": {
                            "CheckUserExistResult": {
                                "properties": {
                                    "Beneficiary": {
                                        "items": {
                                            "properties": {
                                                "AccountNo": {
                                                    "description": "the `AccountID`, `IssuerAccountNumber`, `UserID` (and possibly some others) is a unique XTRM account identifier, starting with `SPN` for companies (usually remitters), or `PAT` for individual beneficiaries.\n",
                                                    "maxLength": 20,
                                                    "minLength": 1,
                                                    "pattern": "(SPN[1-9][0-9]*|PAT[1-9][0-9]*)",
                                                    "type": "string"
                                                },
                                                "Country": {
                                                    "type": "string"
                                                },
                                                "Employer": {
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "A string from 2 to 40 characters in length\n",
                                                    "maxLength": 40,
                                                    "minLength": 2,
                                                    "type": "string"
                                                },
                                                "State": {
                                                    "description": "Region: A jurisdiction such as state, province, or region\n",
                                                    "maxLength": 50,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "UpdateCompanyWallet",
            "url": "https://xtrm.p.rapidapi.com/Wallet/UpdateCompanyWallet",
            "description": "Change the name of a company\u2019s wallet. The other elements of a wallet (the `WalletID` and currency) cannot be changed.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/UpdateCompanyWallet\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/UpdateCompanyWallet\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "UpdateCompanyWalletResponse": {
                        "properties": {
                            "UpdateCompanyWalletResult": {
                                "properties": {
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Status": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetBeneficiaryWallets",
            "url": "https://xtrm.p.rapidapi.com/Wallet/GetBeneficiaryWallets",
            "description": "Fetch the wallets belonging to a beneficiary\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/GetBeneficiaryWallets\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/GetBeneficiaryWallets\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetBeneficiaryWalletResponse": {
                        "properties": {
                            "GetBeneficiaryWalletsResult": {
                                "properties": {
                                    "Wallets": {
                                        "items": {
                                            "properties": {
                                                "Currency": {
                                                    "description": "CurrencyCode: The three-letter ISO currency code\n",
                                                    "maxLength": 3,
                                                    "minLength": 3,
                                                    "pattern": "([a-zA-z]{3})",
                                                    "type": "string"
                                                },
                                                "ID": {
                                                    "type": "integer"
                                                },
                                                "Name": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "CreateBeneficiaryCompanyWallet",
            "url": "https://xtrm.p.rapidapi.com/Wallet/CreateBeneficiaryCompanyWallet",
            "description": "create beneficiary company wallets and specify the currency\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/CreateBeneficiaryCompanyWallet\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/CreateBeneficiaryCompanyWallet\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "CreateBeneficiaryCompanyWalletResult": {
                        "properties": {
                            "OperationStatus": {
                                "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                "properties": {
                                    "Errors": {
                                        "type": [
                                            "object",
                                            "null"
                                        ]
                                    },
                                    "Success": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "WalletCurrency": {
                                "description": "CurrencyCode: The three-letter ISO currency code\n",
                                "maxLength": 3,
                                "minLength": 3,
                                "pattern": "([a-zA-z]{3})",
                                "type": "string"
                            },
                            "WalletID": {
                                "type": "integer"
                            },
                            "WalletName": {
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetCompanyWallets",
            "url": "https://xtrm.p.rapidapi.com/Wallet/GetCompanyWallets",
            "description": "Get a list of wallets for a particular company\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/GetCompanyWallets\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/GetCompanyWallets\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetCompanyWalletResponse": {
                        "properties": {
                            "CompanyWalletResult": {
                                "properties": {
                                    "Company Wallets": {
                                        "properties": {
                                            "CompanyWalletDetails": {
                                                "items": {
                                                    "properties": {
                                                        "WalletBalance": {
                                                            "description": "An amount representing some value in a specific currency, as a string\n",
                                                            "maxLength": 25,
                                                            "minLength": 1,
                                                            "pattern": "([0-9]*\\.?[0-9]*)",
                                                            "type": "string"
                                                        },
                                                        "WalletCurrency": {
                                                            "description": "CurrencyCode: The three-letter ISO currency code\n",
                                                            "maxLength": 3,
                                                            "minLength": 3,
                                                            "pattern": "([a-zA-z]{3})",
                                                            "type": "string"
                                                        },
                                                        "WalletID": {
                                                            "maxLength": 20,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "WalletName": {
                                                            "maxLength": 100,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "WalletType": {
                                                            "description": "< *Standard* wallets are standard *Accrual* wallets are accrual",
                                                            "enum": [
                                                                "Standard",
                                                                "Accrual"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "BeneficiaryCompanyWithdrawFund",
            "url": "https://xtrm.p.rapidapi.com/Fund/BeneficiaryCompanyWithdrawFund",
            "description": "<p>This allows beneficiary company to transfer funds\nto their bank from their XTRM &lsquo;AnyPay&trade;\u2019\nDigital Wallet. On UserWithdrawFund call an OTP\n(one time password)  is generated and sent to user.\nGet the 6 digit OTP value from the user in your\napplication and resubmit `UserWithdrawFund` with\nOTP included.</p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Fund/BeneficiaryCompanyWithdrawFund\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Fund/BeneficiaryCompanyWithdrawFund\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "BeneficiaryCompanyWithdrawFundResponse": {
                        "properties": {
                            "BeneficiaryCompanyWithdrawFundResult": {
                                "properties": {
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "PaymentDate": {
                                        "properties": {
                                            "Day": {
                                                "description": "numeric day of month '1' to '31'",
                                                "maxLength": 2,
                                                "minLength": 1,
                                                "pattern": "(12]\\d|3[01]|0?[1-9])",
                                                "type": "string"
                                            },
                                            "Month": {
                                                "description": "numeric month of year '11 to '121",
                                                "maxLength": 2,
                                                "minLength": 1,
                                                "pattern": "([1][012]|0?[1-9])",
                                                "type": "string"
                                            },
                                            "Year": {
                                                "description": "<p>year from 1930 forward through 2999</p>\n",
                                                "maxLength": 4,
                                                "minLength": 4,
                                                "pattern": "^19[3-9]\\d|2[0-9]{3}$",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "PaymentStatus": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "UpdateBeneficiary",
            "url": "https://xtrm.p.rapidapi.com/Beneficiary/UpdateBeneficiary",
            "description": "# THIS CALL LACKS DOCUMENTATION\n``/Beneficiary/UpdateBeneficiary`` lacks documentation.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Beneficiary/UpdateBeneficiary\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Beneficiary/UpdateBeneficiary\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "string"
            }
        },
        {
            "name": "GetPersonalBeneficiaries",
            "url": "https://xtrm.p.rapidapi.com/Beneficiary/GetPersonalBeneficiaries",
            "description": "# Get Personal Beneficiaries\nThis allows you to get a list of your personal (non-company) beneficiaries.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Beneficiary/GetPersonalBeneficiaries\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Beneficiary/GetPersonalBeneficiaries\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetPersonalBeneficiariesReponse": {
                        "properties": {
                            "GetPersonalBeneficiariesResult": {
                                "properties": {
                                    "Beneficiary": {
                                        "items": {
                                            "properties": {
                                                "AccountNo": {
                                                    "description": "the `AccountID`, `IssuerAccountNumber`, `UserID` (and possibly some others) is a unique XTRM account identifier, starting with `SPN` for companies (usually remitters), or `PAT` for individual beneficiaries.\n",
                                                    "maxLength": 20,
                                                    "minLength": 1,
                                                    "pattern": "(SPN[1-9][0-9]*|PAT[1-9][0-9]*)",
                                                    "type": "string"
                                                },
                                                "Country": {
                                                    "type": "string"
                                                },
                                                "Employer": {
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "A string from 2 to 40 characters in length\n",
                                                    "maxLength": 40,
                                                    "minLength": 2,
                                                    "type": "string"
                                                },
                                                "State": {
                                                    "description": "Region: A jurisdiction such as state, province, or region\n",
                                                    "maxLength": 50,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "OperationStatus": {
                                "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                "properties": {
                                    "Errors": {
                                        "type": [
                                            "object",
                                            "null"
                                        ]
                                    },
                                    "Success": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "PaginationTotal": {
                                "properties": {
                                    "RecordsToSkip": {
                                        "type": "integer"
                                    },
                                    "RecordsToTake": {
                                        "type": "integer"
                                    },
                                    "RecordsTotal": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "newAuthToken",
            "url": "https://xtrm.p.rapidapi.com/oAuth/token",
            "description": "## Initial authorization token request\n<p>This API call has no security; it is the basis of\nthe bearer authentication. Security is provided by\nthe use of secure http (https) and the remitter\u2019s\nAPI credentials.</p>\n<p>``grant_type`` is either ``password``\nto get a new session token, or ``refresh_token``\nto renew a session.</p>\n<p>The ``refresh_token`` is present only when the\n``grant_type`` is ``refresh_token``.\n",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "client_secret",
                    "type": "STRING",
                    "description": "XTRM-supplied client secret",
                    "default": "{{xtrm_client_secret}}"
                },
                {
                    "name": "grant_type",
                    "type": "STRING",
                    "description": "always has value `password` or `refresh_token`",
                    "default": "password"
                },
                {
                    "name": "client_id",
                    "type": "STRING",
                    "description": "XTRM-supplied client id",
                    "default": "{{xtrm_client_id}}"
                }
            ],
            "optional_parameters": [
                {
                    "name": "refresh_token",
                    "type": "STRING",
                    "description": "only present when renewing a token",
                    "default": "66fa9c8ad2264077ab565aa1e38927b0"
                }
            ],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/oAuth/token\"\nquerystring = {\"client_secret\": \"{{xtrm_client_secret}}\", \"refresh_token\": \"66fa9c8ad2264077ab565aa1e38927b0\", \"grant_type\": \"password\", \"client_id\": \"{{xtrm_client_id}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/oAuth/token\"\nquerystring = {\"client_secret\": \"{{xtrm_client_secret}}\", \"refresh_token\": \"66fa9c8ad2264077ab565aa1e38927b0\", \"grant_type\": \"password\", \"client_id\": \"{{xtrm_client_id}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "allOf": [
                    {
                        "properties": {
                            ".expires": {
                                "description": "time of expiration",
                                "type": "string"
                            },
                            ".issued": {
                                "description": "time of creation",
                                "type": "string"
                            },
                            "access_token": {
                                "description": "Authorization token",
                                "type": "string"
                            },
                            "client_id": {
                                "description": "the client id",
                                "type": "string"
                            },
                            "expires_in": {
                                "description": "Expiry time in seconds as string",
                                "type": "integer"
                            },
                            "refresh_token": {
                                "description": "Refresh token to get a new token to extend the session",
                                "type": "string"
                            },
                            "token_type": {
                                "description": "Always 'bearer'",
                                "enum": [
                                    "bearer"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "access_token",
                            "token_type",
                            "expires_in",
                            "refresh_token",
                            ".issued",
                            ".expires"
                        ],
                        "type": "object"
                    }
                ],
                "description": "Authorization and associated data"
            }
        },
        {
            "name": "CreateUserWallet",
            "url": "https://xtrm.p.rapidapi.com/Wallet/CreateUserWallet",
            "description": "<p>Create a wallet for a beneficiary with a specific name and currency.</p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/CreateUserWallet\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/CreateUserWallet\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "CreateUserWalletResponse": {
                        "properties": {
                            "CreateUserWalletResult": {
                                "properties": {
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "WalletCurrency": {
                                        "description": "CurrencyCode: The three-letter ISO currency code\n",
                                        "maxLength": 3,
                                        "minLength": 3,
                                        "pattern": "([a-zA-z]{3})",
                                        "type": "string"
                                    },
                                    "WalletID": {
                                        "type": "integer"
                                    },
                                    "WalletName": {
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "CreateCompanyWallet",
            "url": "https://xtrm.p.rapidapi.com/Wallet/CreateCompanyWallet",
            "description": "<p>Create a wallet with a specific name and currency.</p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/CreateCompanyWallet\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/CreateCompanyWallet\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "CreateCompanyWalletResponse": {
                        "properties": {
                            "OperationStatus": {
                                "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                "properties": {
                                    "Errors": {
                                        "type": [
                                            "object",
                                            "null"
                                        ]
                                    },
                                    "Success": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "WalletCurrency": {
                                "description": "CurrencyCode: The three-letter ISO currency code\n",
                                "maxLength": 3,
                                "minLength": 3,
                                "pattern": "([a-zA-z]{3})",
                                "type": "string"
                            },
                            "WalletID": {
                                "maxLength": 20,
                                "minLength": 1,
                                "type": "string"
                            },
                            "WalletName": {
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "TransferFundToCompany",
            "url": "https://xtrm.p.rapidapi.com/Fund/TransferFundToCompany",
            "description": "This allows you to make transfers from a company wallet to a beneficiary company wallet, *&lsquo;AnyPay&trade\u2019) or pass-through payments to a beneficiaries Bank account or Paypal. When you make transfers, if the beneficiary does not have a wallet in that currency, one will be created automatically.\n**Paypal transactions have been suspended. Please contact support@xtrm.com for Paypal connectivity requirements.**\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Fund/TransferFundToCompany\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Fund/TransferFundToCompany\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "TransferFundToCompanyResponse": {
                        "properties": {
                            "TransferFundToCompanyResult": {
                                "properties": {
                                    "BeneficiaryAccountNumber": {
                                        "description": "the `AccountID`, `IssuerAccountNumber`, `UserID` (and possibly some others) is a unique XTRM account identifier, starting with `SPN` for companies (usually remitters), or `PAT` for individual beneficiaries.\n",
                                        "maxLength": 20,
                                        "minLength": 1,
                                        "pattern": "(SPN[1-9][0-9]*|PAT[1-9][0-9]*)",
                                        "type": "string"
                                    },
                                    "IssuerTransactionId": {
                                        "description": "This is a unique value from the issuer that identifies this specific transaction. XTRM returns this identifier unchanged in the transaction result. XTRM does not use this identifier; it is for the use of the issuer.\n",
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "PaymentDate": {
                                        "type": "string"
                                    },
                                    "PaymentStatus": {
                                        "type": "string"
                                    },
                                    "PaymentTransactionId": {
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "TransferFundWalletToWallet",
            "url": "https://xtrm.p.rapidapi.com/Fund/TransferFundWalletToWallet",
            "description": "This allows you to transfer funds between wallets in any combination. i.e from a user wallet to company wallet, user wallet to another user wallet, company wallet to user wallet or company wallet or another company wallet. On `TransferFundWallettoWallet` call, a 6 digit one time password (OTP) is generated and sent to the user from whom the fund is going to be debited. Capture this 6 digit OTP value from the user in your application and resubmit `TransferFundWallettoWallet` with the OTP included.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Fund/TransferFundWalletToWallet\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Fund/TransferFundWalletToWallet\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "TransferFundWallettoWalletResponse": {
                        "properties": {
                            "TransferFundWallettoWalletResult": {
                                "properties": {
                                    "Amount": {
                                        "description": "An amount representing some value in a specific currency, as a string\n",
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "pattern": "([0-9]*\\.?[0-9]*)",
                                        "type": "string"
                                    },
                                    "Fee": {
                                        "description": "An amount representing some value in a specific currency, as a string\n",
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "pattern": "([0-9]*\\.?[0-9]*)",
                                        "type": "string"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "TotalAmount": {
                                        "description": "An amount representing some value in a specific currency, as a string\n",
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "pattern": "([0-9]*\\.?[0-9]*)",
                                        "type": "string"
                                    },
                                    "TransactionID": {
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetCompanyWalletTransactionDetails",
            "url": "https://xtrm.p.rapidapi.com/Wallet/GetCompanyWalletTransactionDetails",
            "description": "get the transaction details for the selected transaction ID\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/GetCompanyWalletTransactionDetails\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/GetCompanyWalletTransactionDetails\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetCompanyTransactionDetailsResponse": {
                        "properties": {
                            "GetCompanyTransactionDetailsResult": {
                                "properties": {
                                    "Field": {
                                        "items": {
                                            "properties": {
                                                "Name": {
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "OperationStatus": {
                                "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                "properties": {
                                    "Errors": {
                                        "type": [
                                            "object",
                                            "null"
                                        ]
                                    },
                                    "Success": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetUserWalletTransactions",
            "url": "https://xtrm.p.rapidapi.com/Wallet/GetUserWalletTransactions",
            "description": "Get a list of transactions of a user\u2019s wallet. A user may have multiple wallets.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/GetUserWalletTransactions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/GetUserWalletTransactions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetUserWalletTransactionsResponse": {
                        "properties": {
                            "OperationStatus": {
                                "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                "properties": {
                                    "Errors": {
                                        "type": [
                                            "object",
                                            "null"
                                        ]
                                    },
                                    "Success": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "PaginationTotal": {
                                "properties": {
                                    "RecordsToSkip": {
                                        "type": "integer"
                                    },
                                    "RecordsToTake": {
                                        "type": "integer"
                                    },
                                    "RecordsTotal": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "Transactions": {
                                "items": {
                                    "properties": {
                                        "Amount": {
                                            "description": "An amount representing some value in a specific currency, as a string\n",
                                            "maxLength": 25,
                                            "minLength": 1,
                                            "pattern": "([0-9]*\\.?[0-9]*)",
                                            "type": "string"
                                        },
                                        "CompanyName": {
                                            "type": "string"
                                        },
                                        "Description": {
                                            "type": "string"
                                        },
                                        "PaymentMethod": {
                                            "type": "string"
                                        },
                                        "ProgramName": {
                                            "type": "string"
                                        },
                                        "TransactionDate": {
                                            "description": "A date and time string\n",
                                            "type": "string"
                                        },
                                        "TransactionID": {
                                            "type": "integer"
                                        },
                                        "Type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "GetUserWalletTransactionsResponse"
                ],
                "type": "object"
            }
        },
        {
            "name": "TransferFundUsertoCompanyUsingCC",
            "url": "https://xtrm.p.rapidapi.com/Fund/TransferFundUsertoCompanyUsingCC",
            "description": "This allows you to receive funds from a beneficiary user using the beneficiary\u2019s credit card. This single call results in two sequential transactions. First, funds are deposited in user account (the beneficiary\u2019s wallet) from the credit card. Then, the funds are transferred from the beneficiary\u2019s wallet to the company\u2019s wallet.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Fund/TransferFundUsertoCompanyUsingCC\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Fund/TransferFundUsertoCompanyUsingCC\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "TransferFundUsertoCompanyUsingCCResponse": {
                        "properties": {
                            "TransferFundUsertoCompanyUsingCCResult": {
                                "properties": {
                                    "Amount": {
                                        "description": "An amount representing some value in a specific currency, as a string\n",
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "pattern": "([0-9]*\\.?[0-9]*)",
                                        "type": "string"
                                    },
                                    "Fee": {
                                        "description": "An amount representing some value in a specific currency, as a string\n",
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "pattern": "([0-9]*\\.?[0-9]*)",
                                        "type": "string"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "TotalAmount": {
                                        "description": "An amount representing some value in a specific currency, as a string\n",
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "pattern": "([0-9]*\\.?[0-9]*)",
                                        "type": "string"
                                    },
                                    "TransactionID": {
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetBeneficiaryCompanyPaymentMethods",
            "url": "https://xtrm.p.rapidapi.com/Payment/GetBeneficiaryCompanyPaymentMethods",
            "description": "<p>A beneficiary company may transfer to bank endpoints from their XTRM AnyPay\u2122 digital wallet.</p> <br />The body consists of the empty JSON string:<br /> **` { } `**\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Payment/GetBeneficiaryCompanyPaymentMethods\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Payment/GetBeneficiaryCompanyPaymentMethods\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetBeneficiaryCompanyPaymentsResponse": {
                        "properties": {
                            "BeneficiaryCompanyPaymentMethodResult": {
                                "properties": {
                                    "BeneficiaryCompanyPaymentMethodDetails": {
                                        "items": {
                                            "properties": {
                                                "BeneficiaryCompanyPaymentMethodID": {
                                                    "maxLength": 25,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "BeneficiaryCompanyPaymentMethodName": {
                                                    "maxLength": 100,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetConnectedCompanyFundRequest",
            "url": "https://xtrm.p.rapidapi.com/Fund/GetConnectedCompanyFundRequest",
            "description": "# There is no documentation on this API call.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Fund/GetConnectedCompanyFundRequest\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Fund/GetConnectedCompanyFundRequest\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "string"
            }
        },
        {
            "name": "UpdateBeneficiaryCompanyWallet",
            "url": "https://xtrm.p.rapidapi.com/Wallet/UpdateBeneficiaryCompanyWallet",
            "description": "Update a beneficiary company\u2019s name. The other elements of a wallet (the `WalletID` and currency) cannot be changed.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/UpdateBeneficiaryCompanyWallet\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/UpdateBeneficiaryCompanyWallet\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "UpdateBeneficiaryCompnayWalletResponse": {
                        "properties": {
                            "UpdateBeneficiaryCompanyWalletResult": {
                                "properties": {
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Status": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "TransferFundDynamicAccountCreateUser",
            "url": "https://xtrm.p.rapidapi.com/Fund/TransferFundDynamicAccountCreateUser",
            "description": "This allows the transfer of funds from a company wallet to a new user or existing user\u2019s wallet. The user is created dynamically if the email id used does not already exist within the system. The new user is connected to the creating account.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Fund/TransferFundDynamicAccountCreateUser\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Fund/TransferFundDynamicAccountCreateUser\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "TransferFundToDynamicAccountUserResponse": {
                        "properties": {
                            "TransferFundToDynamicAccountUserResult": {
                                "properties": {
                                    "Amount": {
                                        "description": "An amount representing some value in a specific currency, as a string\n",
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "pattern": "([0-9]*\\.?[0-9]*)",
                                        "type": "string"
                                    },
                                    "Currency": {
                                        "description": "CurrencyCode: The three-letter ISO currency code\n",
                                        "maxLength": 3,
                                        "minLength": 3,
                                        "pattern": "([a-zA-z]{3})",
                                        "type": "string"
                                    },
                                    "Fee": {
                                        "description": "An amount representing some value in a specific currency, as a string\n",
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "pattern": "([0-9]*\\.?[0-9]*)",
                                        "type": "string"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "RecipientAccountNumber": {
                                        "description": "the `AccountID`, `IssuerAccountNumber`, `UserID` (and possibly some others) is a unique XTRM account identifier, starting with `SPN` for companies (usually remitters), or `PAT` for individual beneficiaries.\n",
                                        "maxLength": 20,
                                        "minLength": 1,
                                        "pattern": "(SPN[1-9][0-9]*|PAT[1-9][0-9]*)",
                                        "type": "string"
                                    },
                                    "TotalAmount": {
                                        "description": "An amount representing some value in a specific currency, as a string\n",
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "pattern": "([0-9]*\\.?[0-9]*)",
                                        "type": "string"
                                    },
                                    "TransactionID": {
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetACHDebitLinkedBankAccounts",
            "url": "https://xtrm.p.rapidapi.com/Bank/GetACHDebitLinkedBankAccounts",
            "description": "<p>Fetch a list of the ACH debit linked bank accounts (or bank transfers systems analogous to ACH). This is used to fund company wallets using the ACH debit method.</p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Bank/GetACHDebitLinkedBankAccounts\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Bank/GetACHDebitLinkedBankAccounts\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetACHDebitLinkedBankAccountsResponse": {
                        "properties": {
                            "GetACHDebitLinkedBankAccountsResult": {
                                "properties": {
                                    "Beneficiary": {
                                        "properties": {
                                            "BeneficiaryDetails": {
                                                "items": {
                                                    "properties": {
                                                        "BankDetails": {
                                                            "properties": {
                                                                "BeneficiaryBankInformation": {
                                                                    "properties": {
                                                                        "ACHDebitApprovalStatus": {
                                                                            "description": "**optional**\n",
                                                                            "type": [
                                                                                "string",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "AccountNumber": {
                                                                            "type": "string"
                                                                        },
                                                                        "BankBeneficiaryStatus": {
                                                                            "description": "**optional**\n",
                                                                            "type": [
                                                                                "string",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "BankName": {
                                                                            "type": "string"
                                                                        },
                                                                        "BranchName": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "BeneficiaryId": {
                                                            "type": "string"
                                                        },
                                                        "BeneficiaryName": {
                                                            "description": "A string from 2 to 40 characters in length\n",
                                                            "maxLength": 40,
                                                            "minLength": 2,
                                                            "type": "string"
                                                        },
                                                        "Country": {
                                                            "description": "Country: Name of the country, from 1 to 25 characters\n",
                                                            "maxLength": 25,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "Currency": {
                                                            "description": "CurrencyCode: The three-letter ISO currency code\n",
                                                            "maxLength": 3,
                                                            "minLength": 3,
                                                            "pattern": "([a-zA-z]{3})",
                                                            "type": "string"
                                                        },
                                                        "PaymentMethods": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "TransferFee": {
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetUserWalletBalance",
            "url": "https://xtrm.p.rapidapi.com/Wallet/GetUserWalletBalance",
            "description": "Get an individual user\u2019s wallet balance for the specified currency\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/GetUserWalletBalance\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/GetUserWalletBalance\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "anyOf": [
                    {
                        "properties": {
                            "UserWalletBalanceResponse": {
                                "properties": {
                                    "Balance": {
                                        "type": "number"
                                    },
                                    "Currency": {
                                        "description": "CurrencyCode: The three-letter ISO currency code\n",
                                        "maxLength": 3,
                                        "minLength": 3,
                                        "pattern": "([a-zA-z]{3})",
                                        "type": "string"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "UserWalletBalnceResponse": {
                                "properties": {
                                    "Balance": {
                                        "type": "number"
                                    },
                                    "Currency": {
                                        "description": "CurrencyCode: The three-letter ISO currency code\n",
                                        "maxLength": 3,
                                        "minLength": 3,
                                        "pattern": "([a-zA-z]{3})",
                                        "type": "string"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            }
        },
        {
            "name": "GetPrepaidCards",
            "url": "https://xtrm.p.rapidapi.com/GiftCard/GetPrepaidCards",
            "description": "<p>NO DOCUMENTATION</p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/GiftCard/GetPrepaidCards\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/GiftCard/GetPrepaidCards\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetPrepaidCardsResponse": {
                        "properties": {
                            "GetPrepaidCardsResult": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "CompanyAdvancedProfileStatus",
            "url": "https://xtrm.p.rapidapi.com/Register/CompanyAdvancedProfileStatus",
            "description": "<p>This API call is used to get the status of the\nremitter application using company advanced profile.\nThe status would be one of:</p>\n<ul style=\"font-weight: bolder\">\n<li>Submitted</li> <li>Pending</li> <li>Approved</li>\n</ul>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Register/CompanyAdvancedProfileStatus\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Register/CompanyAdvancedProfileStatus\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "AdvancedProfileStatusResponse": {
                        "properties": {
                            "AdvancedProfileStatusResult": {
                                "properties": {
                                    "BeneficiaryID": {
                                        "description": "the `AccountID`, `IssuerAccountNumber`, `UserID` (and possibly some others) is a unique XTRM account identifier, starting with `SPN` for companies (usually remitters), or `PAT` for individual beneficiaries.\n",
                                        "maxLength": 20,
                                        "minLength": 1,
                                        "pattern": "(SPN[1-9][0-9]*|PAT[1-9][0-9]*)",
                                        "type": "string"
                                    },
                                    "Message": {
                                        "enum": [
                                            "Submitted",
                                            "Pending",
                                            "Approved"
                                        ],
                                        "type": "string"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetPrograms",
            "url": "https://xtrm.p.rapidapi.com/Programs/GetPrograms",
            "description": "<p>This allows you to get a list of your company\npayment programs or projects for use\nwith the Transfer Funds API request.</p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Programs/GetPrograms\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Programs/GetPrograms\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetProgramsResponse": {
                        "properties": {
                            "ProgramsResult": {
                                "properties": {
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "PaginationTotal": {
                                        "properties": {
                                            "RecordsToSkip": {
                                                "type": "integer"
                                            },
                                            "RecordsToTake": {
                                                "type": "integer"
                                            },
                                            "RecordsTotal": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "ProgramDetails": {
                                        "items": {
                                            "properties": {
                                                "IsClaim": {
                                                    "type": "string"
                                                },
                                                "ProgramCategory": {
                                                    "type": "string"
                                                },
                                                "ProgramId": {
                                                    "type": "integer"
                                                },
                                                "ProgramName": {
                                                    "type": "string"
                                                },
                                                "ProgramType": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "DeleteBankBeneficiary",
            "url": "https://xtrm.p.rapidapi.com/Bank/DeleteBankBeneficiary",
            "description": "Delete a beneficiary\u2019s linked bank. Get the required ``BankBeneficiaryID`` from the ``GetLinkedBankAccounts`` API call.</p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Bank/DeleteBankBeneficiary\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Bank/DeleteBankBeneficiary\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "DeleteBankBeneficiary": {
                        "properties": {
                            "DeleteBankBeneficiaryResult": {
                                "properties": {
                                    "BeneficiaryBankID": {
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "FundUserWalletUsingCreditCard",
            "url": "https://xtrm.p.rapidapi.com/Wallet/FundUserWalletUsingCreditCard",
            "description": "This allows companies to allow their connected users to fund their wallets using their credit card. **Please contact *support@xtrm.com* to enable this API call.**\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/FundUserWalletUsingCreditCard\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/FundUserWalletUsingCreditCard\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "FundUserWalletUsingCreditCardResponse": {
                        "properties": {
                            "FundUserWalletUsingCreditCardResult": {
                                "properties": {
                                    "Amount": {
                                        "description": "An amount representing some value in a specific currency, as a string\n",
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "pattern": "([0-9]*\\.?[0-9]*)",
                                        "type": "string"
                                    },
                                    "Fee": {
                                        "description": "An amount representing some value in a specific currency, as a string\n",
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "pattern": "([0-9]*\\.?[0-9]*)",
                                        "type": "string"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "TotalAmount": {
                                        "description": "An amount representing some value in a specific currency, as a string\n",
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "pattern": "([0-9]*\\.?[0-9]*)",
                                        "type": "string"
                                    },
                                    "TransactionID": {
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "UpdatePrograms",
            "url": "https://xtrm.p.rapidapi.com/Programs/UpdatePrograms",
            "description": "<p>Update your company payment programs or projects</p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Programs/UpdatePrograms\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Programs/UpdatePrograms\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "UpdateProgramsResponse": {
                        "properties": {
                            "UpdateProgramResult": {
                                "properties": {
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "ProgramID": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "CheckBeneficiaryExist",
            "url": "https://xtrm.p.rapidapi.com/Beneficiary/CheckBeneficiaryExist",
            "description": "<p>Check to see if an existing email address is associated with an XTRM account</p> <p>Often, companies have preexisting accounts within the XTRM ecosystem. This API finds all companies matching a particular name, and returns some minimal information about them.</p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Beneficiary/CheckBeneficiaryExist\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Beneficiary/CheckBeneficiaryExist\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "CheckBeneficiaryExistResponse": {
                        "properties": {
                            "CheckBeneficiaryExistResult": {
                                "properties": {
                                    "Beneficary": {
                                        "items": {
                                            "properties": {
                                                "AccountNumber": {
                                                    "description": "the `AccountID`, `IssuerAccountNumber`, `UserID` (and possibly some others) is a unique XTRM account identifier, starting with `SPN` for companies (usually remitters), or `PAT` for individual beneficiaries.\n",
                                                    "maxLength": 20,
                                                    "minLength": 1,
                                                    "pattern": "(SPN[1-9][0-9]*|PAT[1-9][0-9]*)",
                                                    "type": "string"
                                                },
                                                "Email": {
                                                    "description": "A valid email address of 100 characters or less\n",
                                                    "maxLength": 100,
                                                    "minLength": 0,
                                                    "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
                                                    "type": "string"
                                                },
                                                "MasteradminFirstName": {
                                                    "description": "A string from 2 to 40 characters in length\n",
                                                    "maxLength": 40,
                                                    "minLength": 2,
                                                    "type": "string"
                                                },
                                                "MasteradminLastName": {
                                                    "description": "A string from 2 to 40 characters in length\n",
                                                    "maxLength": 40,
                                                    "minLength": 2,
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "A string from 2 to 40 characters in length\n",
                                                    "maxLength": 40,
                                                    "minLength": 2,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetCompanyType",
            "url": "https://xtrm.p.rapidapi.com/Register/GetCompanyType",
            "description": "This API call returns standard company types.\nThe body consists of the empty JSON object&colon; ``{ }``\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Register/GetCompanyType\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Register/GetCompanyType\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetCompanyTypeResponse": {
                        "properties": {
                            "GetCompanyTypeResult": {
                                "properties": {
                                    "CompanyTypes": {
                                        "properties": {
                                            "CompanyTypeDetails": {
                                                "items": {
                                                    "properties": {
                                                        "CompanyType": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetConnectedStatus",
            "url": "https://xtrm.p.rapidapi.com/OTP/GetConnectedStatus",
            "description": "<p>This allows you to get the connected status of the remitter and the user or company. If they are not connected, you can use ``GetOTPAuthorizedVendor`` to send a one time password to the user or company to connect and authorize the remitter followed by ``ValidateOTPAuthorizeVendor`` to validate the one time password and complete the connection/authorization.</p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/OTP/GetConnectedStatus\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/OTP/GetConnectedStatus\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetConnectedStatusResponse": {
                        "properties": {
                            "GetConnectedStatusResult": {
                                "properties": {
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Status": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetBankWithdrawTypes",
            "url": "https://xtrm.p.rapidapi.com/Bank/GetBankWithdrawTypes",
            "description": "<p>Retrieves a list of bank withdrawal types for the bank such as wire, ACH, and similar systems.</p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Bank/GetBankWithdrawTypes\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Bank/GetBankWithdrawTypes\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetBankWithdrawTypesResponse": {
                        "properties": {
                            "GetBankWithdrawTypeResult": {
                                "properties": {
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "WithdrawTypes": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "LinkACHDebitBankBeneficiary",
            "url": "https://xtrm.p.rapidapi.com/Bank/LinkACHDebitBankBeneficiary",
            "description": "<h2>Link Beneficiary\u2019s Bank for ACH debit</h2>\n<p>ACH is a specific low-cost currency transfer system in the US and Canada;\nother countries and regions have similar systems, and this API call\nwill link banks using those transfer methods as well.</p>\n<p>Linking an ACH debit bank may require multiple steps.\nThe first step involves submitting five always-required pieces of\ninformation.<p>\n<h3>Required Information&#x3A;</h3>\n<ul style=\"font-weight: bolder\">\n<li>Bank account number</li> <li>Bank country code</li>\n<li>Beneficiary country code</li> <li>Beneficiary name</li>\n<li>Currency</li> </ul>\n<h3>Additional Jurisdiction Information</h3>\nIn some cases, additional information may be requested by the bank to\ncomplete the linkage depending on its regulatory and compliance\nenvironment. In such cases, the initial\nresponse may return with a 200 code, and the  ``LinkACHDebitBankBeneficiary&#x3A;<wbr/>request&#x3A;<wbr/>OperationStatus&#x3A;<wbr/>Success``\nmay be ``<b>false</b>``.\nThe ``Error`` field will have an ``ErrorMessage``,\nand report that an additional ``FieldName`` and\n``FieldLabel`` are required\n(possibly ``<b>\"RoutingNumber\"</b>`` and\n``<b>\"Routing Number\"</b>``, respectively.</p>\n<p>&nbsp;</p>\n<p>The call is then made a second time, filling out the\nrequired field (in our example, the field\n``LinkACHDebitBankBeneficiary&#x3A;<wbr />request&#x3A;<wbr />Beneficiary&#x3A;<wbr />BankDetails&#x3A;<wbr />RoutingNumber``).</p>\n<p>Unusual data will be specified as going into ``RemittanceLine3``\nor ``RemittanceLine4``. </p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Bank/LinkACHDebitBankBeneficiary\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Bank/LinkACHDebitBankBeneficiary\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "LinkACHDebitBankBeneficiaryResponse": {
                        "properties": {
                            "LinkACHDebitBankBeneficiaryResult": {
                                "properties": {
                                    "AccountIdentityLevel": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "BeneficiaryId": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "BeneficiaryStatus": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetUserWallets",
            "url": "https://xtrm.p.rapidapi.com/Wallet/GetUserWallets",
            "description": "Get the wallets for a particular user\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/GetUserWallets\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/GetUserWallets\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetUserWalletsResponse": {
                        "properties": {
                            "GetUserWalletsResult": {
                                "properties": {
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Wallets": {
                                        "items": {
                                            "properties": {
                                                "WalletCurrency": {
                                                    "description": "CurrencyCode: The three-letter ISO currency code\n",
                                                    "maxLength": 3,
                                                    "minLength": 3,
                                                    "pattern": "([a-zA-z]{3})",
                                                    "type": "string"
                                                },
                                                "WalletID": {
                                                    "maxLength": 20,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "WalletName": {
                                                    "maxLength": 100,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "ValidateOTPAuthorizeVendor",
            "url": "https://xtrm.p.rapidapi.com/OTP/ValidateOTPAuthorizeVendor",
            "description": "<p>This is used to validate the one time password to allow the user to transfer funds and is used in conjunction with &lsquo;Authorize Vendor\u2019</p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/OTP/ValidateOTPAuthorizeVendor\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/OTP/ValidateOTPAuthorizeVendor\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "ValidateOTPAuthorizeVendorResponse": {
                        "properties": {
                            "ValidateOTPAuthorizeVendorResult": {
                                "properties": {
                                    "Message": {
                                        "type": "string"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetAdvancedContactCountry",
            "url": "https://xtrm.p.rapidapi.com/Register/GetAdvancedContactCountry",
            "description": "<p>Return the list of countries</p>\n<p>&nbsp;</p>\n<p>This request has an empty body</p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Register/GetAdvancedContactCountry\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Register/GetAdvancedContactCountry\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "AdvancedContactCountryResponse": {
                        "properties": {
                            "GetAdvancedContactCountryResult": {
                                "properties": {
                                    "AdvancedContactCountry": {
                                        "properties": {
                                            "AdvancedContactCountryDetails": {
                                                "items": {
                                                    "properties": {
                                                        "CountryCode": {
                                                            "description": "CountryISO2: The two-character ISO country abbreviation\n",
                                                            "maxLength": 2,
                                                            "minLength": 2,
                                                            "pattern": "([a-zA-Z]{2})",
                                                            "type": "string"
                                                        },
                                                        "CountryName": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetPrepaidCardDetails",
            "url": "https://xtrm.p.rapidapi.com/GiftCard/GetPrepaidCardDetails",
            "description": "<p>NO DOCUMENTATION</p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/GiftCard/GetPrepaidCardDetails\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/GiftCard/GetPrepaidCardDetails\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetPrepaidCardDetailsResponse": {
                        "properties": {
                            "GetPrepaidCardDetailsResult": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "CreateProgram",
            "url": "https://xtrm.p.rapidapi.com/Programs/CreateProgram",
            "description": "<p>Fetch a list of your company payment programs\nor projects for use with the Transfer Funds\nAPI request.</p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Programs/CreateProgram\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Programs/CreateProgram\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "CreateProgramsResponse": {
                        "properties": {
                            "CreateProgramsResult": {
                                "properties": {
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "ProgramID": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "CreateBeneficiary",
            "url": "https://xtrm.p.rapidapi.com/Beneficiary/CreateBeneficiary",
            "description": "<h2>Create a beneficiary company</h2>\n<p>Beneficary companies will be reviewed for\nKYC (<i>Know Your Customer</i>) compliance.\nEnsure that the information is real and accurate.\n<b>Do not create test companies or emails on\nproduction servers.</b></p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Beneficiary/CreateBeneficiary\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Beneficiary/CreateBeneficiary\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "CreateBeneficiaryResponse": {
                        "properties": {
                            "CreateBeneficiaryResult": {
                                "properties": {
                                    "AccountIdentityLevel": {
                                        "type": "string"
                                    },
                                    "BeneficiaryID": {
                                        "description": "the `AccountID`, `IssuerAccountNumber`, `UserID` (and possibly some others) is a unique XTRM account identifier, starting with `SPN` for companies (usually remitters), or `PAT` for individual beneficiaries.\n",
                                        "maxLength": 20,
                                        "minLength": 1,
                                        "pattern": "(SPN[1-9][0-9]*|PAT[1-9][0-9]*)",
                                        "type": "string"
                                    },
                                    "ClientID": {
                                        "type": "string"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "SecretKey": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "SearchBank",
            "url": "https://xtrm.p.rapidapi.com/Bank/SearchBank",
            "description": "Search banks within a country using bank name\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Bank/SearchBank\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Bank/SearchBank\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "SearchBankResponse": {
                        "properties": {
                            "SearchBankResult": {
                                "properties": {
                                    "Banks": {
                                        "items": {
                                            "properties": {
                                                "BankName": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "PaginationTotal": {
                                        "properties": {
                                            "RecordsToSkip": {
                                                "type": "integer"
                                            },
                                            "RecordsToTake": {
                                                "type": "integer"
                                            },
                                            "RecordsTotal": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "TransferFund",
            "url": "https://xtrm.p.rapidapi.com/Fund/TransferFund",
            "description": "This allows you to make transfers from a company wallet to a beneficiary user wallet, (AnyPay\u2122) or pass-through payments to a beneficiaries Bank account or Prepaid Virtual Visa. When you make transfers, if the beneficiary does not have a wallet in that currency, one will be created automatically.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Fund/TransferFund\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Fund/TransferFund\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "TransferFundResponse": {
                        "properties": {
                            "TransferFundResult": {
                                "properties": {
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "TransactionDetail": {
                                        "items": {
                                            "properties": {
                                                "Amount": {
                                                    "description": "An amount representing some value in a specific currency, as a string\n",
                                                    "maxLength": 25,
                                                    "minLength": 1,
                                                    "pattern": "([0-9]*\\.?[0-9]*)",
                                                    "type": "string"
                                                },
                                                "Currency": {
                                                    "description": "CurrencyCode: The three-letter ISO currency code\n",
                                                    "maxLength": 3,
                                                    "minLength": 3,
                                                    "pattern": "([a-zA-z]{3})",
                                                    "type": "string"
                                                },
                                                "Fee": {
                                                    "description": "An amount representing some value in a specific currency, as a string\n",
                                                    "maxLength": 25,
                                                    "minLength": 1,
                                                    "pattern": "([0-9]*\\.?[0-9]*)",
                                                    "type": "string"
                                                },
                                                "IssuerTransactionId": {
                                                    "description": "This is a unique value from the issuer that identifies this specific transaction. XTRM returns this identifier unchanged in the transaction result. XTRM does not use this identifier; it is for the use of the issuer.\n",
                                                    "maxLength": 25,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "PaymentDate": {
                                                    "type": "string"
                                                },
                                                "PaymentStatus": {
                                                    "type": "string"
                                                },
                                                "PaymentTransactionId": {
                                                    "maxLength": 25,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "RecipientUserId": {
                                                    "description": "the `AccountID`, `IssuerAccountNumber`, `UserID` (and possibly some others) is a unique XTRM account identifier, starting with `SPN` for companies (usually remitters), or `PAT` for individual beneficiaries.\n",
                                                    "maxLength": 20,
                                                    "minLength": 1,
                                                    "pattern": "(SPN[1-9][0-9]*|PAT[1-9][0-9]*)",
                                                    "type": "string"
                                                },
                                                "RedemptionDetails": {
                                                    "properties": {
                                                        "RedemptionDetails": {
                                                            "properties": {
                                                                "Amount": {
                                                                    "description": "An amount representing some value in a specific currency, as a string\n",
                                                                    "maxLength": 25,
                                                                    "minLength": 1,
                                                                    "pattern": "([0-9]*\\.?[0-9]*)",
                                                                    "type": "string"
                                                                },
                                                                "Giftcard": {
                                                                    "type": "string"
                                                                },
                                                                "GiftcardImageUrl": {
                                                                    "type": "string"
                                                                },
                                                                "RecipientEmail": {
                                                                    "description": "A valid email address of 100 characters or less\n",
                                                                    "maxLength": 100,
                                                                    "minLength": 0,
                                                                    "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
                                                                    "type": "string"
                                                                },
                                                                "RecipientMobilePhoneNumber": {
                                                                    "description": "A phone number, represented as a string of 1 to 25 characters\n",
                                                                    "maxLength": 25,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                },
                                                                "RecipientName": {
                                                                    "description": "A string from 2 to 40 characters in length\n",
                                                                    "maxLength": 40,
                                                                    "minLength": 2,
                                                                    "type": "string"
                                                                },
                                                                "Reward": {
                                                                    "properties": {
                                                                        "CredentialList": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "CredentialType": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "Label": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "Type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "Value": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "Credentials": {
                                                                            "properties": {
                                                                                "ClaimCode": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "RedemptionInstructions": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "TimeProcessed": {
                                                                    "pattern": "([0123]?\\d\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Sept|Nov|Dec)\\s[12]\\d{3}\\s[012]?\\d:[0-5]\\d:[0-5]\\d)",
                                                                    "type": "string"
                                                                },
                                                                "TransactionNumber": {
                                                                    "type": "string"
                                                                },
                                                                "TransactionStatus": {
                                                                    "type": "string"
                                                                },
                                                                "method": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": [
                                                        "object",
                                                        "null"
                                                    ]
                                                },
                                                "TotalAmount": {
                                                    "description": "An amount representing some value in a specific currency, as a string\n",
                                                    "maxLength": 25,
                                                    "minLength": 1,
                                                    "pattern": "([0-9]*\\.?[0-9]*)",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetAdvancedContactState",
            "url": "https://xtrm.p.rapidapi.com/Register/GetAdvancedContactState",
            "description": "<p>For a particular country, get the list of\nregions (states, provinces, regions, <i>etc</i></p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Register/GetAdvancedContactState\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Register/GetAdvancedContactState\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "AdvancedContactStateResponse": {
                        "properties": {
                            "AdvancedContactStateResult": {
                                "properties": {
                                    "AdvancedContactState": {
                                        "properties": {
                                            "AdvancedContactStateDetails": {
                                                "items": {
                                                    "properties": {
                                                        "StateCode": {
                                                            "type": "string"
                                                        },
                                                        "StateName": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetNAICS",
            "url": "https://xtrm.p.rapidapi.com/Register/GetNAICS",
            "description": "## Get standard industry job types\n<p>This API call returns standard industry types</p>\n<p>The body consists of the empty JSON object:\n``{ }``</p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Register/GetNAICS\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Register/GetNAICS\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "NAICSResponse": {
                        "properties": {
                            "NAICSResult": {
                                "properties": {
                                    "NAICS": {
                                        "properties": {
                                            "NAICSDetails": {
                                                "items": {
                                                    "properties": {
                                                        "Industry": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetDigitalGiftCards",
            "url": "https://xtrm.p.rapidapi.com/GiftCard/GetDigitalGiftCards",
            "description": "<p>Gets the list of digital gift cards supported by XTRM. The list has a unique SKU which is used as input to the `userwithdrawfund` API call. Digital Gift Card is added as an additional withdraw fund method for the user. Available gift cards vary by currency.</p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/GiftCard/GetDigitalGiftCards\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/GiftCard/GetDigitalGiftCards\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetGiftCardResponse": {
                        "properties": {
                            "GetGiftCardResult": {
                                "properties": {
                                    "GiftCard": {
                                        "items": {
                                            "properties": {
                                                "brandName": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "disclaimer": {
                                                    "type": "string"
                                                },
                                                "imageUrls": {
                                                    "items": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "items": {
                                                    "items": {
                                                        "properties": {
                                                            "countries": {
                                                                "items": {
                                                                    "description": "CountryISO2: The two-character ISO country abbreviation\n",
                                                                    "maxLength": 2,
                                                                    "minLength": 2,
                                                                    "pattern": "([a-zA-Z]{2})",
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "currencyCode": {
                                                                "description": "CurrencyCode: The three-letter ISO currency code\n",
                                                                "maxLength": 3,
                                                                "minLength": 3,
                                                                "pattern": "([a-zA-z]{3})",
                                                                "type": "string"
                                                            },
                                                            "faceValue": {
                                                                "type": "number"
                                                            },
                                                            "maxValue": {
                                                                "type": "number"
                                                            },
                                                            "minValue": {
                                                                "type": "number"
                                                            },
                                                            "rewardName": {
                                                                "type": "string"
                                                            },
                                                            "rewardType": {
                                                                "type": "string"
                                                            },
                                                            "sku": {
                                                                "type": "string"
                                                            },
                                                            "status": {
                                                                "type": "string"
                                                            },
                                                            "valueType": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "terms": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "OperationStatus": {
                                "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                "properties": {
                                    "Errors": {
                                        "type": [
                                            "object",
                                            "null"
                                        ]
                                    },
                                    "Success": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "PaginationTotal": {
                                "properties": {
                                    "RecordsToSkip": {
                                        "type": "integer"
                                    },
                                    "RecordsToTake": {
                                        "type": "integer"
                                    },
                                    "RecordsTotal": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetOTPAuthorizedVendor",
            "url": "https://xtrm.p.rapidapi.com/OTP/GetOTPAuthorizedVendor",
            "description": "<p>This is used to generate an authentication one time password to allow the vendor (remitter) to be authorized by the user (beneficiary) to transfer funds, access wallets, access wallet transactions and withdraw funds.</p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/OTP/GetOTPAuthorizedVendor\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/OTP/GetOTPAuthorizedVendor\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetOTPAuthorizedVendorResponse": {
                        "properties": {
                            "GetOTPAuthorizedVendorResult": {
                                "properties": {
                                    "Message": {
                                        "type": "string"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "FundCompanyWalletUsingACHDebit",
            "url": "https://xtrm.p.rapidapi.com/Wallet/FundCompanyWalletUsingACHDebit",
            "description": "This API call allows companies to fund their own wallets using their ACH debit linked banks. **Funding using ACH debit is instantaneous. However, ACH debit may take from 3 to 5 business days to complete**\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/FundCompanyWalletUsingACHDebit\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/FundCompanyWalletUsingACHDebit\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "FundWalletUsingACHDebitResponse": {
                        "properties": {
                            "FundWalletUsingACHDebitResult": {
                                "properties": {
                                    "Amount": {
                                        "description": "An amount representing some value in a specific currency, as a string\n",
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "pattern": "([0-9]*\\.?[0-9]*)",
                                        "type": "string"
                                    },
                                    "Currency": {
                                        "description": "CurrencyCode: The three-letter ISO currency code\n",
                                        "maxLength": 3,
                                        "minLength": 3,
                                        "pattern": "([a-zA-z]{3})",
                                        "type": "string"
                                    },
                                    "Fee": {
                                        "description": "An amount representing some value in a specific currency, as a string\n",
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "pattern": "([0-9]*\\.?[0-9]*)",
                                        "type": "string"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Status": {
                                        "description": "This payment is *pending* until the ACH transaction has been completed.\n",
                                        "type": "string"
                                    },
                                    "TotalAmount": {
                                        "description": "An amount representing some value in a specific currency, as a string\n",
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "pattern": "([0-9]*\\.?[0-9]*)",
                                        "type": "string"
                                    },
                                    "TransactionID": {
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetLinkedBankAccounts",
            "url": "https://xtrm.p.rapidapi.com/Bank/GetLinkedBankAccounts",
            "description": "Fetch a list of the beneficiary linked bank accounts. This is used when making direct pass through payments to a beneficiary\u2019s bank account.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Bank/GetLinkedBankAccounts\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Bank/GetLinkedBankAccounts\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetLinkedBankAccountsResponse": {
                        "properties": {
                            "GetLinkedBankAccountResult": {
                                "properties": {
                                    "Beneficiary": {
                                        "properties": {
                                            "BeneficiaryDetails": {
                                                "items": {
                                                    "properties": {
                                                        "BankDetails": {
                                                            "properties": {
                                                                "BeneficiaryBankInformation": {
                                                                    "properties": {
                                                                        "ACHDebitApprovalStatus": {
                                                                            "description": "**optional**\n",
                                                                            "type": [
                                                                                "string",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "AccountNumber": {
                                                                            "type": "string"
                                                                        },
                                                                        "BankBeneficiaryStatus": {
                                                                            "description": "**optional**\n",
                                                                            "type": [
                                                                                "string",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "BankName": {
                                                                            "type": "string"
                                                                        },
                                                                        "BranchName": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "BeneficiaryId": {
                                                            "type": "string"
                                                        },
                                                        "BeneficiaryName": {
                                                            "description": "A string from 2 to 40 characters in length\n",
                                                            "maxLength": 40,
                                                            "minLength": 2,
                                                            "type": "string"
                                                        },
                                                        "Country": {
                                                            "description": "Country: Name of the country, from 1 to 25 characters\n",
                                                            "maxLength": 25,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "Currency": {
                                                            "description": "CurrencyCode: The three-letter ISO currency code\n",
                                                            "maxLength": 3,
                                                            "minLength": 3,
                                                            "pattern": "([a-zA-z]{3})",
                                                            "type": "string"
                                                        },
                                                        "PaymentMethods": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "TransferFee": {
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "FundWalletUsingACHDebit",
            "url": "https://xtrm.p.rapidapi.com/Wallet/FundWalletUsingACHDebit",
            "description": "This API call allows companies to fund their own wallets using ACH (or systems similar to ACH) debit linked banks. **Funding using ACH debit is instantaneous. However, ACH debit may take from 3 to 5 business days to complete**\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/FundWalletUsingACHDebit\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/FundWalletUsingACHDebit\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "FundWalletUsingACHDebitResponse": {
                        "properties": {
                            "FundWalletUsingACHDebitResult": {
                                "properties": {
                                    "Amount": {
                                        "description": "An amount representing some value in a specific currency, as a string\n",
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "pattern": "([0-9]*\\.?[0-9]*)",
                                        "type": "string"
                                    },
                                    "Currency": {
                                        "description": "CurrencyCode: The three-letter ISO currency code\n",
                                        "maxLength": 3,
                                        "minLength": 3,
                                        "pattern": "([a-zA-z]{3})",
                                        "type": "string"
                                    },
                                    "Fee": {
                                        "description": "An amount representing some value in a specific currency, as a string\n",
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "pattern": "([0-9]*\\.?[0-9]*)",
                                        "type": "string"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Status": {
                                        "description": "This payment is *pending* until the ACH transaction has been completed.\n",
                                        "type": "string"
                                    },
                                    "TotalAmount": {
                                        "description": "An amount representing some value in a specific currency, as a string\n",
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "pattern": "([0-9]*\\.?[0-9]*)",
                                        "type": "string"
                                    },
                                    "TransactionID": {
                                        "maxLength": 25,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetGiftCardDetails",
            "url": "https://xtrm.p.rapidapi.com/GiftCard/GetGiftCardDetails",
            "description": "<p>Gets the specifics of a gift card supported by XTRM. The list has a unique SKU which is used as input to the `userwithdrawfund` API call. </p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/GiftCard/GetGiftCardDetails\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/GiftCard/GetGiftCardDetails\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetGiftCardResponse": {
                        "properties": {
                            "GetGiftCardResult": {
                                "properties": {
                                    "GiftCard": {
                                        "items": {
                                            "properties": {
                                                "brandName": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "disclaimer": {
                                                    "type": "string"
                                                },
                                                "imageUrls": {
                                                    "items": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "items": {
                                                    "items": {
                                                        "properties": {
                                                            "countries": {
                                                                "items": {
                                                                    "description": "CountryISO2: The two-character ISO country abbreviation\n",
                                                                    "maxLength": 2,
                                                                    "minLength": 2,
                                                                    "pattern": "([a-zA-Z]{2})",
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "currencyCode": {
                                                                "description": "CurrencyCode: The three-letter ISO currency code\n",
                                                                "maxLength": 3,
                                                                "minLength": 3,
                                                                "pattern": "([a-zA-z]{3})",
                                                                "type": "string"
                                                            },
                                                            "faceValue": {
                                                                "type": "number"
                                                            },
                                                            "maxValue": {
                                                                "type": "number"
                                                            },
                                                            "minValue": {
                                                                "type": "number"
                                                            },
                                                            "rewardName": {
                                                                "type": "string"
                                                            },
                                                            "rewardType": {
                                                                "type": "string"
                                                            },
                                                            "sku": {
                                                                "type": "string"
                                                            },
                                                            "status": {
                                                                "type": "string"
                                                            },
                                                            "valueType": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "terms": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "OperationStatus": {
                                "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                "properties": {
                                    "Errors": {
                                        "type": [
                                            "object",
                                            "null"
                                        ]
                                    },
                                    "Success": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "UserWithdrawFund",
            "url": "https://xtrm.p.rapidapi.com/Fund/UserWithdrawFund",
            "description": "This allows beneficiary to withdraw funds using one of the payment methods from their XTRM 'AnyPay\u2122' Digital Wallet. On UserWithdrawFund call a 6 digit one time password (OTP) is generated and sent to user. Get the 6 digit OTP value from the user in your application and resubmit UserWithdrawFund with the OTP included.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Fund/UserWithdrawFund\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Fund/UserWithdrawFund\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "UserWithdrawFundResponse": {
                        "properties": {
                            "OperationStatus": {
                                "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                "properties": {
                                    "Errors": {
                                        "type": [
                                            "object",
                                            "null"
                                        ]
                                    },
                                    "Success": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "PaymentDate": {
                                "type": "string"
                            },
                            "PaymentStatus": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "ProgramCategory",
            "url": "https://xtrm.p.rapidapi.com/Programs/ProgramCategory",
            "description": "<p>Fetch a list of program categories.\nUsed along with the program type to\ncreate new programs.</p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Programs/ProgramCategory\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Programs/ProgramCategory\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetProgramCategoryResponse": {
                        "properties": {
                            "ProgramCategoryResult": {
                                "properties": {
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "PaginationTotal": {
                                        "properties": {
                                            "RecordsToSkip": {
                                                "type": "integer"
                                            },
                                            "RecordsToTake": {
                                                "type": "integer"
                                            },
                                            "RecordsTotal": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "ProgramCategory": {
                                        "properties": {
                                            "ProgramCategoryDetails": {
                                                "items": {
                                                    "properties": {
                                                        "CategoryID": {
                                                            "type": "integer"
                                                        },
                                                        "CategoryName": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetIdentificationType",
            "url": "https://xtrm.p.rapidapi.com/Register/GetIdentificationType",
            "description": "<p>Get the list of identification types</p>\n<p>&nbsp;</p>\n<p>This request has an empty body</p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Register/GetIdentificationType\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Register/GetIdentificationType\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "IdentificationTypeResponse": {
                        "properties": {
                            "IndentificationTypeResult": {
                                "properties": {
                                    "IdentificationType": {
                                        "properties": {
                                            "IdentificationTypeDetails": {
                                                "items": {
                                                    "properties": {
                                                        "IdentificationType": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetAdvancedContactJobTitles",
            "url": "https://xtrm.p.rapidapi.com/Register/GetAdvancedContactJobTitles",
            "description": "<p>Fetch a list of standard job titles</p>\n<p>&nbsp</p>\n<p>This request takes an empty request body.</p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Register/GetAdvancedContactJobTitles\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Register/GetAdvancedContactJobTitles\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "JobTitlesResponse": {
                        "properties": {
                            "JobTitlesResult": {
                                "properties": {
                                    "JobTitles": {
                                        "properties": {
                                            "JobTitlesDetails": {
                                                "items": {
                                                    "properties": {
                                                        "JobTitle": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetCompanyWalletTransactions",
            "url": "https://xtrm.p.rapidapi.com/Wallet/GetCompanyWalletTransactions",
            "description": "Get all the wallet transactions. There can be one or more wallets.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/GetCompanyWalletTransactions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/GetCompanyWalletTransactions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetCompanyWalletTransactionsResponse": {
                        "properties": {
                            "GetCompanyWalletTransactionsResult": {
                                "properties": {
                                    "Transactions": {
                                        "items": {
                                            "properties": {
                                                "Amount": {
                                                    "description": "An amount representing some value in a specific currency, as a string\n",
                                                    "maxLength": 25,
                                                    "minLength": 1,
                                                    "pattern": "([0-9]*\\.?[0-9]*)",
                                                    "type": "string"
                                                },
                                                "Balance": {
                                                    "description": "An amount representing some value in a specific currency, as a string\n",
                                                    "maxLength": 25,
                                                    "minLength": 1,
                                                    "pattern": "([0-9]*\\.?[0-9]*)",
                                                    "type": "string"
                                                },
                                                "Currency": {
                                                    "description": "CurrencyCode: The three-letter ISO currency code\n",
                                                    "maxLength": 3,
                                                    "minLength": 3,
                                                    "pattern": "([a-zA-z]{3})",
                                                    "type": "string"
                                                },
                                                "Description": {
                                                    "type": "string"
                                                },
                                                "PaymentType": {
                                                    "type": "string"
                                                },
                                                "ProgramName": {
                                                    "type": "string"
                                                },
                                                "TransactionDate": {
                                                    "type": "string"
                                                },
                                                "TransactionID": {
                                                    "maxLength": 25,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetExchangeRate",
            "url": "https://xtrm.p.rapidapi.com/Payment/GetExchangeRate",
            "description": "<p>Fetches the real-time exchange rate between two currencies. This rate is real-time, and may fluctuate slightly between a call to ``GetExchangeRate`` and ``BookExchange``.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Payment/GetExchangeRate\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Payment/GetExchangeRate\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetExchangeRateMethodsResponse": {
                        "properties": {
                            "ExchangeRateMethodResult": {
                                "properties": {
                                    "ExchangeRateMethods": {
                                        "properties": {
                                            "ExchangeRateMethodsDetail": {
                                                "items": {
                                                    "properties": {
                                                        "Amount": {
                                                            "maxLength": 25,
                                                            "minLength": 1,
                                                            "pattern": "([0-9]*\\.?[0-9]*)",
                                                            "type": "string"
                                                        },
                                                        "ExchangeRate": {
                                                            "maxLength": 25,
                                                            "minLength": 1,
                                                            "pattern": "(^[0-9]*\\.?[0-9]*$)",
                                                            "type": "string"
                                                        },
                                                        "FromCurrency": {
                                                            "description": "CurrencyCode: The three-letter ISO currency code\n",
                                                            "maxLength": 3,
                                                            "minLength": 3,
                                                            "pattern": "([a-zA-z]{3})",
                                                            "type": "string"
                                                        },
                                                        "IssuerAccountNumber": {
                                                            "description": "the `AccountID`, `IssuerAccountNumber`, `UserID` (and possibly some others) is a unique XTRM account identifier, starting with `SPN` for companies (usually remitters), or `PAT` for individual beneficiaries.\n",
                                                            "maxLength": 20,
                                                            "minLength": 1,
                                                            "pattern": "(SPN[1-9][0-9]*|PAT[1-9][0-9]*)",
                                                            "type": "string"
                                                        },
                                                        "ToCurrency": {
                                                            "description": "CurrencyCode: The three-letter ISO currency code\n",
                                                            "maxLength": 3,
                                                            "minLength": 3,
                                                            "pattern": "([a-zA-z]{3})",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "LinkBankBeneficiary",
            "url": "https://xtrm.p.rapidapi.com/Bank/LinkBankBeneficiary",
            "description": "# Link Bank Beneficiary\n<p>Linking a bank beneficiary <i><b>may</b></i> require multiple steps.\nDifferent jurisdictions may require different or additional\npieces of information.\nThe first step involves submitting five always-required pieces of\ninformation.<p>\n<h3>Required Information&#x3A;</h3>\n<ul style=\"font-weight: bolder\">\n<li>Bank account number</li> <li>Bank country code</li>\n<li>Beneficiary country code</li> <li>Beneficiary name</li>\n<li>Currency</li> </ul>\n<h3>Additional Jurisdiction Information</h3>\n<p>In some cases, additional information may be requested by the bank to\ncomplete the linkage depending on its regulatory and compliance\nenvironment. In such cases, the initial\nresponse may return with a 200 code, and the\n``LinkBankBeneficiary&#x3A;<wbr />request&#x3A;<wbr />OperationStatus&#x3A;Success``\nmay be ``**false**``.\nThe ``Error`` field will have an ``ErrorMessage``,\nand report that an additional ``FieldName`` and\n``FieldLabel`` are required\n(possibly ``<b>\"RoutingNumber\"</b>`` and\n``<b>\"Routing Number\"</b>``, respectively.</p>\n<p>&nbsp;</p>\n<p>The call is then made a second time, filling out the\nrequired field (in our example, the field\n``LinkBankBeneficiary&#x3A;<wbr />request&#x3A;<wbr />Beneficiary&#x3A;<wbr />BankDetails&#x3A;RoutingNumber``).</p>\n<p>Unusual data will be specified as going into ``RemittanceLine3``\nor ``RemittanceLine4``. </p>\n<h3>Exotic Currency Requirements</h3>\n<p>Some currencies will require currency-specific information to remit funds.\nThis follows the two-step process above, specifying what additional\ndata items are required to complete the linkage.</p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Bank/LinkBankBeneficiary\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Bank/LinkBankBeneficiary\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "LinkBankBeneficiaryResponse": {
                        "properties": {
                            "LinkBankBeneficiaryResult": {
                                "properties": {
                                    "AccountIdentityLevel": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "BeneficiaryId": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "BeneficiaryStatus": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "ProgramType",
            "url": "https://xtrm.p.rapidapi.com/Programs/ProgramType",
            "description": "<p>Return the available program types</p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Programs/ProgramType\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Programs/ProgramType\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetProgramTypeResponse": {
                        "properties": {
                            "ProgramTypeResult": {
                                "properties": {
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "PaginationTotal": {
                                        "properties": {
                                            "RecordsToSkip": {
                                                "type": "integer"
                                            },
                                            "RecordsToTake": {
                                                "type": "integer"
                                            },
                                            "RecordsTotal": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "ProgramType": {
                                        "properties": {
                                            "ProgramTypeDetail": {
                                                "items": {
                                                    "properties": {
                                                        "SubCategoryID": {
                                                            "type": "integer"
                                                        },
                                                        "SubCategoryName": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetUserWalletTransactionDetails",
            "url": "https://xtrm.p.rapidapi.com/Wallet/GetUserWalletTransactionDetails",
            "description": "Get details of a specific transaction using the unique transaction ID with the `GetUserWalletTransactions` API call.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/GetUserWalletTransactionDetails\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/GetUserWalletTransactionDetails\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetUserTransactionDetailsReponse": {
                        "properties": {
                            "GetUserTransactionDetailsResult": {
                                "properties": {
                                    "Field": {
                                        "items": {
                                            "properties": {
                                                "Name": {
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "type": "array"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetBeneficiaries",
            "url": "https://xtrm.p.rapidapi.com/Beneficiary/GetBeneficiaries",
            "description": "Fetch a list of beneficiaries for the company.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Beneficiary/GetBeneficiaries\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Beneficiary/GetBeneficiaries\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetBeneficiariesResponse": {
                        "properties": {
                            "BeneficiaryResult": {
                                "properties": {
                                    "BeneficiaryDetail": {
                                        "items": {
                                            "properties": {
                                                "BeneficiaryCompanyName": {
                                                    "type": "string"
                                                },
                                                "BeneficiaryID": {
                                                    "description": "the `AccountID`, `IssuerAccountNumber`, `UserID` (and possibly some others) is a unique XTRM account identifier, starting with `SPN` for companies (usually remitters), or `PAT` for individual beneficiaries.\n",
                                                    "maxLength": 20,
                                                    "minLength": 1,
                                                    "pattern": "(SPN[1-9][0-9]*|PAT[1-9][0-9]*)",
                                                    "type": "string"
                                                },
                                                "BeneficiarySalesforceId": {
                                                    "type": "string"
                                                },
                                                "OtherPartnerID": {
                                                    "type": "string"
                                                },
                                                "PartnerAccountManager": {
                                                    "description": "A string from 2 to 40 characters in length\n",
                                                    "maxLength": 40,
                                                    "minLength": 2,
                                                    "type": "string"
                                                },
                                                "Region": {
                                                    "description": "Region: A jurisdiction such as state, province, or region\n",
                                                    "maxLength": 50,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "PaginationTotal": {
                                "properties": {
                                    "RecordsToSkip": {
                                        "type": "integer"
                                    },
                                    "RecordsToTake": {
                                        "type": "integer"
                                    },
                                    "RecordsTotal": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "BookExchange",
            "url": "https://xtrm.p.rapidapi.com/Payment/BookExchange",
            "description": "Exchange currency. Funds in the original currency are withdrawn from a wallet (that holds the original currency), and exchanged for funds in a second currency. Those funds are then deposited into a second wallet (that holds the new currency).\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Payment/BookExchange\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Payment/BookExchange\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "BookExchangeMethodsResponse": {
                        "properties": {
                            "BookExchangeMethodResult": {
                                "properties": {
                                    "BookExchangeMethodDetail": {
                                        "properties": {
                                            "CreditTransactionID": {
                                                "maxLength": 25,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "DebitTransactionID": {
                                                "maxLength": 25,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "PaymentDate": {
                                                "type": "string"
                                            },
                                            "PaymentStatus": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetUserWalletTransactionsByRemitter",
            "url": "https://xtrm.p.rapidapi.com/Wallet/GetUserWalletTransactionsByRemitter",
            "description": "Fetch a list of transactions of a specific user and remitter. Records will contain amount sent by the remitter to the user.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/GetUserWalletTransactionsByRemitter\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/GetUserWalletTransactionsByRemitter\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "GetUserWalletTransactionsByRemitterResponse": {
                        "properties": {
                            "GetUserWalletTransactionsByRemitterResult": {
                                "properties": {
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "PaginationTotal": {
                                        "properties": {
                                            "RecordsToSkip": {
                                                "type": "integer"
                                            },
                                            "RecordsToTake": {
                                                "type": "integer"
                                            },
                                            "RecordsTotal": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Transactions": {
                                        "items": {
                                            "properties": {
                                                "Amount": {
                                                    "description": "An amount representing some value in a specific currency, as a string\n",
                                                    "maxLength": 25,
                                                    "minLength": 1,
                                                    "pattern": "([0-9]*\\.?[0-9]*)",
                                                    "type": "string"
                                                },
                                                "CompanyName": {
                                                    "type": "string"
                                                },
                                                "Currency": {
                                                    "description": "CurrencyCode: The three-letter ISO currency code\n",
                                                    "maxLength": 3,
                                                    "minLength": 3,
                                                    "pattern": "([a-zA-z]{3})",
                                                    "type": "string"
                                                },
                                                "Description": {
                                                    "type": "string"
                                                },
                                                "PaymentMethod": {
                                                    "type": "string"
                                                },
                                                "ProgramName": {
                                                    "type": "string"
                                                },
                                                "TransactionDate": {
                                                    "type": "string"
                                                },
                                                "TransactionID": {
                                                    "maxLength": 25,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "UpdateUserWallet",
            "url": "https://xtrm.p.rapidapi.com/Wallet/UpdateUserWallet",
            "description": "Change the name of a user\u2019s wallet. The other elements of a wallet (the `WalletID` and currency) cannot be changed.\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/UpdateUserWallet\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xtrm.p.rapidapi.com/Wallet/UpdateUserWallet\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xtrm.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "UpdateUserWalletResponse": {
                        "properties": {
                            "UpdateUserWalletResult": {
                                "properties": {
                                    "OperationStatus": {
                                        "description": "Errors are returned variously by different calls. Possibilities include a string, an array of string tuples, or the null value.\n",
                                        "properties": {
                                            "Errors": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "Success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Status": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        }
    ]
}