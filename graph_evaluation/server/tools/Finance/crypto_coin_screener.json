{
    "product_id": "api_044981f2-94a5-4745-bae6-232415c5ca8e",
    "tool_description": "API to filter for crypto coins based on various filters",
    "home_url": "https://rapidapi.com/visox/api/crypto-coin-screener/",
    "name": "Crypto coin screener",
    "title": "Crypto coin screener",
    "pricing": "FREEMIUM",
    "tool_name": "Crypto coin screener",
    "score": null,
    "host": "crypto-coin-screener.p.rapidapi.com",
    "api_list": [
        {
            "name": "markets-filter",
            "url": "https://crypto-coin-screener.p.rapidapi.com/v1/api/markets",
            "description": "Returns a ordered list (at most 100) of crypto coins based on the specified filters and in sorted order.\n\n**Filters**\nThere are many filters which can be combined\nA basic condition is `ValueStaticComparison` which compares some value (for example close price of the coin) with some specified value in some specified time.\nTime is defined via `dayOffset` where `0` means today `1` means yesterday.\nThe API uses UTC time zone. \n`value` is a static decimal value which is used to compare to the property.\n```\n  {\n    \"ValueStaticComparison\": {\n      \"property\": {\n        \"DirectMarketFilterProperty\": {\n          \"PriceProperty\": {}\n        }\n      },\n      \"value\": 1,\n      \"isHigher\": true,\n      \"dayOffset\": 1\n    }\n  }\n```\n\nFilter `ValueInTimeComparison` compares 2 values of same property in different times.\nThis example will return only coins which closing price of yesterday was higher than 8 days ago.\nIf you would like to filter only for coins which price increased by 20% you need to set the `factor` to 1.2\n```\n{\n  \"ValueInTimeComparison\": {\n    \"property\": {\n      \"DirectMarketFilterProperty\": {\n        \"PriceProperty\": {}\n      }\n    },\n    \"factor\": 1,\n    \"isHigher\": true,\n    \"dayOffset1\": 1,\n    \"dayOffset2\": 8\n  }\n}\n```\n\nA simple filter `CoinAge` filters for coins which a specific age counted in days.\n```\n{\n  \"CoinAge\": {\n    \"days\": 30,\n    \"isOlder\": true\n  }\n}\n```\n\nAnother simple filter is `CoinName` which allows to filter for coins based on name or symbol case-insensitive.\n```\n{\n  \"CoinName\": {\n    \"infix\": \"tether\"\n  }\n}\n```\n\nFilter `IsExchangeMarket` limits coins which are available on a specific website like PancakeSwap. See example endpoint response part `exchangeMarkets` to discover what kind of values you can use\n```\n{\n  \"IsExchangeMarket\": {\n    \"exchangeMarketNames\": [\n      \"PancakeSwap (v2)\"\n    ]\n  }\n}\n```\n\nLet me know if you need more filters.\n\n**Properties**\nThe filters use properties like `price` to describe how the filter should work.\nThe posible filters are:\n```\n \"DirectMarketFilterProperty\": {\n        \"PriceProperty\": {}\n      }\n \"DirectMarketFilterProperty\": {\n        \"DailyVolumeProperty\": {}\n      }\n \"DirectMarketFilterProperty\": {\n        \"CirculatingSupplyProperty\": {}\n      }\n \"DirectMarketFilterProperty\": {\n        \"TotalSupplyProperty\": {}\n      }\n \"DirectMarketFilterProperty\": {\n        \"MaxSupplyProperty\": {}\n      }\n \"DirectMarketFilterProperty\": {\n        \"HoldersTop50AllMarketPartProperty\": {}\n      }\n \"DirectMarketFilterProperty\": {\n        \"HoldersTop50PublicOnlyMarketPartProperty\": {}\n      }\n \"DirectMarketFilterProperty\": {\n        \"HoldersTop50ContractOnlyMarketPartProperty\": {}\n      }\n \"DirectMarketFilterProperty\": {\n        \"HoldersTop50PrivateOnlyMarketPartProperty\": {}\n      }\n \"DirectMarketFilterProperty\": {\n        \"HoldersTop50AllOver1PercentMarketPartProperty\": {}\n      }\n \"DirectMarketFilterProperty\": {\n        \"HoldersTop50AllOver10PercentMarketPartProperty\": {}\n      }\n\n```\n\nDerived properties are:\n```\n \"DerivedMarketFilterProperty\": {\n        \"MarketCapCirculatingProperty\": {}\n      }\n \"DerivedMarketFilterProperty\": {\n        \"MarketCapTotalProperty\": {}\n      }\n \"DerivedMarketFilterProperty\": {\n        \"MarketCapMaxProperty\": {}\n      }\n```\n\nRatio/compare based properties are\"\n```\n \"RatioMarketFilterProperty\": {\n        \"CirculatingToTotalSupplyProperty\": {}\n      }\n \"RatioMarketFilterProperty\": {\n        \"TotalToMaxSupplyProperty\": {}\n      }\n```\n\n**Sorting**\nThere are 2 sorting options.\n`BasicSort`:\n```\n\"BasicSort\": {\n\t\t\t\"property\": {\n\t\t\t\t\"DirectMarketFilterProperty\": {\n\t\t\t\t\t\"DailyVolumeProperty\": {\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"asc\": false,\n\t\t\t\"dayOffset\": 1\n\t\t}\n```\nAnd `ValueChangeSort`\n```\n{\n  \"ValueChangeSort\": {\n    \"property\": {\n      \"DirectMarketFilterProperty\": {\n        \"PriceProperty\": {}\n      }\n    },\n    \"asc\": false,\n    \"day1\": 1,\n    \"day2\": 8\n  }\n}\n```\n`ValueChangeSort` sort by the change in value of a specified property in the specified days range. The example above sort by price change in last 7 days where highest positive price change goes first.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://crypto-coin-screener.p.rapidapi.com/v1/api/markets\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crypto-coin-screener.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://crypto-coin-screener.p.rapidapi.com/v1/api/markets\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crypto-coin-screener.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        }
    ]
}