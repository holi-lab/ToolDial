{
    "product_id": "api_add91339-31ce-40a6-8718-0bcf117d8f78",
    "tool_description": "This API helps to perform some computations on dates: accrual factors, maturity dates, contract dates,  and other due dates, datetime delta, time zones conversion, recurring dates, and much more. ",
    "home_url": "https://rapidapi.com/finrmsoft/api/date-calculator2/",
    "name": "Date Calculator",
    "title": "Date Calculator",
    "pricing": "FREEMIUM",
    "tool_name": "Date Calculator",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 984,
        "avgSuccessRate": 100,
        "popularityScore": 9,
        "__typename": "Score"
    },
    "host": "date-calculator2.p.rapidapi.com",
    "api_list": [
        {
            "name": "year_fractions",
            "url": "https://date-calculator2.p.rapidapi.com/datetime/dcc/year_fractions",
            "description": "Computes and returns the year fraction for a period time in the specified day count convention.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "start_date",
                    "type": "STRING",
                    "description": "The start date of the period time in YYYY-MM-DD format",
                    "default": "2021-03-31"
                },
                {
                    "name": "end_date",
                    "type": "STRING",
                    "description": "The end date of the period time in YYYY-MM-DD format",
                    "default": "2021-04-30"
                },
                {
                    "name": "dcc_types",
                    "type": "STRING",
                    "description": "The day count convention",
                    "default": "Actual360"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://date-calculator2.p.rapidapi.com/datetime/dcc/year_fractions\"\nquerystring = {\"start_date\": \"2021-03-31\", \"end_date\": \"2021-04-30\", \"dcc_types\": \"Actual360\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"date-calculator2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://date-calculator2.p.rapidapi.com/datetime/dcc/year_fractions\"\nquerystring = {\"start_date\": \"2021-03-31\", \"end_date\": \"2021-04-30\", \"dcc_types\": \"Actual360\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"date-calculator2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "year_fractions": [
                    {
                        "day_count_convention": "Actual360",
                        "year_fraction": 0.08333333333333333
                    }
                ]
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "time_zone_converter",
            "url": "https://date-calculator2.p.rapidapi.com/datetime/timezone/conversion",
            "description": "Converts time from time zone to another taking into account Daylight Saving Time (DST) and accepts present, past, or future dates.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "datetime",
                    "type": "STRING",
                    "description": "The date time in  [ISO 8601 format](https://www.w3.org/TR/NOTE-datetime)",
                    "default": "2021-03-21T20:10:00"
                }
            ],
            "optional_parameters": [
                {
                    "name": "from_tzname",
                    "type": "STRING",
                    "description": "The time zone name",
                    "default": "UTC"
                },
                {
                    "name": "to_tzname",
                    "type": "STRING",
                    "description": "The time zone name",
                    "default": "UTC"
                }
            ],
            "code": "import requests\n\nurl = \"https://date-calculator2.p.rapidapi.com/datetime/timezone/conversion\"\nquerystring = {\"from_tzname\": \"UTC\", \"to_tzname\": \"UTC\", \"datetime\": \"2021-03-21T20:10:00\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"date-calculator2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://date-calculator2.p.rapidapi.com/datetime/timezone/conversion\"\nquerystring = {\"from_tzname\": \"UTC\", \"to_tzname\": \"UTC\", \"datetime\": \"2021-03-21T20:10:00\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"date-calculator2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "tzconversion": {
                    "from": {
                        "timezone": "UTC",
                        "datetime": "2021-03-21T20:10:00+00:00"
                    },
                    "to": {
                        "timezone": "UTC",
                        "datetime": "2021-03-21T20:10:00+00:00"
                    }
                }
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "datedif",
            "url": "https://date-calculator2.p.rapidapi.com/datetime/datedif",
            "description": "Computes the number of  years, months, days, hours, minutes, seconds or microseconds between two dates (end_date - start_date).",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "end_date",
                    "type": "STRING",
                    "description": "The start date w/ or w/o the time part in  [ISO 8601 format](https://www.w3.org/TR/NOTE-datetime)",
                    "default": "2021-09-30T14:00:55"
                },
                {
                    "name": "start_date",
                    "type": "STRING",
                    "description": "The start date w/ or w/o the time part in  [ISO 8601 format](https://www.w3.org/TR/NOTE-datetime)",
                    "default": "2021-08-30T08:01:00"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://date-calculator2.p.rapidapi.com/datetime/datedif\"\nquerystring = {\"end_date\": \"2021-09-30T14:00:55\", \"start_date\": \"2021-08-30T08:01:00\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"date-calculator2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://date-calculator2.p.rapidapi.com/datetime/datedif\"\nquerystring = {\"end_date\": \"2021-09-30T14:00:55\", \"start_date\": \"2021-08-30T08:01:00\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"date-calculator2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "datedif": {
                    "months": 1,
                    "hours": 5,
                    "minutes": 59,
                    "seconds": 55
                }
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "eomonth",
            "url": "https://date-calculator2.p.rapidapi.com/datetime/eomonth",
            "description": "Computes and returns a date on the last day of the month in the future or past. This resource behave exactly as Excel EOMONTH function.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "months",
                    "type": "NUMBER",
                    "description": "The number of months before or after start_date. A positive value for months yields a future date; a negative value yields a past date.",
                    "default": 1
                },
                {
                    "name": "start_date",
                    "type": "STRING",
                    "description": "The start date w/ or w/o the time part in  [ISO 8601 format](https://www.w3.org/TR/NOTE-datetime)",
                    "default": "2021-09-21"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://date-calculator2.p.rapidapi.com/datetime/eomonth\"\nquerystring = {\"months\": 1, \"start_date\": \"2021-09-21\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"date-calculator2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://date-calculator2.p.rapidapi.com/datetime/eomonth\"\nquerystring = {\"months\": 1, \"start_date\": \"2021-09-21\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"date-calculator2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "eomonth": "2021-10-31"
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "now",
            "url": "https://date-calculator2.p.rapidapi.com/datetime/timezone/now",
            "description": "Computes and returns local time zone taking into account Daylight Saving Time (DST).",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "tzname",
                    "type": "STRING",
                    "description": "The time zone name",
                    "default": "UTC"
                }
            ],
            "code": "import requests\n\nurl = \"https://date-calculator2.p.rapidapi.com/datetime/timezone/now\"\nquerystring = {\"tzname\": \"UTC\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"date-calculator2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://date-calculator2.p.rapidapi.com/datetime/timezone/now\"\nquerystring = {\"tzname\": \"UTC\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"date-calculator2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "timezone": "UTC",
                "now": "2023-06-16T16:13:42.441376+00:00"
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "rdates",
            "url": "https://date-calculator2.p.rapidapi.com/datetime/rdates",
            "description": "Computes and returns recurring dates based on very flexible recurrence rules as defined and specified in the [iCalendar RFC 5545](https://tools.ietf.org/html/rfc5545 \"ICalendar\"). It's possible to specify more than one recurrence rule.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "start_date",
                    "type": "STRING",
                    "description": "The start date w/ or w/o the time part in  [ISO 8601 format](https://www.w3.org/TR/NOTE-datetime)",
                    "default": "2021-09-21"
                },
                {
                    "name": "rrules",
                    "type": "STRING",
                    "description": "The recurrence rules list as string seperated by space; Each rule should be prefixed by **RRULE:**",
                    "default": "RRULE:FREQ=MONTHLY;COUNT=36 RRULE:FREQ=YEARLY;COUNT=3"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://date-calculator2.p.rapidapi.com/datetime/rdates\"\nquerystring = {\"start_date\": \"2021-09-21\", \"rrules\": \"RRULE:FREQ=MONTHLY;COUNT=36 RRULE:FREQ=YEARLY;COUNT=3\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"date-calculator2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://date-calculator2.p.rapidapi.com/datetime/rdates\"\nquerystring = {\"start_date\": \"2021-09-21\", \"rrules\": \"RRULE:FREQ=MONTHLY;COUNT=36 RRULE:FREQ=YEARLY;COUNT=3\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"date-calculator2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "dates": [
                    "Tue, 21 Sep 2021 00:00:00 GMT",
                    "Thu, 21 Oct 2021 00:00:00 GMT",
                    "Sun, 21 Nov 2021 00:00:00 GMT",
                    "Tue, 21 Dec 2021 00:00:00 GMT",
                    "Fri, 21 Jan 2022 00:00:00 GMT",
                    "Mon, 21 Feb 2022 00:00:00 GMT",
                    "Mon, 21 Mar 2022 00:00:00 GMT",
                    "Thu, 21 Apr 2022 00:00:00 GMT",
                    "Sat, 21 May 2022 00:00:00 GMT",
                    "Tue, 21 Jun 2022 00:00:00 GMT",
                    "Thu, 21 Jul 2022 00:00:00 GMT",
                    "Sun, 21 Aug 2022 00:00:00 GMT",
                    "Wed, 21 Sep 2022 00:00:00 GMT",
                    "Fri, 21 Oct 2022 00:00:00 GMT",
                    "Mon, 21 Nov 2022 00:00:00 GMT",
                    "Wed, 21 Dec 2022 00:00:00 GMT",
                    "Sat, 21 Jan 2023 00:00:00 GMT",
                    "Tue, 21 Feb 2023 00:00:00 GMT",
                    "Tue, 21 Mar 2023 00:00:00 GMT",
                    "Fri, 21 Apr 2023 00:00:00 GMT",
                    "Sun, 21 May 2023 00:00:00 GMT",
                    "Wed, 21 Jun 2023 00:00:00 GMT",
                    "Fri, 21 Jul 2023 00:00:00 GMT",
                    "Mon, 21 Aug 2023 00:00:00 GMT",
                    "Thu, 21 Sep 2023 00:00:00 GMT",
                    "Sat, 21 Oct 2023 00:00:00 GMT",
                    "Tue, 21 Nov 2023 00:00:00 GMT",
                    "Thu, 21 Dec 2023 00:00:00 GMT",
                    "Sun, 21 Jan 2024 00:00:00 GMT",
                    "Wed, 21 Feb 2024 00:00:00 GMT",
                    "Thu, 21 Mar 2024 00:00:00 GMT",
                    "Sun, 21 Apr 2024 00:00:00 GMT",
                    "Tue, 21 May 2024 00:00:00 GMT",
                    "Fri, 21 Jun 2024 00:00:00 GMT",
                    "Sun, 21 Jul 2024 00:00:00 GMT",
                    "Wed, 21 Aug 2024 00:00:00 GMT",
                    "Thu, 21 Aug 2025 00:00:00 GMT",
                    "Fri, 21 Aug 2026 00:00:00 GMT"
                ]
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "dates": {
                        "description": "The recurring dates list",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        {
            "name": "sdate",
            "url": "https://date-calculator2.p.rapidapi.com/datetime/sdate",
            "description": "Shifts  a date or a datetime in the future or past.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "start_date",
                    "type": "STRING",
                    "description": "The start date w/ or w/o the time part in  [ISO 8601 format](https://www.w3.org/TR/NOTE-datetime)",
                    "default": "2021-09-21"
                }
            ],
            "optional_parameters": [
                {
                    "name": "weekday",
                    "type": "STRING",
                    "description": "Allows to shift a date to the specified next or previous Nth weekday. It should be one of the weekday instances (SU, MO, TU, WE, TH, FR, SA). These instances may receive a parameter N, specifying the Nth weekday in parentheses, which could be positive or negative (like MO(+1) or MO(-2)). Not specifying it is the same as specifying +1. If the calculated date is already Monday, using MO(1) or MO(-1) won't change the day.",
                    "default": "MO"
                },
                {
                    "name": "hours",
                    "type": "NUMBER",
                    "description": "The number of hours before(negative value) or after(positive value) start_date.",
                    "default": "14"
                },
                {
                    "name": "microseconds",
                    "type": "NUMBER",
                    "description": "The number of microseconds before(negative value) or after(positive value) start_date.",
                    "default": 0
                },
                {
                    "name": "seconds",
                    "type": "NUMBER",
                    "description": "The number of seconds before(negative value) or after(positive value) start_date.",
                    "default": 0
                },
                {
                    "name": "minutes",
                    "type": "NUMBER",
                    "description": "The number of minutes before(negative value) or after(positive value) start_date.",
                    "default": 0
                },
                {
                    "name": "days",
                    "type": "NUMBER",
                    "description": "The number of days before(negative value) or after(positive value) start_date.",
                    "default": 0
                },
                {
                    "name": "months",
                    "type": "NUMBER",
                    "description": "The number of months before(negative value) or after(positive value) start_date.",
                    "default": "-1"
                },
                {
                    "name": "weeks",
                    "type": "NUMBER",
                    "description": "The number of weeks before(negative value) or after(positive value) start_date.",
                    "default": "1"
                },
                {
                    "name": "years",
                    "type": "NUMBER",
                    "description": "The number of years before(negative value) or after(positive value) start_date.",
                    "default": "1"
                }
            ],
            "code": "import requests\n\nurl = \"https://date-calculator2.p.rapidapi.com/datetime/sdate\"\nquerystring = {\"weekday\": \"MO\", \"hours\": \"14\", \"microseconds\": 0, \"seconds\": 0, \"minutes\": 0, \"days\": 0, \"start_date\": \"2021-09-21\", \"months\": \"-1\", \"weeks\": \"1\", \"years\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"date-calculator2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://date-calculator2.p.rapidapi.com/datetime/sdate\"\nquerystring = {\"weekday\": \"MO\", \"hours\": \"14\", \"microseconds\": 0, \"seconds\": 0, \"minutes\": 0, \"days\": 0, \"start_date\": \"2021-09-21\", \"months\": \"-1\", \"weeks\": \"1\", \"years\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"date-calculator2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "sdate": "2022-08-29T14:00:00"
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "edate",
            "url": "https://date-calculator2.p.rapidapi.com/datetime/edate",
            "description": "Computes and returns a date on the same day of the month in the future or past. This resource behave exactly as Excel EDATE function.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "months",
                    "type": "NUMBER",
                    "description": "The number of months before or after start_date. A positive value for months yields a future date; a negative value yields a past date.",
                    "default": 1
                },
                {
                    "name": "start_date",
                    "type": "STRING",
                    "description": "The start date w/ or w/o the time part in  [ISO 8601 format](https://www.w3.org/TR/NOTE-datetime)",
                    "default": "2021-09-21"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://date-calculator2.p.rapidapi.com/datetime/edate\"\nquerystring = {\"months\": 1, \"start_date\": \"2021-09-21\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"date-calculator2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://date-calculator2.p.rapidapi.com/datetime/edate\"\nquerystring = {\"months\": 1, \"start_date\": \"2021-09-21\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"date-calculator2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "edate": "2021-10-21"
            },
            "statuscode": 1,
            "schema": ""
        }
    ],
    "standardized_name": "date_calculator"
}