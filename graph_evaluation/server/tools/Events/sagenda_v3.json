{
    "product_id": "5aa308a6e4b00687d3574594",
    "tool_description": "We are now hosted on PostMan : https://documenter.getpostman.com/view/3283093/SW7aXT2M?version=latest",
    "home_url": "https://rapidapi.com/sagenda/api/sagenda-v3/",
    "name": "Sagenda v3",
    "title": "Sagenda v3",
    "pricing": "FREE",
    "tool_name": "Sagenda v3",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 930,
        "avgSuccessRate": 6,
        "popularityScore": 0.3,
        "__typename": "Score"
    },
    "host": "sagenda-sagenda-v3-v1.p.rapidapi.com",
    "api_list": [
        {
            "name": "List",
            "url": "https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/bookableItems",
            "description": "A list of bookable items associated with supplied authentication token (account)",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/bookableItems\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/bookableItems\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "Message": "Authorization has been denied for this request."
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Authentication status",
            "url": "https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/status/oauth",
            "description": "You can use this endpoint to check whether your authentication token is valid. Responds with HTTP 200, API version and list of available claims for a token (for reference)",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/status/oauth\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/status/oauth\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "Message": "Authorization has been denied for this request."
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "API status",
            "url": "https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/status",
            "description": "Receive an API status. Responds with HTTP 200 OK and API version in body if functional",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/status\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/status\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "apiVersion": "3.0"
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Get specific event information",
            "url": "https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/bookings/{eventIdentifier}",
            "description": "Returns a single event object containing all the booking information.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "eventIdentifier",
                    "type": "STRING",
                    "description": "Unique event identifier from booking or event search",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/bookings/{eventIdentifier}\"\nquerystring = {\"eventIdentifier\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/bookings/{eventIdentifier}\"\nquerystring = {\"eventIdentifier\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "Message": "Authorization has been denied for this request."
            }
        },
        {
            "name": "Events for item by date range",
            "url": "https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/events/{startdate}/{enddate}/{bookableitem}",
            "description": "Returns an array of events that start in the date range between startDate and endDate (inclusive) for given bookable item",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "bookableitem",
                    "type": "STRING",
                    "description": "Bookable item identifier",
                    "default": ""
                },
                {
                    "name": "startdate",
                    "type": "STRING",
                    "description": "Start of date range (inclusive). Format: YYYY-MM-DD (e.g 2018-03-17)",
                    "default": ""
                },
                {
                    "name": "enddate",
                    "type": "STRING",
                    "description": "End of date range (inclusive). Format: YYYY-MM-DD (e.g 2018-03-17). Format: YYYY-MM-DD (e.g 2018-03-17)",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/events/{startdate}/{enddate}/{bookableitem}\"\nquerystring = {\"bookableitem\": \"\", \"startdate\": \"\", \"enddate\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/events/{startdate}/{enddate}/{bookableitem}\"\nquerystring = {\"bookableitem\": \"\", \"startdate\": \"\", \"enddate\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "Message": "Authorization has been denied for this request."
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Get bookings information",
            "url": "https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/bookings/2019-09-24/2019-09-25",
            "description": "This endpoint lets you request detailed booking information for a given period of time, optionally filtered by bookable item and status.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "fromDate",
                    "type": "STRING",
                    "description": "Inclusive request range start date ",
                    "default": "2019-09-24"
                },
                {
                    "name": "toDate",
                    "type": "STRING",
                    "description": "Inclusive request range end date",
                    "default": "2019-09-25"
                }
            ],
            "optional_parameters": [
                {
                    "name": "itemId",
                    "type": "STRING",
                    "description": "Filter bookings by bookable item ID",
                    "default": ""
                },
                {
                    "name": "status",
                    "type": "STRING",
                    "description": "Filter bookings by status",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/bookings/2019-09-24/2019-09-25\"\nquerystring = {\"itemId\": \"\", \"status\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/bookings/{fromdate}/{todate}\"\nquerystring = {\"itemId\": \"\", \"status\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "Message": "Authorization has been denied for this request."
            }
        },
        {
            "name": "Request authentication token",
            "url": "https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/token",
            "description": "Get an authentication token required for most of API calls. Token received is to be included in the Authorization header using Bearer scheme.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "api_token",
                    "type": "STRING",
                    "description": "An API token from user settings page",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/token\"\nquerystring = {\"api_token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/token\"\nquerystring = {\"api_token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Request single lock",
            "url": "https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/eventLocks",
            "description": "Locks a particular event occurrence for defined amount of time. During this time, booking is reserved",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/eventLocks\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/eventLocks\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Book single event",
            "url": "https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/events",
            "description": "Book single event using acquired event lock",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/events\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/events\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Request multiple locks",
            "url": "https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/eventLocks/multi",
            "description": "Allows you to request locks for multiple events at the same time",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/eventLocks/multi\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/eventLocks/multi\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Book multiple events",
            "url": "https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/events/multi",
            "description": "Allows you to book multiple events contained in multiple event lock represented by user identifier. In case of successful bookings return HTTP 200 without body. If there were failed bookings, returns their event identifiers in a special field so you can try to re-acquire locks and book them again. If there were successful paid events, will return HTTP 202 Accepted with the link to proceed to payment gateway",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/events/multi\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/events/multi\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Request limited access token by client credentials",
            "url": "https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/token",
            "description": "To get a limited access token, you need to acquire credentials from the Account Settings page on your Dashboard. On the Developer Settings section in the bottom of the page you can generate up to 3 client IDs.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "client_secret",
                    "type": "STRING",
                    "description": "Client secret from you Developer settings",
                    "default": ""
                },
                {
                    "name": "client_id",
                    "type": "STRING",
                    "description": "Client ID from your Developer settings",
                    "default": ""
                },
                {
                    "name": "grant_type",
                    "type": "STRING",
                    "description": "OAuth grant type",
                    "default": "client_credentials"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/token\"\nquerystring = {\"client_secret\": \"\", \"client_id\": \"\", \"grant_type\": \"client_credentials\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/token\"\nquerystring = {\"client_secret\": \"\", \"client_id\": \"\", \"grant_type\": \"client_credentials\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Request new limited access token using refresh token",
            "url": "https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/token",
            "description": "Using the refresh token, you can acquire a new access token without re-authenticating within the time period you\u2019ve received in token endpoint response.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "refresh_token",
                    "type": "STRING",
                    "description": "Refresh token from your previous access token request",
                    "default": ""
                },
                {
                    "name": "client_id",
                    "type": "STRING",
                    "description": "Client ID from your Developer Settings",
                    "default": ""
                },
                {
                    "name": "grant_type",
                    "type": "STRING",
                    "description": "OAuth grant type",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/token\"\nquerystring = {\"refresh_token\": \"\", \"client_id\": \"\", \"grant_type\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/token\"\nquerystring = {\"refresh_token\": \"\", \"client_id\": \"\", \"grant_type\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ],
    "standardized_name": "sagenda_v3"
}