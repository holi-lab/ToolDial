{
    "product_id": "205",
    "tool_description": "Pull events, venues, tickets, deliveries and payments. ",
    "home_url": "https://rapidapi.com/stefan.skliarov/api/Ticketmaster/",
    "name": "Ticketmaster",
    "title": "Ticketmaster",
    "pricing": "FREE",
    "tool_name": "Ticketmaster",
    "score": {
        "avgServiceLevel": 0,
        "avgLatency": 127245,
        "avgSuccessRate": 0,
        "popularityScore": 5,
        "__typename": "Score"
    },
    "host": "Ticketmasterstefan-skliarovV1.p.rapidapi.com",
    "api_list": [
        {
            "name": "addDeliveriesToCart",
            "url": "https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/addDeliveriesToCart",
            "description": "This operation allows users to add deliveries to a cart.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "pollingCallbackUrl",
                    "type": "STRING",
                    "description": "Client webhook URI where response will be posted if the operation polls.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client key from Ticketmaster",
                    "default": ""
                },
                {
                    "name": "cartId",
                    "type": "STRING",
                    "description": "ID of the cart",
                    "default": ""
                },
                {
                    "name": "deliveries",
                    "type": "ARRAY",
                    "description": "Container of add delivery requests.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/addDeliveriesToCart\"\nquerystring = {\"pollingCallbackUrl\": \"\", \"apiKey\": \"\", \"cartId\": \"\", \"deliveries\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/addDeliveriesToCart\"\nquerystring = {\"pollingCallbackUrl\": \"\", \"apiKey\": \"\", \"cartId\": \"\", \"deliveries\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addPaymentsToCart",
            "url": "https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/addPaymentsToCart",
            "description": "This operation allows users to add one or more payments to a cart.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client key from Ticketmaster",
                    "default": ""
                },
                {
                    "name": "pollingCallbackUrl",
                    "type": "STRING",
                    "description": "Client webhook URI where response will be posted if the operation polls.",
                    "default": ""
                },
                {
                    "name": "cartId",
                    "type": "STRING",
                    "description": "ID of the cart",
                    "default": ""
                },
                {
                    "name": "payments",
                    "type": "ARRAY",
                    "description": "Container of add payments requests.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/addPaymentsToCart\"\nquerystring = {\"apiKey\": \"\", \"pollingCallbackUrl\": \"\", \"cartId\": \"\", \"payments\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/addPaymentsToCart\"\nquerystring = {\"apiKey\": \"\", \"pollingCallbackUrl\": \"\", \"cartId\": \"\", \"payments\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "completeCartPurchase",
            "url": "https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/completeCartPurchase",
            "description": "This operation empties the cart.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "pollingCallbackUrl",
                    "type": "STRING",
                    "description": "Client webhook URI where response will be posted if the operation polls.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client key from Ticketmaster",
                    "default": ""
                },
                {
                    "name": "cartId",
                    "type": "STRING",
                    "description": "ID of the cart",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/completeCartPurchase\"\nquerystring = {\"pollingCallbackUrl\": \"\", \"apiKey\": \"\", \"cartId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/completeCartPurchase\"\nquerystring = {\"pollingCallbackUrl\": \"\", \"apiKey\": \"\", \"cartId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createCart",
            "url": "https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/createCart",
            "description": "Returns Event Offers.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client key from Ticketmaster",
                    "default": ""
                },
                {
                    "name": "pollingCallbackUrl",
                    "type": "STRING",
                    "description": "Client webhook URI where response will be posted if the operation polls.",
                    "default": ""
                },
                {
                    "name": "products",
                    "type": "ARRAY",
                    "description": "Container of add product requests.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/createCart\"\nquerystring = {\"apiKey\": \"\", \"pollingCallbackUrl\": \"\", \"products\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/createCart\"\nquerystring = {\"apiKey\": \"\", \"pollingCallbackUrl\": \"\", \"products\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createEvents",
            "url": "https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/createEvents",
            "description": "Publish events accessible within the Discovery API.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Api key for PUBLISHING API",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "active",
                    "type": "BOOLEAN",
                    "description": "true if the entity is active; inactive entity won\u2019t appear in Discovery API.",
                    "default": ""
                },
                {
                    "name": "additionalInfos",
                    "type": "JSON",
                    "description": "Map of locale to value for any additional informations on the event.",
                    "default": ""
                },
                {
                    "name": "startDate",
                    "type": "JSON",
                    "description": "The start date of the event.",
                    "default": ""
                },
                {
                    "name": "descriptions",
                    "type": "JSON",
                    "description": "Map of locale to value for the description of the event.",
                    "default": ""
                },
                {
                    "name": "endDate",
                    "type": "JSON",
                    "description": "The end date of the event.",
                    "default": ""
                },
                {
                    "name": "accessDate",
                    "type": "JSON",
                    "description": "The access date of the event.",
                    "default": ""
                },
                {
                    "name": "infos",
                    "type": "JSON",
                    "description": "Map of locale to value for any informations on the event.",
                    "default": ""
                },
                {
                    "name": "placeAddressLine1",
                    "type": "JSON",
                    "description": "map of locale to value for the first line of the address.",
                    "default": ""
                },
                {
                    "name": "pleaseNotes",
                    "type": "JSON",
                    "description": "map of locale to value for any notes related to the event.",
                    "default": ""
                },
                {
                    "name": "placeStateNames",
                    "type": "JSON",
                    "description": "map of locale to value for the names of the state.",
                    "default": ""
                },
                {
                    "name": "placeCountryCode",
                    "type": "STRING",
                    "description": "the code of the country of the event.",
                    "default": ""
                },
                {
                    "name": "publicVisibilityState",
                    "type": "BOOLEAN",
                    "description": "true if the event should be visible on the Discovery API, false otherwise. (if not specified: true)",
                    "default": ""
                },
                {
                    "name": "names",
                    "type": "JSON",
                    "description": "Map of locale to value for the names of the event.",
                    "default": ""
                },
                {
                    "name": "priceRangesMax",
                    "type": "STRING",
                    "description": "maximum price",
                    "default": ""
                },
                {
                    "name": "sourceId",
                    "type": "STRING",
                    "description": "the publisher\u2019s id of the event.",
                    "default": ""
                },
                {
                    "name": "priceRangesCurrency",
                    "type": "STRING",
                    "description": "currency code (as defined by ISO-4217)",
                    "default": ""
                },
                {
                    "name": "venue",
                    "type": "JSON",
                    "description": "the URL of the event on the publisher\u2019s site.",
                    "default": ""
                },
                {
                    "name": "placeAreaNames",
                    "type": "JSON",
                    "description": "map of locale to value for the names of the area.",
                    "default": ""
                },
                {
                    "name": "placeCoordinate",
                    "type": "MAP",
                    "description": "the latitude and longitude of the event location coma separated.",
                    "default": ""
                },
                {
                    "name": "publicVisibilityStart",
                    "type": "STRING",
                    "description": "the start date and time of visibility for this event on the Discovery API in UTC.",
                    "default": ""
                },
                {
                    "name": "test",
                    "type": "BOOLEAN",
                    "description": "true if this is a test event data, false otherwise (real event).",
                    "default": ""
                },
                {
                    "name": "promoterNames",
                    "type": "JSON",
                    "description": "map of locale to value for the names of the promoter",
                    "default": ""
                },
                {
                    "name": "publicSalesStart",
                    "type": "STRING",
                    "description": "the date and time of the start of the public sales period in UTC.",
                    "default": ""
                },
                {
                    "name": "timezone",
                    "type": "STRING",
                    "description": "The timezone of the event.",
                    "default": ""
                },
                {
                    "name": "publicVisibilityEnd",
                    "type": "STRING",
                    "description": "the end date and time of visibility for this event on the Discovery API in UTC.",
                    "default": ""
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "the URL of the event on the publisher\u2019s site.",
                    "default": ""
                },
                {
                    "name": "placeAddressLine2",
                    "type": "JSON",
                    "description": "map of locale to value for the second line of the address.",
                    "default": ""
                },
                {
                    "name": "placeCountryNames",
                    "type": "JSON",
                    "description": "map of locale to value for the names of the country.",
                    "default": ""
                },
                {
                    "name": "sourceName",
                    "type": "STRING",
                    "description": "the publisher\u2019s name.",
                    "default": ""
                },
                {
                    "name": "priceRangesMin",
                    "type": "STRING",
                    "description": "minimum price",
                    "default": ""
                },
                {
                    "name": "version",
                    "type": "STRING",
                    "description": "the publisher\u2019s version for this event.",
                    "default": ""
                },
                {
                    "name": "promoterId",
                    "type": "STRING",
                    "description": "id of the promoter",
                    "default": ""
                },
                {
                    "name": "priceRangesType",
                    "type": "STRING",
                    "description": "type of price",
                    "default": ""
                },
                {
                    "name": "placePostalcode",
                    "type": "STRING",
                    "description": "the postal code of the place of the event.",
                    "default": ""
                },
                {
                    "name": "publicSalesTBD",
                    "type": "BOOLEAN",
                    "description": "true if the public sale date start is to be determined, false otherwise.",
                    "default": ""
                },
                {
                    "name": "placeStateCode",
                    "type": "JSON",
                    "description": "the code of the state of the event.",
                    "default": ""
                },
                {
                    "name": "promoterDescriptions",
                    "type": "JSON",
                    "description": "map of locale to value for the descriptions of the promoter",
                    "default": ""
                },
                {
                    "name": "placeNames",
                    "type": "JSON",
                    "description": "Map of locale to value for the names of the place.",
                    "default": ""
                },
                {
                    "name": "placeCityNames",
                    "type": "JSON",
                    "description": "map of locale to value for the names of the city.",
                    "default": ""
                },
                {
                    "name": "publicSalesEnd",
                    "type": "STRING",
                    "description": "the date and time of the end of the public sales period in UTC.",
                    "default": ""
                },
                {
                    "name": "attractions",
                    "type": "ARRAY",
                    "description": "List of attractions in the event.",
                    "default": ""
                },
                {
                    "name": "classifications",
                    "type": "ARRAY",
                    "description": "List of classifications for the event.",
                    "default": ""
                },
                {
                    "name": "images",
                    "type": "ARRAY",
                    "description": "List of images of the event.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/createEvents\"\nquerystring = {\"active\": \"\", \"additionalInfos\": \"\", \"apiKey\": \"\", \"startDate\": \"\", \"descriptions\": \"\", \"endDate\": \"\", \"accessDate\": \"\", \"infos\": \"\", \"placeAddressLine1\": \"\", \"pleaseNotes\": \"\", \"placeStateNames\": \"\", \"placeCountryCode\": \"\", \"publicVisibilityState\": \"\", \"names\": \"\", \"priceRangesMax\": \"\", \"sourceId\": \"\", \"priceRangesCurrency\": \"\", \"venue\": \"\", \"placeAreaNames\": \"\", \"placeCoordinate\": \"\", \"publicVisibilityStart\": \"\", \"test\": \"\", \"promoterNames\": \"\", \"publicSalesStart\": \"\", \"timezone\": \"\", \"publicVisibilityEnd\": \"\", \"url\": \"\", \"placeAddressLine2\": \"\", \"placeCountryNames\": \"\", \"sourceName\": \"\", \"priceRangesMin\": \"\", \"version\": \"\", \"promoterId\": \"\", \"priceRangesType\": \"\", \"placePostalcode\": \"\", \"publicSalesTBD\": \"\", \"placeStateCode\": \"\", \"promoterDescriptions\": \"\", \"placeNames\": \"\", \"placeCityNames\": \"\", \"publicSalesEnd\": \"\", \"attractions\": \"\", \"classifications\": \"\", \"images\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/createEvents\"\nquerystring = {\"active\": \"\", \"additionalInfos\": \"\", \"apiKey\": \"\", \"startDate\": \"\", \"descriptions\": \"\", \"endDate\": \"\", \"accessDate\": \"\", \"infos\": \"\", \"placeAddressLine1\": \"\", \"pleaseNotes\": \"\", \"placeStateNames\": \"\", \"placeCountryCode\": \"\", \"publicVisibilityState\": \"\", \"names\": \"\", \"priceRangesMax\": \"\", \"sourceId\": \"\", \"priceRangesCurrency\": \"\", \"venue\": \"\", \"placeAreaNames\": \"\", \"placeCoordinate\": \"\", \"publicVisibilityStart\": \"\", \"test\": \"\", \"promoterNames\": \"\", \"publicSalesStart\": \"\", \"timezone\": \"\", \"publicVisibilityEnd\": \"\", \"url\": \"\", \"placeAddressLine2\": \"\", \"placeCountryNames\": \"\", \"sourceName\": \"\", \"priceRangesMin\": \"\", \"version\": \"\", \"promoterId\": \"\", \"priceRangesType\": \"\", \"placePostalcode\": \"\", \"publicSalesTBD\": \"\", \"placeStateCode\": \"\", \"promoterDescriptions\": \"\", \"placeNames\": \"\", \"placeCityNames\": \"\", \"publicSalesEnd\": \"\", \"attractions\": \"\", \"classifications\": \"\", \"images\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "emptyCart",
            "url": "https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/emptyCart",
            "description": "This operation empties the cart.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "cartId",
                    "type": "STRING",
                    "description": "ID of the cart",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client key from Ticketmaster",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/emptyCart\"\nquerystring = {\"cartId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/emptyCart\"\nquerystring = {\"cartId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAccessToken",
            "url": "https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getAccessToken",
            "description": "Get user access token",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "redirectUri",
                    "type": "STRING",
                    "description": "Redirect uri for your application",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client key from Ticketmaster",
                    "default": ""
                },
                {
                    "name": "clientSecret",
                    "type": "CREDENTIALS",
                    "description": "Client secret from Ticketmaster",
                    "default": ""
                },
                {
                    "name": "code",
                    "type": "STRING",
                    "description": "Code provided by user",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getAccessToken\"\nquerystring = {\"redirectUri\": \"\", \"apiKey\": \"\", \"clientSecret\": \"\", \"code\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getAccessToken\"\nquerystring = {\"redirectUri\": \"\", \"apiKey\": \"\", \"clientSecret\": \"\", \"code\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getDeliveries",
            "url": "https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getDeliveries",
            "description": "Returns the deliveries.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client key from Ticketmaster",
                    "default": ""
                },
                {
                    "name": "cartId",
                    "type": "STRING",
                    "description": "ID of the cart",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getDeliveries\"\nquerystring = {\"apiKey\": \"\", \"cartId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getDeliveries\"\nquerystring = {\"apiKey\": \"\", \"cartId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getEventOffers",
            "url": "https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getEventOffers",
            "description": "Returns Event Offers.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "eventId",
                    "type": "STRING",
                    "description": "ID of the event",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client key from Ticketmaster",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getEventOffers\"\nquerystring = {\"eventId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getEventOffers\"\nquerystring = {\"eventId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getOptions",
            "url": "https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getOptions",
            "description": "This operation returns available payment options plus information about deliveries",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client key from Ticketmaster",
                    "default": ""
                },
                {
                    "name": "cartId",
                    "type": "STRING",
                    "description": "ID of the cart",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getOptions\"\nquerystring = {\"apiKey\": \"\", \"cartId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getOptions\"\nquerystring = {\"apiKey\": \"\", \"cartId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPayments",
            "url": "https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getPayments",
            "description": "This operation returns available payment options",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "cartId",
                    "type": "STRING",
                    "description": "ID of the cart",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client key from Ticketmaster",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getPayments\"\nquerystring = {\"cartId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getPayments\"\nquerystring = {\"cartId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleAttraction",
            "url": "https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getSingleAttraction",
            "description": "Get details for a specific attraction using the unique identifier for the attraction.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "attractionId",
                    "type": "STRING",
                    "description": "ID of the attraction",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client key from Ticketmaster",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "locale",
                    "type": "LIST",
                    "description": "The locale in ISO code format. Array of values can be provided. When omitting the country part of the code (e.g. only 'en' or 'fr') then the first matching locale is used.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getSingleAttraction\"\nquerystring = {\"attractionId\": \"\", \"apiKey\": \"\", \"locale\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getSingleAttraction\"\nquerystring = {\"attractionId\": \"\", \"apiKey\": \"\", \"locale\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleCart",
            "url": "https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getSingleCart",
            "description": "Returns the cart.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "cartId",
                    "type": "STRING",
                    "description": "ID of the cart",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client key from Ticketmaster",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getSingleCart\"\nquerystring = {\"cartId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getSingleCart\"\nquerystring = {\"cartId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleClassification",
            "url": "https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getSingleClassification",
            "description": "Get details for a specific segment, genre, or sub-genre using its unique identifier.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "classificationId",
                    "type": "STRING",
                    "description": "ID of the classification",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client key from Ticketmaster",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "locale",
                    "type": "LIST",
                    "description": "The locale in ISO code format. Array of values can be provided. When omitting the country part of the code (e.g. only 'en' or 'fr') then the first matching locale is used.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getSingleClassification\"\nquerystring = {\"classificationId\": \"\", \"apiKey\": \"\", \"locale\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getSingleClassification\"\nquerystring = {\"classificationId\": \"\", \"apiKey\": \"\", \"locale\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleEvent",
            "url": "https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getSingleEvent",
            "description": "Get details for a specific event using the unique identifier for the event. This includes the venue and location, the attraction(s), and the Ticketmaster Website URL for purchasing tickets for the event.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "eventId",
                    "type": "STRING",
                    "description": "ID of the event",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client key from Ticketmaster",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "locale",
                    "type": "LIST",
                    "description": "The locale in ISO code format. Array of values can be provided. When omitting the country part of the code (e.g. only 'en' or 'fr') then the first matching locale is used.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getSingleEvent\"\nquerystring = {\"eventId\": \"\", \"apiKey\": \"\", \"locale\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getSingleEvent\"\nquerystring = {\"eventId\": \"\", \"apiKey\": \"\", \"locale\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleEventImages",
            "url": "https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getSingleEventImages",
            "description": "Get images for a specific event using the unique identifier for the event.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client key from Ticketmaster",
                    "default": ""
                },
                {
                    "name": "eventId",
                    "type": "STRING",
                    "description": "ID of the event",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "locale",
                    "type": "LIST",
                    "description": "The locale in ISO code format. Array of values can be provided. When omitting the country part of the code (e.g. only 'en' or 'fr') then the first matching locale is used.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getSingleEventImages\"\nquerystring = {\"apiKey\": \"\", \"eventId\": \"\", \"locale\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getSingleEventImages\"\nquerystring = {\"apiKey\": \"\", \"eventId\": \"\", \"locale\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleGenre",
            "url": "https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getSingleGenre",
            "description": "Get details for a specific genre using its unique identifier.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "genreId",
                    "type": "STRING",
                    "description": "ID of the classification",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client key from Ticketmaster",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "locale",
                    "type": "LIST",
                    "description": "The locale in ISO code format. Array of values can be provided. When omitting the country part of the code (e.g. only 'en' or 'fr') then the first matching locale is used.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getSingleGenre\"\nquerystring = {\"genreId\": \"\", \"apiKey\": \"\", \"locale\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getSingleGenre\"\nquerystring = {\"genreId\": \"\", \"apiKey\": \"\", \"locale\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleSegment",
            "url": "https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getSingleSegment",
            "description": "Get details for a specific segment using its unique identifier.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "segmentId",
                    "type": "STRING",
                    "description": "ID of the segment",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client key from Ticketmaster",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "locale",
                    "type": "LIST",
                    "description": "The locale in ISO code format. Array of values can be provided. When omitting the country part of the code (e.g. only 'en' or 'fr') then the first matching locale is used.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getSingleSegment\"\nquerystring = {\"segmentId\": \"\", \"apiKey\": \"\", \"locale\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getSingleSegment\"\nquerystring = {\"segmentId\": \"\", \"apiKey\": \"\", \"locale\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleVenue",
            "url": "https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getSingleVenue",
            "description": "Get details for a specific venue using the unique identifier for the venue.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "ID of the venue",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client key from Ticketmaster",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "locale",
                    "type": "LIST",
                    "description": "The locale in ISO code format. Array of values can be provided. When omitting the country part of the code (e.g. only 'en' or 'fr') then the first matching locale is used.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getSingleVenue\"\nquerystring = {\"venueId\": \"\", \"apiKey\": \"\", \"locale\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getSingleVenue\"\nquerystring = {\"venueId\": \"\", \"apiKey\": \"\", \"locale\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUser",
            "url": "https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getUser",
            "description": "Get user information",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "user access token",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getUser\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/getUser\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "refreshAccessToken",
            "url": "https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/refreshAccessToken",
            "description": "Get user access token",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientSecret",
                    "type": "CREDENTIALS",
                    "description": "Client secret from Ticketmaster",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client key from Ticketmaster",
                    "default": ""
                },
                {
                    "name": "refreshToken",
                    "type": "STRING",
                    "description": "Refresh token received in getAccessToken block",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/refreshAccessToken\"\nquerystring = {\"clientSecret\": \"\", \"apiKey\": \"\", \"refreshToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/refreshAccessToken\"\nquerystring = {\"clientSecret\": \"\", \"apiKey\": \"\", \"refreshToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchAttractions",
            "url": "https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/searchAttractions",
            "description": "Find attractions (artists, sports, packages, plays and so on) and filter your search by name, and much more.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client key from Ticketmaster",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Page number",
                    "default": ""
                },
                {
                    "name": "source",
                    "type": "SELECT",
                    "description": "Filter entities by its source name. String enum:[ticketmaster, universe, frontgate, tmr]",
                    "default": ""
                },
                {
                    "name": "keyword",
                    "type": "STRING",
                    "description": "Keyword to search on",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Page size",
                    "default": ""
                },
                {
                    "name": "attractionId",
                    "type": "STRING",
                    "description": "Filter attractions by its id",
                    "default": ""
                },
                {
                    "name": "includeTest",
                    "type": "STRING",
                    "description": "True if you want to have entities flag as test in the response. Only, if you only wanted test entities. String enum:[yes, no, only]",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Sorting order of the search result. Example value: relevance,desc",
                    "default": ""
                },
                {
                    "name": "locale",
                    "type": "LIST",
                    "description": "The locale in ISO code format. Array of values can be provided. When omitting the country part of the code (e.g. only 'en' or 'fr') then the first matching locale is used.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/searchAttractions\"\nquerystring = {\"apiKey\": \"\", \"pageNumber\": \"\", \"source\": \"\", \"keyword\": \"\", \"pageSize\": \"\", \"attractionId\": \"\", \"includeTest\": \"\", \"sort\": \"\", \"locale\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/searchAttractions\"\nquerystring = {\"apiKey\": \"\", \"pageNumber\": \"\", \"source\": \"\", \"keyword\": \"\", \"pageSize\": \"\", \"attractionId\": \"\", \"includeTest\": \"\", \"sort\": \"\", \"locale\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchClassification",
            "url": "https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/searchClassification",
            "description": "Find classifications and filter your search by name, and much more. Classifications help define the nature of attractions and events.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client key from Ticketmaster",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Page size",
                    "default": ""
                },
                {
                    "name": "classificationId",
                    "type": "STRING",
                    "description": "Filter classifications by its id",
                    "default": ""
                },
                {
                    "name": "includeTest",
                    "type": "STRING",
                    "description": "True if you want to have entities flag as test in the response. Only, if you only wanted test entities. String enum:[yes, no, only]",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Sorting order of the search result. Example value: relevance,desc",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Page number",
                    "default": ""
                },
                {
                    "name": "source",
                    "type": "SELECT",
                    "description": "Filter entities by its source name. String enum:[ticketmaster, universe, frontgate, tmr]",
                    "default": ""
                },
                {
                    "name": "keyword",
                    "type": "STRING",
                    "description": "Keyword to search on",
                    "default": ""
                },
                {
                    "name": "locale",
                    "type": "LIST",
                    "description": "The locale in ISO code format. Array of values can be provided. When omitting the country part of the code (e.g. only 'en' or 'fr') then the first matching locale is used.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/searchClassification\"\nquerystring = {\"pageSize\": \"\", \"classificationId\": \"\", \"includeTest\": \"\", \"sort\": \"\", \"pageNumber\": \"\", \"apiKey\": \"\", \"source\": \"\", \"keyword\": \"\", \"locale\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/searchClassification\"\nquerystring = {\"pageSize\": \"\", \"classificationId\": \"\", \"includeTest\": \"\", \"sort\": \"\", \"pageNumber\": \"\", \"apiKey\": \"\", \"source\": \"\", \"keyword\": \"\", \"locale\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchEvents",
            "url": "https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/searchEvents",
            "description": "Find events and filter your search by location, date, availability, and much more.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client key from Ticketmaster",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "endDateTime",
                    "type": "DATEPICKER",
                    "description": "Filter events with a start date before this date",
                    "default": ""
                },
                {
                    "name": "onsaleEndDateTime",
                    "type": "DATEPICKER",
                    "description": "Filter events with onsale end date before this date",
                    "default": ""
                },
                {
                    "name": "includeTBA",
                    "type": "SELECT",
                    "description": "True, to include events with date to be announce (TBA). String enum:[yes, no, only]",
                    "default": ""
                },
                {
                    "name": "stateCode",
                    "type": "STRING",
                    "description": "Filter events by state code",
                    "default": ""
                },
                {
                    "name": "latLong",
                    "type": "MAP",
                    "description": "Filter events by latitude and longitude",
                    "default": ""
                },
                {
                    "name": "segmentName",
                    "type": "STRING",
                    "description": "Filter events by segment name",
                    "default": ""
                },
                {
                    "name": "eventId",
                    "type": "STRING",
                    "description": "Filter entities by its id",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Page size",
                    "default": ""
                },
                {
                    "name": "unit",
                    "type": "SELECT",
                    "description": "Unit of the radius. Possible values:miles, km",
                    "default": ""
                },
                {
                    "name": "attractionId",
                    "type": "STRING",
                    "description": "Filter events by attraction id",
                    "default": ""
                },
                {
                    "name": "classificationId",
                    "type": "STRING",
                    "description": "Filter events by classification id: id of any segment, genre, sub-genre, type, sub-type",
                    "default": ""
                },
                {
                    "name": "promoterId",
                    "type": "STRING",
                    "description": "Filter events by promoter id",
                    "default": ""
                },
                {
                    "name": "includeTest",
                    "type": "SELECT",
                    "description": "True if you want to have entities flag as test in the response. Only, if you only wanted test entities. String enum:[yes, no, only]",
                    "default": ""
                },
                {
                    "name": "clientVisibility",
                    "type": "STRING",
                    "description": "Filter events by clientName",
                    "default": ""
                },
                {
                    "name": "classificationName",
                    "type": "STRING",
                    "description": "Filter events by classification name: name of any segment, genre, sub-genre, type, sub-type",
                    "default": ""
                },
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "Filter events by venue id",
                    "default": ""
                },
                {
                    "name": "countryCode",
                    "type": "STRING",
                    "description": "Filter events by country code",
                    "default": ""
                },
                {
                    "name": "radius",
                    "type": "STRING",
                    "description": "Radius of the area in which we want to search for events.",
                    "default": ""
                },
                {
                    "name": "segmentId",
                    "type": "STRING",
                    "description": "Filter events by segment id",
                    "default": ""
                },
                {
                    "name": "dmaId",
                    "type": "STRING",
                    "description": "Filter events by dma id",
                    "default": ""
                },
                {
                    "name": "marketId",
                    "type": "STRING",
                    "description": "Filter events by market id",
                    "default": ""
                },
                {
                    "name": "startDateTime",
                    "type": "DATEPICKER",
                    "description": "Filter events with a start date after this date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Page number",
                    "default": ""
                },
                {
                    "name": "keyword",
                    "type": "STRING",
                    "description": "Keyword to search on",
                    "default": ""
                },
                {
                    "name": "source",
                    "type": "SELECT",
                    "description": "Filter entities by its source name. String enum:[ticketmaster, universe, frontgate, tmr]",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Sorting order of the search result. Example value: relevance,desc",
                    "default": ""
                },
                {
                    "name": "onsaleStartDateTime",
                    "type": "DATEPICKER",
                    "description": "Filter events with onsale start date after this date",
                    "default": ""
                },
                {
                    "name": "includeTBD",
                    "type": "SELECT",
                    "description": "True, to include event with a date to be defined (TBD). String enum:[yes, no, only]",
                    "default": ""
                },
                {
                    "name": "locale",
                    "type": "LIST",
                    "description": "The locale in ISO code format. Array of values can be provided. When omitting the country part of the code (e.g. only 'en' or 'fr') then the first matching locale is used.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/searchEvents\"\nquerystring = {\"apiKey\": \"\", \"endDateTime\": \"\", \"onsaleEndDateTime\": \"\", \"includeTBA\": \"\", \"stateCode\": \"\", \"latLong\": \"\", \"segmentName\": \"\", \"eventId\": \"\", \"pageSize\": \"\", \"unit\": \"\", \"attractionId\": \"\", \"classificationId\": \"\", \"promoterId\": \"\", \"includeTest\": \"\", \"clientVisibility\": \"\", \"classificationName\": \"\", \"venueId\": \"\", \"countryCode\": \"\", \"radius\": \"\", \"segmentId\": \"\", \"dmaId\": \"\", \"marketId\": \"\", \"startDateTime\": \"\", \"pageNumber\": \"\", \"keyword\": \"\", \"source\": \"\", \"sort\": \"\", \"onsaleStartDateTime\": \"\", \"includeTBD\": \"\", \"locale\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/searchEvents\"\nquerystring = {\"apiKey\": \"\", \"endDateTime\": \"\", \"onsaleEndDateTime\": \"\", \"includeTBA\": \"\", \"stateCode\": \"\", \"latLong\": \"\", \"segmentName\": \"\", \"eventId\": \"\", \"pageSize\": \"\", \"unit\": \"\", \"attractionId\": \"\", \"classificationId\": \"\", \"promoterId\": \"\", \"includeTest\": \"\", \"clientVisibility\": \"\", \"classificationName\": \"\", \"venueId\": \"\", \"countryCode\": \"\", \"radius\": \"\", \"segmentId\": \"\", \"dmaId\": \"\", \"marketId\": \"\", \"startDateTime\": \"\", \"pageNumber\": \"\", \"keyword\": \"\", \"source\": \"\", \"sort\": \"\", \"onsaleStartDateTime\": \"\", \"includeTBD\": \"\", \"locale\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchVenues",
            "url": "https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/searchVenues",
            "description": "Find venues and filter your search by name, and much more.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client key from Ticketmaster",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "venueId",
                    "type": "STRING",
                    "description": "Filter venues by its id",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Page size",
                    "default": ""
                },
                {
                    "name": "includeTest",
                    "type": "STRING",
                    "description": "True if you want to have entities flag as test in the response. Only, if you only wanted test entities. String enum:[yes, no, only]",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "Sorting order of the search result. Example value: relevance,desc",
                    "default": ""
                },
                {
                    "name": "keyword",
                    "type": "STRING",
                    "description": "Keyword to search on",
                    "default": ""
                },
                {
                    "name": "source",
                    "type": "SELECT",
                    "description": "Filter entities by its source name. String enum:[ticketmaster, universe, frontgate, tmr]",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Page number",
                    "default": ""
                },
                {
                    "name": "stateCode",
                    "type": "STRING",
                    "description": "Filter events by state code",
                    "default": ""
                },
                {
                    "name": "countryCode",
                    "type": "STRING",
                    "description": "Filter events by country code",
                    "default": ""
                },
                {
                    "name": "locale",
                    "type": "LIST",
                    "description": "The locale in ISO code format. Array of values can be provided. When omitting the country part of the code (e.g. only 'en' or 'fr') then the first matching locale is used.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/searchVenues\"\nquerystring = {\"venueId\": \"\", \"pageSize\": \"\", \"includeTest\": \"\", \"sort\": \"\", \"apiKey\": \"\", \"keyword\": \"\", \"source\": \"\", \"pageNumber\": \"\", \"stateCode\": \"\", \"countryCode\": \"\", \"locale\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/searchVenues\"\nquerystring = {\"venueId\": \"\", \"pageSize\": \"\", \"includeTest\": \"\", \"sort\": \"\", \"apiKey\": \"\", \"keyword\": \"\", \"source\": \"\", \"pageNumber\": \"\", \"stateCode\": \"\", \"countryCode\": \"\", \"locale\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateCartProducts",
            "url": "https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/updateCartProducts",
            "description": "This operation allows users to add or remove products to/from a cart.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Client key from Ticketmaster",
                    "default": ""
                },
                {
                    "name": "pollingCallbackUrl",
                    "type": "STRING",
                    "description": "Client webhook URI where response will be posted if the operation polls.",
                    "default": ""
                },
                {
                    "name": "cartId",
                    "type": "STRING",
                    "description": "ID of the cart",
                    "default": ""
                },
                {
                    "name": "products",
                    "type": "ARRAY",
                    "description": "Container of add product requests.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/updateCartProducts\"\nquerystring = {\"apiKey\": \"\", \"pollingCallbackUrl\": \"\", \"cartId\": \"\", \"products\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Ticketmasterstefan-skliarovV1.p.rapidapi.com/updateCartProducts\"\nquerystring = {\"apiKey\": \"\", \"pollingCallbackUrl\": \"\", \"cartId\": \"\", \"products\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Ticketmasterstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}