{
    "product_id": "53aa56cce4b0a705fcc31c4c",
    "tool_description": "Collabinate provides an API for hosted activity streams, allowing you to seamlessly build social feeds, microblogging, and collaboration into your application.",
    "home_url": "https://rapidapi.com/collabinate/api/collabinate/",
    "name": "Collabinate",
    "title": "Collabinate",
    "pricing": "PAID",
    "tool_name": "Collabinate",
    "score": null,
    "host": "collabinate.p.rapidapi.com",
    "api_list": [
        {
            "name": "Follow Multiple",
            "url": "https://collabinate.p.rapidapi.com/users/{userid}/following",
            "description": "Create a follow relationship between a user and a set of entities. The id property of each object in the provided object collection will be used to create the follow relationship.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://collabinate.p.rapidapi.com/users/{userid}/following\"\nquerystring = {\"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"collabinate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://collabinate.p.rapidapi.com/users/{userid}/following\"\nquerystring = {\"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"collabinate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Post Comment",
            "url": "https://collabinate.p.rapidapi.com/entities/{entityid}/stream/{activityid}/comments",
            "description": "Adds a comment to the given activity for the given entity. A user can optionally be associated by adding a \"userId=johndoe\" query parameter. Note that the object type for the comment will be set to \"comment\", and any existing object type will be relocated. Also note that an ID will be assigned to the comment, and any existing ID will be relocated. To specify an ID for the comment, use PUT.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "entityId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "activityId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://collabinate.p.rapidapi.com/entities/{entityid}/stream/{activityid}/comments\"\nquerystring = {\"entityId\": \"\", \"activityId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"collabinate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://collabinate.p.rapidapi.com/entities/{entityid}/stream/{activityid}/comments\"\nquerystring = {\"entityId\": \"\", \"activityId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"collabinate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Create Activity",
            "url": "https://collabinate.p.rapidapi.com/entities/{entityid}/stream",
            "description": "Adds a single activity to the stream for an entity. The posted data should be in the Activity Streams format (http://activitystrea.ms/specs/json/1.0/#activity). If it is not, the data will be added to the \"content\" value of a newly created activity. Note that the Collabinate system will generate an ID and add it to the activity. If the activity already has an ID, it will be moved to a metadata field. Adding an activity with an existing ID should be performed via PUT. Comments and likes contained in the activity will be processed by the system unless the URL query parameters \"ignoreComments=true\" or \"ignoreLikes=true\" are present.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "entityId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "ignoreComments",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": true
                }
            ],
            "code": "import requests\n\nurl = \"https://collabinate.p.rapidapi.com/entities/{entityid}/stream\"\nquerystring = {\"entityId\": \"\", \"ignoreComments\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"collabinate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://collabinate.p.rapidapi.com/entities/{entityid}/stream\"\nquerystring = {\"entityId\": \"\", \"ignoreComments\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"collabinate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        }
    ]
}