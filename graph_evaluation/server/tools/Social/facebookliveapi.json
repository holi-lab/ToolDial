{
    "product_id": "50",
    "tool_description": "Stream, search and manage live video on Facebook. ",
    "home_url": "https://rapidapi.com/dimas/api/FacebookLiveAPI/",
    "name": "FacebookLiveAPI",
    "title": "FacebookLiveAPI",
    "pricing": "FREE",
    "tool_name": "FacebookLiveAPI",
    "score": null,
    "host": "FacebookLiveAPIdimasV1.p.rapidapi.com",
    "api_list": [
        {
            "name": "createLiveVideo",
            "url": "https://FacebookLiveAPIdimasV1.p.rapidapi.com/createLiveVideo",
            "description": "Allows to create live video.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "edge",
                    "type": "STRING",
                    "description": "valid liveVideoId.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "CREDENTIALS",
                    "description": "Your accessToken obtained from Facebook.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "status",
                    "type": "SELECT",
                    "description": "Choose between UNPUBLISHED or LIVE_NOW.",
                    "default": ""
                },
                {
                    "name": "plannedStartTime",
                    "type": "STRING",
                    "description": "Unix timestamp when the broadcaster plans to go live.",
                    "default": ""
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "The description of the live video.",
                    "default": ""
                },
                {
                    "name": "published",
                    "type": "STRING",
                    "description": "Set this to false to preview the stream before going live. Deprecated. Prefer setting the status instead.",
                    "default": ""
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "The title of the live video.",
                    "default": ""
                },
                {
                    "name": "streamType",
                    "type": "STRING",
                    "description": "The type of stream. Default value: REGULAR. Use AMBIENT for continuous broadcasts that last days or weeks (like panda cams). Ambient broadcasts do not generate VOD or notifications.",
                    "default": ""
                },
                {
                    "name": "contentTags",
                    "type": "STRING",
                    "description": "Tags that describe the contents of the video. Use search endpoint with type=adinterest to get possible IDs.",
                    "default": ""
                },
                {
                    "name": "saveVod",
                    "type": "STRING",
                    "description": "Whether or not the video data should be saved for later consumption in VOD format. Default is true, except for certain broadcasts types (e.g. AMBIENT)",
                    "default": ""
                },
                {
                    "name": "privacy",
                    "type": "STRING",
                    "description": "Privacy for this live video.",
                    "default": ""
                },
                {
                    "name": "stopOnDeleteStream",
                    "type": "STRING",
                    "description": "Default value: true. Set this to true if stream should be stopped when deleteStream RTMP command received.",
                    "default": ""
                },
                {
                    "name": "isAudioOnly",
                    "type": "STRING",
                    "description": "Flag to indicate that the broadcast is audio-only andhas no video stream.",
                    "default": ""
                },
                {
                    "name": "targeting",
                    "type": "JSON",
                    "description": "Object and looks like only for page_id edge that limits the audience for this content. Anyone not in these demographics will not be able to view this content.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FacebookLiveAPIdimasV1.p.rapidapi.com/createLiveVideo\"\nquerystring = {\"status\": \"\", \"plannedStartTime\": \"\", \"description\": \"\", \"published\": \"\", \"title\": \"\", \"edge\": \"\", \"streamType\": \"\", \"contentTags\": \"\", \"saveVod\": \"\", \"privacy\": \"\", \"stopOnDeleteStream\": \"\", \"accessToken\": \"\", \"isAudioOnly\": \"\", \"targeting\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FacebookLiveAPIdimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FacebookLiveAPIdimasV1.p.rapidapi.com/createLiveVideo\"\nquerystring = {\"status\": \"\", \"plannedStartTime\": \"\", \"description\": \"\", \"published\": \"\", \"title\": \"\", \"edge\": \"\", \"streamType\": \"\", \"contentTags\": \"\", \"saveVod\": \"\", \"privacy\": \"\", \"stopOnDeleteStream\": \"\", \"accessToken\": \"\", \"isAudioOnly\": \"\", \"targeting\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FacebookLiveAPIdimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteLiveVideo",
            "url": "https://FacebookLiveAPIdimasV1.p.rapidapi.com/deleteLiveVideo",
            "description": "Allows to delete live video.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "liveVideoId",
                    "type": "STRING",
                    "description": "valid liveVideoId.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "CREDENTIALS",
                    "description": "Your accessToken obtained from Facebook.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FacebookLiveAPIdimasV1.p.rapidapi.com/deleteLiveVideo\"\nquerystring = {\"liveVideoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FacebookLiveAPIdimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FacebookLiveAPIdimasV1.p.rapidapi.com/deleteLiveVideo\"\nquerystring = {\"liveVideoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FacebookLiveAPIdimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getLiveVideo",
            "url": "https://FacebookLiveAPIdimasV1.p.rapidapi.com/getLiveVideo",
            "description": "Allows to get information about live video.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "CREDENTIALS",
                    "description": "Your accessToken obtained from Facebook.",
                    "default": ""
                },
                {
                    "name": "liveVideoId",
                    "type": "STRING",
                    "description": "The ID of the live video.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FacebookLiveAPIdimasV1.p.rapidapi.com/getLiveVideo\"\nquerystring = {\"accessToken\": \"\", \"liveVideoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FacebookLiveAPIdimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FacebookLiveAPIdimasV1.p.rapidapi.com/getLiveVideo\"\nquerystring = {\"accessToken\": \"\", \"liveVideoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FacebookLiveAPIdimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getLiveVideoComments",
            "url": "https://FacebookLiveAPIdimasV1.p.rapidapi.com/getLiveVideoComments",
            "description": "Allows to retrive comments for live video.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "liveVideoId",
                    "type": "STRING",
                    "description": "valid liveVideoId.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "CREDENTIALS",
                    "description": "Your accessToken obtained from Facebook.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "liveFilter",
                    "type": "STRING",
                    "description": "Default value: filter_low_quality. For comments on a Live streaming video, this determines whether low quality comments will be filtered out of the results (filtering is enabled by default). In all other circumstances this parameter is ignored.",
                    "default": ""
                },
                {
                    "name": "order",
                    "type": "STRING",
                    "description": "Preferred ordering of the comments. Accepts chronological (oldest first) and reverse chronological (newest first). If the comments can be ranked, then the order will always be ranked regardless of this modifier.",
                    "default": ""
                },
                {
                    "name": "filter",
                    "type": "STRING",
                    "description": "Default value: toplevelfilter.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FacebookLiveAPIdimasV1.p.rapidapi.com/getLiveVideoComments\"\nquerystring = {\"liveFilter\": \"\", \"liveVideoId\": \"\", \"accessToken\": \"\", \"order\": \"\", \"filter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FacebookLiveAPIdimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FacebookLiveAPIdimasV1.p.rapidapi.com/getLiveVideoComments\"\nquerystring = {\"liveFilter\": \"\", \"liveVideoId\": \"\", \"accessToken\": \"\", \"order\": \"\", \"filter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FacebookLiveAPIdimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getLiveVideoErrors",
            "url": "https://FacebookLiveAPIdimasV1.p.rapidapi.com/getLiveVideoErrors",
            "description": "Allows to retrive errors for live video.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "liveVideoId",
                    "type": "STRING",
                    "description": "valid liveVideoId.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "CREDENTIALS",
                    "description": "Your accessToken obtained from Facebook.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FacebookLiveAPIdimasV1.p.rapidapi.com/getLiveVideoErrors\"\nquerystring = {\"liveVideoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FacebookLiveAPIdimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FacebookLiveAPIdimasV1.p.rapidapi.com/getLiveVideoErrors\"\nquerystring = {\"liveVideoId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FacebookLiveAPIdimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getLiveVideoLikes",
            "url": "https://FacebookLiveAPIdimasV1.p.rapidapi.com/getLiveVideoLikes",
            "description": "Allows to retrive likes for live video.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "CREDENTIALS",
                    "description": "Your accessToken obtained from Facebook.",
                    "default": ""
                },
                {
                    "name": "liveVideoId",
                    "type": "STRING",
                    "description": "valid liveVideoId.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://FacebookLiveAPIdimasV1.p.rapidapi.com/getLiveVideoLikes\"\nquerystring = {\"accessToken\": \"\", \"liveVideoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FacebookLiveAPIdimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FacebookLiveAPIdimasV1.p.rapidapi.com/getLiveVideoLikes\"\nquerystring = {\"accessToken\": \"\", \"liveVideoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FacebookLiveAPIdimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getLiveVideoReactions",
            "url": "https://FacebookLiveAPIdimasV1.p.rapidapi.com/getLiveVideoReactions",
            "description": "Allows to retrive reactions for live video.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "CREDENTIALS",
                    "description": "Your accessToken obtained from Facebook.",
                    "default": ""
                },
                {
                    "name": "liveVideoId",
                    "type": "STRING",
                    "description": "valid liveVideoId.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "type",
                    "type": "SELECT",
                    "description": "Reaction type. Avaliable values: NONE, LIKE, LOVE, WOW, HAHA, SAD, ANGRY, THANKFUL.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FacebookLiveAPIdimasV1.p.rapidapi.com/getLiveVideoReactions\"\nquerystring = {\"accessToken\": \"\", \"type\": \"\", \"liveVideoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FacebookLiveAPIdimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FacebookLiveAPIdimasV1.p.rapidapi.com/getLiveVideoReactions\"\nquerystring = {\"accessToken\": \"\", \"type\": \"\", \"liveVideoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FacebookLiveAPIdimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateLiveVideo",
            "url": "https://FacebookLiveAPIdimasV1.p.rapidapi.com/updateLiveVideo",
            "description": "Allows to update live video.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "CREDENTIALS",
                    "description": "Your accessToken obtained from Facebook.",
                    "default": ""
                },
                {
                    "name": "liveVideoId",
                    "type": "STRING",
                    "description": "valid liveVideoId.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "The description of the live video.",
                    "default": ""
                },
                {
                    "name": "contentTags",
                    "type": "STRING",
                    "description": "Tags that describe the contents of the video. Use search endpoint with type=adinterest to get possible IDs.",
                    "default": ""
                },
                {
                    "name": "isAudioOnly",
                    "type": "STRING",
                    "description": "Flag to indicate that the broadcast is audio-only andhas no video stream.",
                    "default": ""
                },
                {
                    "name": "embeddable",
                    "type": "STRING",
                    "description": "If true, live video will be embeddable.",
                    "default": ""
                },
                {
                    "name": "sponsorId",
                    "type": "STRING",
                    "description": "Facebook Page id that is tagged as sponsor in the video post.",
                    "default": ""
                },
                {
                    "name": "targeting",
                    "type": "JSON",
                    "description": "Object and looks like only for page_id edge that limits the audience for this content. Anyone not in these demographics will not be able to view this content.",
                    "default": ""
                },
                {
                    "name": "privacy",
                    "type": "STRING",
                    "description": "Privacy for this live video.",
                    "default": ""
                },
                {
                    "name": "streamType",
                    "type": "STRING",
                    "description": "The type of stream. Default value: REGULAR. Use AMBIENT for continuous broadcasts that last days or weeks (like panda cams). Ambient broadcasts do not generate VOD or notifications.",
                    "default": ""
                },
                {
                    "name": "published",
                    "type": "STRING",
                    "description": "Set this to false to preview the stream before going live. Deprecated. Prefer setting the status instead.",
                    "default": ""
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "The title of the live video.",
                    "default": ""
                },
                {
                    "name": "status",
                    "type": "SELECT",
                    "description": "Choose between UNPUBLISHED or LIVE_NOW.",
                    "default": ""
                },
                {
                    "name": "disturbing",
                    "type": "STRING",
                    "description": "If true, autoplay will be disabled and live video will have a graphic content warning overlay.",
                    "default": ""
                },
                {
                    "name": "place",
                    "type": "STRING",
                    "description": "Location associated with the video, if any.",
                    "default": ""
                },
                {
                    "name": "tags",
                    "type": "STRING",
                    "description": "Users tagged in the live video.",
                    "default": ""
                },
                {
                    "name": "copyrightsViolationDialogState",
                    "type": "STRING",
                    "description": "Broadcaster-FB dialog regarding copyrights violation found, if any.",
                    "default": ""
                },
                {
                    "name": "endLiveVideo",
                    "type": "STRING",
                    "description": "If true, the live video will be ended. Only valid if the live video is still running.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://FacebookLiveAPIdimasV1.p.rapidapi.com/updateLiveVideo\"\nquerystring = {\"accessToken\": \"\", \"description\": \"\", \"contentTags\": \"\", \"isAudioOnly\": \"\", \"embeddable\": \"\", \"sponsorId\": \"\", \"targeting\": \"\", \"privacy\": \"\", \"streamType\": \"\", \"published\": \"\", \"title\": \"\", \"liveVideoId\": \"\", \"status\": \"\", \"disturbing\": \"\", \"place\": \"\", \"tags\": \"\", \"copyrightsViolationDialogState\": \"\", \"endLiveVideo\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FacebookLiveAPIdimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://FacebookLiveAPIdimasV1.p.rapidapi.com/updateLiveVideo\"\nquerystring = {\"accessToken\": \"\", \"description\": \"\", \"contentTags\": \"\", \"isAudioOnly\": \"\", \"embeddable\": \"\", \"sponsorId\": \"\", \"targeting\": \"\", \"privacy\": \"\", \"streamType\": \"\", \"published\": \"\", \"title\": \"\", \"liveVideoId\": \"\", \"status\": \"\", \"disturbing\": \"\", \"place\": \"\", \"tags\": \"\", \"copyrightsViolationDialogState\": \"\", \"endLiveVideo\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"FacebookLiveAPIdimasV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}