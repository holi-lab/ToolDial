{
    "product_id": "116",
    "tool_description": "Retrieve data from Stack forums (including Stack Overflow).",
    "home_url": "https://rapidapi.com/stefan.skliarov/api/StackOverflow/",
    "name": "StackOverflow",
    "title": "StackOverflow",
    "pricing": "FREE",
    "tool_name": "StackOverflow",
    "score": {
        "avgServiceLevel": 0,
        "avgLatency": 127253,
        "avgSuccessRate": 0,
        "popularityScore": 4.8,
        "__typename": "Score"
    },
    "host": "StackOverflowstefan-skliarovV1.p.rapidapi.com",
    "api_list": [
        {
            "name": "acceptAnswer",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/acceptAnswer",
            "description": "Accepts an answer.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client Key for your application",
                    "default": ""
                },
                {
                    "name": "answerId",
                    "type": "NUMBER",
                    "description": "Id of the answer to accept",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "preview",
                    "type": "SELECT",
                    "description": "Preview: true or false",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/acceptAnswer\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"answerId\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/acceptAnswer\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"answerId\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addFlagToAnswer",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/addFlagToAnswer",
            "description": "Adds flag to the answer",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "flagId",
                    "type": "NUMBER",
                    "description": "Id of the flag",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client Key for your application",
                    "default": ""
                },
                {
                    "name": "answerId",
                    "type": "NUMBER",
                    "description": "Id of the answer",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "preview",
                    "type": "SELECT",
                    "description": "Preview: true or false",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/addFlagToAnswer\"\nquerystring = {\"flagId\": \"\", \"accessToken\": \"\", \"clientKey\": \"\", \"answerId\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/addFlagToAnswer\"\nquerystring = {\"flagId\": \"\", \"accessToken\": \"\", \"clientKey\": \"\", \"answerId\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addFlagToComment",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/addFlagToComment",
            "description": "Adds flag to the comment",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client Key for your application",
                    "default": ""
                },
                {
                    "name": "commentId",
                    "type": "NUMBER",
                    "description": "Id of the comment",
                    "default": ""
                },
                {
                    "name": "flagId",
                    "type": "NUMBER",
                    "description": "Id of the flag",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "preview",
                    "type": "SELECT",
                    "description": "Preview: true or false",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/addFlagToComment\"\nquerystring = {\"clientKey\": \"\", \"commentId\": \"\", \"flagId\": \"\", \"accessToken\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/addFlagToComment\"\nquerystring = {\"clientKey\": \"\", \"commentId\": \"\", \"flagId\": \"\", \"accessToken\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createAnswerOnQuestion",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/createAnswerOnQuestion",
            "description": "Create a new answer on the given question.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client Key for your application",
                    "default": ""
                },
                {
                    "name": "questionId",
                    "type": "NUMBER",
                    "description": "Id of the question to answer",
                    "default": ""
                },
                {
                    "name": "answerBody",
                    "type": "STRING",
                    "description": "Body of the answer",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "preview",
                    "type": "SELECT",
                    "description": "Preview: true or false",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/createAnswerOnQuestion\"\nquerystring = {\"clientKey\": \"\", \"questionId\": \"\", \"answerBody\": \"\", \"accessToken\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/createAnswerOnQuestion\"\nquerystring = {\"clientKey\": \"\", \"questionId\": \"\", \"answerBody\": \"\", \"accessToken\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createComment",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/createComment",
            "description": "Create a new comment.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client Key for your application",
                    "default": ""
                },
                {
                    "name": "postId",
                    "type": "NUMBER",
                    "description": "Id of the post to comment",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "commentBody",
                    "type": "STRING",
                    "description": "Body of the comment",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "preview",
                    "type": "SELECT",
                    "description": "Preview: true or false",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/createComment\"\nquerystring = {\"clientKey\": \"\", \"postId\": \"\", \"accessToken\": \"\", \"commentBody\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/createComment\"\nquerystring = {\"clientKey\": \"\", \"postId\": \"\", \"accessToken\": \"\", \"commentBody\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createFilter",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/createFilter",
            "description": "Creates a new filter given a list of includes, excludes, a base filter, and whether or not this filter should be unsafe.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "baseFilter",
                    "type": "STRING",
                    "description": "Base filter",
                    "default": ""
                },
                {
                    "name": "includeList",
                    "type": "STRING",
                    "description": "List of includes",
                    "default": ""
                },
                {
                    "name": "exludeList",
                    "type": "STRING",
                    "description": "List of excludes",
                    "default": ""
                },
                {
                    "name": "unsafe",
                    "type": "SELECT",
                    "description": "Is filter safe or not",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/createFilter\"\nquerystring = {\"baseFilter\": \"\", \"clientKey\": \"\", \"includeList\": \"\", \"exludeList\": \"\", \"accessToken\": \"\", \"unsafe\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/createFilter\"\nquerystring = {\"baseFilter\": \"\", \"clientKey\": \"\", \"includeList\": \"\", \"exludeList\": \"\", \"accessToken\": \"\", \"unsafe\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deAuthenticateApplication",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/deAuthenticateApplication",
            "description": "This method is meant for uninstalling applications, recovering from access_token leaks",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/deAuthenticateApplication\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/deAuthenticateApplication\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteSingleAnswer",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/deleteSingleAnswer",
            "description": "Deletes an answer.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client Key for your application",
                    "default": ""
                },
                {
                    "name": "answerId",
                    "type": "NUMBER",
                    "description": "Id of the answer to delete",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "preview",
                    "type": "SELECT",
                    "description": "Preview: true or false",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/deleteSingleAnswer\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"answerId\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/deleteSingleAnswer\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"answerId\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteSingleComment",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/deleteSingleComment",
            "description": "Deletes a comment.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "commentId",
                    "type": "NUMBER",
                    "description": "Id of the comment to delete",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client Key for your application",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "preview",
                    "type": "SELECT",
                    "description": "Preview: true or false",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/deleteSingleComment\"\nquerystring = {\"accessToken\": \"\", \"commentId\": \"\", \"clientKey\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/deleteSingleComment\"\nquerystring = {\"accessToken\": \"\", \"commentId\": \"\", \"clientKey\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "downvoteAnswer",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/downvoteAnswer",
            "description": "Downvote an answer.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client Key for your application",
                    "default": ""
                },
                {
                    "name": "answerId",
                    "type": "NUMBER",
                    "description": "Id of the answer to downvote",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "preview",
                    "type": "SELECT",
                    "description": "Preview: true or false",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/downvoteAnswer\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"answerId\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/downvoteAnswer\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"answerId\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAccessToken",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAccessToken",
            "description": "Creates a new token",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientSecret",
                    "type": "CREDENTIALS",
                    "description": "The client secret obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "code",
                    "type": "STRING",
                    "description": "Code from the user.",
                    "default": ""
                },
                {
                    "name": "redirectUri",
                    "type": "STRING",
                    "description": "Your redirect URI",
                    "default": ""
                },
                {
                    "name": "clientId",
                    "type": "CREDENTIALS",
                    "description": "The client id obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAccessToken\"\nquerystring = {\"clientSecret\": \"\", \"code\": \"\", \"redirectUri\": \"\", \"clientId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAccessToken\"\nquerystring = {\"clientSecret\": \"\", \"code\": \"\", \"redirectUri\": \"\", \"clientId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAllAnswers",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllAnswers",
            "description": "Returns all the undeleted answers in the system.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: activity(default), creation, votes.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllAnswers\"\nquerystring = {\"accessToken\": \"\", \"sortBy\": \"\", \"pageSize\": \"\", \"toDate\": \"\", \"clientKey\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"sortingOrder\": \"\", \"max\": \"\", \"min\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllAnswers\"\nquerystring = {\"accessToken\": \"\", \"sortBy\": \"\", \"pageSize\": \"\", \"toDate\": \"\", \"clientKey\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"sortingOrder\": \"\", \"max\": \"\", \"min\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAllBadges",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllBadges",
            "description": "Returns all the badges in the system.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: rank(default), name, type.",
                    "default": ""
                },
                {
                    "name": "inName",
                    "type": "STRING",
                    "description": "The inName parameter lets consumers filter the results down to just those badges with a certain substring in their display name.",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: rank(default), name, type.",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllBadges\"\nquerystring = {\"sortBy\": \"\", \"clientKey\": \"\", \"inName\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"accessToken\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllBadges\"\nquerystring = {\"sortBy\": \"\", \"clientKey\": \"\", \"inName\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"accessToken\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAllComments",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllComments",
            "description": "Gets all the comments on the site.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: creation(default), votes.",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllComments\"\nquerystring = {\"accessToken\": \"\", \"pageSize\": \"\", \"sortBy\": \"\", \"toDate\": \"\", \"clientKey\": \"\", \"fromDate\": \"\", \"sortingOrder\": \"\", \"pageNumber\": \"\", \"max\": \"\", \"min\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllComments\"\nquerystring = {\"accessToken\": \"\", \"pageSize\": \"\", \"sortBy\": \"\", \"toDate\": \"\", \"clientKey\": \"\", \"fromDate\": \"\", \"sortingOrder\": \"\", \"pageNumber\": \"\", \"max\": \"\", \"min\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAllEvents",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllEvents",
            "description": "Returns a stream of events that have occurred on the site.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllEvents\"\nquerystring = {\"accessToken\": \"\", \"pageSize\": \"\", \"fromDate\": \"\", \"clientKey\": \"\", \"pageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllEvents\"\nquerystring = {\"accessToken\": \"\", \"pageSize\": \"\", \"fromDate\": \"\", \"clientKey\": \"\", \"pageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAllNamedBadges",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllNamedBadges",
            "description": "Gets all explicitly named badges in the system.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: rank(default), name.",
                    "default": ""
                },
                {
                    "name": "inName",
                    "type": "STRING",
                    "description": "The inName parameter lets consumers filter the results down to just those badges with a certain substring in their display name.",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "inName",
                    "type": "STRING",
                    "description": "The inName parameter lets consumers filter the results down to just those badges with a certain substring in their display name.",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: rank(default), name.",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllNamedBadges\"\nquerystring = {\"clientKey\": \"\", \"sortBy\": \"\", \"inName\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"fromDate\": \"\", \"accessToken\": \"\", \"sortingOrder\": \"\", \"pageNumber\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllNamedBadges\"\nquerystring = {\"clientKey\": \"\", \"sortBy\": \"\", \"inName\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"fromDate\": \"\", \"accessToken\": \"\", \"sortingOrder\": \"\", \"pageNumber\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAllPosts",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllPosts",
            "description": "Fetches all posts (questions and answers) on the site.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: activity(default), creation, votes.",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllPosts\"\nquerystring = {\"pageSize\": \"\", \"toDate\": \"\", \"accessToken\": \"\", \"sortBy\": \"\", \"pageNumber\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"clientKey\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllPosts\"\nquerystring = {\"pageSize\": \"\", \"toDate\": \"\", \"accessToken\": \"\", \"sortBy\": \"\", \"pageNumber\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"clientKey\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAllPrivileges",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllPrivileges",
            "description": "Returns the earnable privileges on a site.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllPrivileges\"\nquerystring = {\"pageNumber\": \"\", \"pageSize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllPrivileges\"\nquerystring = {\"pageNumber\": \"\", \"pageSize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAllSuggestedEdits",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllSuggestedEdits",
            "description": "Returns all the suggested edits in the systems.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: creation(default), approval, rejection.",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllSuggestedEdits\"\nquerystring = {\"sortBy\": \"\", \"toDate\": \"\", \"accessToken\": \"\", \"pageSize\": \"\", \"sortingOrder\": \"\", \"clientKey\": \"\", \"pageNumber\": \"\", \"fromDate\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllSuggestedEdits\"\nquerystring = {\"sortBy\": \"\", \"toDate\": \"\", \"accessToken\": \"\", \"pageSize\": \"\", \"sortingOrder\": \"\", \"clientKey\": \"\", \"pageNumber\": \"\", \"fromDate\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAllTagsSynonyms",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllTagsSynonyms",
            "description": "Returns all tag synonyms found a site.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: creation(default), activity, applied.",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllTagsSynonyms\"\nquerystring = {\"toDate\": \"\", \"pageSize\": \"\", \"sortBy\": \"\", \"pageNumber\": \"\", \"fromDate\": \"\", \"sortingOrder\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAllTagsSynonyms\"\nquerystring = {\"toDate\": \"\", \"pageSize\": \"\", \"sortBy\": \"\", \"pageNumber\": \"\", \"fromDate\": \"\", \"sortingOrder\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAnswerFlagOptions",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAnswerFlagOptions",
            "description": "Returns the different flags that the user identified with an accessToken can create for the answer identified by answerId. ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client Key for your application",
                    "default": ""
                },
                {
                    "name": "answerId",
                    "type": "NUMBER",
                    "description": "Id of the answer",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAnswerFlagOptions\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"answerId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAnswerFlagOptions\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"answerId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAnswersByIds",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAnswersByIds",
            "description": "Returns answers in the system with provided Ids.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "answerIds",
                    "type": "LIST",
                    "description": "List of ids array.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: activity(default), creation, votes.",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAnswersByIds\"\nquerystring = {\"clientKey\": \"\", \"pageSize\": \"\", \"sortBy\": \"\", \"toDate\": \"\", \"accessToken\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"min\": \"\", \"max\": \"\", \"answerIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAnswersByIds\"\nquerystring = {\"clientKey\": \"\", \"pageSize\": \"\", \"sortBy\": \"\", \"toDate\": \"\", \"accessToken\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"min\": \"\", \"max\": \"\", \"answerIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAnswersByUserIds",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAnswersByUserIds",
            "description": "Returns the answers the users in userIds have posted.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "userIds",
                    "type": "STRING",
                    "description": "Ids of the users array.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "userIds",
                    "type": "STRING",
                    "description": "Ids of the users array.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "userIds",
                    "type": "STRING",
                    "description": "Ids of the users array.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: activity(default), creation, votes.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: activity(default), creation, votes.",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAnswersByUserIds\"\nquerystring = {\"fromDate\": \"\", \"sortingOrder\": \"\", \"pageNumber\": \"\", \"accessToken\": \"\", \"userIds\": \"\", \"sortBy\": \"\", \"pageSize\": \"\", \"clientKey\": \"\", \"toDate\": \"\", \"max\": \"\", \"min\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAnswersByUserIds\"\nquerystring = {\"fromDate\": \"\", \"sortingOrder\": \"\", \"pageNumber\": \"\", \"accessToken\": \"\", \"userIds\": \"\", \"sortBy\": \"\", \"pageSize\": \"\", \"clientKey\": \"\", \"toDate\": \"\", \"max\": \"\", \"min\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAnswersComments",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAnswersComments",
            "description": "Gets the comments on a set of answers.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "answerIds",
                    "type": "STRING",
                    "description": "Answer Ids array",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: creation(default), votes.",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAnswersComments\"\nquerystring = {\"fromDate\": \"\", \"pageNumber\": \"\", \"sortingOrder\": \"\", \"pageSize\": \"\", \"answerIds\": \"\", \"toDate\": \"\", \"sortBy\": \"\", \"max\": \"\", \"min\": \"\", \"clientKey\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAnswersComments\"\nquerystring = {\"fromDate\": \"\", \"pageNumber\": \"\", \"sortingOrder\": \"\", \"pageSize\": \"\", \"answerIds\": \"\", \"toDate\": \"\", \"sortBy\": \"\", \"max\": \"\", \"min\": \"\", \"clientKey\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAnswersToQuestions",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAnswersToQuestions",
            "description": "Gets the answers to a set of questions identified in ids.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "questionIds",
                    "type": "STRING",
                    "description": "Question ids array",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: activity(default), creation, votes.",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAnswersToQuestions\"\nquerystring = {\"clientKey\": \"\", \"toDate\": \"\", \"questionIds\": \"\", \"pageSize\": \"\", \"sortBy\": \"\", \"accessToken\": \"\", \"pageNumber\": \"\", \"fromDate\": \"\", \"sortingOrder\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAnswersToQuestions\"\nquerystring = {\"clientKey\": \"\", \"toDate\": \"\", \"questionIds\": \"\", \"pageSize\": \"\", \"sortBy\": \"\", \"accessToken\": \"\", \"pageNumber\": \"\", \"fromDate\": \"\", \"sortingOrder\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAssociatedAccountsByUserIds",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAssociatedAccountsByUserIds",
            "description": "Returns all of a user's associated accounts, given their userIds",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "userIds",
                    "type": "LIST",
                    "description": "List of user ids array.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "accountTypes",
                    "type": "STRING",
                    "description": "You can filter the accountTypes returned by this method with the types parameter. Specify, semicolon delimited, main_site or meta_site to filter by site.",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAssociatedAccountsByUserIds\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"pageSize\": \"\", \"accountTypes\": \"\", \"pageNumber\": \"\", \"userIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getAssociatedAccountsByUserIds\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"pageSize\": \"\", \"accountTypes\": \"\", \"pageNumber\": \"\", \"userIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getBadgesByIds",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getBadgesByIds",
            "description": "Gets the badges identified in badgeIds.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "badgeIds",
                    "type": "LIST",
                    "description": "Badge Ids array",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: rank(default), name, type.",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getBadgesByIds\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"pageSize\": \"\", \"sortBy\": \"\", \"toDate\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"min\": \"\", \"max\": \"\", \"badgeIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getBadgesByIds\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"pageSize\": \"\", \"sortBy\": \"\", \"toDate\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"min\": \"\", \"max\": \"\", \"badgeIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCommentFlagOptions",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getCommentFlagOptions",
            "description": "Returns the different flags that the user identified with an accessToken can create for the comment identified by commentId.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client Key for your application",
                    "default": ""
                },
                {
                    "name": "commentId",
                    "type": "NUMBER",
                    "description": "Id of the comment",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "preview",
                    "type": "SELECT",
                    "description": "Preview: true or false",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getCommentFlagOptions\"\nquerystring = {\"clientKey\": \"\", \"commentId\": \"\", \"accessToken\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getCommentFlagOptions\"\nquerystring = {\"clientKey\": \"\", \"commentId\": \"\", \"accessToken\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCommentsByIds",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getCommentsByIds",
            "description": "Gets all the comments with commentIds.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "commentIds",
                    "type": "LIST",
                    "description": "Ids of the comments.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: creation(default), votes.",
                    "default": ""
                },
                {
                    "name": "String",
                    "type": "NUMBER",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getCommentsByIds\"\nquerystring = {\"clientKey\": \"\", \"accessToken\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"sortBy\": \"\", \"String\": \"\", \"min\": \"\", \"commentIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getCommentsByIds\"\nquerystring = {\"clientKey\": \"\", \"accessToken\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"sortBy\": \"\", \"String\": \"\", \"min\": \"\", \"commentIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getElectedModerators",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getElectedModerators",
            "description": "Returns those users on a site who both have moderator powers, and were actually elected. This method excludes Stack Exchange Inc. employees, unless they were actually elected moderators on a site (which can only have happened prior to their employment).",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: reputation(default), creation, name, modified.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getElectedModerators\"\nquerystring = {\"toDate\": \"\", \"sortBy\": \"\", \"accessToken\": \"\", \"pageSize\": \"\", \"clientKey\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"sortingOrder\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getElectedModerators\"\nquerystring = {\"toDate\": \"\", \"sortBy\": \"\", \"accessToken\": \"\", \"pageSize\": \"\", \"clientKey\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"sortingOrder\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMe",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMe",
            "description": "Returns the user associated with the passed accessToken",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMe\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMe\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMentionedMeComments",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMentionedMeComments",
            "description": "Returns the comments mentioning the user associated with the given accessToken.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: creation(default), votes.",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMentionedMeComments\"\nquerystring = {\"clientKey\": \"\", \"pageNumber\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"accessToken\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"sortBy\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMentionedMeComments\"\nquerystring = {\"clientKey\": \"\", \"pageNumber\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"accessToken\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"sortBy\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMentionedUsersComments",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMentionedUsersComments",
            "description": "Returns the comments mentioning the users in userIds.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "userIds",
                    "type": "LIST",
                    "description": "Ids of users array",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: creation(default), votes.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMentionedUsersComments\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"sortBy\": \"\", \"pageSize\": \"\", \"toDate\": \"\", \"pageNumber\": \"\", \"fromDate\": \"\", \"sortingOrder\": \"\", \"min\": \"\", \"max\": \"\", \"userIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMentionedUsersComments\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"sortBy\": \"\", \"pageSize\": \"\", \"toDate\": \"\", \"pageNumber\": \"\", \"fromDate\": \"\", \"sortingOrder\": \"\", \"min\": \"\", \"max\": \"\", \"userIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getModeratorTags",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getModeratorTags",
            "description": "Returns the tags found on a site that only moderators can use.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "inName",
                    "type": "STRING",
                    "description": "Filters down to tags that contain a certain substring",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: popular(default), activity, name.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getModeratorTags\"\nquerystring = {\"sortingOrder\": \"\", \"pageNumber\": \"\", \"fromDate\": \"\", \"inName\": \"\", \"toDate\": \"\", \"sortBy\": \"\", \"pageSize\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getModeratorTags\"\nquerystring = {\"sortingOrder\": \"\", \"pageNumber\": \"\", \"fromDate\": \"\", \"inName\": \"\", \"toDate\": \"\", \"sortBy\": \"\", \"pageSize\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getModerators",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getModerators",
            "description": "Gets those users on a site who can exercise moderation powers. Note, employees of Stack Exchange Inc. will be returned if they have been granted moderation powers on a site even if they have never been appointed or elected explicitly. This method checks abilities, not the manner in which they were obtained.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: reputation(default), creation, name, modified.",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getModerators\"\nquerystring = {\"sortingOrder\": \"\", \"clientKey\": \"\", \"pageNumber\": \"\", \"fromDate\": \"\", \"pageSize\": \"\", \"accessToken\": \"\", \"sortBy\": \"\", \"toDate\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getModerators\"\nquerystring = {\"sortingOrder\": \"\", \"clientKey\": \"\", \"pageNumber\": \"\", \"fromDate\": \"\", \"pageSize\": \"\", \"accessToken\": \"\", \"sortBy\": \"\", \"toDate\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMyActivity",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyActivity",
            "description": "Returns a summary of a user's activity across the Stack Exchange network associated with provided accessToken.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "activityTypes",
                    "type": "STRING",
                    "description": "Type of network activity",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyActivity\"\nquerystring = {\"toDate\": \"\", \"pageSize\": \"\", \"accessToken\": \"\", \"clientKey\": \"\", \"fromDate\": \"\", \"activityTypes\": \"\", \"pageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyActivity\"\nquerystring = {\"toDate\": \"\", \"pageSize\": \"\", \"accessToken\": \"\", \"clientKey\": \"\", \"fromDate\": \"\", \"activityTypes\": \"\", \"pageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMyAnswers",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyAnswers",
            "description": "Returns the top 30 answers the user associated with the given accessToken has posted in response to questions with the given tags.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "tagList",
                    "type": "STRING",
                    "description": "List of tags.",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: activity(default), creation, votes.",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "tagList",
                    "type": "STRING",
                    "description": "List of tags.",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: activity(default), creation, votes.",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyAnswers\"\nquerystring = {\"sortingOrder\": \"\", \"fromDate\": \"\", \"accessToken\": \"\", \"pageNumber\": \"\", \"clientKey\": \"\", \"tagList\": \"\", \"sortBy\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyAnswers\"\nquerystring = {\"sortingOrder\": \"\", \"fromDate\": \"\", \"accessToken\": \"\", \"pageNumber\": \"\", \"clientKey\": \"\", \"tagList\": \"\", \"sortBy\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMyAssociatedAccounts",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyAssociatedAccounts",
            "description": "Returns all of a user's associated accounts, given an acccessToken for them.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "accountTypes",
                    "type": "STRING",
                    "description": "You can filter the accountTypes returned by this method with the types parameter. Specify, semicolon delimited, main_site or meta_site to filter by site.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyAssociatedAccounts\"\nquerystring = {\"pageSize\": \"\", \"accessToken\": \"\", \"pageNumber\": \"\", \"accountTypes\": \"\", \"clientKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyAssociatedAccounts\"\nquerystring = {\"pageSize\": \"\", \"accessToken\": \"\", \"pageNumber\": \"\", \"accountTypes\": \"\", \"clientKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMyBadges",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyBadges",
            "description": "Returns the badges earned by the user associated with the given accessToken",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: rank(default), name, type",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyBadges\"\nquerystring = {\"pageNumber\": \"\", \"fromDate\": \"\", \"clientKey\": \"\", \"sortingOrder\": \"\", \"sortBy\": \"\", \"accessToken\": \"\", \"pageSize\": \"\", \"toDate\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyBadges\"\nquerystring = {\"pageNumber\": \"\", \"fromDate\": \"\", \"clientKey\": \"\", \"sortingOrder\": \"\", \"sortBy\": \"\", \"accessToken\": \"\", \"pageSize\": \"\", \"toDate\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMyComments",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyComments",
            "description": "Returns the comments owned by the user associated with the given accessToken.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: creation(default), votes.",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyComments\"\nquerystring = {\"accessToken\": \"\", \"sortBy\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"clientKey\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyComments\"\nquerystring = {\"accessToken\": \"\", \"sortBy\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"clientKey\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMyInbox",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyInbox",
            "description": "Returns a user's inbox associated with accessToken",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyInbox\"\nquerystring = {\"accessToken\": \"\", \"pageSize\": \"\", \"pageNumber\": \"\", \"clientKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyInbox\"\nquerystring = {\"accessToken\": \"\", \"pageSize\": \"\", \"pageNumber\": \"\", \"clientKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMyNotifications",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyNotifications",
            "description": "Returns a user's notifications, given an accessToken.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyNotifications\"\nquerystring = {\"accessToken\": \"\", \"pageSize\": \"\", \"clientKey\": \"\", \"pageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyNotifications\"\nquerystring = {\"accessToken\": \"\", \"pageSize\": \"\", \"clientKey\": \"\", \"pageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMyPosts",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyPosts",
            "description": "Fetches all posts (questions and answers) of the user with provided accessToken.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: activity(default), creation, votes.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyPosts\"\nquerystring = {\"toDate\": \"\", \"sortBy\": \"\", \"accessToken\": \"\", \"pageSize\": \"\", \"clientKey\": \"\", \"pageNumber\": \"\", \"fromDate\": \"\", \"sortingOrder\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyPosts\"\nquerystring = {\"toDate\": \"\", \"sortBy\": \"\", \"accessToken\": \"\", \"pageSize\": \"\", \"clientKey\": \"\", \"pageNumber\": \"\", \"fromDate\": \"\", \"sortingOrder\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMyPrivileges",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyPrivileges",
            "description": "Returns the privileges on a site for the user identified by provided accessToken.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyPrivileges\"\nquerystring = {\"accessToken\": \"\", \"pageSize\": \"\", \"clientKey\": \"\", \"pageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyPrivileges\"\nquerystring = {\"accessToken\": \"\", \"pageSize\": \"\", \"clientKey\": \"\", \"pageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMyReplyComments",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyReplyComments",
            "description": "Returns the comments owned by the user associated with the given accessToken that are in reply to the user identified by userId.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "NUMBER",
                    "description": "User Id",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "NUMBER",
                    "description": "User Id",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: creation(default), votes.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: creation(default), votes.",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyReplyComments\"\nquerystring = {\"sortingOrder\": \"\", \"accessToken\": \"\", \"pageNumber\": \"\", \"fromDate\": \"\", \"clientKey\": \"\", \"toDate\": \"\", \"sortBy\": \"\", \"userId\": \"\", \"pageSize\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyReplyComments\"\nquerystring = {\"sortingOrder\": \"\", \"accessToken\": \"\", \"pageNumber\": \"\", \"fromDate\": \"\", \"clientKey\": \"\", \"toDate\": \"\", \"sortBy\": \"\", \"userId\": \"\", \"pageSize\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMyReputation",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyReputation",
            "description": "Returns the reputation on a site for the user identified by provided accessToken.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyReputation\"\nquerystring = {\"clientKey\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyReputation\"\nquerystring = {\"clientKey\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMyReputationHistory",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyReputationHistory",
            "description": "Returns the reputation history on a site for the user identified by provided accessToken.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyReputationHistory\"\nquerystring = {\"pageSize\": \"\", \"accessToken\": \"\", \"clientKey\": \"\", \"pageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyReputationHistory\"\nquerystring = {\"pageSize\": \"\", \"accessToken\": \"\", \"clientKey\": \"\", \"pageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMySuggestedEdits",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMySuggestedEdits",
            "description": "Returns the suggested edits the user identified by accessToken has submitted.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: creation(default), approval, rejection.",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMySuggestedEdits\"\nquerystring = {\"sortBy\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"accessToken\": \"\", \"clientKey\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"sortingOrder\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMySuggestedEdits\"\nquerystring = {\"sortBy\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"accessToken\": \"\", \"clientKey\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"sortingOrder\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMyTags",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyTags",
            "description": "Returns the tags the user identified by the accessToken passed is active in.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: popular(default), activity, name.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyTags\"\nquerystring = {\"toDate\": \"\", \"sortBy\": \"\", \"pageSize\": \"\", \"accessToken\": \"\", \"pageNumber\": \"\", \"clientKey\": \"\", \"fromDate\": \"\", \"sortingOrder\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyTags\"\nquerystring = {\"toDate\": \"\", \"sortBy\": \"\", \"pageSize\": \"\", \"accessToken\": \"\", \"pageNumber\": \"\", \"clientKey\": \"\", \"fromDate\": \"\", \"sortingOrder\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMyTimeline",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyTimeline",
            "description": "Get a subset of the actions of that have been taken by the users identified by accessToken.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyTimeline\"\nquerystring = {\"clientKey\": \"\", \"fromDate\": \"\", \"accessToken\": \"\", \"toDate\": \"\", \"pageNumber\": \"\", \"pageSize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyTimeline\"\nquerystring = {\"clientKey\": \"\", \"fromDate\": \"\", \"accessToken\": \"\", \"toDate\": \"\", \"pageNumber\": \"\", \"pageSize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMyTopAnswerTags",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyTopAnswerTags",
            "description": "Returns the user identified by accessToken's top 30 tags by answer score.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyTopAnswerTags\"\nquerystring = {\"pageSize\": \"\", \"accessToken\": \"\", \"pageNumber\": \"\", \"clientKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyTopAnswerTags\"\nquerystring = {\"pageSize\": \"\", \"accessToken\": \"\", \"pageNumber\": \"\", \"clientKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMyTopQuestionTags",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyTopQuestionTags",
            "description": "Returns the user identified by accessToken's top 30 tags by question score.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyTopQuestionTags\"\nquerystring = {\"clientKey\": \"\", \"pageNumber\": \"\", \"accessToken\": \"\", \"pageSize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyTopQuestionTags\"\nquerystring = {\"clientKey\": \"\", \"pageNumber\": \"\", \"accessToken\": \"\", \"pageSize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMyTopTags",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyTopTags",
            "description": "Returns the user identified by accessToken's top 30 tags by combined question and answer score.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyTopTags\"\nquerystring = {\"accessToken\": \"\", \"pageSize\": \"\", \"clientKey\": \"\", \"pageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyTopTags\"\nquerystring = {\"accessToken\": \"\", \"pageSize\": \"\", \"clientKey\": \"\", \"pageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMyUnreadInboxItems",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyUnreadInboxItems",
            "description": "Returns the unread items from a user's inbox associated with accessToken",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "since",
                    "type": "DATEPICKER",
                    "description": "Since the date",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyUnreadInboxItems\"\nquerystring = {\"pageNumber\": \"\", \"clientKey\": \"\", \"accessToken\": \"\", \"pageSize\": \"\", \"since\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyUnreadInboxItems\"\nquerystring = {\"pageNumber\": \"\", \"clientKey\": \"\", \"accessToken\": \"\", \"pageSize\": \"\", \"since\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMyUnreadNotifications",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyUnreadNotifications",
            "description": "Returns a user's unread notifications, given an accessToken.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyUnreadNotifications\"\nquerystring = {\"clientKey\": \"\", \"pageNumber\": \"\", \"pageSize\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getMyUnreadNotifications\"\nquerystring = {\"clientKey\": \"\", \"pageNumber\": \"\", \"pageSize\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPostsByIds",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getPostsByIds",
            "description": "Fetches posts (questions and answers) on the site with provided Ids.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "postIds",
                    "type": "LIST",
                    "description": "Ids of posts.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: activity(default), creation, votes.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getPostsByIds\"\nquerystring = {\"clientKey\": \"\", \"sortBy\": \"\", \"accessToken\": \"\", \"pageSize\": \"\", \"toDate\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"sortingOrder\": \"\", \"min\": \"\", \"max\": \"\", \"postIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getPostsByIds\"\nquerystring = {\"clientKey\": \"\", \"sortBy\": \"\", \"accessToken\": \"\", \"pageSize\": \"\", \"toDate\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"sortingOrder\": \"\", \"min\": \"\", \"max\": \"\", \"postIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPostsByUserIds",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getPostsByUserIds",
            "description": "Fetches posts (questions and answers) on the site made by users with provided Ids.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "userIds",
                    "type": "LIST",
                    "description": "Ids of users.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: activity(default), creation, votes.",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getPostsByUserIds\"\nquerystring = {\"clientKey\": \"\", \"accessToken\": \"\", \"fromDate\": \"\", \"sortingOrder\": \"\", \"pageNumber\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"sortBy\": \"\", \"min\": \"\", \"max\": \"\", \"userIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getPostsByUserIds\"\nquerystring = {\"clientKey\": \"\", \"accessToken\": \"\", \"fromDate\": \"\", \"sortingOrder\": \"\", \"pageNumber\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"sortBy\": \"\", \"min\": \"\", \"max\": \"\", \"userIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPostsCommentsByIds",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getPostsCommentsByIds",
            "description": "Gets the comments on a set of posts.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "postIds",
                    "type": "LIST",
                    "description": "Post Ids array",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: creation(default), votes.",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getPostsCommentsByIds\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"sortBy\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"pageNumber\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"min\": \"\", \"max\": \"\", \"postIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getPostsCommentsByIds\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"sortBy\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"pageNumber\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"min\": \"\", \"max\": \"\", \"postIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getPostsSuggestedEdits",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getPostsSuggestedEdits",
            "description": "Returns suggested edits on the posts identified in ids.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "postIds",
                    "type": "LIST",
                    "description": "Post Ids array",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: creation(default), approval, rejection.",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getPostsSuggestedEdits\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"pageSize\": \"\", \"toDate\": \"\", \"sortBy\": \"\", \"pageNumber\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"min\": \"\", \"max\": \"\", \"postIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getPostsSuggestedEdits\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"pageSize\": \"\", \"toDate\": \"\", \"sortBy\": \"\", \"pageNumber\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"min\": \"\", \"max\": \"\", \"postIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getQuestionFlagOptions",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getQuestionFlagOptions",
            "description": "Returns the different flags that the user identified with an accessToken can create for the question identified by questionId.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "questionId",
                    "type": "NUMBER",
                    "description": "Id of the question",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client Key for your application",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getQuestionFlagOptions\"\nquerystring = {\"questionId\": \"\", \"clientKey\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getQuestionFlagOptions\"\nquerystring = {\"questionId\": \"\", \"clientKey\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getRecentlyAwardedBadges",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getRecentlyAwardedBadges",
            "description": "Returns recently awarded badges in the system.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getRecentlyAwardedBadges\"\nquerystring = {\"pageSize\": \"\", \"toDate\": \"\", \"accessToken\": \"\", \"pageNumber\": \"\", \"clientKey\": \"\", \"fromDate\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getRecentlyAwardedBadges\"\nquerystring = {\"pageSize\": \"\", \"toDate\": \"\", \"accessToken\": \"\", \"pageNumber\": \"\", \"clientKey\": \"\", \"fromDate\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getRelatedTags",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getRelatedTags",
            "description": "Returns the tags that are most related to those in tagNames.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tagNames",
                    "type": "LIST",
                    "description": "List of tag names array",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getRelatedTags\"\nquerystring = {\"pageSize\": \"\", \"pageNumber\": \"\", \"tagNames\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getRelatedTags\"\nquerystring = {\"pageSize\": \"\", \"pageNumber\": \"\", \"tagNames\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getRequiredTags",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getRequiredTags",
            "description": "Returns the tags found on a site that fulfill required tag constraints on questions.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: popular(default), activity, name.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "inName",
                    "type": "STRING",
                    "description": "Filters down to tags that contain a certain substring",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getRequiredTags\"\nquerystring = {\"fromDate\": \"\", \"sortingOrder\": \"\", \"pageNumber\": \"\", \"sortBy\": \"\", \"pageSize\": \"\", \"toDate\": \"\", \"inName\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getRequiredTags\"\nquerystring = {\"fromDate\": \"\", \"sortingOrder\": \"\", \"pageNumber\": \"\", \"sortBy\": \"\", \"pageSize\": \"\", \"toDate\": \"\", \"inName\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getRevisionsByIds",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getRevisionsByIds",
            "description": "Returns edit revisions identified by revisionsIds",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "revisionIds",
                    "type": "LIST",
                    "description": "Ids of the revisions.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getRevisionsByIds\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"pageSize\": \"\", \"toDate\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"revisionIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getRevisionsByIds\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"pageSize\": \"\", \"toDate\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"revisionIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getRevisionsByPostIds",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getRevisionsByPostIds",
            "description": "Returns edit revisions for the posts identified in postsIds",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "postIds",
                    "type": "LIST",
                    "description": "Ids of the posts.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getRevisionsByPostIds\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"postIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getRevisionsByPostIds\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"postIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleTagTopAnswerers",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getSingleTagTopAnswerers",
            "description": "Returns the top 30 answerers active in a single tag, of either all-time or the last 30 days.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tagName",
                    "type": "STRING",
                    "description": "Name of the tag",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "period",
                    "type": "SELECT",
                    "description": "Period of the selection. Possible valued: all_time(default), month",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getSingleTagTopAnswerers\"\nquerystring = {\"period\": \"\", \"pageSize\": \"\", \"tagName\": \"\", \"pageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getSingleTagTopAnswerers\"\nquerystring = {\"period\": \"\", \"pageSize\": \"\", \"tagName\": \"\", \"pageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleTagTopAskers",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getSingleTagTopAskers",
            "description": "Returns the top 30 askers active in a single tag, of either all-time or the last 30 days.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tagName",
                    "type": "STRING",
                    "description": "Name of the tag",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "period",
                    "type": "SELECT",
                    "description": "Period of the selection. Possible valued: all_time(default), month",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getSingleTagTopAskers\"\nquerystring = {\"tagName\": \"\", \"pageNumber\": \"\", \"pageSize\": \"\", \"period\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getSingleTagTopAskers\"\nquerystring = {\"tagName\": \"\", \"pageNumber\": \"\", \"pageSize\": \"\", \"period\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getStackoverflowStatistics",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getStackoverflowStatistics",
            "description": "Returns a collection of statistics about the site.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getStackoverflowStatistics\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getStackoverflowStatistics\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSuggestedEditsByIds",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getSuggestedEditsByIds",
            "description": "Returns suggested edits identified in editIds",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "editIds",
                    "type": "LIST",
                    "description": "Edit Ids array",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: creation(default), approval, rejection.",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getSuggestedEditsByIds\"\nquerystring = {\"clientKey\": \"\", \"accessToken\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"sortBy\": \"\", \"pageNumber\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"max\": \"\", \"min\": \"\", \"editIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getSuggestedEditsByIds\"\nquerystring = {\"clientKey\": \"\", \"accessToken\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"sortBy\": \"\", \"pageNumber\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"max\": \"\", \"min\": \"\", \"editIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSynonymsForTags",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getSynonymsForTags",
            "description": "Gets all the synonyms that point to the tags identified in tagNames",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tagNames",
                    "type": "LIST",
                    "description": "list of tags",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: creation(default), activity, applied.",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getSynonymsForTags\"\nquerystring = {\"toDate\": \"\", \"pageSize\": \"\", \"sortBy\": \"\", \"pageNumber\": \"\", \"fromDate\": \"\", \"sortingOrder\": \"\", \"min\": \"\", \"max\": \"\", \"tagNames\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getSynonymsForTags\"\nquerystring = {\"toDate\": \"\", \"pageSize\": \"\", \"sortBy\": \"\", \"pageNumber\": \"\", \"fromDate\": \"\", \"sortingOrder\": \"\", \"min\": \"\", \"max\": \"\", \"tagNames\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getTags",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getTags",
            "description": "Returns the tags found on a site.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: popular(default), activity, name.",
                    "default": ""
                },
                {
                    "name": "inName",
                    "type": "STRING",
                    "description": "Filters down to tags that contain a certain substring",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getTags\"\nquerystring = {\"sortingOrder\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"pageSize\": \"\", \"toDate\": \"\", \"sortBy\": \"\", \"inName\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getTags\"\nquerystring = {\"sortingOrder\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"pageSize\": \"\", \"toDate\": \"\", \"sortBy\": \"\", \"inName\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getTagsAwardedBadges",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getTagsAwardedBadges",
            "description": "Gets all explicitly named badges in the system.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "inName",
                    "type": "STRING",
                    "description": "The inName parameter lets consumers filter the results down to just those badges with a certain substring in their tag name.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: rank(default), name.",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "inName",
                    "type": "STRING",
                    "description": "The inName parameter lets consumers filter the results down to just those badges with a certain substring in their tag name.",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: rank(default), name.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: rank(default), name.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getTagsAwardedBadges\"\nquerystring = {\"inName\": \"\", \"pageSize\": \"\", \"sortBy\": \"\", \"clientKey\": \"\", \"toDate\": \"\", \"accessToken\": \"\", \"fromDate\": \"\", \"sortingOrder\": \"\", \"pageNumber\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getTagsAwardedBadges\"\nquerystring = {\"inName\": \"\", \"pageSize\": \"\", \"sortBy\": \"\", \"clientKey\": \"\", \"toDate\": \"\", \"accessToken\": \"\", \"fromDate\": \"\", \"sortingOrder\": \"\", \"pageNumber\": \"\", \"min\": \"\", \"max\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getTagsInfo",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getTagsInfo",
            "description": "Returns tag objects representing the tags in tagNames found on the site.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tagNames",
                    "type": "LIST",
                    "description": "List of tag names array",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: popular(default), activity, name.",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getTagsInfo\"\nquerystring = {\"sortBy\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"min\": \"\", \"max\": \"\", \"tagNames\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getTagsInfo\"\nquerystring = {\"sortBy\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"min\": \"\", \"max\": \"\", \"tagNames\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserActivity",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserActivity",
            "description": "Returns a summary of a user's activity across the Stack Exchange network, given their userId.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "NUMBER",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "activityTypes",
                    "type": "STRING",
                    "description": "Type of user activity one of question_posted, answer_posted, badge_earned, or comment_posted",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserActivity\"\nquerystring = {\"userId\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"clientKey\": \"\", \"fromDate\": \"\", \"accessToken\": \"\", \"pageNumber\": \"\", \"activityTypes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserActivity\"\nquerystring = {\"userId\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"clientKey\": \"\", \"fromDate\": \"\", \"accessToken\": \"\", \"pageNumber\": \"\", \"activityTypes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserInbox",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserInbox",
            "description": "Returns a user's with provided Id inbox ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "NUMBER",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserInbox\"\nquerystring = {\"userId\": \"\", \"clientKey\": \"\", \"pageNumber\": \"\", \"accessToken\": \"\", \"pageSize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserInbox\"\nquerystring = {\"userId\": \"\", \"clientKey\": \"\", \"pageNumber\": \"\", \"accessToken\": \"\", \"pageSize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserNotifications",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserNotifications",
            "description": "Returns a user's notifications with provided userId.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "NUMBER",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserNotifications\"\nquerystring = {\"clientKey\": \"\", \"pageSize\": \"\", \"userId\": \"\", \"accessToken\": \"\", \"pageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserNotifications\"\nquerystring = {\"clientKey\": \"\", \"pageSize\": \"\", \"userId\": \"\", \"accessToken\": \"\", \"pageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserPrivileges",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserPrivileges",
            "description": "Returns the privileges on a site for the user identified by provided userId.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "NUMBER",
                    "description": "Id of the user.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserPrivileges\"\nquerystring = {\"clientKey\": \"\", \"pageSize\": \"\", \"accessToken\": \"\", \"userId\": \"\", \"pageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserPrivileges\"\nquerystring = {\"clientKey\": \"\", \"pageSize\": \"\", \"accessToken\": \"\", \"userId\": \"\", \"pageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserTimeline",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserTimeline",
            "description": "Get a subset of the actions of that have been taken by the users identified by id.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "userIds",
                    "type": "LIST",
                    "description": "Id of the user",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserTimeline\"\nquerystring = {\"fromDate\": \"\", \"accessToken\": \"\", \"pageNumber\": \"\", \"clientKey\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"userIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserTimeline\"\nquerystring = {\"fromDate\": \"\", \"accessToken\": \"\", \"pageNumber\": \"\", \"clientKey\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"userIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserTopAnswerTags",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserTopAnswerTags",
            "description": "Returns the user identified by userId top 30 tags by answer score.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "id of the user",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserTopAnswerTags\"\nquerystring = {\"userId\": \"\", \"clientKey\": \"\", \"pageSize\": \"\", \"accessToken\": \"\", \"pageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserTopAnswerTags\"\nquerystring = {\"userId\": \"\", \"clientKey\": \"\", \"pageSize\": \"\", \"accessToken\": \"\", \"pageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserTopAnswersByTags",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserTopAnswersByTags",
            "description": "Returns the top 30 answers the user associated with the given userId has posted in response to questions with the given tags.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "NUMBER",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "NUMBER",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "tagList",
                    "type": "LIST",
                    "description": "List of tags.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: activity(default), creation, votes.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserTopAnswersByTags\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"pageNumber\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"sortBy\": \"\", \"userId\": \"\", \"pageSize\": \"\", \"toDate\": \"\", \"max\": \"\", \"min\": \"\", \"tagList\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserTopAnswersByTags\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"pageNumber\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"sortBy\": \"\", \"userId\": \"\", \"pageSize\": \"\", \"toDate\": \"\", \"max\": \"\", \"min\": \"\", \"tagList\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserTopQuestionTags",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserTopQuestionTags",
            "description": "Returns the user identified by userId top 30 tags by question score.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "id of the user",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserTopQuestionTags\"\nquerystring = {\"pageSize\": \"\", \"clientKey\": \"\", \"userId\": \"\", \"pageNumber\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserTopQuestionTags\"\nquerystring = {\"pageSize\": \"\", \"clientKey\": \"\", \"userId\": \"\", \"pageNumber\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserTopTags",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserTopTags",
            "description": "Returns the user identified by userId top 30 tags by combined question and answer score.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "id of the user",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserTopTags\"\nquerystring = {\"pageSize\": \"\", \"clientKey\": \"\", \"userId\": \"\", \"accessToken\": \"\", \"pageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserTopTags\"\nquerystring = {\"pageSize\": \"\", \"clientKey\": \"\", \"userId\": \"\", \"accessToken\": \"\", \"pageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserUnreadInboxItems",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserUnreadInboxItems",
            "description": "Returns the unread items in a user's inbox.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "NUMBER",
                    "description": "Id of the user",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "since",
                    "type": "DATEPICKER",
                    "description": "Since the date",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserUnreadInboxItems\"\nquerystring = {\"accessToken\": \"\", \"pageNumber\": \"\", \"clientKey\": \"\", \"userId\": \"\", \"pageSize\": \"\", \"since\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserUnreadInboxItems\"\nquerystring = {\"accessToken\": \"\", \"pageNumber\": \"\", \"clientKey\": \"\", \"userId\": \"\", \"pageSize\": \"\", \"since\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserUnreadNotifications",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserUnreadNotifications",
            "description": "Returns a user's unread notifications with provided userId.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "NUMBER",
                    "description": "Id of the user",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserUnreadNotifications\"\nquerystring = {\"pageNumber\": \"\", \"accessToken\": \"\", \"userId\": \"\", \"pageSize\": \"\", \"clientKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUserUnreadNotifications\"\nquerystring = {\"pageNumber\": \"\", \"accessToken\": \"\", \"userId\": \"\", \"pageSize\": \"\", \"clientKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUsers",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUsers",
            "description": "Returns all users on a site.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: reputation(default), creation, name, modified.",
                    "default": ""
                },
                {
                    "name": "inName",
                    "type": "STRING",
                    "description": "The inName parameter lets consumers filter the results down to just those users with a certain substring in their display name.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: reputation(default), creation, name, modified.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUsers\"\nquerystring = {\"sortBy\": \"\", \"inName\": \"\", \"clientKey\": \"\", \"pageSize\": \"\", \"toDate\": \"\", \"pageNumber\": \"\", \"accessToken\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"max\": \"\", \"min\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUsers\"\nquerystring = {\"sortBy\": \"\", \"inName\": \"\", \"clientKey\": \"\", \"pageSize\": \"\", \"toDate\": \"\", \"pageNumber\": \"\", \"accessToken\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"max\": \"\", \"min\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUsersBadges",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUsersBadges",
            "description": "Returns the badges earned by the users associated with the given userIds",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "userIds",
                    "type": "LIST",
                    "description": "Ids of the users array.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: rank(default), name, type",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUsersBadges\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"pageSize\": \"\", \"toDate\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"sortBy\": \"\", \"min\": \"\", \"max\": \"\", \"userIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUsersBadges\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"pageSize\": \"\", \"toDate\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"sortBy\": \"\", \"min\": \"\", \"max\": \"\", \"userIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUsersByIds",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUsersByIds",
            "description": "Returns information about the user with provided Ids",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "userIds",
                    "type": "LIST",
                    "description": "Ids of the user array.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: reputation(default), creation, name, modified.",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUsersByIds\"\nquerystring = {\"clientKey\": \"\", \"accessToken\": \"\", \"pageNumber\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"sortBy\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"min\": \"\", \"max\": \"\", \"userIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUsersByIds\"\nquerystring = {\"clientKey\": \"\", \"accessToken\": \"\", \"pageNumber\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"sortBy\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"min\": \"\", \"max\": \"\", \"userIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUsersComments",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUsersComments",
            "description": "Gets the comments of users in userIds",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "userIds",
                    "type": "LIST",
                    "description": "User Ids array",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: creation(default), votes.",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUsersComments\"\nquerystring = {\"clientKey\": \"\", \"accessToken\": \"\", \"sortBy\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"fromDate\": \"\", \"sortingOrder\": \"\", \"pageNumber\": \"\", \"min\": \"\", \"max\": \"\", \"userIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUsersComments\"\nquerystring = {\"clientKey\": \"\", \"accessToken\": \"\", \"sortBy\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"fromDate\": \"\", \"sortingOrder\": \"\", \"pageNumber\": \"\", \"min\": \"\", \"max\": \"\", \"userIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUsersReplyComments",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUsersReplyComments",
            "description": "Get the comments that the users in commentatorIds have posted in reply to the single user identified in userId.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "NUMBER",
                    "description": "User Id",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "commentatorIds",
                    "type": "LIST",
                    "description": "Commentators' Ids",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: creation(default), votes.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUsersReplyComments\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"toDate\": \"\", \"sortBy\": \"\", \"pageSize\": \"\", \"userId\": \"\", \"min\": \"\", \"max\": \"\", \"commentatorIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUsersReplyComments\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"toDate\": \"\", \"sortBy\": \"\", \"pageSize\": \"\", \"userId\": \"\", \"min\": \"\", \"max\": \"\", \"commentatorIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUsersReputation",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUsersReputation",
            "description": "Returns the reputation on a site for the user identified by provided userIds.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "userIds",
                    "type": "STRING",
                    "description": "Ids of the users.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUsersReputation\"\nquerystring = {\"pageNumber\": \"\", \"accessToken\": \"\", \"fromDate\": \"\", \"userIds\": \"\", \"clientKey\": \"\", \"pageSize\": \"\", \"toDate\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUsersReputation\"\nquerystring = {\"pageNumber\": \"\", \"accessToken\": \"\", \"fromDate\": \"\", \"userIds\": \"\", \"clientKey\": \"\", \"pageSize\": \"\", \"toDate\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUsersSuggestedEdits",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUsersSuggestedEdits",
            "description": "Returns the suggested edits a users in userIds have submitted.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "userIds",
                    "type": "LIST",
                    "description": "User Ids array",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: creation(default), approval, rejection.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUsersSuggestedEdits\"\nquerystring = {\"clientKey\": \"\", \"accessToken\": \"\", \"sortBy\": \"\", \"pageSize\": \"\", \"toDate\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"min\": \"\", \"max\": \"\", \"userIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUsersSuggestedEdits\"\nquerystring = {\"clientKey\": \"\", \"accessToken\": \"\", \"sortBy\": \"\", \"pageSize\": \"\", \"toDate\": \"\", \"sortingOrder\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"min\": \"\", \"max\": \"\", \"userIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUsersTags",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUsersTags",
            "description": "Returns the tags the users identified in userIds have been active in.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client key obtained from StackOverflow",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "userIds",
                    "type": "LIST",
                    "description": "Ids of users",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: popular(default), activity, name.",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUsersTags\"\nquerystring = {\"clientKey\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"accessToken\": \"\", \"sortBy\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"sortingOrder\": \"\", \"min\": \"\", \"max\": \"\", \"userIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getUsersTags\"\nquerystring = {\"clientKey\": \"\", \"toDate\": \"\", \"pageSize\": \"\", \"accessToken\": \"\", \"sortBy\": \"\", \"fromDate\": \"\", \"pageNumber\": \"\", \"sortingOrder\": \"\", \"min\": \"\", \"max\": \"\", \"userIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getWikisForTags",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getWikisForTags",
            "description": "Gets all the synonyms that point to the tags identified in tagNames",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tagNames",
                    "type": "LIST",
                    "description": "list of tags",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getWikisForTags\"\nquerystring = {\"pageSize\": \"\", \"pageNumber\": \"\", \"tagNames\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/getWikisForTags\"\nquerystring = {\"pageSize\": \"\", \"pageNumber\": \"\", \"tagNames\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "invalidateAccessToken",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/invalidateAccessToken",
            "description": "Immediately expires the access token passed. This method is meant to allow an application to discard any active access tokens it no longer needs.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/invalidateAccessToken\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/invalidateAccessToken\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "search",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/search",
            "description": "Returns the user identified by userId top 30 tags by combined question and answer score.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "searchString",
                    "type": "STRING",
                    "description": "A free form text parameter, will match all question properties based on an undocumented algorithm.",
                    "default": ""
                },
                {
                    "name": "searchString",
                    "type": "STRING",
                    "description": "A free form text parameter, will match all question properties based on an undocumented algorithm.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "minAnswers",
                    "type": "NUMBER",
                    "description": "The minimum number of answers returned questions must have",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: activity(default), creation, votes, relevance.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "questionBody",
                    "type": "STRING",
                    "description": "Text which must appear in returned questions' bodies.",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "questionerId",
                    "type": "NUMBER",
                    "description": "The id of the user who must own the questions returned.",
                    "default": ""
                },
                {
                    "name": "minViews",
                    "type": "NUMBER",
                    "description": "The minimum number of views returned questions must have.",
                    "default": ""
                },
                {
                    "name": "withUrl",
                    "type": "STRING",
                    "description": "A url which must be contained in a post, may include a wildcard.",
                    "default": ""
                },
                {
                    "name": "questionTitle",
                    "type": "STRING",
                    "description": "Text which must appear in returned questions' titles.",
                    "default": ""
                },
                {
                    "name": "closed",
                    "type": "SELECT",
                    "description": "true to return only closed questions, false to return only open ones",
                    "default": ""
                },
                {
                    "name": "wiki",
                    "type": "SELECT",
                    "description": "True to return only community wiki questions, false to return only non-community wiki ones.",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: activity(default), creation, votes, relevance.",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "accepted",
                    "type": "SELECT",
                    "description": "true to return only questions with accepted answers, false to return only those without.",
                    "default": ""
                },
                {
                    "name": "questionTitle",
                    "type": "STRING",
                    "description": "Text which must appear in returned questions' titles.",
                    "default": ""
                },
                {
                    "name": "questionerId",
                    "type": "NUMBER",
                    "description": "The id of the user who must own the questions returned.",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "minAnswers",
                    "type": "NUMBER",
                    "description": "The minimum number of answers returned questions must have",
                    "default": ""
                },
                {
                    "name": "questionBody",
                    "type": "STRING",
                    "description": "Text which must appear in returned questions' bodies.",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "closed",
                    "type": "SELECT",
                    "description": "true to return only closed questions, false to return only open ones",
                    "default": ""
                },
                {
                    "name": "migrated",
                    "type": "SELECT",
                    "description": "true to return only questions migrated away from a site, false to return only those not.",
                    "default": ""
                },
                {
                    "name": "notice",
                    "type": "SELECT",
                    "description": "true to return only questions with post notices, false to return only those without.",
                    "default": ""
                },
                {
                    "name": "questionerId",
                    "type": "NUMBER",
                    "description": "The id of the user who must own the questions returned.",
                    "default": ""
                },
                {
                    "name": "withUrl",
                    "type": "STRING",
                    "description": "A url which must be contained in a post, may include a wildcard.",
                    "default": ""
                },
                {
                    "name": "minViews",
                    "type": "NUMBER",
                    "description": "The minimum number of views returned questions must have.",
                    "default": ""
                },
                {
                    "name": "wiki",
                    "type": "SELECT",
                    "description": "True to return only community wiki questions, false to return only non-community wiki ones.",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Parameter to sort by. Possible values: activity(default), creation, votes, relevance.",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "minAnswers",
                    "type": "NUMBER",
                    "description": "The minimum number of answers returned questions must have",
                    "default": ""
                },
                {
                    "name": "closed",
                    "type": "SELECT",
                    "description": "true to return only closed questions, false to return only open ones",
                    "default": ""
                },
                {
                    "name": "questionerId",
                    "type": "NUMBER",
                    "description": "The id of the user who must own the questions returned.",
                    "default": ""
                },
                {
                    "name": "withUrl",
                    "type": "STRING",
                    "description": "A url which must be contained in a post, may include a wildcard.",
                    "default": ""
                },
                {
                    "name": "minViews",
                    "type": "NUMBER",
                    "description": "The minimum number of views returned questions must have.",
                    "default": ""
                },
                {
                    "name": "wiki",
                    "type": "SELECT",
                    "description": "True to return only community wiki questions, false to return only non-community wiki ones.",
                    "default": ""
                },
                {
                    "name": "sortingOrder",
                    "type": "SELECT",
                    "description": "Ascending or descending sorting order. Possible values: asc and desc(default).",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the page",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Size of the page",
                    "default": ""
                },
                {
                    "name": "fromDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "toDate",
                    "type": "DATEPICKER",
                    "description": "Defines the range of creation_date",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "minAnswers",
                    "type": "NUMBER",
                    "description": "The minimum number of answers returned questions must have",
                    "default": ""
                },
                {
                    "name": "questionBody",
                    "type": "STRING",
                    "description": "Text which must appear in returned questions' bodies.",
                    "default": ""
                },
                {
                    "name": "closed",
                    "type": "SELECT",
                    "description": "true to return only closed questions, false to return only open ones",
                    "default": ""
                },
                {
                    "name": "notice",
                    "type": "SELECT",
                    "description": "true to return only questions with post notices, false to return only those without.",
                    "default": ""
                },
                {
                    "name": "questionTitle",
                    "type": "STRING",
                    "description": "Text which must appear in returned questions' titles.",
                    "default": ""
                },
                {
                    "name": "minViews",
                    "type": "NUMBER",
                    "description": "The minimum number of views returned questions must have.",
                    "default": ""
                },
                {
                    "name": "min",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "migrated",
                    "type": "SELECT",
                    "description": "true to return only questions migrated away from a site, false to return only those not.",
                    "default": ""
                },
                {
                    "name": "notice",
                    "type": "SELECT",
                    "description": "true to return only questions with post notices, false to return only those without.",
                    "default": ""
                },
                {
                    "name": "accepted",
                    "type": "SELECT",
                    "description": "true to return only questions with accepted answers, false to return only those without.",
                    "default": ""
                },
                {
                    "name": "max",
                    "type": "STRING",
                    "description": "Specify the range of a field must fall in (that field being specified by sortBy)",
                    "default": ""
                },
                {
                    "name": "exceptTags",
                    "type": "LIST",
                    "description": "A semicolon delimited list of tags, none of which will be present on returned questions. At least one additional parameter must be set if exceptTags is set, for performance reasons.",
                    "default": ""
                },
                {
                    "name": "withTags",
                    "type": "LIST",
                    "description": "A semicolon delimited list of tags, of which at least one will be present on all returned questions.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/search\"\nquerystring = {\"searchString\": \"\", \"minAnswers\": \"\", \"toDate\": \"\", \"sortBy\": \"\", \"pageSize\": \"\", \"fromDate\": \"\", \"questionBody\": \"\", \"sortingOrder\": \"\", \"pageNumber\": \"\", \"questionerId\": \"\", \"minViews\": \"\", \"withUrl\": \"\", \"questionTitle\": \"\", \"closed\": \"\", \"wiki\": \"\", \"max\": \"\", \"accepted\": \"\", \"min\": \"\", \"migrated\": \"\", \"notice\": \"\", \"exceptTags\": \"\", \"withTags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/search\"\nquerystring = {\"searchString\": \"\", \"minAnswers\": \"\", \"toDate\": \"\", \"sortBy\": \"\", \"pageSize\": \"\", \"fromDate\": \"\", \"questionBody\": \"\", \"sortingOrder\": \"\", \"pageNumber\": \"\", \"questionerId\": \"\", \"minViews\": \"\", \"withUrl\": \"\", \"questionTitle\": \"\", \"closed\": \"\", \"wiki\": \"\", \"max\": \"\", \"accepted\": \"\", \"min\": \"\", \"migrated\": \"\", \"notice\": \"\", \"exceptTags\": \"\", \"withTags\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "undoAcceptOnAnswer",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/undoAcceptOnAnswer",
            "description": "Undo accept on answer.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "answerId",
                    "type": "NUMBER",
                    "description": "Id of the answer to undo accept",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client Key for your application",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "preview",
                    "type": "SELECT",
                    "description": "Preview: true or false",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/undoAcceptOnAnswer\"\nquerystring = {\"accessToken\": \"\", \"answerId\": \"\", \"clientKey\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/undoAcceptOnAnswer\"\nquerystring = {\"accessToken\": \"\", \"answerId\": \"\", \"clientKey\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "undoDownvoteOnAnswer",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/undoDownvoteOnAnswer",
            "description": "Undo downvote on answer.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client Key for your application",
                    "default": ""
                },
                {
                    "name": "answerId",
                    "type": "NUMBER",
                    "description": "Id of the answer to undo downvote",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "preview",
                    "type": "SELECT",
                    "description": "Preview: true or false",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/undoDownvoteOnAnswer\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"answerId\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/undoDownvoteOnAnswer\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"answerId\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "undoUpvoteOnAnswer",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/undoUpvoteOnAnswer",
            "description": "Undo upvote on answer.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "answerId",
                    "type": "NUMBER",
                    "description": "Id of the answer to undo upvote",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client Key for your application",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "preview",
                    "type": "SELECT",
                    "description": "Preview: true or false",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/undoUpvoteOnAnswer\"\nquerystring = {\"accessToken\": \"\", \"answerId\": \"\", \"clientKey\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/undoUpvoteOnAnswer\"\nquerystring = {\"accessToken\": \"\", \"answerId\": \"\", \"clientKey\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "undoUpvoteOnComment",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/undoUpvoteOnComment",
            "description": "Undo upvote on comment.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client Key for your application",
                    "default": ""
                },
                {
                    "name": "commentId",
                    "type": "NUMBER",
                    "description": "Id of the comment to undo upvote",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "preview",
                    "type": "SELECT",
                    "description": "Preview: true or false",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/undoUpvoteOnComment\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"commentId\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/undoUpvoteOnComment\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"commentId\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateSingleAnswer",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/updateSingleAnswer",
            "description": "Updates answer",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "answerBody",
                    "type": "STRING",
                    "description": "Body of the answer update",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client Key for your application",
                    "default": ""
                },
                {
                    "name": "answerId",
                    "type": "NUMBER",
                    "description": "Id of the answer to undo downvote",
                    "default": ""
                },
                {
                    "name": "answerComment",
                    "type": "STRING",
                    "description": "Comment of the answer update",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "preview",
                    "type": "SELECT",
                    "description": "Preview: true or false",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/updateSingleAnswer\"\nquerystring = {\"answerBody\": \"\", \"accessToken\": \"\", \"clientKey\": \"\", \"answerId\": \"\", \"answerComment\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/updateSingleAnswer\"\nquerystring = {\"answerBody\": \"\", \"accessToken\": \"\", \"clientKey\": \"\", \"answerId\": \"\", \"answerComment\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateSingleComment",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/updateSingleComment",
            "description": "Updates comment",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "commentBody",
                    "type": "STRING",
                    "description": "Body of the comment",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "commentId",
                    "type": "NUMBER",
                    "description": "Id of the comment to update",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client Key for your application",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "preview",
                    "type": "SELECT",
                    "description": "Preview: true or false",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/updateSingleComment\"\nquerystring = {\"commentBody\": \"\", \"accessToken\": \"\", \"commentId\": \"\", \"clientKey\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/updateSingleComment\"\nquerystring = {\"commentBody\": \"\", \"accessToken\": \"\", \"commentId\": \"\", \"clientKey\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "upvoteAnswer",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/upvoteAnswer",
            "description": "Upvote an answer.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "answerId",
                    "type": "NUMBER",
                    "description": "Id of the answer to upvote",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client Key for your application",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "preview",
                    "type": "SELECT",
                    "description": "Preview: true or false",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/upvoteAnswer\"\nquerystring = {\"accessToken\": \"\", \"answerId\": \"\", \"clientKey\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/upvoteAnswer\"\nquerystring = {\"accessToken\": \"\", \"answerId\": \"\", \"clientKey\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "upvoteComment",
            "url": "https://StackOverflowstefan-skliarovV1.p.rapidapi.com/upvoteComment",
            "description": "Upvotes the comment.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token obtained from StackOverflow.",
                    "default": ""
                },
                {
                    "name": "clientKey",
                    "type": "CREDENTIALS",
                    "description": "Client Key for your application",
                    "default": ""
                },
                {
                    "name": "commentId",
                    "type": "NUMBER",
                    "description": "Id of the comment to upvote",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "preview",
                    "type": "SELECT",
                    "description": "Preview: true or false",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/upvoteComment\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"commentId\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://StackOverflowstefan-skliarovV1.p.rapidapi.com/upvoteComment\"\nquerystring = {\"accessToken\": \"\", \"clientKey\": \"\", \"commentId\": \"\", \"preview\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"StackOverflowstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}