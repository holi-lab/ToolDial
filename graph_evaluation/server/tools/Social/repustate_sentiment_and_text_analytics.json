{
    "product_id": "53aa3ba7e4b0a9b1348d9b09",
    "tool_description": "Repustate's sentiment analysis and text analytics API allows you to extract key words and phrases and determine social media sentiment in one of many languages. These languages include English, Arabic, German, French and Spanish. Monitor social media as well using our API and retrieve your data all with simple API calls.",
    "home_url": "https://rapidapi.com/repustate/api/repustate-sentiment-and-text-analytics/",
    "name": "Repustate Sentiment and Text Analytics",
    "title": "Repustate Sentiment and Text Analytics",
    "pricing": "FREEMIUM",
    "tool_name": "Repustate Sentiment and Text Analytics",
    "score": null,
    "host": "repustate.p.rapidapi.com",
    "api_list": [
        {
            "name": "Chunking with sentiment",
            "url": "https://repustate.p.rapidapi.com/v2/demokey/chunk.json",
            "description": "Often you might be interested in the individual portions of a document's sentiment, rather than the overall sentiment. Chunking is the process of breaking up a document into its more interesting parts and evaluating the sentiment on it. This API call chunks and returns the sentiment for each chunk.  Note that one of text or url must be included, but not both. If both are included, the text value will be used.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apikey",
                    "type": "STRING",
                    "description": "",
                    "default": "demokey"
                }
            ],
            "optional_parameters": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "One of URL or text must be specified.",
                    "default": "The food was great, but the service was terrible."
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "Can be one of the following 'en', 'de', 'fr', 'es'. English ('en') is the default and does not need to be specified.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://repustate.p.rapidapi.com/v2/demokey/chunk.json\"\nquerystring = {\"url\": \"\", \"text\": \"The food was great, but the service was terrible.\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"repustate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://repustate.p.rapidapi.com/v2/{apikey}/chunk.json\"\nquerystring = {\"url\": \"\", \"text\": \"The food was great, but the service was terrible.\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"repustate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "PowerPoint Slides",
            "url": "https://repustate.p.rapidapi.com/v2/demokey/powerpoint",
            "description": "Repustate allows you to programmatically create PowerPoint slides with a simple API call. This API call can be really useful for automating reports that need to be generated regularly. You can supply a title for each slide and an image. The image must be base64 encoded. Currently, all slides can contain only a title and an image, and the slides are all on a simple white background. We intend to add the ability to make the slides more dynamic as well as suppling a custom template to use.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "author",
                    "type": "STRING",
                    "description": "The author of the slide show",
                    "default": "Martin"
                },
                {
                    "name": "slide_N_title",
                    "type": "STRING",
                    "description": "Each slide should have a title. Enumerate your slides starting from 1. So you would have an argument called slide_1_title, slide_2_title etc.",
                    "default": ""
                },
                {
                    "name": "slide_N_image",
                    "type": "BINARY",
                    "description": "For each slide, you should have an image. Enumerate your slides starting from 1. So you would have an argument called slide_1_image, slide_2_image etc. Image data should be base 64 encoded.",
                    "default": ""
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "The title of the report.",
                    "default": ""
                },
                {
                    "name": "apikey",
                    "type": "STRING",
                    "description": "",
                    "default": "demokey"
                }
            ],
            "optional_parameters": [
                {
                    "name": "slide_N_notes",
                    "type": "STRING",
                    "description": "The text that is passed here gets positioned right under the image. It can serve as a caption to briefly explain the slide in question.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://repustate.p.rapidapi.com/v2/demokey/powerpoint\"\nquerystring = {\"author\": \"Martin\", \"slide_N_title\": \"\", \"slide_N_image\": \"\", \"slide_N_notes\": \"\", \"title\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"repustate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://repustate.p.rapidapi.com/v2/{apikey}/powerpoint\"\nquerystring = {\"author\": \"Martin\", \"slide_N_title\": \"\", \"slide_N_image\": \"\", \"slide_N_notes\": \"\", \"title\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"repustate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Nouns",
            "url": "https://repustate.p.rapidapi.com/v2/demokey/noun.json",
            "description": "With Repustate's natural language toolkit, you can extract nouns, or people, places and things, from data all over the world. Find the topics that are of importance to your customers with this API call.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apikey",
                    "type": "STRING",
                    "description": "",
                    "default": "demokey"
                }
            ],
            "optional_parameters": [
                {
                    "name": "cloud",
                    "type": "STRING",
                    "description": "By default, the response is a list of unique nouns found. Specifying cloud=1 will return a frequency count of nouns.",
                    "default": ""
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "A block of text. You must use HTTP POST if you're analyzing a block of text",
                    "default": "This man is buying iPads."
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "Any valid, encoded URL. Use HTTP POST.",
                    "default": ""
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "For now, only English is supported for noun extraction.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://repustate.p.rapidapi.com/v2/demokey/noun.json\"\nquerystring = {\"cloud\": \"\", \"text\": \"This man is buying iPads.\", \"url\": \"\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"repustate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://repustate.p.rapidapi.com/v2/{apikey}/noun.json\"\nquerystring = {\"cloud\": \"\", \"text\": \"This man is buying iPads.\", \"url\": \"\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"repustate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Adjectives",
            "url": "https://repustate.p.rapidapi.com/v2/demokey/adj.json",
            "description": "With Repustate's natural language toolkit, you can extract key adjectives from data all over the world. Find out which words people are using to describe a particular brand, person or idea.  You must specify at least one of 'url' or 'text' otherwise you will receive an error for providing insufficient arguments.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apikey",
                    "type": "STRING",
                    "description": "",
                    "default": "demokey"
                }
            ],
            "optional_parameters": [
                {
                    "name": "cloud",
                    "type": "STRING",
                    "description": "By default, the response is a list of unique adjectives found. Specifying cloud=1 will return a frequency count of adjectives.",
                    "default": ""
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "A block of text. You must use HTTP POST if you're analyzing a block of text.",
                    "default": "This is a big block of new text"
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "Any valid, URL-encoded URL. Use HTTP POST.",
                    "default": ""
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "The two letter code of the language you're analyzing. The default is English (en); you do not need to specify anything if you're just using English text.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://repustate.p.rapidapi.com/v2/demokey/adj.json\"\nquerystring = {\"cloud\": \"\", \"text\": \"This is a big block of new text\", \"url\": \"\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"repustate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://repustate.p.rapidapi.com/v2/{apikey}/adj.json\"\nquerystring = {\"cloud\": \"\", \"text\": \"This is a big block of new text\", \"url\": \"\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"repustate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Bulk language detection",
            "url": "https://repustate.p.rapidapi.com/v2/demokey/bulk-detect-language.json",
            "description": "Similar to language detection, but works on many pieces of text all at once. Structured similarly to the bulk sentiment call.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "One or more blocks of text. Each argument starting with 'text' will be scored. To help you reconcile scores with blocks of text, Repustate requires that you append some sort of ID to the POST argument. For example, if you had 50 blocks of text, you could enumerate them from 1 to 50 as text1, text2, ..., text50.",
                    "default": "first block of text"
                },
                {
                    "name": "apikey",
                    "type": "STRING",
                    "description": "",
                    "default": "demokey"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://repustate.p.rapidapi.com/v2/demokey/bulk-detect-language.json\"\nquerystring = {\"text\": \"first block of text\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"repustate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://repustate.p.rapidapi.com/v2/{apikey}/bulk-detect-language.json\"\nquerystring = {\"text\": \"first block of text\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"repustate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Data extraction",
            "url": "https://repustate.p.rapidapi.com/v2/demokey/extract-dates.json",
            "description": "Returns any mention of a date in english in form of YYYY-MM-DD. For example, \"I'm going to school next week\" would have result in \"next week\" being converted into a date string.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "The text that contains one or more date phrases",
                    "default": "I can't wait to go to school tomorrow"
                },
                {
                    "name": "apikey",
                    "type": "STRING",
                    "description": "",
                    "default": "demokey"
                }
            ],
            "optional_parameters": [
                {
                    "name": "relative_date",
                    "type": "STRING",
                    "description": "The date strings are converted relative to a specific date. For example, \"day after tomorrow\" would be one day after the relative date. By default, the relative date is the current date at the time of the API call. The format of this parameter should be YYYY-MM-DD",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://repustate.p.rapidapi.com/v2/demokey/extract-dates.json\"\nquerystring = {\"text\": \"I can't wait to go to school tomorrow\", \"relative_date\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"repustate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://repustate.p.rapidapi.com/v2/{apikey}/extract-dates.json\"\nquerystring = {\"text\": \"I can't wait to go to school tomorrow\", \"relative_date\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"repustate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Correction",
            "url": "https://repustate.p.rapidapi.com/v2/demokey/correction.json",
            "description": "If you feel our sentiment engine is incorrect, you can issue a correction using this API call. This correction will only affect your data and cannot be influenced by others. In other words, if another Repustate user submits a correction stating that \"I love hockey\" is negative, that will only affect their scoring going forward, not anybody else's.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "The language of the text you're analyzing.",
                    "default": "en"
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "The snippet of text which you're correcting. For best results, only submit the text that needs to be corrected, and not the surrounding text. For example, in the sentence \"The hotel's beds were too soft\", if you want this to be negative, then submit \"beds were too soft\" (or maybe even \"too soft\") as being negative, and not the \"The hotel\" part of the sentence. This will allow our engine to learn much faster.",
                    "default": "the beds are too soft"
                },
                {
                    "name": "score",
                    "type": "STRING",
                    "description": "The score you think the text should have. Submit -1 for negative or 1 for positive.",
                    "default": "-1"
                },
                {
                    "name": "apikey",
                    "type": "STRING",
                    "description": "",
                    "default": "demokey"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://repustate.p.rapidapi.com/v2/demokey/correction.json\"\nquerystring = {\"language\": \"en\", \"text\": \"the beds are too soft\", \"score\": \"-1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"repustate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://repustate.p.rapidapi.com/v2/{apikey}/correction.json\"\nquerystring = {\"language\": \"en\", \"text\": \"the beds are too soft\", \"score\": \"-1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"repustate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Categorizations",
            "url": "https://repustate.p.rapidapi.com/v2/demokey/categorize.json",
            "description": "Sometimes sentiment alone isn't enough - you want to know which aspects of a particular subject carry sentiment. For example, if you're a hotel, you might be interested in knowing people's opinions on your staff, as well as your amenities and the food offerings.  This API call automically categorizes text according to industry-specific categories. Below you'll find imformation on which industry verticals are supported as well as the categories for each:  hotel (food, price, location, accommodations, amenities, staff), airline (price, staff, in-flight, loyalty), restaurant (price, food, staff, location, atmosphere, events), telecom (price, service, products)",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "niche",
                    "type": "STRING",
                    "description": "The group of categories you're interested in using. Options are one of: hotel, airline, telco, retail, restaurant.",
                    "default": "hotel"
                },
                {
                    "name": "apikey",
                    "type": "STRING",
                    "description": "",
                    "default": "demokey"
                }
            ],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "The text you'd like to analyze. You must supply either text or a URL.",
                    "default": "I loved the rooms, but the coffee could have been better"
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "The URL of the web page you'd like to analyze. You must supply either a URL or a text block.",
                    "default": ""
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "The default is 'en' (English). Currently, only English is supported.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://repustate.p.rapidapi.com/v2/demokey/categorize.json\"\nquerystring = {\"text\": \"I loved the rooms, but the coffee could have been better\", \"url\": \"\", \"niche\": \"hotel\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"repustate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://repustate.p.rapidapi.com/v2/{apikey}/categorize.json\"\nquerystring = {\"text\": \"I loved the rooms, but the coffee could have been better\", \"url\": \"\", \"niche\": \"hotel\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"repustate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Sentiment (bulk)",
            "url": "https://repustate.p.rapidapi.com/v2/demokey/bulk-score.json",
            "description": "If you plan on analyzing a large number of text documents (i.e you already have the text and you're not relying on Repustate to grab the content via a URL) then we suggest utilizing our bulk API. With this API call, you can POST up to 500 pieces of text a time when using English and 100 pieces of text at a time for other languages and Repustate will return an XML or JSON list with a score for each block of text.  All languages can be analyzed in bulk, EXCEPT for Arabic. Only one piece of Arabic text will be analyzed per request.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "One or more blocks of text. Each argument starting with 'text' will be scored. To help you reconcile scores with blocks of text, Repustate requires that you append some sort of ID to the POST argument. For example, if you had 50 blocks of text, you could enumerate them from 1 to 50 as text1, text2, ..., text50.",
                    "default": "A block of text"
                },
                {
                    "name": "apikey",
                    "type": "STRING",
                    "description": "",
                    "default": "demokey"
                }
            ],
            "optional_parameters": [
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "The two letter code of the language you want to analyze the sentiment in. The default is English (en); you do not need to specify anything if you're just scoring English text.",
                    "default": ""
                },
                {
                    "name": "chunk",
                    "type": "STRING",
                    "description": "If provided (it can be any value, the key \"chunk\" just has to be appear in the POST somewhere), each result will also have a list of chunks that were extracted from the text.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://repustate.p.rapidapi.com/v2/demokey/bulk-score.json\"\nquerystring = {\"text\": \"A block of text\", \"lang\": \"\", \"chunk\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"repustate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://repustate.p.rapidapi.com/v2/{apikey}/bulk-score.json\"\nquerystring = {\"text\": \"A block of text\", \"lang\": \"\", \"chunk\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"repustate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Verbs",
            "url": "https://repustate.p.rapidapi.com/v2/demokey/verb.json",
            "description": "With Repustate's natural language toolkit, you can extract key verbs, or action words, from data all over the world. Find the words that connote an intent to act on a certain product or trend.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apikey",
                    "type": "STRING",
                    "description": "",
                    "default": "demokey"
                }
            ],
            "optional_parameters": [
                {
                    "name": "cloud",
                    "type": "STRING",
                    "description": "By default, the response is a list of unique adjectives found. Specifying cloud=1 will return a frequency count of adjectives.",
                    "default": ""
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "A block of text. You must use HTTP POST if you're analyzing a block of text.",
                    "default": "This man is buying iPads."
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "Any valid, URL-encoded URL. Use HTTP POST.",
                    "default": ""
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "The two letter code of the language you're analyzing. The default is English (en); you do not need to specify anything if you're just using English text.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://repustate.p.rapidapi.com/v2/demokey/verb.json\"\nquerystring = {\"cloud\": \"\", \"text\": \"This man is buying iPads.\", \"url\": \"\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"repustate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://repustate.p.rapidapi.com/v2/{apikey}/verb.json\"\nquerystring = {\"cloud\": \"\", \"text\": \"This man is buying iPads.\", \"url\": \"\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"repustate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Sentiment",
            "url": "https://repustate.p.rapidapi.com/v2/demokey/score.json",
            "description": "Repustate's sentiment analysis allows you to determine the sentiment (how people \"feel\" about a particular topic) from any data source you have access to. Like most of Repustate's API calls, you have a choice of how to specify your arguments. You can supply one of a block of text, a single URL, or a list of URLs.  Note that one of text or url must be included, but not both. If both are included, the text value will be used.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apikey",
                    "type": "STRING",
                    "description": "https://www.repustate.com/docs/#signup-modal",
                    "default": "demokey"
                }
            ],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "A block of text",
                    "default": ""
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "Any valid url",
                    "default": "www.twitter.com"
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "The two letter code of the language you want to analyze the sentiment in. The default is English (en); you do not need to specify anything if you're just scoring English text.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://repustate.p.rapidapi.com/v2/demokey/score.json\"\nquerystring = {\"text\": \"\", \"url\": \"www.twitter.com\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"repustate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://repustate.p.rapidapi.com/v2/{apikey}/score.json\"\nquerystring = {\"text\": \"\", \"url\": \"www.twitter.com\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"repustate.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        }
    ]
}