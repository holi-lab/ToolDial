{
    "product_id": "api_dc2ce660-edaa-4db2-88d9-863bc70a3972",
    "tool_description": "Solving TikTok captcha circle and 3d (two the same shapes) \nAccuracy 98.99%\nAverage solution time 1,5 sec",
    "home_url": "https://rapidapi.com/nazar675/api/tiktok-captcha/",
    "name": "TikTok captcha",
    "title": "TikTok captcha",
    "pricing": "FREEMIUM",
    "tool_name": "TikTok captcha",
    "score": null,
    "host": "tiktok-captcha.p.rapidapi.com",
    "api_list": [
        {
            "name": "Check balance",
            "url": "https://tiktok-captcha.p.rapidapi.com/",
            "description": "Correct response example:\n{\"balance\":\"599.75$\"}",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "USER_KEY",
                    "type": "STRING",
                    "description": "",
                    "default": "YOUR_API_KEY"
                },
                {
                    "name": "ACTION",
                    "type": "STRING",
                    "description": "",
                    "default": "balance"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://tiktok-captcha.p.rapidapi.com/\"\nquerystring = {\"USER_KEY\": \"YOUR_API_KEY\", \"ACTION\": \"balance\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tiktok-captcha.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://tiktok-captcha.p.rapidapi.com/\"\nquerystring = {\"USER_KEY\": \"YOUR_API_KEY\", \"ACTION\": \"balance\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tiktok-captcha.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Captcha 3D (two the same shapes)",
            "url": "https://tiktok-captcha.p.rapidapi.com/",
            "description": "Correct response example:\n{\"cordinate_x_1\":\"260\",\"cordinate_y_1\":\"150\",\"cordinate_x_2\":\"124\",\"cordinate_y_2\":\"100\"}",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ACTION",
                    "type": "STRING",
                    "description": "",
                    "default": "tiktok3D"
                },
                {
                    "name": "FULL_IMG_CAPTCHA",
                    "type": "STRING",
                    "description": "",
                    "default": "url on full image"
                }
            ],
            "optional_parameters": [
                {
                    "name": "USER_KEY",
                    "type": "STRING",
                    "description": "",
                    "default": "YOUR_API_KEY"
                }
            ],
            "code": "import requests\n\nurl = \"https://tiktok-captcha.p.rapidapi.com/\"\nquerystring = {\"ACTION\": \"tiktok3D\", \"FULL_IMG_CAPTCHA\": \"url on full image\", \"USER_KEY\": \"YOUR_API_KEY\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tiktok-captcha.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://tiktok-captcha.p.rapidapi.com/\"\nquerystring = {\"ACTION\": \"tiktok3D\", \"FULL_IMG_CAPTCHA\": \"url on full image\", \"USER_KEY\": \"YOUR_API_KEY\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tiktok-captcha.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Captcha circle",
            "url": "https://tiktok-captcha.p.rapidapi.com/",
            "description": "Correct response example:\n{\"cordinate_x\":\"169\",\"cordinate_y\":\"0\"}",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ACTION",
                    "type": "STRING",
                    "description": "",
                    "default": "tiktokcircle"
                },
                {
                    "name": "FULL_IMG_CAPTCHA",
                    "type": "STRING",
                    "description": "",
                    "default": "url on big circle image"
                },
                {
                    "name": "SMALL_IMG_CAPTCHA",
                    "type": "STRING",
                    "description": "",
                    "default": "url on small circle imae"
                }
            ],
            "optional_parameters": [
                {
                    "name": "USER_KEY",
                    "type": "STRING",
                    "description": "",
                    "default": "YOUR_API_KEY"
                }
            ],
            "code": "import requests\n\nurl = \"https://tiktok-captcha.p.rapidapi.com/\"\nquerystring = {\"ACTION\": \"tiktokcircle\", \"FULL_IMG_CAPTCHA\": \"url on big circle image\", \"SMALL_IMG_CAPTCHA\": \"url on small circle imae\", \"USER_KEY\": \"YOUR_API_KEY\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tiktok-captcha.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://tiktok-captcha.p.rapidapi.com/\"\nquerystring = {\"ACTION\": \"tiktokcircle\", \"FULL_IMG_CAPTCHA\": \"url on big circle image\", \"SMALL_IMG_CAPTCHA\": \"url on small circle imae\", \"USER_KEY\": \"YOUR_API_KEY\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tiktok-captcha.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}