{
    "tool_name": "Muse J NLP",
    "tool_description": "\u9ad8\u5ea6\u306a\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u304a\u3088\u3073\u6a5f\u68b0\u5b66\u7fd2\u6280\u8853\u306b\u57fa\u3065\u304d\u3001\u65e5\u672c\u8a9e\u306b\u3088\u308b\u81ea\u7136\u306a\u4f1a\u8a71\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u672cAPI\u306f\u73fe\u6bb5\u968e\u3067\u306f\u30b7\u30cb\u30a2\u5411\u3051\u306e\u4f1a\u8a71\u306b\u5408\u3046\u3088\u3046\u306b\u8abf\u6574\u3055\u308c\u3066\u3044\u307e\u3059\u3002",
    "title": "Muse J NLP",
    "pricing": "FREEMIUM",
    "score": null,
    "home_url": "https://rapidapi.com/aka-corporation-aka-corporation-default/api/muse-j-nlp/",
    "host": "muse-j-nlp.p.rapidapi.com",
    "api_list": [
        {
            "name": "/nlp/emotion/",
            "url": "https://muse-j-nlp.p.rapidapi.com/nlp/emotion/",
            "description": "AKA\u72ec\u81ea\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304b\u3089\u30e9\u30d9\u30ea\u30f3\u30b0\u3057\u3001\u4e0e\u3048\u3089\u308c\u305f\u30c6\u30ad\u30b9\u30c8\u306e\u611f\u60c5\u3092(no_emotion;\u7121\u611f\u60c5)/(anger;\u6012\u308a)/(disgust;\u5acc\u60aa)/(fear;\u6050\u6016)/(happiness;\u697d\u3057\u307f)/(sadness;\u60b2\u3057\u307f)/(surprise;\u9a5a\u304d)\u306e\u4e2d\u304b\u3089\u9078\u3073\u307e\u3059\u3002JWT\u8a8d\u8a3c\u304c\u5fc5\u8981\u3067\u3059\u3002",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer <Access Token>"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://muse-j-nlp.p.rapidapi.com/nlp/emotion/\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"muse-j-nlp.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "data": {
                    "text_in": "",
                    "entry_point": "",
                    "best_emotion": "",
                    "emotions": {
                        "no_emotion": 0,
                        "anger": 0,
                        "disgust": 0,
                        "fear": 0,
                        "happiness": 0,
                        "sadness": 0,
                        "surprise": 0
                    }
                }
            },
            "headers": {
                "Authorization": "Bearer <Access Token>"
            },
            "schema": {
                "properties": {
                    "data": {
                        "allOf": [
                            {
                                "properties": {
                                    "entry_point": {
                                        "type": "string"
                                    },
                                    "text_in": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "properties": {
                                    "best_emotion": {
                                        "type": "string"
                                    },
                                    "emotions": {
                                        "properties": {
                                            "anger": {
                                                "type": "number"
                                            },
                                            "disgust": {
                                                "type": "number"
                                            },
                                            "fear": {
                                                "type": "number"
                                            },
                                            "happiness": {
                                                "type": "number"
                                            },
                                            "no_emotion": {
                                                "type": "number"
                                            },
                                            "sadness": {
                                                "type": "number"
                                            },
                                            "surprise": {
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        ]
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "/nlp/action/",
            "url": "https://muse-j-nlp.p.rapidapi.com/nlp/action/",
            "description": "AKA\u72ec\u81ea\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304b\u3089\u30e9\u30d9\u30ea\u30f3\u30b0\u3057\u3001\u4e0e\u3048\u3089\u308c\u305f\u30c6\u30ad\u30b9\u30c8\u306e\u610f\u56f3\u3092(inform;\u60c5\u5831\u4f1d\u9054)/(question;\u8cea\u554f)/(directive;\u6307\u793a)/(commissive;\u8a31\u53ef)\u306e\u4e2d\u304b\u3089\u9078\u3073\u307e\u3059\u3002JWT\u8a8d\u8a3c\u304c\u5fc5\u8981\u3067\u3059\u3002",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer <Access Token>"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://muse-j-nlp.p.rapidapi.com/nlp/action/\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"muse-j-nlp.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "data": {
                    "text_in": "",
                    "entry_point": "",
                    "best_action": "",
                    "actions": {
                        "inform": 0,
                        "question": 0,
                        "directive": 0,
                        "commissive": 0
                    }
                }
            },
            "headers": {},
            "schema": {
                "properties": {
                    "data": {
                        "allOf": [
                            {
                                "properties": {
                                    "entry_point": {
                                        "type": "string"
                                    },
                                    "text_in": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "properties": {
                                    "actions": {
                                        "properties": {
                                            "commissive": {
                                                "type": "number"
                                            },
                                            "directive": {
                                                "type": "number"
                                            },
                                            "inform": {
                                                "type": "number"
                                            },
                                            "question": {
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "best_action": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        ]
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "/chat/engine/retrieve/",
            "url": "https://muse-j-nlp.p.rapidapi.com/chat/engine/retrieve/",
            "description": "AKA\u72ec\u81ea\u306e\u6d17\u7df4\u3055\u308c\u305f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304b\u3089\u4e0e\u3048\u3089\u308c\u305f\u30c6\u30ad\u30b9\u30c8\u306e\u4e2d\u3067\u6700\u3082\u4f3c\u3066\u3044\u308b\u69cb\u6587\u3092\u62bd\u51fa\u3057\u307e\u3059\u3002JWT\u8a8d\u8a3c\u304c\u5fc5\u8981\u3067\u3059\u3002",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer <Access Token>"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://muse-j-nlp.p.rapidapi.com/chat/engine/retrieve/\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"muse-j-nlp.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "data": {
                    "text_in": "",
                    "entry_point": "",
                    "candidates": [
                        {
                            "response_comment_id": "",
                            "response_to": "",
                            "score": 0,
                            "text": ""
                        }
                    ]
                }
            },
            "headers": {},
            "schema": {
                "properties": {
                    "data": {
                        "allOf": [
                            {
                                "properties": {
                                    "entry_point": {
                                        "type": "string"
                                    },
                                    "text_in": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "properties": {
                                    "candidates": {
                                        "items": {
                                            "properties": {
                                                "response_comment_id": {
                                                    "type": "string"
                                                },
                                                "response_to": {
                                                    "type": "string"
                                                },
                                                "score": {
                                                    "type": "number"
                                                },
                                                "text": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        ]
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "/chat/engine/relevance/",
            "url": "https://muse-j-nlp.p.rapidapi.com/chat/engine/relevance/",
            "description": "AKA\u72ec\u81ea\u306e\u6d17\u7df4\u3055\u308c\u305f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304b\u3089\u5b66\u7fd2\u3057\u305fDeep Learning Model\u3092\u7528\u3044\u3066\u30c6\u30ad\u30b9\u30c8\u30fb\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u304b\u3089\u610f\u5473\u3092\u62bd\u51fa\u3057\u3001\u5019\u88dc\u306e\u4e2d\u304b\u3089\u6700\u3082\u306a\u30c6\u30ad\u30b9\u30c8\u3092\u9078\u3073\u307e\u3059\u3002JWT\u8a8d\u8a3c\u304c\u5fc5\u8981\u3067\u3059\u3002",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer <Access Token>"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://muse-j-nlp.p.rapidapi.com/chat/engine/relevance/\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"muse-j-nlp.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "data": {
                    "text_in": "",
                    "entry_point": "",
                    "best": "",
                    "scores": []
                }
            },
            "headers": {},
            "schema": {
                "properties": {
                    "data": {
                        "allOf": [
                            {
                                "properties": {
                                    "entry_point": {
                                        "type": "string"
                                    },
                                    "text_in": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "properties": {
                                    "best": {
                                        "type": "string"
                                    },
                                    "scores": {
                                        "items": {
                                            "type": "number"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        ]
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "/chat/",
            "url": "https://muse-j-nlp.p.rapidapi.com/chat/",
            "description": "\u4e0e\u3048\u3089\u308c\u305f\u30c6\u30ad\u30b9\u30c8\u3068\u4ee5\u524d\u306e\u4f1a\u8a71\u5c65\u6b74\u3092\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3068\u3057\u3066\u7528\u3044\u3066\u3001\u4ed6\u306eAPI\u5168\u822c\u3092\u7db2\u7f85\u3057\u305f\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u500b\u5225\u30c6\u30ad\u30b9\u30c8\u306e\u5206\u6790\u304c\u5fc5\u8981\u306a\u5834\u5408\u306f\u305d\u308c\u305e\u308c\u306eNLP\u6a5f\u80fd\u3092\u4f7f\u3046\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002JWT\u8a8d\u8a3c\u304c\u5fc5\u8981\u3067\u3059\u3002",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer <Access Token>"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://muse-j-nlp.p.rapidapi.com/chat/\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"muse-j-nlp.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "data": {
                    "text_in": "",
                    "entry_point": "",
                    "text_out": "",
                    "emotion": {
                        "bot": {
                            "best_emotion": "",
                            "emotions": {
                                "no_emotion": 0,
                                "anger": 0,
                                "disgust": 0,
                                "fear": 0,
                                "happiness": 0,
                                "sadness": 0,
                                "surprise": 0
                            }
                        },
                        "user": {
                            "best_emotion": "",
                            "emotions": {
                                "no_emotion": 0,
                                "anger": 0,
                                "disgust": 0,
                                "fear": 0,
                                "happiness": 0,
                                "sadness": 0,
                                "surprise": 0
                            }
                        }
                    },
                    "action_type": {
                        "bot": {
                            "best_action": "",
                            "actions": {
                                "inform": 0,
                                "question": 0,
                                "directive": 0,
                                "commissive": 0
                            }
                        },
                        "user": {
                            "best_action": "",
                            "actions": {
                                "inform": 0,
                                "question": 0,
                                "directive": 0,
                                "commissive": 0
                            }
                        }
                    },
                    "candidates": [
                        {
                            "response_comment_id": "",
                            "response_to": "",
                            "score": 0,
                            "text": ""
                        }
                    ],
                    "chatlog_id": 0
                }
            },
            "headers": {},
            "schema": {
                "properties": {
                    "data": {
                        "allOf": [
                            {
                                "properties": {
                                    "entry_point": {
                                        "type": "string"
                                    },
                                    "text_in": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "properties": {
                                    "text_out": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "properties": {
                                    "emotion": {
                                        "properties": {
                                            "bot": {
                                                "properties": {
                                                    "best_emotion": {
                                                        "type": "string"
                                                    },
                                                    "emotions": {
                                                        "properties": {
                                                            "anger": {
                                                                "type": "number"
                                                            },
                                                            "disgust": {
                                                                "type": "number"
                                                            },
                                                            "fear": {
                                                                "type": "number"
                                                            },
                                                            "happiness": {
                                                                "type": "number"
                                                            },
                                                            "no_emotion": {
                                                                "type": "number"
                                                            },
                                                            "sadness": {
                                                                "type": "number"
                                                            },
                                                            "surprise": {
                                                                "type": "number"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "user": {
                                                "properties": {
                                                    "best_emotion": {
                                                        "type": "string"
                                                    },
                                                    "emotions": {
                                                        "properties": {
                                                            "anger": {
                                                                "type": "number"
                                                            },
                                                            "disgust": {
                                                                "type": "number"
                                                            },
                                                            "fear": {
                                                                "type": "number"
                                                            },
                                                            "happiness": {
                                                                "type": "number"
                                                            },
                                                            "no_emotion": {
                                                                "type": "number"
                                                            },
                                                            "sadness": {
                                                                "type": "number"
                                                            },
                                                            "surprise": {
                                                                "type": "number"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "properties": {
                                    "action_type": {
                                        "properties": {
                                            "bot": {
                                                "properties": {
                                                    "actions": {
                                                        "properties": {
                                                            "commissive": {
                                                                "type": "number"
                                                            },
                                                            "directive": {
                                                                "type": "number"
                                                            },
                                                            "inform": {
                                                                "type": "number"
                                                            },
                                                            "question": {
                                                                "type": "number"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "best_action": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "user": {
                                                "properties": {
                                                    "actions": {
                                                        "properties": {
                                                            "commissive": {
                                                                "type": "number"
                                                            },
                                                            "directive": {
                                                                "type": "number"
                                                            },
                                                            "inform": {
                                                                "type": "number"
                                                            },
                                                            "question": {
                                                                "type": "number"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "best_action": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "properties": {
                                    "candidates": {
                                        "items": {
                                            "properties": {
                                                "response_comment_id": {
                                                    "type": "string"
                                                },
                                                "response_to": {
                                                    "type": "string"
                                                },
                                                "score": {
                                                    "type": "number"
                                                },
                                                "text": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "properties": {
                                    "chatlog_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        ]
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "/members/",
            "url": "https://muse-j-nlp.p.rapidapi.com/members/",
            "description": "\u767b\u9332\u3055\u308c\u305f\u30e1\u30f3\u30d0\u30fc\u3092\u51fa\u529b\u3057\u307e\u3059\u3002JWT\u8a8d\u8a3c\u304c\u5fc5\u8981\u3067\u3059\u3002",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer <Access Token>"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://muse-j-nlp.p.rapidapi.com/members/\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"muse-j-nlp.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "first_name": "",
                "last_name": "",
                "member_id": 0
            },
            "headers": {},
            "schema": {
                "items": {
                    "properties": {
                        "first_name": {
                            "type": "string"
                        },
                        "last_name": {
                            "type": "string"
                        },
                        "member_id": {
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            }
        },
        {
            "name": "/auth/refresh_token/",
            "url": "https://muse-j-nlp.p.rapidapi.com/auth/refresh_token/",
            "description": "Refresh\u30c8\u30fc\u30af\u30f3\u3092\u7528\u3044\u3066\u65b0\u3057\u3044Access\u30c8\u30fc\u30af\u30f3\u3092\u7fd2\u5f97\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3059\u3002JWT\u8a8d\u8a3c\u306f\u4e0d\u8981\u3067\u3059\u3002",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://muse-j-nlp.p.rapidapi.com/auth/refresh_token/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"muse-j-nlp.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "access": ""
            },
            "headers": {},
            "schema": {
                "properties": {
                    "access": {
                        "description": "JWT Bearer",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "/auth/signin/",
            "url": "https://muse-j-nlp.p.rapidapi.com/auth/signin/",
            "description": "API\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3001refresh, access\u305d\u308c\u305e\u308c\u306eJWT\u30c8\u30fc\u30af\u30f3\u3092\u7fd2\u5f97\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3059\u3002JWT\u8a8d\u8a3c\u306f\u4e0d\u8981\u3067\u3059\u3002",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://muse-j-nlp.p.rapidapi.com/auth/signin/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"muse-j-nlp.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "access": "",
                "refresh": ""
            },
            "headers": {},
            "schema": {
                "properties": {
                    "access": {
                        "description": "JWT Bearer",
                        "type": "string"
                    },
                    "refresh": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "/nlp/emotion/",
            "url": "https://muse-j-nlp.p.rapidapi.com/nlp/emotion/",
            "description": "AKA\u72ec\u81ea\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304b\u3089\u30e9\u30d9\u30ea\u30f3\u30b0\u3057\u3001\u4e0e\u3048\u3089\u308c\u305f\u30c6\u30ad\u30b9\u30c8\u306e\u611f\u60c5\u3092(no_emotion;\u7121\u611f\u60c5)/(anger;\u6012\u308a)/(disgust;\u5acc\u60aa)/(fear;\u6050\u6016)/(happiness;\u697d\u3057\u307f)/(sadness;\u60b2\u3057\u307f)/(surprise;\u9a5a\u304d)\u306e\u4e2d\u304b\u3089\u9078\u3073\u307e\u3059\u3002JWT\u8a8d\u8a3c\u304c\u5fc5\u8981\u3067\u3059\u3002",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://muse-j-nlp.p.rapidapi.com/nlp/emotion/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"muse-j-nlp.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://muse-j-nlp.p.rapidapi.com/nlp/emotion/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"muse-j-nlp.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "data": {
                        "allOf": [
                            {
                                "properties": {
                                    "entry_point": {
                                        "type": "string"
                                    },
                                    "text_in": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "properties": {
                                    "best_emotion": {
                                        "type": "string"
                                    },
                                    "emotions": {
                                        "properties": {
                                            "anger": {
                                                "type": "number"
                                            },
                                            "disgust": {
                                                "type": "number"
                                            },
                                            "fear": {
                                                "type": "number"
                                            },
                                            "happiness": {
                                                "type": "number"
                                            },
                                            "no_emotion": {
                                                "type": "number"
                                            },
                                            "sadness": {
                                                "type": "number"
                                            },
                                            "surprise": {
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        ]
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "/nlp/action/",
            "url": "https://muse-j-nlp.p.rapidapi.com/nlp/action/",
            "description": "AKA\u72ec\u81ea\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304b\u3089\u30e9\u30d9\u30ea\u30f3\u30b0\u3057\u3001\u4e0e\u3048\u3089\u308c\u305f\u30c6\u30ad\u30b9\u30c8\u306e\u610f\u56f3\u3092(inform;\u60c5\u5831\u4f1d\u9054)/(question;\u8cea\u554f)/(directive;\u6307\u793a)/(commissive;\u8a31\u53ef)\u306e\u4e2d\u304b\u3089\u9078\u3073\u307e\u3059\u3002JWT\u8a8d\u8a3c\u304c\u5fc5\u8981\u3067\u3059\u3002",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://muse-j-nlp.p.rapidapi.com/nlp/action/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"muse-j-nlp.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://muse-j-nlp.p.rapidapi.com/nlp/action/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"muse-j-nlp.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "data": {
                        "allOf": [
                            {
                                "properties": {
                                    "entry_point": {
                                        "type": "string"
                                    },
                                    "text_in": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "properties": {
                                    "actions": {
                                        "properties": {
                                            "commissive": {
                                                "type": "number"
                                            },
                                            "directive": {
                                                "type": "number"
                                            },
                                            "inform": {
                                                "type": "number"
                                            },
                                            "question": {
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "best_action": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        ]
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "/members/",
            "url": "https://muse-j-nlp.p.rapidapi.com/members/",
            "description": "\u30e6\u30fc\u30b6\u30fc\u306b\u65b0\u3057\u304f\u30e1\u30f3\u30d0\u30fc\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u4f1a\u8a71\u5c65\u6b74\u306a\u3069\u306f\u30e1\u30f3\u30d0\u30fc\u305d\u308c\u305e\u308c\u7ba1\u7406\u3055\u308c\u307e\u3059\u3002JWT\u8a8d\u8a3c\u304c\u5fc5\u8981\u3067\u3059\u3002",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://muse-j-nlp.p.rapidapi.com/members/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"muse-j-nlp.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://muse-j-nlp.p.rapidapi.com/members/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"muse-j-nlp.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/chat/engine/retrieve/",
            "url": "https://muse-j-nlp.p.rapidapi.com/chat/engine/retrieve/",
            "description": "AKA\u72ec\u81ea\u306e\u6d17\u7df4\u3055\u308c\u305f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304b\u3089\u4e0e\u3048\u3089\u308c\u305f\u30c6\u30ad\u30b9\u30c8\u306e\u4e2d\u3067\u6700\u3082\u4f3c\u3066\u3044\u308b\u69cb\u6587\u3092\u62bd\u51fa\u3057\u307e\u3059\u3002JWT\u8a8d\u8a3c\u304c\u5fc5\u8981\u3067\u3059\u3002",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://muse-j-nlp.p.rapidapi.com/chat/engine/retrieve/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"muse-j-nlp.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://muse-j-nlp.p.rapidapi.com/chat/engine/retrieve/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"muse-j-nlp.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "data": {
                        "allOf": [
                            {
                                "properties": {
                                    "entry_point": {
                                        "type": "string"
                                    },
                                    "text_in": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "properties": {
                                    "candidates": {
                                        "items": {
                                            "properties": {
                                                "response_comment_id": {
                                                    "type": "string"
                                                },
                                                "response_to": {
                                                    "type": "string"
                                                },
                                                "score": {
                                                    "type": "number"
                                                },
                                                "text": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        ]
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "/chat/engine/relevance/",
            "url": "https://muse-j-nlp.p.rapidapi.com/chat/engine/relevance/",
            "description": "AKA\u72ec\u81ea\u306e\u6d17\u7df4\u3055\u308c\u305f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304b\u3089\u5b66\u7fd2\u3057\u305fDeep Learning Model\u3092\u7528\u3044\u3066\u30c6\u30ad\u30b9\u30c8\u30fb\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u304b\u3089\u610f\u5473\u3092\u62bd\u51fa\u3057\u3001\u5019\u88dc\u306e\u4e2d\u304b\u3089\u6700\u3082\u306a\u30c6\u30ad\u30b9\u30c8\u3092\u9078\u3073\u307e\u3059\u3002JWT\u8a8d\u8a3c\u304c\u5fc5\u8981\u3067\u3059\u3002",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://muse-j-nlp.p.rapidapi.com/chat/engine/relevance/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"muse-j-nlp.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://muse-j-nlp.p.rapidapi.com/chat/engine/relevance/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"muse-j-nlp.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "data": {
                        "allOf": [
                            {
                                "properties": {
                                    "entry_point": {
                                        "type": "string"
                                    },
                                    "text_in": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "properties": {
                                    "best": {
                                        "type": "string"
                                    },
                                    "scores": {
                                        "items": {
                                            "type": "number"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        ]
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "/chat/",
            "url": "https://muse-j-nlp.p.rapidapi.com/chat/",
            "description": "\u4e0e\u3048\u3089\u308c\u305f\u30c6\u30ad\u30b9\u30c8\u3068\u4ee5\u524d\u306e\u4f1a\u8a71\u5c65\u6b74\u3092\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3068\u3057\u3066\u7528\u3044\u3066\u3001\u4ed6\u306eAPI\u5168\u822c\u3092\u7db2\u7f85\u3057\u305f\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u500b\u5225\u30c6\u30ad\u30b9\u30c8\u306e\u5206\u6790\u304c\u5fc5\u8981\u306a\u5834\u5408\u306f\u305d\u308c\u305e\u308c\u306eNLP\u6a5f\u80fd\u3092\u4f7f\u3046\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002JWT\u8a8d\u8a3c\u304c\u5fc5\u8981\u3067\u3059\u3002",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://muse-j-nlp.p.rapidapi.com/chat/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"muse-j-nlp.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://muse-j-nlp.p.rapidapi.com/chat/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"muse-j-nlp.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "data": {
                        "allOf": [
                            {
                                "properties": {
                                    "entry_point": {
                                        "type": "string"
                                    },
                                    "text_in": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "properties": {
                                    "text_out": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "properties": {
                                    "emotion": {
                                        "properties": {
                                            "bot": {
                                                "properties": {
                                                    "best_emotion": {
                                                        "type": "string"
                                                    },
                                                    "emotions": {
                                                        "properties": {
                                                            "anger": {
                                                                "type": "number"
                                                            },
                                                            "disgust": {
                                                                "type": "number"
                                                            },
                                                            "fear": {
                                                                "type": "number"
                                                            },
                                                            "happiness": {
                                                                "type": "number"
                                                            },
                                                            "no_emotion": {
                                                                "type": "number"
                                                            },
                                                            "sadness": {
                                                                "type": "number"
                                                            },
                                                            "surprise": {
                                                                "type": "number"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "user": {
                                                "properties": {
                                                    "best_emotion": {
                                                        "type": "string"
                                                    },
                                                    "emotions": {
                                                        "properties": {
                                                            "anger": {
                                                                "type": "number"
                                                            },
                                                            "disgust": {
                                                                "type": "number"
                                                            },
                                                            "fear": {
                                                                "type": "number"
                                                            },
                                                            "happiness": {
                                                                "type": "number"
                                                            },
                                                            "no_emotion": {
                                                                "type": "number"
                                                            },
                                                            "sadness": {
                                                                "type": "number"
                                                            },
                                                            "surprise": {
                                                                "type": "number"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "properties": {
                                    "action_type": {
                                        "properties": {
                                            "bot": {
                                                "properties": {
                                                    "actions": {
                                                        "properties": {
                                                            "commissive": {
                                                                "type": "number"
                                                            },
                                                            "directive": {
                                                                "type": "number"
                                                            },
                                                            "inform": {
                                                                "type": "number"
                                                            },
                                                            "question": {
                                                                "type": "number"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "best_action": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "user": {
                                                "properties": {
                                                    "actions": {
                                                        "properties": {
                                                            "commissive": {
                                                                "type": "number"
                                                            },
                                                            "directive": {
                                                                "type": "number"
                                                            },
                                                            "inform": {
                                                                "type": "number"
                                                            },
                                                            "question": {
                                                                "type": "number"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "best_action": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "properties": {
                                    "candidates": {
                                        "items": {
                                            "properties": {
                                                "response_comment_id": {
                                                    "type": "string"
                                                },
                                                "response_to": {
                                                    "type": "string"
                                                },
                                                "score": {
                                                    "type": "number"
                                                },
                                                "text": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "properties": {
                                    "chatlog_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        ]
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "/auth/signup/",
            "url": "https://muse-j-nlp.p.rapidapi.com/auth/signup/",
            "description": "\u3053\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306f\u65b0\u3057\u3044\u30e6\u30fc\u30b6\u30fc\u304c\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u308c\u308b\u3082\u306e\u3067\u3059\u3002JWT\u8a8d\u8a3c\u306f\u4e0d\u8981\u3067\u3059\u3002",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://muse-j-nlp.p.rapidapi.com/auth/signup/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"muse-j-nlp.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://muse-j-nlp.p.rapidapi.com/auth/signup/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"muse-j-nlp.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/auth/refresh_token/",
            "url": "https://muse-j-nlp.p.rapidapi.com/auth/refresh_token/",
            "description": "Refresh\u30c8\u30fc\u30af\u30f3\u3092\u7528\u3044\u3066\u65b0\u3057\u3044Access\u30c8\u30fc\u30af\u30f3\u3092\u7fd2\u5f97\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3059\u3002JWT\u8a8d\u8a3c\u306f\u4e0d\u8981\u3067\u3059\u3002",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://muse-j-nlp.p.rapidapi.com/auth/refresh_token/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"muse-j-nlp.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://muse-j-nlp.p.rapidapi.com/auth/refresh_token/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"muse-j-nlp.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "access": {
                        "description": "JWT Bearer",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "/auth/signin/",
            "url": "https://muse-j-nlp.p.rapidapi.com/auth/signin/",
            "description": "API\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3001refresh, access\u305d\u308c\u305e\u308c\u306eJWT\u30c8\u30fc\u30af\u30f3\u3092\u7fd2\u5f97\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3059\u3002JWT\u8a8d\u8a3c\u306f\u4e0d\u8981\u3067\u3059\u3002",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://muse-j-nlp.p.rapidapi.com/auth/signin/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"muse-j-nlp.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://muse-j-nlp.p.rapidapi.com/auth/signin/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"muse-j-nlp.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "access": {
                        "description": "JWT Bearer",
                        "type": "string"
                    },
                    "refresh": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    ]
}