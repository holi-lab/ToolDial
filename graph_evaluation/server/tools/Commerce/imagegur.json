{
    "tool_name": "Imagegur",
    "tool_description": "postman to oas testing",
    "title": "Imagegur",
    "pricing": "FREE",
    "score": null,
    "home_url": "https://rapidapi.com/antonyrapid/api/imagegur/",
    "host": "imagegur.p.rapidapi.com",
    "api_list": [
        {
            "name": "AccountImages2",
            "url": "https://imagegur.p.rapidapi.com/3/account/me/images",
            "description": "To make requests for the current account, you may use `me` as the `{{username}}` parameter. For example, `https://api.imgur.com/3/account/me/images` will request all the images for the account that is currently authenticated.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/me/images\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "GenerateAccessToken0",
            "url": "https://imagegur.p.rapidapi.com/oauth2/token",
            "description": "Given a user's refresh token, this endpoint generates an access token.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "refresh_token",
                    "type": "STRING",
                    "description": "",
                    "default": "{{refreshToken}}"
                },
                {
                    "name": "grant_type",
                    "type": "STRING",
                    "description": "",
                    "default": "refresh_token"
                },
                {
                    "name": "client_secret",
                    "type": "STRING",
                    "description": "",
                    "default": "{{clientSecret}}"
                },
                {
                    "name": "client_id",
                    "type": "STRING",
                    "description": "",
                    "default": "{{clientId}}"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/oauth2/token\"\nquerystring = {\"refresh_token\": refresh_token, \"grant_type\": grant_type, \"client_secret\": client_secret, \"client_id\": client_id}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "AccountGalleryFavorites3",
            "url": "https://imagegur.p.rapidapi.com/3/account/{username}/gallery_favorites/{page}/{favoritessort}",
            "description": "Return the images the user has favorited in the gallery.\n\n#### Response Model: [Gallery Image](https://api.imgur.com/models/gallery_image) OR [Gallery Album](https://api.imgur.com/models/gallery_album)\n\n\n#### Parameters\n\n| Key  | Required | Description                                                                                     |\n|------|----------|-------------------------------------------------------------------------------------------------|\n| page | optional | integer - allows you to set the page number so you don't have to retrieve all the data at once. |\n| favoriteSort | optional | `oldest`, or `newest`. Defaults to `newest`.                                                    |",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "favoritesSort",
                    "type": "STRING",
                    "description": "",
                    "default": "favoritesSort"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "page"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}/gallery_favorites/{page}/{favoritessort}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "AlbumCount(Un-Authed/Authed)16",
            "url": "https://imagegur.p.rapidapi.com/3/account/{username}/albums/count",
            "description": "Return the total number of albums associated with the account.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}/albums/count\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "AccountSubmissions5",
            "url": "https://imagegur.p.rapidapi.com/3/account/{username}/submissions/{page}",
            "description": "Return the images a user has submitted to the gallery. You can add sorting as well after paging. Sorts can be: newest (default), oldest, worst, best. \n\n#### Response Model: [Gallery Image](https://api.imgur.com/models/gallery_image) OR [Gallery Album](https://api.imgur.com/models/gallery_album)",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "page"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}/submissions/{page}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "AlbumDeletion17",
            "url": "https://imagegur.p.rapidapi.com/3/account/{username}/album/{albumhash}",
            "description": "Delete an Album with a given id.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "albumHash",
                    "type": "STRING",
                    "description": "",
                    "default": "albumHash"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}/album/{albumhash}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "AccountAvailableAvatars(Un-authed/Authed)6",
            "url": "https://imagegur.p.rapidapi.com/3/account/{username}/available_avatars",
            "description": "If unauthentiated, get list of default trophies a user can select from. The username need not exist to get the listing.\n\nIf authenticated, get the list of available avatars for the given user.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "If unauthenticated, send the Client-ID",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "If authenticated send the bearer token",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}/available_avatars\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "AccountBase1",
            "url": "https://imagegur.p.rapidapi.com/3/account/{username}",
            "description": "Request standard user information. If you need the username for the account that is logged in, it is returned in the request for an [access token](/account/current_account). Note: This endpoint also supports the ability to lookup account base info by account ID. To do so, pass the query parameter `account_id`.\n\n#### Response Model: [Account](https://api.imgur.com/models/account)",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "AccountAvatar(Authed)7",
            "url": "https://imagegur.p.rapidapi.com/3/account/{username}/avatar",
            "description": "Get the current account's avatar URL and avatar name.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}/avatar\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "SendVerificationE-mail12",
            "url": "https://imagegur.p.rapidapi.com/3/account/{username}/verifyemail",
            "description": "Sends an email to the user to verify that their email is valid to upload to gallery. Must be logged in as the user to send.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}/verifyemail\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "CommentCount21",
            "url": "https://imagegur.p.rapidapi.com/3/account/{username}/comments/count",
            "description": "Return a count of all of the comments associated with the account.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}/comments/count\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "AlbumImages1",
            "url": "https://imagegur.p.rapidapi.com/3/album/{albumhash}/images",
            "description": "Return all of the images in the album.\n\n#### Response Model: [Image](https://api.imgur.com/models/image)",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "albumHash",
                    "type": "STRING",
                    "description": "",
                    "default": "albumHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/{albumhash}/images\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Albums(Un-Authed/Authed)13",
            "url": "https://imagegur.p.rapidapi.com/3/account/{username}/albums/{page}",
            "description": "Get all the albums associated with the account. Must be logged in as the user to see secret and hidden albums.\n\n#### Response Model: [Album](https://api.imgur.com/models/album)\n\n#### Parameters\n| Key  | Required | Description                                                                                     |\n|------|----------|-------------------------------------------------------------------------------------------------|\n| page | optional | integer - allows you to set the page number so you don't have to retrieve all the data at once. |",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "page"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}/albums/{page}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "ChangeAccountSettings9",
            "url": "https://imagegur.p.rapidapi.com/3/account/{username}/settings",
            "description": "Updates the account settings for a given user, the user must be logged in.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key                    | Required | Description                                                                           |\n|------------------------|----------|---------------------------------------------------------------------------------------|\n| bio                    | optional | The biography of the user, is displayed in the gallery profile page.                  |\n| public_images          | optional | Set the users images to private or public by default                                  |\n| messaging_enabled      | optional | true &#124; false - Allows the user to enable / disable private messages                   |\n| album_privacy          | optional | public &#124; hidden &#124; secret - Sets the default privacy level of albums the users creates |\n| accepted_gallery_terms | optional | true &#124; false - The user agreement to the Imgur Gallery terms.                         |\n| username               | optional | A valid Imgur username (between 4 and 63 alphanumeric characters)                     |\n| show_mature            | optional | true &#124; false - Toggle display of mature images in gallery list endpoints.             |\n| newsletter_subscribed  | optional | true &#124; false - Toggle subscription to email newsletter.                               |",
            "method": "PUT",
            "required_parameters": [
                {
                    "name": "messaging_enabled",
                    "type": "STRING",
                    "description": "",
                    "default": "true"
                },
                {
                    "name": "bio",
                    "type": "STRING",
                    "description": "",
                    "default": "Long time lurker..."
                },
                {
                    "name": "public_images",
                    "type": "STRING",
                    "description": "",
                    "default": "false"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "ImgurUser"
                },
                {
                    "name": "show_mature",
                    "type": "STRING",
                    "description": "",
                    "default": "true"
                },
                {
                    "name": "newsletter_subscribed",
                    "type": "STRING",
                    "description": "",
                    "default": "true"
                },
                {
                    "name": "accepted_gallery_terms",
                    "type": "STRING",
                    "description": "",
                    "default": "true"
                },
                {
                    "name": "album_privacy",
                    "type": "STRING",
                    "description": "",
                    "default": "public"
                },
                {
                    "name": "avatar",
                    "type": "STRING",
                    "description": "",
                    "default": "flavor/taco"
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}/settings\"\nquerystring = {\"messaging_enabled\": messaging_enabled, \"bio\": bio, \"public_images\": public_images, \"show_mature\": show_mature, \"newsletter_subscribed\": newsletter_subscribed, \"accepted_gallery_terms\": accepted_gallery_terms, \"album_privacy\": album_privacy, \"avatar\": avatar, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.put(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "CommentDeletion2",
            "url": "https://imagegur.p.rapidapi.com/3/comment/{commentid}",
            "description": "Delete a comment by the given id.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "commentId",
                    "type": "STRING",
                    "description": "",
                    "default": "commentId"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/comment/{commentid}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Images23",
            "url": "https://imagegur.p.rapidapi.com/3/account/{username}/images/{page}",
            "description": "Return all of the images associated with the account. You can page through the images by setting the page, this defaults to 0.\n\n#### Response Model: [Image](https://api.imgur.com/models/image)",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "page"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}/images/{page}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "ImageCount26",
            "url": "https://imagegur.p.rapidapi.com/3/account/{username}/images/count",
            "description": "Returns the total number of images associated with the account.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}/images/count\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "ImageIDs25",
            "url": "https://imagegur.p.rapidapi.com/3/account/{username}/images/ids/{page}",
            "description": "Returns an array of Image IDs that are associated with the account.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "page"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}/images/ids/{page}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "ImageDeletion27",
            "url": "https://imagegur.p.rapidapi.com/3/account/{username}/image/{deletehash}",
            "description": "Deletes an Image. This requires a delete hash rather than an ID.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                },
                {
                    "name": "deleteHash",
                    "type": "STRING",
                    "description": "",
                    "default": "deleteHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}/image/{deletehash}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Image24",
            "url": "https://imagegur.p.rapidapi.com/3/account/{username}/image/{imageid}",
            "description": "Return information about a specific image. This endpoint works the same as the [Image Endpoint](https://api.imgur.com/endpoints/image/). You can use any of the additional actions that the image endpoint with this endpoint.\n\n#### Response Model: [Image](https://api.imgur.com/models/image)",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "imageId",
                    "type": "STRING",
                    "description": "",
                    "default": "imageId"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}/image/{imageid}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "FollowTag29",
            "url": "https://imagegur.p.rapidapi.com/3/account/me/follow/tag/{tagname}",
            "description": "Follows the {{tagName}} specified for the currently logged in user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "tagName",
                    "type": "STRING",
                    "description": "",
                    "default": "tagName"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/me/follow/tag/{tagname}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "FollowTag29",
            "url": "https://imagegur.p.rapidapi.com/3/account/me/follow/tag/{tagname}",
            "description": "Follows the {{tagName}} specified for the currently logged in user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "tagName",
                    "type": "STRING",
                    "description": "",
                    "default": "tagName"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/me/follow/tag/{tagname}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Comments18",
            "url": "https://imagegur.p.rapidapi.com/3/account/{username}/comments/{commentsort}/{page}",
            "description": "Return the comments the user has created.\n\n#### Response Model: [Comment](https://api.imgur.com/models/comment)\n\n#### Parameters\n\n| Key  | Required | Value                                                         |\n|------|----------|---------------------------------------------------------------|\n| commentSort | optional | `best`, `worst`, `oldest`, or `newest`. Defaults to `newest`. |\n| page | optional | Page number (50 items per page). Defaults to `0`.               |",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "page"
                },
                {
                    "name": "commentSort",
                    "type": "STRING",
                    "description": "",
                    "default": "commentSort"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}/comments/{commentsort}/{page}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Image0",
            "url": "https://imagegur.p.rapidapi.com/3/image/{imagehash}",
            "description": "Get information about an image.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "imageHash",
                    "type": "STRING",
                    "description": "",
                    "default": "imageHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/image/{imagehash}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "SetAlbumImages(Un-Authed)8",
            "url": "https://imagegur.p.rapidapi.com/3/album/{albumdeletehash}",
            "description": "Sets the images for an album, removes all other images and only uses the images in this request.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key   | Required | Description                                           |\n|-------|----------|-------------------------------------------------------|\n| deletehashes[] | required | The image deletehashes that you want to be added to the album. |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "deletehashes[]",
                    "type": "STRING",
                    "description": "",
                    "default": "{{imageDeleteHash2}}"
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "albumDeleteHash",
                    "type": "STRING",
                    "description": "",
                    "default": "albumDeleteHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/{albumdeletehash}\"\nquerystring = {\"deletehashes[]\": deletehashes, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Replies3",
            "url": "https://imagegur.p.rapidapi.com/3/comment/{commentid}/replies",
            "description": "Get the comment with all of the replies for the comment.\n\n#### Response Model: [Comment](https://api.imgur.com/models/comment)",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "commentId",
                    "type": "STRING",
                    "description": "",
                    "default": "commentId"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/comment/{commentid}/replies\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "AddImagestoanAlbum(Authed)11",
            "url": "https://imagegur.p.rapidapi.com/3/album/{albumhash}/add",
            "description": "Adds the images to an album. You must specify ids[] or deletehashes[] in order to add an image to an album.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key            | Required | Description                                             |\n|----------------|----------|---------------------------------------------------------|\n| ids[]          | optional | The image ids that you want to be added to the album.   |\n| deletehashes[] | optional | The image deletehashes that you want to be added to the album. |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ids[]",
                    "type": "STRING",
                    "description": "",
                    "default": "{{imageHash2}}"
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "albumHash",
                    "type": "STRING",
                    "description": "",
                    "default": "albumHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/{albumhash}/add\"\nquerystring = {\"ids[]\": ids, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Vote5",
            "url": "https://imagegur.p.rapidapi.com/3/comment/{commentid}/vote/{vote}",
            "description": "Vote on a comment. The `vote` parameter can only be set as `up`, `down`, or `veto`.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "commentId",
                    "type": "STRING",
                    "description": "",
                    "default": "commentId"
                },
                {
                    "name": "vote",
                    "type": "STRING",
                    "description": "",
                    "default": "vote"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/comment/{commentid}/vote/{vote}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "AccountDelete(me)32",
            "url": "https://imagegur.p.rapidapi.com/3/account/me/delete",
            "description": "Delete the account of the auth'd user with delete feedback.\n\nnote: password is left blank to avoid accidental account deletion, to delete account you must add account password to body.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "Content-Type",
                    "type": "STRING",
                    "description": "",
                    "default": "application/json"
                }
            ],
            "optional_parameters": [
                {
                    "name": "client_id",
                    "type": "STRING",
                    "description": "",
                    "default": "{{clientId}}"
                }
            ],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/me/delete\"\nquerystring = {\"Authorization\": authorization, \"Content-Type\": content_type, \"client_id\": client_id}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Report6",
            "url": "https://imagegur.p.rapidapi.com/3/comment/{commentid}/report",
            "description": "Report a comment for being inappropriate.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "reason",
                    "type": "STRING",
                    "description": "",
                    "default": "{{commentReportReason}}"
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "commentId",
                    "type": "STRING",
                    "description": "",
                    "default": "commentId"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/comment/{commentid}/report\"\nquerystring = {\"reason\": reason, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "CommentDeletion22",
            "url": "https://imagegur.p.rapidapi.com/3/account/{username}/comment/{commentid}",
            "description": "Delete a comment. You are required to be logged in as the user whom created the comment.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "commentId",
                    "type": "STRING",
                    "description": "",
                    "default": "commentId"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}/comment/{commentid}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "AlbumDeletion(Un-Authed)5",
            "url": "https://imagegur.p.rapidapi.com/3/album/{albumdeletehash}",
            "description": "Delete an album with a given deletehash.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "albumDeleteHash",
                    "type": "STRING",
                    "description": "",
                    "default": "albumDeleteHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/{albumdeletehash}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Unfollowtag31",
            "url": "https://imagegur.p.rapidapi.com/3/account/me/follow/tag/{tagname}",
            "description": "Unfollows the {{tagName}} specified for the currently logged in user.\r\n",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "tagName",
                    "type": "STRING",
                    "description": "",
                    "default": "tagName"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/me/follow/tag/{tagname}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Unfollowtag31",
            "url": "https://imagegur.p.rapidapi.com/3/account/me/follow/tag/{tagname}",
            "description": "Unfollows the {{tagName}} specified for the currently logged in user.\r\n",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "tagName",
                    "type": "STRING",
                    "description": "",
                    "default": "tagName"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/me/follow/tag/{tagname}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Unfollowtag31",
            "url": "https://imagegur.p.rapidapi.com/3/account/me/follow/tag/{tagname}",
            "description": "Unfollows the {{tagName}} specified for the currently logged in user.\r\n",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "tagName",
                    "type": "STRING",
                    "description": "",
                    "default": "tagName"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/me/follow/tag/{tagname}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "GalleryTag3",
            "url": "https://imagegur.p.rapidapi.com/3/gallery/t/{tagname}/{sort}/{window}/{page}",
            "description": "Returns tag metadata, and posts tagged with the `tagName` provided",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "tagName",
                    "type": "STRING",
                    "description": "",
                    "default": "tagName"
                },
                {
                    "name": "window",
                    "type": "STRING",
                    "description": "",
                    "default": "window"
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "",
                    "default": "sort"
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "page"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/t/{tagname}/{sort}/{window}/{page}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "RemoveImagesfromanAlbum(Authed)13",
            "url": "https://imagegur.p.rapidapi.com/3/album/{albumhash}/remove_images",
            "description": "Takes parameter, `ids[]`, as an array of ids and removes from the album.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n\n#### Parameters\n\n| Key   | Required | Description                                           |\n|-------|----------|-------------------------------------------------------|\n| ids[] | required | The image ids that you want to be removed from the album. |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ids[]",
                    "type": "STRING",
                    "description": "",
                    "default": "{{imageHash2}}"
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "albumHash",
                    "type": "STRING",
                    "description": "",
                    "default": "albumHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/{albumhash}/remove_images\"\nquerystring = {\"ids[]\": ids, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Gallery0",
            "url": "https://imagegur.p.rapidapi.com/3/gallery/{section}/{sort}/{window}/{page}",
            "description": "| Key       | Required | Value                                                                                             |\n|-----------|----------|---------------------------------------------------------------------------------------------------|\n| section   | optional | `hot` &#124; `top` &#124; `user`. Defaults to `hot`\n| sort      | optional | `viral` &#124; `top` &#124; `time` &#124; `rising` (only available with `user` section). Defaults to `viral` |\n| page      | optional | integer - the data paging number                                                                  |\n| window    | optional | Change the date range of the request if the section is `top`. Accepted values are `day` &#124; `week` &#124; `month` &#124; `year` &#124; `all`. Defaults to `day` |",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "window",
                    "type": "STRING",
                    "description": "",
                    "default": "window"
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "",
                    "default": "sort"
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "page"
                },
                {
                    "name": "section",
                    "type": "STRING",
                    "description": "",
                    "default": "section"
                }
            ],
            "optional_parameters": [
                {
                    "name": "mature",
                    "type": "STRING",
                    "description": "Optional. `true` | `false` - Show or hide mature (nsfw) images in the response section. Defaults to `false` *NOTE:* This parameter is only required if un-authed. The response for authed users will respect their account setting.",
                    "default": "{{showMature}}"
                },
                {
                    "name": "showViral",
                    "type": "STRING",
                    "description": "Optional. `true` | `false` - Show or hide viral images from the `user` section. Defaults to `true`",
                    "default": "{{showViral}}"
                },
                {
                    "name": "album_previews",
                    "type": "STRING",
                    "description": "Optional. `true` | `false` - Include image metadata for gallery posts which are albums ",
                    "default": "{{albumPreviews}}"
                }
            ],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/{section}/{sort}/{window}/{page}\"\nquerystring = {\"Authorization\": authorization, \"mature\": mature, \"showViral\": showviral, \"album_previews\": album_previews}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "RemoveImagesfromanAlbum(Un-Authed)12",
            "url": "https://imagegur.p.rapidapi.com/3/album/{albumdeletehash}/remove_images",
            "description": "Takes parameter, `ids[]`, as an array of ids and removes from the album.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key   | Required | Description                                           |\n|-------|----------|-------------------------------------------------------|\n| ids[] | required | The image ids that you want to be removed from the album. |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ids[]",
                    "type": "STRING",
                    "description": "",
                    "default": "{{imageHash2}}"
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "albumDeleteHash",
                    "type": "STRING",
                    "description": "",
                    "default": "albumDeleteHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/{albumdeletehash}/remove_images\"\nquerystring = {\"ids[]\": ids, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "FavoriteAlbum7",
            "url": "https://imagegur.p.rapidapi.com/3/album/{albumhash}/favorite",
            "description": "Favorite an album with a given ID. The user is required to be logged in to favorite the album.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "albumHash",
                    "type": "STRING",
                    "description": "",
                    "default": "albumHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/{albumhash}/favorite\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "CommentCreation1",
            "url": "https://imagegur.p.rapidapi.com/3/comment",
            "description": "Creates a new comment, returns the ID of the comment.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key       | Required | Description                                                                    |\n|-----------|----------|--------------------------------------------------------------------------------|\n| image_id  | required | The ID of the image or album in the gallery that you wish to comment on                 |\n| comment   | required | The comment text, this is what will be displayed                               |\n| parent_id | optional | The ID of the parent comment, this is an alternative method to create a reply. |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "parent_id",
                    "type": "STRING",
                    "description": "",
                    "default": "{{commentId}}"
                },
                {
                    "name": "comment",
                    "type": "STRING",
                    "description": "",
                    "default": "I'm a giraffe!"
                },
                {
                    "name": "image_id",
                    "type": "STRING",
                    "description": "",
                    "default": "{{albumHash}}"
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/comment\"\nquerystring = {\"parent_id\": parent_id, \"comment\": comment, \"image_id\": image_id, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "RandomGalleryImages9",
            "url": "https://imagegur.p.rapidapi.com//",
            "description": "*DEPRECATED* Returns a random set of gallery images.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com//\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "AlbumImage2",
            "url": "https://imagegur.p.rapidapi.com/3/album/{albumhash}/image/{imagehash}",
            "description": "Get information about an image in an album, any additional actions found in [Image Endpoint](https://api.imgur.com/endpoints/image/) will also work.\n\n#### Response Model: [Image](https://api.imgur.com/models/image)",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "albumHash",
                    "type": "STRING",
                    "description": "",
                    "default": "albumHash"
                },
                {
                    "name": "imageHash",
                    "type": "STRING",
                    "description": "",
                    "default": "imageHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/{albumhash}/image/{imagehash}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "GallerySearch8",
            "url": "https://imagegur.p.rapidapi.com/3/gallery/search/{sort}/{window}/{page}",
            "description": "Search the gallery with a given query string.\n\n\n#### Parameters\n| Key    | Required | Value                                                                                                        |\n|--------|----------|--------------------------------------------------------------------------------------------------------------|\n| sort   | optional | time &#124; viral &#124; top - defaults to time                                                                        |\n| window | optional | Change the date range of the request if the sort is 'top', day &#124; week &#124; month &#124; year &#124; all, defaults to all. |\n| page   | optional | integer - the data paging number                                                                             |\n\n\n#### Simple Search Query Parameters\n\n| Key | Value                                                                                                                                                                                                                                                                                    |\n|-----|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| q   | Query string (note: if advanced search parameters are set, this query string is ignored). This parameter also supports boolean operators (AND, OR, NOT) and indices (tag: user: title: ext: subreddit: album: meme:). An example compound query would be 'title: cats AND dogs ext: gif' |\n\n\n\n#### Advanced Search Query Parameters\n\n| Key       | Value                                                                                                                                                                                                |\n|-----------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| q_all     | Search for all of these words (and)                                                                                                                                                                  |\n| q_any     | Search for any of these words (or)                                                                                                                                                                   |\n| q_exactly | Search for exactly this word or phrase                                                                                                                                                               |\n| q_not     | Exclude results matching this                                                                                                                                                                        |\n| q_type    | Show results for any file type, jpg  &#124; png  &#124; gif  &#124; anigif (animated gif)  &#124; album                                                                                                                      |\n| q_size_px | Size ranges, small (500 pixels square or less)  &#124; med (500 to 2,000 pixels square)  &#124; big (2,000 to 5,000 pixels square)  &#124; lrg (5,000 to 10,000 pixels square)  &#124; huge (10,000 square pixels and above) |",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "window",
                    "type": "STRING",
                    "description": "",
                    "default": "window"
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "page"
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "",
                    "default": "sort"
                }
            ],
            "optional_parameters": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "cats"
                }
            ],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/search/{sort}/{window}/{page}\"\nquerystring = {\"Authorization\": authorization, \"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "SharewithCommunity(Image)10",
            "url": "https://imagegur.p.rapidapi.com/3/gallery/image/{imagehash}",
            "description": "Share an Album or Image to the Gallery.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "mature",
                    "type": "STRING",
                    "description": "",
                    "default": "0"
                },
                {
                    "name": "tags",
                    "type": "STRING",
                    "description": "",
                    "default": "funny,cat"
                },
                {
                    "name": "topic",
                    "type": "STRING",
                    "description": "",
                    "default": "Funny"
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "",
                    "default": "Get this cat to the front page"
                },
                {
                    "name": "terms",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "imageHash",
                    "type": "STRING",
                    "description": "",
                    "default": "imageHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/image/{imagehash}\"\nquerystring = {\"mature\": mature, \"tags\": tags, \"topic\": topic, \"title\": title, \"terms\": terms, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "SubredditGalleries1",
            "url": "https://imagegur.p.rapidapi.com/3/gallery/r/{subreddit}/{sort}/{window}/{page}",
            "description": "View gallery images for a subreddit\n\n| Key       | Required | Value                                                                                                        |\n|-----------|----------|--------------------------------------------------------------------------------------------------------------|\n| subreddit | required | pics - A valid subreddit name                                                                                |\n| sort      | optional | `time` &#124; `top` - defaults to time                                                                                |\n| page      | optional | integer - the data paging number                                                                             |\n| window    | optional | Change the date range of the request if the sort is \"top\". Options are  `day` &#124; `week` &#124; `month` &#124; `year` &#124; `all`. Defaults to week |",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "",
                    "default": "sort"
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "page"
                },
                {
                    "name": "window",
                    "type": "STRING",
                    "description": "",
                    "default": "window"
                },
                {
                    "name": "subreddit",
                    "type": "STRING",
                    "description": "",
                    "default": "subreddit"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/r/{subreddit}/{sort}/{window}/{page}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "AlbumCreation(Un-Authed/Authed)3",
            "url": "https://imagegur.p.rapidapi.com/3/album",
            "description": "Create a new album. Optional parameter of `ids[]` is an array of image ids to add to the album. If uploading anonymous images to an anonymous album please use the optional parameter of `deletehashes[]` rather than `ids[]`. Note: including the optional `deletehashes[]` parameter will also work for authenticated user albums. There is no need to duplicate image ids with their corresponding deletehash.\n\nThis method is available without authenticating an account, and may be used merely by sending \"Authorization: Client-ID {client_id}\" in the request headers. Doing so will create an anonymous album which is not tied to an account.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key            | Required | Description                                                                                                                          |\n|----------------|----------|--------------------------------------------------------------------------------------------------------------------------------------|\n| ids[]          | optional | The image ids that you want to be included in the album.                                                                             |\n| deletehashes[] | optional | The deletehashes of the images that you want to be included in the album.                                                            |\n| title          | optional | The title of the album                                                                                                               |\n| description    | optional | The description of the album                                                                                                         |\n| privacy        | optional | Sets the privacy level of the album. Values are : `public` &#124; `hidden` &#124; secret. Defaults to user's privacy settings for logged in users. |\n| layout         | optional | (_deprecated_) Sets the layout to display the album. Values are : `blog` &#124; `grid` &#124; `horizontal` &#124; `vertical`                                               |\n| cover          | optional | The ID of an image that you want to be the cover of the album                                                                        |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "deletehashes[]",
                    "type": "STRING",
                    "description": "",
                    "default": "{{deleteHash2}}"
                },
                {
                    "name": "cover",
                    "type": "STRING",
                    "description": "",
                    "default": "{{imageHash}}"
                },
                {
                    "name": "privacy",
                    "type": "STRING",
                    "description": "",
                    "default": "public"
                },
                {
                    "name": "ids[]",
                    "type": "STRING",
                    "description": "",
                    "default": "{{imageHash2}}"
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "",
                    "default": "This albums contains a lot of dank memes. Be prepared."
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "",
                    "default": "My dank meme album"
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "Use this header if performing this action anonymously.",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "Use this header if performing this action as a logged-in user.",
                    "default": "Bearer {{accessToken}}"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album\"\nquerystring = {\"deletehashes[]\": deletehashes, \"cover\": cover, \"privacy\": privacy, \"ids[]\": ids, \"description\": description, \"title\": title, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "SubredditImage2",
            "url": "https://imagegur.p.rapidapi.com/3/gallery/r/{subreddit}/{subredditimageid}",
            "description": "View a single image in the subreddit\n\n| Key       | Required | Value                         |\n|-----------|----------|-------------------------------|\n| subreddit | required | A valid subreddit name, ie `earthporn` |\n| image_id  | required | The ID for the image.         |",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "subreddit",
                    "type": "STRING",
                    "description": "",
                    "default": "subreddit"
                },
                {
                    "name": "subredditImageId",
                    "type": "STRING",
                    "description": "",
                    "default": "subredditImageId"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/r/{subreddit}/{subredditimageid}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "CommentIDs20",
            "url": "https://imagegur.p.rapidapi.com/3/account/{username}/comments/ids/{sort}/{page}",
            "description": "Return an array of all of the comment IDs.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key  | Required | Value                                                         |\n|------|----------|---------------------------------------------------------------|\n| commentSort | optional | `best`, `worst`, `oldest`, or `newest`. Defaults to `newest`. |\n| page | optional | Page number (50 items per page). Defaults to `0`.               |",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "",
                    "default": "sort"
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "page"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}/comments/ids/{sort}/{page}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Comment19",
            "url": "https://imagegur.p.rapidapi.com/3/account/{username}/comment/{commentid}",
            "description": "Return information about a specific comment. This endpoint works the same as the [Comment Endpoint](https://api.imgur.com/endpoint/comment/). You can use any of the additional actions that the comment endpoint allows on this end point.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                },
                {
                    "name": "commentId",
                    "type": "STRING",
                    "description": "",
                    "default": "commentId"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}/comment/{commentid}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "UpdateAlbum(Un-Authed/Authed)4",
            "url": "https://imagegur.p.rapidapi.com/3/album/{albumhash}",
            "description": "Update the information of an album. For anonymous albums, `albumHash` should be the deletehash that is returned at creation.\n\nIf uploading anonymous images to an anonymous album please use the optional parameter of `deletehashes[]` rather than `ids[]`. Note: including the optional `deletehashes[]` parameter will also work for authenticated user albums. There is no need to duplicate image ids with their corresponding deletehash.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key            | Required | Description                                                                                                                          |\n|----------------|----------|--------------------------------------------------------------------------------------------------------------------------------------|\n| ids[]          | optional | The image ids that you want to be included in the album.                                                                             |\n| deletehashes[] | optional | The deletehashes of the images that you want to be included in the album.                                                            |\n| title          | optional | The title of the album                                                                                                               |\n| description    | optional | The description of the album                                                                                                         |\n| privacy        | optional | Sets the privacy level of the album. Values are : `public` &#124; `hidden` &#124; secret. Defaults to user's privacy settings for logged in users. |\n| layout         | optional | (_deprecated_) Sets the layout to display the album. Values are : `blog` &#124; `grid` &#124; `horizontal` &#124; `vertical`                                               |\n| cover          | optional | The ID of an image that you want to be the cover of the album                                                                        |",
            "method": "PUT",
            "required_parameters": [
                {
                    "name": "privacy",
                    "type": "STRING",
                    "description": "",
                    "default": "public"
                },
                {
                    "name": "deletehashes",
                    "type": "STRING",
                    "description": "",
                    "default": "{{deleteHash}}"
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "",
                    "default": "This album contains a lot of dank memes. Be prepared."
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "",
                    "default": "My dank meme album"
                },
                {
                    "name": "ids[]",
                    "type": "STRING",
                    "description": "",
                    "default": "{{image2Hash}}"
                },
                {
                    "name": "cover",
                    "type": "STRING",
                    "description": "",
                    "default": "{{imageHash}}"
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "Use this header if performing this action as a logged-in user.",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "Use this header if performing this action anonymously.",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "albumHash",
                    "type": "STRING",
                    "description": "",
                    "default": "albumHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/{albumhash}\"\nquerystring = {\"privacy\": privacy, \"deletehashes\": deletehashes, \"description\": description, \"title\": title, \"ids[]\": ids, \"cover\": cover, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.put(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "AlbumIDs(Un-Authed/Authed)15",
            "url": "https://imagegur.p.rapidapi.com/3/account/{username}/albums/ids/{page}",
            "description": "Return an array of all of the album IDs (hashes).\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "page"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}/albums/ids/{page}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "VerifyUser'sE-mail11",
            "url": "https://imagegur.p.rapidapi.com/3/account/{username}/verifyemail",
            "description": "Checks to see if user has verified their email address.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}/verifyemail\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "UpdateGalleryItemTags7",
            "url": "https://imagegur.p.rapidapi.com/3/gallery/tags/{galleryhash}",
            "description": "Update the tags for a post in the gallery",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "{{galleryHash}}"
                },
                {
                    "name": "tags",
                    "type": "STRING",
                    "description": "",
                    "default": "funny,cats"
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "galleryHash",
                    "type": "STRING",
                    "description": "",
                    "default": "galleryHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/tags/{galleryhash}\"\nquerystring = {\"id\": id, \"tags\": tags, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "GalleryTags4",
            "url": "https://imagegur.p.rapidapi.com/3/tags",
            "description": "Gets a list of default tags",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/tags\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Album/ImageComments17",
            "url": "https://imagegur.p.rapidapi.com/3/gallery/{galleryhash}/comments/{commentsort}",
            "description": "Get comments on an image or album in the gallery.\n\n`galleryHash` is the unique identifier of an album or image in the gallery.\n\n`commentSort` is one of `best` | `top` | `new` - defaults to `best`.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "galleryHash",
                    "type": "STRING",
                    "description": "",
                    "default": "galleryHash"
                },
                {
                    "name": "commentSort",
                    "type": "STRING",
                    "description": "",
                    "default": "commentSort"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/{galleryhash}/comments/{commentsort}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Album/ImageVoting16",
            "url": "https://imagegur.p.rapidapi.com/3/gallery/{galleryhash}/vote/{vote}",
            "description": "Vote for an image, `up` or `down` vote. Send `veto` to undo a vote.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "vote",
                    "type": "STRING",
                    "description": "",
                    "default": "vote"
                },
                {
                    "name": "galleryHash",
                    "type": "STRING",
                    "description": "",
                    "default": "galleryHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/{galleryhash}/vote/{vote}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Album/ImageReporting14",
            "url": "https://imagegur.p.rapidapi.com/3/gallery/image/{galleryhash}/report",
            "description": "Report an Image in the gallery\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key    | Required | Description                                       |\n|--------|----------|---------------------------------------------------|\n| reason | optional | An integer representing the reason for the report (see codes below) |\n\n\n#### Report Reason Codes\n\n| Value | Description                         |\n|-------|-------------------------------------|\n| 1     | Doesn't belong on Imgur             |\n| 2     | Spam                                |\n| 3     | Abusive                             |\n| 4     | Mature content not marked as mature |\n| 5     | Pornography                         |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "reason",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "galleryHash",
                    "type": "STRING",
                    "description": "",
                    "default": "galleryHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/image/{galleryhash}/report\"\nquerystring = {\"reason\": reason, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "GalleryImage13",
            "url": "https://imagegur.p.rapidapi.com/3/gallery/image/{galleryimagehash}",
            "description": "Get additional information about an image in the gallery.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "galleryImageHash",
                    "type": "STRING",
                    "description": "",
                    "default": "galleryImageHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/image/{galleryimagehash}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "ReplyCreation4",
            "url": "https://imagegur.p.rapidapi.com/3/comment/{commentid}",
            "description": "Create a reply for the given comment.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key      | Required | Description                                                    |\n|----------|----------|----------------------------------------------------------------|\n| image_id | required | The ID of the image or album in the gallery that you wish to comment on |\n| comment  | required | The comment text, this is what will be displayed               |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "comment",
                    "type": "STRING",
                    "description": "",
                    "default": "I'm a giraffe!"
                },
                {
                    "name": "image_id",
                    "type": "STRING",
                    "description": "",
                    "default": "{{albumHash}}"
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "commentId",
                    "type": "STRING",
                    "description": "",
                    "default": "commentId"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/comment/{commentid}\"\nquerystring = {\"comment\": comment, \"image_id\": image_id, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "FavoriteanImage6",
            "url": "https://imagegur.p.rapidapi.com/3/image/{imagehash}/favorite",
            "description": "Favorite an image with the given ID. The user is required to be logged in to favorite the image.\n\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "imageHash",
                    "type": "STRING",
                    "description": "",
                    "default": "imageHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/image/{imagehash}/favorite\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Album14",
            "url": "https://imagegur.p.rapidapi.com/3/account/{username}/album/{albumhash}",
            "description": "Get additional information about an album, this endpoint works the same as the [Album Endpoint](). You can also use any of the additional routes that are used on an album in the album endpoint.\n\n#### Response Model: [Album](https://api.imgur.com/models/album)",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "albumHash",
                    "type": "STRING",
                    "description": "",
                    "default": "albumHash"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}/album/{albumhash}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "ImageDeletion(Un-Authed)2",
            "url": "https://imagegur.p.rapidapi.com/3/image/{imagedeletehash}",
            "description": "Deletes an image.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "imageDeleteHash",
                    "type": "STRING",
                    "description": "",
                    "default": "imageDeleteHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/image/{imagedeletehash}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "UpdateImageInformation(Authed)5",
            "url": "https://imagegur.p.rapidapi.com/3/image/{imagehash}",
            "description": "Updates the title or description of an image.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key         | Required | Description                   |\n|-------------|----------|-------------------------------|\n| title       | optional | The title of the image.       |\n| description | optional | The description of the image. |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "",
                    "default": "This is an image of a heart outline."
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "",
                    "default": "Heart"
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "imageHash",
                    "type": "STRING",
                    "description": "",
                    "default": "imageHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/image/{imagehash}\"\nquerystring = {\"description\": description, \"title\": title, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "AccountGalleryProfile10",
            "url": "https://imagegur.p.rapidapi.com/3/account/{username}/settings",
            "description": "Returns the totals for the gallery profile.\n\n#### Response Model: [Gallery Profile](https://api.imgur.com/models/gallery_profile)",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}/settings\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "AccountSettings8",
            "url": "https://imagegur.p.rapidapi.com/3/account/me/settings",
            "description": "Returns the account settings, only accessible if you're logged in as the user.\n\n",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/me/settings\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Replies28",
            "url": "https://imagegur.p.rapidapi.com/3/account/{username}/notifications/replies",
            "description": "Returns all of the reply notifications for the user. Required to be logged in as that user.\n\n#### Response Model: [Notification](https://api.imgur.com/models/notification)\n\n#### Parameters\n\n| Key | Required | Value                                                                                          |\n|-----|----------|------------------------------------------------------------------------------------------------|\n| new | optional | boolean - `false` for all notifications, `true` for only non-viewed notification. Default is `true`. |",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}/notifications/replies\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "ImageDeletion(Authed)3",
            "url": "https://imagegur.p.rapidapi.com/3/image/{imagehash}",
            "description": "Deletes an image.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "imageHash",
                    "type": "STRING",
                    "description": "",
                    "default": "imageHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/image/{imagehash}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Comment0",
            "url": "https://imagegur.p.rapidapi.com/3/comment/{commentid}",
            "description": "Get information about a specific comment.\n\n#### Response Model: [Comment](https://api.imgur.com/models/comment)",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "commentId",
                    "type": "STRING",
                    "description": "",
                    "default": "commentId"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/comment/{commentid}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Album/ImageCommentCreation19",
            "url": "https://imagegur.p.rapidapi.com/3/gallery/{galleryhash}/comment",
            "description": "#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key     | Required | Value                    |\n|---------|----------|--------------------------|\n| comment | required | The text of the comment. |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "comment",
                    "type": "STRING",
                    "description": "",
                    "default": "{{commentText}}"
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "galleryHash",
                    "type": "STRING",
                    "description": "",
                    "default": "galleryHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/{galleryhash}/comment\"\nquerystring = {\"comment\": comment, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "AccountFavorites4",
            "url": "https://imagegur.p.rapidapi.com/3/account/{username}/favorites/{page}/{favoritessort}",
            "description": "Returns the users favorited images, only accessible if you're logged in as the user.\n\n#### Response Model: [Gallery Image](https://api.imgur.com/models/gallery_image) OR [Gallery Album](https://api.imgur.com/models/gallery_album)\n\n*Note:* vote data ('ups', 'downs', and 'score') may be null if the favorited item hasn't been submitted to gallery\n\n\n#### Parameters\n\n| Key  | Required | Description                                                                                     |\n|------|----------|-------------------------------------------------------------------------------------------------|\n| page | optional | integer - allows you to set the page number so you don't have to retrieve all the data at once. |\n| sort | optional | 'oldest', or 'newest'. Defaults to 'newest'.                                                    |",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "page"
                },
                {
                    "name": "favoritesSort",
                    "type": "STRING",
                    "description": "",
                    "default": "favoritesSort"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}/favorites/{page}/{favoritessort}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Album/ImageVotes15",
            "url": "https://imagegur.p.rapidapi.com/3/gallery/{galleryhash}/votes",
            "description": "Get the vote information about an image\n\n#### Response Model: [Vote](https://api.imgur.com/models/vote)",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "galleryHash",
                    "type": "STRING",
                    "description": "",
                    "default": "galleryHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/{galleryhash}/votes\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Album0",
            "url": "https://imagegur.p.rapidapi.com/3/album/{albumhash}",
            "description": "Get additional information about an album.\n\n#### Response Model: [Album](https://api.imgur.com/models/album)",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "albumHash",
                    "type": "STRING",
                    "description": "",
                    "default": "albumHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/{albumhash}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "AlbumDeletion(Authed)6",
            "url": "https://imagegur.p.rapidapi.com/3/album/{albumhash}",
            "description": "Delete an album with a given ID. You are required to be logged in as the user to delete the album.\n\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "albumHash",
                    "type": "STRING",
                    "description": "",
                    "default": "albumHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/{albumhash}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "GalleryAlbum12",
            "url": "https://imagegur.p.rapidapi.com/3/gallery/album/{galleryhash}",
            "description": "Get additional information about an album in the gallery.\n\n#### Response Model: [Gallery Album](https://api.imgur.com/models/gallery_album)",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "galleryHash",
                    "type": "STRING",
                    "description": "",
                    "default": "galleryHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/album/{galleryhash}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Album/ImageComment18",
            "url": "https://imagegur.p.rapidapi.com/3/gallery/{galleryhash}/comment/{commentid}",
            "description": "Information about a specific comment. This action also allows any of the additional actions provided in the [Comment Endpoint](https://api.imgur.com/endpoints/comment).",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "commentId",
                    "type": "STRING",
                    "description": "",
                    "default": "commentId"
                },
                {
                    "name": "galleryHash",
                    "type": "STRING",
                    "description": "",
                    "default": "galleryHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/{galleryhash}/comment/{commentid}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "SetAlbumImages(Authed)9",
            "url": "https://imagegur.p.rapidapi.com/3/album/{albumhash}",
            "description": "Sets the images for an album, removes all other images and only uses the images in this request. You must include either ids[] or deletehashes[].\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key            | Required | Description                                             |\n|----------------|----------|---------------------------------------------------------|\n| ids[]          | optional | The image ids that you want to be added to the album.   |\n| deletehashes[] | optional | The image deletehashes that you want to be added to the album. |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ids[]",
                    "type": "STRING",
                    "description": "",
                    "default": "{{imageHash2}}"
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "albumHash",
                    "type": "STRING",
                    "description": "",
                    "default": "albumHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/{albumhash}\"\nquerystring = {\"ids[]\": ids, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "GalleryItemTags6",
            "url": "https://imagegur.p.rapidapi.com/3/gallery/{galleryhash}/tags",
            "description": "| Key | Required | Value                  |\n|-----|----------|------------------------|\n| id  | required | ID of the gallery item |",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "galleryHash",
                    "type": "STRING",
                    "description": "",
                    "default": "galleryHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/{galleryhash}/tags\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "GalleryTagInfo5",
            "url": "https://imagegur.p.rapidapi.com/3/gallery/tag_info/{tagname}",
            "description": "Gets metadata about a tag",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "tagName",
                    "type": "STRING",
                    "description": "",
                    "default": "tagName"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/tag_info/{tagname}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "AddImagestoanAlbum(Un-Authed)10",
            "url": "https://imagegur.p.rapidapi.com/3/album/{albumdeletehash}/add",
            "description": "Takes parameter, `deletehashes[]`, as an array of deletehashes to add to the album. Alternatively, the `deletehashes` parameter can take a comma delimted string of deletehashes.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key   | Required | Description                                           |\n|-------|----------|-------------------------------------------------------|\n| deletehashes[] | required | The image deletehashes that you want to be added to the album. The [] represents the ability to use this variable as an array. |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "deletehashes[]",
                    "type": "STRING",
                    "description": "",
                    "default": "{{imageDeleteHash2}}"
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "albumDeleteHash",
                    "type": "STRING",
                    "description": "",
                    "default": "albumDeleteHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/{albumdeletehash}/add\"\nquerystring = {\"deletehashes[]\": deletehashes, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "UpdateImageInformation(Un-Authed)4",
            "url": "https://imagegur.p.rapidapi.com/3/image/{imagedeletehash}",
            "description": "Updates the title or description of an image.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key         | Required | Description                   |\n|-------------|----------|-------------------------------|\n| title       | optional | The title of the image.       |\n| description | optional | The description of the image. |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "",
                    "default": "Heart"
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "",
                    "default": "This is an image of a heart outline."
                },
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                },
                {
                    "name": "imageDeleteHash",
                    "type": "STRING",
                    "description": "",
                    "default": "imageDeleteHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/image/{imagedeletehash}\"\nquerystring = {\"title\": title, \"description\": description, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "RemovefromGallery11",
            "url": "https://imagegur.p.rapidapi.com/3/gallery/{galleryhash}",
            "description": "Remove an image from the public gallery. You must be logged in as the owner of the item to do this action.",
            "method": "DELETE",
            "required_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                },
                {
                    "name": "galleryHash",
                    "type": "STRING",
                    "description": "",
                    "default": "galleryHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/{galleryhash}\"\nquerystring = {\"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.delete(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "ImageUpload",
            "url": "https://imagegur.p.rapidapi.com/3/image",
            "description": "Upload a new image.\n\n#### Parameters\n\n| Key         | Required | Description                                                                                                                            |\n|-------------|----------|----------------------------------------------------------------------------------------------------------------------------------------|\n| image       | required | A binary file, base64 data, or a URL for an image. (up to 10MB)                                                                        |\n| album       | optional | The id of the album you want to add the image to. For anonymous albums, `album` should be the deletehash that is returned at creation. |\n| type        | optional | The type of the file that's being sent; `file`, `base64` or `URL`                                                                            |\n| name        | optional | The name of the file, this is automatically detected if uploading a file with a POST and multipart / form-data                         |\n| title       | optional | The title of the image.                                                                                                                |\n| description | optional | The description of the image.                                                                                                          |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "",
                    "default": "gif"
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": "pixel.gif"
                },
                {
                    "name": "image",
                    "type": "STRING",
                    "description": "",
                    "default": "R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7"
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "",
                    "default": "This is an 1x1 pixel image."
                },
                {
                    "name": "album",
                    "type": "STRING",
                    "description": "",
                    "default": "{{albumHash}}"
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "",
                    "default": "1x1 Pixel"
                },
                {
                    "name": "Authorization1",
                    "type": "STRING",
                    "description": "",
                    "default": "Client-ID {{clientId}}"
                }
            ],
            "optional_parameters": [
                {
                    "name": "Authorization",
                    "type": "STRING",
                    "description": "",
                    "default": "Bearer {{accessToken}}"
                }
            ],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/image\"\nquerystring = {\"type\": type, \"name\": name, \"image\": image, \"description\": description, \"album\": album, \"title\": title, \"Authorization1\": authorization1, \"Authorization\": authorization}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "GenerateAccessToken0",
            "url": "https://imagegur.p.rapidapi.com/oauth2/token",
            "description": "Given a user's refresh token, this endpoint generates an access token.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "refresh_token",
                    "type": "STRING",
                    "description": "",
                    "default": "{{refreshToken}}"
                },
                {
                    "name": "grant_type",
                    "type": "STRING",
                    "description": "",
                    "default": "refresh_token"
                },
                {
                    "name": "client_secret",
                    "type": "STRING",
                    "description": "",
                    "default": "{{clientSecret}}"
                },
                {
                    "name": "client_id",
                    "type": "STRING",
                    "description": "",
                    "default": "{{clientId}}"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/oauth2/token\"\nquerystring = {\"refresh_token\": \"{{refreshToken}}\", \"grant_type\": \"refresh_token\", \"client_secret\": \"{{clientSecret}}\", \"client_id\": \"{{clientId}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/oauth2/token\"\nquerystring = {\"refresh_token\": \"{{refreshToken}}\", \"grant_type\": \"refresh_token\", \"client_secret\": \"{{clientSecret}}\", \"client_id\": \"{{clientId}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "SendVerificationE-mail12",
            "url": "https://imagegur.p.rapidapi.com/3/account/username/verifyemail",
            "description": "Sends an email to the user to verify that their email is valid to upload to gallery. Must be logged in as the user to send.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "username"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/username/verifyemail\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/{username}/verifyemail\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "FollowTag29",
            "url": "https://imagegur.p.rapidapi.com/3/account/me/follow/tag/tagName",
            "description": "Follows the {{tagName}} specified for the currently logged in user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tagName",
                    "type": "STRING",
                    "description": "",
                    "default": "tagName"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/me/follow/tag/tagName\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/me/follow/tag/{tagname}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "SetAlbumImages(Un-Authed)8",
            "url": "https://imagegur.p.rapidapi.com/3/album/albumDeleteHash",
            "description": "Sets the images for an album, removes all other images and only uses the images in this request.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key   | Required | Description                                           |\n|-------|----------|-------------------------------------------------------|\n| deletehashes[] | required | The image deletehashes that you want to be added to the album. |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "deletehashes[]",
                    "type": "STRING",
                    "description": "",
                    "default": "{{imageDeleteHash2}}"
                },
                {
                    "name": "albumDeleteHash",
                    "type": "STRING",
                    "description": "",
                    "default": "albumDeleteHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/albumDeleteHash\"\nquerystring = {\"deletehashes[]\": \"{{imageDeleteHash2}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/{albumdeletehash}\"\nquerystring = {\"deletehashes[]\": \"{{imageDeleteHash2}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "AddImagestoanAlbum(Authed)11",
            "url": "https://imagegur.p.rapidapi.com/3/album/albumHash/add",
            "description": "Adds the images to an album. You must specify ids[] or deletehashes[] in order to add an image to an album.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key            | Required | Description                                             |\n|----------------|----------|---------------------------------------------------------|\n| ids[]          | optional | The image ids that you want to be added to the album.   |\n| deletehashes[] | optional | The image deletehashes that you want to be added to the album. |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ids[]",
                    "type": "STRING",
                    "description": "",
                    "default": "{{imageHash2}}"
                },
                {
                    "name": "albumHash",
                    "type": "STRING",
                    "description": "",
                    "default": "albumHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/albumHash/add\"\nquerystring = {\"ids[]\": \"{{imageHash2}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/{albumhash}/add\"\nquerystring = {\"ids[]\": \"{{imageHash2}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Vote5",
            "url": "https://imagegur.p.rapidapi.com/3/comment/commentId/vote/vote",
            "description": "Vote on a comment. The `vote` parameter can only be set as `up`, `down`, or `veto`.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "commentId",
                    "type": "STRING",
                    "description": "",
                    "default": "commentId"
                },
                {
                    "name": "vote",
                    "type": "STRING",
                    "description": "",
                    "default": "vote"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/comment/commentId/vote/vote\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/comment/{commentid}/vote/{vote}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "AccountDelete(me)32",
            "url": "https://imagegur.p.rapidapi.com/3/account/me/delete",
            "description": "Delete the account of the auth'd user with delete feedback.\n\nnote: password is left blank to avoid accidental account deletion, to delete account you must add account password to body.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "client_id",
                    "type": "STRING",
                    "description": "",
                    "default": "{{clientId}}"
                }
            ],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/me/delete\"\nquerystring = {\"client_id\": \"{{clientId}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/account/me/delete\"\nquerystring = {\"client_id\": \"{{clientId}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Report6",
            "url": "https://imagegur.p.rapidapi.com/3/comment/commentId/report",
            "description": "Report a comment for being inappropriate.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "reason",
                    "type": "STRING",
                    "description": "",
                    "default": "{{commentReportReason}}"
                },
                {
                    "name": "commentId",
                    "type": "STRING",
                    "description": "",
                    "default": "commentId"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/comment/commentId/report\"\nquerystring = {\"reason\": \"{{commentReportReason}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/comment/{commentid}/report\"\nquerystring = {\"reason\": \"{{commentReportReason}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveImagesfromanAlbum(Authed)13",
            "url": "https://imagegur.p.rapidapi.com/3/album/albumHash/remove_images",
            "description": "Takes parameter, `ids[]`, as an array of ids and removes from the album.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n\n#### Parameters\n\n| Key   | Required | Description                                           |\n|-------|----------|-------------------------------------------------------|\n| ids[] | required | The image ids that you want to be removed from the album. |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ids[]",
                    "type": "STRING",
                    "description": "",
                    "default": "{{imageHash2}}"
                },
                {
                    "name": "albumHash",
                    "type": "STRING",
                    "description": "",
                    "default": "albumHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/albumHash/remove_images\"\nquerystring = {\"ids[]\": \"{{imageHash2}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/{albumhash}/remove_images\"\nquerystring = {\"ids[]\": \"{{imageHash2}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveImagesfromanAlbum(Un-Authed)12",
            "url": "https://imagegur.p.rapidapi.com/3/album/albumDeleteHash/remove_images",
            "description": "Takes parameter, `ids[]`, as an array of ids and removes from the album.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key   | Required | Description                                           |\n|-------|----------|-------------------------------------------------------|\n| ids[] | required | The image ids that you want to be removed from the album. |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ids[]",
                    "type": "STRING",
                    "description": "",
                    "default": "{{imageHash2}}"
                },
                {
                    "name": "albumDeleteHash",
                    "type": "STRING",
                    "description": "",
                    "default": "albumDeleteHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/albumDeleteHash/remove_images\"\nquerystring = {\"ids[]\": \"{{imageHash2}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/{albumdeletehash}/remove_images\"\nquerystring = {\"ids[]\": \"{{imageHash2}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "FavoriteAlbum7",
            "url": "https://imagegur.p.rapidapi.com/3/album/albumHash/favorite",
            "description": "Favorite an album with a given ID. The user is required to be logged in to favorite the album.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "albumHash",
                    "type": "STRING",
                    "description": "",
                    "default": "albumHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/albumHash/favorite\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/{albumhash}/favorite\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "CommentCreation1",
            "url": "https://imagegur.p.rapidapi.com/3/comment",
            "description": "Creates a new comment, returns the ID of the comment.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key       | Required | Description                                                                    |\n|-----------|----------|--------------------------------------------------------------------------------|\n| image_id  | required | The ID of the image or album in the gallery that you wish to comment on                 |\n| comment   | required | The comment text, this is what will be displayed                               |\n| parent_id | optional | The ID of the parent comment, this is an alternative method to create a reply. |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "parent_id",
                    "type": "STRING",
                    "description": "",
                    "default": "{{commentId}}"
                },
                {
                    "name": "comment",
                    "type": "STRING",
                    "description": "",
                    "default": "I'm a giraffe!"
                },
                {
                    "name": "image_id",
                    "type": "STRING",
                    "description": "",
                    "default": "{{albumHash}}"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/comment\"\nquerystring = {\"parent_id\": \"{{commentId}}\", \"comment\": \"I'm a giraffe!\", \"image_id\": \"{{albumHash}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/comment\"\nquerystring = {\"parent_id\": \"{{commentId}}\", \"comment\": \"I'm a giraffe!\", \"image_id\": \"{{albumHash}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "SharewithCommunity(Image)10",
            "url": "https://imagegur.p.rapidapi.com/3/gallery/image/imageHash",
            "description": "Share an Album or Image to the Gallery.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "mature",
                    "type": "STRING",
                    "description": "",
                    "default": "0"
                },
                {
                    "name": "tags",
                    "type": "STRING",
                    "description": "",
                    "default": "funny,cat"
                },
                {
                    "name": "topic",
                    "type": "STRING",
                    "description": "",
                    "default": "Funny"
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "",
                    "default": "Get this cat to the front page"
                },
                {
                    "name": "terms",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "imageHash",
                    "type": "STRING",
                    "description": "",
                    "default": "imageHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/image/imageHash\"\nquerystring = {\"mature\": \"0\", \"tags\": \"funny,cat\", \"topic\": \"Funny\", \"title\": \"Get this cat to the front page\", \"terms\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/image/{imagehash}\"\nquerystring = {\"mature\": \"0\", \"tags\": \"funny,cat\", \"topic\": \"Funny\", \"title\": \"Get this cat to the front page\", \"terms\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "AlbumCreation(Un-Authed/Authed)3",
            "url": "https://imagegur.p.rapidapi.com/3/album",
            "description": "Create a new album. Optional parameter of `ids[]` is an array of image ids to add to the album. If uploading anonymous images to an anonymous album please use the optional parameter of `deletehashes[]` rather than `ids[]`. Note: including the optional `deletehashes[]` parameter will also work for authenticated user albums. There is no need to duplicate image ids with their corresponding deletehash.\n\nThis method is available without authenticating an account, and may be used merely by sending \"Authorization: Client-ID {client_id}\" in the request headers. Doing so will create an anonymous album which is not tied to an account.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key            | Required | Description                                                                                                                          |\n|----------------|----------|--------------------------------------------------------------------------------------------------------------------------------------|\n| ids[]          | optional | The image ids that you want to be included in the album.                                                                             |\n| deletehashes[] | optional | The deletehashes of the images that you want to be included in the album.                                                            |\n| title          | optional | The title of the album                                                                                                               |\n| description    | optional | The description of the album                                                                                                         |\n| privacy        | optional | Sets the privacy level of the album. Values are : `public` &#124; `hidden` &#124; secret. Defaults to user's privacy settings for logged in users. |\n| layout         | optional | (_deprecated_) Sets the layout to display the album. Values are : `blog` &#124; `grid` &#124; `horizontal` &#124; `vertical`                                               |\n| cover          | optional | The ID of an image that you want to be the cover of the album                                                                        |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "deletehashes[]",
                    "type": "STRING",
                    "description": "",
                    "default": "{{deleteHash2}}"
                },
                {
                    "name": "cover",
                    "type": "STRING",
                    "description": "",
                    "default": "{{imageHash}}"
                },
                {
                    "name": "privacy",
                    "type": "STRING",
                    "description": "",
                    "default": "public"
                },
                {
                    "name": "ids[]",
                    "type": "STRING",
                    "description": "",
                    "default": "{{imageHash2}}"
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "",
                    "default": "This albums contains a lot of dank memes. Be prepared."
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "",
                    "default": "My dank meme album"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album\"\nquerystring = {\"deletehashes[]\": \"{{deleteHash2}}\", \"cover\": \"{{imageHash}}\", \"privacy\": \"public\", \"ids[]\": \"{{imageHash2}}\", \"description\": \"This albums contains a lot of dank memes. Be prepared.\", \"title\": \"My dank meme album\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album\"\nquerystring = {\"deletehashes[]\": \"{{deleteHash2}}\", \"cover\": \"{{imageHash}}\", \"privacy\": \"public\", \"ids[]\": \"{{imageHash2}}\", \"description\": \"This albums contains a lot of dank memes. Be prepared.\", \"title\": \"My dank meme album\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateGalleryItemTags7",
            "url": "https://imagegur.p.rapidapi.com/3/gallery/tags/galleryHash",
            "description": "Update the tags for a post in the gallery",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "{{galleryHash}}"
                },
                {
                    "name": "tags",
                    "type": "STRING",
                    "description": "",
                    "default": "funny,cats"
                },
                {
                    "name": "galleryHash",
                    "type": "STRING",
                    "description": "",
                    "default": "galleryHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/tags/galleryHash\"\nquerystring = {\"id\": \"{{galleryHash}}\", \"tags\": \"funny,cats\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/tags/{galleryhash}\"\nquerystring = {\"id\": \"{{galleryHash}}\", \"tags\": \"funny,cats\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Album/ImageVoting16",
            "url": "https://imagegur.p.rapidapi.com/3/gallery/galleryHash/vote/vote",
            "description": "Vote for an image, `up` or `down` vote. Send `veto` to undo a vote.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "vote",
                    "type": "STRING",
                    "description": "",
                    "default": "vote"
                },
                {
                    "name": "galleryHash",
                    "type": "STRING",
                    "description": "",
                    "default": "galleryHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/galleryHash/vote/vote\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/{galleryhash}/vote/{vote}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Album/ImageReporting14",
            "url": "https://imagegur.p.rapidapi.com/3/gallery/image/galleryHash/report",
            "description": "Report an Image in the gallery\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key    | Required | Description                                       |\n|--------|----------|---------------------------------------------------|\n| reason | optional | An integer representing the reason for the report (see codes below) |\n\n\n#### Report Reason Codes\n\n| Value | Description                         |\n|-------|-------------------------------------|\n| 1     | Doesn't belong on Imgur             |\n| 2     | Spam                                |\n| 3     | Abusive                             |\n| 4     | Mature content not marked as mature |\n| 5     | Pornography                         |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "reason",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "galleryHash",
                    "type": "STRING",
                    "description": "",
                    "default": "galleryHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/image/galleryHash/report\"\nquerystring = {\"reason\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/image/{galleryhash}/report\"\nquerystring = {\"reason\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "ReplyCreation4",
            "url": "https://imagegur.p.rapidapi.com/3/comment/commentId",
            "description": "Create a reply for the given comment.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key      | Required | Description                                                    |\n|----------|----------|----------------------------------------------------------------|\n| image_id | required | The ID of the image or album in the gallery that you wish to comment on |\n| comment  | required | The comment text, this is what will be displayed               |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "comment",
                    "type": "STRING",
                    "description": "",
                    "default": "I'm a giraffe!"
                },
                {
                    "name": "image_id",
                    "type": "STRING",
                    "description": "",
                    "default": "{{albumHash}}"
                },
                {
                    "name": "commentId",
                    "type": "STRING",
                    "description": "",
                    "default": "commentId"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/comment/commentId\"\nquerystring = {\"comment\": \"I'm a giraffe!\", \"image_id\": \"{{albumHash}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/comment/{commentid}\"\nquerystring = {\"comment\": \"I'm a giraffe!\", \"image_id\": \"{{albumHash}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "FavoriteanImage6",
            "url": "https://imagegur.p.rapidapi.com/3/image/imageHash/favorite",
            "description": "Favorite an image with the given ID. The user is required to be logged in to favorite the image.\n\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageHash",
                    "type": "STRING",
                    "description": "",
                    "default": "imageHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/image/imageHash/favorite\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/image/{imagehash}/favorite\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateImageInformation(Authed)5",
            "url": "https://imagegur.p.rapidapi.com/3/image/imageHash",
            "description": "Updates the title or description of an image.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key         | Required | Description                   |\n|-------------|----------|-------------------------------|\n| title       | optional | The title of the image.       |\n| description | optional | The description of the image. |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "",
                    "default": "This is an image of a heart outline."
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "",
                    "default": "Heart"
                },
                {
                    "name": "imageHash",
                    "type": "STRING",
                    "description": "",
                    "default": "imageHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/image/imageHash\"\nquerystring = {\"description\": \"This is an image of a heart outline.\", \"title\": \"Heart\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/image/{imagehash}\"\nquerystring = {\"description\": \"This is an image of a heart outline.\", \"title\": \"Heart\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Album/ImageCommentCreation19",
            "url": "https://imagegur.p.rapidapi.com/3/gallery/galleryHash/comment",
            "description": "#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key     | Required | Value                    |\n|---------|----------|--------------------------|\n| comment | required | The text of the comment. |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "comment",
                    "type": "STRING",
                    "description": "",
                    "default": "{{commentText}}"
                },
                {
                    "name": "galleryHash",
                    "type": "STRING",
                    "description": "",
                    "default": "galleryHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/galleryHash/comment\"\nquerystring = {\"comment\": \"{{commentText}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/gallery/{galleryhash}/comment\"\nquerystring = {\"comment\": \"{{commentText}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "SetAlbumImages(Authed)9",
            "url": "https://imagegur.p.rapidapi.com/3/album/albumHash",
            "description": "Sets the images for an album, removes all other images and only uses the images in this request. You must include either ids[] or deletehashes[].\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key            | Required | Description                                             |\n|----------------|----------|---------------------------------------------------------|\n| ids[]          | optional | The image ids that you want to be added to the album.   |\n| deletehashes[] | optional | The image deletehashes that you want to be added to the album. |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ids[]",
                    "type": "STRING",
                    "description": "",
                    "default": "{{imageHash2}}"
                },
                {
                    "name": "albumHash",
                    "type": "STRING",
                    "description": "",
                    "default": "albumHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/albumHash\"\nquerystring = {\"ids[]\": \"{{imageHash2}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/{albumhash}\"\nquerystring = {\"ids[]\": \"{{imageHash2}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "AddImagestoanAlbum(Un-Authed)10",
            "url": "https://imagegur.p.rapidapi.com/3/album/albumDeleteHash/add",
            "description": "Takes parameter, `deletehashes[]`, as an array of deletehashes to add to the album. Alternatively, the `deletehashes` parameter can take a comma delimted string of deletehashes.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key   | Required | Description                                           |\n|-------|----------|-------------------------------------------------------|\n| deletehashes[] | required | The image deletehashes that you want to be added to the album. The [] represents the ability to use this variable as an array. |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "deletehashes[]",
                    "type": "STRING",
                    "description": "",
                    "default": "{{imageDeleteHash2}}"
                },
                {
                    "name": "albumDeleteHash",
                    "type": "STRING",
                    "description": "",
                    "default": "albumDeleteHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/albumDeleteHash/add\"\nquerystring = {\"deletehashes[]\": \"{{imageDeleteHash2}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/album/{albumdeletehash}/add\"\nquerystring = {\"deletehashes[]\": \"{{imageDeleteHash2}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateImageInformation(Un-Authed)4",
            "url": "https://imagegur.p.rapidapi.com/3/image/imageDeleteHash",
            "description": "Updates the title or description of an image.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key         | Required | Description                   |\n|-------------|----------|-------------------------------|\n| title       | optional | The title of the image.       |\n| description | optional | The description of the image. |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "",
                    "default": "Heart"
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "",
                    "default": "This is an image of a heart outline."
                },
                {
                    "name": "imageDeleteHash",
                    "type": "STRING",
                    "description": "",
                    "default": "imageDeleteHash"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/image/imageDeleteHash\"\nquerystring = {\"title\": \"Heart\", \"description\": \"This is an image of a heart outline.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/image/{imagedeletehash}\"\nquerystring = {\"title\": \"Heart\", \"description\": \"This is an image of a heart outline.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "ImageUpload",
            "url": "https://imagegur.p.rapidapi.com/3/image",
            "description": "Upload a new image.\n\n#### Parameters\n\n| Key         | Required | Description                                                                                                                            |\n|-------------|----------|----------------------------------------------------------------------------------------------------------------------------------------|\n| image       | required | A binary file, base64 data, or a URL for an image. (up to 10MB)                                                                        |\n| album       | optional | The id of the album you want to add the image to. For anonymous albums, `album` should be the deletehash that is returned at creation. |\n| type        | optional | The type of the file that's being sent; `file`, `base64` or `URL`                                                                            |\n| name        | optional | The name of the file, this is automatically detected if uploading a file with a POST and multipart / form-data                         |\n| title       | optional | The title of the image.                                                                                                                |\n| description | optional | The description of the image.                                                                                                          |",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "",
                    "default": "gif"
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": "pixel.gif"
                },
                {
                    "name": "image",
                    "type": "STRING",
                    "description": "",
                    "default": "R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7"
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "",
                    "default": "This is an 1x1 pixel image."
                },
                {
                    "name": "album",
                    "type": "STRING",
                    "description": "",
                    "default": "{{albumHash}}"
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "",
                    "default": "1x1 Pixel"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/image\"\nquerystring = {\"type\": \"gif\", \"name\": \"pixel.gif\", \"image\": \"R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7\", \"description\": \"This is an 1x1 pixel image.\", \"album\": \"{{albumHash}}\", \"title\": \"1x1 Pixel\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://imagegur.p.rapidapi.com/3/image\"\nquerystring = {\"type\": \"gif\", \"name\": \"pixel.gif\", \"image\": \"R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7\", \"description\": \"This is an 1x1 pixel image.\", \"album\": \"{{albumHash}}\", \"title\": \"1x1 Pixel\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imagegur.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    ]
}