{
    "product_id": "53aa3773e4b07e1f4ebea4eb",
    "tool_description": "The Crowdtilt API allows developers to quickly and easily integrate crowdfunding or group payments into their applications.",
    "home_url": "https://rapidapi.com/crowdtilt/api/crowdtilt/",
    "name": "Crowdtilt",
    "title": "Crowdtilt",
    "pricing": "FREE",
    "tool_name": "Crowdtilt",
    "score": null,
    "host": "crowdtilt-crowdtilt.p.rapidapi.com",
    "api_list": [
        {
            "name": "Create User Card",
            "url": "https://crowdtilt-crowdtilt.p.rapidapi.com/users/{id}/cards",
            "description": "",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "User ID",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://crowdtilt-crowdtilt.p.rapidapi.com/users/{id}/cards\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crowdtilt-crowdtilt.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://crowdtilt-crowdtilt.p.rapidapi.com/users/{id}/cards\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crowdtilt-crowdtilt.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Create User Bank",
            "url": "https://crowdtilt-crowdtilt.p.rapidapi.com/users/{id}/banks",
            "description": "",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "User ID",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://crowdtilt-crowdtilt.p.rapidapi.com/users/{id}/banks\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crowdtilt-crowdtilt.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://crowdtilt-crowdtilt.p.rapidapi.com/users/{id}/banks\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crowdtilt-crowdtilt.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Refund a payment",
            "url": "https://crowdtilt-crowdtilt.p.rapidapi.com/campaigns/{id}/payments/{pid}/refund",
            "description": "In order to refund a payment, simply POST with an empty body to the payment's refund subresource.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "Campaign ID",
                    "default": ""
                },
                {
                    "name": "pid",
                    "type": "STRING",
                    "description": "Payment ID",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://crowdtilt-crowdtilt.p.rapidapi.com/campaigns/{id}/payments/{pid}/refund\"\nquerystring = {\"id\": \"\", \"pid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crowdtilt-crowdtilt.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://crowdtilt-crowdtilt.p.rapidapi.com/campaigns/{id}/payments/{pid}/refund\"\nquerystring = {\"id\": \"\", \"pid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crowdtilt-crowdtilt.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Create Campaign",
            "url": "https://crowdtilt-crowdtilt.p.rapidapi.com/campaigns",
            "description": "A campaign needs to be associated to a user. We refer to this user as the \"campaign admin\". Campaign admins can create campaigns without having to be verified. However, they need to be verified in order to set up their bank account details and then be able to receive the money collected in their campaign.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://crowdtilt-crowdtilt.p.rapidapi.com/campaigns\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crowdtilt-crowdtilt.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://crowdtilt-crowdtilt.p.rapidapi.com/campaigns\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crowdtilt-crowdtilt.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Update Campaign Settlement Bank",
            "url": "https://crowdtilt-crowdtilt.p.rapidapi.com/campaigns/{campaignid}/settlements/{settlementid}/bank",
            "description": "A Campaign Settlement can only be updated if the status is needs bank account. In this instance, a bank object can be sent with the id of a new bank account to re-attempt the settlement with.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "campaignid",
                    "type": "STRING",
                    "description": "Campaign ID",
                    "default": ""
                },
                {
                    "name": "settlementid",
                    "type": "STRING",
                    "description": "Settlement ID",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://crowdtilt-crowdtilt.p.rapidapi.com/campaigns/{campaignid}/settlements/{settlementid}/bank\"\nquerystring = {\"campaignid\": \"\", \"settlementid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crowdtilt-crowdtilt.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://crowdtilt-crowdtilt.p.rapidapi.com/campaigns/{campaignid}/settlements/{settlementid}/bank\"\nquerystring = {\"campaignid\": \"\", \"settlementid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crowdtilt-crowdtilt.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Verify User",
            "url": "https://crowdtilt-crowdtilt.p.rapidapi.com/users/{id}/verification",
            "description": "In order for a user to receive money raised from a campaign, the user's identity needs to be verified.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "User ID",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://crowdtilt-crowdtilt.p.rapidapi.com/users/{id}/verification\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crowdtilt-crowdtilt.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://crowdtilt-crowdtilt.p.rapidapi.com/users/{id}/verification\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crowdtilt-crowdtilt.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Create Campaign Comment",
            "url": "https://crowdtilt-crowdtilt.p.rapidapi.com/campaigns/{campaignid}/comments",
            "description": "To create a comment, POST to /campaigns/:id/comments. The only required fields are the user_id of the comment author and the body of the comment. The title, parent_id, and score fields are optional. The parent_id is the id of the parent of this comment, i.e., the comment that this comment is a reply to. This only matters if you want to support nested comments. You may provide a parent_id of null for top-level comments. The purpose of the score field is to provide support for voting on comments.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "campaignid",
                    "type": "STRING",
                    "description": "Campaign ID",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://crowdtilt-crowdtilt.p.rapidapi.com/campaigns/{campaignid}/comments\"\nquerystring = {\"campaignid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crowdtilt-crowdtilt.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://crowdtilt-crowdtilt.p.rapidapi.com/campaigns/{campaignid}/comments\"\nquerystring = {\"campaignid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crowdtilt-crowdtilt.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Make User Bank Default",
            "url": "https://crowdtilt-crowdtilt.p.rapidapi.com/users/{id}/banks/default",
            "description": "Before a bank account will be sent money, it must be marked as the default bank account for that user. To make a bank account the default, make the following request:",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "User ID",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://crowdtilt-crowdtilt.p.rapidapi.com/users/{id}/banks/default\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crowdtilt-crowdtilt.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://crowdtilt-crowdtilt.p.rapidapi.com/users/{id}/banks/default\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crowdtilt-crowdtilt.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Create User",
            "url": "https://crowdtilt-crowdtilt.p.rapidapi.com/users",
            "description": "The minimum amount of information needed to create a user is a valid email address.  Keep in mind that the metadata field is a great place to store references to other user assets, such as a profile image.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://crowdtilt-crowdtilt.p.rapidapi.com/users\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crowdtilt-crowdtilt.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://crowdtilt-crowdtilt.p.rapidapi.com/users\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crowdtilt-crowdtilt.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Create campaign payment",
            "url": "https://crowdtilt-crowdtilt.p.rapidapi.com/campaigns/{id}/payments",
            "description": "Before a user is able to contribute, they need to have a Credit Card associated to them. All amounts and prices used in this API are always in cents.When creating a payment, the amount field determines how much money is going to the campaign. The user_fee_amount accepts a value that will be charged to the paying user, on top of the amount, and the admin_fee_amount will be taken out of the money that goes to the campaign admin when the campaign tilts.For example, if a user wants to pay $20.00 to a campaign, and you want to add a 2% fee to the user, you would send amount as 2000 and user_fee_amount as 40 (2% of the $20.00). The users credit card would then be charged $20.40. In the same scenario, if you wanted to charge 2% from the admin when the campaign tilts, you would set admin_fee_amount to 40 and on tilt the admin will only receive $19.60 from the $20.00 payment.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "Campaign ID",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://crowdtilt-crowdtilt.p.rapidapi.com/campaigns/{id}/payments\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crowdtilt-crowdtilt.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://crowdtilt-crowdtilt.p.rapidapi.com/campaigns/{id}/payments\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crowdtilt-crowdtilt.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        }
    ]
}