{
    "tool_name": "Tokopedia Super API",
    "tool_description": "Unleash the Power of Tokopedia: Effortlessly Retrieve Shop and Product Information with Our API! (Unofficial)",
    "title": "Tokopedia Super API",
    "pricing": "FREEMIUM",
    "score": null,
    "home_url": "https://rapidapi.com/dytra/api/tokopedia-super-api/",
    "host": "tokopedia-super-api.p.rapidapi.com",
    "api_list": [
        {
            "name": "searchProducts",
            "url": "https://tokopedia-super-api.p.rapidapi.com/searchProducts",
            "description": "search product by keyword in tokopedia",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "search",
                    "type": "STRING",
                    "description": "search keyword",
                    "default": "TV"
                }
            ],
            "optional_parameters": [
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "the sorting method we want to use, see `/sortProductsMaster `",
                    "default": ""
                },
                {
                    "name": "max_price",
                    "type": "STRING",
                    "description": "the max price of the product",
                    "default": ""
                },
                {
                    "name": "min_price",
                    "type": "STRING",
                    "description": "the minimum price of the product",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://tokopedia-super-api.p.rapidapi.com/searchProducts\"\nquerystring = {\"search\": search}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"tokopedia-super-api.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "getShopInfo",
            "url": "https://tokopedia-super-api.p.rapidapi.com/getShopInfo",
            "description": "retrieve shop/seller info",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "shop_domain",
                    "type": "STRING",
                    "description": "the static username of the shop/seller",
                    "default": "spacegros"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://tokopedia-super-api.p.rapidapi.com/getShopInfo\"\nquerystring = {\"shop_domain\": shop_domain}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"tokopedia-super-api.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "getShopProducts",
            "url": "https://tokopedia-super-api.p.rapidapi.com/getShopProducts",
            "description": "get a product detail or search product in the specific shop/seller",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "shop_domain",
                    "type": "STRING",
                    "description": "the username of the shop/seller",
                    "default": "spacegros"
                }
            ],
            "optional_parameters": [
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "the sorting method we want to use, see `/sortProductsMaster`",
                    "default": ""
                },
                {
                    "name": "slug",
                    "type": "STRING",
                    "description": "the slug/code of the product",
                    "default": ""
                },
                {
                    "name": "search",
                    "type": "STRING",
                    "description": "the keyword of the product we want to search",
                    "default": ""
                },
                {
                    "name": "max_price",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "min_price",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://tokopedia-super-api.p.rapidapi.com/getShopProducts\"\nquerystring = {\"shop_domain\": shop_domain}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"tokopedia-super-api.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "sortProductsMaster",
            "url": "https://tokopedia-super-api.p.rapidapi.com/sortProductsMaster",
            "description": "the list of available sorting methods",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://tokopedia-super-api.p.rapidapi.com/sortProductsMaster\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"tokopedia-super-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "searchProducts",
            "url": "https://tokopedia-super-api.p.rapidapi.com/searchProducts",
            "description": "search product by keyword in tokopedia",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "search",
                    "type": "STRING",
                    "description": "search keyword",
                    "default": "TV"
                }
            ],
            "optional_parameters": [
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "the sorting method we want to use, see `/sortProductsMaster `",
                    "default": ""
                },
                {
                    "name": "max_price",
                    "type": "STRING",
                    "description": "the max price of the product",
                    "default": ""
                },
                {
                    "name": "min_price",
                    "type": "STRING",
                    "description": "the minimum price of the product",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://tokopedia-super-api.p.rapidapi.com/searchProducts\"\nquerystring = {\"sort\": \"\", \"max_price\": \"\", \"search\": \"TV\", \"min_price\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tokopedia-super-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://tokopedia-super-api.p.rapidapi.com/searchProducts\"\nquerystring = {\"sort\": \"\", \"max_price\": \"\", \"search\": \"TV\", \"min_price\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tokopedia-super-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getShopInfo",
            "url": "https://tokopedia-super-api.p.rapidapi.com/getShopInfo",
            "description": "retrieve shop/seller info",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "shop_domain",
                    "type": "STRING",
                    "description": "the static username of the shop/seller",
                    "default": "spacegros"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://tokopedia-super-api.p.rapidapi.com/getShopInfo\"\nquerystring = {\"shop_domain\": \"spacegros\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tokopedia-super-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://tokopedia-super-api.p.rapidapi.com/getShopInfo\"\nquerystring = {\"shop_domain\": \"spacegros\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tokopedia-super-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getShopProducts",
            "url": "https://tokopedia-super-api.p.rapidapi.com/getShopProducts",
            "description": "get a product detail or search product in the specific shop/seller",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "shop_domain",
                    "type": "STRING",
                    "description": "the username of the shop/seller",
                    "default": "spacegros"
                }
            ],
            "optional_parameters": [
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "the sorting method we want to use, see `/sortProductsMaster`",
                    "default": ""
                },
                {
                    "name": "slug",
                    "type": "STRING",
                    "description": "the slug/code of the product",
                    "default": ""
                },
                {
                    "name": "search",
                    "type": "STRING",
                    "description": "the keyword of the product we want to search",
                    "default": ""
                },
                {
                    "name": "max_price",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "min_price",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://tokopedia-super-api.p.rapidapi.com/getShopProducts\"\nquerystring = {\"sort\": \"\", \"shop_domain\": \"spacegros\", \"slug\": \"\", \"search\": \"\", \"max_price\": \"\", \"min_price\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tokopedia-super-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://tokopedia-super-api.p.rapidapi.com/getShopProducts\"\nquerystring = {\"sort\": \"\", \"shop_domain\": \"spacegros\", \"slug\": \"\", \"search\": \"\", \"max_price\": \"\", \"min_price\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tokopedia-super-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}