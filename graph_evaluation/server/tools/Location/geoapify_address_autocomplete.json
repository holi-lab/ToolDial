{
    "tool_name":"Geoapify Address Autocomplete",
    "tool_description":"Get address suggestions for a user-entered address for address forms and inputs",
    "title":"Geoapify Address Autocomplete",
    "pricing":"FREEMIUM",
    "score":{
        "avgServiceLevel":100,
        "avgLatency":681,
        "avgSuccessRate":96,
        "popularityScore":9.6,
        "__typename":"Score"
    },
    "home_url":"https://rapidapi.com/geoapify-gmbh-geoapify/api/geoapify-address-autocomplete/",
    "host":"geoapify-address-autocomplete.p.rapidapi.com",
    "api_list":[
        {
            "name":"addressAutocomplete",
            "url":"https://geoapify-address-autocomplete.p.rapidapi.com/v1/geocode/autocomplete",
            "description":"The Address Autocomplete API is used to implement location autocomplete fields. In general, the API is called when a user presses a key in the address field to show address suggestions in a dropdown list.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"text",
                    "type":"STRING",
                    "description":"",
                    "default":"Polizeigasse"
                }
            ],
            "optional_parameters":[
                {
                    "name":"bias",
                    "type":"STRING",
                    "description":"Prefer places by country, boundary, circle, location:\n* by circle - circle:lon,lat,radiusMeters, for example, bias=circle:-87.770231,41.878968,5000\n* by rectangle - rect:lon1,lat1,lon2,lat2, for example , bias=rect:-89.097540,39.668983,-88.399274,40.383412\n* by country - comma-separated ISO 3166-1 Alpha-2 country codes (in lower case),  for example, bias=countrycode:de,es,fr\n* by proximity - proximity:lon,lat, for example, bias=proximity:41.2257145,52.971411",
                    "default":"proximity:10.485306,48.852565"
                },
                {
                    "name":"filter",
                    "type":"STRING",
                    "description":"Filter places by country, boundary, circle:\n* by circle - circle:lon,lat,radiusMeters, for example, filter=circle:-87.770231,41.878968,5000\n* by rectangle - rect:lon1,lat1,lon2,lat2, for example , filter=rect:-89.097540,39.668983,-88.399274,40.383412\n* by country - comma-separated ISO 3166-1 Alpha-2 country codes (in lower case),  for example, filter=countrycode:de,es,fr",
                    "default":"countrycode:de,es,fr"
                },
                {
                    "name":"lang",
                    "type":"STRING",
                    "description":"",
                    "default":"de"
                },
                {
                    "name":"limit",
                    "type":"STRING",
                    "description":"",
                    "default":"2"
                },
                {
                    "name":"type",
                    "type":"STRING",
                    "description":"Desired result granularity. Possible values: 'country', 'state', 'city', 'postcode', 'street', 'amenity'.",
                    "default":"street"
                }
            ],
            "code":"import requests\n\nurl = \"https://geoapify-address-autocomplete.p.rapidapi.com/v1/geocode/autocomplete\"\nquerystring = {\"bias\": bias, \"filter\": filter, \"lang\": lang, \"limit\": limit, \"text\": text, \"type\": type}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"geoapify-address-autocomplete.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        }
    ]
}