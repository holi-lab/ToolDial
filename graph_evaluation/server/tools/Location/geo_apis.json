{
    "tool_name":"Geo APIs",
    "tool_description":"Search for zip codes, Cites or Countries",
    "title":"Geo APIs",
    "pricing":"FREEMIUM",
    "score":null,
    "home_url":"https://rapidapi.com/0OZ/api/geo-apis/",
    "host":"geo-apis.p.rapidapi.com",
    "api_list":[
        {
            "name":"Autosuggestion City Names",
            "url":"https://geo-apis.p.rapidapi.com/geo",
            "description":"search for cities around the world",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[
                {
                    "name":"page",
                    "type":"STRING",
                    "description":"",
                    "default":"0"
                },
                {
                    "name":"size",
                    "type":"STRING",
                    "description":"",
                    "default":"20"
                },
                {
                    "name":"name",
                    "type":"STRING",
                    "description":"",
                    "default":"london"
                },
                {
                    "name":"countryCode",
                    "type":"STRING",
                    "description":"DE,GB,US etc.",
                    "default":"GB"
                }
            ],
            "code":"import requests\n\nurl = \"https://geo-apis.p.rapidapi.com/geo\"\nquerystring = {\"page\": page, \"size\": size, \"name\": name, \"countryCode\": countrycode}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"geo-apis.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "key1":"value",
                "key2":"value"
            },
            "headers":{},
            "schema":{}
        },
        {
            "name":"Zip Code Search",
            "url":"https://geo-apis.p.rapidapi.com/geo",
            "description":"find countries, geo location, zip/postal -codes around the world",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[
                {
                    "name":"postalCodes",
                    "type":"STRING",
                    "description":"",
                    "default":"14197,10559"
                },
                {
                    "name":"size",
                    "type":"NUMBER",
                    "description":"",
                    "default":"10"
                },
                {
                    "name":"countryCodes",
                    "type":"STRING",
                    "description":"",
                    "default":"US,DE"
                },
                {
                    "name":"page",
                    "type":"NUMBER",
                    "description":"",
                    "default":"0"
                }
            ],
            "code":"import requests\n\nurl = \"https://geo-apis.p.rapidapi.com/geo\"\nquerystring = {\"postalCodes\": postalcodes, \"size\": size, \"countryCodes\": countrycodes, \"page\": page}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"geo-apis.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "key1":"value",
                "key2":"value"
            },
            "headers":{},
            "schema":{
                "type":"object",
                "properties":{
                    "totalHits":{
                        "type":"integer"
                    },
                    "totalHitsRelation":{
                        "type":"string"
                    },
                    "maxScore":{
                        "type":"integer"
                    },
                    "scrollId":{
                        "type":"null"
                    },
                    "searchHits":{
                        "type":"array",
                        "items":{
                            "type":"object",
                            "properties":{
                                "index":{
                                    "type":"string"
                                },
                                "id":{
                                    "type":"string"
                                },
                                "score":{
                                    "type":"integer"
                                },
                                "sortValues":{
                                    "type":"array"
                                },
                                "content":{
                                    "type":"object",
                                    "properties":{
                                        "id":{
                                            "type":"string"
                                        },
                                        "countryCode":{
                                            "type":"string"
                                        },
                                        "postalCode":{
                                            "type":"string"
                                        },
                                        "name":{
                                            "type":"string"
                                        },
                                        "state":{
                                            "type":"string"
                                        },
                                        "stateCode":{
                                            "type":"string"
                                        },
                                        "provinceCode":{
                                            "type":"string"
                                        },
                                        "provinceName":{
                                            "type":"string"
                                        },
                                        "accuracy":{
                                            "type":"integer"
                                        },
                                        "location":{
                                            "type":"object",
                                            "properties":{
                                                "lat":{
                                                    "type":"number"
                                                },
                                                "lon":{
                                                    "type":"number"
                                                }
                                            }
                                        }
                                    }
                                },
                                "highlightFields":{
                                    "type":"object"
                                },
                                "innerHits":{
                                    "type":"object"
                                },
                                "nestedMetaData":{
                                    "type":"null"
                                },
                                "routing":{
                                    "type":"null"
                                },
                                "explanation":{
                                    "type":"null"
                                },
                                "matchedQueries":{
                                    "type":"array"
                                }
                            }
                        }
                    },
                    "aggregations":{
                        "type":"null"
                    },
                    "suggest":{
                        "type":"null"
                    },
                    "empty":{
                        "type":"boolean"
                    }
                }
            }
        }
    ]
}