{
    "product_id": "api_f50e3817-d707-4b92-b803-93c6434a5a92",
    "tool_description": "Upload images & access them in your application.",
    "home_url": "https://rapidapi.com/thoenehannes/api/image-cdn/",
    "name": "Image CDN",
    "title": "Image CDN",
    "pricing": "FREEMIUM",
    "tool_name": "Image CDN",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 1398,
        "avgSuccessRate": 77,
        "popularityScore": 8.8,
        "__typename": "Score"
    },
    "host": "image-cdn.p.rapidapi.com",
    "api_list": [
        {
            "name": "Show History",
            "url": "https://image-cdn.p.rapidapi.com/list",
            "description": "Shows all images you uploaded in a pageable list",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "The size of one page, maximum 100",
                    "default": "100"
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The page you want to return, starting at 0",
                    "default": "0"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://image-cdn.p.rapidapi.com/list\"\nquerystring = {\"pageSize\": \"100\", \"page\": \"0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-cdn.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://image-cdn.p.rapidapi.com/list\"\nquerystring = {\"pageSize\": \"100\", \"page\": \"0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-cdn.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "User not existing"
            }
        }
    ],
    "standardized_name": "image_cdn"
}