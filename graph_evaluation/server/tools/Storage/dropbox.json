{
    "product_id": "124",
    "tool_description": "Access, store and sync files online and across computers.",
    "home_url": "https://rapidapi.com/stefan.skliarov/api/Dropbox/",
    "name": "Dropbox",
    "title": "Dropbox",
    "pricing": "FREE",
    "tool_name": "Dropbox",
    "score": null,
    "host": "Dropboxstefan-skliarovV1.p.rapidapi.com",
    "api_list": [
        {
            "name": "addFileMembers",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/addFileMembers",
            "description": "Adds specified members to a file.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "fileId",
                    "type": "STRING",
                    "description": "Id of the file",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "membersList",
                    "type": "LIST",
                    "description": "Users which should be added to the Paper doc. Specify only email or Dropbox account id. Example: [{\".tag\": \"email\",\"email\": \"justin@example.com\"}]",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "quiet",
                    "type": "SELECT",
                    "description": "Clients should set this to true if no email shall be sent to added users. The default for this field is False.",
                    "default": ""
                },
                {
                    "name": "accessLevel",
                    "type": "SELECT",
                    "description": "AccessLevel union object, describing what access level we want to give new members. Possible values: viewer(default), owner, editor, viewer_no_comment.",
                    "default": ""
                },
                {
                    "name": "addMessageAsComment",
                    "type": "SELECT",
                    "description": "If the custom message should be added as a comment on the file. The default for this field is False.",
                    "default": ""
                },
                {
                    "name": "customMessage",
                    "type": "STRING",
                    "description": "A personal message that will be emailed to each successfully added member.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/addFileMembers\"\nquerystring = {\"fileId\": \"\", \"accessToken\": \"\", \"quiet\": \"\", \"accessLevel\": \"\", \"addMessageAsComment\": \"\", \"customMessage\": \"\", \"membersList\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/addFileMembers\"\nquerystring = {\"fileId\": \"\", \"accessToken\": \"\", \"quiet\": \"\", \"accessLevel\": \"\", \"addMessageAsComment\": \"\", \"customMessage\": \"\", \"membersList\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addFolderMembers",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/addFolderMembers",
            "description": "Adds specified members to a folder.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "folderId",
                    "type": "STRING",
                    "description": "Id of the folder",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "membersList",
                    "type": "LIST",
                    "description": "Users which should be added to the Paper doc. Specify only email or Dropbox account id. Example: [{\"member\" :{\".tag\": \"email\",\"email\": \"justin@example.com\"}}]",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "quiet",
                    "type": "SELECT",
                    "description": "Clients should set this to true if no email shall be sent to added users. The default for this field is False.",
                    "default": ""
                },
                {
                    "name": "customMessage",
                    "type": "STRING",
                    "description": "A personal message that will be emailed to each successfully added member.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/addFolderMembers\"\nquerystring = {\"folderId\": \"\", \"accessToken\": \"\", \"quiet\": \"\", \"customMessage\": \"\", \"membersList\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/addFolderMembers\"\nquerystring = {\"folderId\": \"\", \"accessToken\": \"\", \"quiet\": \"\", \"customMessage\": \"\", \"membersList\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "addUsersToDoc",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/addUsersToDoc",
            "description": "Allows an owner or editor to add users to a Paper doc or change their permissions using their email or Dropbox account id.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "documentId",
                    "type": "STRING",
                    "description": "Id of the document",
                    "default": ""
                },
                {
                    "name": "membersList",
                    "type": "LIST",
                    "description": "Users which should be added to the Paper doc. Specify only email or Dropbox account id. Example: [{\"member\": {\".tag\": \"email\",\"email\": \"justin@example.com\"},\"permission_level\":{\".tag\":\"view_and_comment\"}}]",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "customMessage",
                    "type": "STRING",
                    "description": "A personal message that will be emailed to each successfully added member.",
                    "default": ""
                },
                {
                    "name": "quiet",
                    "type": "SELECT",
                    "description": "Clients should set this to true if no email shall be sent to added users. The default for this field is False.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/addUsersToDoc\"\nquerystring = {\"accessToken\": \"\", \"documentId\": \"\", \"customMessage\": \"\", \"quiet\": \"\", \"membersList\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/addUsersToDoc\"\nquerystring = {\"accessToken\": \"\", \"documentId\": \"\", \"customMessage\": \"\", \"quiet\": \"\", \"membersList\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "checkJobStatus",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/checkJobStatus",
            "description": "Returns the status of an asynchronous job.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "jobId",
                    "type": "STRING",
                    "description": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/checkJobStatus\"\nquerystring = {\"jobId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/checkJobStatus\"\nquerystring = {\"jobId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "checkRemoveMemberStatus",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/checkRemoveMemberStatus",
            "description": "Returns the status of an asynchronous job.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "removeJobId",
                    "type": "STRING",
                    "description": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/checkRemoveMemberStatus\"\nquerystring = {\"accessToken\": \"\", \"removeJobId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/checkRemoveMemberStatus\"\nquerystring = {\"accessToken\": \"\", \"removeJobId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "checkShareJobStatus",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/checkShareJobStatus",
            "description": "Returns the status of an asynchronous job for sharing a folder.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "shareJobId",
                    "type": "STRING",
                    "description": "ID of the share job",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/checkShareJobStatus\"\nquerystring = {\"accessToken\": \"\", \"shareJobId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/checkShareJobStatus\"\nquerystring = {\"accessToken\": \"\", \"shareJobId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "copy",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/copy",
            "description": "Copy a file or folder to a different location in the user's Dropbox. If the source path is a folder all its contents will be copied.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "fromPath",
                    "type": "STRING",
                    "description": "Path in the user's Dropbox to be copied",
                    "default": ""
                },
                {
                    "name": "toPath",
                    "type": "STRING",
                    "description": "Path in the user's Dropbox that is the destination.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "allowSharedFolder",
                    "type": "SELECT",
                    "description": "If true, copy will copy contents in shared folder, otherwise RelocationError.cant_copy_shared_folder will be returned if from_path contains shared folder. This field is always true for move. The default for this field is False.",
                    "default": ""
                },
                {
                    "name": "autoRename",
                    "type": "SELECT",
                    "description": "If there's a conflict, have the Dropbox server try to autorename the file to avoid the conflict. The default for this field is False.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/copy\"\nquerystring = {\"fromPath\": \"\", \"allowSharedFolder\": \"\", \"toPath\": \"\", \"accessToken\": \"\", \"autoRename\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/copy\"\nquerystring = {\"fromPath\": \"\", \"allowSharedFolder\": \"\", \"toPath\": \"\", \"accessToken\": \"\", \"autoRename\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "copyBatch",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/copyBatch",
            "description": "Copy multiple files or folders to different locations at once in the user's Dropbox.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "entries",
                    "type": "LIST",
                    "description": "List of entries to be copied. Example: [{\"from_path\":\"/123/sample.json\", \"to_path\": \"/321/sample.json\"}]",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "autoRename",
                    "type": "SELECT",
                    "description": "If there's a conflict, have the Dropbox server try to autorename the file to avoid the conflict. The default for this field is False.",
                    "default": ""
                },
                {
                    "name": "allowSharedFolder",
                    "type": "SELECT",
                    "description": "If true, copy will copy contents in shared folder, otherwise RelocationError.cant_copy_shared_folder will be returned if from_path contains shared folder. This field is always true for move. The default for this field is False.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/copyBatch\"\nquerystring = {\"accessToken\": \"\", \"autoRename\": \"\", \"allowSharedFolder\": \"\", \"entries\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/copyBatch\"\nquerystring = {\"accessToken\": \"\", \"autoRename\": \"\", \"allowSharedFolder\": \"\", \"entries\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createFolder",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/createFolder",
            "description": "Create a folder at a given path.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "folderPath",
                    "type": "STRING",
                    "description": "Path in the user's Dropbox to create.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "autoRename",
                    "type": "SELECT",
                    "description": "If there's a conflict, have the Dropbox server try to autorename the folder to avoid the conflict. The default for this field is False.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/createFolder\"\nquerystring = {\"folderPath\": \"\", \"autoRename\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/createFolder\"\nquerystring = {\"folderPath\": \"\", \"autoRename\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createSharedLink",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/createSharedLink",
            "description": "Create a shared link with custom settings. ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "linkPath",
                    "type": "STRING",
                    "description": "The path to be shared by the shared link",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "requestedVisibility",
                    "type": "SELECT",
                    "description": "The requested access for this shared link. Possible values: public, team_only",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/createSharedLink\"\nquerystring = {\"requestedVisibility\": \"\", \"linkPath\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/createSharedLink\"\nquerystring = {\"requestedVisibility\": \"\", \"linkPath\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "delete",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/delete",
            "description": "Deletes a folder or a file at a given path.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "deletePath",
                    "type": "STRING",
                    "description": "Path in the user's Dropbox to delete.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/delete\"\nquerystring = {\"deletePath\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/delete\"\nquerystring = {\"deletePath\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteBatch",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/deleteBatch",
            "description": "Delete multiple files/folders at once.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "deleteEntries",
                    "type": "LIST",
                    "description": "list of entries to delete. Exmaple: [{\"path\":\"/125\"}, {\"path\":\"/126\"}]",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/deleteBatch\"\nquerystring = {\"accessToken\": \"\", \"deleteEntries\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/deleteBatch\"\nquerystring = {\"accessToken\": \"\", \"deleteEntries\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteDoc",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/deleteDoc",
            "description": "Permanently deletes the given Paper doc. This operation is final as the doc cannot be recovered.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "documentId",
                    "type": "STRING",
                    "description": "Id of the document",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/deleteDoc\"\nquerystring = {\"accessToken\": \"\", \"documentId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/deleteDoc\"\nquerystring = {\"accessToken\": \"\", \"documentId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteUserFromDoc",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/deleteUserFromDoc",
            "description": "Allows an owner or editor to remove users from a Paper doc using their email or Dropbox account id.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "documentId",
                    "type": "STRING",
                    "description": "Id of the document",
                    "default": ""
                },
                {
                    "name": "memberIdentifier",
                    "type": "STRING",
                    "description": "Id of the user or email",
                    "default": ""
                },
                {
                    "name": "memberTag",
                    "type": "SELECT",
                    "description": "Includes different ways to identify a member of a shared folder. This datatype comes from an imported namespace originally defined in the sharing namespace. The value will be one of the following datatypes. New values may be introduced as our API evolves. Possible values: email, dropbox_id",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/deleteUserFromDoc\"\nquerystring = {\"documentId\": \"\", \"memberIdentifier\": \"\", \"memberTag\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/deleteUserFromDoc\"\nquerystring = {\"documentId\": \"\", \"memberIdentifier\": \"\", \"memberTag\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "downloadDocAsHTML",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/downloadDocAsHTML",
            "description": "Exports and downloads Paper doc either as HTML.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "documentId",
                    "type": "STRING",
                    "description": "Id of the document",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/downloadDocAsHTML\"\nquerystring = {\"documentId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/downloadDocAsHTML\"\nquerystring = {\"documentId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "downloadDocAsMarkdown",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/downloadDocAsMarkdown",
            "description": "Exports and downloads Paper doc either as Markdown.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "documentId",
                    "type": "STRING",
                    "description": "Id of the document",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/downloadDocAsMarkdown\"\nquerystring = {\"documentId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/downloadDocAsMarkdown\"\nquerystring = {\"documentId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "downloadFile",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/downloadFile",
            "description": "Download a file from a user's Dropbox.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "filePath",
                    "type": "STRING",
                    "description": "Path of the file",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/downloadFile\"\nquerystring = {\"accessToken\": \"\", \"filePath\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/downloadFile\"\nquerystring = {\"accessToken\": \"\", \"filePath\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAccessToken",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getAccessToken",
            "description": "Generates user access token",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "Api secret obtained from Dropbox",
                    "default": ""
                },
                {
                    "name": "code",
                    "type": "STRING",
                    "description": "Code provided by user",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Api key obtained from Dropbox",
                    "default": ""
                },
                {
                    "name": "redirectUri",
                    "type": "STRING",
                    "description": "Redirect uri set for your app",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getAccessToken\"\nquerystring = {\"apiSecret\": \"\", \"code\": \"\", \"apiKey\": \"\", \"redirectUri\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getAccessToken\"\nquerystring = {\"apiSecret\": \"\", \"code\": \"\", \"apiKey\": \"\", \"redirectUri\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCopyReference",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getCopyReference",
            "description": "Get a copy reference to a file or folder. ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "The path to the file or folder you want to get a copy reference to.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getCopyReference\"\nquerystring = {\"accessToken\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getCopyReference\"\nquerystring = {\"accessToken\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCopyStatus",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getCopyStatus",
            "description": "Returns the status of an asynchronous job for copyBatch. If success, it returns list of results for each entry.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "copyJobId",
                    "type": "STRING",
                    "description": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getCopyStatus\"\nquerystring = {\"copyJobId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getCopyStatus\"\nquerystring = {\"copyJobId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getDeleteStatus",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getDeleteStatus",
            "description": "Returns the status of an asynchronous job for deleteBatch. If success, it returns list of results for each entry.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "deleteJobId",
                    "type": "STRING",
                    "description": " Id of the asynchronous job. This is the value of a response returned from the method that launched the job.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getDeleteStatus\"\nquerystring = {\"accessToken\": \"\", \"deleteJobId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getDeleteStatus\"\nquerystring = {\"accessToken\": \"\", \"deleteJobId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getDocInvitedUsers",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getDocInvitedUsers",
            "description": "Lists the users who are explicitly invited to the Paper folder in which the Paper doc is contained. For private folders all users (including owner) shared on the folder are listed and for team folders all non-team users shared on the folder are returned.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "documentId",
                    "type": "STRING",
                    "description": "Id of the document",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Size limit per batch. The maximum number of users that can be retrieved per batch is 1000. Higher value results in invalid arguments error. The default for this field is 1000.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getDocInvitedUsers\"\nquerystring = {\"accessToken\": \"\", \"limit\": \"\", \"documentId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getDocInvitedUsers\"\nquerystring = {\"accessToken\": \"\", \"limit\": \"\", \"documentId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getDocSharingPolicy",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getDocSharingPolicy",
            "description": "Gets the default sharing policy for the given Paper doc.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "documentId",
                    "type": "STRING",
                    "description": "Id of the document",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getDocSharingPolicy\"\nquerystring = {\"accessToken\": \"\", \"documentId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getDocSharingPolicy\"\nquerystring = {\"accessToken\": \"\", \"documentId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getDocs",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getDocs",
            "description": "Return the list of all Paper docs according to the argument specifications.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Allows user to specify how the Paper docs should be sorted. Possible values: accessed(default), modified, created",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Size limit per batch. The maximum number of docs that can be retrieved per batch is 1000. Higher value results in invalid arguments error. The default for this field is 1000.",
                    "default": ""
                },
                {
                    "name": "sortOrder",
                    "type": "SELECT",
                    "description": "Allows user to specify the sort order of the result. Possible values: ascending(default), descending",
                    "default": ""
                },
                {
                    "name": "filterBy",
                    "type": "SELECT",
                    "description": "Allows user to specify how the Paper docs should be filtered. Possible values: docs_accessed(default), docs_created",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getDocs\"\nquerystring = {\"sortBy\": \"\", \"accessToken\": \"\", \"limit\": \"\", \"sortOrder\": \"\", \"filterBy\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getDocs\"\nquerystring = {\"sortBy\": \"\", \"accessToken\": \"\", \"limit\": \"\", \"sortOrder\": \"\", \"filterBy\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getFileInvitedUsers",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getFileInvitedUsers",
            "description": "Use to obtain the members who have been invited to a file, both inherited and uninherited members.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "fileId",
                    "type": "STRING",
                    "description": "The file for which you want to see members.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Number of members to return max per query. Defaults to 100 if no limit is specified. The default for this field is 100.",
                    "default": ""
                },
                {
                    "name": "includeInherited",
                    "type": "SELECT",
                    "description": "Whether to include members who only have access from a parent shared folder. The default for this field is True.",
                    "default": ""
                },
                {
                    "name": "actions",
                    "type": "LIST",
                    "description": "The actions for which to return permissions on a member.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getFileInvitedUsers\"\nquerystring = {\"fileId\": \"\", \"accessToken\": \"\", \"limit\": \"\", \"includeInherited\": \"\", \"actions\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getFileInvitedUsers\"\nquerystring = {\"fileId\": \"\", \"accessToken\": \"\", \"limit\": \"\", \"includeInherited\": \"\", \"actions\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getFilePreview",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getFilePreview",
            "description": "Get a preview for a file. Currently previews are only generated for the files with the following extensions: .ai, .doc, .docm, .docx, .eps, .odp, .odt, .pps, .ppsm, .ppsx, .ppt, .pptm, .pptx, .rtf, .csv, .ods, .xls, .xlsm, .xlsx.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "filePath",
                    "type": "STRING",
                    "description": "Path of the file",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getFilePreview\"\nquerystring = {\"filePath\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getFilePreview\"\nquerystring = {\"filePath\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getFileRevisions",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getFileRevisions",
            "description": "Return revisions of a file.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "filePath",
                    "type": "STRING",
                    "description": "Path of the file",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The maximum number of revision entries returned. The default for this field is 10.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getFileRevisions\"\nquerystring = {\"filePath\": \"\", \"limit\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getFileRevisions\"\nquerystring = {\"filePath\": \"\", \"limit\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getFileTemporaryLink",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getFileTemporaryLink",
            "description": "Get a temporary link to stream content of a file. This link will expire in four hours and afterwards you will get 410 Gone. Content-Type of the link is determined automatically by the file's mime type.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "filePath",
                    "type": "STRING",
                    "description": "Path of the file",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getFileTemporaryLink\"\nquerystring = {\"accessToken\": \"\", \"filePath\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getFileTemporaryLink\"\nquerystring = {\"accessToken\": \"\", \"filePath\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getFilesInvitedUsers",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getFilesInvitedUsers",
            "description": "Get members of multiple files at once. The arguments to this route are more limited, and the limit on query result size per file is more strict. ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "fileIds",
                    "type": "LIST",
                    "description": "Files for which you want to see members.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Number of members to return max per query. Defaults to 10 if no limit is specified.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getFilesInvitedUsers\"\nquerystring = {\"accessToken\": \"\", \"limit\": \"\", \"fileIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getFilesInvitedUsers\"\nquerystring = {\"accessToken\": \"\", \"limit\": \"\", \"fileIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getFolderContents",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getFolderContents",
            "description": "Starts returning the contents of a folder.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "folderPath",
                    "type": "STRING",
                    "description": "Path of the file or a folder",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "includeDeleted",
                    "type": "SELECT",
                    "description": " If true, DeletedMetadata will be returned for deleted file or folder, otherwise LookupError.not_found will be returned. The default for this field is False.",
                    "default": ""
                },
                {
                    "name": "recursive",
                    "type": "SELECT",
                    "description": "If true, the list folder operation will be applied recursively to all subfolders and the response will contain contents of all subfolders. The default for this field is False.",
                    "default": ""
                },
                {
                    "name": "includeHasExplicitSharedMembers",
                    "type": "SELECT",
                    "description": "If true, the results will include a flag for each file indicating whether or not that file has any explicit members. The default for this field is False.",
                    "default": ""
                },
                {
                    "name": "includeMediaInfo",
                    "type": "SELECT",
                    "description": "If true, FileMetadata.media_info is set for photo and video. The default for this field is False.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getFolderContents\"\nquerystring = {\"accessToken\": \"\", \"includeDeleted\": \"\", \"recursive\": \"\", \"folderPath\": \"\", \"includeHasExplicitSharedMembers\": \"\", \"includeMediaInfo\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getFolderContents\"\nquerystring = {\"accessToken\": \"\", \"includeDeleted\": \"\", \"recursive\": \"\", \"folderPath\": \"\", \"includeHasExplicitSharedMembers\": \"\", \"includeMediaInfo\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getFolderInfo",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getFolderInfo",
            "description": "Retrieves folder information for the given Paper doc.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "documentId",
                    "type": "STRING",
                    "description": "Id of the document",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getFolderInfo\"\nquerystring = {\"accessToken\": \"\", \"documentId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getFolderInfo\"\nquerystring = {\"accessToken\": \"\", \"documentId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getImageThumbnail",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getImageThumbnail",
            "description": "This method currently supports files with the following file extensions: jpg, jpeg, png, tiff, tif, gif and bmp. Photos that are larger than 20MB in size won't be converted to a thumbnail.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imagePath",
                    "type": "STRING",
                    "description": "Path of the image",
                    "default": ""
                },
                {
                    "name": "format",
                    "type": "SELECT",
                    "description": "The format for the thumbnail image, jpeg (default) or png. For images that are photos, jpeg should be preferred, while png is better for screenshots and digital arts. The default for this union is jpeg.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "size",
                    "type": "SELECT",
                    "description": "The size for the thumbnail image. The default for this union is w64h64.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getImageThumbnail\"\nquerystring = {\"imagePath\": \"\", \"size\": \"\", \"format\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getImageThumbnail\"\nquerystring = {\"imagePath\": \"\", \"size\": \"\", \"format\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getLatestCursor",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getLatestCursor",
            "description": "A way to quickly get a cursor for the folder's state.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "folderPath",
                    "type": "STRING",
                    "description": "Path of the file or a folder",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "recursive",
                    "type": "SELECT",
                    "description": "If true, the list folder operation will be applied recursively to all subfolders and the response will contain contents of all subfolders. The default for this field is False.",
                    "default": ""
                },
                {
                    "name": "includeDeleted",
                    "type": "SELECT",
                    "description": " If true, DeletedMetadata will be returned for deleted file or folder, otherwise LookupError.not_found will be returned. The default for this field is False.",
                    "default": ""
                },
                {
                    "name": "includeHasExplicitSharedMembers",
                    "type": "SELECT",
                    "description": "If true, the results will include a flag for each file indicating whether or not that file has any explicit members. The default for this field is False.",
                    "default": ""
                },
                {
                    "name": "includeMediaInfo",
                    "type": "SELECT",
                    "description": "If true, FileMetadata.media_info is set for photo and video. The default for this field is False.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getLatestCursor\"\nquerystring = {\"accessToken\": \"\", \"recursive\": \"\", \"includeDeleted\": \"\", \"folderPath\": \"\", \"includeHasExplicitSharedMembers\": \"\", \"includeMediaInfo\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getLatestCursor\"\nquerystring = {\"accessToken\": \"\", \"recursive\": \"\", \"includeDeleted\": \"\", \"folderPath\": \"\", \"includeHasExplicitSharedMembers\": \"\", \"includeMediaInfo\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMe",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getMe",
            "description": "Get information about a current user's account.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getMe\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getMe\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMetadata",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getMetadata",
            "description": "Returns the metadata for a file or folder.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "Path of the file or a folder",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "includeDeleted",
                    "type": "SELECT",
                    "description": " If true, DeletedMetadata will be returned for deleted file or folder, otherwise LookupError.not_found will be returned. The default for this field is False.",
                    "default": ""
                },
                {
                    "name": "includeMediaInfo",
                    "type": "SELECT",
                    "description": "If true, FileMetadata.media_info is set for photo and video. The default for this field is False.",
                    "default": ""
                },
                {
                    "name": "includeHasExplicitSharedMembers",
                    "type": "SELECT",
                    "description": "If true, the results will include a flag for each file indicating whether or not that file has any explicit members. The default for this field is False.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getMetadata\"\nquerystring = {\"path\": \"\", \"includeDeleted\": \"\", \"includeMediaInfo\": \"\", \"includeHasExplicitSharedMembers\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getMetadata\"\nquerystring = {\"path\": \"\", \"includeDeleted\": \"\", \"includeMediaInfo\": \"\", \"includeHasExplicitSharedMembers\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMoveStatus",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getMoveStatus",
            "description": "Returns the status of an asynchronous job for moveBatch. If success, it returns list of results for each entry.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "moveJobId",
                    "type": "STRING",
                    "description": " Id of the asynchronous job. This is the value of a response returned from the method that launched the job.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getMoveStatus\"\nquerystring = {\"accessToken\": \"\", \"moveJobId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getMoveStatus\"\nquerystring = {\"accessToken\": \"\", \"moveJobId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getMySpaceUsage",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getMySpaceUsage",
            "description": "Get the space usage information for the current user's account.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getMySpaceUsage\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getMySpaceUsage\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSaveFileURLStatus",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getSaveFileURLStatus",
            "description": "Returns the status of an asynchronous job for saveFileURL. If success, it returns list of results for each entry.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "saveUrlJobId",
                    "type": "STRING",
                    "description": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getSaveFileURLStatus\"\nquerystring = {\"saveUrlJobId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getSaveFileURLStatus\"\nquerystring = {\"saveUrlJobId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSharedFileMetadataBatch",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getSharedFileMetadataBatch",
            "description": "Returns shared file metadata.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "fileIds",
                    "type": "LIST",
                    "description": "Files to query.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "options",
                    "type": "LIST",
                    "description": "A list of `FileAction`s corresponding to `FilePermission`s that should appear in the response's SharedFileMetadata.permissions field describing the actions the authenticated user can perform on the file.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getSharedFileMetadataBatch\"\nquerystring = {\"accessToken\": \"\", \"fileIds\": \"\", \"options\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getSharedFileMetadataBatch\"\nquerystring = {\"accessToken\": \"\", \"fileIds\": \"\", \"options\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSharedFileMetadata",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getSharedFileMetadata",
            "description": "Returns shared file metadata.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "fileId",
                    "type": "STRING",
                    "description": " The file to query.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "options",
                    "type": "LIST",
                    "description": "A list of `FileAction`s corresponding to `FilePermission`s that should appear in the response's SharedFileMetadata.permissions field describing the actions the authenticated user can perform on the file.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getSharedFileMetadata\"\nquerystring = {\"accessToken\": \"\", \"fileId\": \"\", \"options\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getSharedFileMetadata\"\nquerystring = {\"accessToken\": \"\", \"fileId\": \"\", \"options\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSharedFolderMembers",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getSharedFolderMembers",
            "description": "Returns shared folder membership by its folder ID.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "folderId",
                    "type": "STRING",
                    "description": "The folder for which you want to see members.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Number of members to return max per query. The default for this field is 1000.",
                    "default": ""
                },
                {
                    "name": "actions",
                    "type": "LIST",
                    "description": "The actions for which to return permissions on a member.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getSharedFolderMembers\"\nquerystring = {\"folderId\": \"\", \"limit\": \"\", \"accessToken\": \"\", \"actions\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getSharedFolderMembers\"\nquerystring = {\"folderId\": \"\", \"limit\": \"\", \"accessToken\": \"\", \"actions\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSharedLinkFile",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getSharedLinkFile",
            "description": "Download the shared link's file from a user's Dropbox.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "linkUrl",
                    "type": "STRING",
                    "description": "URL of the shared link.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "linkPassword",
                    "type": "STRING",
                    "description": "If the shared link has a password, this parameter can be used. ",
                    "default": ""
                },
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "If the shared link is to a folder, this parameter can be used to retrieve the metadata for a specific file or sub-folder in this folder. A relative path should be used.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getSharedLinkFile\"\nquerystring = {\"linkUrl\": \"\", \"linkPassword\": \"\", \"accessToken\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getSharedLinkFile\"\nquerystring = {\"linkUrl\": \"\", \"linkPassword\": \"\", \"accessToken\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSharedLinkMetadata",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getSharedLinkMetadata",
            "description": "Get the shared link's metadata.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "linkUrl",
                    "type": "STRING",
                    "description": "URL of the shared link.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "path",
                    "type": "STRING",
                    "description": " If the shared link is to a folder, this parameter can be used to retrieve the metadata for a specific file or sub-folder in this folder. A relative path should be used. ",
                    "default": ""
                },
                {
                    "name": "linkPassword",
                    "type": "STRING",
                    "description": "If the shared link has a password, this parameter can be used. ",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getSharedLinkMetadata\"\nquerystring = {\"accessToken\": \"\", \"path\": \"\", \"linkPassword\": \"\", \"linkUrl\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getSharedLinkMetadata\"\nquerystring = {\"accessToken\": \"\", \"path\": \"\", \"linkPassword\": \"\", \"linkUrl\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleFolderMetadata",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getSingleFolderMetadata",
            "description": "Returns shared folder metadata by its folder ID.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "folderId",
                    "type": "STRING",
                    "description": "The ID for the shared folder.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "options",
                    "type": "LIST",
                    "description": " A list of `FolderAction`s corresponding to `FolderPermission`s that should appear in the response's SharedFolderMetadata.permissions field describing the actions the authenticated user can perform on the folder.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getSingleFolderMetadata\"\nquerystring = {\"folderId\": \"\", \"accessToken\": \"\", \"options\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getSingleFolderMetadata\"\nquerystring = {\"folderId\": \"\", \"accessToken\": \"\", \"options\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleUserAccount",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getSingleUserAccount",
            "description": "Get information about a user's account.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "ID of the user",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getSingleUserAccount\"\nquerystring = {\"userId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getSingleUserAccount\"\nquerystring = {\"userId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserAccounts",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getUserAccounts",
            "description": "Get information about a users' accounts.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "userIds",
                    "type": "LIST",
                    "description": "IDs of the users",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getUserAccounts\"\nquerystring = {\"accessToken\": \"\", \"userIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getUserAccounts\"\nquerystring = {\"accessToken\": \"\", \"userIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserMountableFolders",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getUserMountableFolders",
            "description": "Return the list of all shared folders the current user can mount or unmount.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Number of members to return max per query. The default for this field is 1000.",
                    "default": ""
                },
                {
                    "name": "actions",
                    "type": "LIST",
                    "description": "A list of `FolderAction`s corresponding to `FolderPermission`s that should appear in the response's SharedFolderMetadata.permissions field describing the actions the authenticated user can perform on the folder.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getUserMountableFolders\"\nquerystring = {\"accessToken\": \"\", \"limit\": \"\", \"actions\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getUserMountableFolders\"\nquerystring = {\"accessToken\": \"\", \"limit\": \"\", \"actions\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserSharedFiles",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getUserSharedFiles",
            "description": "Returns a list of all files shared with current user.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Number of members to return max per query. The default for this field is 100.",
                    "default": ""
                },
                {
                    "name": "actions",
                    "type": "LIST",
                    "description": "A list of `FileAction`s corresponding to `FilePermission`s that should appear in the response's SharedFileMetadata.permissions field describing the actions the authenticated user can perform on the file.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getUserSharedFiles\"\nquerystring = {\"limit\": \"\", \"accessToken\": \"\", \"actions\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getUserSharedFiles\"\nquerystring = {\"limit\": \"\", \"accessToken\": \"\", \"actions\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getUserSharedFolders",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getUserSharedFolders",
            "description": "Return the list of all shared folders the current user has access to.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The maximum number of results to return per request. The default for this field is 1000.",
                    "default": ""
                },
                {
                    "name": "actionsList",
                    "type": "LIST",
                    "description": "A list of `FolderAction`s corresponding to `FolderPermission`s that should appear in the response's SharedFolderMetadata.permissions field describing the actions the authenticated user can perform on the folder.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getUserSharedFolders\"\nquerystring = {\"limit\": \"\", \"accessToken\": \"\", \"actionsList\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getUserSharedFolders\"\nquerystring = {\"limit\": \"\", \"accessToken\": \"\", \"actionsList\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getVisitedDocUsers",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/getVisitedDocUsers",
            "description": "Lists all users who visited the Paper doc or users with explicit access. This call excludes users who have been removed. ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "documentId",
                    "type": "STRING",
                    "description": "Id of the document",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Size limit per batch. The maximum number of users that can be retrieved per batch is 1000. Higher value results in invalid arguments error. The default for this field is 1000.",
                    "default": ""
                },
                {
                    "name": "filterBy",
                    "type": "SELECT",
                    "description": " Specify this attribute if you want to obtain users that have already accessed the Paper doc. Possible values: shared(default), visited",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getVisitedDocUsers\"\nquerystring = {\"accessToken\": \"\", \"limit\": \"\", \"filterBy\": \"\", \"documentId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/getVisitedDocUsers\"\nquerystring = {\"accessToken\": \"\", \"limit\": \"\", \"filterBy\": \"\", \"documentId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "marksDocAsDeleted",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/marksDocAsDeleted",
            "description": "Marks the given Paper doc as deleted. This operation is non-destructive and the doc can be revived by the owner.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "documentId",
                    "type": "STRING",
                    "description": "Id of the document",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/marksDocAsDeleted\"\nquerystring = {\"documentId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/marksDocAsDeleted\"\nquerystring = {\"documentId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "mountFolder",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/mountFolder",
            "description": "The current user mounts the designated folder.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "folderId",
                    "type": "STRING",
                    "description": "ID of the folder",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/mountFolder\"\nquerystring = {\"accessToken\": \"\", \"folderId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/mountFolder\"\nquerystring = {\"accessToken\": \"\", \"folderId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "move",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/move",
            "description": "Move a file or folder to a different location in the user's Dropbox. If the source path is a folder all its contents will be moved.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "fromPath",
                    "type": "STRING",
                    "description": "Path in the user's Dropbox to be moved",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "toPath",
                    "type": "STRING",
                    "description": "Path in the user's Dropbox that is the destination.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "autoRename",
                    "type": "SELECT",
                    "description": "If there's a conflict, have the Dropbox server try to autorename the file to avoid the conflict. The default for this field is False.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/move\"\nquerystring = {\"autoRename\": \"\", \"fromPath\": \"\", \"accessToken\": \"\", \"toPath\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/move\"\nquerystring = {\"autoRename\": \"\", \"fromPath\": \"\", \"accessToken\": \"\", \"toPath\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "moveBatch",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/moveBatch",
            "description": "Move multiple files or folders to different locations at once in the user's Dropbox.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "entries",
                    "type": "LIST",
                    "description": "List of entries to be moved. Example: [{\"from_path\":\"/123/sample.json\", \"to_path\": \"/321/sample.json\"}]",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "autoRename",
                    "type": "SELECT",
                    "description": "If there's a conflict, have the Dropbox server try to autorename the file to avoid the conflict. The default for this field is False.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/moveBatch\"\nquerystring = {\"accessToken\": \"\", \"autoRename\": \"\", \"entries\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/moveBatch\"\nquerystring = {\"accessToken\": \"\", \"autoRename\": \"\", \"entries\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "paginateDocInvitedUsers",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateDocInvitedUsers",
            "description": "Once a cursor has been retrieved from getDocInvitedUsers, use this to paginate through all users on the Paper folder.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "he cursor obtained from getDocInvitedUsers",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "documentId",
                    "type": "STRING",
                    "description": "Id of the document",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateDocInvitedUsers\"\nquerystring = {\"cursor\": \"\", \"accessToken\": \"\", \"documentId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateDocInvitedUsers\"\nquerystring = {\"cursor\": \"\", \"accessToken\": \"\", \"documentId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "paginateDocs",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateDocs",
            "description": "Once a cursor has been retrieved from getDocs, use this to paginate through all Paper doc.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "The cursor obtained from getDocs",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateDocs\"\nquerystring = {\"cursor\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateDocs\"\nquerystring = {\"cursor\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "paginateFileInvitedUsers",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateFileInvitedUsers",
            "description": "Once a cursor has been retrieved from getFileInvitedUsers or getFilesInvitedUsers, use this to paginate through all shared file members.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "The cursor returned by your last call",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateFileInvitedUsers\"\nquerystring = {\"accessToken\": \"\", \"cursor\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateFileInvitedUsers\"\nquerystring = {\"accessToken\": \"\", \"cursor\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "paginateFolderContents",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateFolderContents",
            "description": "Once a cursor has been retrieved from getFolderContents, use this to paginate through all files and retrieve updates to the folder, following the same rules as documented for getFolderContents.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "The cursor returned by your last call to getFolderContents or paginateFolderContents",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateFolderContents\"\nquerystring = {\"cursor\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateFolderContents\"\nquerystring = {\"cursor\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "paginateSharedFolderMembers",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateSharedFolderMembers",
            "description": "Once a cursor has been retrieved from getSharedFolderMembers, use this to paginate through all shared folder members.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "The cursor returned by your last call",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateSharedFolderMembers\"\nquerystring = {\"accessToken\": \"\", \"cursor\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateSharedFolderMembers\"\nquerystring = {\"accessToken\": \"\", \"cursor\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "paginateUserMountableFolders",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateUserMountableFolders",
            "description": "Once a cursor has been retrieved from getUserMountableFolders, use this to paginate through all mountable folders.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "The cursor returned by your last call",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateUserMountableFolders\"\nquerystring = {\"accessToken\": \"\", \"cursor\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateUserMountableFolders\"\nquerystring = {\"accessToken\": \"\", \"cursor\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "paginateUserSharedFiles",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateUserSharedFiles",
            "description": "Get more results with a cursor from getUserSharedFiles",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "The cursor returned by your last call",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateUserSharedFiles\"\nquerystring = {\"cursor\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateUserSharedFiles\"\nquerystring = {\"cursor\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "paginateUserSharedFolders",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateUserSharedFolders",
            "description": "Once a cursor has been retrieved from getUserSharedFolders, use this to paginate through all shared folders.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "The cursor returned by your last call",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateUserSharedFolders\"\nquerystring = {\"cursor\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateUserSharedFolders\"\nquerystring = {\"cursor\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "paginateVisitedUsersDoc",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateVisitedUsersDoc",
            "description": "Once a cursor has been retrieved from getVisitedDocUsers, use this to paginate through all users on the Paper doc.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "documentId",
                    "type": "STRING",
                    "description": "Id of the document",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": " The cursor obtained from getVisitedDocUsers",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateVisitedUsersDoc\"\nquerystring = {\"documentId\": \"\", \"accessToken\": \"\", \"cursor\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/paginateVisitedUsersDoc\"\nquerystring = {\"documentId\": \"\", \"accessToken\": \"\", \"cursor\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "unshareFile",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/unshareFile",
            "description": "Remove all members from this file. Does not remove inherited members.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "fileId",
                    "type": "STRING",
                    "description": "ID of the file",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/unshareFile\"\nquerystring = {\"fileId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/unshareFile\"\nquerystring = {\"fileId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "relinquishFileMembership",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/relinquishFileMembership",
            "description": "The current user relinquishes their membership in the designated file. Note that the current user may still have inherited access to this file through the parent folder.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "fileId",
                    "type": "STRING",
                    "description": "ID of the file",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/relinquishFileMembership\"\nquerystring = {\"accessToken\": \"\", \"fileId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/relinquishFileMembership\"\nquerystring = {\"accessToken\": \"\", \"fileId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "relinquishFolderMembership",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/relinquishFolderMembership",
            "description": "The current user relinquishes their membership in the designated folder.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "folderId",
                    "type": "STRING",
                    "description": "ID of the folder",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "leaveCopy",
                    "type": "SELECT",
                    "description": "Keep a copy of the folder's contents upon relinquishing membership. The default for this field is False.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/relinquishFolderMembership\"\nquerystring = {\"folderId\": \"\", \"leaveCopy\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/relinquishFolderMembership\"\nquerystring = {\"folderId\": \"\", \"leaveCopy\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "removeFileMember",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/removeFileMember",
            "description": "Removes a specified member from the file.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "fileId",
                    "type": "STRING",
                    "description": "Id of the file",
                    "default": ""
                },
                {
                    "name": "member",
                    "type": "JSON",
                    "description": " Member to remove from this file. Note that even if an email is specified, it may result in the removal of a user (not an invitee) if the user's main account corresponds to that email address. Example: {\".tag\": \"email\",\"email\": \"justin@example.com\"}",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/removeFileMember\"\nquerystring = {\"fileId\": \"\", \"member\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/removeFileMember\"\nquerystring = {\"fileId\": \"\", \"member\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "removeFolderMember",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/removeFolderMember",
            "description": "Removes a specified member from the folder.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "folderId",
                    "type": "STRING",
                    "description": "Id of the file",
                    "default": ""
                },
                {
                    "name": "leaveCopy",
                    "type": "SELECT",
                    "description": "If true, the removed user will keep their copy of the folder after it's unshared, assuming it was mounted. Otherwise, it will be removed from their Dropbox. Also, this must be set to false when kicking a group.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "member",
                    "type": "JSON",
                    "description": " Member to remove from this file. Note that even if an email is specified, it may result in the removal of a user (not an invitee) if the user's main account corresponds to that email address. Example: {\".tag\": \"email\",\"email\": \"justin@example.com\"}",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/removeFolderMember\"\nquerystring = {\"folderId\": \"\", \"leaveCopy\": \"\", \"accessToken\": \"\", \"member\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/removeFolderMember\"\nquerystring = {\"folderId\": \"\", \"leaveCopy\": \"\", \"accessToken\": \"\", \"member\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "restoreFileToRevision",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/restoreFileToRevision",
            "description": "Restore a file to a specific revision.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "filePath",
                    "type": "STRING",
                    "description": "Path of the file in the user's Dropbox to restore.",
                    "default": ""
                },
                {
                    "name": "revisionId",
                    "type": "STRING",
                    "description": "Id of the revision",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/restoreFileToRevision\"\nquerystring = {\"filePath\": \"\", \"revisionId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/restoreFileToRevision\"\nquerystring = {\"filePath\": \"\", \"revisionId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "revokeAccessToken",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/revokeAccessToken",
            "description": "Revokes user access tokens",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token to revoke",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/revokeAccessToken\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/revokeAccessToken\"\nquerystring = {\"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "revokeSharedLink",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/revokeSharedLink",
            "description": "Revoke a shared link.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "linkUrl",
                    "type": "STRING",
                    "description": "URL of the shared link.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/revokeSharedLink\"\nquerystring = {\"accessToken\": \"\", \"linkUrl\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/revokeSharedLink\"\nquerystring = {\"accessToken\": \"\", \"linkUrl\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "saveCopyReference",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/saveCopyReference",
            "description": "Save a copy reference returned by getCopyReference to the user's Dropbox.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "destinationPath",
                    "type": "STRING",
                    "description": "Path in the user's Dropbox that is the destination.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "copyReference",
                    "type": "STRING",
                    "description": "A copy reference returned by getCopyReference.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/saveCopyReference\"\nquerystring = {\"destinationPath\": \"\", \"accessToken\": \"\", \"copyReference\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/saveCopyReference\"\nquerystring = {\"destinationPath\": \"\", \"accessToken\": \"\", \"copyReference\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "saveFileURL",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/saveFileURL",
            "description": "Save a specified URL into a file in user's Dropbox. If the given path already exists, the file will be renamed to avoid the conflict (e.g. myfile (1).txt).",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "filePath",
                    "type": "STRING",
                    "description": "Path of the file in the user's Dropbox to restore.",
                    "default": ""
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "The URL to be saved.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/saveFileURL\"\nquerystring = {\"accessToken\": \"\", \"filePath\": \"\", \"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/saveFileURL\"\nquerystring = {\"accessToken\": \"\", \"filePath\": \"\", \"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "search",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/search",
            "description": "Searches for files and folders.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "searchQuery",
                    "type": "STRING",
                    "description": "The string to search for. The search string is split on spaces into multiple tokens. For file name searching, the last token is used for prefix matching (i.e. \"bat c\" matches \"bat cave\" but not \"batman car\").",
                    "default": ""
                },
                {
                    "name": "searchPath",
                    "type": "STRING",
                    "description": "The path in the user's Dropbox to search. Should probably be a folder.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "maxResults",
                    "type": "NUMBER",
                    "description": "The maximum number of search results to return. The default for this field is 100.",
                    "default": ""
                },
                {
                    "name": "searchMode",
                    "type": "SELECT",
                    "description": "The search mode (filename, filename_and_content, or deleted_filename). Note that searching file content is only available for Dropbox Business accounts. The default for this union is filename.",
                    "default": ""
                },
                {
                    "name": "startFrom",
                    "type": "NUMBER",
                    "description": "The starting index within the search results (used for paging). The default for this field is 0.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/search\"\nquerystring = {\"accessToken\": \"\", \"maxResults\": \"\", \"searchQuery\": \"\", \"searchPath\": \"\", \"searchMode\": \"\", \"startFrom\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/search\"\nquerystring = {\"accessToken\": \"\", \"maxResults\": \"\", \"searchQuery\": \"\", \"searchPath\": \"\", \"searchMode\": \"\", \"startFrom\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "setDocSharingPolicy",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/setDocSharingPolicy",
            "description": "Sets the default sharing policy for the given Paper doc.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "teamSharingPolicy",
                    "type": "SELECT",
                    "description": "This value applies to the team members. Possible values: people_with_link_can_edit, people_with_link_can_view_and_comment, invite_only",
                    "default": ""
                },
                {
                    "name": "documentId",
                    "type": "STRING",
                    "description": "Id of the document",
                    "default": ""
                },
                {
                    "name": "publicSharingPolicy",
                    "type": "SELECT",
                    "description": "This value applies to the non-team members. Possible values: people_with_link_can_edit, people_with_link_can_view_and_comment, invite_only, disabled",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/setDocSharingPolicy\"\nquerystring = {\"teamSharingPolicy\": \"\", \"documentId\": \"\", \"publicSharingPolicy\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/setDocSharingPolicy\"\nquerystring = {\"teamSharingPolicy\": \"\", \"documentId\": \"\", \"publicSharingPolicy\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "shareFolder",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/shareFolder",
            "description": "Share a folder with collaborators.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "folderPath",
                    "type": "STRING",
                    "description": "The path to the folder to share. If it does not exist, then a new one is created.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "aclUpdatePolicy",
                    "type": "SELECT",
                    "description": "Who can add and remove members of this shared folder.  Possible values: owner, editors",
                    "default": ""
                },
                {
                    "name": "forceAsync",
                    "type": "SELECT",
                    "description": "Whether to force the share to happen asynchronously. The default for this field is False.",
                    "default": ""
                },
                {
                    "name": "memberPolicy",
                    "type": "SELECT",
                    "description": "Who can be a member of this shared folder. Only applicable if the current user is on a team. Possible values: team, anyone",
                    "default": ""
                },
                {
                    "name": "sharedLinkPolicy",
                    "type": "SELECT",
                    "description": "The policy to apply to shared links created for content inside this shared folder. The current user must be on a team to set this policy to SharedLinkPolicy.members. Possible values: anyone, team, members",
                    "default": ""
                },
                {
                    "name": "linkAudience",
                    "type": "SELECT",
                    "description": "The type of audience on the link for this file. Possible values: public, team, members",
                    "default": ""
                },
                {
                    "name": "linkPassword",
                    "type": "SELECT",
                    "description": "The password for the link. Possible values: remove_password, set_password",
                    "default": ""
                },
                {
                    "name": "linkExpiry",
                    "type": "JSON",
                    "description": "An expiry timestamp to set on a link. Possible values: remove_expiry, set_expiry Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\") Set a new expiry or change an existing expiry.",
                    "default": ""
                },
                {
                    "name": "accessLevel",
                    "type": "SELECT",
                    "description": "The access level on the link for this file. Currently, it only accepts 'viewer' and 'viewer_no_comment'.",
                    "default": ""
                },
                {
                    "name": "viewerInfoPolicy",
                    "type": "SELECT",
                    "description": "Who can enable/disable viewer info for this shared folder.Possible values: enabled, disabled",
                    "default": ""
                },
                {
                    "name": "actions",
                    "type": "LIST",
                    "description": "A list of `FolderAction`s corresponding to `FolderPermission`s that should appear in the response's SharedFolderMetadata.permissions field describing the actions the authenticated user can perform on the folder.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/shareFolder\"\nquerystring = {\"aclUpdatePolicy\": \"\", \"folderPath\": \"\", \"forceAsync\": \"\", \"memberPolicy\": \"\", \"sharedLinkPolicy\": \"\", \"accessToken\": \"\", \"linkAudience\": \"\", \"linkPassword\": \"\", \"linkExpiry\": \"\", \"accessLevel\": \"\", \"viewerInfoPolicy\": \"\", \"actions\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/shareFolder\"\nquerystring = {\"aclUpdatePolicy\": \"\", \"folderPath\": \"\", \"forceAsync\": \"\", \"memberPolicy\": \"\", \"sharedLinkPolicy\": \"\", \"accessToken\": \"\", \"linkAudience\": \"\", \"linkPassword\": \"\", \"linkExpiry\": \"\", \"accessLevel\": \"\", \"viewerInfoPolicy\": \"\", \"actions\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "transferFolderOwnership",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/transferFolderOwnership",
            "description": "Transfer ownership of a shared folder to a member of the shared folder.User must have AccessLevel.owner access to the shared folder to perform a transfer.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "folderId",
                    "type": "STRING",
                    "description": "ID of the folder",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "ID of the user",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/transferFolderOwnership\"\nquerystring = {\"folderId\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/transferFolderOwnership\"\nquerystring = {\"folderId\": \"\", \"accessToken\": \"\", \"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "unmountFolder",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/unmountFolder",
            "description": "The current user unmounts the designated folder.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "folderId",
                    "type": "STRING",
                    "description": "ID of the folder",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/unmountFolder\"\nquerystring = {\"folderId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/unmountFolder\"\nquerystring = {\"folderId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "unshareFolder",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/unshareFolder",
            "description": "Allows a shared folder owner to unshare the folder.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "folderId",
                    "type": "STRING",
                    "description": "ID of the folder",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "leaveCopy",
                    "type": "SELECT",
                    "description": "Keep a copy of the folder's contents upon relinquishing membership. The default for this field is False.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/unshareFolder\"\nquerystring = {\"folderId\": \"\", \"leaveCopy\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/unshareFolder\"\nquerystring = {\"folderId\": \"\", \"leaveCopy\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateFileMemberAccess",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/updateFileMemberAccess",
            "description": "Changes a member's access on a shared file.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "fileId",
                    "type": "STRING",
                    "description": "Id of the file",
                    "default": ""
                },
                {
                    "name": "accessLevel",
                    "type": "SELECT",
                    "description": "Defines the access levels for collaborators. Currently only available: viewer",
                    "default": ""
                },
                {
                    "name": "memberId",
                    "type": "STRING",
                    "description": "Dropbox ID of the user",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/updateFileMemberAccess\"\nquerystring = {\"fileId\": \"\", \"accessLevel\": \"\", \"memberId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/updateFileMemberAccess\"\nquerystring = {\"fileId\": \"\", \"accessLevel\": \"\", \"memberId\": \"\", \"accessToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateFolderMemberAccess",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/updateFolderMemberAccess",
            "description": "Changes a member's access on a shared folder.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "member",
                    "type": "JSON",
                    "description": "Member to remove from this file. Note that even if an email is specified, it may result in the removal of a user (not an invitee) if the user's main account corresponds to that email address. Example: {\".tag\": \"email\",\"email\": \"justin@example.com\"}",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "folderId",
                    "type": "STRING",
                    "description": "Id of the folder",
                    "default": ""
                },
                {
                    "name": "accessLevel",
                    "type": "SELECT",
                    "description": "Defines the access levels for collaborators. Currently only available: viewer, editor",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/updateFolderMemberAccess\"\nquerystring = {\"member\": \"\", \"accessToken\": \"\", \"folderId\": \"\", \"accessLevel\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/updateFolderMemberAccess\"\nquerystring = {\"member\": \"\", \"accessToken\": \"\", \"folderId\": \"\", \"accessLevel\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateFolderPolicy",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/updateFolderPolicy",
            "description": "Update the sharing policies for a shared folder.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "folderId",
                    "type": "STRING",
                    "description": "The ID of the folder",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "forceAsync",
                    "type": "SELECT",
                    "description": "Whether to force the share to happen asynchronously. The default for this field is False.",
                    "default": ""
                },
                {
                    "name": "aclUpdatePolicy",
                    "type": "SELECT",
                    "description": "Who can add and remove members of this shared folder.  Possible values: owner, editors",
                    "default": ""
                },
                {
                    "name": "sharedLinkPolicy",
                    "type": "SELECT",
                    "description": "The policy to apply to shared links created for content inside this shared folder. The current user must be on a team to set this policy to SharedLinkPolicy.members. Possible values: anyone, team, members",
                    "default": ""
                },
                {
                    "name": "memberPolicy",
                    "type": "SELECT",
                    "description": "Who can be a member of this shared folder. Only applicable if the current user is on a team. Possible values: team, anyone",
                    "default": ""
                },
                {
                    "name": "linkPassword",
                    "type": "SELECT",
                    "description": "The password for the link. Possible values: remove_password, set_password",
                    "default": ""
                },
                {
                    "name": "linkAudience",
                    "type": "SELECT",
                    "description": "The type of audience on the link for this file. Possible values: public, team, members",
                    "default": ""
                },
                {
                    "name": "accessLevel",
                    "type": "SELECT",
                    "description": "The access level on the link for this file. Currently, it only accepts 'viewer' and 'viewer_no_comment'.",
                    "default": ""
                },
                {
                    "name": "viewerInfoPolicy",
                    "type": "SELECT",
                    "description": "Who can enable/disable viewer info for this shared folder.Possible values: enabled, disabled",
                    "default": ""
                },
                {
                    "name": "linkExpiry",
                    "type": "JSON",
                    "description": "An expiry timestamp to set on a link. Possible values: remove_expiry, set_expiry Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\") Set a new expiry or change an existing expiry.",
                    "default": ""
                },
                {
                    "name": "actions",
                    "type": "LIST",
                    "description": "A list of `FolderAction`s corresponding to `FolderPermission`s that should appear in the response's SharedFolderMetadata.permissions field describing the actions the authenticated user can perform on the folder.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/updateFolderPolicy\"\nquerystring = {\"forceAsync\": \"\", \"aclUpdatePolicy\": \"\", \"folderId\": \"\", \"sharedLinkPolicy\": \"\", \"accessToken\": \"\", \"memberPolicy\": \"\", \"linkPassword\": \"\", \"linkAudience\": \"\", \"accessLevel\": \"\", \"viewerInfoPolicy\": \"\", \"linkExpiry\": \"\", \"actions\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/updateFolderPolicy\"\nquerystring = {\"forceAsync\": \"\", \"aclUpdatePolicy\": \"\", \"folderId\": \"\", \"sharedLinkPolicy\": \"\", \"accessToken\": \"\", \"memberPolicy\": \"\", \"linkPassword\": \"\", \"linkAudience\": \"\", \"accessLevel\": \"\", \"viewerInfoPolicy\": \"\", \"linkExpiry\": \"\", \"actions\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "updateSharedLinkSettings",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/updateSharedLinkSettings",
            "description": "Create a shared link with custom settings. ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "requestedVisibility",
                    "type": "SELECT",
                    "description": "The requested access for this shared link. Possible values: public, team_only",
                    "default": ""
                },
                {
                    "name": "linkUrl",
                    "type": "STRING",
                    "description": "URL of the shared link to change its settings",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/updateSharedLinkSettings\"\nquerystring = {\"accessToken\": \"\", \"requestedVisibility\": \"\", \"linkUrl\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/updateSharedLinkSettings\"\nquerystring = {\"accessToken\": \"\", \"requestedVisibility\": \"\", \"linkUrl\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "uploadSingleFile",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/uploadSingleFile",
            "description": "Create a new file with the contents provided in the request.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "filePath",
                    "type": "STRING",
                    "description": "Path in the user's Dropbox to save the file.",
                    "default": ""
                },
                {
                    "name": "accessToken",
                    "type": "STRING",
                    "description": "Access token",
                    "default": ""
                },
                {
                    "name": "file",
                    "type": "FILE",
                    "description": "The file to upload",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "uploadMode",
                    "type": "SELECT",
                    "description": "Selects what to do if the file already exists. The default for this union is add.",
                    "default": ""
                },
                {
                    "name": "clientModified",
                    "type": "DATEPICKER",
                    "description": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\") The value to store as the client_modified timestamp. ",
                    "default": ""
                },
                {
                    "name": "mute",
                    "type": "SELECT",
                    "description": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False.",
                    "default": ""
                },
                {
                    "name": "autoRename",
                    "type": "SELECT",
                    "description": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/uploadSingleFile\"\nquerystring = {\"uploadMode\": \"\", \"filePath\": \"\", \"clientModified\": \"\", \"accessToken\": \"\", \"file\": \"\", \"mute\": \"\", \"autoRename\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/uploadSingleFile\"\nquerystring = {\"uploadMode\": \"\", \"filePath\": \"\", \"clientModified\": \"\", \"accessToken\": \"\", \"file\": \"\", \"mute\": \"\", \"autoRename\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "webhookEvent",
            "url": "https://Dropboxstefan-skliarovV1.p.rapidapi.com/webhookEvent",
            "description": "This method is called every time a Dropbox webhook event occurs",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "Token sent on each message",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/webhookEvent\"\nquerystring = {\"token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Dropboxstefan-skliarovV1.p.rapidapi.com/webhookEvent\"\nquerystring = {\"token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Dropboxstefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}