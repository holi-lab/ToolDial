{
    "product_id": "api_6ca4f6c6-fabb-4d77-b522-24c4f3bebd6a",
    "tool_description": "By clicking on the \"I accept\" checkbox you (\"Customer\") are agreeing that you have read and understand the terms and conditions of this agreement, you represent and warrant that you\u2019re authorised to bind customer, and you agree to be legally responsible for each and every term and condition of this legal agreement between you and Tatum Blockchain Services s.r.o., a company incorporated in the Czech Republic (registration number 07176856) having its registered office at Vesel\u00e1 163/12, Brno-m\u011bsto, 602 00 Brno (the \"Provider\").  AGREEMENT 1. Term 1.1 This Agreement shall come into force upon the Effective Date (clicking \"I accept\") and shall continue in force indefinitely.  2. Hosted Services 2.1 The Provider hereby grants to the Customer a worldwide, non-exclusive right to use the services specified in the order form (\"Order Form\") in accordance with the Documentation during the Term.  2.2 The Provider shall use reasonable endeavours to maintain the availability of the Hosted Services to the Customer at the gateway between the public internet and the network of the hosting services provider for the Hosted Services, but does not guarantee 100% availability.  2.3 For the avoidance of doubt, downtime caused directly or indirectly by any of the following shall not be considered a breach of this Agreement: (a) a Force Majeure Event; (b) a fault or failure of the internet or any public telecommunications network; (c) a fault or failure of the Customer's computer systems or networks; (d) any breach by the Customer of this Agreement; or (e) scheduled maintenance.  2.4 The Customer must not use the Hosted Services: (a) in any way that is unlawful, illegal, fraudulent or harmful; or (b) in connection with any unlawful, illegal, fraudulent or harmful purpose or activity.  2.5 For the avoidance of doubt, the Customer has no right to access the software code (including object code, intermediate code and source code) of the Platform, either during or after the Term.  3. Charges 3.1 The Customer shall pay the Charges to the Provider in accordance with Order Form. The Provider may suspend access to the Hosted Services if any amount due to be paid by the Customer to the Provider under this Agreement is overdue.  3.2 All amounts stated in or in relation to this Agreement are, unless the context requires otherwise, stated exclusive of any applicable value added taxes, which will be added to those amounts and payable by the Customer to the Provider.  3.3 Once the Customer exceeds the usage capacity, as set forth in the Order Form, Customer will no longer be able to access the Hosted Service, unless the customer pays fees for the excess usage or the next paid calendar month.  4. Payments 4.1 The Charges must in all cases be paid before the commencement of the period to which they relate.  4.2 All Fees paid are non-refundable (except as otherwise expressly set forth in an Order Form) and not subject to set-off.  5. Customer Data 5.1 All customer data will be deleted 30 days after suspending access to the Hosted Services.  6. Support Services 6.1 Support Services are not provided unless specified in Order Form.  6.2 Support Services are not provided under time-based SLA (Service Level Agreement) unless specified Order Form.  7. Non-solicitation and cooperation 7.1 Until one (1) year after termination of this Agreement, Customer will not encourage or solicit any employee or consultant of the Provider to leave the Provider for any reason.  7.2 The parties shall work together in good faith to issue at least one mutually agreed upon press release within ninety (90) days of the Effective Date (such agreement not to be unreasonably withheld or conditioned). In addition, Customer will reasonably cooperate with the Provider for case studies and serve as a reference for potential Provider\u2019s customers. The provider may use general summary data for marketing purposes.  8. No assignment of Intellectual Property Rights 8.1 Nothing in this Agreement shall operate to assign or transfer any Intellectual Property Rights from the Provider to the Customer, or from the Customer to the Provider.  9. Confidentiality obligations 9.1 The Provider and Customer (\"Parties\") must: (a) keep Confidential Information strictly confidential; (b) not disclose Confidential Information to any third party without the other party prior written consent; (c) act in good faith at all times in relation to the Confidential Information;  9.2 The Parties may disclose Confidential Information to the other party officers, employees, professional advisers, insurers, agents and subcontractors who are bound by a written agreement or professional obligation to protect the confidentiality of Confidential Information.  9.3 This Clause 9 imposes no obligations upon the party with respect to Confidential Information that: (a) is known to the party before disclosure under this Agreement and is not subject to any other obligation of confidentiality; (b) is or becomes publicly known through no act or default of the party; or (c) is obtained by the party from a third party in circumstances where the party has no reason to believe that there has been a breach of an obligation of confidentiality.  9.4 The restrictions in this Clause 9 do not apply to the extent that any party Confidential Information is required to be disclosed by any law or regulation, by any judicial or governmental order or request, or pursuant to disclosure requirements relating to the listing of the stock of the party on any recognised stock exchange.  9.5 The provisions of this Clause 12 shall continue in force for a period of 5 years following the termination of this Agreement, at the end of which period they will cease to have effect.  10. Warranties 10.1 THE PROVIDER DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND NONINFRINGEMENT. THE PROVIDER DOES NOT MAKE ANY WARRANTY AS TO THE RESULTS THAT MAY BE OBTAINED FROM USE OF THE SERVICE.  10.2 The Provider do not take any responsibility and is not liable for any damage caused through the use of products or services in this Agreement, be it indirect, special, incidental or consequential damages (including but not limited to damages for loss of business, loss of profits, interruption or the like).  10.3 All of the parties' warranties and representations in respect of the subject matter of this Agreement are expressly set out in this Agreement. To the maximum extent permitted by applicable law, no other warranties or representations concerning the subject matter of this Agreement will be implied into this Agreement or any related contract.  11. Acknowledgements and warranty limitations 11.1 The Customer acknowledges that complex software is never wholly free from defects, errors and bugs; and subject to the other provisions of this Agreement, the Provider gives no warranty or representation that the Hosted Services will be wholly free from defects, errors and bugs.  11.2 The Customer acknowledges that complex software is never entirely free from security vulnerabilities; and subject to the other provisions of this Agreement, the Provider gives no warranty or representation that the Hosted Services will be entirely secure.  12. Limitations and exclusions of liability 12.1 Nothing in this Agreement will: (a)limit or exclude any liability for death or personal injury resulting from negligence; (b) limit or exclude any liability for fraud or fraudulent misrepresentation;  12.2 The liability of the Provider to the Customer under this Agreement in respect of any event or series of related events shall not exceed the greater of: (a) the total amount paid and payable by the Customer to the Provider under this Agreement in the 1 month period preceding the commencement of the event or events.  13. Force Majeure Event 13.1 If a Force Majeure Event gives rise to a failure or delay in either party performing any obligation under this Agreement (other than any obligation to make a payment), that obligation will be suspended for the duration of the Force Majeure Event.  14. Termination 14.1 Either party may terminate this Agreement by giving to the other party at least 30 days' written notice of termination.  14.2 Either party may terminate this Agreement immediately by giving written notice of termination to the other party if the other party commits a material breach of this Agreement.  15. Effects of termination 15.1 Upon the termination of this Agreement, all of the provisions of this Agreement shall cease to have effect, save that the following provisions of this Agreement shall survive and continue to have effect (in accordance with their express terms or otherwise indefinitely): Clauses 2, 2.5, 7, 9, 12, 15, and 16.  15.2 Except to the extent that this Agreement expressly provides otherwise, the termination of this Agreement shall not affect the accrued rights of either party.  16. General 16.1 No breach of any provision of this Agreement shall be waived except with the express written consent of the party not in breach.  16.2 If any provision of this Agreement is determined by any court or other competent authority to be unlawful and/or unenforceable, the other provisions of this Agreement will continue in effect. If any unlawful and/or unenforceable provision would be lawful or enforceable if part of it were deleted, that part will be deemed to be deleted, and the rest of the provision will continue in effect (unless that would contradict the clear intention of the parties, in which case the entirety of the relevant provision will be deemed to be deleted).  16.3 This Agreement may not be varied except by a written document signed by or on behalf of each of the parties.  16.4 This Agreement shall be governed by and construed in accordance with Czech law.  16.5 The courts of the Czech Republic shall have exclusive jurisdiction to adjudicate any dispute arising under or in connection with this Agreement.",
    "home_url": "https://rapidapi.com/tatum/api/tatum-blockchain-api-mainnet1/",
    "name": "Tatum Blockchain API Mainnet",
    "title": "Tatum Blockchain API Mainnet",
    "pricing": "FREEMIUM",
    "tool_name": "Tatum Blockchain API Mainnet",
    "score": null,
    "host": "tatum-blockchain-api-mainnet1.p.rapidapi.com",
    "api_list": [
        {
            "name": "EthBlockchainTransfer",
            "url": "https://tatum-blockchain-api-mainnet1.p.rapidapi.com/ethereum/v2/transaction",
            "description": "Send Ethereum or Tatum supported ERC20 token from account to account.</p><p>For security and privacy reasons, this method should be called from local instance of Tatum Middleware, see <a href=\"https://github.com/tatumio/tatum-middleware\">https://github.com/tatumio/tatum-middleware</a>.</p>",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "nonce",
                    "type": "NUMBER",
                    "description": "Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.",
                    "default": 0
                },
                {
                    "name": "fromPrivateKey",
                    "type": "STRING",
                    "description": "Private key of sender address. Either mnemonic and index, or privateKey must be present - depends on the type of account and xpub.",
                    "default": "string"
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "Blockchain address to send assets",
                    "default": "0x687422eEA2cB73B5d3e242bA5456b782919AFc85"
                },
                {
                    "name": "amount",
                    "type": "STRING",
                    "description": "Amount to be sent in Ether",
                    "default": 100000
                },
                {
                    "name": "fee",
                    "type": "STRING",
                    "description": "Custom defined fee. If not present, it will be calculated automatically.",
                    "default": "{\"parameter\":\"object\"}"
                },
                {
                    "name": "currency",
                    "type": "STRING",
                    "description": "Currency to transfer from Ethereum Blockchain Account.",
                    "default": "ETH"
                }
            ],
            "code": "import requests\n\nurl = \"https://tatum-blockchain-api-mainnet1.p.rapidapi.com/ethereum/v2/transaction\"\nquerystring = {\"nonce\": 0, \"fromPrivateKey\": \"string\", \"to\": \"0x687422eEA2cB73B5d3e242bA5456b782919AFc85\", \"amount\": 100000, \"fee\": \"{\\\"parameter\\\":\\\"object\\\"}\", \"currency\": \"ETH\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-mainnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://tatum-blockchain-api-mainnet1.p.rapidapi.com/ethereum/v2/transaction\"\nquerystring = {\"nonce\": 0, \"fromPrivateKey\": \"string\", \"to\": \"0x687422eEA2cB73B5d3e242bA5456b782919AFc85\", \"amount\": 100000, \"fee\": \"{\\\"parameter\\\":\\\"object\\\"}\", \"currency\": \"ETH\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-mainnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 400,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "BtcBroadcast",
            "url": "https://tatum-blockchain-api-mainnet1.p.rapidapi.com/bitcoin/v2/broadcast",
            "description": "<p>Broadcast signed transaction to Bitcoin blockchain.</p>",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "txData",
                    "type": "STRING",
                    "description": "Raw signed transaction to be published to network.",
                    "default": "62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D"
                }
            ],
            "code": "import requests\n\nurl = \"https://tatum-blockchain-api-mainnet1.p.rapidapi.com/bitcoin/v2/broadcast\"\nquerystring = {\"txData\": \"62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-mainnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://tatum-blockchain-api-mainnet1.p.rapidapi.com/bitcoin/v2/broadcast\"\nquerystring = {\"txData\": \"62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-mainnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 400,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "EthGenerateAddressPrivateKey",
            "url": "https://tatum-blockchain-api-mainnet1.p.rapidapi.com/ethereum/v2/wallet/priv",
            "description": "<p>Generate private key of address from mnemonic for given derivation path index. For security and privacy reasons, this method should be called from local instance of Tatum Middleware, see <a href=\"https://github.com/tatumio/tatum-middleware\">https://github.com/tatumio/tatum-middleware</a>.</p>",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "index",
                    "type": "NUMBER",
                    "description": "Derivation index of private key to generate.",
                    "default": 4
                },
                {
                    "name": "mnemonic",
                    "type": "STRING",
                    "description": "Mnemonic to generate private key from.",
                    "default": "urge pulp usage sister evidence arrest palm math please chief egg abuse"
                }
            ],
            "code": "import requests\n\nurl = \"https://tatum-blockchain-api-mainnet1.p.rapidapi.com/ethereum/v2/wallet/priv\"\nquerystring = {\"index\": 4, \"mnemonic\": \"urge pulp usage sister evidence arrest palm math please chief egg abuse\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-mainnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://tatum-blockchain-api-mainnet1.p.rapidapi.com/ethereum/v2/wallet/priv\"\nquerystring = {\"index\": 4, \"mnemonic\": \"urge pulp usage sister evidence arrest palm math please chief egg abuse\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-mainnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 400,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "BtcTransferBlockchain",
            "url": "https://tatum-blockchain-api-mainnet1.p.rapidapi.com/bitcoin/v2/transaction",
            "description": "<p>Send bitcoin from addresses to addresses. For security and privacy reasons, this method should be called from local instance of Tatum Middleware, see <a href=\"https://github.com/tatumio/tatum-middleware\">https://github.com/tatumio/tatum-middleware</a>.</p>",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "fromUTXO",
                    "type": "STRING",
                    "description": "Array of transaction hashes, index of UTXO in it and corresponding private keys. Use this option if you want to calculate amount to send manually. Either fromUTXO or fromAddress must be present.",
                    "default": "{\"parameter\":\"object\"}"
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "Array of addresses and values to send bitcoins to. Values must be set in BTC. Difference between from and to is transaction fee.",
                    "default": "{\"parameter\":\"object\"}"
                },
                {
                    "name": "fromAddress",
                    "type": "STRING",
                    "description": "Array of addresses and corresponding private keys. Tatum will automatically scan last 100 transactions for each address and will use all of the unspent values. We advise to use this option if you have 1 address per 1 transaction only.",
                    "default": "{\"parameter\":\"object\"}"
                }
            ],
            "code": "import requests\n\nurl = \"https://tatum-blockchain-api-mainnet1.p.rapidapi.com/bitcoin/v2/transaction\"\nquerystring = {\"fromUTXO\": \"{\\\"parameter\\\":\\\"object\\\"}\", \"to\": \"{\\\"parameter\\\":\\\"object\\\"}\", \"fromAddress\": \"{\\\"parameter\\\":\\\"object\\\"}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-mainnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://tatum-blockchain-api-mainnet1.p.rapidapi.com/bitcoin/v2/transaction\"\nquerystring = {\"fromUTXO\": \"{\\\"parameter\\\":\\\"object\\\"}\", \"to\": \"{\\\"parameter\\\":\\\"object\\\"}\", \"fromAddress\": \"{\\\"parameter\\\":\\\"object\\\"}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-mainnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 500,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "EthBroadcast",
            "url": "https://tatum-blockchain-api-mainnet1.p.rapidapi.com/ethereum/v2/broadcast",
            "description": "<p>Broadcast signed transaction to Ethereum blockchain.</p>",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "txData",
                    "type": "STRING",
                    "description": "Raw signed transaction to be published to network.",
                    "default": "62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D"
                }
            ],
            "code": "import requests\n\nurl = \"https://tatum-blockchain-api-mainnet1.p.rapidapi.com/ethereum/v2/broadcast\"\nquerystring = {\"txData\": \"62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-mainnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://tatum-blockchain-api-mainnet1.p.rapidapi.com/ethereum/v2/broadcast\"\nquerystring = {\"txData\": \"62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-mainnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 401,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "EthBlockchainTransferErc20",
            "url": "https://tatum-blockchain-api-mainnet1.p.rapidapi.com/ethereum/v2/erc20/transaction",
            "description": "<p>Transfer Ethereum ERC20 Smart Contract Tokens from account to account.</p><p>For security and privacy reasons, this method should be called from local instance of Tatum Middleware, see <a href=\"https://github.com/tatumio/tatum-middleware\">https://github.com/tatumio/tatum-middleware</a>.</p>",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "amount",
                    "type": "STRING",
                    "description": "Amount to be sent",
                    "default": 100000
                },
                {
                    "name": "nonce",
                    "type": "NUMBER",
                    "description": "Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.",
                    "default": 0
                },
                {
                    "name": "fee",
                    "type": "STRING",
                    "description": "Custom defined fee. If not present, it will be calculated automatically.",
                    "default": "{\"parameter\":\"object\"}"
                },
                {
                    "name": "contractAddress",
                    "type": "STRING",
                    "description": "address of ERC20 token",
                    "default": "0x687422eEA2cB73B5d3e242bA5456b782919AFc85"
                },
                {
                    "name": "fromPrivateKey",
                    "type": "STRING",
                    "description": "Private key of sender address. Either mnemonic and index, or privateKey must be present - depends on the type of account and xpub.",
                    "default": "string"
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "Blockchain address to send ERC20 token to",
                    "default": "0x687422eEA2cB73B5d3e242bA5456b782919AFc85"
                }
            ],
            "code": "import requests\n\nurl = \"https://tatum-blockchain-api-mainnet1.p.rapidapi.com/ethereum/v2/erc20/transaction\"\nquerystring = {\"amount\": 100000, \"nonce\": 0, \"fee\": \"{\\\"parameter\\\":\\\"object\\\"}\", \"contractAddress\": \"0x687422eEA2cB73B5d3e242bA5456b782919AFc85\", \"fromPrivateKey\": \"string\", \"to\": \"0x687422eEA2cB73B5d3e242bA5456b782919AFc85\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-mainnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://tatum-blockchain-api-mainnet1.p.rapidapi.com/ethereum/v2/erc20/transaction\"\nquerystring = {\"amount\": 100000, \"nonce\": 0, \"fee\": \"{\\\"parameter\\\":\\\"object\\\"}\", \"contractAddress\": \"0x687422eEA2cB73B5d3e242bA5456b782919AFc85\", \"fromPrivateKey\": \"string\", \"to\": \"0x687422eEA2cB73B5d3e242bA5456b782919AFc85\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-mainnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "EthDeployErc20Blockchain",
            "url": "https://tatum-blockchain-api-mainnet1.p.rapidapi.com/ethereum/v2/erc20/deploy",
            "description": "<p>Deploy Ethereum ERC20 Smart Contract. Whole supply will be transferred to defined address. For security and privacy reasons, this method should be called from local instance of Tatum Middleware, see <a href=\"https://github.com/tatumio/tatum-middleware\">https://github.com/tatumio/tatum-middleware</a>.</p>",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "fromPrivateKey",
                    "type": "STRING",
                    "description": "Private key of Ethereum account address, from which gas for deployment of ERC20 will be paid.",
                    "default": "string"
                },
                {
                    "name": "digits",
                    "type": "NUMBER",
                    "description": "Number of decimal points",
                    "default": 18
                },
                {
                    "name": "nonce",
                    "type": "NUMBER",
                    "description": "Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.",
                    "default": 0
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Symbol of the ERC20 token",
                    "default": "ERC_SYMBOL"
                },
                {
                    "name": "address",
                    "type": "STRING",
                    "description": "Address on Ethereum blockchain, which will be used as ERC20 deposit address. All ERC20 tokens will be transferred here.",
                    "default": "0xa0Ca9FF38Bad06eBe64f0fDfF279cAE35129F5C6"
                },
                {
                    "name": "supply",
                    "type": "STRING",
                    "description": "Max supply of ERC20 token",
                    "default": "10000000"
                },
                {
                    "name": "fee",
                    "type": "STRING",
                    "description": "Custom defined fee. If not present, it will be calculated automatically.",
                    "default": "{\"parameter\":\"object\"}"
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Name of the ERC20 token",
                    "default": "My ERC20"
                }
            ],
            "code": "import requests\n\nurl = \"https://tatum-blockchain-api-mainnet1.p.rapidapi.com/ethereum/v2/erc20/deploy\"\nquerystring = {\"fromPrivateKey\": \"string\", \"digits\": 18, \"nonce\": 0, \"symbol\": \"ERC_SYMBOL\", \"address\": \"0xa0Ca9FF38Bad06eBe64f0fDfF279cAE35129F5C6\", \"supply\": \"10000000\", \"fee\": \"{\\\"parameter\\\":\\\"object\\\"}\", \"name\": \"My ERC20\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-mainnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://tatum-blockchain-api-mainnet1.p.rapidapi.com/ethereum/v2/erc20/deploy\"\nquerystring = {\"fromPrivateKey\": \"string\", \"digits\": 18, \"nonce\": 0, \"symbol\": \"ERC_SYMBOL\", \"address\": \"0xa0Ca9FF38Bad06eBe64f0fDfF279cAE35129F5C6\", \"supply\": \"10000000\", \"fee\": \"{\\\"parameter\\\":\\\"object\\\"}\", \"name\": \"My ERC20\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-mainnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 500,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "XrpBroadcast",
            "url": "https://tatum-blockchain-api-mainnet1.p.rapidapi.com/xrp/v2/broadcast",
            "description": "<p>Broadcast signed transaction to XRP blockchain.</p>",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "txData",
                    "type": "STRING",
                    "description": "Raw signed transaction to be published to network.",
                    "default": "62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D"
                }
            ],
            "code": "import requests\n\nurl = \"https://tatum-blockchain-api-mainnet1.p.rapidapi.com/xrp/v2/broadcast\"\nquerystring = {\"txData\": \"62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-mainnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://tatum-blockchain-api-mainnet1.p.rapidapi.com/xrp/v2/broadcast\"\nquerystring = {\"txData\": \"62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-mainnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 401,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "XrpTransferBlockchain",
            "url": "https://tatum-blockchain-api-mainnet1.p.rapidapi.com/xrp/v2/transaction",
            "description": "<p>Send XRP from account to account.</p><p>For security and privacy reasons, this method should be called from local instance of Tatum Middleware,\n  see <a href=\"https://github.com/tatumio/tatum-middleware\">https://github.com/tatumio/tatum-middleware</a>.</p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "destinationTag",
                    "type": "NUMBER",
                    "description": "Destination tag of recipient account, if any.",
                    "default": 12355
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "Blockchain address to send assets",
                    "default": "rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV"
                },
                {
                    "name": "fromAccount",
                    "type": "STRING",
                    "description": "XRP account address. Must be the one used for generating deposit tags.",
                    "default": "rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV"
                },
                {
                    "name": "sourceTag",
                    "type": "NUMBER",
                    "description": "Source tag of sender account, if any.",
                    "default": 12355
                },
                {
                    "name": "fromSecret",
                    "type": "STRING",
                    "description": "Secret for account",
                    "default": "snSFTHdvSYQKKkYntvEt8cnmZuPJB"
                },
                {
                    "name": "fee",
                    "type": "STRING",
                    "description": "Fee to be paid, in XRP. If omitted, current fee will be calculated.",
                    "default": 10000
                },
                {
                    "name": "amount",
                    "type": "STRING",
                    "description": "Amount to be sent, in XRP.",
                    "default": 10000
                }
            ],
            "code": "import requests\n\nurl = \"https://tatum-blockchain-api-mainnet1.p.rapidapi.com/xrp/v2/transaction\"\nquerystring = {\"destinationTag\": 12355, \"to\": \"rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV\", \"fromAccount\": \"rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV\", \"sourceTag\": 12355, \"fromSecret\": \"snSFTHdvSYQKKkYntvEt8cnmZuPJB\", \"fee\": 10000, \"amount\": 10000}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-mainnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://tatum-blockchain-api-mainnet1.p.rapidapi.com/xrp/v2/transaction\"\nquerystring = {\"destinationTag\": 12355, \"to\": \"rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV\", \"fromAccount\": \"rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV\", \"sourceTag\": 12355, \"fromSecret\": \"snSFTHdvSYQKKkYntvEt8cnmZuPJB\", \"fee\": 10000, \"amount\": 10000}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-mainnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 403,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "BtcGenerateAddressPrivateKey",
            "url": "https://tatum-blockchain-api-mainnet1.p.rapidapi.com/bitcoin/v2/wallet/priv",
            "description": "<p>Generate private key for address from mnemonic for given derivation path index. For security and privacy reasons, this method should be called from local instance of Tatum Middleware, see <a href=\"https://github.com/tatumio/tatum-middleware\">https://github.com/tatumio/tatum-middleware</a>.</p>",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "index",
                    "type": "NUMBER",
                    "description": "Derivation index of private key to generate.",
                    "default": 4
                },
                {
                    "name": "mnemonic",
                    "type": "STRING",
                    "description": "Mnemonic to generate private key from.",
                    "default": "urge pulp usage sister evidence arrest palm math please chief egg abuse"
                }
            ],
            "code": "import requests\n\nurl = \"https://tatum-blockchain-api-mainnet1.p.rapidapi.com/bitcoin/v2/wallet/priv\"\nquerystring = {\"index\": 4, \"mnemonic\": \"urge pulp usage sister evidence arrest palm math please chief egg abuse\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-mainnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://tatum-blockchain-api-mainnet1.p.rapidapi.com/bitcoin/v2/wallet/priv\"\nquerystring = {\"index\": 4, \"mnemonic\": \"urge pulp usage sister evidence arrest palm math please chief egg abuse\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-mainnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    ]
}