{
    "product_id": "api_2c564ded-35c4-4e27-840f-c1d7206cf9b8",
    "tool_description": "Tatum Blockchain API is a RESTful JSON API. REST API enables you to access our infrastructure and interact with blockchains over HTTPS protocol.",
    "home_url": "https://rapidapi.com/tatum/api/tatum-blockchain-api-testnet1/",
    "name": "Tatum Blockchain API Testnet",
    "title": "Tatum Blockchain API Testnet",
    "pricing": "FREEMIUM",
    "tool_name": "Tatum Blockchain API Testnet",
    "score": null,
    "host": "tatum-blockchain-api-testnet1.p.rapidapi.com",
    "api_list": [
        {
            "name": "EthBlockchainTransfer",
            "url": "https://tatum-blockchain-api-testnet1.p.rapidapi.com/ethereum/v2/transaction",
            "description": "Send Ethereum or Tatum supported ERC20 token from account to account.</p><p>For security and privacy reasons, this method should be called from local instance of Tatum Middleware, see <a href=\"https://github.com/tatumio/tatum-middleware\">https://github.com/tatumio/tatum-middleware</a>.</p>",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "nonce",
                    "type": "NUMBER",
                    "description": "Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.",
                    "default": 0
                },
                {
                    "name": "currency",
                    "type": "STRING",
                    "description": "Currency to transfer from Ethereum Blockchain Account.",
                    "default": "ETH"
                },
                {
                    "name": "fee",
                    "type": "STRING",
                    "description": "Custom defined fee. If not present, it will be calculated automatically.",
                    "default": "{\"parameter\":\"object\"}"
                },
                {
                    "name": "amount",
                    "type": "STRING",
                    "description": "Amount to be sent in Ether",
                    "default": 100000
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "Blockchain address to send assets",
                    "default": "0x687422eEA2cB73B5d3e242bA5456b782919AFc85"
                },
                {
                    "name": "fromPrivateKey",
                    "type": "STRING",
                    "description": "Private key of sender address. Either mnemonic and index, or privateKey must be present - depends on the type of account and xpub.",
                    "default": "string"
                }
            ],
            "code": "import requests\n\nurl = \"https://tatum-blockchain-api-testnet1.p.rapidapi.com/ethereum/v2/transaction\"\nquerystring = {\"nonce\": 0, \"currency\": \"ETH\", \"fee\": \"{\\\"parameter\\\":\\\"object\\\"}\", \"amount\": 100000, \"to\": \"0x687422eEA2cB73B5d3e242bA5456b782919AFc85\", \"fromPrivateKey\": \"string\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-testnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://tatum-blockchain-api-testnet1.p.rapidapi.com/ethereum/v2/transaction\"\nquerystring = {\"nonce\": 0, \"currency\": \"ETH\", \"fee\": \"{\\\"parameter\\\":\\\"object\\\"}\", \"amount\": 100000, \"to\": \"0x687422eEA2cB73B5d3e242bA5456b782919AFc85\", \"fromPrivateKey\": \"string\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-testnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "EthGenerateAddressPrivateKey",
            "url": "https://tatum-blockchain-api-testnet1.p.rapidapi.com/ethereum/v2/wallet/priv",
            "description": "<p>Generate private key of address from mnemonic for given derivation path index. For security and privacy reasons, this method should be called from local instance of Tatum Middleware, see <a href=\"https://github.com/tatumio/tatum-middleware\">https://github.com/tatumio/tatum-middleware</a>.</p>",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "index",
                    "type": "NUMBER",
                    "description": "Derivation index of private key to generate.",
                    "default": 4
                },
                {
                    "name": "mnemonic",
                    "type": "STRING",
                    "description": "Mnemonic to generate private key from.",
                    "default": "urge pulp usage sister evidence arrest palm math please chief egg abuse"
                }
            ],
            "code": "import requests\n\nurl = \"https://tatum-blockchain-api-testnet1.p.rapidapi.com/ethereum/v2/wallet/priv\"\nquerystring = {\"index\": 4, \"mnemonic\": \"urge pulp usage sister evidence arrest palm math please chief egg abuse\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-testnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://tatum-blockchain-api-testnet1.p.rapidapi.com/ethereum/v2/wallet/priv\"\nquerystring = {\"index\": 4, \"mnemonic\": \"urge pulp usage sister evidence arrest palm math please chief egg abuse\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-testnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "EthDeployErc20Blockchain",
            "url": "https://tatum-blockchain-api-testnet1.p.rapidapi.com/ethereum/v2/erc20/deploy",
            "description": "<p>Deploy Ethereum ERC20 Smart Contract. Whole supply will be transferred to defined address. For security and privacy reasons, this method should be called from local instance of Tatum Middleware, see <a href=\"https://github.com/tatumio/tatum-middleware\">https://github.com/tatumio/tatum-middleware</a>.</p>",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "fromPrivateKey",
                    "type": "STRING",
                    "description": "Private key of Ethereum account address, from which gas for deployment of ERC20 will be paid.",
                    "default": "string"
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Name of the ERC20 token",
                    "default": "My ERC20"
                },
                {
                    "name": "supply",
                    "type": "STRING",
                    "description": "Max supply of ERC20 token",
                    "default": "10000000"
                },
                {
                    "name": "address",
                    "type": "STRING",
                    "description": "Address on Ethereum blockchain, which will be used as ERC20 deposit address. All ERC20 tokens will be transferred here.",
                    "default": "0xa0Ca9FF38Bad06eBe64f0fDfF279cAE35129F5C6"
                },
                {
                    "name": "nonce",
                    "type": "NUMBER",
                    "description": "Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.",
                    "default": 0
                },
                {
                    "name": "fee",
                    "type": "STRING",
                    "description": "Custom defined fee. If not present, it will be calculated automatically.",
                    "default": "{\"parameter\":\"object\"}"
                },
                {
                    "name": "digits",
                    "type": "NUMBER",
                    "description": "Number of decimal points",
                    "default": 18
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Symbol of the ERC20 token",
                    "default": "ERC_SYMBOL"
                }
            ],
            "code": "import requests\n\nurl = \"https://tatum-blockchain-api-testnet1.p.rapidapi.com/ethereum/v2/erc20/deploy\"\nquerystring = {\"fromPrivateKey\": \"string\", \"name\": \"My ERC20\", \"supply\": \"10000000\", \"address\": \"0xa0Ca9FF38Bad06eBe64f0fDfF279cAE35129F5C6\", \"nonce\": 0, \"fee\": \"{\\\"parameter\\\":\\\"object\\\"}\", \"digits\": 18, \"symbol\": \"ERC_SYMBOL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-testnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://tatum-blockchain-api-testnet1.p.rapidapi.com/ethereum/v2/erc20/deploy\"\nquerystring = {\"fromPrivateKey\": \"string\", \"name\": \"My ERC20\", \"supply\": \"10000000\", \"address\": \"0xa0Ca9FF38Bad06eBe64f0fDfF279cAE35129F5C6\", \"nonce\": 0, \"fee\": \"{\\\"parameter\\\":\\\"object\\\"}\", \"digits\": 18, \"symbol\": \"ERC_SYMBOL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-testnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "BtcBroadcast",
            "url": "https://tatum-blockchain-api-testnet1.p.rapidapi.com/bitcoin/v2/broadcast",
            "description": "<p>Broadcast signed transaction to Bitcoin blockchain.</p>",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "txData",
                    "type": "STRING",
                    "description": "Raw signed transaction to be published to network.",
                    "default": "62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D"
                }
            ],
            "code": "import requests\n\nurl = \"https://tatum-blockchain-api-testnet1.p.rapidapi.com/bitcoin/v2/broadcast\"\nquerystring = {\"txData\": \"62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-testnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://tatum-blockchain-api-testnet1.p.rapidapi.com/bitcoin/v2/broadcast\"\nquerystring = {\"txData\": \"62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-testnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 500,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "EthBroadcast",
            "url": "https://tatum-blockchain-api-testnet1.p.rapidapi.com/ethereum/v2/broadcast",
            "description": "<p>Broadcast signed transaction to Ethereum blockchain.</p>",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "txData",
                    "type": "STRING",
                    "description": "Raw signed transaction to be published to network.",
                    "default": "62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D"
                }
            ],
            "code": "import requests\n\nurl = \"https://tatum-blockchain-api-testnet1.p.rapidapi.com/ethereum/v2/broadcast\"\nquerystring = {\"txData\": \"62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-testnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://tatum-blockchain-api-testnet1.p.rapidapi.com/ethereum/v2/broadcast\"\nquerystring = {\"txData\": \"62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-testnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 400,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "XrpTransferBlockchain",
            "url": "https://tatum-blockchain-api-testnet1.p.rapidapi.com/xrp/v2/transaction",
            "description": "<p>Send XRP from account to account.</p><p>For security and privacy reasons, this method should be called from local instance of Tatum Middleware,\n  see <a href=\"https://github.com/tatumio/tatum-middleware\">https://github.com/tatumio/tatum-middleware</a>.</p>\n",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "Blockchain address to send assets",
                    "default": "rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV"
                },
                {
                    "name": "fee",
                    "type": "STRING",
                    "description": "Fee to be paid, in XRP. If omitted, current fee will be calculated.",
                    "default": 10000
                },
                {
                    "name": "sourceTag",
                    "type": "NUMBER",
                    "description": "Source tag of sender account, if any.",
                    "default": 12355
                },
                {
                    "name": "amount",
                    "type": "STRING",
                    "description": "Amount to be sent, in XRP.",
                    "default": 10000
                },
                {
                    "name": "fromSecret",
                    "type": "STRING",
                    "description": "Secret for account",
                    "default": "snSFTHdvSYQKKkYntvEt8cnmZuPJB"
                },
                {
                    "name": "destinationTag",
                    "type": "NUMBER",
                    "description": "Destination tag of recipient account, if any.",
                    "default": 12355
                },
                {
                    "name": "fromAccount",
                    "type": "STRING",
                    "description": "XRP account address. Must be the one used for generating deposit tags.",
                    "default": "rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV"
                }
            ],
            "code": "import requests\n\nurl = \"https://tatum-blockchain-api-testnet1.p.rapidapi.com/xrp/v2/transaction\"\nquerystring = {\"to\": \"rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV\", \"fee\": 10000, \"sourceTag\": 12355, \"amount\": 10000, \"fromSecret\": \"snSFTHdvSYQKKkYntvEt8cnmZuPJB\", \"destinationTag\": 12355, \"fromAccount\": \"rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-testnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://tatum-blockchain-api-testnet1.p.rapidapi.com/xrp/v2/transaction\"\nquerystring = {\"to\": \"rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV\", \"fee\": 10000, \"sourceTag\": 12355, \"amount\": 10000, \"fromSecret\": \"snSFTHdvSYQKKkYntvEt8cnmZuPJB\", \"destinationTag\": 12355, \"fromAccount\": \"rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-testnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "BtcGenerateAddressPrivateKey",
            "url": "https://tatum-blockchain-api-testnet1.p.rapidapi.com/bitcoin/v2/wallet/priv",
            "description": "<p>Generate private key for address from mnemonic for given derivation path index. For security and privacy reasons, this method should be called from local instance of Tatum Middleware, see <a href=\"https://github.com/tatumio/tatum-middleware\">https://github.com/tatumio/tatum-middleware</a>.</p>",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "mnemonic",
                    "type": "STRING",
                    "description": "Mnemonic to generate private key from.",
                    "default": "urge pulp usage sister evidence arrest palm math please chief egg abuse"
                },
                {
                    "name": "index",
                    "type": "NUMBER",
                    "description": "Derivation index of private key to generate.",
                    "default": 4
                }
            ],
            "code": "import requests\n\nurl = \"https://tatum-blockchain-api-testnet1.p.rapidapi.com/bitcoin/v2/wallet/priv\"\nquerystring = {\"mnemonic\": \"urge pulp usage sister evidence arrest palm math please chief egg abuse\", \"index\": 4}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-testnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://tatum-blockchain-api-testnet1.p.rapidapi.com/bitcoin/v2/wallet/priv\"\nquerystring = {\"mnemonic\": \"urge pulp usage sister evidence arrest palm math please chief egg abuse\", \"index\": 4}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-testnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 403,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "BtcTransferBlockchain",
            "url": "https://tatum-blockchain-api-testnet1.p.rapidapi.com/bitcoin/v2/transaction",
            "description": "<p>Send bitcoin from addresses to addresses. For security and privacy reasons, this method should be called from local instance of Tatum Middleware, see <a href=\"https://github.com/tatumio/tatum-middleware\">https://github.com/tatumio/tatum-middleware</a>.</p>",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "fromAddress",
                    "type": "STRING",
                    "description": "Array of addresses and corresponding private keys. Tatum will automatically scan last 100 transactions for each address and will use all of the unspent values. We advise to use this option if you have 1 address per 1 transaction only.",
                    "default": "{\"parameter\":\"object\"}"
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "Array of addresses and values to send bitcoins to. Values must be set in BTC. Difference between from and to is transaction fee.",
                    "default": "{\"parameter\":\"object\"}"
                },
                {
                    "name": "fromUTXO",
                    "type": "STRING",
                    "description": "Array of transaction hashes, index of UTXO in it and corresponding private keys. Use this option if you want to calculate amount to send manually. Either fromUTXO or fromAddress must be present.",
                    "default": "{\"parameter\":\"object\"}"
                }
            ],
            "code": "import requests\n\nurl = \"https://tatum-blockchain-api-testnet1.p.rapidapi.com/bitcoin/v2/transaction\"\nquerystring = {\"fromAddress\": \"{\\\"parameter\\\":\\\"object\\\"}\", \"to\": \"{\\\"parameter\\\":\\\"object\\\"}\", \"fromUTXO\": \"{\\\"parameter\\\":\\\"object\\\"}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-testnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://tatum-blockchain-api-testnet1.p.rapidapi.com/bitcoin/v2/transaction\"\nquerystring = {\"fromAddress\": \"{\\\"parameter\\\":\\\"object\\\"}\", \"to\": \"{\\\"parameter\\\":\\\"object\\\"}\", \"fromUTXO\": \"{\\\"parameter\\\":\\\"object\\\"}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-testnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 500,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "XrpBroadcast",
            "url": "https://tatum-blockchain-api-testnet1.p.rapidapi.com/xrp/v2/broadcast",
            "description": "<p>Broadcast signed transaction to XRP blockchain.</p>",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "txData",
                    "type": "STRING",
                    "description": "Raw signed transaction to be published to network.",
                    "default": "62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D"
                }
            ],
            "code": "import requests\n\nurl = \"https://tatum-blockchain-api-testnet1.p.rapidapi.com/xrp/v2/broadcast\"\nquerystring = {\"txData\": \"62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-testnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://tatum-blockchain-api-testnet1.p.rapidapi.com/xrp/v2/broadcast\"\nquerystring = {\"txData\": \"62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-testnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 403,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "EthBlockchainTransferErc20",
            "url": "https://tatum-blockchain-api-testnet1.p.rapidapi.com/ethereum/v2/erc20/transaction",
            "description": "<p>Transfer Ethereum ERC20 Smart Contract Tokens from account to account.</p><p>For security and privacy reasons, this method should be called from local instance of Tatum Middleware, see <a href=\"https://github.com/tatumio/tatum-middleware\">https://github.com/tatumio/tatum-middleware</a>.</p>",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "nonce",
                    "type": "NUMBER",
                    "description": "Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.",
                    "default": 0
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "Blockchain address to send ERC20 token to",
                    "default": "0x687422eEA2cB73B5d3e242bA5456b782919AFc85"
                },
                {
                    "name": "contractAddress",
                    "type": "STRING",
                    "description": "address of ERC20 token",
                    "default": "0x687422eEA2cB73B5d3e242bA5456b782919AFc85"
                },
                {
                    "name": "fee",
                    "type": "STRING",
                    "description": "Custom defined fee. If not present, it will be calculated automatically.",
                    "default": "{\"parameter\":\"object\"}"
                },
                {
                    "name": "fromPrivateKey",
                    "type": "STRING",
                    "description": "Private key of sender address. Either mnemonic and index, or privateKey must be present - depends on the type of account and xpub.",
                    "default": "string"
                },
                {
                    "name": "amount",
                    "type": "STRING",
                    "description": "Amount to be sent",
                    "default": 100000
                }
            ],
            "code": "import requests\n\nurl = \"https://tatum-blockchain-api-testnet1.p.rapidapi.com/ethereum/v2/erc20/transaction\"\nquerystring = {\"nonce\": 0, \"to\": \"0x687422eEA2cB73B5d3e242bA5456b782919AFc85\", \"contractAddress\": \"0x687422eEA2cB73B5d3e242bA5456b782919AFc85\", \"fee\": \"{\\\"parameter\\\":\\\"object\\\"}\", \"fromPrivateKey\": \"string\", \"amount\": 100000}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-testnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://tatum-blockchain-api-testnet1.p.rapidapi.com/ethereum/v2/erc20/transaction\"\nquerystring = {\"nonce\": 0, \"to\": \"0x687422eEA2cB73B5d3e242bA5456b782919AFc85\", \"contractAddress\": \"0x687422eEA2cB73B5d3e242bA5456b782919AFc85\", \"fee\": \"{\\\"parameter\\\":\\\"object\\\"}\", \"fromPrivateKey\": \"string\", \"amount\": 100000}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tatum-blockchain-api-testnet1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    ]
}