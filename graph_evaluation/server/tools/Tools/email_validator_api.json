{
    "product_id": "api_f82bfef2-75f3-45f6-a1f0-d4d072bd1287",
    "tool_description": "Validate email addresses in real-time. Make sure a mailbox really exist. Checks for fake DNS as well as uses regex functions to check the email for the right length and accepted characters. For example it will mark as valid an email like \u2018john@gmail.com\u2019 but it will recognize as a fake \u2018john@gmaill.com\u2019 (because of the not existing domain)",
    "home_url": "https://rapidapi.com/webarjos/api/email-validator-api/",
    "name": "Email Validator API",
    "title": "Email Validator API",
    "pricing": "FREEMIUM",
    "tool_name": "Email Validator API",
    "score": null,
    "host": "email-validator-api.p.rapidapi.com",
    "api_list": [
        {
            "name": "Get email verify",
            "url": "https://email-validator-api.p.rapidapi.com/verify",
            "description": "This endpoint will returns checks for fake DNS as well as uses regex functions to check the email for the right length and accepted characters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "",
                    "default": "user@mail.com"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://email-validator-api.p.rapidapi.com/verify\"\nquerystring = {\"email\": \"user@mail.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"email-validator-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://email-validator-api.p.rapidapi.com/verify\"\nquerystring = {\"email\": \"user@mail.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"email-validator-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        }
    ]
}