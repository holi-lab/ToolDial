{
    "product_id": "api_cf0a3eb8-a4c6-489c-ac6f-408d03d367c3",
    "tool_description": "Solve the travelling salesman problem for every 2D or 3D problem, and calculate the shortest distance between a list of points.",
    "home_url": "https://rapidapi.com/fx-world-softwareentwicklung-fx-world-softwareentwicklung-default/api/travelling-salesman/",
    "name": "Travelling Salesman",
    "title": "Travelling Salesman",
    "pricing": "FREEMIUM",
    "tool_name": "Travelling Salesman",
    "score": {
        "avgServiceLevel": 60,
        "avgLatency": 53,
        "avgSuccessRate": 40,
        "popularityScore": 6.7,
        "__typename": "Score"
    },
    "host": "travelling-salesman.p.rapidapi.com",
    "api_list": [
        {
            "name": "exampleProblem",
            "url": "https://travelling-salesman.p.rapidapi.com/tsm/exampleProblem",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "locationCount",
                    "type": "NUMBER",
                    "description": "",
                    "default": 10
                },
                {
                    "name": "edgeType",
                    "type": "STRING",
                    "description": "",
                    "default": "Euclidean2D"
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": "ExampleProblem"
                }
            ],
            "code": "import requests\n\nurl = \"https://travelling-salesman.p.rapidapi.com/tsm/exampleProblem\"\nquerystring = {\"locationCount\": 10, \"edgeType\": \"Euclidean2D\", \"name\": \"ExampleProblem\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"travelling-salesman.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://travelling-salesman.p.rapidapi.com/tsm/exampleProblem\"\nquerystring = {\"locationCount\": 10, \"edgeType\": \"Euclidean2D\", \"name\": \"ExampleProblem\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"travelling-salesman.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "locationCount": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "distances": {
                        "type": "array",
                        "items": {
                            "type": "number",
                            "format": "double",
                            "minimum": -1.7976931348623157e+308,
                            "maximum": 1.7976931348623157e+308
                        }
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "x": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": -1.7976931348623157e+308,
                                    "maximum": 1.7976931348623157e+308
                                },
                                "y": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": -1.7976931348623157e+308,
                                    "maximum": 1.7976931348623157e+308
                                },
                                "z": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": -1.7976931348623157e+308,
                                    "maximum": 1.7976931348623157e+308
                                }
                            }
                        }
                    },
                    "edgeType": {
                        "type": "string",
                        "enum": [
                            "DistanceMatrix",
                            "Euclidean2D",
                            "Euclidean3D",
                            "Manhattan2D",
                            "Manhattan3D",
                            "Chebyshev2D",
                            "Chebyshev3D"
                        ]
                    }
                }
            }
        },
        {
            "name": "solve",
            "url": "https://travelling-salesman.p.rapidapi.com/tsm/solve",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://travelling-salesman.p.rapidapi.com/tsm/solve\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"travelling-salesman.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://travelling-salesman.p.rapidapi.com/tsm/solve\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"travelling-salesman.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    ],
    "standardized_name": "travelling_salesman"
}