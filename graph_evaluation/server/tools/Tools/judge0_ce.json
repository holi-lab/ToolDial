{
    "product_id": "api_b78f708a-82dd-4872-8d86-9fda11caa7fb",
    "tool_description": "The most advanced open-source online code execution system in the world.",
    "home_url": "https://rapidapi.com/judge0-official/api/judge0-ce/",
    "name": "Judge0 CE",
    "title": "Judge0 CE",
    "pricing": "FREEMIUM",
    "tool_name": "Judge0 CE",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 1570,
        "avgSuccessRate": 100,
        "popularityScore": 9.9,
        "__typename": "Score"
    },
    "host": "judge0-ce.p.rapidapi.com",
    "api_list": [
        {
            "name": "About",
            "url": "https://judge0-ce.p.rapidapi.com/about",
            "description": "Get general information.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://judge0-ce.p.rapidapi.com/about\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"judge0-ce.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://judge0-ce.p.rapidapi.com/about\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"judge0-ce.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "version": "1.13.0",
                "homepage": "https://judge0.com",
                "source_code": "https://github.com/judge0/judge0",
                "maintainer": "Herman Zvonimir Do\u0161ilovi\u0107 <hermanz.dosilovic@gmail.com>"
            }
        },
        {
            "name": "Get a Language",
            "url": "https://judge0-ce.p.rapidapi.com/languages/52",
            "description": "Get a language.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": "52"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://judge0-ce.p.rapidapi.com/languages/52\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"judge0-ce.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://judge0-ce.p.rapidapi.com/languages/{id}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"judge0-ce.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "id": 52,
                "name": "C++ (GCC 7.4.0)",
                "is_archived": false,
                "source_file": "main.cpp",
                "compile_cmd": "/usr/local/gcc-7.4.0/bin/g++ %s main.cpp",
                "run_cmd": "LD_LIBRARY_PATH=/usr/local/gcc-7.4.0/lib64 ./a.out"
            }
        },
        {
            "name": "Get Configuration",
            "url": "https://judge0-ce.p.rapidapi.com/config_info",
            "description": "Configuration information gives you detailed information about the configuration of Judge0.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://judge0-ce.p.rapidapi.com/config_info\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"judge0-ce.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://judge0-ce.p.rapidapi.com/config_info\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"judge0-ce.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "maintenance_mode": false,
                "enable_wait_result": false,
                "enable_compiler_options": true,
                "allowed_languages_for_compile_options": [],
                "enable_command_line_arguments": true,
                "enable_submission_delete": false,
                "enable_callbacks": true,
                "callbacks_max_tries": 3,
                "callbacks_timeout": 5.0,
                "enable_additional_files": true,
                "max_queue_size": 10000,
                "cpu_time_limit": 5.0,
                "max_cpu_time_limit": 15.0,
                "cpu_extra_time": 1.0,
                "max_cpu_extra_time": 5.0,
                "wall_time_limit": 10.0,
                "max_wall_time_limit": 20.0,
                "memory_limit": 128000,
                "max_memory_limit": 512000,
                "stack_limit": 64000,
                "max_stack_limit": 128000,
                "max_processes_and_or_threads": 60,
                "max_max_processes_and_or_threads": 120,
                "enable_per_process_and_thread_time_limit": false,
                "allow_enable_per_process_and_thread_time_limit": true,
                "enable_per_process_and_thread_memory_limit": false,
                "allow_enable_per_process_and_thread_memory_limit": true,
                "max_file_size": 1024,
                "max_max_file_size": 20480,
                "number_of_runs": 1,
                "max_number_of_runs": 20,
                "redirect_stderr_to_stdout": false,
                "max_extract_size": 10240,
                "enable_batched_submissions": true,
                "max_submission_batch_size": 20,
                "submission_cache_duration": 1.0,
                "use_docs_as_homepage": true,
                "allow_enable_network": false,
                "enable_network": false
            }
        },
        {
            "name": "Get Languages",
            "url": "https://judge0-ce.p.rapidapi.com/languages",
            "description": "Get active languages.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://judge0-ce.p.rapidapi.com/languages\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"judge0-ce.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://judge0-ce.p.rapidapi.com/languages\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"judge0-ce.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": [
                {
                    "id": 45,
                    "name": "Assembly (NASM 2.14.02)"
                },
                {
                    "id": 46,
                    "name": "Bash (5.0.0)"
                },
                {
                    "id": 47,
                    "name": "Basic (FBC 1.07.1)"
                },
                {
                    "id": 75,
                    "name": "C (Clang 7.0.1)"
                },
                {
                    "id": 76,
                    "name": "C++ (Clang 7.0.1)"
                },
                {
                    "id": 48,
                    "name": "C (GCC 7.4.0)"
                },
                {
                    "id": 52,
                    "name": "C++ (GCC 7.4.0)"
                },
                {
                    "id": 49,
                    "name": "C (GCC 8.3.0)"
                },
                {
                    "id": 53,
                    "name": "C++ (GCC 8.3.0)"
                },
                {
                    "id": 50,
                    "name": "C (GCC 9.2.0)"
                },
                {
                    "id": 54,
                    "name": "C++ (GCC 9.2.0)"
                },
                {
                    "id": 86,
                    "name": "Clojure (1.10.1)"
                },
                {
                    "id": 51,
                    "name": "C# (Mono 6.6.0.161)"
                },
                {
                    "id": 77,
                    "name": "COBOL (GnuCOBOL 2.2)"
                },
                {
                    "id": 55,
                    "name": "Common Lisp (SBCL 2.0.0)"
                },
                {
                    "id": 90,
                    "name": "Dart (2.19.2)"
                },
                {
                    "id": 56,
                    "name": "D (DMD 2.089.1)"
                },
                {
                    "id": 57,
                    "name": "Elixir (1.9.4)"
                },
                {
                    "id": 58,
                    "name": "Erlang (OTP 22.2)"
                },
                {
                    "id": 44,
                    "name": "Executable"
                },
                {
                    "id": 87,
                    "name": "F# (.NET Core SDK 3.1.202)"
                },
                {
                    "id": 59,
                    "name": "Fortran (GFortran 9.2.0)"
                },
                {
                    "id": 60,
                    "name": "Go (1.13.5)"
                },
                {
                    "id": 95,
                    "name": "Go (1.18.5)"
                },
                {
                    "id": 88,
                    "name": "Groovy (3.0.3)"
                },
                {
                    "id": 61,
                    "name": "Haskell (GHC 8.8.1)"
                },
                {
                    "id": 91,
                    "name": "Java (JDK 17.0.6)"
                },
                {
                    "id": 62,
                    "name": "Java (OpenJDK 13.0.1)"
                },
                {
                    "id": 63,
                    "name": "JavaScript (Node.js 12.14.0)"
                },
                {
                    "id": 93,
                    "name": "JavaScript (Node.js 18.15.0)"
                },
                {
                    "id": 78,
                    "name": "Kotlin (1.3.70)"
                },
                {
                    "id": 64,
                    "name": "Lua (5.3.5)"
                },
                {
                    "id": 89,
                    "name": "Multi-file program"
                },
                {
                    "id": 79,
                    "name": "Objective-C (Clang 7.0.1)"
                },
                {
                    "id": 65,
                    "name": "OCaml (4.09.0)"
                },
                {
                    "id": 66,
                    "name": "Octave (5.1.0)"
                },
                {
                    "id": 67,
                    "name": "Pascal (FPC 3.0.4)"
                },
                {
                    "id": 85,
                    "name": "Perl (5.28.1)"
                },
                {
                    "id": 68,
                    "name": "PHP (7.4.1)"
                },
                {
                    "id": 43,
                    "name": "Plain Text"
                },
                {
                    "id": 69,
                    "name": "Prolog (GNU Prolog 1.4.5)"
                },
                {
                    "id": 70,
                    "name": "Python (2.7.17)"
                },
                {
                    "id": 92,
                    "name": "Python (3.11.2)"
                },
                {
                    "id": 71,
                    "name": "Python (3.8.1)"
                },
                {
                    "id": 80,
                    "name": "R (4.0.0)"
                },
                {
                    "id": 72,
                    "name": "Ruby (2.7.0)"
                },
                {
                    "id": 73,
                    "name": "Rust (1.40.0)"
                },
                {
                    "id": 81,
                    "name": "Scala (2.13.2)"
                },
                {
                    "id": 82,
                    "name": "SQL (SQLite 3.27.2)"
                },
                {
                    "id": 83,
                    "name": "Swift (5.2.3)"
                },
                {
                    "id": 74,
                    "name": "TypeScript (3.7.4)"
                },
                {
                    "id": 94,
                    "name": "TypeScript (5.0.3)"
                },
                {
                    "id": 84,
                    "name": "Visual Basic.Net (vbnc 0.0.0.5943)"
                }
            ]
        },
        {
            "name": "Get Statuses",
            "url": "https://judge0-ce.p.rapidapi.com/statuses",
            "description": "Get statuses.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://judge0-ce.p.rapidapi.com/statuses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"judge0-ce.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://judge0-ce.p.rapidapi.com/statuses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"judge0-ce.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": [
                {
                    "id": 1,
                    "description": "In Queue"
                },
                {
                    "id": 2,
                    "description": "Processing"
                },
                {
                    "id": 3,
                    "description": "Accepted"
                },
                {
                    "id": 4,
                    "description": "Wrong Answer"
                },
                {
                    "id": 5,
                    "description": "Time Limit Exceeded"
                },
                {
                    "id": 6,
                    "description": "Compilation Error"
                },
                {
                    "id": 7,
                    "description": "Runtime Error (SIGSEGV)"
                },
                {
                    "id": 8,
                    "description": "Runtime Error (SIGXFSZ)"
                },
                {
                    "id": 9,
                    "description": "Runtime Error (SIGFPE)"
                },
                {
                    "id": 10,
                    "description": "Runtime Error (SIGABRT)"
                },
                {
                    "id": 11,
                    "description": "Runtime Error (NZEC)"
                },
                {
                    "id": 12,
                    "description": "Runtime Error (Other)"
                },
                {
                    "id": 13,
                    "description": "Internal Error"
                },
                {
                    "id": 14,
                    "description": "Exec Format Error"
                }
            ]
        },
        {
            "name": "Create a Batched Submission",
            "url": "https://judge0-ce.p.rapidapi.com/submissions/batch",
            "description": "Create multiple submissions at once.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "base64_encoded",
                    "type": "BOOLEAN",
                    "description": "**We recommend that you always set** `base64_encoded` **to** `true` **and send [Base64](https://en.wikipedia.org/wiki/Base64) encoded data to Judge0.**\n\nIf submission\u2019s `source_code`, `stdin`, or `expected_output` contains non-printable characters or characters which cannot be sent with JSON, then set the `base64_encoded` parameter to `true` and send these attributes Base64 encoded. Your responsibility is to encode each of the mentioned attributes (`source_code`, `stdin`, and `expected_output`) even if just one of them contains non-printable characters. By default, this parameter is set to `false` and Judge0 assumes you are sending plain text data.",
                    "default": true
                }
            ],
            "code": "import requests\n\nurl = \"https://judge0-ce.p.rapidapi.com/submissions/batch\"\nquerystring = {\"base64_encoded\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"judge0-ce.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://judge0-ce.p.rapidapi.com/submissions/batch\"\nquerystring = {\"base64_encoded\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"judge0-ce.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Create a Submission",
            "url": "https://judge0-ce.p.rapidapi.com/submissions",
            "description": "Creates new submission. Created submission waits in queue to be processed. On successful creation, you are returned a submission token which can be used to check submission status.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "fields",
                    "type": "STRING",
                    "description": "Return only the desired submission attributes. The default value for the `fields` parameter is `stdout,time,memory,stderr,token,compile_output,message,status`.\n\nUse `*` to receive all available attributes.",
                    "default": "*"
                },
                {
                    "name": "base64_encoded",
                    "type": "BOOLEAN",
                    "description": "**We recommend that you always set** `base64_encoded` **to** `true` **and send [Base64](https://en.wikipedia.org/wiki/Base64) encoded data to Judge0.**\n\nIf submission\u2019s `source_code`, `stdin`, or `expected_output` contains non-printable characters or characters which cannot be sent with JSON, then set the `base64_encoded` parameter to `true` and send these attributes Base64 encoded. Your responsibility is to encode each of the mentioned attributes (`source_code`, `stdin`, and `expected_output`) even if just one of them contains non-printable characters. By default, this parameter is set to `false` and Judge0 assumes you are sending plain text data.",
                    "default": true
                },
                {
                    "name": "wait",
                    "type": "BOOLEAN",
                    "description": "Set to `true` to turn on **synchronous** mode to get the submission result immediately as a response. \n\nPlease note that synchronous execution might be slightly slower than asynchronous.",
                    "default": false
                }
            ],
            "code": "import requests\n\nurl = \"https://judge0-ce.p.rapidapi.com/submissions\"\nquerystring = {\"fields\": \"*\", \"base64_encoded\": true, \"wait\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"judge0-ce.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://judge0-ce.p.rapidapi.com/submissions\"\nquerystring = {\"fields\": \"*\", \"base64_encoded\": true, \"wait\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"judge0-ce.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ],
    "standardized_name": "judge0_ce"
}