{
    "tool_name":"Domain Checker with AI",
    "tool_description":"Looking for the perfect domain name for your business or personal website? \"Domain Checker with AI\" has got you covered! This comprehensive tool uses advanced artificial intelligence to generate up to 1 million customizable domain suggestions in a single search. Simply enter your desired base words, prefixes, or suffixes and let the AI do the rest. Our AI model has been trained on today's most popular domains and patterns, ensuring that you always receive accurate and relevant results. In add...",
    "title":"Domain Checker with AI",
    "pricing":"FREEMIUM",
    "score":{
        "avgServiceLevel":100,
        "avgLatency":8742,
        "avgSuccessRate":100,
        "popularityScore":8.7,
        "__typename":"Score"
    },
    "home_url":"https://rapidapi.com/protoddler-protoddler-default/api/domain-checker-with-ai/",
    "host":"domain-checker-with-ai.p.rapidapi.com",
    "api_list":[
        {
            "name":"Domain Name Suggester",
            "url":"https://domain-checker-with-ai.p.rapidapi.com/domain/suggest",
            "description":"AI powered endpoint to easily generate new and unique domain name suggestions by sending a GET request to the specified endpoint with base words and other optional parameters. It uses a combination of user input and predefined AI trained models to generate the suggestions, making it a powerful tool for finding the perfect domain name.\n**Parameters and its description**\n\n1. words: base words (like shop, market etc.)\n2. tlds: TLDs (like com,net,in etc.)\n3. prefixes: prefixes which can be used in the domain name (like ultra, simply etc.)\n4. suffixes: suffixes which can be used in the domain name (like ify, x etc.)\n\n**Note**\n\n- Except `words` parameter, all other parameters are optional. \n- All parameter supports comma-separated multi values like `car,bike,plane` etc.\n\n**Constrained by a strategic blueprint**\n\n1. For Ultra: Each parameter is limited to **no more than five comma-separated inputs**. Any additional values will be disregarded and not used in processing.\n2. For Mega: Each parameter is limited to **no more than ten comma-separated inputs**. Any additional values will be disregarded and not used in processing.\n\nYour input parameters will allow our AI model to generate results that are tailored to your specific needs.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"words",
                    "type":"STRING",
                    "description":"",
                    "default":"shop"
                }
            ],
            "optional_parameters":[
                {
                    "name":"prefixes",
                    "type":"STRING",
                    "description":"",
                    "default":"ultra"
                },
                {
                    "name":"tlds",
                    "type":"STRING",
                    "description":"",
                    "default":"com,net,org"
                },
                {
                    "name":"suffixes",
                    "type":"STRING",
                    "description":"",
                    "default":"ify,x"
                }
            ],
            "code":"import requests\n\nurl = \"https://domain-checker-with-ai.p.rapidapi.com/domain/suggest\"\nquerystring = {\"prefixes\": prefixes, \"words\": words, \"tlds\": tlds, \"suffixes\": suffixes}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"domain-checker-with-ai.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"DNS Details",
            "url":"https://domain-checker-with-ai.p.rapidapi.com/domain/dns",
            "description":"To use this endpoint, you need to send a GET request to the endpoint with the `domain` field in the query parameter. The value of this field should be the domain name for which you want to retrieve DNS information.\nThe endpoint will return a JSON response with the complete DNS information for the domain as a dictionary. If the DNS information could not be retrieved, the endpoint will return a `400 Bad Request` error with an `'error'` field containing an error message.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"domain",
                    "type":"STRING",
                    "description":"",
                    "default":"www.rapidapi.com"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://domain-checker-with-ai.p.rapidapi.com/domain/dns\"\nquerystring = {\"domain\": domain}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"domain-checker-with-ai.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "key1":"value",
                "key2":"value"
            },
            "headers":{},
            "schema":{}
        },
        {
            "name":"Domain WHOIS",
            "url":"https://domain-checker-with-ai.p.rapidapi.com/domain/whois",
            "description":"To use this endpoint, you need to send a GET request to the endpoint with the `domain` field in the query parameter. The value of this field should be the domain name for which you want to retrieve WHOIS information.\nThe endpoint will return a JSON response with the WHOIS information for the domain as a dictionary. If the WHOIS information could not be retrieved, the endpoint will return a `400 Bad Request` error with an `'error'` field containing an error message.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"domain",
                    "type":"STRING",
                    "description":"",
                    "default":"www.rapidapi.com"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://domain-checker-with-ai.p.rapidapi.com/domain/whois\"\nquerystring = {\"domain\": domain}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"domain-checker-with-ai.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "key1":"value",
                "key2":"value"
            },
            "headers":{},
            "schema":{}
        },
        {
            "name":"Domain Validation",
            "url":"https://domain-checker-with-ai.p.rapidapi.com/domain/validate",
            "description":"This endpoint allows you to validate a domain name by checking if it is registered and has an IP address associated with it.\nTo use this endpoint, you need to send a GET request to the endpoint with the `domain` field in the query parameter. The value of this field should be the domain name you want to validate.\nThe endpoint will return a JSON response with a `status` field set to `'valid'` if the domain is valid, and an `'ip-address'` field containing the IP address of the domain. If the domain is not valid, the endpoint will return a `400 Bad Request` error with an `'error'` field set to `'invalid domain'`.",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"domain",
                    "type":"STRING",
                    "description":"",
                    "default":"www.google.com"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://domain-checker-with-ai.p.rapidapi.com/domain/validate\"\nquerystring = {\"domain\": domain}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"domain-checker-with-ai.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "key1":"value",
                "key2":"value"
            },
            "headers":{},
            "schema":{}
        }
    ]
}