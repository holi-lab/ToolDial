{
    "tool_name":"Arespass",
    "tool_description":"AresPass is a password analyzer that calculates its entropy and shows a complete report that includes the password fragments having low randomness. Among the analysis carried out are multi-language word search, keyboard sequence search or irregular entropy distribution, to mention some of them.",
    "title":"Arespass",
    "pricing":"FREEMIUM",
    "score":{
        "avgServiceLevel":94,
        "avgLatency":1913,
        "avgSuccessRate":94,
        "popularityScore":9,
        "__typename":"Score"
    },
    "home_url":"https://rapidapi.com/aquariuswolf940/api/arespass/",
    "host":"arespass.p.rapidapi.com",
    "api_list":[
        {
            "name":"/about",
            "url":"https://arespass.p.rapidapi.com/about",
            "description":" ",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[
                {
                    "name":"outputFormat",
                    "type":"STRING",
                    "description":"**The format of the returned metadata.**\n\nAllowed values are *json*, *xml* and *yaml*.\n\nThe default value is *xml*.\n",
                    "default":""
                }
            ],
            "code":"import requests\n\nurl = \"https://arespass.p.rapidapi.com/about\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"arespass.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root>\n  <apiVersion>\n    <majorNumber>0</majorNumber>\n    <minorNumber>0</minorNumber>\n  </apiVersion>\n  <apiReleaseDateIso8601></apiReleaseDateIso8601>\n  <availableLanguagesIso639_1></availableLanguagesIso639_1>\n</root>",
            "headers":{},
            "schema":{
                "type":"object",
                "description":"**This API version number**.\n",
                "properties":{
                    "apiVersion":{
                        "type":"object",
                        "properties":{
                            "majorNumber":{
                                "type":"integer",
                                "description":"This API version major number."
                            },
                            "minorNumber":{
                                "type":"integer",
                                "description":"This API version minor number."
                            }
                        }
                    },
                    "apiReleaseDateIso8601":{
                        "type":"string",
                        "description":"**The release date of this API, ISO 8601 format.**\n"
                    },
                    "availableLanguagesIso639_1":{
                        "type":"string",
                        "description":"**The list of available languages.**\n\nEach language is identified by its ISO 639-1, two-letter code.\n\nThe list elements are comma-separated and sorted in ascending order.\n"
                    }
                }
            }
        },
        {
            "name":"/about",
            "url":"https://arespass.p.rapidapi.com/about",
            "description":" ",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[
                {
                    "name":"outputFormat",
                    "type":"STRING",
                    "description":"**The format of the returned metadata.**\n\nAllowed values are *json*, *xml* and *yaml*.\n\nThe default value is *xml*.\n",
                    "default":""
                }
            ],
            "code":"import requests\n\nurl = \"https://arespass.p.rapidapi.com/about\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"arespass.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "apiVersion":{
                    "majorNumber":0,
                    "minorNumber":0
                },
                "apiReleaseDateIso8601":"",
                "availableLanguagesIso639_1":""
            },
            "headers":{},
            "schema":{
                "type":"object",
                "description":"**This API version number**.\n",
                "properties":{
                    "apiVersion":{
                        "type":"object",
                        "properties":{
                            "majorNumber":{
                                "type":"integer",
                                "description":"This API version major number."
                            },
                            "minorNumber":{
                                "type":"integer",
                                "description":"This API version minor number."
                            }
                        }
                    },
                    "apiReleaseDateIso8601":{
                        "type":"string",
                        "description":"**The release date of this API, ISO 8601 format.**\n"
                    },
                    "availableLanguagesIso639_1":{
                        "type":"string",
                        "description":"**The list of available languages.**\n\nEach language is identified by its ISO 639-1, two-letter code.\n\nThe list elements are comma-separated and sorted in ascending order.\n"
                    }
                }
            }
        },
        {
            "name":"/ec",
            "url":"https://arespass.p.rapidapi.com/ec",
            "description":" ",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"password",
                    "type":"STRING",
                    "description":"**The password to be analyzed.**\n\nMinimum length is 4 characters; maximum length is 128 characters.\n\nBeware that certain characters like '&#35;', '&#61;' or '&#63;' must be properly encoded.\n\nFor more information about this issue, please refer to RFC 3986 (\"*Uniform Resource Identifier (URI): Generic Syntax*\"), sections 2.1, 2.2 and 2.4.\n",
                    "default":""
                }
            ],
            "optional_parameters":[
                {
                    "name":"penalty",
                    "type":"NUMBER",
                    "description":"**The penalty applied to each character that is part of a word, number sequence, alphabet sequence, etc.**\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n\nThe character used as decimal separator is always '&#46;'. Hence, a parameter value like *0,33* would be illegal.\n\nThe default value is *0.25*.\n",
                    "default":""
                },
                {
                    "name":"outputFormat",
                    "type":"STRING",
                    "description":"**The format of the returned analysis.**\n\nAllowed values are *json*, *xml* and *yaml*.\n\nThe default value is *xml*.\n",
                    "default":""
                },
                {
                    "name":"reqId",
                    "type":"STRING",
                    "description":"**An identifier for this request.**\n\nThe request identifier is a string that must match the regular expression */(?i)^[a-z0-9]{8,16}$/*.\n\nThis identifier is echoed in the returned response. Its value has no effect on the password analysis.\n\nIf this parameter is unset, a randomly generated identifier will be automatically assigned to this request.\n",
                    "default":""
                }
            ],
            "code":"import requests\n\nurl = \"https://arespass.p.rapidapi.com/ec\"\nquerystring = {\"password\": password}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"arespass.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "summary":[],
                "password":"",
                "l33tPassword":"",
                "passwordLength":0,
                "penalty":0,
                "entropy":0,
                "idealEntropy":0,
                "efficiency":0,
                "entropyDistribution":[
                    {
                        "char":"",
                        "l33tchar":"",
                        "percentage":0
                    }
                ],
                "nonUniformEntropyDistributionPenalty":0,
                "detectedKeyboard":"",
                "keyboardSequence":[
                    {
                        "char":"",
                        "l33tchar":"",
                        "penalty":0
                    }
                ],
                "numberSequence":[
                    {
                        "char":"",
                        "l33tchar":"",
                        "penalty":0
                    }
                ],
                "words":[
                    {
                        "char":"",
                        "l33tchar":"",
                        "penalty":0
                    }
                ],
                "repeatedChars":[
                    {
                        "char":"",
                        "l33tchar":"",
                        "penalty":0
                    }
                ],
                "alphabetSequence":[
                    {
                        "char":"",
                        "l33tchar":"",
                        "penalty":0
                    }
                ],
                "total":[
                    {
                        "char":"",
                        "l33tchar":"",
                        "penalty":0
                    }
                ],
                "apiVersion":"",
                "requestId":"",
                "requestTimestamp":0
            },
            "headers":{},
            "schema":{
                "type":"object",
                "properties":{
                    "summary":{
                        "type":"array",
                        "items":{
                            "type":"string",
                            "description":"**A human-readable summary of the password analysis.**\n\nThis human readable summary is not intended to be parsed.\n"
                        }
                    },
                    "password":{
                        "type":"string",
                        "description":"The analyzed password."
                    },
                    "l33tPassword":{
                        "type":"string",
                        "description":"The analyzed password after the l33t substitution."
                    },
                    "passwordLength":{
                        "type":"integer",
                        "description":"The number of characters the password has."
                    },
                    "penalty":{
                        "type":"number",
                        "description":"**The penalty applied to each character that has been found to be part of a word, number sequence, alphabet sequence, etc.**\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n\nIts value is equal to the value of the input parameter *penalty*.\n"
                    },
                    "entropy":{
                        "type":"number",
                        "description":"**The entropy calculated for the input password.**\n\nIt is measured in bits.\n"
                    },
                    "idealEntropy":{
                        "type":"number",
                        "description":"**The Shannon entropy.**\n\nThe Shannon entropy is the entropy calculated if no penalizations - words, number sequence, alphabet sequence, etc - were found in the password.\n\nIt is measured in bits.\n"
                    },
                    "efficiency":{
                        "type":"number",
                        "description":"**The ratio entropy / idealEntropy.**\n\nIt is a float number in the range [0, 1].\n"
                    },
                    "entropyDistribution":{
                        "type":"array",
                        "description":"**The distribution of the calculated entropy among the password characters.**\n",
                        "items":{
                            "type":"object",
                            "properties":{
                                "char":{
                                    "type":"string",
                                    "description":"The n-th character."
                                },
                                "l33tchar":{
                                    "type":"string",
                                    "description":"The n-th character after the l33t transformation."
                                },
                                "percentage":{
                                    "type":"number",
                                    "description":"The amount of entropy contributed by this character, expressed as percentage of the total."
                                }
                            }
                        }
                    },
                    "nonUniformEntropyDistributionPenalty":{
                        "type":"number",
                        "description":"**The penalty applied to the whole password because of irregular entropy distribution.**\n\nThis penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n"
                    },
                    "detectedKeyboard":{
                        "type":"string",
                        "description":"**The detected keyboard, QWERTY or Dvorak.**\n"
                    },
                    "keyboardSequence":{
                        "type":"array",
                        "description":"**The penalty applied to each character that has been found to be part of a keyboard sequence.**\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n",
                        "items":{
                            "type":"object",
                            "properties":{
                                "char":{
                                    "type":"string",
                                    "description":"The n-th character."
                                },
                                "l33tchar":{
                                    "type":"string",
                                    "description":"The n-th character after the l33t transformation."
                                },
                                "penalty":{
                                    "type":"number",
                                    "description":"The penalty applied to this character if it is part of a keyboard sequence.\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n"
                                }
                            }
                        }
                    },
                    "numberSequence":{
                        "type":"array",
                        "description":"**The penalty applied to each character that has been found to be part of a number sequence.**\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n",
                        "items":{
                            "type":"object",
                            "properties":{
                                "char":{
                                    "type":"string",
                                    "description":"The n-th character."
                                },
                                "l33tchar":{
                                    "type":"string",
                                    "description":"The n-th character after the l33t transformation."
                                },
                                "penalty":{
                                    "type":"number",
                                    "description":"The penalty applied to this character if it is part of a number sequence.\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n"
                                }
                            }
                        }
                    },
                    "words":{
                        "type":"array",
                        "description":"**The penalty applied to each character that has been found to be part of a word.**\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n",
                        "items":{
                            "type":"object",
                            "properties":{
                                "char":{
                                    "type":"string",
                                    "description":"The n-th character."
                                },
                                "l33tchar":{
                                    "type":"string",
                                    "description":"The n-th character after the l33t transformation."
                                },
                                "penalty":{
                                    "type":"number",
                                    "description":"The penalty applied to this character if it is part of a word.\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.                \n"
                                }
                            }
                        }
                    },
                    "repeatedChars":{
                        "type":"array",
                        "description":"**The penalty applied to each character that are repeated**\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.          \n",
                        "items":{
                            "type":"object",
                            "properties":{
                                "char":{
                                    "type":"string",
                                    "description":"The n-th character."
                                },
                                "l33tchar":{
                                    "type":"string",
                                    "description":"The n-th character after the l33t transformation."
                                },
                                "penalty":{
                                    "type":"number",
                                    "description":"The penalty applied to this character if it is repeated.\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n"
                                }
                            }
                        }
                    },
                    "alphabetSequence":{
                        "type":"array",
                        "description":"**The penalty applied to each character that has been found to be part of an alphabet sequence.**\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n",
                        "items":{
                            "type":"object",
                            "properties":{
                                "char":{
                                    "type":"string",
                                    "description":"The n-th character."
                                },
                                "l33tchar":{
                                    "type":"string",
                                    "description":"The n-th character after the l33t transformation."
                                },
                                "penalty":{
                                    "type":"number",
                                    "description":"The penalty applied to this character if it is part of an alphabet sequence.\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n"
                                }
                            }
                        }
                    },
                    "total":{
                        "type":"array",
                        "description":"**The total penalty applied to each character.**\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n",
                        "items":{
                            "type":"object",
                            "properties":{
                                "char":{
                                    "type":"string",
                                    "description":"The n-th character."
                                },
                                "l33tchar":{
                                    "type":"string",
                                    "description":"The n-th character after the l33t transformation."
                                },
                                "penalty":{
                                    "type":"number",
                                    "description":"The total penalty applied to each character.\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.                \n"
                                }
                            }
                        }
                    },
                    "apiVersion":{
                        "type":"string",
                        "description":"**This API version number.**\n"
                    },
                    "requestId":{
                        "type":"string",
                        "description":"**The identifier of the request that corresponds to this response.**\n"
                    },
                    "requestTimestamp":{
                        "type":"number",
                        "description":"**The timestamp for this response.**\n\nMilliseconds from the epoch of 1970-01-01T00:00:00Z.\n"
                    }
                }
            }
        },
        {
            "name":"/ec",
            "url":"https://arespass.p.rapidapi.com/ec",
            "description":" ",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"password",
                    "type":"STRING",
                    "description":"**The password to be analyzed.**\n\nMinimum length is 4 characters; maximum length is 128 characters.\n\nBeware that certain characters like '&#35;', '&#61;' or '&#63;' must be properly encoded.\n\nFor more information about this issue, please refer to RFC 3986 (\"*Uniform Resource Identifier (URI): Generic Syntax*\"), sections 2.1, 2.2 and 2.4.\n",
                    "default":""
                }
            ],
            "optional_parameters":[
                {
                    "name":"penalty",
                    "type":"NUMBER",
                    "description":"**The penalty applied to each character that is part of a word, number sequence, alphabet sequence, etc.**\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n\nThe character used as decimal separator is always '&#46;'. Hence, a parameter value like *0,33* would be illegal.\n\nThe default value is *0.25*.\n",
                    "default":""
                },
                {
                    "name":"outputFormat",
                    "type":"STRING",
                    "description":"**The format of the returned analysis.**\n\nAllowed values are *json*, *xml* and *yaml*.\n\nThe default value is *xml*.\n",
                    "default":""
                },
                {
                    "name":"reqId",
                    "type":"STRING",
                    "description":"**An identifier for this request.**\n\nThe request identifier is a string that must match the regular expression */(?i)^[a-z0-9]{8,16}$/*.\n\nThis identifier is echoed in the returned response. Its value has no effect on the password analysis.\n\nIf this parameter is unset, a randomly generated identifier will be automatically assigned to this request.\n",
                    "default":""
                }
            ],
            "code":"import requests\n\nurl = \"https://arespass.p.rapidapi.com/ec\"\nquerystring = {\"password\": password}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"arespass.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root>\n  <summary/>\n  <password></password>\n  <l33tPassword></l33tPassword>\n  <passwordLength>0</passwordLength>\n  <penalty>0</penalty>\n  <entropy>0</entropy>\n  <idealEntropy>0</idealEntropy>\n  <efficiency>0</efficiency>\n  <entropyDistribution>\n    <item>\n      <char></char>\n      <l33tchar></l33tchar>\n      <percentage>0</percentage>\n    </item>\n  </entropyDistribution>\n  <nonUniformEntropyDistributionPenalty>0</nonUniformEntropyDistributionPenalty>\n  <detectedKeyboard></detectedKeyboard>\n  <keyboardSequence>\n    <item>\n      <char></char>\n      <l33tchar></l33tchar>\n      <penalty>0</penalty>\n    </item>\n  </keyboardSequence>\n  <numberSequence>\n    <item>\n      <char></char>\n      <l33tchar></l33tchar>\n      <penalty>0</penalty>\n    </item>\n  </numberSequence>\n  <words>\n    <item>\n      <char></char>\n      <l33tchar></l33tchar>\n      <penalty>0</penalty>\n    </item>\n  </words>\n  <repeatedChars>\n    <item>\n      <char></char>\n      <l33tchar></l33tchar>\n      <penalty>0</penalty>\n    </item>\n  </repeatedChars>\n  <alphabetSequence>\n    <item>\n      <char></char>\n      <l33tchar></l33tchar>\n      <penalty>0</penalty>\n    </item>\n  </alphabetSequence>\n  <total>\n    <item>\n      <char></char>\n      <l33tchar></l33tchar>\n      <penalty>0</penalty>\n    </item>\n  </total>\n  <apiVersion></apiVersion>\n  <requestId></requestId>\n  <requestTimestamp>0</requestTimestamp>\n</root>",
            "headers":{},
            "schema":{
                "type":"object",
                "properties":{
                    "summary":{
                        "type":"array",
                        "items":{
                            "type":"string",
                            "description":"**A human-readable summary of the password analysis.**\n\nThis human readable summary is not intended to be parsed.\n"
                        }
                    },
                    "password":{
                        "type":"string",
                        "description":"The analyzed password."
                    },
                    "l33tPassword":{
                        "type":"string",
                        "description":"The analyzed password after the l33t substitution."
                    },
                    "passwordLength":{
                        "type":"integer",
                        "description":"The number of characters the password has."
                    },
                    "penalty":{
                        "type":"number",
                        "description":"**The penalty applied to each character that has been found to be part of a word, number sequence, alphabet sequence, etc.**\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n\nIts value is equal to the value of the input parameter *penalty*.\n"
                    },
                    "entropy":{
                        "type":"number",
                        "description":"**The entropy calculated for the input password.**\n\nIt is measured in bits.\n"
                    },
                    "idealEntropy":{
                        "type":"number",
                        "description":"**The Shannon entropy.**\n\nThe Shannon entropy is the entropy calculated if no penalizations - words, number sequence, alphabet sequence, etc - were found in the password.\n\nIt is measured in bits.\n"
                    },
                    "efficiency":{
                        "type":"number",
                        "description":"**The ratio entropy / idealEntropy.**\n\nIt is a float number in the range [0, 1].\n"
                    },
                    "entropyDistribution":{
                        "type":"array",
                        "description":"**The distribution of the calculated entropy among the password characters.**\n",
                        "items":{
                            "type":"object",
                            "properties":{
                                "char":{
                                    "type":"string",
                                    "description":"The n-th character."
                                },
                                "l33tchar":{
                                    "type":"string",
                                    "description":"The n-th character after the l33t transformation."
                                },
                                "percentage":{
                                    "type":"number",
                                    "description":"The amount of entropy contributed by this character, expressed as percentage of the total."
                                }
                            }
                        }
                    },
                    "nonUniformEntropyDistributionPenalty":{
                        "type":"number",
                        "description":"**The penalty applied to the whole password because of irregular entropy distribution.**\n\nThis penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n"
                    },
                    "detectedKeyboard":{
                        "type":"string",
                        "description":"**The detected keyboard, QWERTY or Dvorak.**\n"
                    },
                    "keyboardSequence":{
                        "type":"array",
                        "description":"**The penalty applied to each character that has been found to be part of a keyboard sequence.**\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n",
                        "items":{
                            "type":"object",
                            "properties":{
                                "char":{
                                    "type":"string",
                                    "description":"The n-th character."
                                },
                                "l33tchar":{
                                    "type":"string",
                                    "description":"The n-th character after the l33t transformation."
                                },
                                "penalty":{
                                    "type":"number",
                                    "description":"The penalty applied to this character if it is part of a keyboard sequence.\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n"
                                }
                            }
                        }
                    },
                    "numberSequence":{
                        "type":"array",
                        "description":"**The penalty applied to each character that has been found to be part of a number sequence.**\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n",
                        "items":{
                            "type":"object",
                            "properties":{
                                "char":{
                                    "type":"string",
                                    "description":"The n-th character."
                                },
                                "l33tchar":{
                                    "type":"string",
                                    "description":"The n-th character after the l33t transformation."
                                },
                                "penalty":{
                                    "type":"number",
                                    "description":"The penalty applied to this character if it is part of a number sequence.\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n"
                                }
                            }
                        }
                    },
                    "words":{
                        "type":"array",
                        "description":"**The penalty applied to each character that has been found to be part of a word.**\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n",
                        "items":{
                            "type":"object",
                            "properties":{
                                "char":{
                                    "type":"string",
                                    "description":"The n-th character."
                                },
                                "l33tchar":{
                                    "type":"string",
                                    "description":"The n-th character after the l33t transformation."
                                },
                                "penalty":{
                                    "type":"number",
                                    "description":"The penalty applied to this character if it is part of a word.\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.                \n"
                                }
                            }
                        }
                    },
                    "repeatedChars":{
                        "type":"array",
                        "description":"**The penalty applied to each character that are repeated**\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.          \n",
                        "items":{
                            "type":"object",
                            "properties":{
                                "char":{
                                    "type":"string",
                                    "description":"The n-th character."
                                },
                                "l33tchar":{
                                    "type":"string",
                                    "description":"The n-th character after the l33t transformation."
                                },
                                "penalty":{
                                    "type":"number",
                                    "description":"The penalty applied to this character if it is repeated.\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n"
                                }
                            }
                        }
                    },
                    "alphabetSequence":{
                        "type":"array",
                        "description":"**The penalty applied to each character that has been found to be part of an alphabet sequence.**\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n",
                        "items":{
                            "type":"object",
                            "properties":{
                                "char":{
                                    "type":"string",
                                    "description":"The n-th character."
                                },
                                "l33tchar":{
                                    "type":"string",
                                    "description":"The n-th character after the l33t transformation."
                                },
                                "penalty":{
                                    "type":"number",
                                    "description":"The penalty applied to this character if it is part of an alphabet sequence.\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n"
                                }
                            }
                        }
                    },
                    "total":{
                        "type":"array",
                        "description":"**The total penalty applied to each character.**\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n",
                        "items":{
                            "type":"object",
                            "properties":{
                                "char":{
                                    "type":"string",
                                    "description":"The n-th character."
                                },
                                "l33tchar":{
                                    "type":"string",
                                    "description":"The n-th character after the l33t transformation."
                                },
                                "penalty":{
                                    "type":"number",
                                    "description":"The total penalty applied to each character.\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.                \n"
                                }
                            }
                        }
                    },
                    "apiVersion":{
                        "type":"string",
                        "description":"**This API version number.**\n"
                    },
                    "requestId":{
                        "type":"string",
                        "description":"**The identifier of the request that corresponds to this response.**\n"
                    },
                    "requestTimestamp":{
                        "type":"number",
                        "description":"**The timestamp for this response.**\n\nMilliseconds from the epoch of 1970-01-01T00:00:00Z.\n"
                    }
                }
            }
        }
    ]
}