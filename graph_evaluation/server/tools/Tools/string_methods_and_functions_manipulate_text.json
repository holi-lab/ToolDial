{
    "product_id": "api_67ebbf67-cdf3-4e5e-b306-9bcf0970e7ce",
    "tool_description": "Empower your applications with a collection of powerful string manipulation functions and methods. Perform actions such as string formatting, searching, trimming, case conversions, URL parsing, and more. Streamline your string handling tasks with this comprehensive set of tools designed to make your development process smoother and more efficient.\"",
    "home_url": "https://rapidapi.com/nathancox90/api/string-methods-and-functions-manipulate-text/",
    "name": "String Methods and Functions - Manipulate text",
    "title": "String Methods and Functions - Manipulate text",
    "pricing": "FREEMIUM",
    "tool_name": "String Methods and Functions - Manipulate text",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 247,
        "avgSuccessRate": 99,
        "popularityScore": 9.3,
        "__typename": "Score"
    },
    "host": "string-methods-and-functions-manipulate-text.p.rapidapi.com",
    "api_list": [
        {
            "name": "/string/rtrim",
            "url": "https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/rtrim",
            "description": "The /rtrim API endpoint trims the trailing whitespace from a given text, provided as the text parameter. It removes any spaces, tabs, or other whitespace characters at the end (right side) of the text.\n\nThe endpoint does not modify the text in any other way apart from removing trailing whitespace. It ensures that the resulting trimmed text retains its original content without any changes to letter casing or other characters.\n\nThe /rtrim endpoint is useful when you need to eliminate trailing whitespace from a text, improving its readability and ensuring consistent formatting. It helps to remove any unintended whitespace that may affect the visual presentation or processing of the text.\n<br /><br />\n<b>Authentication:</b> not required",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/rtrim\"\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/rtrim\"\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "string"
                    }
                }
            }
        },
        {
            "name": "/string/url_hasarg",
            "url": "https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/url_hasarg",
            "description": "The /url_hasarg API endpoint checks whether a specific query parameter exists in a given URL provided as the text parameter. It requires an additional input key, which represents the name of the query parameter to check.\n\nUsing the provided inputs, the endpoint examines the URL to determine if the query parameter specified by the key is present. It returns a boolean value of true if the query parameter exists in the URL, and false otherwise.\n\nThis endpoint is useful when you need to verify the presence of a specific query parameter in a URL. It allows you to perform conditional operations or validations based on the existence of certain query parameters, ensuring that your application responds appropriately to the presence or absence of expected parameters in the URL.\n<br /><br />\n<b>Authentication:</b> not required",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/url_hasarg\"\nquerystring = {\"text\": \"\", \"key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/url_hasarg\"\nquerystring = {\"text\": \"\", \"key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "string"
                    }
                }
            }
        },
        {
            "name": "/string/to_lower",
            "url": "https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/to_lower",
            "description": "The /to_lower API endpoint converts the characters in a given text, provided as the text parameter, to lowercase. It transforms any uppercase letters in the text to their corresponding lowercase forms while leaving any lowercase letters unchanged.\n\nThe /to_lower endpoint is useful when you need to standardize the letter casing of a text or perform case-insensitive comparisons. It helps ensure consistent handling of text regardless of the original letter casing, facilitating accurate matching, sorting, or processing of textual data.\n<br /><br />\n<b>Authentication:</b> not required",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/to_lower\"\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/to_lower\"\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/string/to_upper",
            "url": "https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/to_upper",
            "description": "The /to_upper API endpoint converts the characters in a given text, provided as the text parameter, to uppercase. It transforms any lowercase letters in the text to their corresponding uppercase forms while leaving any uppercase letters unchanged.\n\nThe /to_upper endpoint is useful when you need to standardize the letter casing of a text or perform case-insensitive operations. It helps ensure consistent handling of text regardless of the original letter casing, facilitating accurate matching, sorting, or processing of textual data in uppercase format.\n<br /><br />\n<b>Authentication:</b> not required",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/to_upper\"\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/to_upper\"\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/string/starts_with",
            "url": "https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/starts_with",
            "description": "The /starts_with API endpoint allows you to check if a given text, provided as the text parameter, starts with a specific search term, provided as the search parameter.\n\nThis endpoint performs a case-sensitive search, meaning it considers the letter casing when comparing the beginning of the text with the search term. It returns a boolean value of true if the text starts with the search term, and false otherwise.\n\nThe /starts_with endpoint is particularly useful when you need to determine if a certain search term is found at the beginning of a given text, considering the exact letter casing. It helps you identify specific patterns or prefixes within the text accurately.\n<br /><br />\n<b>Authentication:</b> not required",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "search",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/starts_with\"\nquerystring = {\"text\": \"\", \"search\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/starts_with\"\nquerystring = {\"text\": \"\", \"search\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/string/strip_html",
            "url": "https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/strip_html",
            "description": "The /strip_html API endpoint removes HTML tags and entities from a given text provided as the text parameter. It cleanses the text by removing any HTML markup, such as <p>, <div>, <a>.\n\nThis endpoint is useful when you need to extract plain text content from HTML documents or sanitize user-generated input to prevent potential security vulnerabilities or undesired display of HTML tags in your application.\n\nBy utilizing the /strip_html endpoint, you can obtain the raw textual content without any HTML formatting or entities, making it easier to process, analyze, or display the text as desired.\n<br /><br />\n<b>Authentication:</b> not required",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/strip_html\"\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/strip_html\"\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/string/querystring_parse",
            "url": "https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/querystring_parse",
            "description": "The /querystring_parse API endpoint parses a URL's query string parameters and returns them as key-value pairs in an object format. For example an input of 'https://example.com/search?keyword=test&category=books&page=1' would be come {\n  keyword: \"test\",\n  category: \"books\",\n  page: \"1\"\n}\n<br /><br />\n<b>Authentication:</b> not required",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/querystring_parse\"\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/querystring_parse\"\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "string"
                    }
                }
            }
        },
        {
            "name": "/string/icontains",
            "url": "https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/icontains",
            "description": "The /icontains API endpoint functions similarly to the /contains endpoint but with a case-insensitive search. It takes two input parameters, text and search, and returns true if the search term is found within the text, regardless of letter casing.\n\nThis endpoint is especially useful when you need to perform a case-insensitive search, allowing you to efficiently determine if a specific term exists within a given text, regardless of whether the letter casing matches exactly or not. The /icontains endpoint helps simplify and enhance your search and filtering capabilities by disregarding case sensitivity.\n<br /><br />\n<b>Authentication:</b> not required",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "search",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/icontains\"\nquerystring = {\"search\": \"\", \"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/icontains\"\nquerystring = {\"search\": \"\", \"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/string/istarts_with",
            "url": "https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/istarts_with",
            "description": "The /istarts_with API endpoint allows you to check if a given text, provided as the text parameter, starts with a specific search term, provided as the search parameter.\n\nThis endpoint performs a case-insensitive search, meaning it disregards the letter casing when comparing the beginning of the text with the search term. It returns a boolean value of true if the text starts with the search term, and false otherwise.\n\nThe /istarts_with endpoint is particularly useful when you need to determine if a certain search term is found at the beginning of a given text, without considering the letter casing. It simplifies the process of checking for specific starting patterns, enabling you to efficiently handle various search and matching scenarios.\n<br /><br />\n<b>Authentication:</b> not required",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "search",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/istarts_with\"\nquerystring = {\"text\": \"\", \"search\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/istarts_with\"\nquerystring = {\"text\": \"\", \"search\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/string/strlen",
            "url": "https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/strlen",
            "description": "The /strlen API endpoint calculates the length of a given text provided as the text parameter. It returns the number of characters in the text, including spaces, punctuation, and special characters.\n\nThe /strlen endpoint is useful when you need to determine the length of a text string programmatically. It helps you retrieve the character count, which can be utilized for various purposes such as validation, string manipulation, or displaying character limits.\n\nFor example, if the input text is \"Hello, World!\", the /strlen endpoint will return the value 13, indicating that the text contains 13 characters.\n<br /><br />\n<b>Authentication:</b> not required",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/strlen\"\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/strlen\"\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/string/iindex",
            "url": "https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/iindex",
            "description": "The /iindex API endpoint allows you to find the index position of a case-insensitive expression within a given text. It takes two input parameters, text and search, and returns the index position where the expression is found within the text. If the expression cannot be found, the endpoint returns false.\n\nThis endpoint performs a case-insensitive search, meaning it disregards the letter casing when searching for the expression within the text. It helps you locate the position of a specific expression within the text, regardless of the letter casing used.\n\nThe /iindex endpoint is useful when you need to determine the index position of a case-insensitive expression in a given text, providing flexibility and convenience for various search and indexing tasks.\n<br /><br />\n<b>Authentication:</b> not required",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "search",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/iindex\"\nquerystring = {\"search\": \"\", \"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/iindex\"\nquerystring = {\"search\": \"\", \"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "string"
                    }
                }
            }
        },
        {
            "name": "/string/replace",
            "url": "https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/replace",
            "description": "The /replace API endpoint allows you to replace occurrences of a specific search term, provided as the search parameter, with a replacement text, provided as the replacement parameter, within a given text, provided as the text parameter.\n\nBy specifying the text input, you provide the original text in which you want to perform the replacement. The /replace endpoint searches for all instances of the search term within the text and replaces them with the specified replacement text.\n\nThis endpoint is useful when you need to perform find-and-replace operations within a text, enabling you to substitute specific patterns or occurrences with desired replacements. It provides a convenient way to modify and transform text content based on your requirements.\n<br /><br />\n<b>Authentication:</b> not required",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "replacement",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "search",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/replace\"\nquerystring = {\"replacement\": \"\", \"search\": \"\", \"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/replace\"\nquerystring = {\"replacement\": \"\", \"search\": \"\", \"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/string/split",
            "url": "https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/split",
            "description": "The /split API endpoint takes a text input, specified as the text parameter, and a separator input, specified as the separator parameter. Additionally, it includes a boolean parameter space which, when set to true, uses a single space as the separator.\n\nThe endpoint splits the given text into an array of substrings based on the provided separator. If the space parameter is set to true, a single space is used as the separator. Otherwise, the specified separator text is used for splitting.\n\nThis endpoint is useful when you need to split a text into distinct segments based on a separator, giving you the flexibility to choose between using a specific separator or a space. It allows you to easily break down a text into meaningful chunks or extract individual elements for further processing or analysis.\n<br /><br />\n<b>Authentication:</b> not required",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "separator",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "space",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": "true"
                }
            ],
            "code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/split\"\nquerystring = {\"separator\": \"\", \"space\": \"true\", \"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/split\"\nquerystring = {\"separator\": \"\", \"space\": \"true\", \"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/string/contains",
            "url": "https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/contains",
            "description": "The /contains endpoint is a web service that checks whether a given input text contains another specified string. This endpoint takes two string inputs: text, which represents the main text to be searched, and contains, which represents the string being searched for. It performs a search operation on the text input to determine if it contains the contains input as a substring. If the text input includes the contains string, the endpoint returns true; otherwise, it returns false. This endpoint is useful for verifying the presence of a specific substring within a larger text, enabling efficient searching and conditional logic based on the existence of the desired string.\n<br /><br />\n<b>Authentication:</b> not required",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "contains",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/contains\"\nquerystring = {\"text\": \"\", \"contains\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/contains\"\nquerystring = {\"text\": \"\", \"contains\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/string/index",
            "url": "https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/index",
            "description": "The /index API endpoint allows you to find the index position of a case-sensitive expression within a given text. It takes two input parameters, text and search, and returns the index position where the expression is found within the text. If the expression cannot be found, the endpoint returns false.\n\nThis endpoint performs a case-sensitive search, meaning it considers the letter casing when searching for the expression within the text. It helps you locate the position of a specific expression within the text, ensuring an exact match in terms of letter casing.\n\nThe /index endpoint is useful when you need to determine the index position of a case-sensitive expression in a given text, providing precision and accuracy for various search and indexing tasks.\n<br /><br />\n<b>Authentication:</b> not required",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "search",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/index\"\nquerystring = {\"search\": \"\", \"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/index\"\nquerystring = {\"search\": \"\", \"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/string/url_getarg",
            "url": "https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/url_getarg",
            "description": "The /url_getarg API endpoint retrieves the value of a specific query parameter from a given URL provided as the text parameter. It requires an additional input key, which represents the name of the query parameter to retrieve.\n\nUsing the provided inputs, the endpoint searches for the query parameter specified by the key in the URL and returns its corresponding value. If the query parameter is found, the endpoint returns the value as a result. If the query parameter is not found, the endpoint returns null or an appropriate indicator to denote the absence of the query parameter.\n\nThis endpoint is useful when you need to extract and retrieve specific query parameters from a URL. It enables you to programmatically access and utilize the values of query parameters for various purposes, such as processing URL parameters in API calls, extracting filtering criteria, or performing dynamic operations based on the URL parameters.\n<br /><br />\n<b>Authentication:</b> not required",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/url_getarg\"\nquerystring = {\"key\": \"\", \"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/url_getarg\"\nquerystring = {\"key\": \"\", \"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/string/strip_accents",
            "url": "https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/strip_accents",
            "description": "The /strip_accents API endpoint performs accent stripping or normalization on a given text provided as the text parameter. It removes or replaces accented characters in the text with their non-accented counterparts.\n\nAccented characters are often found in languages with diacritical marks, such as \u00e9, \u00e0, \u00fc, etc. The /strip_accents endpoint removes or replaces these accents to produce a normalized version of the text where accented characters are represented in their base form.\n\nThis endpoint is useful when you need to process or compare text that may contain accented characters. It helps to ensure consistency and compatibility by transforming accented characters into their base forms, facilitating accurate text matching, searching, or analysis across different languages or systems.\n<br /><br />\n<b>Authentication:</b> not required",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/strip_accents\"\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/strip_accents\"\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/string/url_delarg",
            "url": "https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/url_delarg",
            "description": "The /url_delarg API endpoint removes a specific query parameter from a given URL provided as the text parameter. It requires an additional input key, which represents the name of the query parameter to be removed.\n\nUsing the provided inputs, the endpoint identifies the query parameter specified by the key and removes it from the URL. The endpoint does not consider encoding or decoding of the parameter values.\n\nThis endpoint is useful when you need to programmatically remove a specific query parameter from a URL. It allows you to modify URLs dynamically by eliminating unwanted or unnecessary query parameters, providing flexibility in managing URL parameters for various purposes, such as optimizing URLs for SEO or removing sensitive information from shared URLs.\n<br /><br />\n<b>Authentication:</b> not required",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/url_delarg\"\nquerystring = {\"text\": \"\", \"key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/url_delarg\"\nquerystring = {\"text\": \"\", \"key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/string/ltrim",
            "url": "https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/ltrim",
            "description": "The /ltrim API endpoint trims the leading whitespace from a given text, provided as the text parameter. It removes any spaces, tabs, or other whitespace characters at the beginning (left side) of the text.\n\nThe endpoint does not modify the letter casing or make any changes to the text other than removing leading whitespace. It ensures that the resulting trimmed text retains its original casing.\n\nThe /ltrim endpoint is useful when you need to eliminate leading whitespace from a text, improving its readability and ensuring consistent formatting.\n<br /><br />\n<b>Authentication:</b> not required",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/ltrim\"\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/ltrim\"\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "string"
                    }
                }
            }
        },
        {
            "name": "/string/concat",
            "url": "https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/concat",
            "description": "The /concat API endpoint allows you to concatenate two strings, text1 and text2, with the option to specify a separator and whether to include a space.\n\nBy providing the separator parameter as a string, you can choose the specific separator you want to use between the two strings. Alternatively, if you set the space parameter to true, a single space will be used as the separator.\n\nThis endpoint is useful when you need to combine two strings together while controlling the separator between them, whether it's a space or a custom text.\n<br /><br />\n<b>Authentication:</b> not required",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text1",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "text2",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "separator",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "space",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": "true"
                }
            ],
            "code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/concat\"\nquerystring = {\"text1\": \"\", \"text2\": \"\", \"separator\": \"\", \"space\": \"true\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/concat\"\nquerystring = {\"text1\": \"\", \"text2\": \"\", \"separator\": \"\", \"space\": \"true\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "/string/url_parse",
            "url": "https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/url_parse",
            "description": "The /url_parse API endpoint parses a given URL into its individual components. For example, when providing the URL https://news.google.com/home?hl=en-US&gl=US&ceid=US:en, the resulting parsed components would be: {\n  scheme: \"https\",\n  host: \"news.google.com\",\n  path: \"/home\",\n  query: \"hl=en-US&gl=US&ceid=US:en\"\n}. The parsed components include:\n\nscheme: The URL scheme or protocol, which in this case is \"https\".\nhost: The host name or domain, which is \"news.google.com\".\npath: The path component of the URL, which is \"/home\".\nquery: The query string portion of the URL, which is \"hl=en-US&gl=US&ceid=US:en\".\nThe /url_parse endpoint is useful when you need to extract and analyze the individual components of a URL, allowing you to access and utilize them for various purposes, such as building customized URLs, extracting specific query parameters, or performing targeted operations based on the URL components.\n<br /><br />\n<b>Authentication:</b> not required",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/url_parse\"\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/url_parse\"\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/string/url_addarg",
            "url": "https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/url_addarg",
            "description": "The /url_addarg API endpoint adds a query parameter to a given URL provided as the text parameter. It takes additional inputs such as key (the name of the query parameter), value (the value of the query parameter), and ENCODING_RFC3986 (a boolean flag indicating whether the values should be encoded using the RFC 3986 standard).\n\nUsing the provided inputs, the endpoint adds the query parameter to the URL by appending it with the correct encoding. If the ENCODING_RFC3986 flag is set to true, the values will be encoded according to the RFC 3986 standard. If it is set to false, the values will be added as is, without encoding.\n\nThis endpoint is useful when you need to dynamically add query parameters to a URL, allowing you to modify and customize URLs for various purposes, such as constructing dynamic links or generating URLs with specific query parameters for API calls or web requests.\n<br /><br />\n<b>Authentication:</b> not required",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "value",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "ENCODING_RFC3986",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": "true"
                }
            ],
            "code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/url_addarg\"\nquerystring = {\"ENCODING_RFC3986\": \"true\", \"value\": \"\", \"text\": \"\", \"key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/url_addarg\"\nquerystring = {\"ENCODING_RFC3986\": \"true\", \"value\": \"\", \"text\": \"\", \"key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/string/iends_with",
            "url": "https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/iends_with",
            "description": "The /iends_with API endpoint allows you to check if a given text, provided as the text parameter, ends with a specific search term, provided as the search parameter.\n\nThis endpoint performs a case-insensitive search, meaning it disregards the letter casing when comparing the end of the text with the search term. It returns a boolean value of true if the text ends with the search term, and false otherwise.\n\nThe /iends_with endpoint is particularly useful when you need to determine if a certain search term is found at the end of a given text, without considering the letter casing. It simplifies the process of checking for specific endings, enabling you to efficiently handle various search and matching scenarios.\n<br /><br />\n<b>Authentication:</b> not required",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "search",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/iends_with\"\nquerystring = {\"search\": \"\", \"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/iends_with\"\nquerystring = {\"search\": \"\", \"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/string/capitalize",
            "url": "https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/capitalize",
            "description": "The /capitalize endpoint is a web service that performs text transformation by converting the input text to title case. Title case, sometimes known as capital case, is a formatting style where the first letter of each major word in a sentence or phrase is capitalized, while the remaining letters are in lowercase. This endpoint takes in a string of text as input and applies the title case formatting to it, resulting in an output string with the first letter of each word capitalized. It is a useful tool for ensuring consistent and visually appealing capitalization in titles, headings, or any text where title case is desired.\n<br /><br />\n<b>Authentication:</b> not required",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/capitalize\"\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/capitalize\"\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "string"
                    }
                }
            }
        },
        {
            "name": "/string/trim",
            "url": "https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/trim",
            "description": "The /trim API endpoint trims both the leading and trailing whitespace from a given text, provided as the text parameter. It removes any spaces, tabs, or other whitespace characters at the beginning (left side) and end (right side) of the text.\n\nThe /trim endpoint does not modify the text in any other way apart from removing leading and trailing whitespace. It ensures that the resulting trimmed text retains its original content without any changes to letter casing or other characters.\n\nThe /trim endpoint is useful when you need to eliminate both leading and trailing whitespace from a text, improving its readability and ensuring consistent formatting. It helps to remove any unintended whitespace that may affect the visual presentation or processing of the text.\n<br /><br />\n<b>Authentication:</b> not required",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/trim\"\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://string-methods-and-functions-manipulate-text.p.rapidapi.com/string/trim\"\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"string-methods-and-functions-manipulate-text.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        }
    ]
}