{
    "product_id": "api_b0efa0a7-9bf1-4b2a-ba8d-1856d32e4417",
    "tool_description": "The Geocoding Flask API is a simple and efficient way to convert addresses and places into their corresponding latitude and longitude coordinates.",
    "home_url": "https://rapidapi.com/alvaromiguel1998/api/geolocate4/",
    "name": "Geolocate",
    "title": "Geolocate",
    "pricing": "FREEMIUM",
    "tool_name": "Geolocate",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 11424,
        "avgSuccessRate": 100,
        "popularityScore": 7.6,
        "__typename": "Score"
    },
    "host": "geolocate4.p.rapidapi.com",
    "api_list": [
        {
            "name": "GET coordinates",
            "url": "https://geolocate4.p.rapidapi.com/geocode",
            "description": "GET request to the \"/geocode\" endpoint with an \"address\" parameter containing the address or place you want to geocode",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "address",
                    "type": "STRING",
                    "description": "",
                    "default": "1600 Amphitheatre Parkway, Mountain View, CA"
                }
            ],
            "code": "import requests\n\nurl = \"https://geolocate4.p.rapidapi.com/geocode\"\nquerystring = {\"address\": \"1600 Amphitheatre Parkway, Mountain View, CA\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geolocate4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geolocate4.p.rapidapi.com/geocode\"\nquerystring = {\"address\": \"1600 Amphitheatre Parkway, Mountain View, CA\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geolocate4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "latitude": 37.42248575,
                "longitude": -122.08558456613565
            }
        }
    ],
    "standardized_name": "geolocate"
}