{
    "product_id": "53aa5d96e4b00287471a2969",
    "tool_description": "TextAnalysis API provides customized Text Analysis,Text Mining and Text Processing Services like Text Summarization, Language Detection, Text Classification, Sentiment Analysis, Word Tokenize, Part-of-Speech(POS) Tagging, Named Entity Recognition(NER), Stemmer, Lemmatizer, Chunker, Parser, Key Phrase Extraction(Noun Phrase Extraction), Sentence Segmentation(Sentence Boundary Detection), Grammar Checker and  other Text Analysis Tasks. It stands on the giant shoulders of NLP Tools, such as NLTK...",
    "home_url": "https://rapidapi.com/textanalysis/api/textanalysis/",
    "name": "TextAnalysis",
    "title": "TextAnalysis",
    "pricing": "FREEMIUM",
    "tool_name": "TextAnalysis",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 322,
        "avgSuccessRate": 100,
        "popularityScore": 9.6,
        "__typename": "Score"
    },
    "host": "textanalysis.p.rapidapi.com",
    "api_list": [
        {
            "name": "MBSP POS Tagging",
            "url": "https://textanalysis.p.rapidapi.com/mbsp-pos-tagging",
            "description": "POS Tagging by MBSP",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by MBSP POS Tagger",
                    "default": "This is english pos tagger test"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/mbsp-pos-tagging\"\nquerystring = {\"text\": \"This is english pos tagger test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/mbsp-pos-tagging\"\nquerystring = {\"text\": \"This is english pos tagger test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "MBSP Parse",
            "url": "https://textanalysis.p.rapidapi.com/mbsp-parse",
            "description": "Parse by MBSP",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by MBSP Parser",
                    "default": "This is english parser test"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/mbsp-parse\"\nquerystring = {\"text\": \"This is english parser test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/mbsp-parse\"\nquerystring = {\"text\": \"This is english parser test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "MBSP Word Lemmatize",
            "url": "https://textanalysis.p.rapidapi.com/mbsp-word-lemmatize",
            "description": "Word Lemmatize by MBSP",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be lemmatized by MBSP Word Lemmatizer",
                    "default": "this is word lemmatize test"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/mbsp-word-lemmatize\"\nquerystring = {\"text\": \"this is word lemmatize test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/mbsp-word-lemmatize\"\nquerystring = {\"text\": \"this is word lemmatize test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "MBSP Word Tokenize",
            "url": "https://textanalysis.p.rapidapi.com/mbsp-word-tokenize",
            "description": "Word Tokenize by MBSP",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by MBSP Word Tokenize",
                    "default": "this's english word tokenize test"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/mbsp-word-tokenize\"\nquerystring = {\"text\": \"this's english word tokenize test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/mbsp-word-tokenize\"\nquerystring = {\"text\": \"this's english word tokenize test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "MBSP Chunk",
            "url": "https://textanalysis.p.rapidapi.com/mbsp-chunk",
            "description": "Chunk by MBSP",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by MBSP Chunker",
                    "default": "this is english chunk test"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/mbsp-chunk\"\nquerystring = {\"text\": \"this is english chunk test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/mbsp-chunk\"\nquerystring = {\"text\": \"this is english chunk test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "NLTK Pos Tagging",
            "url": "https://textanalysis.p.rapidapi.com/nltk-pos-tagging",
            "description": "Pos Tagging by NLTK",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by NLTK POS Tagger",
                    "default": "This is english pos tagger test"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/nltk-pos-tagging\"\nquerystring = {\"text\": \"This is english pos tagger test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/nltk-pos-tagging\"\nquerystring = {\"text\": \"This is english pos tagger test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "NLTK Porter Stemmer",
            "url": "https://textanalysis.p.rapidapi.com/nltk-porter-stemmer",
            "description": "Porter Stemmer by NLTK",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by NLTK Porter Stemmer",
                    "default": "this is english stemming test"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/nltk-porter-stemmer\"\nquerystring = {\"text\": \"this is english stemming test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/nltk-porter-stemmer\"\nquerystring = {\"text\": \"this is english stemming test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "LangId Language Detection",
            "url": "https://textanalysis.p.rapidapi.com/langid-language-detection",
            "description": "Support about 100 languages (ISO 639-1 codes) , demo: http://textanalysisonline.com/langid-language-detection",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be identified by language detector",
                    "default": "this is english text"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/langid-language-detection\"\nquerystring = {\"text\": \"this is english text\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/langid-language-detection\"\nquerystring = {\"text\": \"this is english text\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "NLTK Lancaster Stemmer",
            "url": "https://textanalysis.p.rapidapi.com/nltk-lancaster-stemmer",
            "description": "Lancaster Stemmer by NLTK",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by NLTK Lancaster Stemmer",
                    "default": "this is english stemmer test"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/nltk-lancaster-stemmer\"\nquerystring = {\"text\": \"this is english stemmer test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/nltk-lancaster-stemmer\"\nquerystring = {\"text\": \"this is english stemmer test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "NLTK Sentence Segmentation",
            "url": "https://textanalysis.p.rapidapi.com/nltk-sentence-segmentation",
            "description": "Sentence Segmentation or Sentence Boundary Detection by NLTK",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by NLTK Sentence Segmenter",
                    "default": "Natural language processing (NLP) deals with the application of computational models to text or speech data. Application areas within NLP include automatic (machine) translation between languages; dialogue systems, which allow a human to interact with a machine using natural language; and information extraction, where the goal is to transform unstructured text into structured (database) representations that can be searched and browsed in flexible ways. NLP technologies are having a dramatic impact on the way people interact with computers, on the way people interact with each other through the use of language, and on the way people access the vast amount of linguistic data now in electronic form. From a scientific viewpoint, NLP involves fundamental questions of how to structure formal models (for example statistical models) of natural language phenomena, and of how to design algorithms that implement these models"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/nltk-sentence-segmentation\"\nquerystring = {\"text\": \"Natural language processing (NLP) deals with the application of computational models to text or speech data. Application areas within NLP include automatic (machine) translation between languages; dialogue systems, which allow a human to interact with a machine using natural language; and information extraction, where the goal is to transform unstructured text into structured (database) representations that can be searched and browsed in flexible ways. NLP technologies are having a dramatic impact on the way people interact with computers, on the way people interact with each other through the use of language, and on the way people access the vast amount of linguistic data now in electronic form. From a scientific viewpoint, NLP involves fundamental questions of how to structure formal models (for example statistical models) of natural language phenomena, and of how to design algorithms that implement these models\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/nltk-sentence-segmentation\"\nquerystring = {\"text\": \"Natural language processing (NLP) deals with the application of computational models to text or speech data. Application areas within NLP include automatic (machine) translation between languages; dialogue systems, which allow a human to interact with a machine using natural language; and information extraction, where the goal is to transform unstructured text into structured (database) representations that can be searched and browsed in flexible ways. NLP technologies are having a dramatic impact on the way people interact with computers, on the way people interact with each other through the use of language, and on the way people access the vast amount of linguistic data now in electronic form. From a scientific viewpoint, NLP involves fundamental questions of how to structure formal models (for example statistical models) of natural language phenomena, and of how to design algorithms that implement these models\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "NLTK Snowball Stemmer",
            "url": "https://textanalysis.p.rapidapi.com/nltk-snowball-stemmer",
            "description": "Snowball Stemmer by NLTK",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by NLTK Snowball Stemmer",
                    "default": "this is english word stemming test"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/nltk-snowball-stemmer\"\nquerystring = {\"text\": \"this is english word stemming test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/nltk-snowball-stemmer\"\nquerystring = {\"text\": \"this is english word stemming test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "NLTK Wordnet Lemmatizer",
            "url": "https://textanalysis.p.rapidapi.com/nltk-wordnet-lemmatizer",
            "description": "Wordnet Lemmatizer by NLTK",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by NLTK Word Lemmatizer",
                    "default": "this is word lemmatize test"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/nltk-wordnet-lemmatizer\"\nquerystring = {\"text\": \"this is word lemmatize test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/nltk-wordnet-lemmatizer\"\nquerystring = {\"text\": \"this is word lemmatize test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Pattern Modality",
            "url": "https://textanalysis.p.rapidapi.com/pattern-modality",
            "description": "Modality by Pattern",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by Pattern Modality",
                    "default": "this is english modality test"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/pattern-modality\"\nquerystring = {\"text\": \"this is english modality test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/pattern-modality\"\nquerystring = {\"text\": \"this is english modality test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Pattern Indefinite Article",
            "url": "https://textanalysis.p.rapidapi.com/pattern-indefinite-article",
            "description": "Indefinite Article by Pattern",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Word to be processed by Pattern Indefinite Article",
                    "default": "apple"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/pattern-indefinite-article\"\nquerystring = {\"text\": \"apple\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/pattern-indefinite-article\"\nquerystring = {\"text\": \"apple\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Pattern POS Tagging",
            "url": "https://textanalysis.p.rapidapi.com/pattern-pos-tagging",
            "description": "Pos Tagging by Pattern",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by Pattern POS Tagger",
                    "default": "This is english pos tagger test"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/pattern-pos-tagging\"\nquerystring = {\"text\": \"This is english pos tagger test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/pattern-pos-tagging\"\nquerystring = {\"text\": \"This is english pos tagger test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Pattern Sentence Segmentation",
            "url": "https://textanalysis.p.rapidapi.com/pattern-sentence-segmentation",
            "description": "Sentence Segmentation by Pattern",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by Pattern Sentence Segmenter",
                    "default": "Natural language processing (NLP) deals with the application of computational models to text or speech data. Application areas within NLP include automatic (machine) translation between languages; dialogue systems, which allow a human to interact with a machine using natural language; and information extraction, where the goal is to transform unstructured text into structured (database) representations that can be searched and browsed in flexible ways. NLP technologies are having a dramatic impact on the way people interact with computers, on the way people interact with each other through the use of language, and on the way people access the vast amount of linguistic data now in electronic form. From a scientific viewpoint, NLP involves fundamental questions of how to structure formal models (for example statistical models) of natural language phenomena, and of how to design algorithms that implement these models"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/pattern-sentence-segmentation\"\nquerystring = {\"text\": \"Natural language processing (NLP) deals with the application of computational models to text or speech data. Application areas within NLP include automatic (machine) translation between languages; dialogue systems, which allow a human to interact with a machine using natural language; and information extraction, where the goal is to transform unstructured text into structured (database) representations that can be searched and browsed in flexible ways. NLP technologies are having a dramatic impact on the way people interact with computers, on the way people interact with each other through the use of language, and on the way people access the vast amount of linguistic data now in electronic form. From a scientific viewpoint, NLP involves fundamental questions of how to structure formal models (for example statistical models) of natural language phenomena, and of how to design algorithms that implement these models\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/pattern-sentence-segmentation\"\nquerystring = {\"text\": \"Natural language processing (NLP) deals with the application of computational models to text or speech data. Application areas within NLP include automatic (machine) translation between languages; dialogue systems, which allow a human to interact with a machine using natural language; and information extraction, where the goal is to transform unstructured text into structured (database) representations that can be searched and browsed in flexible ways. NLP technologies are having a dramatic impact on the way people interact with computers, on the way people interact with each other through the use of language, and on the way people access the vast amount of linguistic data now in electronic form. From a scientific viewpoint, NLP involves fundamental questions of how to structure formal models (for example statistical models) of natural language phenomena, and of how to design algorithms that implement these models\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "NLTK Word Tokenize",
            "url": "https://textanalysis.p.rapidapi.com/nltk-word-tokenize",
            "description": "Word Tokenize by NLTK",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "text to be tokenized by NLTK word tokenizer",
                    "default": "this's english text test"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/nltk-word-tokenize\"\nquerystring = {\"text\": \"this's english text test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/nltk-word-tokenize\"\nquerystring = {\"text\": \"this's english text test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Pattern Parse",
            "url": "https://textanalysis.p.rapidapi.com/pattern-parse",
            "description": "Parse by Pattern",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by Pattern Parser",
                    "default": "This is english parser test"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/pattern-parse\"\nquerystring = {\"text\": \"This is english parser test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/pattern-parse\"\nquerystring = {\"text\": \"This is english parser test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Pattern Sentiment Analysis",
            "url": "https://textanalysis.p.rapidapi.com/pattern-sentiment-analysis",
            "description": "Sentiment Analysis by Pattern",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by Pattern Sentiment Analysis",
                    "default": "This is the best book I have ever seen"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/pattern-sentiment-analysis\"\nquerystring = {\"text\": \"This is the best book I have ever seen\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/pattern-sentiment-analysis\"\nquerystring = {\"text\": \"This is the best book I have ever seen\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Pattern Word Comparative",
            "url": "https://textanalysis.p.rapidapi.com/pattern-word-comparative",
            "description": "Word Comparative by Pattern",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Word to be processed by Pattern Word Comparative",
                    "default": "big"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/pattern-word-comparative\"\nquerystring = {\"text\": \"big\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/pattern-word-comparative\"\nquerystring = {\"text\": \"big\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Pattern Word Singularize",
            "url": "https://textanalysis.p.rapidapi.com/pattern-word-singularize",
            "description": "Word Singularize by Pattern",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by Pattern Word Sigularize",
                    "default": "books"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/pattern-word-singularize\"\nquerystring = {\"text\": \"books\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/pattern-word-singularize\"\nquerystring = {\"text\": \"books\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Pattern Word Superlative",
            "url": "https://textanalysis.p.rapidapi.com/pattern-word-superlative",
            "description": "Word Superlative",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Word to be processed by Pattern Word Superlative",
                    "default": "big"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/pattern-word-superlative\"\nquerystring = {\"text\": \"big\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/pattern-word-superlative\"\nquerystring = {\"text\": \"big\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Pattern Word Tokenize",
            "url": "https://textanalysis.p.rapidapi.com/pattern-word-tokenize",
            "description": "Word Tokenize by Pattern",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by Pattern Word Tokenize",
                    "default": "This's english word tokenize test"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/pattern-word-tokenize\"\nquerystring = {\"text\": \"This's english word tokenize test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/pattern-word-tokenize\"\nquerystring = {\"text\": \"This's english word tokenize test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "TextBlob Noun Phrase Extraction",
            "url": "https://textanalysis.p.rapidapi.com/textblob-noun-phrase-extraction",
            "description": "Noun Phrase Extraction by TextBlob",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by TextBlob Noun Phrase Extractor",
                    "default": "Natural language processing (NLP) deals with the application of computational models to text or speech data. Application areas within NLP include automatic (machine) translation between languages; dialogue systems, which allow a human to interact with a machine using natural language; and information extraction, where the goal is to transform unstructured text into structured (database) representations that can be searched and browsed in flexible ways. NLP technologies are having a dramatic impact on the way people interact with computers, on the way people interact with each other through the use of language, and on the way people access the vast amount of linguistic data now in electronic form. From a scientific viewpoint, NLP involves fundamental questions of how to structure formal models (for example statistical models) of natural language phenomena, and of how to design algorithms that implement these models"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/textblob-noun-phrase-extraction\"\nquerystring = {\"text\": \"Natural language processing (NLP) deals with the application of computational models to text or speech data. Application areas within NLP include automatic (machine) translation between languages; dialogue systems, which allow a human to interact with a machine using natural language; and information extraction, where the goal is to transform unstructured text into structured (database) representations that can be searched and browsed in flexible ways. NLP technologies are having a dramatic impact on the way people interact with computers, on the way people interact with each other through the use of language, and on the way people access the vast amount of linguistic data now in electronic form. From a scientific viewpoint, NLP involves fundamental questions of how to structure formal models (for example statistical models) of natural language phenomena, and of how to design algorithms that implement these models\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/textblob-noun-phrase-extraction\"\nquerystring = {\"text\": \"Natural language processing (NLP) deals with the application of computational models to text or speech data. Application areas within NLP include automatic (machine) translation between languages; dialogue systems, which allow a human to interact with a machine using natural language; and information extraction, where the goal is to transform unstructured text into structured (database) representations that can be searched and browsed in flexible ways. NLP technologies are having a dramatic impact on the way people interact with computers, on the way people interact with each other through the use of language, and on the way people access the vast amount of linguistic data now in electronic form. From a scientific viewpoint, NLP involves fundamental questions of how to structure formal models (for example statistical models) of natural language phenomena, and of how to design algorithms that implement these models\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "TextBlob POS Tagging",
            "url": "https://textanalysis.p.rapidapi.com/textblob-pos-tagging",
            "description": "Pos Tagging by TextBlob",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by TextBlob POS Tagger",
                    "default": "This is english pos tagger test"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/textblob-pos-tagging\"\nquerystring = {\"text\": \"This is english pos tagger test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/textblob-pos-tagging\"\nquerystring = {\"text\": \"This is english pos tagger test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "TextBlob Sentence Segmentation",
            "url": "https://textanalysis.p.rapidapi.com/textblob-sentence-segmentation",
            "description": "Sentence Segmentation or Sentence Boundary Detection by TextBlob",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by TextBlob Sentence Segmenter",
                    "default": "Natural language processing (NLP) deals with the application of computational models to text or speech data. Application areas within NLP include automatic (machine) translation between languages; dialogue systems, which allow a human to interact with a machine using natural language; and information extraction, where the goal is to transform unstructured text into structured (database) representations that can be searched and browsed in flexible ways. NLP technologies are having a dramatic impact on the way people interact with computers, on the way people interact with each other through the use of language, and on the way people access the vast amount of linguistic data now in electronic form. From a scientific viewpoint, NLP involves fundamental questions of how to structure formal models (for example statistical models) of natural language phenomena, and of how to design algorithms that implement these models"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/textblob-sentence-segmentation\"\nquerystring = {\"text\": \"Natural language processing (NLP) deals with the application of computational models to text or speech data. Application areas within NLP include automatic (machine) translation between languages; dialogue systems, which allow a human to interact with a machine using natural language; and information extraction, where the goal is to transform unstructured text into structured (database) representations that can be searched and browsed in flexible ways. NLP technologies are having a dramatic impact on the way people interact with computers, on the way people interact with each other through the use of language, and on the way people access the vast amount of linguistic data now in electronic form. From a scientific viewpoint, NLP involves fundamental questions of how to structure formal models (for example statistical models) of natural language phenomena, and of how to design algorithms that implement these models\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/textblob-sentence-segmentation\"\nquerystring = {\"text\": \"Natural language processing (NLP) deals with the application of computational models to text or speech data. Application areas within NLP include automatic (machine) translation between languages; dialogue systems, which allow a human to interact with a machine using natural language; and information extraction, where the goal is to transform unstructured text into structured (database) representations that can be searched and browsed in flexible ways. NLP technologies are having a dramatic impact on the way people interact with computers, on the way people interact with each other through the use of language, and on the way people access the vast amount of linguistic data now in electronic form. From a scientific viewpoint, NLP involves fundamental questions of how to structure formal models (for example statistical models) of natural language phenomena, and of how to design algorithms that implement these models\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "TextBlob Parse",
            "url": "https://textanalysis.p.rapidapi.com/textblob-parse",
            "description": "Parse by TextBlob",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by TextBlob Parser",
                    "default": "This is english parser test"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/textblob-parse\"\nquerystring = {\"text\": \"This is english parser test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/textblob-parse\"\nquerystring = {\"text\": \"This is english parser test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "TextBlob Sentiment Analysis",
            "url": "https://textanalysis.p.rapidapi.com/textblob-sentiment-analysis",
            "description": "Sentiment Analysis by TextBlob",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by TextBlob Sentiment Analysis",
                    "default": "This is the best book I have ever seen"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/textblob-sentiment-analysis\"\nquerystring = {\"text\": \"This is the best book I have ever seen\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/textblob-sentiment-analysis\"\nquerystring = {\"text\": \"This is the best book I have ever seen\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "TextBlob Spelling Correction",
            "url": "https://textanalysis.p.rapidapi.com/textblob-spelling-correction",
            "description": "Spelling Correction by TextBlob",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by TextBlob Spelling Correction",
                    "default": "This is speling cheker test"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/textblob-spelling-correction\"\nquerystring = {\"text\": \"This is speling cheker test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/textblob-spelling-correction\"\nquerystring = {\"text\": \"This is speling cheker test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "TextBlob Word Singularize",
            "url": "https://textanalysis.p.rapidapi.com/textblob-word-singularize",
            "description": "Word Singularize by TextBlob",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Word to be processed by TextBlob Word Singularize",
                    "default": "books"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/textblob-word-singularize\"\nquerystring = {\"text\": \"books\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/textblob-word-singularize\"\nquerystring = {\"text\": \"books\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "TextBlob Word Tokenize",
            "url": "https://textanalysis.p.rapidapi.com/textblob-word-tokenize",
            "description": "Word Tokenize by TextBlob",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by TextBlob Word Tokenize",
                    "default": "This's english word tokenize test"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/textblob-word-tokenize\"\nquerystring = {\"text\": \"This's english word tokenize test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/textblob-word-tokenize\"\nquerystring = {\"text\": \"This's english word tokenize test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "TextBlob Word Pluralize",
            "url": "https://textanalysis.p.rapidapi.com/textblob-word-pluralize",
            "description": "Word Pluralize by TextBlob",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Word to be processed by TextBlob Word Pluralize",
                    "default": "book"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/textblob-word-pluralize\"\nquerystring = {\"text\": \"book\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/textblob-word-pluralize\"\nquerystring = {\"text\": \"book\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "NLTK Wordnet Word Lemmatizer",
            "url": "https://textanalysis.p.rapidapi.com/nltk-wordnet-word-lemmatizer",
            "description": "NLTK wordnet word lemmatizer only for english word with pos tag",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "word",
                    "type": "STRING",
                    "description": "English word to be lemmatized",
                    "default": "are"
                }
            ],
            "optional_parameters": [
                {
                    "name": "pos",
                    "type": "STRING",
                    "description": "Pos Tag user specified, only support 'v',  'a', 'r', 'n', other tags will set to default 'n'",
                    "default": "v"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/nltk-wordnet-word-lemmatizer\"\nquerystring = {\"word\": \"are\", \"pos\": \"v\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/nltk-wordnet-word-lemmatizer\"\nquerystring = {\"word\": \"are\", \"pos\": \"v\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "spaCy Word Lemmatize",
            "url": "https://textanalysis.p.rapidapi.com/spacy-word-lemmatize",
            "description": "Word Lemmatize by spaCy",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be lemmatized by spaCy Word Lemmatizer",
                    "default": "this is word lemmatize test"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/spacy-word-lemmatize\"\nquerystring = {\"text\": \"this is word lemmatize test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/spacy-word-lemmatize\"\nquerystring = {\"text\": \"this is word lemmatize test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "spaCy Word Tokenize",
            "url": "https://textanalysis.p.rapidapi.com/spacy-word-tokenize",
            "description": "Word tokenizer by spaCy",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by spaCy Word Tokenizer",
                    "default": "this's english word tokenize test"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/spacy-word-tokenize\"\nquerystring = {\"text\": \"this's english word tokenize test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/spacy-word-tokenize\"\nquerystring = {\"text\": \"this's english word tokenize test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "spaCy POS Tagging",
            "url": "https://textanalysis.p.rapidapi.com/spacy-pos-tagging",
            "description": "POS Tagging by spaCy",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by spaCy POS Tagger",
                    "default": "This is english pos tagger test"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/spacy-pos-tagging\"\nquerystring = {\"text\": \"This is english pos tagger test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/spacy-pos-tagging\"\nquerystring = {\"text\": \"This is english pos tagger test\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "spaCy Sentence Segmentation",
            "url": "https://textanalysis.p.rapidapi.com/spacy-sentence-segmentation",
            "description": "Sentence Segmentation or Sentence Boundary Detection by spaCy",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by spaCy Sentence Segmenter",
                    "default": "Natural language processing (NLP) deals with the application of computational models to text or speech data. Application areas within NLP include automatic (machine) translation between languages; dialogue systems, which allow a human to interact with a machine using natural language; and information extraction, where the goal is to transform unstructured text into structured (database) representations that can be searched and browsed in flexible ways. NLP technologies are having a dramatic impact on the way people interact with computers, on the way people interact with each other through the use of language, and on the way people access the vast amount of linguistic data now in electronic form. From a scientific viewpoint, NLP involves fundamental questions of how to structure formal models (for example statistical models) of natural language phenomena, and of how to design algorithms that implement these models"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/spacy-sentence-segmentation\"\nquerystring = {\"text\": \"Natural language processing (NLP) deals with the application of computational models to text or speech data. Application areas within NLP include automatic (machine) translation between languages; dialogue systems, which allow a human to interact with a machine using natural language; and information extraction, where the goal is to transform unstructured text into structured (database) representations that can be searched and browsed in flexible ways. NLP technologies are having a dramatic impact on the way people interact with computers, on the way people interact with each other through the use of language, and on the way people access the vast amount of linguistic data now in electronic form. From a scientific viewpoint, NLP involves fundamental questions of how to structure formal models (for example statistical models) of natural language phenomena, and of how to design algorithms that implement these models\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/spacy-sentence-segmentation\"\nquerystring = {\"text\": \"Natural language processing (NLP) deals with the application of computational models to text or speech data. Application areas within NLP include automatic (machine) translation between languages; dialogue systems, which allow a human to interact with a machine using natural language; and information extraction, where the goal is to transform unstructured text into structured (database) representations that can be searched and browsed in flexible ways. NLP technologies are having a dramatic impact on the way people interact with computers, on the way people interact with each other through the use of language, and on the way people access the vast amount of linguistic data now in electronic form. From a scientific viewpoint, NLP involves fundamental questions of how to structure formal models (for example statistical models) of natural language phenomena, and of how to design algorithms that implement these models\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "spaCy Noun Chunks Extraction",
            "url": "https://textanalysis.p.rapidapi.com/spacy-noun-chunks-extraction",
            "description": "Noun Chunks Extraction by spaCy",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by spaCy Noun Chunks Extractor",
                    "default": "Natural language processing (NLP) deals with the application of computational models to text or speech data. Application areas within NLP include automatic (machine) translation between languages; dialogue systems, which allow a human to interact with a machine using natural language; and information extraction, where the goal is to transform unstructured text into structured (database) representations that can be searched and browsed in flexible ways. NLP technologies are having a dramatic impact on the way people interact with computers, on the way people interact with each other through the use of language, and on the way people access the vast amount of linguistic data now in electronic form. From a scientific viewpoint, NLP involves fundamental questions of how to structure formal models (for example statistical models) of natural language phenomena, and of how to design algorithms that implement these models"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/spacy-noun-chunks-extraction\"\nquerystring = {\"text\": \"Natural language processing (NLP) deals with the application of computational models to text or speech data. Application areas within NLP include automatic (machine) translation between languages; dialogue systems, which allow a human to interact with a machine using natural language; and information extraction, where the goal is to transform unstructured text into structured (database) representations that can be searched and browsed in flexible ways. NLP technologies are having a dramatic impact on the way people interact with computers, on the way people interact with each other through the use of language, and on the way people access the vast amount of linguistic data now in electronic form. From a scientific viewpoint, NLP involves fundamental questions of how to structure formal models (for example statistical models) of natural language phenomena, and of how to design algorithms that implement these models\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/spacy-noun-chunks-extraction\"\nquerystring = {\"text\": \"Natural language processing (NLP) deals with the application of computational models to text or speech data. Application areas within NLP include automatic (machine) translation between languages; dialogue systems, which allow a human to interact with a machine using natural language; and information extraction, where the goal is to transform unstructured text into structured (database) representations that can be searched and browsed in flexible ways. NLP technologies are having a dramatic impact on the way people interact with computers, on the way people interact with each other through the use of language, and on the way people access the vast amount of linguistic data now in electronic form. From a scientific viewpoint, NLP involves fundamental questions of how to structure formal models (for example statistical models) of natural language phenomena, and of how to design algorithms that implement these models\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "spaCy Named Entity Recognition",
            "url": "https://textanalysis.p.rapidapi.com/spacy-named-entity-recognition-ner",
            "description": "Named Entity Recognition by spaCy",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be processed by spaCy NER",
                    "default": "Rami Eid is studying at Stony Brook University in New York"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/spacy-named-entity-recognition-ner\"\nquerystring = {\"text\": \"Rami Eid is studying at Stony Brook University in New York\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/spacy-named-entity-recognition-ner\"\nquerystring = {\"text\": \"Rami Eid is studying at Stony Brook University in New York\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Chinese Word Segmenter",
            "url": "https://textanalysis.p.rapidapi.com/segmenter",
            "description": "Chinese word segmenter",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Text to be segmented by Chinese Word Segementer",
                    "default": "\u8fd9\u662f\u4e2d\u6587\u5206\u8bcd\u6d4b\u8bd5"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/segmenter\"\nquerystring = {\"text\": \"\u8fd9\u662f\u4e2d\u6587\u5206\u8bcd\u6d4b\u8bd5\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/segmenter\"\nquerystring = {\"text\": \"\u8fd9\u662f\u4e2d\u6587\u5206\u8bcd\u6d4b\u8bd5\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Pattern Word Pluralize",
            "url": "https://textanalysis.p.rapidapi.com/pattern-word-pluralize",
            "description": "Word Pluralize by Pattern",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Word to be processed by Pattern Word Pluralize",
                    "default": "book"
                }
            ],
            "code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/pattern-word-pluralize\"\nquerystring = {\"text\": \"book\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://textanalysis.p.rapidapi.com/pattern-word-pluralize\"\nquerystring = {\"text\": \"book\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"textanalysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        }
    ]
}