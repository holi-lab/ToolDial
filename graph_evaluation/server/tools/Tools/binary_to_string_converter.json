{
    "product_id": "api_72f7d63a-2587-4f6d-b531-4a67fd4a6e0a",
    "tool_description": "This API endpoint allows you to convert binary data into a human-readable string. The server takes the binary input from the request body, processes it, and responds with the converted string as a JSON object.  To use this API, send a POST request to the /convert endpoint with a JSON body containing the \"binary\" field with the binary data you want to convert. The response will contain the converted string.  Please note that the binary input should not contain spaces between each binary digit,...",
    "home_url": "https://rapidapi.com/wualdorauccib/api/binary-to-string-converter/",
    "name": "Binary to String Converter",
    "title": "Binary to String Converter",
    "pricing": "FREEMIUM",
    "tool_name": "Binary to String Converter",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 436,
        "avgSuccessRate": 100,
        "popularityScore": 9.6,
        "__typename": "Score"
    },
    "host": "binary-to-string-converter.p.rapidapi.com",
    "api_list": [
        {
            "name": "postBinaryToString",
            "url": "https://binary-to-string-converter.p.rapidapi.com/api/convert",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://binary-to-string-converter.p.rapidapi.com/api/convert\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"binary-to-string-converter.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://binary-to-string-converter.p.rapidapi.com/api/convert\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"binary-to-string-converter.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    ]
}