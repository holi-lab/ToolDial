{
    "product_id": "api_8eceda12-02b0-4786-9027-96e4d0a9d807",
    "tool_description": "Our comprehensive Face Detection & Analysis API offers a wide range of functionalities. It accurately detects and provides the precise location of faces within images. Additionally, it incorporates advanced features such as liveness detection, age estimation, gender identification, analysis of facial expressions (emotions), and detection of facemasks. With our API, you can efficiently analyze and extract valuable insights from facial data.",
    "home_url": "https://rapidapi.com/arsa-technology-arsa-technology-default/api/face-detection-and-analysis/",
    "name": "Face Detection and Analysis",
    "title": "Face Detection and Analysis",
    "pricing": "FREEMIUM",
    "tool_name": "Face Detection and Analysis",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 4584,
        "avgSuccessRate": 100,
        "popularityScore": 8.2,
        "__typename": "Score"
    },
    "host": "face-detection-and-analysis.p.rapidapi.com",
    "api_list": [
        {
            "name": "Detect & Analyze",
            "url": "https://face-detection-and-analysis.p.rapidapi.com/face_analysis",
            "description": "supported image format is JPEG and PNG\nOutput detected faces, with each face's :\n\n- Bounding box coordinate (0 to 1 relative to image dimension).\n    0, 0 is top left corner of the image while 1, 1 is bottom right corner of the image\n    - x1 & y1 is bbox top left point coordinate\n    - x2 & y2 is bbox bottom right point coordinate\n- Face Liveness (is_real_face)\n- Estimated age\n- Estimated gender\n- Estimated face expression (emotion)\n[\"neutral\", \"happy\", \"sad\", \"surprise\", \"anger\"]\n- wear_facemask estimation",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image_input",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://face-detection-and-analysis.p.rapidapi.com/face_analysis\"\nquerystring = {\"image_input\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"face-detection-and-analysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://face-detection-and-analysis.p.rapidapi.com/face_analysis\"\nquerystring = {\"image_input\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"face-detection-and-analysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "image_file_name": {
                        "type": "string"
                    },
                    "face_count": {
                        "type": "integer"
                    },
                    "analysis_result": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "bbox": {
                                    "type": "object",
                                    "properties": {
                                        "x1": {
                                            "type": "number"
                                        },
                                        "y1": {
                                            "type": "number"
                                        },
                                        "x2": {
                                            "type": "number"
                                        },
                                        "y2": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "liveness": {
                                    "type": "object",
                                    "properties": {
                                        "is_real_face": {
                                            "type": "boolean"
                                        },
                                        "liveness_probability": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "age": {
                                    "type": "number"
                                },
                                "gender": {
                                    "type": "string"
                                },
                                "gender_probability": {
                                    "type": "number"
                                },
                                "emotion": {
                                    "type": "string"
                                },
                                "emotion_probability": {
                                    "type": "number"
                                },
                                "wear_facemask": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "latency_ms": {
                        "type": "number"
                    }
                }
            }
        },
        {
            "name": "Detect & Analyze 2",
            "url": "https://face-detection-and-analysis.p.rapidapi.com/face_analysis2",
            "description": "Same as above, but has another method of input\n\nThis endpoint consume JSON input (image url path)",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://face-detection-and-analysis.p.rapidapi.com/face_analysis2\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"face-detection-and-analysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://face-detection-and-analysis.p.rapidapi.com/face_analysis2\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"face-detection-and-analysis.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "image_file_name": {
                        "type": "string"
                    },
                    "face_count": {
                        "type": "integer"
                    },
                    "analysis_result": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "bbox": {
                                    "type": "object",
                                    "properties": {
                                        "x1": {
                                            "type": "number"
                                        },
                                        "y1": {
                                            "type": "number"
                                        },
                                        "x2": {
                                            "type": "number"
                                        },
                                        "y2": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "liveness": {
                                    "type": "object",
                                    "properties": {
                                        "is_real_face": {
                                            "type": "boolean"
                                        },
                                        "liveness_probability": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "age": {
                                    "type": "number"
                                },
                                "gender": {
                                    "type": "string"
                                },
                                "gender_probability": {
                                    "type": "number"
                                },
                                "emotion": {
                                    "type": "string"
                                },
                                "emotion_probability": {
                                    "type": "number"
                                },
                                "wear_facemask": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "latency_ms": {
                        "type": "number"
                    }
                }
            }
        }
    ]
}