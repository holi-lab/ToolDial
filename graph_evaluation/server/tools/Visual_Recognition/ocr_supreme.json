{
    "tool_name": "OCR Supreme",
    "tool_description": "Powerful optical character recognition -  24 languages -  supporting all common image formats and multiple output formats, including PDF (with selectable text overlay), HTML (hOCR) and plain text. Perfect for a wide range of applications including automatic transcribing of scanned document, invoices,  identity documents and more.  Feel free to send us a message if you are having issues.",
    "title": "OCR Supreme",
    "pricing": "FREEMIUM",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 2226,
        "avgSuccessRate": 100,
        "popularityScore": 8.4,
        "__typename": "Score"
    },
    "home_url": "https://rapidapi.com/vds-ltd-vds-ltd-default/api/ocr-supreme/",
    "host": "ocr-supreme.p.rapidapi.com",
    "api_list": [
        {
            "name": "List supported languages",
            "url": "https://ocr-supreme.p.rapidapi.com/ocr/languages",
            "description": "This endpoint lists all of the supported languages in [ISO_639-2/T](https://en.wikipedia.org/wiki/ISO_639-2) format.\n\nIn the case of Chinese and Japanese, there are multiple versions suffixed with _tra (Traditional) and _sim (Simplified).\nFor Chinese, Japanese and Korean there are versions suffixed with _vert for Vertical text. In some cases these are combined e.g chi_sim_vert\n\nThe return also lists which language is available on which endpoint (currently 1 and 2).",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ocr-supreme.p.rapidapi.com/ocr/languages\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ocr-supreme.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "all_langs": [
                    "ara",
                    "bul",
                    "chi_sim",
                    "chi_sim_vert",
                    "chi_tra",
                    "chi_tra_vert",
                    "cse",
                    "dan",
                    "deu",
                    "ell",
                    "eng",
                    "fin",
                    "fra",
                    "hrv",
                    "hun",
                    "ita",
                    "jpn",
                    "jpn_vert",
                    "kor",
                    "kor_vert",
                    "nld",
                    "pol",
                    "por",
                    "rus",
                    "slv",
                    "spa",
                    "swe",
                    "tur"
                ],
                "endpoint_1": [
                    "ara",
                    "chi_sim",
                    "chi_sim_vert",
                    "chi_tra",
                    "chi_tra_vert",
                    "deu",
                    "eng",
                    "fra",
                    "ita",
                    "jpn",
                    "jpn_vert",
                    "por",
                    "rus",
                    "spa"
                ],
                "endpoint_2": [
                    "bul",
                    "cse",
                    "dan",
                    "ell",
                    "eng",
                    "fin",
                    "hrv",
                    "hun",
                    "kor",
                    "kor_vert",
                    "nld",
                    "pol",
                    "slv",
                    "swe",
                    "tur"
                ]
            },
            "headers": {},
            "schema": {}
        },
        {
            "name": "OCR Image Endpoint 1",
            "url": "https://ocr-supreme.p.rapidapi.com/ocr/image",
            "description": "Base64 encoded image file, returns either base64 encoded pdf, plain text or HTML (hOCR)",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ocr-supreme.p.rapidapi.com/ocr/image\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ocr-supreme.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "data": "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Z2VzCiAgL0tpZHMgWyA5IDAgUiBdCiAgL0NvdW50IDEKPj4KZW5kb2JqCjEyIDAgb2JqCjw8CiAgL1Byb2R1Y2VyIChUZXNzZXJhY3QgNC4wLjAtYmV0YS4xKQogIC9DcmVhdGlvbkRhdGUgKEQ6MjAyMDA1MjgyMTAxMDIrMDEnMDAnKQogIC9UaXRsZSA8RkVGRj4KPj4KZW5kb2JqCnhyZWYKMCAxMwowMDAwMDAwMDAwIDY1NTM1IGYgCjAwMDAwMDAwMTUgMDAwMDAgbiAKMDAwMDAxMTY3OCAwMDAwMCBuIAowMDAwMDAwMDY4IDAwMDAwIG4gCjAwMDAwMDAyMjAgMDAwMDAgbiAKMDAwMDAwMDQ1NyAwMDAwMCBuIAowMDAwMDAwNzQwIDAwMDAwIG4gCjAwMDAwMDExNDMgMDAwMDAgbiAKMDAwMDAwMTM1MSAwMDAwMCBuIAowMDAwMDAxOTkwIDAwMDAwIG4gCjAwMDAwMDIyMjYgMDAwMDAgbiAKMDAwMDAwMjQwNiAwMDAwMCBuIAowMDAwMDExNzQzIDAwMDAwIG4gCnRyYWlsZXIKPDwKICAvU2l6ZSAxMwogIC9Sb290IDEgMCBSCiAgL0luZm8gMTIgMCBSCj4+CnN0YXJ0eHJlZgoxMTg2MAolJUVPRgo=",
                "message": "OK"
            },
            "headers": {},
            "schema": {
                "properties": {
                    "data": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "OCR Image Endpoint 2",
            "url": "https://ocr-supreme.p.rapidapi.com/ocr/imagetwo",
            "description": "Base64 encoded image file, returns either base64 encoded pdf, plain text or HTML (hOCR)",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ocr-supreme.p.rapidapi.com/ocr/imagetwo\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ocr-supreme.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "data": "",
                "message": "OK"
            },
            "headers": {},
            "schema": {
                "properties": {
                    "data": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "OCR Image Endpoint 1",
            "url": "https://ocr-supreme.p.rapidapi.com/ocr/image",
            "description": "Base64 encoded image file, returns either base64 encoded pdf, plain text or HTML (hOCR)",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ocr-supreme.p.rapidapi.com/ocr/image\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ocr-supreme.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ocr-supreme.p.rapidapi.com/ocr/image\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ocr-supreme.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "data": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "OCR Image Endpoint 2",
            "url": "https://ocr-supreme.p.rapidapi.com/ocr/imagetwo",
            "description": "Base64 encoded image file, returns either base64 encoded pdf, plain text or HTML (hOCR)",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ocr-supreme.p.rapidapi.com/ocr/imagetwo\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ocr-supreme.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ocr-supreme.p.rapidapi.com/ocr/imagetwo\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ocr-supreme.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "properties": {
                    "data": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    ]
}