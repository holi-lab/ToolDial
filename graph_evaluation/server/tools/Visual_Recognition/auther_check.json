{
    "product_id": "api_b7cb203a-b8f6-4cfe-a671-cdf4dd3542f2",
    "tool_description": "Plug and play the facial authentication into: point of sale, mobile app, self-checkouts, kiosk, ATM.",
    "home_url": "https://rapidapi.com/holuzynets/api/auther-check/",
    "name": "Auther Check",
    "title": "Auther Check",
    "pricing": "FREEMIUM",
    "tool_name": "Auther Check",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 465,
        "avgSuccessRate": 0,
        "popularityScore": 0.1,
        "__typename": "Score"
    },
    "host": "auther-check.p.rapidapi.com",
    "api_list": [
        {
            "name": "Get person by id",
            "url": "https://auther-check.p.rapidapi.com/person/face/{person_id}",
            "description": "To check if the person_id already exists in the system, just specify the path with person_id. If the person_id exists in response you will get the same person_id and information when a person was created and updated.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "person_id",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://auther-check.p.rapidapi.com/person/face/{person_id}\"\nquerystring = {\"person_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"auther-check.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://auther-check.p.rapidapi.com/person/face/{person_id}\"\nquerystring = {\"person_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"auther-check.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "code": "AUTH_002",
                "message": "API-Key header is not set"
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Compare person",
            "url": "https://auther-check.p.rapidapi.com/person/compare-face",
            "description": "Compares the face on the sourceImage with the largest face detected on the targetImage.\nBy default, the submitted sourceImage will be compared the targetImage with the 80% of similarity threshold. If you want to compare images with a custom similarity threshold (for example, 98%), specify this number in the request body [option]. In response, you get the similarity value of the facesMatched images.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://auther-check.p.rapidapi.com/person/compare-face\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"auther-check.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://auther-check.p.rapidapi.com/person/compare-face\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"auther-check.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Verify person",
            "url": "https://auther-check.p.rapidapi.com/person/verify-face/{person_id}",
            "description": "Comparison of the face of a person who declares that his face belongs to the known person_id. With this request, we start 1:1 matching for the enrolled person in our system. If the submitted person's face matches to 80% with the person's image that belongs to the declared person_id, then the verification result is successful.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "person_id",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://auther-check.p.rapidapi.com/person/verify-face/{person_id}\"\nquerystring = {\"person_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"auther-check.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://auther-check.p.rapidapi.com/person/verify-face/{person_id}\"\nquerystring = {\"person_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"auther-check.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Identify person",
            "url": "https://auther-check.p.rapidapi.com/person/recognize-face",
            "description": "Submit the Base64-encoded image. With this request, we start 1:N searching for the most similar enrolled person in our system. The search result will be person_id, which matches the searched one by 98%.\nTo improve the quality and speed of recognition, follow the image requirements for the submitted images.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://auther-check.p.rapidapi.com/person/recognize-face\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"auther-check.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://auther-check.p.rapidapi.com/person/recognize-face\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"auther-check.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Create person",
            "url": "https://auther-check.p.rapidapi.com/person/face/{person_id}",
            "description": "To register a person in the system, please submit a Base64-encoded image of a a person on where the person looks straight ahead and also prepare the person_id you want to assign to this person in advance. When preparing the reference image, follow the requirements described above in the Image requirements section. Download \"faceImage\" sample.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "person_id",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://auther-check.p.rapidapi.com/person/face/{person_id}\"\nquerystring = {\"person_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"auther-check.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://auther-check.p.rapidapi.com/person/face/{person_id}\"\nquerystring = {\"person_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"auther-check.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        }
    ],
    "standardized_name": "auther_check"
}