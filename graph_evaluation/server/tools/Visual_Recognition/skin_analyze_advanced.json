{
    "product_id": "api_cdebd701-5080-4e1d-af34-9abe6a5f7733",
    "tool_description": "Analysis of skin condition, such as skin color, skin texture, double eyelids, eye bags, dark circles, wrinkles, acne, spots, etc.",
    "home_url": "https://rapidapi.com/ailabapi-ailabapi-default/api/skin-analyze-advanced/",
    "name": "Skin analyze Advanced",
    "title": "Skin analyze Advanced",
    "pricing": "FREEMIUM",
    "tool_name": "Skin analyze Advanced",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 2508,
        "avgSuccessRate": 88,
        "popularityScore": 9.1,
        "__typename": "Score"
    },
    "host": "skin-analyze-advanced.p.rapidapi.com",
    "api_list": [
        {
            "name": "Skin analyze Advanced",
            "url": "https://skin-analyze-advanced.p.rapidapi.com/facebody/analysis/skinanalyze-advanced",
            "description": "Skin analyze Advanced",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image",
                    "type": "BINARY",
                    "description": "- **Image format**: `JPG` `JPEG`\n- **Image size**: No more than 5 MB.\n- **Image resolution**: Larger than 200x200px, smaller than 4096x4096px.\n- **Minimum face pixel size**: To ensure the effect, the minimum value of the face frame (square) in the image should be higher than 400 pixels (which can be verified by passing a reference through the interface).\n- **Face quality**: The higher the face quality, the more accurate the skin analysis. Factors affecting face quality include: occlusion of the five facial features, blurred images, improper lighting (bright, dark, backlight), excessive face angle (recommended yaw \u2264 \u00b130\u00b0, pitch \u2264 \u00b140\u00b0), etc.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "return_rect_confidence",
                    "type": "ENUM",
                    "description": "The confidence level of the area whether to return acne, occlusion, blemishes and moles.\n- `0`: No regional confidence is returned.\n- `1`: Returns the regional confidence.",
                    "default": ""
                },
                {
                    "name": "face_quality_control",
                    "type": "ENUM",
                    "description": "Whether to restrict the quality of faces in incoming images.\n- `0`: No face quality control is performed, and skin measurement results are returned as long as the face can be detected.\n- `1`: Perform face quality control, if the face quality does not pass it will prompt an error.",
                    "default": ""
                },
                {
                    "name": "return_maps",
                    "type": "STRING",
                    "description": "Enter a comma-separated string containing the type of skin chromatography image to be returned.\n- `red_area`: A red zone map that shows areas of redness caused by facial sensitivity and inflammation.",
                    "default": "red_area"
                }
            ],
            "code": "import requests\n\nurl = \"https://skin-analyze-advanced.p.rapidapi.com/facebody/analysis/skinanalyze-advanced\"\nquerystring = {\"return_rect_confidence\": \"\", \"face_quality_control\": \"\", \"return_maps\": \"red_area\", \"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"skin-analyze-advanced.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://skin-analyze-advanced.p.rapidapi.com/facebody/analysis/skinanalyze-advanced\"\nquerystring = {\"return_rect_confidence\": \"\", \"face_quality_control\": \"\", \"return_maps\": \"red_area\", \"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"skin-analyze-advanced.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        }
    ]
}