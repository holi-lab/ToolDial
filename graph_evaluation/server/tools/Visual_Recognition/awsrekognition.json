{
    "product_id": "76",
    "tool_description": "Detect objects, scenes, and faces in images",
    "home_url": "https://rapidapi.com/serg.osipchuk/api/AWSRekognition/",
    "name": "AWSRekognition",
    "title": "AWSRekognition",
    "pricing": "FREE",
    "tool_name": "AWSRekognition",
    "score": {
        "avgServiceLevel": 0,
        "avgLatency": 127263,
        "avgSuccessRate": 0,
        "popularityScore": 0.1,
        "__typename": "Score"
    },
    "host": "AWSRekognitionserg-osipchukV1.p.rapidapi.com",
    "api_list": [
        {
            "name": "compareFacesInImages",
            "url": "https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/compareFacesInImages",
            "description": "Compares a face in the source input image with each face detected in the target input image.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "API secret obtained from Amazon",
                    "default": ""
                },
                {
                    "name": "sourceImage",
                    "type": "FILE",
                    "description": "File or url",
                    "default": ""
                },
                {
                    "name": "targetImage",
                    "type": "FILE",
                    "description": "File or url",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key obtained from Amazon",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "region",
                    "type": "SELECT",
                    "description": "AWS Region. Supported values: `us-east-1` (N. Virginia) and `us-west-2` (Oregon)",
                    "default": ""
                },
                {
                    "name": "similarityThreshold",
                    "type": "NUMBER",
                    "description": "The minimum level of confidence in the match you want included in the result.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/compareFacesInImages\"\nquerystring = {\"apiSecret\": \"\", \"sourceImage\": \"\", \"region\": \"\", \"targetImage\": \"\", \"apiKey\": \"\", \"similarityThreshold\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/compareFacesInImages\"\nquerystring = {\"apiSecret\": \"\", \"sourceImage\": \"\", \"region\": \"\", \"targetImage\": \"\", \"apiKey\": \"\", \"similarityThreshold\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "compareFacesInS3Images",
            "url": "https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/compareFacesInS3Images",
            "description": "Compares a face in the source input image with each face detected in the target input image.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "API secret obtained from Amazon",
                    "default": ""
                },
                {
                    "name": "sourceImageS3Name",
                    "type": "STRING",
                    "description": "S3 object key name.",
                    "default": ""
                },
                {
                    "name": "targetImageS3Bucket",
                    "type": "STRING",
                    "description": "Name of the S3 bucket.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key obtained from Amazon",
                    "default": ""
                },
                {
                    "name": "sourceImageS3Bucket",
                    "type": "STRING",
                    "description": "Name of the S3 bucket.",
                    "default": ""
                },
                {
                    "name": "region",
                    "type": "SELECT",
                    "description": "AWS Region. Supported values: `us-east-1` (N. Virginia) and `us-west-2` (Oregon)",
                    "default": ""
                },
                {
                    "name": "targetImageS3Name",
                    "type": "STRING",
                    "description": "S3 object key name.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "similarityThreshold",
                    "type": "NUMBER",
                    "description": "The minimum level of confidence in the match you want included in the result.",
                    "default": ""
                },
                {
                    "name": "targetImageS3Version",
                    "type": "STRING",
                    "description": "If the bucket is versioning enabled, you can specify the object version.",
                    "default": ""
                },
                {
                    "name": "sourceImageS3Version",
                    "type": "STRING",
                    "description": "If the bucket is versioning enabled, you can specify the object version.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/compareFacesInS3Images\"\nquerystring = {\"apiSecret\": \"\", \"similarityThreshold\": \"\", \"sourceImageS3Name\": \"\", \"targetImageS3Bucket\": \"\", \"targetImageS3Version\": \"\", \"apiKey\": \"\", \"sourceImageS3Bucket\": \"\", \"region\": \"\", \"targetImageS3Name\": \"\", \"sourceImageS3Version\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/compareFacesInS3Images\"\nquerystring = {\"apiSecret\": \"\", \"similarityThreshold\": \"\", \"sourceImageS3Name\": \"\", \"targetImageS3Bucket\": \"\", \"targetImageS3Version\": \"\", \"apiKey\": \"\", \"sourceImageS3Bucket\": \"\", \"region\": \"\", \"targetImageS3Name\": \"\", \"sourceImageS3Version\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "createCollection",
            "url": "https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/createCollection",
            "description": "Creates a collection in an AWS Region. You can add faces to the collection using the IndexFaces operation.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key obtained from Amazon",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "API secret obtained from Amazon",
                    "default": ""
                },
                {
                    "name": "collectionId",
                    "type": "STRING",
                    "description": "ID for the collection that you are creating.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "region",
                    "type": "SELECT",
                    "description": "AWS Region. Supported values: `us-east-1` (N. Virginia) and `us-west-2` (Oregon)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/createCollection\"\nquerystring = {\"apiKey\": \"\", \"region\": \"\", \"apiSecret\": \"\", \"collectionId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/createCollection\"\nquerystring = {\"apiKey\": \"\", \"region\": \"\", \"apiSecret\": \"\", \"collectionId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteCollection",
            "url": "https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/deleteCollection",
            "description": "Deletes the specified collection. Note that this operation removes all faces in the collection.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "API secret obtained from Amazon",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key obtained from Amazon",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "collectionId",
                    "type": "STRING",
                    "description": "ID for the collection that you are deleting.",
                    "default": ""
                },
                {
                    "name": "region",
                    "type": "SELECT",
                    "description": "AWS Region. Supported values: `us-east-1` (N. Virginia) and `us-west-2` (Oregon)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/deleteCollection\"\nquerystring = {\"apiSecret\": \"\", \"collectionId\": \"\", \"region\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/deleteCollection\"\nquerystring = {\"apiSecret\": \"\", \"collectionId\": \"\", \"region\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "deleteFacesFromCollection",
            "url": "https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/deleteFacesFromCollection",
            "description": "Deletes faces from a collection. You specify a collection ID and an array of face IDs to remove from the collection.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key obtained from Amazon",
                    "default": ""
                },
                {
                    "name": "collectionId",
                    "type": "STRING",
                    "description": "Collection from which to remove the specific faces.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "API secret obtained from Amazon",
                    "default": ""
                },
                {
                    "name": "faceIds",
                    "type": "LIST",
                    "description": "An array of face IDs to delete.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "region",
                    "type": "SELECT",
                    "description": "AWS Region. Supported values: `us-east-1` (N. Virginia) and `us-west-2` (Oregon)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/deleteFacesFromCollection\"\nquerystring = {\"apiKey\": \"\", \"region\": \"\", \"collectionId\": \"\", \"apiSecret\": \"\", \"faceIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/deleteFacesFromCollection\"\nquerystring = {\"apiKey\": \"\", \"region\": \"\", \"collectionId\": \"\", \"apiSecret\": \"\", \"faceIds\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "detectFacesInImage",
            "url": "https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/detectFacesInImage",
            "description": "Detects faces within an image (JPEG or PNG) that is provided as input.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key obtained from Amazon",
                    "default": ""
                },
                {
                    "name": "image",
                    "type": "FILE",
                    "description": "File or url",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "API secret obtained from Amazon",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "region",
                    "type": "SELECT",
                    "description": "AWS Region. Supported values: `us-east-1` (N. Virginia) and `us-west-2` (Oregon)",
                    "default": ""
                },
                {
                    "name": "attributes",
                    "type": "JSON",
                    "description": "SON Array of strings. A list of facial attributes you would like to be returned. By default, the API returns subset of facial attributes. Valid values: `ALL`, `DEFAULT`",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/detectFacesInImage\"\nquerystring = {\"region\": \"\", \"apiKey\": \"\", \"image\": \"\", \"attributes\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/detectFacesInImage\"\nquerystring = {\"region\": \"\", \"apiKey\": \"\", \"image\": \"\", \"attributes\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "detectFacesInS3Image",
            "url": "https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/detectFacesInS3Image",
            "description": "Detects faces within an image (JPEG or PNG) that is provided as input.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key obtained from Amazon",
                    "default": ""
                },
                {
                    "name": "imageS3Bucket",
                    "type": "STRING",
                    "description": "Name of the S3 bucket.",
                    "default": ""
                },
                {
                    "name": "region",
                    "type": "SELECT",
                    "description": "AWS Region. Supported values: `us-east-1` (N. Virginia) and `us-west-2` (Oregon)",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "API secret obtained from Amazon",
                    "default": ""
                },
                {
                    "name": "imageS3Name",
                    "type": "STRING",
                    "description": "S3 object key name.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "imageS3Version",
                    "type": "STRING",
                    "description": "If the bucket is versioning enabled, you can specify the object version.",
                    "default": ""
                },
                {
                    "name": "attributes",
                    "type": "JSON",
                    "description": "SON Array of strings. A list of facial attributes you would like to be returned. By default, the API returns subset of facial attributes. Valid values: `ALL`, `DEFAULT`",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/detectFacesInS3Image\"\nquerystring = {\"apiKey\": \"\", \"imageS3Bucket\": \"\", \"region\": \"\", \"imageS3Version\": \"\", \"apiSecret\": \"\", \"imageS3Name\": \"\", \"attributes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/detectFacesInS3Image\"\nquerystring = {\"apiKey\": \"\", \"imageS3Bucket\": \"\", \"region\": \"\", \"imageS3Version\": \"\", \"apiSecret\": \"\", \"imageS3Name\": \"\", \"attributes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "detectLabelsInImage",
            "url": "https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/detectLabelsInImage",
            "description": "Detects instances of real-world labels within an image (JPEG or PNG) provided as input.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key obtained from Amazon",
                    "default": ""
                },
                {
                    "name": "image",
                    "type": "FILE",
                    "description": "File or url",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "API secret obtained from Amazon",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "minConfidence",
                    "type": "NUMBER",
                    "description": "Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.",
                    "default": ""
                },
                {
                    "name": "region",
                    "type": "SELECT",
                    "description": "AWS Region. Supported values: `us-east-1` (N. Virginia) and `us-west-2` (Oregon)",
                    "default": ""
                },
                {
                    "name": "maxLabels",
                    "type": "NUMBER",
                    "description": "Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/detectLabelsInImage\"\nquerystring = {\"apiKey\": \"\", \"minConfidence\": \"\", \"region\": \"\", \"image\": \"\", \"apiSecret\": \"\", \"maxLabels\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/detectLabelsInImage\"\nquerystring = {\"apiKey\": \"\", \"minConfidence\": \"\", \"region\": \"\", \"image\": \"\", \"apiSecret\": \"\", \"maxLabels\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "detectLabelsInS3Image",
            "url": "https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/detectLabelsInS3Image",
            "description": "Detects instances of real-world labels within an image (JPEG or PNG) provided as input.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageS3Bucket",
                    "type": "STRING",
                    "description": "Name of the S3 bucket.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "API secret obtained from Amazon",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key obtained from Amazon",
                    "default": ""
                },
                {
                    "name": "imageS3Name",
                    "type": "STRING",
                    "description": "S3 object key name.",
                    "default": ""
                },
                {
                    "name": "region",
                    "type": "SELECT",
                    "description": "AWS Region. Supported values: `us-east-1` (N. Virginia) and `us-west-2` (Oregon)",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "imageS3Version",
                    "type": "STRING",
                    "description": "If the bucket is versioning enabled, you can specify the object version.",
                    "default": ""
                },
                {
                    "name": "maxLabels",
                    "type": "NUMBER",
                    "description": "Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels.",
                    "default": ""
                },
                {
                    "name": "minConfidence",
                    "type": "NUMBER",
                    "description": "Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/detectLabelsInS3Image\"\nquerystring = {\"imageS3Bucket\": \"\", \"apiSecret\": \"\", \"imageS3Version\": \"\", \"maxLabels\": \"\", \"apiKey\": \"\", \"imageS3Name\": \"\", \"minConfidence\": \"\", \"region\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/detectLabelsInS3Image\"\nquerystring = {\"imageS3Bucket\": \"\", \"apiSecret\": \"\", \"imageS3Version\": \"\", \"maxLabels\": \"\", \"apiKey\": \"\", \"imageS3Name\": \"\", \"minConfidence\": \"\", \"region\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCollections",
            "url": "https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/getCollections",
            "description": "Returns list of collection IDs in your account. If the result is truncated, the response also provides a NextToken that you can use in the subsequent request to fetch the next set of collection IDs.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key obtained from Amazon",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "API secret obtained from Amazon",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "nextToken",
                    "type": "STRING",
                    "description": "Pagination token from the previous response.",
                    "default": ""
                },
                {
                    "name": "region",
                    "type": "SELECT",
                    "description": "AWS Region. Supported values: `us-east-1` (N. Virginia) and `us-west-2` (Oregon)",
                    "default": ""
                },
                {
                    "name": "maxResults",
                    "type": "STRING",
                    "description": "Maximum number of collection IDs to return.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/getCollections\"\nquerystring = {\"apiKey\": \"\", \"nextToken\": \"\", \"region\": \"\", \"maxResults\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/getCollections\"\nquerystring = {\"apiKey\": \"\", \"nextToken\": \"\", \"region\": \"\", \"maxResults\": \"\", \"apiSecret\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getFacesInCollection",
            "url": "https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/getFacesInCollection",
            "description": "Returns metadata for faces in the specified collection. This metadata includes information such as the bounding box coordinates, the confidence (that the bounding box contains a face), and face ID.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key obtained from Amazon",
                    "default": ""
                },
                {
                    "name": "collectionId",
                    "type": "STRING",
                    "description": "ID of the collection from which to list the faces.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "API secret obtained from Amazon",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "region",
                    "type": "SELECT",
                    "description": "AWS Region. Supported values: `us-east-1` (N. Virginia) and `us-west-2` (Oregon)",
                    "default": ""
                },
                {
                    "name": "maxResults",
                    "type": "STRING",
                    "description": "Maximum number of faces to return.",
                    "default": ""
                },
                {
                    "name": "nextToken",
                    "type": "STRING",
                    "description": "If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/getFacesInCollection\"\nquerystring = {\"region\": \"\", \"maxResults\": \"\", \"apiKey\": \"\", \"collectionId\": \"\", \"apiSecret\": \"\", \"nextToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/getFacesInCollection\"\nquerystring = {\"region\": \"\", \"maxResults\": \"\", \"apiKey\": \"\", \"collectionId\": \"\", \"apiSecret\": \"\", \"nextToken\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "indexFacesIntoCollection",
            "url": "https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/indexFacesIntoCollection",
            "description": "Detects faces in the input image and adds them to the specified collection.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key obtained from Amazon",
                    "default": ""
                },
                {
                    "name": "image",
                    "type": "FILE",
                    "description": "File or url",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "API secret obtained from Amazon",
                    "default": ""
                },
                {
                    "name": "collectionId",
                    "type": "STRING",
                    "description": "ID of an existing collection to which you want to add the faces that are detected in the input images.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "externalImageId",
                    "type": "STRING",
                    "description": "ID you want to assign to all the faces detected in the image.",
                    "default": ""
                },
                {
                    "name": "region",
                    "type": "SELECT",
                    "description": "AWS Region. Supported values: `us-east-1` (N. Virginia) and `us-west-2` (Oregon)",
                    "default": ""
                },
                {
                    "name": "detectionAttributes",
                    "type": "JSON",
                    "description": "JSON Array of Strings. Returns detailed attributes of indexed faces. By default, the operation returns a subset of the facial attributes.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/indexFacesIntoCollection\"\nquerystring = {\"apiKey\": \"\", \"image\": \"\", \"externalImageId\": \"\", \"region\": \"\", \"apiSecret\": \"\", \"detectionAttributes\": \"\", \"collectionId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/indexFacesIntoCollection\"\nquerystring = {\"apiKey\": \"\", \"image\": \"\", \"externalImageId\": \"\", \"region\": \"\", \"apiSecret\": \"\", \"detectionAttributes\": \"\", \"collectionId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "indexS3FacesIntoCollection",
            "url": "https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/indexS3FacesIntoCollection",
            "description": "Detects faces in the input image and adds them to the specified collection.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "imageS3Bucket",
                    "type": "STRING",
                    "description": "Name of the S3 bucket.",
                    "default": ""
                },
                {
                    "name": "region",
                    "type": "SELECT",
                    "description": "AWS Region. Supported values: `us-east-1` (N. Virginia) and `us-west-2` (Oregon)",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key obtained from Amazon",
                    "default": ""
                },
                {
                    "name": "collectionId",
                    "type": "STRING",
                    "description": "ID of an existing collection to which you want to add the faces that are detected in the input images.",
                    "default": ""
                },
                {
                    "name": "imageS3Name",
                    "type": "STRING",
                    "description": "S3 object key name.",
                    "default": ""
                },
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "API secret obtained from Amazon",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "imageS3Version",
                    "type": "STRING",
                    "description": "If the bucket is versioning enabled, you can specify the object version.",
                    "default": ""
                },
                {
                    "name": "externalImageId",
                    "type": "STRING",
                    "description": "ID you want to assign to all the faces detected in the image.",
                    "default": ""
                },
                {
                    "name": "detectionAttributes",
                    "type": "JSON",
                    "description": "JSON Array of Strings. Returns detailed attributes of indexed faces. By default, the operation returns a subset of the facial attributes.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/indexS3FacesIntoCollection\"\nquerystring = {\"imageS3Bucket\": \"\", \"imageS3Version\": \"\", \"region\": \"\", \"apiKey\": \"\", \"externalImageId\": \"\", \"collectionId\": \"\", \"imageS3Name\": \"\", \"apiSecret\": \"\", \"detectionAttributes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/indexS3FacesIntoCollection\"\nquerystring = {\"imageS3Bucket\": \"\", \"imageS3Version\": \"\", \"region\": \"\", \"apiKey\": \"\", \"externalImageId\": \"\", \"collectionId\": \"\", \"imageS3Name\": \"\", \"apiSecret\": \"\", \"detectionAttributes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchFaces",
            "url": "https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/searchFaces",
            "description": "For a given input face ID, searches the specified collection for matching faces. You get a face ID when you add a face to the collection using the IndexFaces operation. The operation compares the features of the input face with faces in the specified collection.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "API secret obtained from Amazon",
                    "default": ""
                },
                {
                    "name": "collectionId",
                    "type": "STRING",
                    "description": "ID of the collection to search.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key obtained from Amazon",
                    "default": ""
                },
                {
                    "name": "faceId",
                    "type": "STRING",
                    "description": "ID of a face to find matches for in the collection.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "faceMatchThreshold",
                    "type": "STRING",
                    "description": "Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.",
                    "default": ""
                },
                {
                    "name": "region",
                    "type": "SELECT",
                    "description": "AWS Region. Supported values: `us-east-1` (N. Virginia) and `us-west-2` (Oregon)",
                    "default": ""
                },
                {
                    "name": "maxFaces",
                    "type": "STRING",
                    "description": "Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/searchFaces\"\nquerystring = {\"apiSecret\": \"\", \"faceMatchThreshold\": \"\", \"collectionId\": \"\", \"apiKey\": \"\", \"faceId\": \"\", \"region\": \"\", \"maxFaces\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/searchFaces\"\nquerystring = {\"apiSecret\": \"\", \"faceMatchThreshold\": \"\", \"collectionId\": \"\", \"apiKey\": \"\", \"faceId\": \"\", \"region\": \"\", \"maxFaces\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchFacesByImage",
            "url": "https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/searchFacesByImage",
            "description": "For a given input image, first detects the largest face in the image, and then searches the specified collection for matching faces. The operation compares the features of the input face with faces in the specified collection.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "API secret obtained from Amazon",
                    "default": ""
                },
                {
                    "name": "collectionId",
                    "type": "STRING",
                    "description": "ID of the collection to search.",
                    "default": ""
                },
                {
                    "name": "image",
                    "type": "FILE",
                    "description": "File or url",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key obtained from Amazon",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "faceMatchThreshold",
                    "type": "STRING",
                    "description": "Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.",
                    "default": ""
                },
                {
                    "name": "region",
                    "type": "SELECT",
                    "description": "AWS Region. Supported values: `us-east-1` (N. Virginia) and `us-west-2` (Oregon)",
                    "default": ""
                },
                {
                    "name": "maxFaces",
                    "type": "NUMBER",
                    "description": "Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/searchFacesByImage\"\nquerystring = {\"apiSecret\": \"\", \"collectionId\": \"\", \"faceMatchThreshold\": \"\", \"region\": \"\", \"image\": \"\", \"apiKey\": \"\", \"maxFaces\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/searchFacesByImage\"\nquerystring = {\"apiSecret\": \"\", \"collectionId\": \"\", \"faceMatchThreshold\": \"\", \"region\": \"\", \"image\": \"\", \"apiKey\": \"\", \"maxFaces\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "searchFacesByS3Image",
            "url": "https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/searchFacesByS3Image",
            "description": "For a given input image, first detects the largest face in the image, and then searches the specified collection for matching faces. The operation compares the features of the input face with faces in the specified collection.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiSecret",
                    "type": "CREDENTIALS",
                    "description": "API secret obtained from Amazon",
                    "default": ""
                },
                {
                    "name": "collectionId",
                    "type": "STRING",
                    "description": "ID of the collection to search.",
                    "default": ""
                },
                {
                    "name": "imageS3Name",
                    "type": "STRING",
                    "description": "S3 object key name.",
                    "default": ""
                },
                {
                    "name": "region",
                    "type": "SELECT",
                    "description": "AWS Region. Supported values: `us-east-1` (N. Virginia) and `us-west-2` (Oregon)",
                    "default": ""
                },
                {
                    "name": "imageS3Bucket",
                    "type": "STRING",
                    "description": "Name of the S3 bucket.",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "API key obtained from Amazon",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "faceMatchThreshold",
                    "type": "STRING",
                    "description": "Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.",
                    "default": ""
                },
                {
                    "name": "maxFaces",
                    "type": "NUMBER",
                    "description": "Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.",
                    "default": ""
                },
                {
                    "name": "imageS3Version",
                    "type": "STRING",
                    "description": "If the bucket is versioning enabled, you can specify the object version.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/searchFacesByS3Image\"\nquerystring = {\"apiSecret\": \"\", \"collectionId\": \"\", \"faceMatchThreshold\": \"\", \"imageS3Name\": \"\", \"maxFaces\": \"\", \"imageS3Version\": \"\", \"region\": \"\", \"imageS3Bucket\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://AWSRekognitionserg-osipchukV1.p.rapidapi.com/searchFacesByS3Image\"\nquerystring = {\"apiSecret\": \"\", \"collectionId\": \"\", \"faceMatchThreshold\": \"\", \"imageS3Name\": \"\", \"maxFaces\": \"\", \"imageS3Version\": \"\", \"region\": \"\", \"imageS3Bucket\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"AWSRekognitionserg-osipchukV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}