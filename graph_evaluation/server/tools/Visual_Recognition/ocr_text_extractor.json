{
    "tool_name": "OCR Text Extractor",
    "tool_description": "Powerful image optical character recognition (OCR) for over 20 languages and with machine-readable-zone support. Perfect for a wide range of use-cases, including but not limited to receipt and invoice scanning as well as general image-based text extraction, the default service currently allows you to POST an image of up to 1MB for analysis. If you require larger images, or PDF scans, please contact us for invitation to a custom plan.",
    "title": "OCR Text Extractor",
    "pricing": "FREEMIUM",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 1183,
        "avgSuccessRate": 25,
        "popularityScore": 1.8,
        "__typename": "Score"
    },
    "home_url": "https://rapidapi.com/integraatio/api/ocr-text-extractor/",
    "host": "ocr-text-extractor.p.rapidapi.com",
    "api_list": [
        {
            "name": "List Language Options",
            "url": "https://ocr-text-extractor.p.rapidapi.com/languages/list-options",
            "description": "List the languages available (used in other endpoints)",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Accept",
                    "type": "STRING",
                    "description": "Accept Header",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ocr-text-extractor.p.rapidapi.com/languages/list-options\"\nquerystring = {\"Accept\": accept}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ocr-text-extractor.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": "ara",
            "headers": {
                "access-control-allow-credentials": "true",
                "access-control-allow-headers": "Content-Type, Allow, Authorization, Origin, X-Args, X-RapidAPI-Proxy-Secret, X-RapidAPI-User",
                "access-control-allow-methods": "GET, POST",
                "content-type": "application/json; charset=utf-8",
                "date": "Tue, 14 Jan 2020 16:55:36 GMT",
                "server": "RapidAPI-1.0.32",
                "set-cookie": [
                    "ss-pid=ed63ft764CZ8CbKDrERH; expires=Sat, 14 Jan 2040 16:55:36 GMT; path=/; secure; samesite=lax; httponly",
                    "ss-id=Lh5f1rh5zVpA0wshdtpN; path=/; secure; samesite=lax; httponly"
                ],
                "vary": "Accept",
                "x-powered-by": "ServiceStack/5.80 NetCore/Windows, ASP.NET",
                "x-rapidapi-region": "AWS - eu-central-1",
                "x-rapidapi-version": "1.0.32",
                "content-length": "145",
                "connection": "Close"
            },
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "List Language Options",
            "url": "https://ocr-text-extractor.p.rapidapi.com/languages/list-options",
            "description": "List the languages available (used in other endpoints)",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Accept",
                    "type": "STRING",
                    "description": "Accept Header",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ocr-text-extractor.p.rapidapi.com/languages/list-options\"\nquerystring = {\"Accept\": accept}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ocr-text-extractor.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "List Ocr Engine Options",
            "url": "https://ocr-text-extractor.p.rapidapi.com/ocr-engines/list-options",
            "description": "List the optical character engines available (used in other endpoints)",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "Accept",
                    "type": "STRING",
                    "description": "Accept Header",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ocr-text-extractor.p.rapidapi.com/ocr-engines/list-options\"\nquerystring = {\"Accept\": accept}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ocr-text-extractor.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "ocrEngine": "Version1",
                "description": "Fastest option, most comprehensive language support (including several Asian languages)"
            },
            "headers": {
                "access-control-allow-credentials": "true",
                "access-control-allow-headers": "Content-Type, Allow, Authorization, Origin, X-Args, X-RapidAPI-Proxy-Secret, X-RapidAPI-User",
                "access-control-allow-methods": "GET, POST",
                "content-type": "application/json; charset=utf-8",
                "date": "Sat, 18 Jan 2020 20:14:15 GMT",
                "server": "RapidAPI-1.0.32",
                "set-cookie": [
                    "ss-pid=rjHOLj6iLYnvVjj4ETrr; expires=Wed, 18 Jan 2040 20:14:15 GMT; path=/; secure; samesite=lax; httponly",
                    "ss-id=VwExROX4kmtp0InPmuyU; path=/; secure; samesite=lax; httponly"
                ],
                "vary": "Accept",
                "x-powered-by": "ServiceStack/5.80 NetCore/Windows, ASP.NET",
                "x-rapidapi-region": "AWS - eu-central-1",
                "x-rapidapi-version": "1.0.32",
                "content-length": "268",
                "connection": "Close"
            },
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Extract Text From Image File",
            "url": "https://ocr-text-extractor.p.rapidapi.com/detect-text-from-image-file",
            "description": "Perform OCR on an image file encoded in Base64 and return the text detected",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Accept",
                    "type": "STRING",
                    "description": "Accept Header",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ocr-text-extractor.p.rapidapi.com/detect-text-from-image-file\"\nquerystring = {\"Accept\": accept}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ocr-text-extractor.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "parsedResults": [
                    {
                        "textOverlay": {
                            "lines": [
                                {
                                    "words": [
                                        {
                                            "wordText": "RECEIPT",
                                            "left": 168,
                                            "top": 65,
                                            "height": 30,
                                            "width": 116
                                        }
                                    ],
                                    "maxHeight": 30,
                                    "minTop": 65
                                },
                                {
                                    "words": [
                                        {
                                            "wordText": "CUSTOMER",
                                            "left": 138,
                                            "top": 93,
                                            "height": 27,
                                            "width": 102
                                        },
                                        {
                                            "wordText": "COPY",
                                            "left": 255,
                                            "top": 109,
                                            "height": 19,
                                            "width": 52
                                        }
                                    ],
                                    "maxHeight": 36,
                                    "minTop": 93
                                },
                                {
                                    "words": [
                                        {
                                            "wordText": "XXXXXXXXXXX",
                                            "left": 136,
                                            "top": 118,
                                            "height": 32,
                                            "width": 170
                                        }
                                    ],
                                    "maxHeight": 32,
                                    "minTop": 118
                                },
                                {
                                    "words": [
                                        {
                                            "wordText": "125.50",
                                            "left": 189,
                                            "top": 165,
                                            "height": 22,
                                            "width": 77
                                        },
                                        {
                                            "wordText": "+",
                                            "left": 282,
                                            "top": 179,
                                            "height": 9,
                                            "width": 11
                                        }
                                    ],
                                    "maxHeight": 25,
                                    "minTop": 165
                                },
                                {
                                    "words": [
                                        {
                                            "wordText": "+",
                                            "left": 280,
                                            "top": 211,
                                            "height": 9,
                                            "width": 10
                                        }
                                    ],
                                    "maxHeight": 9,
                                    "minTop": 211
                                },
                                {
                                    "words": [
                                        {
                                            "wordText": "80.25+",
                                            "left": 195,
                                            "top": 227,
                                            "height": 25,
                                            "width": 92
                                        }
                                    ],
                                    "maxHeight": 25,
                                    "minTop": 227
                                },
                                {
                                    "words": [
                                        {
                                            "wordText": "12.50+",
                                            "left": 191,
                                            "top": 255,
                                            "height": 24,
                                            "width": 91
                                        }
                                    ],
                                    "maxHeight": 24,
                                    "minTop": 255
                                },
                                {
                                    "words": [
                                        {
                                            "wordText": "12.50+",
                                            "left": 188,
                                            "top": 284,
                                            "height": 24,
                                            "width": 91
                                        }
                                    ],
                                    "maxHeight": 24,
                                    "minTop": 284
                                },
                                {
                                    "words": [
                                        {
                                            "wordText": "+",
                                            "left": 263,
                                            "top": 326,
                                            "height": 10,
                                            "width": 10
                                        }
                                    ],
                                    "maxHeight": 10,
                                    "minTop": 326
                                },
                                {
                                    "words": [
                                        {
                                            "wordText": "29.95",
                                            "left": 178,
                                            "top": 343,
                                            "height": 21,
                                            "width": 63
                                        },
                                        {
                                            "wordText": "+",
                                            "left": 257,
                                            "top": 354,
                                            "height": 11,
                                            "width": 12
                                        }
                                    ],
                                    "maxHeight": 23,
                                    "minTop": 343
                                },
                                {
                                    "words": [
                                        {
                                            "wordText": "34.75+",
                                            "left": 174,
                                            "top": 372,
                                            "height": 23,
                                            "width": 92
                                        }
                                    ],
                                    "maxHeight": 23,
                                    "minTop": 372
                                },
                                {
                                    "words": [
                                        {
                                            "wordText": "45.00",
                                            "left": 198,
                                            "top": 198,
                                            "height": 21,
                                            "width": 65
                                        }
                                    ],
                                    "maxHeight": 21,
                                    "minTop": 198
                                },
                                {
                                    "words": [
                                        {
                                            "wordText": "130.00",
                                            "left": 171,
                                            "top": 313,
                                            "height": 22,
                                            "width": 75
                                        }
                                    ],
                                    "maxHeight": 22,
                                    "minTop": 313
                                },
                                {
                                    "words": [
                                        {
                                            "wordText": "12.50",
                                            "left": 171,
                                            "top": 400,
                                            "height": 19,
                                            "width": 62
                                        }
                                    ],
                                    "maxHeight": 19,
                                    "minTop": 400
                                },
                                {
                                    "words": [
                                        {
                                            "wordText": "-",
                                            "left": 249,
                                            "top": 414,
                                            "height": 2,
                                            "width": 11
                                        }
                                    ],
                                    "maxHeight": 2,
                                    "minTop": 414
                                },
                                {
                                    "words": [
                                        {
                                            "wordText": "SUB",
                                            "left": 88,
                                            "top": 433,
                                            "height": 10,
                                            "width": 23
                                        },
                                        {
                                            "wordText": "TOTAL",
                                            "left": 120,
                                            "top": 436,
                                            "height": 13,
                                            "width": 39
                                        }
                                    ],
                                    "maxHeight": 17,
                                    "minTop": 432
                                },
                                {
                                    "words": [
                                        {
                                            "wordText": "SALES",
                                            "left": 84,
                                            "top": 449,
                                            "height": 13,
                                            "width": 41
                                        },
                                        {
                                            "wordText": "TAX",
                                            "left": 133,
                                            "top": 454,
                                            "height": 11,
                                            "width": 24
                                        }
                                    ],
                                    "maxHeight": 16,
                                    "minTop": 449
                                },
                                {
                                    "words": [
                                        {
                                            "wordText": "570.95",
                                            "left": 204,
                                            "top": 446,
                                            "height": 11,
                                            "width": 49
                                        }
                                    ],
                                    "maxHeight": 11,
                                    "minTop": 446
                                },
                                {
                                    "words": [
                                        {
                                            "wordText": "45.60",
                                            "left": 210,
                                            "top": 463,
                                            "height": 12,
                                            "width": 40
                                        }
                                    ],
                                    "maxHeight": 12,
                                    "minTop": 463
                                },
                                {
                                    "words": [
                                        {
                                            "wordText": "$616,555",
                                            "left": 189,
                                            "top": 490,
                                            "height": 16,
                                            "width": 58
                                        }
                                    ],
                                    "maxHeight": 16,
                                    "minTop": 490
                                },
                                {
                                    "words": [
                                        {
                                            "wordText": "XXXXXXXXXXXXX",
                                            "left": 75,
                                            "top": 504,
                                            "height": 30,
                                            "width": 172
                                        }
                                    ],
                                    "maxHeight": 30,
                                    "minTop": 504
                                },
                                {
                                    "words": [
                                        {
                                            "wordText": "AMOUNT",
                                            "left": 78,
                                            "top": 479,
                                            "height": 14,
                                            "width": 50
                                        },
                                        {
                                            "wordText": "DUE",
                                            "left": 137,
                                            "top": 486,
                                            "height": 10,
                                            "width": 23
                                        }
                                    ],
                                    "maxHeight": 17,
                                    "minTop": 479
                                }
                            ],
                            "hasOverlay": true,
                            "message": "Total lines: 22"
                        },
                        "fileParseExitCode": "Success",
                        "parsedText": "RECEIPT\t\r\nCUSTOMER COPY\t\r\nXXXXXXXXXXX\t\r\n125.50 +\t\r\n45.00\t\r\n+\t\r\n80.25+\t\r\n12.50+\t\r\n12.50+\t\r\n130.00\t\r\n+\t\r\n29.95 +\t\r\n34.75+\t\r\n12.50\t-\t\r\nSUB TOTAL\t\r\nSALES TAX\t570.95\t\r\n45.60\t\r\nAMOUNT DUE\t\r\n$616,555\t\r\nXXXXXXXXXXXXX\t\r\n",
                        "errorMessage": "",
                        "errorDetails": ""
                    }
                ],
                "ocrExitCode": "ParseSuccess",
                "isErroredOnProcessing": false,
                "errorMessage": null,
                "errorDetails": null,
                "processingTimeInMilliseconds": "2237"
            },
            "headers": {
                "access-control-allow-credentials": "true",
                "access-control-allow-headers": "Content-Type, Allow, Authorization, Origin, X-Args, X-RapidAPI-Proxy-Secret, X-RapidAPI-User",
                "access-control-allow-methods": "GET, POST",
                "content-type": "application/json; charset=utf-8",
                "date": "Wed, 15 Jan 2020 06:51:13 GMT",
                "server": "RapidAPI-1.0.32",
                "set-cookie": [
                    "ss-pid=TWUaGDR3PfdTbTrztonQ; expires=Sun, 15 Jan 2040 06:51:13 GMT; path=/; secure; samesite=lax; httponly",
                    "ss-id=wlBgl1eJPiw0qVBcyhnT; path=/; secure; samesite=lax; httponly"
                ],
                "vary": "Accept",
                "x-powered-by": "ServiceStack/5.80 NetCore/Windows, ASP.NET",
                "x-rapidapi-region": "AWS - eu-central-1",
                "x-rapidapi-version": "1.0.32",
                "content-length": "3591",
                "connection": "Close"
            },
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Extract Text From Image File",
            "url": "https://ocr-text-extractor.p.rapidapi.com/detect-text-from-image-file",
            "description": "Perform OCR on an image file encoded in Base64 and return the text detected",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Accept",
                    "type": "STRING",
                    "description": "Accept Header",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ocr-text-extractor.p.rapidapi.com/detect-text-from-image-file\"\nquerystring = {\"Accept\": accept}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ocr-text-extractor.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 111,
            "body": "",
            "headers": "",
            "schema": ""
        },
        {
            "name": "Extract Text From Image URI",
            "url": "https://ocr-text-extractor.p.rapidapi.com/detect-text-from-image-uri",
            "description": "Perform OCR on an image located at designated URI and return the text detected",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "Accept",
                    "type": "STRING",
                    "description": "Accept Header",
                    "default": "string"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ocr-text-extractor.p.rapidapi.com/detect-text-from-image-uri\"\nquerystring = {\"Accept\": accept}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ocr-text-extractor.p.rapidapi.com\"\n}\n\nresponse = requests.post(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode": 200,
            "body": {
                "parsedResults": [
                    {
                        "textOverlay": {
                            "lines": [],
                            "hasOverlay": true,
                            "message": "Total lines: 0"
                        },
                        "fileParseExitCode": "Success",
                        "parsedText": "Google",
                        "errorMessage": "",
                        "errorDetails": ""
                    }
                ],
                "ocrExitCode": "ParseSuccess",
                "isErroredOnProcessing": false,
                "errorMessage": null,
                "errorDetails": null,
                "processingTimeInMilliseconds": "1445"
            },
            "headers": {
                "access-control-allow-credentials": "true",
                "access-control-allow-headers": "Content-Type, Allow, Authorization, Origin, X-Args, X-RapidAPI-Proxy-Secret, X-RapidAPI-User",
                "access-control-allow-methods": "GET, POST",
                "content-type": "application/json; charset=utf-8",
                "date": "Wed, 15 Jan 2020 06:56:36 GMT",
                "server": "RapidAPI-1.0.32",
                "set-cookie": [
                    "ss-pid=vhkXDNl3VqIun10Pcwbm; expires=Sun, 15 Jan 2040 06:56:36 GMT; path=/; secure; samesite=lax; httponly",
                    "ss-id=mFFlvM7lXBH1NagxZukf; path=/; secure; samesite=lax; httponly"
                ],
                "vary": "Accept",
                "x-powered-by": "ServiceStack/5.80 NetCore/Windows, ASP.NET",
                "x-rapidapi-region": "AWS - eu-west-1",
                "x-rapidapi-version": "1.0.32",
                "content-length": "318",
                "connection": "Close"
            },
            "schema": {
                "type": "object",
                "properties": {
                    "parsedResults": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "textOverlay": {
                                    "type": "object",
                                    "properties": {
                                        "lines": {
                                            "type": "array"
                                        },
                                        "hasOverlay": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "fileParseExitCode": {
                                    "type": "string"
                                },
                                "parsedText": {
                                    "type": "string"
                                },
                                "errorMessage": {
                                    "type": "string"
                                },
                                "errorDetails": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "ocrExitCode": {
                        "type": "string"
                    },
                    "isErroredOnProcessing": {
                        "type": "boolean"
                    },
                    "errorMessage": {
                        "type": "null"
                    },
                    "errorDetails": {
                        "type": "null"
                    },
                    "processingTimeInMilliseconds": {
                        "type": "string"
                    }
                }
            }
        },
        {
            "name": "Extract Text From Image File",
            "url": "https://ocr-text-extractor.p.rapidapi.com/detect-text-from-image-file",
            "description": "Perform OCR on an image file encoded in Base64 and return the text detected",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ocr-text-extractor.p.rapidapi.com/detect-text-from-image-file\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ocr-text-extractor.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ocr-text-extractor.p.rapidapi.com/detect-text-from-image-file\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ocr-text-extractor.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "Extract Text From Image URI",
            "url": "https://ocr-text-extractor.p.rapidapi.com/detect-text-from-image-uri",
            "description": "Perform OCR on an image located at designated URI and return the text detected",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ocr-text-extractor.p.rapidapi.com/detect-text-from-image-uri\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ocr-text-extractor.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ocr-text-extractor.p.rapidapi.com/detect-text-from-image-uri\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ocr-text-extractor.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "parsedResults": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "textOverlay": {
                                    "type": "object",
                                    "properties": {
                                        "lines": {
                                            "type": "array"
                                        },
                                        "hasOverlay": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "fileParseExitCode": {
                                    "type": "string"
                                },
                                "parsedText": {
                                    "type": "string"
                                },
                                "errorMessage": {
                                    "type": "string"
                                },
                                "errorDetails": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "ocrExitCode": {
                        "type": "string"
                    },
                    "isErroredOnProcessing": {
                        "type": "boolean"
                    },
                    "errorMessage": {
                        "type": "null"
                    },
                    "errorDetails": {
                        "type": "null"
                    },
                    "processingTimeInMilliseconds": {
                        "type": "string"
                    }
                }
            }
        }
    ]
}