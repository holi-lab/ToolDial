{
    "product_id": "api_ac5d03dc-813f-4083-9d68-3c213b90b2c7",
    "tool_description": "The all-in-one face recognition API with high accuracy for face alignment, similarity, and liveness.",
    "home_url": "https://rapidapi.com/alchera-alchera-default/api/face-recognition-detection-similarity-liveness/",
    "name": "Face Recognition (detection, similarity, liveness)",
    "title": "Face Recognition (detection, similarity, liveness)",
    "pricing": "FREEMIUM",
    "tool_name": "Face Recognition (detection, similarity, liveness)",
    "score": {
        "avgServiceLevel": 50,
        "avgLatency": 163,
        "avgSuccessRate": 50,
        "popularityScore": 8.6,
        "__typename": "Score"
    },
    "host": "face-recognition-detection-similarity-liveness.p.rapidapi.com",
    "api_list": [
        {
            "name": "Face Similarity",
            "url": "https://face-recognition-detection-similarity-liveness.p.rapidapi.com/similarity/v2",
            "description": "Face similarity is the determination of the degree to which two faces calculated by a specific algorithm are judged to be the same person.\nHigher Similarity means face of two images are more similar.\n\n\nRefer to [API Doc](https://rapidapi.com/alchera-alchera-default/api/face-recognition-detection-similarity-liveness/details) for details",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image_a",
                    "type": "BINARY",
                    "description": "Add Jpg or Png image of a face to compare",
                    "default": ""
                },
                {
                    "name": "image_b",
                    "type": "BINARY",
                    "description": "Add Jpg or Png image of a face to compare",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://face-recognition-detection-similarity-liveness.p.rapidapi.com/similarity/v2\"\nquerystring = {\"image_a\": \"\", \"image_b\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"face-recognition-detection-similarity-liveness.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://face-recognition-detection-similarity-liveness.p.rapidapi.com/similarity/v2\"\nquerystring = {\"image_a\": \"\", \"image_b\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"face-recognition-detection-similarity-liveness.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Face Alignment",
            "url": "https://face-recognition-detection-similarity-liveness.p.rapidapi.com/alignedfaces",
            "description": "Detects faces from the given image, and crops it into 112(width)*112(height)*3(bgr) image, and returns as base64 encoded string.\nPosition and size of each faces are returned too.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://face-recognition-detection-similarity-liveness.p.rapidapi.com/alignedfaces\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"face-recognition-detection-similarity-liveness.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://face-recognition-detection-similarity-liveness.p.rapidapi.com/alignedfaces\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"face-recognition-detection-similarity-liveness.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Face Detection",
            "url": "https://face-recognition-detection-similarity-liveness.p.rapidapi.com/faces",
            "description": "Detects and returns positions, size and landmark points of all faces in a image.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://face-recognition-detection-similarity-liveness.p.rapidapi.com/faces\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"face-recognition-detection-similarity-liveness.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://face-recognition-detection-similarity-liveness.p.rapidapi.com/faces\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"face-recognition-detection-similarity-liveness.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Face Liveness",
            "url": "https://face-recognition-detection-similarity-liveness.p.rapidapi.com/liveness/multiframe",
            "description": "Face Liveness is a process of checking the authenticity of a face by sending four images taken sequentially (multi frame liveness).\nA compressed `.zip` file of 4 consecutively taken face image is required.\n\nRefer to [API Doc](https://rapidapi.com/alchera-alchera-default/api/face-recognition-detection-similarity-liveness/details) for details",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "images",
                    "type": "BINARY",
                    "description": ".zip file of 4 consecutively taken images \nfour files MUST be names `1`, `2`, `3`, `4` in order they were taken.\nfour files MUST be at the top dir of compressed file\nA clear and whole face MUST be in the image\n\n- recommended time gap between images: 16~100ms",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://face-recognition-detection-similarity-liveness.p.rapidapi.com/liveness/multiframe\"\nquerystring = {\"images\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"face-recognition-detection-similarity-liveness.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://face-recognition-detection-similarity-liveness.p.rapidapi.com/liveness/multiframe\"\nquerystring = {\"images\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"face-recognition-detection-similarity-liveness.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}