{
    "product_id": "api_1e7451f7-8747-4592-b7df-23cfacb0cd2d",
    "tool_description": "Using cutting-edge AI technology, our API offers comprehensive facial analysis for a given image, providing detailed information about the detected face, including facial position, facial attributes (such as gender, age, expression, attractiveness, eyewear, hairstyle, mask presence, and pose), as well as facial quality metrics (including overall quality score, blur score, lighting score, and facial feature occlusion score).",
    "home_url": "https://rapidapi.com/ailabapi-ailabapi-default/api/face-analyzer/",
    "name": "Face Analyzer",
    "title": "Face Analyzer",
    "pricing": "FREEMIUM",
    "tool_name": "Face Analyzer",
    "score": {
        "avgServiceLevel": 99,
        "avgLatency": 1580,
        "avgSuccessRate": 90,
        "popularityScore": 9.4,
        "__typename": "Score"
    },
    "host": "face-analyzer.p.rapidapi.com",
    "api_list": [
        {
            "name": "Face Analyzer",
            "url": "https://face-analyzer.p.rapidapi.com/facebody/analysis/detect-face-attributes",
            "description": "Face Analyzer",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image",
                    "type": "BINARY",
                    "description": "- **Image format**: `JPG` `JPEG` `PNG` `BMP`\n- **Image size**: No more than 5 MB.\n- **Image resolution**: Less than 2000x2000px.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "face_attributes_type",
                    "type": "STRING",
                    "description": "Whether to return attributes such as age, gender, and emotions. \nProvide attribute information for up to the largest 5 faces detected. For faces beyond the first 5 (i.e., the 6th face and beyond), their attribute information may not be meaningful or available.\n\n- **`None`**: No need to return.\n- **`Age`**: Return age information.\n- **`Beauty`**: Return beauty information.\n- **`Emotion`**: Return emotion information.\n- **`Eye`**: Return eye information.\n- **`Eyebrow`**: Return eyebrow information.\n- **`Gender`**: Return gender information.\n- **`Hair`**: Return hair information.\n- **`Hat`**: Return hat information.\n- **`Headpose`**: Return head pose information.\n- **`Mask`**: Return mask information.\n- **`Mouth`**: Return mouth information.\n- **`Moustache`**: Return moustache information.\n- **`Nose`**: Return nose information.\n- **`Shape`**: Return face shape information.\n- **`Skin`**: Return skin color information.\n- **`Smile`**: Return smile intensity.",
                    "default": ""
                },
                {
                    "name": "max_face_num",
                    "type": "NUMBER",
                    "description": "The maximum number of faces processed. When set to 1, only the largest face in the image is detected. A smaller value leads to faster processing speed.\n\n- **`Scope`**: 1~120",
                    "default": ""
                },
                {
                    "name": "need_rotate_detection",
                    "type": "ENUM",
                    "description": "Whether to enable image rotation recognition support. When the face in the picture is rotated and there is no exif information in the picture, if you don't turn on the picture rotation recognition support, you can't detect and recognize the face in the picture correctly. If you are sure that the picture contains exif information or you are sure that the face in the input picture will not be rotated, please do not turn on this parameter. If this parameter is turned on, the overall time required may increase by hundreds of milliseconds.\n\n- **`0`**: Close.\n- **`1`**: Open.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://face-analyzer.p.rapidapi.com/facebody/analysis/detect-face-attributes\"\nquerystring = {\"face_attributes_type\": \"\", \"image\": \"\", \"max_face_num\": \"\", \"need_rotate_detection\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"face-analyzer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://face-analyzer.p.rapidapi.com/facebody/analysis/detect-face-attributes\"\nquerystring = {\"face_attributes_type\": \"\", \"image\": \"\", \"max_face_num\": \"\", \"need_rotate_detection\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"face-analyzer.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "request_id": {
                    "type": "string",
                    "required": false,
                    "description": "Request ID."
                },
                "log_id": {
                    "type": "string",
                    "required": false,
                    "description": "Log ID."
                },
                "error_code": {
                    "type": "integer",
                    "required": false,
                    "description": "Error Code."
                },
                "error_code_str": {
                    "type": "string",
                    "required": false,
                    "description": "Error Code."
                },
                "error_msg": {
                    "type": "string",
                    "required": false,
                    "description": "Error Message."
                }
            }
        }
    ]
}