{
    "product_id": "api_8ae6d3f7-8690-4345-a291-0edd4f1087e5",
    "tool_description": "Based on AI algorithm to optimize the beauty of the face in the image, it supports a variety of effects such as peeling, removing dark circles, lines, and whitening.",
    "home_url": "https://rapidapi.com/ailabapi-ailabapi-default/api/face-beauty1/",
    "name": "Face Beauty",
    "title": "Face Beauty",
    "pricing": "FREEMIUM",
    "tool_name": "Face Beauty",
    "score": null,
    "host": "face-beauty1.p.rapidapi.com",
    "api_list": [
        {
            "name": "Face Beauty",
            "url": "https://face-beauty1.p.rapidapi.com/face/editing/face-beauty",
            "description": "Face Beauty",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image",
                    "type": "BINARY",
                    "description": "- **Image format**: `JPEG` `JPG` `PNG` `BMP`\n- **Image size**: No more than 3 MB.\n- **Image resolution**: Larger than 10x10px, smaller than 2000x2000px.\n- **Image quality recommendation**: Suitable for portrait images of most skin types, with average results for images containing scenes with more severe discoloration, acne, or low exposure.",
                    "default": ""
                },
                {
                    "name": "sharp",
                    "type": "NUMBER",
                    "description": "The degree of sharpening (sharpness).\n- Scope: [0, 1.0]",
                    "default": "0.5"
                },
                {
                    "name": "white",
                    "type": "NUMBER",
                    "description": "Whitening level.\n- Scope: [0, 1.0]",
                    "default": "0.5"
                },
                {
                    "name": "smooth",
                    "type": "NUMBER",
                    "description": "Smoothness.\n- Scope: [0, 1.0]",
                    "default": "0.5"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://face-beauty1.p.rapidapi.com/face/editing/face-beauty\"\nquerystring = {\"image\": \"\", \"sharp\": \"0.5\", \"white\": \"0.5\", \"smooth\": \"0.5\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"face-beauty1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://face-beauty1.p.rapidapi.com/face/editing/face-beauty\"\nquerystring = {\"image\": \"\", \"sharp\": \"0.5\", \"white\": \"0.5\", \"smooth\": \"0.5\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"face-beauty1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "request_id": {
                    "type": "string",
                    "required": false,
                    "description": "Request ID."
                },
                "log_id": {
                    "type": "string",
                    "required": false,
                    "description": "Log ID."
                },
                "error_code": {
                    "type": "integer",
                    "required": false,
                    "description": "Error Code."
                },
                "error_code_str": {
                    "type": "string",
                    "required": false,
                    "description": "Error Code."
                },
                "error_msg": {
                    "type": "string",
                    "required": false,
                    "description": "Error Message."
                },
                "data": {
                    "type": "Object",
                    "required": false,
                    "description": "The content of the result data returned.",
                    "properties": {
                        "image_url": {
                            "type": "String",
                            "required": false,
                            "description": "Resulting image URL address. **Note**: The URL address is a temporary address, valid for 1 day, after which it will not be accessible."
                        }
                    }
                }
            }
        }
    ]
}