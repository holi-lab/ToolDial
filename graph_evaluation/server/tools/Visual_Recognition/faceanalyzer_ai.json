{
    "product_id": "api_f3ff6ddf-68f0-4d15-a1c3-7ed0facfda8f",
    "tool_description": "Advanced facial analysis for face detection, age estimation, emotion analysis, celebrities identification, face comparison, face re-identification and more.",
    "home_url": "https://rapidapi.com/ai-engine-ai-engine-default/api/faceanalyzer-ai/",
    "name": "FaceAnalyzer AI",
    "title": "FaceAnalyzer AI",
    "pricing": "FREEMIUM",
    "tool_name": "FaceAnalyzer AI",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 1399,
        "avgSuccessRate": 100,
        "popularityScore": 9.3,
        "__typename": "Score"
    },
    "host": "faceanalyzer-ai.p.rapidapi.com",
    "api_list": [
        {
            "name": "search-face-in-repository",
            "url": "https://faceanalyzer-ai.p.rapidapi.com/search-face-in-repository",
            "description": "For a given input image, first detects the largest face in the image, and then searches in the specified repository for matching faces",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "repository_id",
                    "type": "STRING",
                    "description": "ID of the repository to search.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "The input image url",
                    "default": "https://openmediadata.s3.eu-west-3.amazonaws.com/face.jpg"
                },
                {
                    "name": "image",
                    "type": "BINARY",
                    "description": "The input image file",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://faceanalyzer-ai.p.rapidapi.com/search-face-in-repository\"\nquerystring = {\"url\": \"https://openmediadata.s3.eu-west-3.amazonaws.com/face.jpg\", \"repository_id\": \"\", \"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"faceanalyzer-ai.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://faceanalyzer-ai.p.rapidapi.com/search-face-in-repository\"\nquerystring = {\"url\": \"https://openmediadata.s3.eu-west-3.amazonaws.com/face.jpg\", \"repository_id\": \"\", \"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"faceanalyzer-ai.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "delete-face-from-repository",
            "url": "https://faceanalyzer-ai.p.rapidapi.com/delete-face-from-repository",
            "description": "Deletes faces from a facial repository. You specify a repository ID and an array of face IDs to remove from the repository.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "face_ids",
                    "type": "ARRAY",
                    "description": "An array of face IDs to delete.",
                    "default": ""
                },
                {
                    "name": "repository_id",
                    "type": "STRING",
                    "description": "Repository from which to remove the specific faces.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://faceanalyzer-ai.p.rapidapi.com/delete-face-from-repository\"\nquerystring = {\"face_ids\": \"\", \"repository_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"faceanalyzer-ai.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://faceanalyzer-ai.p.rapidapi.com/delete-face-from-repository\"\nquerystring = {\"face_ids\": \"\", \"repository_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"faceanalyzer-ai.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "delete-facial-repository",
            "url": "https://faceanalyzer-ai.p.rapidapi.com/delete-facial-repository",
            "description": "Deletes the specified facial repository. Note that this operation removes all faces in the repository",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "repository_id",
                    "type": "STRING",
                    "description": "ID of the repository to delete.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://faceanalyzer-ai.p.rapidapi.com/delete-facial-repository\"\nquerystring = {\"repository_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"faceanalyzer-ai.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://faceanalyzer-ai.p.rapidapi.com/delete-facial-repository\"\nquerystring = {\"repository_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"faceanalyzer-ai.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "create-facial-repository",
            "url": "https://faceanalyzer-ai.p.rapidapi.com/create-facial-repository",
            "description": "Creates a facial repository. You can add faces to the repository using the **save-face-in-repository** endpoint.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "repository_id",
                    "type": "STRING",
                    "description": "ID for the repository that you are creating.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://faceanalyzer-ai.p.rapidapi.com/create-facial-repository\"\nquerystring = {\"repository_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"faceanalyzer-ai.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://faceanalyzer-ai.p.rapidapi.com/create-facial-repository\"\nquerystring = {\"repository_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"faceanalyzer-ai.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "compare-faces",
            "url": "https://faceanalyzer-ai.p.rapidapi.com/compare-faces",
            "description": "Compares a face in the source input image with each of the 100 largest faces detected in the target input image. If the source image contains multiple faces, the model detects the largest face and compares it with each face detected in the target image.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "source_image_url",
                    "type": "STRING",
                    "description": "The source image url",
                    "default": "https://openmediadata.s3.eu-west-3.amazonaws.com/face.jpg"
                },
                {
                    "name": "target_image",
                    "type": "BINARY",
                    "description": "The target image file",
                    "default": ""
                },
                {
                    "name": "source_image",
                    "type": "BINARY",
                    "description": "The source image file",
                    "default": ""
                },
                {
                    "name": "target_image_url",
                    "type": "STRING",
                    "description": "The target image url",
                    "default": "https://openmediadata.s3.eu-west-3.amazonaws.com/face.jpg"
                }
            ],
            "code": "import requests\n\nurl = \"https://faceanalyzer-ai.p.rapidapi.com/compare-faces\"\nquerystring = {\"source_image_url\": \"https://openmediadata.s3.eu-west-3.amazonaws.com/face.jpg\", \"target_image\": \"\", \"source_image\": \"\", \"target_image_url\": \"https://openmediadata.s3.eu-west-3.amazonaws.com/face.jpg\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"faceanalyzer-ai.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://faceanalyzer-ai.p.rapidapi.com/compare-faces\"\nquerystring = {\"source_image_url\": \"https://openmediadata.s3.eu-west-3.amazonaws.com/face.jpg\", \"target_image\": \"\", \"source_image\": \"\", \"target_image_url\": \"https://openmediadata.s3.eu-west-3.amazonaws.com/face.jpg\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"faceanalyzer-ai.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "celebrity-recognition",
            "url": "https://faceanalyzer-ai.p.rapidapi.com/celebrity-recognition",
            "description": "Recognize celebrities faces within an image that is provided as input.\nIt lists the recognized celebrities in the celebritiesFaces array and any unrecognized faces in the unrecognizedFaces array.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "image",
                    "type": "BINARY",
                    "description": "The input image file",
                    "default": ""
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "The input image url",
                    "default": "https://openmediadata.s3.eu-west-3.amazonaws.com/face.jpg"
                }
            ],
            "code": "import requests\n\nurl = \"https://faceanalyzer-ai.p.rapidapi.com/celebrity-recognition\"\nquerystring = {\"image\": \"\", \"url\": \"https://openmediadata.s3.eu-west-3.amazonaws.com/face.jpg\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"faceanalyzer-ai.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://faceanalyzer-ai.p.rapidapi.com/celebrity-recognition\"\nquerystring = {\"image\": \"\", \"url\": \"https://openmediadata.s3.eu-west-3.amazonaws.com/face.jpg\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"faceanalyzer-ai.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "face-analysis",
            "url": "https://faceanalyzer-ai.p.rapidapi.com/faceanalysis",
            "description": "Detects faces within an image that is provided as input, for each face detected, the operation returns face details. These details include: a bounding box of the face, facial features (emotions, ages ...) and facial landmarks.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "image",
                    "type": "BINARY",
                    "description": "The input image file",
                    "default": ""
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "The input image url",
                    "default": "https://openmediadata.s3.eu-west-3.amazonaws.com/face.jpg"
                }
            ],
            "code": "import requests\n\nurl = \"https://faceanalyzer-ai.p.rapidapi.com/faceanalysis\"\nquerystring = {\"image\": \"\", \"url\": \"https://openmediadata.s3.eu-west-3.amazonaws.com/face.jpg\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"faceanalyzer-ai.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://faceanalyzer-ai.p.rapidapi.com/faceanalysis\"\nquerystring = {\"image\": \"\", \"url\": \"https://openmediadata.s3.eu-west-3.amazonaws.com/face.jpg\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"faceanalyzer-ai.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "save-faces-in-repository",
            "url": "https://faceanalyzer-ai.p.rapidapi.com/save-face-in-repository",
            "description": "Detects faces in the input image and adds them to the specified facial repository.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "external_id",
                    "type": "STRING",
                    "description": "The ID you want to assign to all the faces detected in the image.",
                    "default": ""
                },
                {
                    "name": "repository_id",
                    "type": "STRING",
                    "description": "The ID of an existing repository to which you want to add the faces that are detected in the input images.",
                    "default": ""
                },
                {
                    "name": "max_faces",
                    "type": "NUMBER",
                    "description": "The maximum number of faces to save, The value of max_faces must be greater than or equal to 1.",
                    "default": "1"
                }
            ],
            "optional_parameters": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "The input image url",
                    "default": "https://openmediadata.s3.eu-west-3.amazonaws.com/face.jpg"
                },
                {
                    "name": "image",
                    "type": "BINARY",
                    "description": "The input image file",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://faceanalyzer-ai.p.rapidapi.com/save-face-in-repository\"\nquerystring = {\"external_id\": \"\", \"url\": \"https://openmediadata.s3.eu-west-3.amazonaws.com/face.jpg\", \"repository_id\": \"\", \"image\": \"\", \"max_faces\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"faceanalyzer-ai.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://faceanalyzer-ai.p.rapidapi.com/save-face-in-repository\"\nquerystring = {\"external_id\": \"\", \"url\": \"https://openmediadata.s3.eu-west-3.amazonaws.com/face.jpg\", \"repository_id\": \"\", \"image\": \"\", \"max_faces\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"faceanalyzer-ai.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}