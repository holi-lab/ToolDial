{
    "product_id": "api_dcd1f2b2-529d-4c27-84d4-85ed732b6e37",
    "tool_description": "Recognite vehicle object in images.",
    "home_url": "https://rapidapi.com/ai-box-ai-box-default/api/vehicle-recognition/",
    "name": "Vehicle Recognition",
    "title": "Vehicle Recognition",
    "pricing": "FREEMIUM",
    "tool_name": "Vehicle Recognition",
    "score": {
        "avgServiceLevel": 84,
        "avgLatency": 6985,
        "avgSuccessRate": 68,
        "popularityScore": 8.9,
        "__typename": "Score"
    },
    "host": "vehicle-recognition.p.rapidapi.com",
    "api_list": [
        {
            "name": "Vehicle Recognition",
            "url": "https://vehicle-recognition.p.rapidapi.com/detection/vehicle",
            "description": "Vehicle types including bicycle, car, motorbike, aeroplane, bus, train, truck, boat.\n### Visit our [demo site](https://core-api.net/detection/default.html?type=vehicle)\n![Sample result](https://core-api.net/images/object-detection/vehicle.jpg)",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://vehicle-recognition.p.rapidapi.com/detection/vehicle\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"vehicle-recognition.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://vehicle-recognition.p.rapidapi.com/detection/vehicle\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"vehicle-recognition.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        }
    ]
}