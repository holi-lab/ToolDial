{
    "product_id": "api_0234d4ee-c3f6-4dfd-bbd4-cc8635766ee9",
    "tool_description": "Based on computer vision technologies such as 3D face and adversarial generative networks, the image fusion operation is performed on the portraits in the stencil image and the fusion image, and the fused image is returned.",
    "home_url": "https://rapidapi.com/ailabapi-ailabapi-default/api/face-fusion1/",
    "name": "Face Fusion",
    "title": "Face Fusion",
    "pricing": "FREEMIUM",
    "tool_name": "Face Fusion",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 1380,
        "avgSuccessRate": 16,
        "popularityScore": 2.1,
        "__typename": "Score"
    },
    "host": "face-fusion1.p.rapidapi.com",
    "api_list": [
        {
            "name": "Face Fusion",
            "url": "https://face-fusion1.p.rapidapi.com/huoshan/facebody/merge",
            "description": "Face Fusion",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image_target",
                    "type": "BINARY",
                    "description": "Target image.\n- **Image format**: `JPEG` `JPG` `BMP` `PNG`\n- **Image size**: No more than 4 MB.\n- **Image resolution**: Larger than 50x50px, smaller than 2048x2048px.\n- **Face pixel size**: To ensure the fusion effect, it is recommended that the minimum value of the side length of the face box (square) in the image is not less than 200px.\n- **Face quality**: The higher the face quality, the better the fusion effect.\n- **Factors affecting face quality include**: occlusion of the five facial features, improper lighting (bright light, dark light, backlighting), excessive face angle (recommended yaw \u2264 \u00b120\u00b0, pitch \u2264 \u00b120\u00b0), etc.\n- Black and white images are not supported.",
                    "default": ""
                },
                {
                    "name": "image_template",
                    "type": "BINARY",
                    "description": "Template images.\n- **Image format**: `JPG` `JPEG` \n- **Image size**: No more than 4 MB. \n- **Image resolution**: Larger than 200x200px, smaller than 1280x1280px. \n- **Note that for special face materials, such as cartoon style images with large eyes, the original key point results will be deviated, and should be made accurate by dragging the position in the configuration tool. Most normal images are already very accurate and do not need to be adjusted. \n- **The pixel area of the face in the image should not be too small (at least 200x200px, too small to change the face will not be clear), nor too large (the pixel size of the face area and speed is positively correlated, too large will affect the server speed and increase costs). \n- **Pay attention to the quality of the material, make sure the face is clear enough, there should be no noise caused by compression, otherwise it will reduce the quality of the face replacement result. \n- **For better results, the face of the material should be as positive as possible, with the highest yaw angle required (within plus or minus 10 degrees recommended), followed by the pitch angle (within plus or minus 20 degrees recommended), and the roll angle (within plus or minus 30 degrees).",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://face-fusion1.p.rapidapi.com/huoshan/facebody/merge\"\nquerystring = {\"image_target\": \"\", \"image_template\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"face-fusion1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://face-fusion1.p.rapidapi.com/huoshan/facebody/merge\"\nquerystring = {\"image_target\": \"\", \"image_template\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"face-fusion1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "request_id": {
                    "type": "string",
                    "required": false,
                    "description": "Request ID."
                },
                "log_id": {
                    "type": "string",
                    "required": false,
                    "description": "Log ID."
                },
                "error_code": {
                    "type": "integer",
                    "required": false,
                    "description": "Error Code."
                },
                "error_code_str": {
                    "type": "string",
                    "required": false,
                    "description": "Error Code."
                },
                "error_msg": {
                    "type": "string",
                    "required": false,
                    "description": "Error Message."
                },
                "data": {
                    "type": "Object",
                    "required": false,
                    "description": "The content of the result data returned.",
                    "properties": {
                        "image": {
                            "type": "String",
                            "required": false,
                            "description": "The result image, returning the Base64 encoding of the image."
                        }
                    }
                }
            }
        }
    ]
}