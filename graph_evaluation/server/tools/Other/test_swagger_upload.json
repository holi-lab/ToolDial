{
    "product_id": "api_57059049-8804-4f5b-b2f0-e5d8bc6a59c5",
    "tool_description": "A sample [bypass-filter-test](javascript:alert('test')) API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification",
    "home_url": "https://rapidapi.com/reaudit/api/test_swagger_upload/",
    "name": "test_swagger_upload",
    "title": "test_swagger_upload",
    "pricing": "FREE",
    "tool_name": "test_swagger_upload",
    "score": null,
    "host": "test_swagger_upload.p.rapidapi.com",
    "api_list": [
        {
            "name": "addPet",
            "url": "https://test_swagger_upload.p.rapidapi.com/pets",
            "description": "Creates a new pet in the store.  Duplicates are allowed",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                },
                {
                    "name": "tag",
                    "type": "STRING",
                    "description": "",
                    "default": "string"
                }
            ],
            "code": "import requests\n\nurl = \"https://test_swagger_upload.p.rapidapi.com/pets\"\nquerystring = {\"name\": \"string\", \"tag\": \"string\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test_swagger_upload.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://test_swagger_upload.p.rapidapi.com/pets\"\nquerystring = {\"name\": \"string\", \"tag\": \"string\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test_swagger_upload.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "get": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array"
                    },
                    "errors": {
                        "type": "array"
                    },
                    "results": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    ]
}