{
    "product_id": "api_f775bd12-3116-4523-b88d-6f7f5c40cf92",
    "tool_description": "GroupDocs.Signature Cloud is a REST API that enables you to create, verify, search, and manipulate various types of signatures for the cloud-based documents.",
    "home_url": "https://rapidapi.com/groupdocscloud/api/groupdocs-signature-cloud/",
    "name": "GroupDocs.Signature Cloud",
    "title": "GroupDocs.Signature Cloud",
    "pricing": "FREEMIUM",
    "tool_name": "GroupDocs.Signature Cloud",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 783,
        "avgSuccessRate": 0,
        "popularityScore": 0.2,
        "__typename": "Score"
    },
    "host": "groupdocs-signature-cloud.p.rapidapi.com",
    "api_list": [
        {
            "name": "GetFileVersions",
            "url": "https://groupdocs-signature-cloud.p.rapidapi.com/signature/storage/version/{path}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "File path e.g. '/file.ext'",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/storage/version/{path}\"\nquerystring = {\"storageName\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/storage/version/{path}\"\nquerystring = {\"storageName\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "requestId": "326d0306-ee22-424e-921e-f20146cfc3cf",
                "error": {
                    "code": "error",
                    "message": "ClientId is undefined. Please check authorization.",
                    "description": "Operation Failed. General Error.",
                    "dateTime": "2023-06-16T16:19:10.8069673Z",
                    "innerError": null
                }
            },
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "File versions FileVersion.",
                "properties": {
                    "Value": {
                        "description": "File versions FileVersion.",
                        "items": {
                            "additionalProperties": false,
                            "allOf": [
                                {
                                    "additionalProperties": false,
                                    "description": "File or folder information",
                                    "properties": {
                                        "IsFolder": {
                                            "description": "True if it is a folder.",
                                            "type": "boolean"
                                        },
                                        "ModifiedDate": {
                                            "description": "File or folder last modified DateTime.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "File or folder name.",
                                            "type": "string"
                                        },
                                        "Path": {
                                            "description": "File or folder path.",
                                            "type": "string"
                                        },
                                        "Size": {
                                            "description": "File or folder size.",
                                            "format": "int64",
                                            "maximum": 9223372036854776000,
                                            "minimum": -9223372036854776000,
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "IsFolder",
                                        "Size"
                                    ],
                                    "type": "object"
                                },
                                {
                                    "additionalProperties": false,
                                    "description": "File Version",
                                    "properties": {
                                        "IsLatest": {
                                            "description": "Specifies whether the file is (true) or is not (false) the latest version of an file.",
                                            "type": "boolean"
                                        },
                                        "VersionId": {
                                            "description": "File Version ID.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "IsLatest"
                                    ],
                                    "type": "object"
                                }
                            ],
                            "description": "File Version",
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetDiscUsage",
            "url": "https://groupdocs-signature-cloud.p.rapidapi.com/signature/storage/disc",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/storage/disc\"\nquerystring = {\"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/storage/disc\"\nquerystring = {\"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "requestId": "2f94e59b-f8ea-46a2-a465-0c14f3d35ba4",
                "error": {
                    "code": "error",
                    "message": "ClientId is undefined. Please check authorization.",
                    "description": "Operation Failed. General Error.",
                    "dateTime": "2023-06-16T16:19:13.9563045Z",
                    "innerError": null
                }
            },
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "Class for disc space information.",
                "properties": {
                    "TotalSize": {
                        "description": "Total disc space.",
                        "format": "int64",
                        "maximum": 9223372036854776000,
                        "minimum": -9223372036854776000,
                        "type": "integer"
                    },
                    "UsedSize": {
                        "description": "Application used disc space.",
                        "format": "int64",
                        "maximum": 9223372036854776000,
                        "minimum": -9223372036854776000,
                        "type": "integer"
                    }
                },
                "required": [
                    "UsedSize",
                    "TotalSize"
                ],
                "type": "object"
            }
        },
        {
            "name": "GetSupportedBarcodes",
            "url": "https://groupdocs-signature-cloud.p.rapidapi.com/signature/barcodes",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/barcodes\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/barcodes\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "requestId": "209c3260-cc2c-4eb8-8edf-0ea5c1282aa1",
                "error": {
                    "code": "error",
                    "message": "ClientId is undefined. Please check authorization.",
                    "description": "Operation Failed. General Error.",
                    "dateTime": "2023-06-16T16:19:15.0955428Z",
                    "innerError": null
                }
            },
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "Describes collection of supported Barcode types",
                "properties": {
                    "BarcodeTypes": {
                        "description": "List of Barcode types",
                        "items": {
                            "additionalProperties": false,
                            "description": "Describes Barcode type",
                            "properties": {
                                "Name": {
                                    "description": "Barcode type name",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "DownloadFile",
            "url": "https://groupdocs-signature-cloud.p.rapidapi.com/signature/storage/file/{path}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "File path e.g. '/folder/file.ext'",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "versionId",
                    "type": "STRING",
                    "description": "File version ID to download",
                    "default": ""
                },
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/storage/file/{path}\"\nquerystring = {\"versionId\": \"\", \"path\": \"\", \"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/storage/file/{path}\"\nquerystring = {\"versionId\": \"\", \"path\": \"\", \"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "requestId": "c8c79d5d-2e27-4081-a656-841a91747bad",
                "error": {
                    "code": "error",
                    "message": "ClientId is undefined. Please check authorization.",
                    "description": "Operation Failed. General Error.",
                    "dateTime": "2023-06-16T16:19:22.3140991Z",
                    "innerError": null
                }
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GetFilesList",
            "url": "https://groupdocs-signature-cloud.p.rapidapi.com/signature/storage/folder/{path}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "Folder path e.g. '/folder'",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/storage/folder/{path}\"\nquerystring = {\"storageName\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/storage/folder/{path}\"\nquerystring = {\"storageName\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "requestId": "a0c1c04e-4350-4505-81aa-4a62dc58f8b9",
                "error": {
                    "code": "error",
                    "message": "ClientId is undefined. Please check authorization.",
                    "description": "Operation Failed. General Error.",
                    "dateTime": "2023-06-16T16:19:23.3347979Z",
                    "innerError": null
                }
            },
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "Files list",
                "properties": {
                    "Value": {
                        "description": "Files and folders contained by folder StorageFile.",
                        "items": {
                            "additionalProperties": false,
                            "description": "File or folder information",
                            "properties": {
                                "IsFolder": {
                                    "description": "True if it is a folder.",
                                    "type": "boolean"
                                },
                                "ModifiedDate": {
                                    "description": "File or folder last modified DateTime.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "File or folder name.",
                                    "type": "string"
                                },
                                "Path": {
                                    "description": "File or folder path.",
                                    "type": "string"
                                },
                                "Size": {
                                    "description": "File or folder size.",
                                    "format": "int64",
                                    "maximum": 9223372036854776000,
                                    "minimum": -9223372036854776000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "IsFolder",
                                "Size"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetSupportedFileFormats",
            "url": "https://groupdocs-signature-cloud.p.rapidapi.com/signature/formats",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/formats\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/formats\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "requestId": "9bd478b3-bc4d-4f61-836e-fac6938cd3a7",
                "error": {
                    "code": "error",
                    "message": "ClientId is undefined. Please check authorization.",
                    "description": "Operation Failed. General Error.",
                    "dateTime": "2023-06-16T16:19:24.3542432Z",
                    "innerError": null
                }
            },
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "Describes list of supported file formats",
                "properties": {
                    "Formats": {
                        "description": "Supported file formats",
                        "items": {
                            "additionalProperties": false,
                            "description": "File format",
                            "properties": {
                                "Extension": {
                                    "description": "File format extension",
                                    "type": "string"
                                },
                                "FileFormat": {
                                    "description": "File format name",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "ObjectExists",
            "url": "https://groupdocs-signature-cloud.p.rapidapi.com/signature/storage/exist/{path}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "File or folder path e.g. '/file.ext' or '/folder'",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                },
                {
                    "name": "versionId",
                    "type": "STRING",
                    "description": "File version ID",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/storage/exist/{path}\"\nquerystring = {\"storageName\": \"\", \"versionId\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/storage/exist/{path}\"\nquerystring = {\"storageName\": \"\", \"versionId\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "requestId": "6b60a39f-3853-44a0-a570-e5b900efef26",
                "error": {
                    "code": "error",
                    "message": "ClientId is undefined. Please check authorization.",
                    "description": "Operation Failed. General Error.",
                    "dateTime": "2023-06-16T16:19:26.4297766Z",
                    "innerError": null
                }
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GetSupportedQRCodes",
            "url": "https://groupdocs-signature-cloud.p.rapidapi.com/signature/qrcodes",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/qrcodes\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/qrcodes\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "requestId": "63e9e45e-68c3-41ba-b6a4-8b5d706f8d65",
                "error": {
                    "code": "error",
                    "message": "ClientId is undefined. Please check authorization.",
                    "description": "Operation Failed. General Error.",
                    "dateTime": "2023-06-16T16:19:28.6343116Z",
                    "innerError": null
                }
            },
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "Describes collection of supported QR-code types",
                "properties": {
                    "QRCodeTypes": {
                        "description": "List of QRCode Types",
                        "items": {
                            "additionalProperties": false,
                            "description": "Describes QR-code type",
                            "properties": {
                                "Name": {
                                    "description": "QR-code type name",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "StorageExists",
            "url": "https://groupdocs-signature-cloud.p.rapidapi.com/signature/storage/{storageName}/exist",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/storage/{storageName}/exist\"\nquerystring = {\"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/storage/{storageName}/exist\"\nquerystring = {\"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "requestId": "ccffa814-021b-4176-b232-e08d8ce2a023",
                "error": {
                    "code": "error",
                    "message": "ClientId is undefined. Please check authorization.",
                    "description": "Operation Failed. General Error.",
                    "dateTime": "2023-06-16T16:19:29.6498156Z",
                    "innerError": null
                }
            },
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "Storage exists",
                "properties": {
                    "Exists": {
                        "description": "Shows that the storage exists.\n            ",
                        "type": "boolean"
                    }
                },
                "required": [
                    "Exists"
                ],
                "type": "object"
            }
        },
        {
            "name": "SearchSignatures",
            "url": "https://groupdocs-signature-cloud.p.rapidapi.com/signature/search",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/search\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/search\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "Search result information",
                "properties": {
                    "FileInfo": {
                        "additionalProperties": false,
                        "description": "File info",
                        "properties": {
                            "FilePath": {
                                "description": "File path in storage",
                                "type": "string"
                            },
                            "Password": {
                                "description": "Password to open file",
                                "type": "string"
                            },
                            "StorageName": {
                                "description": "Storage name",
                                "type": "string"
                            },
                            "VersionId": {
                                "description": "Version ID",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Signatures": {
                        "description": "List of document signatures that were found during search",
                        "items": {
                            "additionalProperties": false,
                            "description": "Describes base class for signatures",
                            "properties": {
                                "CreatedOn": {
                                    "description": "Get or set the signature creation date",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Height": {
                                    "description": "Specifies height of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "IsSignature": {
                                    "description": "Get or set flag to indicate if this component is Signature or document content.\nThis property is being used with Update method to set element as signature (true)\nor document element (false).\n            ",
                                    "type": "boolean"
                                },
                                "Left": {
                                    "description": "Specifies left position of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "ModifiedOn": {
                                    "description": "Get or set the signature modification date",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "PageNumber": {
                                    "description": "Specifies the page signature was found on",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "SignatureId": {
                                    "description": "Unique signature identifier to modify signature in the document over Update or\nDelete methods. This property will be set automatically after Sign or Search\nmethod being called. If this property was saved before it can be set manually\nto manipulate the signature.",
                                    "type": "string"
                                },
                                "SignatureType": {
                                    "allOf": [
                                        {}
                                    ],
                                    "description": "Specifies the signature type (Text, Image, Digital, Barcode, QRCode, Stamp)",
                                    "enum": [
                                        "None",
                                        "Text",
                                        "Image",
                                        "Digital",
                                        "Barcode",
                                        "QRCode",
                                        "Stamp"
                                    ]
                                },
                                "Top": {
                                    "description": "Specifies top position of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "Width": {
                                    "description": "Specifies width of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "SignatureType",
                                "IsSignature",
                                "CreatedOn",
                                "ModifiedOn",
                                "Top",
                                "Left",
                                "Width",
                                "Height"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Size": {
                        "description": "Size in bytes",
                        "format": "int64",
                        "maximum": 9223372036854776000,
                        "minimum": -9223372036854776000,
                        "type": "integer"
                    }
                },
                "required": [
                    "Size"
                ],
                "type": "object"
            }
        },
        {
            "name": "CreateSignatures",
            "url": "https://groupdocs-signature-cloud.p.rapidapi.com/signature/create",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/create\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/create\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "Sign result information",
                "properties": {
                    "DownloadUrl": {
                        "description": "ULR to retrieve signed file",
                        "type": "string"
                    },
                    "Failed": {
                        "description": "List of signatures that were failed to create",
                        "items": {
                            "additionalProperties": false,
                            "description": "Describes base class for signatures",
                            "properties": {
                                "CreatedOn": {
                                    "description": "Get or set the signature creation date",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Height": {
                                    "description": "Specifies height of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "IsSignature": {
                                    "description": "Get or set flag to indicate if this component is Signature or document content.\nThis property is being used with Update method to set element as signature (true)\nor document element (false).\n            ",
                                    "type": "boolean"
                                },
                                "Left": {
                                    "description": "Specifies left position of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "ModifiedOn": {
                                    "description": "Get or set the signature modification date",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "PageNumber": {
                                    "description": "Specifies the page signature was found on",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "SignatureId": {
                                    "description": "Unique signature identifier to modify signature in the document over Update or\nDelete methods. This property will be set automatically after Sign or Search\nmethod being called. If this property was saved before it can be set manually\nto manipulate the signature.",
                                    "type": "string"
                                },
                                "SignatureType": {
                                    "allOf": [
                                        {}
                                    ],
                                    "description": "Specifies the signature type (Text, Image, Digital, Barcode, QRCode, Stamp)",
                                    "enum": [
                                        "None",
                                        "Text",
                                        "Image",
                                        "Digital",
                                        "Barcode",
                                        "QRCode",
                                        "Stamp"
                                    ]
                                },
                                "Top": {
                                    "description": "Specifies top position of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "Width": {
                                    "description": "Specifies width of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "SignatureType",
                                "IsSignature",
                                "CreatedOn",
                                "ModifiedOn",
                                "Top",
                                "Left",
                                "Width",
                                "Height"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "FileInfo": {
                        "additionalProperties": false,
                        "description": "File info",
                        "properties": {
                            "FilePath": {
                                "description": "File path in storage",
                                "type": "string"
                            },
                            "Password": {
                                "description": "Password to open file",
                                "type": "string"
                            },
                            "StorageName": {
                                "description": "Storage name",
                                "type": "string"
                            },
                            "VersionId": {
                                "description": "Version ID",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Size": {
                        "description": "Source document size in bytes",
                        "format": "int64",
                        "maximum": 9223372036854776000,
                        "minimum": -9223372036854776000,
                        "type": "integer"
                    },
                    "Succeeded": {
                        "description": "List of newly created signatures",
                        "items": {
                            "additionalProperties": false,
                            "description": "Describes base class for signatures",
                            "properties": {
                                "CreatedOn": {
                                    "description": "Get or set the signature creation date",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Height": {
                                    "description": "Specifies height of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "IsSignature": {
                                    "description": "Get or set flag to indicate if this component is Signature or document content.\nThis property is being used with Update method to set element as signature (true)\nor document element (false).\n            ",
                                    "type": "boolean"
                                },
                                "Left": {
                                    "description": "Specifies left position of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "ModifiedOn": {
                                    "description": "Get or set the signature modification date",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "PageNumber": {
                                    "description": "Specifies the page signature was found on",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "SignatureId": {
                                    "description": "Unique signature identifier to modify signature in the document over Update or\nDelete methods. This property will be set automatically after Sign or Search\nmethod being called. If this property was saved before it can be set manually\nto manipulate the signature.",
                                    "type": "string"
                                },
                                "SignatureType": {
                                    "allOf": [
                                        {}
                                    ],
                                    "description": "Specifies the signature type (Text, Image, Digital, Barcode, QRCode, Stamp)",
                                    "enum": [
                                        "None",
                                        "Text",
                                        "Image",
                                        "Digital",
                                        "Barcode",
                                        "QRCode",
                                        "Stamp"
                                    ]
                                },
                                "Top": {
                                    "description": "Specifies top position of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "Width": {
                                    "description": "Specifies width of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "SignatureType",
                                "IsSignature",
                                "CreatedOn",
                                "ModifiedOn",
                                "Top",
                                "Left",
                                "Width",
                                "Height"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Size"
                ],
                "type": "object"
            }
        },
        {
            "name": "GetInfo",
            "url": "https://groupdocs-signature-cloud.p.rapidapi.com/signature/info",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/info\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/info\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "Document info result",
                "properties": {
                    "DateCreated": {
                        "description": "Document created date",
                        "format": "date-time",
                        "type": "string"
                    },
                    "DateModified": {
                        "description": "Document modification date",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Extension": {
                        "description": "Document extension",
                        "type": "string"
                    },
                    "FileFormat": {
                        "description": "Document file format",
                        "type": "string"
                    },
                    "FileInfo": {
                        "additionalProperties": false,
                        "description": "File info",
                        "properties": {
                            "FilePath": {
                                "description": "File path in storage",
                                "type": "string"
                            },
                            "Password": {
                                "description": "Password to open file",
                                "type": "string"
                            },
                            "StorageName": {
                                "description": "Storage name",
                                "type": "string"
                            },
                            "VersionId": {
                                "description": "Version ID",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "MaxPageHeight": {
                        "description": "Specifies max page height",
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer"
                    },
                    "Pages": {
                        "description": "List of document pages descriptions",
                        "items": {
                            "additionalProperties": false,
                            "description": "Page information",
                            "properties": {
                                "Angle": {
                                    "description": "Page angle",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "Height": {
                                    "description": "Page height",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "Name": {
                                    "description": "Page name",
                                    "type": "string"
                                },
                                "Number": {
                                    "description": "Page number",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "Visible": {
                                    "description": "Page visibility",
                                    "type": "boolean"
                                },
                                "Width": {
                                    "description": "Page width",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "Number",
                                "Width",
                                "Height",
                                "Angle",
                                "Visible"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "PagesCount": {
                        "description": "Count of pages in document",
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer"
                    },
                    "Size": {
                        "description": "Document size in bytes",
                        "format": "int64",
                        "maximum": 9223372036854776000,
                        "minimum": -9223372036854776000,
                        "type": "integer"
                    },
                    "WidthForMaxHeight": {
                        "description": "Specifies width for max height of document page",
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer"
                    }
                },
                "required": [
                    "Size",
                    "PagesCount",
                    "DateCreated",
                    "DateModified",
                    "WidthForMaxHeight",
                    "MaxPageHeight"
                ],
                "type": "object"
            }
        },
        {
            "name": "VerifySignatures",
            "url": "https://groupdocs-signature-cloud.p.rapidapi.com/signature/verify",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/verify\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/verify\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "Verification result information",
                "properties": {
                    "FileInfo": {
                        "additionalProperties": false,
                        "description": "File info",
                        "properties": {
                            "FilePath": {
                                "description": "File path in storage",
                                "type": "string"
                            },
                            "Password": {
                                "description": "Password to open file",
                                "type": "string"
                            },
                            "StorageName": {
                                "description": "Storage name",
                                "type": "string"
                            },
                            "VersionId": {
                                "description": "Version ID",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "IsSuccess": {
                        "description": "Indicates whether document contains signatures that meet verification criteria",
                        "type": "boolean"
                    },
                    "Size": {
                        "description": "Processed document size in bytes",
                        "format": "int64",
                        "maximum": 9223372036854776000,
                        "minimum": -9223372036854776000,
                        "type": "integer"
                    }
                },
                "required": [
                    "Size",
                    "IsSuccess"
                ],
                "type": "object"
            }
        },
        {
            "name": "UpdateSignatures",
            "url": "https://groupdocs-signature-cloud.p.rapidapi.com/signature/update",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/update\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/update\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "Update result information",
                "properties": {
                    "Failed": {
                        "description": "List of signatures that were not updated",
                        "items": {
                            "additionalProperties": false,
                            "description": "Describes base class for signatures",
                            "properties": {
                                "CreatedOn": {
                                    "description": "Get or set the signature creation date",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Height": {
                                    "description": "Specifies height of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "IsSignature": {
                                    "description": "Get or set flag to indicate if this component is Signature or document content.\nThis property is being used with Update method to set element as signature (true)\nor document element (false).\n            ",
                                    "type": "boolean"
                                },
                                "Left": {
                                    "description": "Specifies left position of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "ModifiedOn": {
                                    "description": "Get or set the signature modification date",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "PageNumber": {
                                    "description": "Specifies the page signature was found on",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "SignatureId": {
                                    "description": "Unique signature identifier to modify signature in the document over Update or\nDelete methods. This property will be set automatically after Sign or Search\nmethod being called. If this property was saved before it can be set manually\nto manipulate the signature.",
                                    "type": "string"
                                },
                                "SignatureType": {
                                    "allOf": [
                                        {}
                                    ],
                                    "description": "Specifies the signature type (Text, Image, Digital, Barcode, QRCode, Stamp)",
                                    "enum": [
                                        "None",
                                        "Text",
                                        "Image",
                                        "Digital",
                                        "Barcode",
                                        "QRCode",
                                        "Stamp"
                                    ]
                                },
                                "Top": {
                                    "description": "Specifies top position of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "Width": {
                                    "description": "Specifies width of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "SignatureType",
                                "IsSignature",
                                "CreatedOn",
                                "ModifiedOn",
                                "Top",
                                "Left",
                                "Width",
                                "Height"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "FileInfo": {
                        "additionalProperties": false,
                        "description": "File info",
                        "properties": {
                            "FilePath": {
                                "description": "File path in storage",
                                "type": "string"
                            },
                            "Password": {
                                "description": "Password to open file",
                                "type": "string"
                            },
                            "StorageName": {
                                "description": "Storage name",
                                "type": "string"
                            },
                            "VersionId": {
                                "description": "Version ID",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Size": {
                        "description": "Source document size in bytes",
                        "format": "int64",
                        "maximum": 9223372036854776000,
                        "minimum": -9223372036854776000,
                        "type": "integer"
                    },
                    "Succeeded": {
                        "description": "List of successfully modified signatures",
                        "items": {
                            "additionalProperties": false,
                            "description": "Describes base class for signatures",
                            "properties": {
                                "CreatedOn": {
                                    "description": "Get or set the signature creation date",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Height": {
                                    "description": "Specifies height of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "IsSignature": {
                                    "description": "Get or set flag to indicate if this component is Signature or document content.\nThis property is being used with Update method to set element as signature (true)\nor document element (false).\n            ",
                                    "type": "boolean"
                                },
                                "Left": {
                                    "description": "Specifies left position of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "ModifiedOn": {
                                    "description": "Get or set the signature modification date",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "PageNumber": {
                                    "description": "Specifies the page signature was found on",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "SignatureId": {
                                    "description": "Unique signature identifier to modify signature in the document over Update or\nDelete methods. This property will be set automatically after Sign or Search\nmethod being called. If this property was saved before it can be set manually\nto manipulate the signature.",
                                    "type": "string"
                                },
                                "SignatureType": {
                                    "allOf": [
                                        {}
                                    ],
                                    "description": "Specifies the signature type (Text, Image, Digital, Barcode, QRCode, Stamp)",
                                    "enum": [
                                        "None",
                                        "Text",
                                        "Image",
                                        "Digital",
                                        "Barcode",
                                        "QRCode",
                                        "Stamp"
                                    ]
                                },
                                "Top": {
                                    "description": "Specifies top position of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "Width": {
                                    "description": "Specifies width of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "SignatureType",
                                "IsSignature",
                                "CreatedOn",
                                "ModifiedOn",
                                "Top",
                                "Left",
                                "Width",
                                "Height"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Size"
                ],
                "type": "object"
            }
        },
        {
            "name": "DeleteSignatures",
            "url": "https://groupdocs-signature-cloud.p.rapidapi.com/signature/delete",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/delete\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/delete\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "Delete result information",
                "properties": {
                    "Failed": {
                        "description": "List of signatures that were not deleted",
                        "items": {
                            "additionalProperties": false,
                            "description": "Describes base class for signatures",
                            "properties": {
                                "CreatedOn": {
                                    "description": "Get or set the signature creation date",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Height": {
                                    "description": "Specifies height of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "IsSignature": {
                                    "description": "Get or set flag to indicate if this component is Signature or document content.\nThis property is being used with Update method to set element as signature (true)\nor document element (false).\n            ",
                                    "type": "boolean"
                                },
                                "Left": {
                                    "description": "Specifies left position of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "ModifiedOn": {
                                    "description": "Get or set the signature modification date",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "PageNumber": {
                                    "description": "Specifies the page signature was found on",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "SignatureId": {
                                    "description": "Unique signature identifier to modify signature in the document over Update or\nDelete methods. This property will be set automatically after Sign or Search\nmethod being called. If this property was saved before it can be set manually\nto manipulate the signature.",
                                    "type": "string"
                                },
                                "SignatureType": {
                                    "allOf": [
                                        {}
                                    ],
                                    "description": "Specifies the signature type (Text, Image, Digital, Barcode, QRCode, Stamp)",
                                    "enum": [
                                        "None",
                                        "Text",
                                        "Image",
                                        "Digital",
                                        "Barcode",
                                        "QRCode",
                                        "Stamp"
                                    ]
                                },
                                "Top": {
                                    "description": "Specifies top position of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "Width": {
                                    "description": "Specifies width of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "SignatureType",
                                "IsSignature",
                                "CreatedOn",
                                "ModifiedOn",
                                "Top",
                                "Left",
                                "Width",
                                "Height"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "FileInfo": {
                        "additionalProperties": false,
                        "description": "File info",
                        "properties": {
                            "FilePath": {
                                "description": "File path in storage",
                                "type": "string"
                            },
                            "Password": {
                                "description": "Password to open file",
                                "type": "string"
                            },
                            "StorageName": {
                                "description": "Storage name",
                                "type": "string"
                            },
                            "VersionId": {
                                "description": "Version ID",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Size": {
                        "description": "Source document size in bytes",
                        "format": "int64",
                        "maximum": 9223372036854776000,
                        "minimum": -9223372036854776000,
                        "type": "integer"
                    },
                    "Succeeded": {
                        "description": "List of successfully deleted signatures",
                        "items": {
                            "additionalProperties": false,
                            "description": "Describes base class for signatures",
                            "properties": {
                                "CreatedOn": {
                                    "description": "Get or set the signature creation date",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Height": {
                                    "description": "Specifies height of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "IsSignature": {
                                    "description": "Get or set flag to indicate if this component is Signature or document content.\nThis property is being used with Update method to set element as signature (true)\nor document element (false).\n            ",
                                    "type": "boolean"
                                },
                                "Left": {
                                    "description": "Specifies left position of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "ModifiedOn": {
                                    "description": "Get or set the signature modification date",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "PageNumber": {
                                    "description": "Specifies the page signature was found on",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "SignatureId": {
                                    "description": "Unique signature identifier to modify signature in the document over Update or\nDelete methods. This property will be set automatically after Sign or Search\nmethod being called. If this property was saved before it can be set manually\nto manipulate the signature.",
                                    "type": "string"
                                },
                                "SignatureType": {
                                    "allOf": [
                                        {}
                                    ],
                                    "description": "Specifies the signature type (Text, Image, Digital, Barcode, QRCode, Stamp)",
                                    "enum": [
                                        "None",
                                        "Text",
                                        "Image",
                                        "Digital",
                                        "Barcode",
                                        "QRCode",
                                        "Stamp"
                                    ]
                                },
                                "Top": {
                                    "description": "Specifies top position of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "Width": {
                                    "description": "Specifies width of signature",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "SignatureType",
                                "IsSignature",
                                "CreatedOn",
                                "ModifiedOn",
                                "Top",
                                "Left",
                                "Width",
                                "Height"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Size"
                ],
                "type": "object"
            }
        }
    ],
    "standardized_name": "groupdocs_signature_cloud"
}