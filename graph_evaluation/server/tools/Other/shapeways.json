{
    "product_id": "53aa5b03e4b0a705fcc325ba",
    "tool_description": "Shapeways.com is the world's leading 3D Printing marketplace and community. We harness 3D Printing to help everyone make and share designs with the world, making product design more accessible, personal, and inspiring.",
    "home_url": "https://rapidapi.com/community/api/shapeways/",
    "name": "Shapeways",
    "title": "Shapeways",
    "pricing": "FREE",
    "tool_name": "Shapeways",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 455,
        "avgSuccessRate": 100,
        "popularityScore": 6.8,
        "__typename": "Score"
    },
    "host": "community-shapeways.p.rapidapi.com",
    "api_list": [
        {
            "name": "GET /printers/v1",
            "url": "https://community-shapeways.p.rapidapi.com/printers/v1",
            "description": "",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/printers/v1\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/printers/v1\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "List": {
                    "title": "Printer List",
                    "httpMethod": "GET",
                    "description": "Printers information",
                    "version": "1",
                    "revision": "20130228",
                    "preferred": true,
                    "path": "/printers/v1",
                    "discoveryRestUrl": "https://api.shapeways.com/printers/v1",
                    "discoveryLink": "/printers/v1",
                    "discoveryRootUrl": "https://api.shapeways.com",
                    "documentationLink": "https://developers.shapeways.com/docs",
                    "parameters": [],
                    "returns": {
                        "result": {
                            "type": "string",
                            "description": "A 'result' field stating 'success'"
                        },
                        "printers": {
                            "type": "array",
                            "description": "List of printers",
                            "items": {
                                "id": "<printerId>",
                                "type": "object",
                                "description": "Printer Item",
                                "properties": {
                                    "printerId": {
                                        "type": "int",
                                        "description": "Printer id"
                                    },
                                    "title": {
                                        "type": "string",
                                        "description": "Printer name"
                                    },
                                    "xBoundMin": {
                                        "type": "float",
                                        "description": "Printer's minimum object size in the X axis direction in cm"
                                    },
                                    "xBoundMax": {
                                        "type": "float",
                                        "description": "Printer's maximum object size in the X axis direction in cm"
                                    },
                                    "yBoundMin": {
                                        "type": "float",
                                        "description": "Printer's minimum object size in the Y axis direction in cm"
                                    },
                                    "yBoundMax": {
                                        "type": "float",
                                        "description": "Printer's maximum object size in the Y axis direction in cm"
                                    },
                                    "zBoundMin": {
                                        "type": "float",
                                        "description": "Printer's minimum object size in the Z axis direction in cm"
                                    },
                                    "zBoundMax": {
                                        "type": "float",
                                        "description": "Printer's maximum object size in the Z axis direction in cm"
                                    }
                                }
                            }
                        },
                        "nextActionSuggestions": {
                            "type": "object",
                            "description": "Suggestions for next actions"
                        }
                    },
                    "error": {
                        "result": {
                            "type": "string",
                            "description": "A 'result' field stating 'failure'"
                        },
                        "reason": {
                            "type": "string",
                            "description": "Failure reason"
                        },
                        "oauthErrorMessage": {
                            "type": "string",
                            "description": "Oauth error message.",
                            "dependencies": "Only if oauth error"
                        }
                    }
                },
                "Get": {
                    "title": "Printer Info",
                    "httpMethod": "GET",
                    "description": "Printers information",
                    "version": "1",
                    "revision": "20130228",
                    "preferred": true,
                    "path": "/printers/{printerId}/v1",
                    "discoveryRestUrl": "https://api.shapeways.com/printers/v1",
                    "discoveryLink": "/printers/{printerId}/v1",
                    "discoveryRootUrl": "https://api.shapeways.com",
                    "documentationLink": "https://developers.shapeways.com/docs",
                    "parameters": {
                        "printerId": {
                            "type": "int",
                            "description": "Printer id",
                            "location": "path",
                            "dependencies": "required"
                        }
                    },
                    "returns": {
                        "result": {
                            "type": "string",
                            "description": "A 'result' field stating 'success'"
                        },
                        "printerId": {
                            "type": "int",
                            "description": "Printer id"
                        },
                        "title": {
                            "type": "string",
                            "description": "Printer name"
                        },
                        "xBoundMin": {
                            "type": "float",
                            "description": "Printer's minimum object size in the X axis direction in cm"
                        },
                        "xBoundMax": {
                            "type": "float",
                            "description": "Printer's maximum object size in the X axis direction in cm"
                        },
                        "yBoundMin": {
                            "type": "float",
                            "description": "Printer's minimum object size in the Y axis direction in cm"
                        },
                        "yBoundMax": {
                            "type": "float",
                            "description": "Printer's maximum object size in the Y axis direction in cm"
                        },
                        "zBoundMin": {
                            "type": "float",
                            "description": "Printer's minimum object size in the Z axis direction in cm"
                        },
                        "zBoundMax": {
                            "type": "float",
                            "description": "Printer's maximum object size in the Z axis direction in cm"
                        },
                        "nextActionSuggestions": {
                            "type": "object",
                            "description": "Suggestions for next actions"
                        }
                    },
                    "error": {
                        "result": {
                            "type": "string",
                            "description": "A 'result' field stating 'failure'"
                        },
                        "reason": {
                            "type": "string",
                            "description": "Failure reason"
                        },
                        "oauthErrorMessage": {
                            "type": "string",
                            "description": "Oauth error message.",
                            "dependencies": "Only if oauth error"
                        }
                    }
                }
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GET /printers/{printerId}/v1",
            "url": "https://community-shapeways.p.rapidapi.com/printers/{printerId}/v1",
            "description": "",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "printerid",
                    "type": "STRING",
                    "description": "Printer id",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/printers/{printerId}/v1\"\nquerystring = {\"printerid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/printers/{printerId}/v1\"\nquerystring = {\"printerid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GET /categories/v1",
            "url": "https://community-shapeways.p.rapidapi.com/categories/v1",
            "description": "",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/categories/v1\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/categories/v1\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "List": {
                    "title": "Category List",
                    "httpMethod": "GET",
                    "description": "Categories Information",
                    "version": "1",
                    "revision": "20130515",
                    "preferred": true,
                    "path": "/categories/v1",
                    "discoveryRestUrl": "https://api.shapeways.com/categories/v1",
                    "discoveryLink": "/categories/v1",
                    "discoveryRootUrl": "https://api.shapeways.com",
                    "documentationLink": "https://developers.shapeways.com/docs",
                    "parameters": [],
                    "returns": {
                        "result": {
                            "type": "string",
                            "description": "A 'result' field stating 'success'"
                        },
                        "categories": {
                            "id": "categories",
                            "type": "object",
                            "description": "Category objects",
                            "properties": {
                                "<categoryId>": {
                                    "id": "<categoryId>",
                                    "type": "object",
                                    "description": "Category Object",
                                    "properties": {
                                        "title": {
                                            "type": "string",
                                            "description": "Category title"
                                        },
                                        "parentId": {
                                            "type": "int",
                                            "description": "Category's parent category. For topmost categories, 0 will be returned to indicate that there is no parent."
                                        }
                                    }
                                }
                            }
                        },
                        "nextActionSuggestions": {
                            "type": "object",
                            "description": "Suggestions for next actions"
                        }
                    },
                    "error": {
                        "result": {
                            "type": "string",
                            "description": "A 'result' field stating 'failure'"
                        },
                        "reason": {
                            "type": "string",
                            "description": "Failure reason"
                        },
                        "oauthErrorMessage": {
                            "type": "string",
                            "description": "Oauth error message.",
                            "dependencies": "Only if oauth error"
                        }
                    }
                },
                "Get": {
                    "title": "Category Info",
                    "httpMethod": "GET",
                    "description": "Info about a category",
                    "version": "1",
                    "revision": "20130515",
                    "preferred": true,
                    "path": "/categories/{categoryId}/v1",
                    "discoveryRestUrl": "https://api.shapeways.com/categories/v1",
                    "discoveryLink": "/categories/{categoryId}/v1",
                    "discoveryRootUrl": "https://api.shapeways.com",
                    "documentationLink": "https://developers.shapeways.com/docs",
                    "parameters": {
                        "categoryId": {
                            "type": "int",
                            "description": "Category id",
                            "location": "path",
                            "dependencies": "required"
                        }
                    },
                    "returns": {
                        "result": {
                            "type": "string",
                            "description": "A 'result' field stating 'success'"
                        },
                        "category": {
                            "id": "<categoryId>",
                            "type": "object",
                            "description": "Category Object",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "Category title"
                                },
                                "parentId": {
                                    "type": "int",
                                    "description": "Category's parent category. For topmost categories, 0 will be returned to indicate that there is no parent."
                                }
                            }
                        },
                        "nextActionSuggestions": {
                            "type": "object",
                            "description": "Suggestions for next actions"
                        }
                    },
                    "error": {
                        "result": {
                            "type": "string",
                            "description": "A 'result' field stating 'failure'"
                        },
                        "reason": {
                            "type": "string",
                            "description": "Failure reason"
                        },
                        "oauthErrorMessage": {
                            "type": "string",
                            "description": "Oauth error message.",
                            "dependencies": "Only if oauth error"
                        }
                    }
                }
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GET /orders/cart/v1",
            "url": "https://community-shapeways.p.rapidapi.com/orders/cart/v1",
            "description": "",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/orders/cart/v1\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/orders/cart/v1\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "List": {
                    "title": "Cart List",
                    "httpMethod": "GET",
                    "description": "Access cart items",
                    "version": "1",
                    "revision": "20140904",
                    "preferred": true,
                    "path": "/orders/cart/v1",
                    "discoveryRestUrl": "https://api.shapeways.com/orders/cart/v1",
                    "discoveryLink": "/orders/cart/v1",
                    "discoveryRootUrl": "https://api.shapeways.com",
                    "documentationLink": "https://developers.shapeways.com/docs",
                    "parameters": [],
                    "returns": {
                        "result": {
                            "type": "string",
                            "description": "A 'result' field stating 'success'"
                        },
                        "itemCount": {
                            "type": "int",
                            "description": "Quantity of items in the cart"
                        },
                        "items": {
                            "type": "array",
                            "description": "List of cart items",
                            "items": {
                                "type": "object",
                                "description": "Cart Item",
                                "properties": {
                                    "modelId": {
                                        "type": "int",
                                        "description": "Model id"
                                    },
                                    "spin": {
                                        "type": "int",
                                        "description": "SPIN"
                                    },
                                    "materialId": {
                                        "type": "int",
                                        "description": "Material id"
                                    },
                                    "quantity": {
                                        "type": "int",
                                        "description": "Quantity of models in this material"
                                    }
                                }
                            }
                        },
                        "nextActionSuggestions": {
                            "type": "object",
                            "description": "Suggestions for next actions"
                        }
                    },
                    "error": {
                        "result": {
                            "type": "string",
                            "description": "A 'result' field stating 'failure'"
                        },
                        "reason": {
                            "type": "string",
                            "description": "Failure reason"
                        },
                        "oauthErrorMessage": {
                            "type": "string",
                            "description": "Oauth error message.",
                            "dependencies": "Only if oauth error"
                        }
                    }
                },
                "Insert": {
                    "title": "Add To Cart",
                    "httpMethod": "POST",
                    "description": "Add a Model to Shopping Cart.",
                    "version": "1",
                    "revision": "20140904",
                    "preferred": true,
                    "path": "/orders/cart/v1",
                    "discoveryRestUrl": "https://api.shapeways.com/orders/cart/v1",
                    "discoveryLink": "/orders/cart/v1",
                    "discoveryRootUrl": "https://api.shapeways.com",
                    "documentationLink": "https://developers.shapeways.com/docs",
                    "parameters": {
                        "modelId": {
                            "type": "int",
                            "description": "Model id",
                            "location": "json",
                            "dependencies": "required"
                        },
                        "materialId": {
                            "type": "int",
                            "description": "Material id",
                            "location": "json",
                            "dependencies": "optional"
                        },
                        "quantity": {
                            "type": "int",
                            "description": "Quantity of models in this material",
                            "default": 1,
                            "location": "json",
                            "dependencies": "optional"
                        }
                    },
                    "returns": {
                        "result": {
                            "type": "string",
                            "description": "A 'result' field stating 'success'"
                        },
                        "nextActionSuggestions": {
                            "type": "object",
                            "description": "Suggestions for next actions"
                        }
                    },
                    "error": {
                        "result": {
                            "type": "string",
                            "description": "A 'result' field stating 'failure'"
                        },
                        "reason": {
                            "type": "string",
                            "description": "Failure reason"
                        },
                        "oauthErrorMessage": {
                            "type": "string",
                            "description": "Oauth error message.",
                            "dependencies": "Only if oauth error"
                        }
                    }
                }
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GET /models/v1",
            "url": "https://community-shapeways.p.rapidapi.com/models/v1",
            "description": "",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/models/v1\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/models/v1\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "List": {
                    "title": "List models",
                    "httpMethod": "GET",
                    "description": "Retrieves a list of models in the Shapeways account.",
                    "version": "1",
                    "revision": "20130228",
                    "preferred": true,
                    "path": "/models/v1",
                    "discoveryRestUrl": "https://api.shapeways.com/models/v1",
                    "discoveryLink": "/models/v1",
                    "discoveryRootUrl": "https://api.shapeways.com",
                    "documentationLink": "https://developers.shapeways.com/docs",
                    "parameters": {
                        "title": {
                            "type": "string",
                            "description": "Model title",
                            "location": "query",
                            "dependencies": "optional"
                        },
                        "page": {
                            "type": "int",
                            "description": "The model page, starting with 1.  Each page contains 36 models.",
                            "location": "query",
                            "dependencies": "optional"
                        }
                    },
                    "returns": {
                        "result": {
                            "type": "string",
                            "description": "A 'result' field stating 'success'"
                        },
                        "models": {
                            "type": "array",
                            "description": "List of models",
                            "items": {
                                "modelId": {
                                    "type": "int",
                                    "description": "Model ID"
                                },
                                "modelVersion": {
                                    "type": "int",
                                    "description": "Model version"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Model title"
                                }
                            }
                        },
                        "nextActionSuggestions": {
                            "type": "object",
                            "description": "Suggestions for next actions"
                        }
                    },
                    "error": {
                        "result": {
                            "type": "string",
                            "description": "A 'result' field stating 'failure'"
                        },
                        "reason": {
                            "type": "string",
                            "description": "Failure reason"
                        },
                        "oauthErrorMessage": {
                            "type": "string",
                            "description": "Oauth error message.",
                            "dependencies": "Only if oauth error"
                        }
                    }
                },
                "Insert": {
                    "title": "Upload a model",
                    "httpMethod": "POST",
                    "description": "Uploads a new model. See Upload a model for instructions and code examples.",
                    "version": "1",
                    "revision": "20130228",
                    "preferred": true,
                    "path": "/models/v1",
                    "discoveryRestUrl": "https://api.shapeways.com/models/v1",
                    "discoveryLink": "/models/v1",
                    "discoveryRootUrl": "https://api.shapeways.com",
                    "documentationLink": "https://developers.shapeways.com/docs",
                    "parameters": {
                        "file": {
                            "type": "string",
                            "description": "Model file data",
                            "encoding": "base64",
                            "location": "json",
                            "dependencies": "required"
                        },
                        "fileName": {
                            "type": "string",
                            "description": "Model filename",
                            "location": "json",
                            "dependencies": "required"
                        },
                        "uploadScale": {
                            "type": "float",
                            "description": "Model scale in meters: 1.0 - meter, 0.001 - millimeter, 0.0254 - inch.",
                            "default": 1,
                            "location": "json",
                            "dependencies": "optional"
                        },
                        "hasRightsToModel": {
                            "type": "boolean",
                            "description": "You have the rights to, or have authorization to use this model",
                            "enum": [
                                0,
                                1
                            ],
                            "enumDescriptions": [
                                "0 - You do not have rights to, nor have authorization to use this model",
                                "1 - You have rights to, or have authorization to use this model"
                            ],
                            "location": "json",
                            "dependencies": "required"
                        },
                        "acceptTermsAndConditions": {
                            "type": "boolean",
                            "description": "You accept the Terms and Conditions, see https://www.shapeways.com/terms_and_conditions.",
                            "enum": [
                                0,
                                1
                            ],
                            "enumDescriptions": [
                                "0 - You do not accept the Terms and Conditions, see https://www.shapeways.com/terms_and_conditions.",
                                "1 - You accept the Terms and Conditions, see https://www.shapeways.com/terms_and_conditions."
                            ],
                            "location": "json",
                            "dependencies": "required"
                        },
                        "title": {
                            "type": "string",
                            "description": "Model title",
                            "location": "json",
                            "dependencies": "optional"
                        },
                        "description": {
                            "type": "string",
                            "description": "Model description",
                            "default": "",
                            "location": "json",
                            "dependencies": "optional"
                        },
                        "isPublic": {
                            "type": "boolean",
                            "description": "Model visibility",
                            "default": 0,
                            "enum": [
                                0,
                                1
                            ],
                            "enumDescriptions": [
                                "0 - Private Model (viewable only with a private key)",
                                "1 - Public Model"
                            ],
                            "location": "json",
                            "dependencies": "optional"
                        },
                        "isClaimable": {
                            "type": "boolean",
                            "description": "Whether a model is claimable with a claim key",
                            "default": "false",
                            "location": "json",
                            "dependencies": "optional"
                        },
                        "isForSale": {
                            "type": "int",
                            "description": "Model is for sale",
                            "default": 0,
                            "enum": [
                                0,
                                1
                            ],
                            "enumDescriptions": [
                                "0 - Model cannot be purchased",
                                "1 - Model can be purchased"
                            ],
                            "location": "json",
                            "dependencies": "optional"
                        },
                        "isDownloadable": {
                            "type": "boolean",
                            "description": "Model is downloadable",
                            "default": 0,
                            "enum": [
                                0,
                                1
                            ],
                            "enumDescriptions": [
                                "0 - Model cannot be downloaded",
                                "1 - Model can be downloaded"
                            ],
                            "location": "json",
                            "dependencies": "optional"
                        },
                        "tags": {
                            "type": "array",
                            "description": "Model tags",
                            "items": {
                                "type": "string",
                                "description": "The name of the tag."
                            },
                            "location": "json",
                            "dependencies": "optional"
                        },
                        "materials": {
                            "id": "materials",
                            "type": "object",
                            "description": "Material objects",
                            "properties": {
                                "<materialId>": {
                                    "id": "<materialId>",
                                    "type": "object",
                                    "description": "Material Object",
                                    "properties": {
                                        "markup": {
                                            "type": "float",
                                            "description": "Markup amount"
                                        },
                                        "isActive": {
                                            "type": "boolean",
                                            "description": "Is this material active"
                                        },
                                        "price": {
                                            "type": "float",
                                            "description": "Price"
                                        }
                                    }
                                }
                            },
                            "location": "json",
                            "dependencies": "optional"
                        },
                        "defaultMaterialId": {
                            "type": "int",
                            "description": "The material id for this model's default material",
                            "location": "json",
                            "dependencies": "optional"
                        },
                        "categories": {
                            "type": "array",
                            "description": "Array of category ids.",
                            "items": {
                                "type": "int",
                                "description": "Category Id"
                            },
                            "location": "json",
                            "dependencies": "optional"
                        },
                        "is2DModel": {
                            "type": "boolean",
                            "description": "Model is a 2D Model.",
                            "default": false,
                            "location": "json",
                            "dependencies": "optional"
                        },
                        "metadata": {
                            "type": "object",
                            "description": "Metadata parameter can only be used by 2D Models.",
                            "properties": {
                                "tag": {
                                    "type": "string",
                                    "description": "Tag of the 2D Model"
                                },
                                "xDimCm": {
                                    "type": "float",
                                    "description": "X-axis in cm"
                                },
                                "yDimCm": {
                                    "type": "float",
                                    "description": "Y-axis in cm"
                                }
                            },
                            "location": "",
                            "dependencies": ""
                        },
                        "refNum": {
                            "type": "string",
                            "description": "Metadata Reference Number",
                            "default": false,
                            "location": "json",
                            "dependencies": "optional"
                        },
                        "lotNum": {
                            "type": "string",
                            "description": "Metadata Lot Number",
                            "default": false,
                            "location": "json",
                            "dependencies": "optional"
                        },
                        "caseCode": {
                            "type": "string",
                            "description": "Metadata Case Code",
                            "default": false,
                            "location": "json",
                            "dependencies": "optional"
                        }
                    },
                    "returns": {
                        "result": {
                            "type": "string",
                            "description": "A 'result' field stating 'success'"
                        },
                        "modelId": {
                            "type": "int",
                            "description": "Model ID"
                        },
                        "modelVersion": {
                            "type": "int",
                            "description": "Model version"
                        },
                        "title": {
                            "type": "string",
                            "description": "Model title"
                        },
                        "fileName": {
                            "type": "string",
                            "description": "Model filename"
                        },
                        "contentLength": {
                            "type": "int",
                            "description": "The file size of the uploaded file in bytes"
                        },
                        "fileMd5Checksum": {
                            "type": "string",
                            "description": "The md5 checksum of the file"
                        },
                        "description": {
                            "type": "string",
                            "description": "Model description"
                        },
                        "isPublic": {
                            "type": "boolean",
                            "description": "Can be seen by the public",
                            "enum": [
                                0,
                                1
                            ],
                            "enumDescriptions": [
                                "0 - Private Model (viewable only with a private key)",
                                "1 - Public Model"
                            ]
                        },
                        "isClaimable": {
                            "type": "boolean",
                            "description": "Can be claimed via claimKey "
                        },
                        "isForSale": {
                            "type": "boolean",
                            "description": "Model is for sale",
                            "enum": [
                                0,
                                1
                            ],
                            "enumDescriptions": [
                                "0 - Model cannot be purchased",
                                "1 - Model can be purchased"
                            ]
                        },
                        "isDownloadable": {
                            "type": "boolean",
                            "description": "Model is downloadable",
                            "enum": [
                                0,
                                1
                            ],
                            "enumDescriptions": [
                                "0 - Model cannot be downloaded",
                                "1 - Model can be downloaded"
                            ]
                        },
                        "materials": {
                            "id": "materials",
                            "type": "object",
                            "description": "Material objects",
                            "properties": {
                                "<materialId>": {
                                    "id": "<materialId>",
                                    "type": "object",
                                    "description": "Material Object",
                                    "properties": {
                                        "markup": {
                                            "type": "float",
                                            "description": "Markup amount"
                                        },
                                        "isActive": {
                                            "type": "boolean",
                                            "description": "Is this material active"
                                        },
                                        "price": {
                                            "type": "float",
                                            "description": "Price"
                                        }
                                    }
                                }
                            }
                        },
                        "secretKey": {
                            "type": "string",
                            "description": "The secret key is used to allow ANY user to access a private model.  The model can be accessed using the url query parameter ?key=[key] at the end of the url"
                        },
                        "claimKey": {
                            "type": "string",
                            "description": "The claim key is used to allow ANY user to claim a model into their own account.  The claim function should be used when your app is generating models using your own permanent access tokens.To enable a user to claim a model, send them to shapeways.com/model/claim/[modelId] with a query parameter of ?key=[key].If the model is not \"claimable\" this key will be blank.  Once a model is set to claimable, it cannot be set to public or for-sale.The page will redirect to the model edit view after it has been claimed."
                        },
                        "defaultMaterialId": {
                            "type": "int",
                            "description": "The material id for this model's default material"
                        },
                        "categories": {
                            "id": "categories",
                            "type": "object",
                            "description": "Category Objects",
                            "properties": {
                                "<categoryId>": {
                                    "id": "<categoryId>",
                                    "type": "object",
                                    "description": "Category Object",
                                    "properties": {
                                        "title": {
                                            "type": "string",
                                            "description": "Category title"
                                        },
                                        "parentId": {
                                            "type": "int",
                                            "description": "Category's parent category. For topmost categories, 0 will be returned to indicate that there is no parent."
                                        }
                                    }
                                }
                            }
                        },
                        "tags": {
                            "type": "string",
                            "description": "Tags"
                        },
                        "urls": {
                            "id": "urls",
                            "type": "object",
                            "description": "Url Objects",
                            "properties": {
                                "<address>": {
                                    "id": "<address>",
                                    "type": "object",
                                    "description": "Url Object",
                                    "properties": {
                                        "address": {
                                            "type": "string",
                                            "description": "Url Address"
                                        }
                                    }
                                }
                            }
                        },
                        "spin": {
                            "type": "string",
                            "description": "SPIN"
                        },
                        "defaultImage": {
                            "type": "string",
                            "description": "Default Image"
                        },
                        "modelDimensions": {
                            "type": "array",
                            "description": "Model Dimensions",
                            "items": {
                                "type": "string",
                                "description": "Model Dimension"
                            }
                        },
                        "modelVolume": {
                            "type": "array",
                            "description": "Model Volume",
                            "items": {
                                "type": "string",
                                "description": "Model Volume"
                            }
                        },
                        "printable": {
                            "type": "string",
                            "description": "Model Printability"
                        },
                        "nextActionSuggestions": {
                            "type": "object",
                            "description": "Suggestions for next actions"
                        }
                    },
                    "error": {
                        "result": {
                            "type": "string",
                            "description": "A 'result' field stating 'failure'"
                        },
                        "reason": {
                            "type": "string",
                            "description": "Failure reason"
                        },
                        "oauthErrorMessage": {
                            "type": "string",
                            "description": "Oauth error message.",
                            "dependencies": "Only if oauth error"
                        }
                    }
                },
                "Get": {
                    "title": "Model information",
                    "httpMethod": "GET",
                    "description": "Retrieves information for a specific model like material printability and price (Specified by the modelId). See Get model information for instructions and code examples.",
                    "version": "1",
                    "revision": "20130228",
                    "preferred": true,
                    "path": "/models/{modelId}/v1",
                    "discoveryRestUrl": "https://api.shapeways.com/models/v1",
                    "discoveryLink": "/models/{modelId}/v1",
                    "discoveryRootUrl": "https://api.shapeways.com",
                    "documentationLink": "https://developers.shapeways.com/docs",
                    "parameters": {
                        "modelId": {
                            "type": "int",
                            "description": "Model id",
                            "location": "path",
                            "dependencies": "required"
                        },
                        "is2DModel": {
                            "type": "boolean",
                            "description": "Model is a 2D Model.",
                            "default": false,
                            "location": "query",
                            "dependencies": "optional"
                        }
                    },
                    "returns": {
                        "result": {
                            "type": "string",
                            "description": "A 'result' field stating 'success'"
                        },
                        "modelId": {
                            "type": "int",
                            "description": "Model ID"
                        },
                        "modelVersion": {
                            "type": "int",
                            "description": "Model version"
                        },
                        "title": {
                            "type": "string",
                            "description": "Model title"
                        },
                        "fileName": {
                            "type": "string",
                            "description": "Model filename"
                        },
                        "contentLength": {
                            "type": "int",
                            "description": "The file size of the uploaded file in bytes"
                        },
                        "fileMd5Checksum": {
                            "type": "string",
                            "description": "The md5 checksum of the file"
                        },
                        "fileData": {
                            "type": "string",
                            "description": "Model file data",
                            "encoding": "base64"
                        },
                        "description": {
                            "type": "string",
                            "description": "Model description"
                        },
                        "isPublic": {
                            "type": "boolean",
                            "description": "Can be seen by the public",
                            "enum": [
                                0,
                                1
                            ],
                            "enumDescriptions": [
                                "0 - Private Model (viewable only with a private key)",
                                "1 - Public Model"
                            ]
                        },
                        "isClaimable": {
                            "type": "boolean",
                            "description": "Can be claimed via claimKey "
                        },
                        "isForSale": {
                            "type": "boolean",
                            "description": "Model is for sale",
                            "enum": [
                                0,
                                1
                            ],
                            "enumDescriptions": [
                                "0 - Model cannot be purchased",
                                "1 - Model can be purchased"
                            ]
                        },
                        "isDownloadable": {
                            "type": "boolean",
                            "description": "Model is downloadable",
                            "enum": [
                                0,
                                1
                            ],
                            "enumDescriptions": [
                                "0 - Model cannot be downloaded",
                                "1 - Model can be downloaded"
                            ]
                        },
                        "materials": {
                            "id": "materials",
                            "type": "object",
                            "description": "Material objects",
                            "properties": {
                                "<materialId>": {
                                    "id": "<materialId>",
                                    "type": "object",
                                    "description": "Material Object",
                                    "properties": {
                                        "markup": {
                                            "type": "float",
                                            "description": "Markup amount"
                                        },
                                        "isActive": {
                                            "type": "boolean",
                                            "description": "Is this material active"
                                        },
                                        "price": {
                                            "type": "float",
                                            "description": "Price"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Material name"
                                        },
                                        "basePrice": {
                                            "type": "float",
                                            "description": "Base Price"
                                        },
                                        "isPrintable": {
                                            "type": "boolean",
                                            "description": "Is this material printable"
                                        },
                                        "restrictions": {
                                            "id": "restrictions",
                                            "type": "object",
                                            "description": "Material Restriction Object",
                                            "properties": {
                                                "<restrictionId>": {
                                                    "id": "<restrictionId>",
                                                    "type": "object",
                                                    "description": "Material Restriction Object",
                                                    "properties": {
                                                        "restrictionId": {
                                                            "type": "int",
                                                            "description": "Material Restriction ID"
                                                        },
                                                        "restrictionName": {
                                                            "type": "string",
                                                            "description": "Material Restriction Name"
                                                        },
                                                        "restrictionEntityIds": {
                                                            "type": "array",
                                                            "description": "Material Restriction Entity Ids",
                                                            "default": [],
                                                            "items": {
                                                                "type": "int",
                                                                "description": "Material Restriction Entity Id"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "secretKey": {
                            "type": "string",
                            "description": "The secret key is used to allow ANY user to access a private model.  The model can be accessed using the url query parameter ?key=[key] at the end of the url"
                        },
                        "claimKey": {
                            "type": "string",
                            "description": "The claim key is used to allow ANY user to claim a model into their own account.  The claim function should be used when your app is generating models using your own permanent access tokens.To enable a user to claim a model, send them to shapeways.com/model/claim/[modelId] with a query parameter of ?key=[key].If the model is not \"claimable\" this key will be blank.  Once a model is set to claimable, it cannot be set to public or for-sale.The page will redirect to the model edit view after it has been claimed."
                        },
                        "defaultMaterialId": {
                            "type": "int",
                            "description": "The material id for this model's default material"
                        },
                        "categories": {
                            "id": "categories",
                            "type": "object",
                            "description": "Category Objects",
                            "properties": {
                                "<categoryId>": {
                                    "id": "<categoryId>",
                                    "type": "object",
                                    "description": "Category Object",
                                    "properties": {
                                        "title": {
                                            "type": "string",
                                            "description": "Category title"
                                        },
                                        "parentId": {
                                            "type": "int",
                                            "description": "Category's parent category. For topmost categories, 0 will be returned to indicate that there is no parent."
                                        }
                                    }
                                }
                            }
                        },
                        "tags": {
                            "type": "string",
                            "description": "Tags"
                        },
                        "urls": {
                            "id": "urls",
                            "type": "object",
                            "description": "Url Objects",
                            "properties": {
                                "<address>": {
                                    "id": "<address>",
                                    "type": "object",
                                    "description": "Url Object",
                                    "properties": {
                                        "address": {
                                            "type": "string",
                                            "description": "Url Address"
                                        }
                                    }
                                }
                            }
                        },
                        "spin": {
                            "type": "string",
                            "description": "SPIN"
                        },
                        "defaultImage": {
                            "type": "string",
                            "description": "Default Image"
                        },
                        "modelDimensions": {
                            "type": "array",
                            "description": "Model Dimensions",
                            "items": {
                                "type": "string",
                                "description": "Model Dimension"
                            }
                        },
                        "modelVolume": {
                            "type": "array",
                            "description": "Model Volume",
                            "items": {
                                "type": "string",
                                "description": "Model Volume"
                            }
                        },
                        "printable": {
                            "type": "string",
                            "description": "Model Printability"
                        },
                        "nextActionSuggestions": {
                            "type": "object",
                            "description": "Suggestions for next actions"
                        }
                    },
                    "error": {
                        "result": {
                            "type": "string",
                            "description": "A 'result' field stating 'failure'"
                        },
                        "reason": {
                            "type": "string",
                            "description": "Failure reason"
                        },
                        "oauthErrorMessage": {
                            "type": "string",
                            "description": "Oauth error message.",
                            "dependencies": "Only if oauth error"
                        }
                    }
                },
                "Delete": {
                    "title": "Delete a model",
                    "httpMethod": "DELETE",
                    "description": "Deletes a model from the Shapeways\u2019 account (Specified by the modelId).",
                    "version": "1",
                    "revision": "20130228",
                    "preferred": true,
                    "path": "/models/{modelId}/v1",
                    "discoveryRestUrl": "https://api.shapeways.com/models/v1",
                    "discoveryLink": "/models/{modelId}/v1",
                    "discoveryRootUrl": "https://api.shapeways.com",
                    "documentationLink": "https://developers.shapeways.com/docs",
                    "parameters": {
                        "modelId": {
                            "type": "int",
                            "description": "ID of the model to delete.",
                            "location": "path",
                            "dependencies": "required"
                        }
                    },
                    "returns": {
                        "result": {
                            "type": "string",
                            "description": "A 'result' field stating 'success'"
                        },
                        "modelId": {
                            "type": "int",
                            "description": "ID of the model that was deleted."
                        },
                        "nextActionSuggestions": {
                            "type": "object",
                            "description": "Suggestions for next actions"
                        }
                    },
                    "error": {
                        "result": {
                            "type": "string",
                            "description": "A 'result' field stating 'failure'"
                        },
                        "reason": {
                            "type": "string",
                            "description": "Failure reason"
                        },
                        "oauthErrorMessage": {
                            "type": "string",
                            "description": "Oauth error message.",
                            "dependencies": "Only if oauth error"
                        }
                    }
                },
                "Deeper": {
                    "revision": "20130228",
                    "controllers": [
                        {
                            "title": "Model Details",
                            "description": "Manage model details",
                            "version": "1",
                            "preferred": true,
                            "discoveryRestUrl": "https://api.shapeways.com/models/v1",
                            "discoveryLink": "/models/v1",
                            "documentationLink": "https://developers.shapeways.com/docs"
                        }
                    ]
                }
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GET /categories/{categoryId}/v1",
            "url": "https://community-shapeways.p.rapidapi.com/categories/{categoryId}/v1",
            "description": "",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "categoryid",
                    "type": "STRING",
                    "description": "Category id",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/categories/{categoryId}/v1\"\nquerystring = {\"categoryid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/categories/{categoryId}/v1\"\nquerystring = {\"categoryid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GET /models/{modelId}/info/v1",
            "url": "https://community-shapeways.p.rapidapi.com/models/{modelId}/info/v1",
            "description": "",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "modelid",
                    "type": "STRING",
                    "description": "The existing 3D model id",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/models/{modelId}/info/v1\"\nquerystring = {\"modelid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/models/{modelId}/info/v1\"\nquerystring = {\"modelid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GET /materials/{materialId}/v1",
            "url": "https://community-shapeways.p.rapidapi.com/materials/{materialId}/v1",
            "description": "",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "materialid",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/materials/{materialId}/v1\"\nquerystring = {\"materialid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/materials/{materialId}/v1\"\nquerystring = {\"materialid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GET /models/{modelId}/files/{fileVersion}/v1",
            "url": "https://community-shapeways.p.rapidapi.com/models/{modelId}/files/{fileVersion}/v1",
            "description": "",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "modelid",
                    "type": "STRING",
                    "description": "Model id",
                    "default": ""
                },
                {
                    "name": "fileversion",
                    "type": "STRING",
                    "description": "Model file version",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "file",
                    "type": "STRING",
                    "description": "Include model data file in the response  - Default: 0  - 0 - Do not include model file data  - 1 - Include model file data",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/models/{modelId}/files/{fileVersion}/v1\"\nquerystring = {\"file\": \"\", \"modelid\": \"\", \"fileversion\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/models/{modelId}/files/{fileVersion}/v1\"\nquerystring = {\"file\": \"\", \"modelid\": \"\", \"fileversion\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GET /api/v1/",
            "url": "https://community-shapeways.p.rapidapi.com/api/v1/",
            "description": "",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/api/v1/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/api/v1/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "List": {
                    "title": "API List",
                    "httpMethod": "GET",
                    "description": "Your API usage information",
                    "version": "1",
                    "revision": "20121123",
                    "preferred": true,
                    "path": "/api/v1/",
                    "discoveryRestUrl": "https://api.shapeways.com/api/v1",
                    "discoveryLink": "/api/v1",
                    "discoveryRootUrl": "https://api.shapeways.com",
                    "documentationLink": "https://developers.shapeways.com/docs",
                    "parameters": [],
                    "returns": {
                        "result": {
                            "type": "string",
                            "description": "A 'result' field stating 'success'"
                        },
                        "nextActionSuggestions": {
                            "type": "array",
                            "description": "Suggestions for next actions"
                        },
                        "rateLimit": {
                            "type": "array",
                            "description": "Rate limiting information",
                            "items": {
                                "retryInSeconds": {
                                    "type": "int",
                                    "description": "Time in seconds you must wait before making another API call"
                                },
                                "retryTimestamp": {
                                    "type": "int",
                                    "description": "Unix timestamp you must wait before making another API call"
                                },
                                "windowInSeconds": {
                                    "type": "int",
                                    "description": "Rate limiting sliding window in seconds"
                                },
                                "limit": {
                                    "type": "int",
                                    "description": "Maximum number of API calls during the rate limiting window"
                                },
                                "remaining": {
                                    "type": "int",
                                    "description": "Remaining number of API calls in the current rate limiting window"
                                },
                                "history": {
                                    "type": "array",
                                    "description": "Number of API calls made for each minute during the rate limiting window."
                                }
                            }
                        }
                    },
                    "error": {
                        "result": {
                            "type": "string",
                            "description": "A 'result' field stating 'failure'"
                        },
                        "reason": {
                            "type": "string",
                            "description": "Failure reason"
                        },
                        "oauthErrorMessage": {
                            "type": "string",
                            "description": "Oauth error message.",
                            "dependencies": "Only if oauth error"
                        }
                    }
                }
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GET /materials/v1",
            "url": "https://community-shapeways.p.rapidapi.com/materials/v1",
            "description": "",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/materials/v1\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/materials/v1\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "List": {
                    "title": "List materials",
                    "httpMethod": "GET",
                    "description": "Retrieves information on all available 40+ Shapeways\u2019 materials.",
                    "version": "1",
                    "revision": "20130228",
                    "preferred": true,
                    "path": "/materials/v1",
                    "discoveryRestUrl": "https://api.shapeways.com/materials/v1",
                    "discoveryLink": "/materials/v1",
                    "discoveryRootUrl": "https://api.shapeways.com",
                    "documentationLink": "https://developers.shapeways.com/docs",
                    "parameters": [],
                    "returns": {
                        "result": {
                            "type": "string",
                            "description": "A 'result' field stating 'success'"
                        },
                        "materials": {
                            "id": "materials",
                            "type": "object",
                            "description": "Material objects",
                            "properties": {
                                "<materialId>": {
                                    "id": "<materialId>",
                                    "type": "object",
                                    "description": "Material Object",
                                    "properties": {
                                        "title": {
                                            "type": "string",
                                            "description": "Material name"
                                        },
                                        "supportsColorFiles": {
                                            "type": "boolean",
                                            "description": "Material supports color"
                                        },
                                        "printerId": {
                                            "type": "int",
                                            "description": "Printer id that this material is printed on"
                                        },
                                        "swatch": {
                                            "type": "string",
                                            "description": "The url for the material swatch"
                                        },
                                        "restrictions": {
                                            "id": "restrictions",
                                            "type": "object",
                                            "description": "Material Restriction Object",
                                            "properties": {
                                                "<restrictionId>": {
                                                    "id": "<restrictionId>",
                                                    "type": "object",
                                                    "description": "Material Restriction Object",
                                                    "properties": {
                                                        "restrictionId": {
                                                            "type": "int",
                                                            "description": "Material Restriction ID"
                                                        },
                                                        "restrictionName": {
                                                            "type": "string",
                                                            "description": "Material Restriction Name"
                                                        },
                                                        "restrictionEntityIds": {
                                                            "type": "array",
                                                            "description": "Material Restriction Entity Ids",
                                                            "default": [],
                                                            "items": {
                                                                "type": "int",
                                                                "description": "Material Restriction Entity Id"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "nextActionSuggestions": {
                            "type": "object",
                            "description": "Suggestions for next actions"
                        }
                    },
                    "error": {
                        "result": {
                            "type": "string",
                            "description": "A 'result' field stating 'failure'"
                        },
                        "reason": {
                            "type": "string",
                            "description": "Failure reason"
                        },
                        "oauthErrorMessage": {
                            "type": "string",
                            "description": "Oauth error message.",
                            "dependencies": "Only if oauth error"
                        }
                    }
                },
                "Get": {
                    "title": "Material information",
                    "httpMethod": "GET",
                    "description": "Retrieves information for a specific material (Specified by the materialId)",
                    "version": "1",
                    "revision": "20130228",
                    "preferred": true,
                    "path": "/materials/{materialId}/v1",
                    "discoveryRestUrl": "https://api.shapeways.com/materials/v1",
                    "discoveryLink": "/materials/{materialId}/v1",
                    "discoveryRootUrl": "https://api.shapeways.com",
                    "documentationLink": "https://developers.shapeways.com/docs",
                    "parameters": {
                        "materialId": {
                            "type": "int",
                            "description": "Material id",
                            "location": "path",
                            "dependencies": "required"
                        }
                    },
                    "returns": {
                        "result": {
                            "type": "string",
                            "description": "A 'result' field stating 'success'"
                        },
                        "materialId": {
                            "type": "int",
                            "description": "Material ID"
                        },
                        "title": {
                            "type": "string",
                            "description": "Material name"
                        },
                        "supportsColorFiles": {
                            "type": "boolean",
                            "description": "Material supports color"
                        },
                        "printerId": {
                            "type": "int",
                            "description": "Printer id that this material is printed on"
                        },
                        "swatch": {
                            "type": "string",
                            "description": "The url for the material swatch"
                        },
                        "restrictions": {
                            "id": "restrictions",
                            "type": "object",
                            "description": "Material Restriction Object",
                            "properties": {
                                "<restrictionId>": {
                                    "id": "<restrictionId>",
                                    "type": "object",
                                    "description": "Material Restriction Object",
                                    "properties": {
                                        "restrictionId": {
                                            "type": "int",
                                            "description": "Material Restriction ID"
                                        },
                                        "restrictionName": {
                                            "type": "string",
                                            "description": "Material Restriction Name"
                                        },
                                        "restrictionEntityIds": {
                                            "type": "array",
                                            "description": "Material Restriction Entity Ids",
                                            "default": [],
                                            "items": {
                                                "type": "int",
                                                "description": "Material Restriction Entity Id"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "nextActionSuggestions": {
                            "type": "object",
                            "description": "Suggestions for next actions"
                        }
                    },
                    "error": {
                        "result": {
                            "type": "string",
                            "description": "A 'result' field stating 'failure'"
                        },
                        "reason": {
                            "type": "string",
                            "description": "Failure reason"
                        },
                        "oauthErrorMessage": {
                            "type": "string",
                            "description": "Oauth error message.",
                            "dependencies": "Only if oauth error"
                        }
                    }
                }
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GET /models/{modelId}/v1",
            "url": "https://community-shapeways.p.rapidapi.com/models/{modelId}/v1",
            "description": "",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "modelid",
                    "type": "STRING",
                    "description": "Model id",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/models/{modelId}/v1\"\nquerystring = {\"modelid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/models/{modelId}/v1\"\nquerystring = {\"modelid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "POST /models/{modelId}/files/v1",
            "url": "https://community-shapeways.p.rapidapi.com/models/{modelId}/files/v1",
            "description": "",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "modelid",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/models/{modelId}/files/v1\"\nquerystring = {\"modelid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/models/{modelId}/files/v1\"\nquerystring = {\"modelid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "POST /models/v1",
            "url": "https://community-shapeways.p.rapidapi.com/models/v1",
            "description": "",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/models/v1\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/models/v1\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "POST /orders/cart/v1",
            "url": "https://community-shapeways.p.rapidapi.com/orders/cart/v1",
            "description": "",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/orders/cart/v1\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/orders/cart/v1\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "POST /price/v1",
            "url": "https://community-shapeways.p.rapidapi.com/price/v1",
            "description": "",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/price/v1\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/price/v1\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "POST /models/{modelId}/photos/v1",
            "url": "https://community-shapeways.p.rapidapi.com/models/{modelId}/photos/v1",
            "description": "",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "modelid",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/models/{modelId}/photos/v1\"\nquerystring = {\"modelid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://community-shapeways.p.rapidapi.com/models/{modelId}/photos/v1\"\nquerystring = {\"modelid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-shapeways.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        }
    ],
    "standardized_name": "shapeways"
}