{
    "tool_name":"Cardsearch",
    "tool_description":"Magic the Gathering card, set and Dutch price information.\r\nEach api call is required to provide a authentication key.\r\nYou can request one by email, it's free by the way\r\ninfo@cardsearch.nl\r\n\r\nEach api call can provide an additional parameter \"format\" with values \"json\",\"xml\", \"csv\" or \"table\".\r\nJson is the default format.\r\nExample GET http://api.cardsearch.nl/v1/sets?key=demo&format=xml",
    "title":"Cardsearch",
    "pricing":"FREE",
    "score":{
        "avgServiceLevel":100,
        "avgLatency":348,
        "avgSuccessRate":100,
        "popularityScore":8.8,
        "__typename":"Score"
    },
    "home_url":"https://rapidapi.com/Jaap/api/cardsearch/",
    "host":"jaap-cardsearch-v1.p.rapidapi.com",
    "api_list":[
        {
            "name":"/v1/prices",
            "url":"https://jaap-cardsearch-v1.p.rapidapi.com/v1/prices",
            "description":"Get general price information per card",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[
                {
                    "name":"key",
                    "type":"STRING",
                    "description":"Your Cardsearch api key",
                    "default":""
                },
                {
                    "name":"names[]",
                    "type":"STRING",
                    "description":"Single card: \"Terror\", card from set: \"Terror@6ED\"",
                    "default":""
                },
                {
                    "name":"mids[]",
                    "type":"STRING",
                    "description":"A single card or multiple cards by multiverseid",
                    "default":""
                }
            ],
            "code":"import requests\n\nurl = \"https://jaap-cardsearch-v1.p.rapidapi.com/v1/prices\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"jaap-cardsearch-v1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        }
    ]
}