{
    "product_id": "53aa34fde4b051a76d23f628",
    "tool_description": "Returns well-parsed whois fields in XML and JSON formats. Use it to track domain registrations, check domain name availability, detect credit card fraud, locate users geographically. The service automatically follows the whois registry referral chains until it finds the correct whois registrars with the most complete whois data. Works over basic HTTP and avoices firewall-related problems of accessing Whois servers on port 43.",
    "home_url": "https://rapidapi.com/whoisapi/api/whois-3/",
    "name": "whois",
    "title": "whois",
    "pricing": "FREE",
    "tool_name": "whois",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 1695,
        "avgSuccessRate": 49,
        "popularityScore": 9.1,
        "__typename": "Score"
    },
    "host": "whoisapi.p.rapidapi.com",
    "api_list": [
        {
            "name": "whois lookup v1",
            "url": "https://whoisapi.p.rapidapi.com/whoisserver/WhoisService",
            "description": "Whois api v1 with password authentication.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "domainname",
                    "type": "STRING",
                    "description": "input domain name to lookup",
                    "default": "whoisxmlapi.com"
                }
            ],
            "optional_parameters": [
                {
                    "name": "ipWhois",
                    "type": "STRING",
                    "description": "1 results in returning the whois record for the hosting ip if the whois record for the tld of the input domain is not supported. Default: 0",
                    "default": ""
                },
                {
                    "name": "preferFresh",
                    "type": "STRING",
                    "description": "1 results in getting the latest Whois record even if it's incomplete. Default: 0",
                    "default": ""
                },
                {
                    "name": "ignoreRawTexts",
                    "type": "STRING",
                    "description": "1 results in stripping all raw text from the output. Default: 0",
                    "default": ""
                },
                {
                    "name": "thinWhois",
                    "type": "STRING",
                    "description": "0 | 1 (defaults to 0); 1 results in returning whois data from registry only, without fetching data from registrar; returned registry data corresponds to the WhoisRecord \u2192 registryData schema element",
                    "default": ""
                },
                {
                    "name": "callback",
                    "type": "STRING",
                    "description": "A javascript function used when the outputFormat is JSON; this is an implementation known as JSONP which invokes the callback on the returned response.",
                    "default": ""
                },
                {
                    "name": "registryRawText",
                    "type": "STRING",
                    "description": "a string representing the registry whois raw text to be parsed; works only when the _parse parameter is equal to 1",
                    "default": ""
                },
                {
                    "name": "outputformat",
                    "type": "STRING",
                    "description": "XML | JSON (defaults to XML)",
                    "default": ""
                },
                {
                    "name": "da",
                    "type": "STRING",
                    "description": "0 | 1 | 2 (defaults to 0) 1 results in a quick check on domain availability, 2 is slower but more accurate",
                    "default": ""
                },
                {
                    "name": "checkProxyData",
                    "type": "STRING",
                    "description": "0 | 1 (defaults to 0); 1 results in fetching proxy/whois guard data, if it exists, in the WhoisRecord \u2192 privateWhoisProxy schema element",
                    "default": ""
                },
                {
                    "name": "_parse",
                    "type": "STRING",
                    "description": "0 | 1 (defaults to 0); 1 provides parsing for input whois raw texts described at the *RawText parameters",
                    "default": ""
                },
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "0 | 1 (defaults to 0); 1 results in returning ips for the domain name",
                    "default": ""
                },
                {
                    "name": "registrarRawText",
                    "type": "STRING",
                    "description": "a string representing the registrar whois raw text to be parsed; works only when the _parse parameter is equal to 1",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://whoisapi.p.rapidapi.com/whoisserver/WhoisService\"\nquerystring = {\"ipWhois\": \"\", \"preferFresh\": \"\", \"ignoreRawTexts\": \"\", \"domainname\": \"whoisxmlapi.com\", \"thinWhois\": \"\", \"callback\": \"\", \"registryRawText\": \"\", \"outputformat\": \"\", \"da\": \"\", \"checkProxyData\": \"\", \"_parse\": \"\", \"ip\": \"\", \"registrarRawText\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"whoisapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://whoisapi.p.rapidapi.com/whoisserver/WhoisService\"\nquerystring = {\"ipWhois\": \"\", \"preferFresh\": \"\", \"ignoreRawTexts\": \"\", \"domainname\": \"whoisxmlapi.com\", \"thinWhois\": \"\", \"callback\": \"\", \"registryRawText\": \"\", \"outputformat\": \"\", \"da\": \"\", \"checkProxyData\": \"\", \"_parse\": \"\", \"ip\": \"\", \"registrarRawText\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"whoisapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        }
    ],
    "standardized_name": "whois"
}