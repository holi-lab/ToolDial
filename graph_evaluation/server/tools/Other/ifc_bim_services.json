{
    "product_id": "api_f6ff5bfd-cb2e-42fb-9830-1e6af7ed9061",
    "tool_description": "IFC models related BIM services\nGITHUB Repository : https://github.com/aminov-jp/BIMIFCServices",
    "home_url": "https://rapidapi.com/AminovOne/api/ifc-bim-services4/",
    "name": "IFC BIM Services",
    "title": "IFC BIM Services",
    "pricing": "FREE",
    "tool_name": "IFC BIM Services",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 274,
        "avgSuccessRate": 25,
        "popularityScore": 1.4,
        "__typename": "Score"
    },
    "host": "ifc-bim-services4.p.rapidapi.com",
    "api_list": [
        {
            "name": "ilod_status_ilod__ticket__get",
            "url": "https://ifc-bim-services4.p.rapidapi.com/ilod/{ticket}",
            "description": "Check Result of an ILOD check",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ifc-bim-services4.p.rapidapi.com/ilod/{ticket}\"\nquerystring = {\"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ifc-bim-services4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ifc-bim-services4.p.rapidapi.com/ilod/{ticket}\"\nquerystring = {\"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ifc-bim-services4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {
                "title": "ILODResults",
                "required": [
                    "result",
                    "expiry"
                ],
                "type": "object",
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "title": "ILODResult",
                                "required": [
                                    "id",
                                    "fail",
                                    "success"
                                ],
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "title": "Id",
                                        "type": "string"
                                    },
                                    "fail": {
                                        "title": "Fail",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "success": {
                                        "title": "Success",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "description": "A class that represents an ILOD result object.\n\nAttributes:\n-----------\nid : str\n    A string representing the GUID of the IFC element.\nfail : List[str]\n    A list of strings representing the list of failed rules.\nsuccess : List[str]\n    A list of strings representing the list of successful rules."
                            }
                        },
                        "description": "A class that represents a result object.\n\nAttributes:\n-----------\n__root__ : Dict[str, List[ILODResult]]\n    A dictionary representing the root object of the result."
                    },
                    "expiry": {
                        "title": "Expiry",
                        "type": "string"
                    }
                },
                "description": "A class that represents an ILOD results object.\n\nAttributes:\n-----------\nresult : Result\n    A Result object representing the result of the ILOD operation.\nexpiry : str\n    A string representing the expiration time of the result."
            }
        },
        {
            "name": "exists_exists__ticket__get",
            "url": "https://ifc-bim-services4.p.rapidapi.com/exists/{ticket}",
            "description": "Check if the key ticket is available or not",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ifc-bim-services4.p.rapidapi.com/exists/{ticket}\"\nquerystring = {\"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ifc-bim-services4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ifc-bim-services4.p.rapidapi.com/exists/{ticket}\"\nquerystring = {\"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ifc-bim-services4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "exists": false
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "syntax_status_syntax__ticket__get",
            "url": "https://ifc-bim-services4.p.rapidapi.com/syntax/{ticket}",
            "description": "Check Result of a syntax check",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ifc-bim-services4.p.rapidapi.com/syntax/{ticket}\"\nquerystring = {\"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ifc-bim-services4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ifc-bim-services4.p.rapidapi.com/syntax/{ticket}\"\nquerystring = {\"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ifc-bim-services4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per second for your plan, BASIC, by the API provider"
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "check_syntax_syntax__ticket__post",
            "url": "https://ifc-bim-services4.p.rapidapi.com/syntax/{ticket}",
            "description": "For Given job ticket, execute syntax review",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ifc-bim-services4.p.rapidapi.com/syntax/{ticket}\"\nquerystring = {\"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ifc-bim-services4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ifc-bim-services4.p.rapidapi.com/syntax/{ticket}\"\nquerystring = {\"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ifc-bim-services4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "check_ilod_ilod__ticket__post",
            "url": "https://ifc-bim-services4.p.rapidapi.com/ilod/{ticket}",
            "description": "For Given job ticket, execute ILOD review",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ifc-bim-services4.p.rapidapi.com/ilod/{ticket}\"\nquerystring = {\"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ifc-bim-services4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ifc-bim-services4.p.rapidapi.com/ilod/{ticket}\"\nquerystring = {\"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ifc-bim-services4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "register_files_register_post",
            "url": "https://ifc-bim-services4.p.rapidapi.com/register",
            "description": "End point to upload files on the cloud.\nIt will return a string key that can be used for other services.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "files",
                    "type": "ARRAY",
                    "description": "",
                    "default": "[]"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ifc-bim-services4.p.rapidapi.com/register\"\nquerystring = {\"files\": \"[]\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ifc-bim-services4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ifc-bim-services4.p.rapidapi.com/register\"\nquerystring = {\"files\": \"[]\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ifc-bim-services4.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "title": "FileTicket",
                "required": [
                    "ticket",
                    "bytes",
                    "life",
                    "files",
                    "msg"
                ],
                "type": "object",
                "properties": {
                    "ticket": {
                        "title": "Ticket",
                        "type": "string"
                    },
                    "bytes": {
                        "title": "Bytes",
                        "type": "integer"
                    },
                    "life": {
                        "title": "Life",
                        "type": "string"
                    },
                    "files": {
                        "title": "Files",
                        "type": "integer"
                    },
                    "msg": {
                        "title": "Msg",
                        "type": "string"
                    }
                },
                "description": "A class that represents a file ticket object.\n\nAttributes:\n-----------\nticket : str\n    A string representing the unique identifier of the file ticket.\nbytes : int\n    An integer representing the size of the file in bytes.\nlife : str\n    A string representing the expiration time of the ticket.\nfiles : int\n    An integer representing the number of files associated with the ticket.\nmsg : str\n    A string representing a message associated with the ticket."
            }
        }
    ],
    "standardized_name": "ifc_bim_services"
}