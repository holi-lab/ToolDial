{
    "product_id": "api_c091ca6c-107e-422d-b788-b795a053db98",
    "tool_description": "GroupDocs.Metadata Cloud is a REST API to manage metadata properties of numerous file formats in the cloud.",
    "home_url": "https://rapidapi.com/groupdocscloud/api/groupdocs-metadata-cloud/",
    "name": "GroupDocs Metadata Cloud",
    "title": "GroupDocs Metadata Cloud",
    "pricing": "FREEMIUM",
    "tool_name": "GroupDocs Metadata Cloud",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 489,
        "avgSuccessRate": 0,
        "popularityScore": 0.2,
        "__typename": "Score"
    },
    "host": "groupdocs-metadata-cloud.p.rapidapi.com",
    "api_list": [
        {
            "name": "GetFileVersions",
            "url": "https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/storage/version/{path}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "File path e.g. '/file.ext'",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/storage/version/{path}\"\nquerystring = {\"storageName\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-metadata-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/storage/version/{path}\"\nquerystring = {\"storageName\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-metadata-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "requestId": "2860ca2c-935e-43bd-91c8-50ed54aefe0a",
                "error": {
                    "code": "error",
                    "message": "ClientId is undefined. Please check authorization.",
                    "description": "Operation Failed. General Error.",
                    "dateTime": "2023-06-16T17:39:19.4018557Z",
                    "innerError": null
                }
            },
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "File versions FileVersion.",
                "properties": {
                    "Value": {
                        "description": "File versions FileVersion.",
                        "items": {
                            "additionalProperties": false,
                            "allOf": [
                                {
                                    "additionalProperties": false,
                                    "description": "File or folder information",
                                    "properties": {
                                        "IsFolder": {
                                            "description": "True if it is a folder.",
                                            "type": "boolean"
                                        },
                                        "ModifiedDate": {
                                            "description": "File or folder last modified DateTime.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "File or folder name.",
                                            "type": "string"
                                        },
                                        "Path": {
                                            "description": "File or folder path.",
                                            "type": "string"
                                        },
                                        "Size": {
                                            "description": "File or folder size.",
                                            "format": "int64",
                                            "maximum": 9223372036854776000,
                                            "minimum": -9223372036854776000,
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "IsFolder",
                                        "Size"
                                    ],
                                    "type": "object"
                                },
                                {
                                    "additionalProperties": false,
                                    "description": "File Version",
                                    "properties": {
                                        "IsLatest": {
                                            "description": "Specifies whether the file is (true) or is not (false) the latest version of an file.",
                                            "type": "boolean"
                                        },
                                        "VersionId": {
                                            "description": "File Version ID.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "IsLatest"
                                    ],
                                    "type": "object"
                                }
                            ],
                            "description": "File Version",
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetFilesList",
            "url": "https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/storage/folder/{path}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "Folder path e.g. '/folder'",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/storage/folder/{path}\"\nquerystring = {\"storageName\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-metadata-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/storage/folder/{path}\"\nquerystring = {\"storageName\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-metadata-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "requestId": "e8f97f6d-c67d-4e8c-8e9a-42bbf3496a9c",
                "error": {
                    "code": "error",
                    "message": "ClientId is undefined. Please check authorization.",
                    "description": "Operation Failed. General Error.",
                    "dateTime": "2023-06-16T17:39:23.5480166Z",
                    "innerError": null
                }
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GetSupportedFileFormats",
            "url": "https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/formats",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/formats\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-metadata-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/formats\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-metadata-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "Describes object which contains list of supported file formats.",
                "properties": {
                    "Formats": {
                        "description": "Supported file formats.",
                        "items": {
                            "additionalProperties": false,
                            "description": "File-format",
                            "properties": {
                                "Extension": {
                                    "description": "File extension",
                                    "type": "string"
                                },
                                "FileFormat": {
                                    "description": "File format",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "StorageExists",
            "url": "https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/storage/{storageName}/exist",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/storage/{storageName}/exist\"\nquerystring = {\"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-metadata-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/storage/{storageName}/exist\"\nquerystring = {\"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-metadata-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "requestId": "4cadd755-e76a-4a5b-ba19-8a4a8c50aa87",
                "error": {
                    "code": "error",
                    "message": "ClientId is undefined. Please check authorization.",
                    "description": "Operation Failed. General Error.",
                    "dateTime": "2023-06-16T17:39:35.0416864Z",
                    "innerError": null
                }
            },
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "Storage exists",
                "properties": {
                    "Exists": {
                        "description": "Shows that the storage exists.\n            ",
                        "type": "boolean"
                    }
                },
                "required": [
                    "Exists"
                ],
                "type": "object"
            }
        },
        {
            "name": "GetDiscUsage",
            "url": "https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/storage/disc",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/storage/disc\"\nquerystring = {\"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-metadata-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/storage/disc\"\nquerystring = {\"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-metadata-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "requestId": "a4d6622d-53b2-460e-984b-851008290d30",
                "error": {
                    "code": "error",
                    "message": "ClientId is undefined. Please check authorization.",
                    "description": "Operation Failed. General Error.",
                    "dateTime": "2023-06-16T17:39:37.4547603Z",
                    "innerError": null
                }
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "DownloadFile",
            "url": "https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/storage/file/{path}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "File path e.g. '/folder/file.ext'",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                },
                {
                    "name": "versionId",
                    "type": "STRING",
                    "description": "File version ID to download",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/storage/file/{path}\"\nquerystring = {\"storageName\": \"\", \"versionId\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-metadata-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/storage/file/{path}\"\nquerystring = {\"storageName\": \"\", \"versionId\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-metadata-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "requestId": "7776ad14-1d1f-44bd-91ab-b8df31a17df5",
                "error": {
                    "code": "error",
                    "message": "ClientId is undefined. Please check authorization.",
                    "description": "Operation Failed. General Error.",
                    "dateTime": "2023-06-16T17:39:41.1975093Z",
                    "innerError": null
                }
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "ObjectExists",
            "url": "https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/storage/exist/{path}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "File or folder path e.g. '/file.ext' or '/folder'",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                },
                {
                    "name": "versionId",
                    "type": "STRING",
                    "description": "File version ID",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/storage/exist/{path}\"\nquerystring = {\"storageName\": \"\", \"path\": \"\", \"versionId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-metadata-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/storage/exist/{path}\"\nquerystring = {\"storageName\": \"\", \"path\": \"\", \"versionId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-metadata-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "requestId": "7a5f831b-04d9-4b0c-aedf-7c824867e14a",
                "error": {
                    "code": "error",
                    "message": "ClientId is undefined. Please check authorization.",
                    "description": "Operation Failed. General Error.",
                    "dateTime": "2023-06-16T17:39:42.1163786Z",
                    "innerError": null
                }
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Tags",
            "url": "https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/tags",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/tags\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-metadata-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/tags\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-metadata-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "Tags result",
                "properties": {
                    "RootPackage": {
                        "additionalProperties": false,
                        "description": "Metadata package",
                        "properties": {
                            "InnerPackages": {
                                "description": "Inner packages of current metadata package.",
                                "type": "array"
                            },
                            "PackageName": {
                                "description": "Name of the metadata package.",
                                "type": "string"
                            },
                            "PackageProperties": {
                                "description": "Properties of the metadata package.",
                                "items": {
                                    "additionalProperties": false,
                                    "description": "Metadata property",
                                    "properties": {
                                        "AccessLevel": {
                                            "description": "Property access level.",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "Name of the property.",
                                            "type": "string"
                                        },
                                        "PropertyType": {
                                            "description": "Property type.",
                                            "type": "string"
                                        },
                                        "Tags": {
                                            "description": "Collection of the property tags.",
                                            "items": {
                                                "additionalProperties": false,
                                                "description": "Class for tag",
                                                "properties": {
                                                    "Category": {
                                                        "description": "Category of the tag.",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "Name of the tag.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Value": {
                                            "description": "Value of the property.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "Add",
            "url": "https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/add",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/add\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-metadata-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/add\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-metadata-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "Add result",
                "properties": {
                    "AddedCount": {
                        "description": "Total count of added properties.",
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer"
                    },
                    "Path": {
                        "description": "Resultant file path in storage.",
                        "type": "string"
                    },
                    "Url": {
                        "description": "Resultant file download url.",
                        "type": "string"
                    }
                },
                "required": [
                    "AddedCount"
                ],
                "type": "object"
            }
        },
        {
            "name": "Set",
            "url": "https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/set",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/set\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-metadata-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/set\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-metadata-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "Set result",
                "properties": {
                    "Path": {
                        "description": "Resultant file path in storage.",
                        "type": "string"
                    },
                    "SetCount": {
                        "description": "Total count of set properties.",
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer"
                    },
                    "Url": {
                        "description": "Resultant file download url.",
                        "type": "string"
                    }
                },
                "required": [
                    "SetCount"
                ],
                "type": "object"
            }
        },
        {
            "name": "Remove",
            "url": "https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/remove",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/remove\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-metadata-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/remove\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-metadata-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "Remove result",
                "properties": {
                    "Path": {
                        "description": "Resultant file path in storage.",
                        "type": "string"
                    },
                    "RemovedCount": {
                        "description": "Total count of removed properties.",
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer"
                    },
                    "Url": {
                        "description": "Resultant file download url.",
                        "type": "string"
                    }
                },
                "required": [
                    "RemovedCount"
                ],
                "type": "object"
            }
        },
        {
            "name": "GetInfo",
            "url": "https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/info",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/info\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-metadata-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-metadata-cloud.p.rapidapi.com/metadata/info\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-metadata-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "Info result.",
                "properties": {
                    "FileType": {
                        "additionalProperties": false,
                        "description": "Represents the file type. ",
                        "properties": {
                            "Extension": {
                                "description": "Gets or sets the filename suffix (including the period \".\") e.g. \".doc\".",
                                "type": "string"
                            },
                            "FileFormat": {
                                "description": "Gets or sets the file type name e.g. \"Microsoft Word Document\".",
                                "type": "string"
                            },
                            "MimeType": {
                                "description": "Gets or sets the MIME-type.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "IsEncrypted": {
                        "description": "Gets or sets a value indicating whether this instance is encrypted.",
                        "type": "boolean"
                    },
                    "PageCount": {
                        "description": "Gets or sets the total number of document pages.",
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer"
                    },
                    "Size": {
                        "description": "Gets or sets the size of the document in bytes.",
                        "format": "int64",
                        "maximum": 9223372036854776000,
                        "minimum": -9223372036854776000,
                        "type": "integer"
                    }
                },
                "required": [
                    "Size",
                    "PageCount",
                    "IsEncrypted"
                ],
                "type": "object"
            }
        },
        {
            "name": "Extract",
            "url": "https://groupdocs-metadata-cloud.p.rapidapi.com/metadata",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://groupdocs-metadata-cloud.p.rapidapi.com/metadata\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-metadata-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-metadata-cloud.p.rapidapi.com/metadata\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-metadata-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "Extract result",
                "properties": {
                    "MetadataTree": {
                        "additionalProperties": false,
                        "description": "Metadata package",
                        "properties": {
                            "InnerPackages": {
                                "description": "Inner packages of current metadata package.",
                                "type": "array"
                            },
                            "PackageName": {
                                "description": "Name of the metadata package.",
                                "type": "string"
                            },
                            "PackageProperties": {
                                "description": "Properties of the metadata package.",
                                "items": {
                                    "additionalProperties": false,
                                    "description": "Metadata property",
                                    "properties": {
                                        "AccessLevel": {
                                            "description": "Property access level.",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "Name of the property.",
                                            "type": "string"
                                        },
                                        "PropertyType": {
                                            "description": "Property type.",
                                            "type": "string"
                                        },
                                        "Tags": {
                                            "description": "Collection of the property tags.",
                                            "items": {
                                                "additionalProperties": false,
                                                "description": "Class for tag",
                                                "properties": {
                                                    "Category": {
                                                        "description": "Category of the tag.",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "Name of the tag.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Value": {
                                            "description": "Value of the property.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "Properties": {
                        "description": "Metadata properties found by tag.",
                        "items": {
                            "additionalProperties": false,
                            "description": "Metadata property",
                            "properties": {
                                "AccessLevel": {
                                    "description": "Property access level.",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "Name of the property.",
                                    "type": "string"
                                },
                                "PropertyType": {
                                    "description": "Property type.",
                                    "type": "string"
                                },
                                "Tags": {
                                    "description": "Collection of the property tags.",
                                    "items": {
                                        "additionalProperties": false,
                                        "description": "Class for tag",
                                        "properties": {
                                            "Category": {
                                                "description": "Category of the tag.",
                                                "type": "string"
                                            },
                                            "Name": {
                                                "description": "Name of the tag.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "Value": {
                                    "description": "Value of the property.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            }
        }
    ],
    "standardized_name": "groupdocs_metadata_cloud"
}