{
    "product_id": "api_b9d0941e-3922-4116-ae2d-4bae5105e098",
    "tool_description": "The GroupDocs.Annotation Cloud is a REST API that helps you apply text & figure annotations to the documents in the cloud.",
    "home_url": "https://rapidapi.com/groupdocscloud/api/groupdocs-annotation-cloud/",
    "name": "GroupDocs.Annotation Cloud",
    "title": "GroupDocs.Annotation Cloud",
    "pricing": "FREEMIUM",
    "tool_name": "GroupDocs.Annotation Cloud",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 501,
        "avgSuccessRate": 0,
        "popularityScore": 0.2,
        "__typename": "Score"
    },
    "host": "groupdocs-annotation-cloud.p.rapidapi.com",
    "api_list": [
        {
            "name": "DownloadFile",
            "url": "https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/file/{path}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "File path e.g. '/folder/file.ext'",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                },
                {
                    "name": "versionId",
                    "type": "STRING",
                    "description": "File version ID to download",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/file/{path}\"\nquerystring = {\"storageName\": \"\", \"versionId\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/file/{path}\"\nquerystring = {\"storageName\": \"\", \"versionId\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "requestId": "c29fe791-692e-4087-bab8-b4b0b800a1cc",
                "error": {
                    "code": "error",
                    "message": "ClientId is undefined. Please check authorization.",
                    "description": "Operation Failed. General Error.",
                    "dateTime": "2023-06-16T16:21:35.3714044Z",
                    "innerError": null
                }
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GetDiscUsage",
            "url": "https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/disc",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/disc\"\nquerystring = {\"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/disc\"\nquerystring = {\"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "requestId": "e67bf9a5-ba9e-45c5-813d-49833316d927",
                "error": {
                    "code": "error",
                    "message": "ClientId is undefined. Please check authorization.",
                    "description": "Operation Failed. General Error.",
                    "dateTime": "2023-06-16T16:21:39.7424066Z",
                    "innerError": null
                }
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GetSupportedFileFormats",
            "url": "https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/formats",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/formats\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/formats\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "requestId": "2b1bd072-1cc2-42df-8cca-04ce66cb57ba",
                "error": {
                    "code": "error",
                    "message": "ClientId is undefined. Please check authorization.",
                    "description": "Operation Failed. General Error.",
                    "dateTime": "2023-06-16T16:21:42.662156Z",
                    "innerError": null
                }
            },
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "Describes object which contains list of supported file formats",
                "properties": {
                    "Formats": {
                        "description": "Supported file formats",
                        "items": {
                            "additionalProperties": false,
                            "description": "File format",
                            "properties": {
                                "Extension": {
                                    "description": "File format extension",
                                    "type": "string"
                                },
                                "FileFormat": {
                                    "description": "File format name",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "GetFileVersions",
            "url": "https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/version/{path}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "File path e.g. '/file.ext'",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/version/{path}\"\nquerystring = {\"storageName\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/version/{path}\"\nquerystring = {\"storageName\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "requestId": "c70308be-042c-4bb4-a8f5-8e3ac740ac45",
                "error": {
                    "code": "error",
                    "message": "ClientId is undefined. Please check authorization.",
                    "description": "Operation Failed. General Error.",
                    "dateTime": "2023-06-16T16:21:43.4265674Z",
                    "innerError": null
                }
            },
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "File versions FileVersion.",
                "properties": {
                    "Value": {
                        "description": "File versions FileVersion.",
                        "items": {
                            "additionalProperties": false,
                            "allOf": [
                                {
                                    "additionalProperties": false,
                                    "description": "File or folder information",
                                    "properties": {
                                        "IsFolder": {
                                            "description": "True if it is a folder.",
                                            "type": "boolean"
                                        },
                                        "ModifiedDate": {
                                            "description": "File or folder last modified DateTime.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "File or folder name.",
                                            "type": "string"
                                        },
                                        "Path": {
                                            "description": "File or folder path.",
                                            "type": "string"
                                        },
                                        "Size": {
                                            "description": "File or folder size.",
                                            "format": "int64",
                                            "maximum": 9223372036854776000,
                                            "minimum": -9223372036854776000,
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "IsFolder",
                                        "Size"
                                    ],
                                    "type": "object"
                                },
                                {
                                    "additionalProperties": false,
                                    "description": "File Version",
                                    "properties": {
                                        "IsLatest": {
                                            "description": "Specifies whether the file is (true) or is not (false) the latest version of an file.",
                                            "type": "boolean"
                                        },
                                        "VersionId": {
                                            "description": "File Version ID.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "IsLatest"
                                    ],
                                    "type": "object"
                                }
                            ],
                            "description": "File Version",
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            }
        },
        {
            "name": "ObjectExists",
            "url": "https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/exist/{path}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "File or folder path e.g. '/file.ext' or '/folder'",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "versionId",
                    "type": "STRING",
                    "description": "File version ID",
                    "default": ""
                },
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/exist/{path}\"\nquerystring = {\"versionId\": \"\", \"path\": \"\", \"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/exist/{path}\"\nquerystring = {\"versionId\": \"\", \"path\": \"\", \"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "requestId": "32700351-aa60-4097-9c9b-1728b0eb3aee",
                "error": {
                    "code": "error",
                    "message": "ClientId is undefined. Please check authorization.",
                    "description": "Operation Failed. General Error.",
                    "dateTime": "2023-06-16T16:21:48.3761059Z",
                    "innerError": null
                }
            },
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "Object exists",
                "properties": {
                    "Exists": {
                        "description": "Indicates that the file or folder exists.",
                        "type": "boolean"
                    },
                    "IsFolder": {
                        "description": "True if it is a folder, false if it is a file.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "Exists",
                    "IsFolder"
                ],
                "type": "object"
            }
        },
        {
            "name": "StorageExists",
            "url": "https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/{storageName}/exist",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/{storageName}/exist\"\nquerystring = {\"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/{storageName}/exist\"\nquerystring = {\"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "requestId": "21a34ec4-a8ab-4c0d-b6a4-28e6a8ce0f9e",
                "error": {
                    "code": "error",
                    "message": "ClientId is undefined. Please check authorization.",
                    "description": "Operation Failed. General Error.",
                    "dateTime": "2023-06-16T16:21:56.4296119Z",
                    "innerError": null
                }
            },
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "Storage exists",
                "properties": {
                    "Exists": {
                        "description": "Shows that the storage exists.\n            ",
                        "type": "boolean"
                    }
                },
                "required": [
                    "Exists"
                ],
                "type": "object"
            }
        },
        {
            "name": "GetFilesList",
            "url": "https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/folder/{path}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "Folder path e.g. '/folder'",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/folder/{path}\"\nquerystring = {\"storageName\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/folder/{path}\"\nquerystring = {\"storageName\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "requestId": "c8642979-885c-47b4-aae0-bc098bfbe5b4",
                "error": {
                    "code": "error",
                    "message": "ClientId is undefined. Please check authorization.",
                    "description": "Operation Failed. General Error.",
                    "dateTime": "2023-06-16T16:21:57.3298511Z",
                    "innerError": null
                }
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "DeletePages",
            "url": "https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/preview/remove",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/preview/remove\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/preview/remove\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Extract",
            "url": "https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/extract",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/extract\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/extract\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "items": {
                    "additionalProperties": false,
                    "description": "Describes annotation properties",
                    "properties": {
                        "Angle": {
                            "description": "Gets or sets the watermark annotation's rotation angle",
                            "format": "double",
                            "maximum": 1.7976931348623157e+308,
                            "minimum": -1.7976931348623157e+308,
                            "type": "number"
                        },
                        "AnnotationPosition": {
                            "additionalProperties": false,
                            "description": "Describes point where annotation will be placed",
                            "properties": {
                                "X": {
                                    "description": "Gets or sets the x coordinate",
                                    "format": "double",
                                    "maximum": 1.7976931348623157e+308,
                                    "minimum": -1.7976931348623157e+308,
                                    "type": "number"
                                },
                                "Y": {
                                    "description": "Gets or sets the y coordinate",
                                    "format": "double",
                                    "maximum": 1.7976931348623157e+308,
                                    "minimum": -1.7976931348623157e+308,
                                    "type": "number"
                                }
                            },
                            "required": [
                                "X",
                                "Y"
                            ],
                            "type": "object"
                        },
                        "BackgroundColor": {
                            "description": "Gets or sets the annotation's background color ",
                            "format": "int32",
                            "maximum": 2147483647,
                            "minimum": -2147483648,
                            "type": "integer"
                        },
                        "Box": {
                            "additionalProperties": false,
                            "description": "Describes rectangle where annotation will be placed",
                            "properties": {
                                "Height": {
                                    "description": "Gets or sets the rectangle height",
                                    "format": "double",
                                    "maximum": 1.7976931348623157e+308,
                                    "minimum": -1.7976931348623157e+308,
                                    "type": "number"
                                },
                                "Width": {
                                    "description": "Gets or sets the rectangle width",
                                    "format": "double",
                                    "maximum": 1.7976931348623157e+308,
                                    "minimum": -1.7976931348623157e+308,
                                    "type": "number"
                                },
                                "X": {
                                    "description": "Gets or sets the x coordinate of the rectangle upper left corner",
                                    "format": "double",
                                    "maximum": 1.7976931348623157e+308,
                                    "minimum": -1.7976931348623157e+308,
                                    "type": "number"
                                },
                                "Y": {
                                    "description": "Gets or sets the y coordinate of the rectangle upper left corner",
                                    "format": "double",
                                    "maximum": 1.7976931348623157e+308,
                                    "minimum": -1.7976931348623157e+308,
                                    "type": "number"
                                }
                            },
                            "required": [
                                "X",
                                "Y",
                                "Width",
                                "Height"
                            ],
                            "type": "object"
                        },
                        "CreatedOn": {
                            "description": "Gets or sets the annotation created on date",
                            "format": "date-time",
                            "type": "string"
                        },
                        "CreatorEmail": {
                            "description": "Gets or sets the creator's email",
                            "type": "string"
                        },
                        "CreatorId": {
                            "description": "Gets or sets the creator unique identifier",
                            "format": "int32",
                            "maximum": 2147483647,
                            "minimum": -2147483648,
                            "type": "integer"
                        },
                        "CreatorName": {
                            "description": "Gets or sets the name of the creator",
                            "type": "string"
                        },
                        "FontColor": {
                            "description": "Gets or sets the annotation's font color",
                            "format": "int32",
                            "maximum": 2147483647,
                            "minimum": -2147483648,
                            "type": "integer"
                        },
                        "FontFamily": {
                            "description": "Gets or sets the annotation's font family",
                            "type": "string"
                        },
                        "FontSize": {
                            "description": "Gets or sets the annotation's font size ",
                            "format": "double",
                            "maximum": 1.7976931348623157e+308,
                            "minimum": -1.7976931348623157e+308,
                            "type": "number"
                        },
                        "HorizontalAlignment": {
                            "allOf": [
                                {}
                            ],
                            "description": "Gets or sets text horizontal alignment",
                            "enum": [
                                "None",
                                "Left",
                                "Center",
                                "Right"
                            ]
                        },
                        "Id": {
                            "description": "Gets or sets the unique identifier",
                            "format": "int32",
                            "maximum": 2147483647,
                            "minimum": -2147483648,
                            "type": "integer"
                        },
                        "ImagePath": {
                            "description": "Gets or sets image file path in cloud storage, for Image annotations",
                            "type": "string"
                        },
                        "Opacity": {
                            "description": "Gets or sets the annotation's opacity",
                            "format": "double",
                            "maximum": 1.7976931348623157e+308,
                            "minimum": -1.7976931348623157e+308,
                            "type": "number"
                        },
                        "PageNumber": {
                            "description": "Gets or sets the number of page where annotation will be placed",
                            "format": "int32",
                            "maximum": 2147483647,
                            "minimum": -2147483648,
                            "type": "integer"
                        },
                        "PenColor": {
                            "description": "Gets or sets the annotation's pen color",
                            "format": "int32",
                            "maximum": 2147483647,
                            "minimum": -2147483648,
                            "type": "integer"
                        },
                        "PenStyle": {
                            "allOf": [
                                {}
                            ],
                            "description": "Gets or sets the annotation's pen style",
                            "enum": [
                                "Solid",
                                "Dash",
                                "DashDot",
                                "Dot",
                                "LongDash",
                                "DashDotDot"
                            ]
                        },
                        "PenWidth": {
                            "description": "Gets or sets the annotation's pen width",
                            "format": "byte",
                            "pattern": "^[\\w\\d+\\/=]*$",
                            "type": "integer"
                        },
                        "Points": {
                            "description": "Gets or sets collection of points that describe rectangles with text",
                            "items": {
                                "additionalProperties": false,
                                "description": "Describes point where annotation will be placed",
                                "properties": {
                                    "X": {
                                        "description": "Gets or sets the x coordinate",
                                        "format": "double",
                                        "maximum": 1.7976931348623157e+308,
                                        "minimum": -1.7976931348623157e+308,
                                        "type": "number"
                                    },
                                    "Y": {
                                        "description": "Gets or sets the y coordinate",
                                        "format": "double",
                                        "maximum": 1.7976931348623157e+308,
                                        "minimum": -1.7976931348623157e+308,
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "X",
                                    "Y"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "Replies": {
                            "description": "Gets or sets the array of annotation replies",
                            "items": {
                                "additionalProperties": false,
                                "description": "Describes annotation reply properties",
                                "properties": {
                                    "Comment": {
                                        "description": "Gets or sets the message",
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "Gets or sets the unique identifier",
                                        "format": "int32",
                                        "maximum": 2147483647,
                                        "minimum": -2147483648,
                                        "type": "integer"
                                    },
                                    "ParentReplyId": {
                                        "description": "Gets or sets the parent reply unique identifier",
                                        "format": "int32",
                                        "maximum": 2147483647,
                                        "minimum": -2147483648,
                                        "type": "integer"
                                    },
                                    "RepliedOn": {
                                        "description": "Gets or sets the reply time",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "UserEmail": {
                                        "description": "Gets or sets the user email",
                                        "type": "string"
                                    },
                                    "UserId": {
                                        "description": "Gets or sets the user's unique identifier",
                                        "format": "int32",
                                        "maximum": 2147483647,
                                        "minimum": -2147483648,
                                        "type": "integer"
                                    },
                                    "UserName": {
                                        "description": "Gets or sets the user's name",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Id",
                                    "UserId",
                                    "RepliedOn",
                                    "ParentReplyId"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "SvgPath": {
                            "description": "Gets or sets the annotation SVG path",
                            "type": "string"
                        },
                        "Text": {
                            "description": "Gets or sets the annotation text",
                            "type": "string"
                        },
                        "TextToReplace": {
                            "description": "GGets or sets text to be replaced",
                            "type": "string"
                        },
                        "Type": {
                            "allOf": [
                                {}
                            ],
                            "description": "Gets or sets the annotation type",
                            "enum": [
                                "None",
                                "Area",
                                "Arrow",
                                "Distance",
                                "Ellipse",
                                "Link",
                                "Point",
                                "Polyline",
                                "ResourcesRedaction",
                                "TextField",
                                "TextHighlight",
                                "TextRedaction",
                                "TextReplacement",
                                "TextStrikeout",
                                "TextUnderline",
                                "Watermark",
                                "Image"
                            ]
                        },
                        "Url": {
                            "description": "Gets or sets annotation link url",
                            "type": "string"
                        },
                        "VerticalAlignment": {
                            "allOf": [
                                {}
                            ],
                            "description": "Gets or sets text vertical alignment",
                            "enum": [
                                "None",
                                "Top",
                                "Center",
                                "Bottom"
                            ]
                        }
                    },
                    "required": [
                        "Id",
                        "HorizontalAlignment",
                        "VerticalAlignment",
                        "CreatorId",
                        "Box",
                        "Type",
                        "CreatedOn"
                    ],
                    "type": "object"
                },
                "type": "array"
            }
        },
        {
            "name": "GetInfo",
            "url": "https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/info",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/info\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/info\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "Describes document basic info",
                "properties": {
                    "DateModified": {
                        "description": "Gets or sets the document date modified",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Extension": {
                        "description": "Gets or sets the document extension",
                        "type": "string"
                    },
                    "FileFormat": {
                        "description": "Gets or sets the file format",
                        "type": "string"
                    },
                    "Name": {
                        "description": "Gets or sets the document name",
                        "type": "string"
                    },
                    "Pages": {
                        "description": "Gets or sets the pages",
                        "items": {
                            "additionalProperties": false,
                            "description": "Describes page information",
                            "properties": {
                                "Height": {
                                    "description": "Gets or sets the page height",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "Number": {
                                    "description": "Gets or sets the page number",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                },
                                "Width": {
                                    "description": "Gets or sets the page width",
                                    "format": "int32",
                                    "maximum": 2147483647,
                                    "minimum": -2147483648,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "Number",
                                "Width",
                                "Height"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Path": {
                        "description": "Gets or sets the document path",
                        "type": "string"
                    },
                    "Size": {
                        "description": "Gets or sets the document size",
                        "format": "int64",
                        "maximum": 9223372036854776000,
                        "minimum": -9223372036854776000,
                        "type": "integer"
                    }
                },
                "required": [
                    "Size",
                    "DateModified"
                ],
                "type": "object"
            }
        },
        {
            "name": "GetPages",
            "url": "https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/preview/create",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/preview/create\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/preview/create\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "description": "Represents collection of document pages image representations",
                "properties": {
                    "Entries": {
                        "description": "The collection of pages image representations",
                        "items": {
                            "additionalProperties": false,
                            "allOf": [
                                {
                                    "additionalProperties": false,
                                    "description": "Reference to document",
                                    "properties": {
                                        "link": {
                                            "additionalProperties": false,
                                            "allOf": [
                                                {
                                                    "additionalProperties": false,
                                                    "description": "Provides information for the object link\nThis is supposed to be an atom:link, therefore it should have all attributes specified here http://tools.ietf.org/html/rfc4287#section-4.2.7",
                                                    "properties": {
                                                        "Href": {
                                                            "description": "The \"href\" attribute contains the link's IRI. atom:link elements MUST\nhave an href attribute, whose value MUST be a IRI reference",
                                                            "type": "string"
                                                        },
                                                        "Rel": {
                                                            "description": "atom:link elements MAY have a \"rel\" attribute that indicates the link\nrelation type. If the \"rel\" attribute is not present, the link\nelement MUST be interpreted as if the link relation type is \"alternate\"",
                                                            "type": "string"
                                                        },
                                                        "Title": {
                                                            "description": "The \"title\" attribute conveys human-readable information about the\nlink. The content of the \"title\" attribute is Language-Sensitive",
                                                            "type": "string"
                                                        },
                                                        "Type": {
                                                            "description": "On the link element, the \"type\" attribute's value is an advisory\nmedia type: it is a hint about the type of the representation that is\nexpected to be returned when the value of the href attribute is\ndereferenced. Note that the type attribute does not override the\nactual media type returned with the representation",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                {
                                                    "additionalProperties": false,
                                                    "description": "Provides information for the words api resource link",
                                                    "type": "object"
                                                }
                                            ],
                                            "description": "Provides information for the words api resource link",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                {
                                    "additionalProperties": false,
                                    "description": "The document page image representation",
                                    "properties": {
                                        "Number": {
                                            "description": "Gets or sets the page number",
                                            "format": "int32",
                                            "maximum": 2147483647,
                                            "minimum": -2147483648,
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "Number"
                                    ],
                                    "type": "object"
                                }
                            ],
                            "description": "The document page image representation",
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "TotalCount": {
                        "description": "The total count of page image entries in collection",
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer"
                    }
                },
                "required": [
                    "TotalCount"
                ],
                "type": "object"
            }
        },
        {
            "name": "RemoveAnnotations",
            "url": "https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/remove",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/remove\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/remove\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "allOf": [
                    {
                        "additionalProperties": false,
                        "description": "Provides information for the object link\nThis is supposed to be an atom:link, therefore it should have all attributes specified here http://tools.ietf.org/html/rfc4287#section-4.2.7",
                        "properties": {
                            "Href": {
                                "description": "The \"href\" attribute contains the link's IRI. atom:link elements MUST\nhave an href attribute, whose value MUST be a IRI reference",
                                "type": "string"
                            },
                            "Rel": {
                                "description": "atom:link elements MAY have a \"rel\" attribute that indicates the link\nrelation type. If the \"rel\" attribute is not present, the link\nelement MUST be interpreted as if the link relation type is \"alternate\"",
                                "type": "string"
                            },
                            "Title": {
                                "description": "The \"title\" attribute conveys human-readable information about the\nlink. The content of the \"title\" attribute is Language-Sensitive",
                                "type": "string"
                            },
                            "Type": {
                                "description": "On the link element, the \"type\" attribute's value is an advisory\nmedia type: it is a hint about the type of the representation that is\nexpected to be returned when the value of the href attribute is\ndereferenced. Note that the type attribute does not override the\nactual media type returned with the representation",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "additionalProperties": false,
                        "description": "Provides information for the words api resource link",
                        "type": "object"
                    }
                ],
                "description": "Provides information for the words api resource link",
                "type": "object"
            }
        },
        {
            "name": "Annotate",
            "url": "https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/add",
            "description": " ",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/add\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/add\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "additionalProperties": false,
                "allOf": [
                    {
                        "additionalProperties": false,
                        "description": "Provides information for the object link\nThis is supposed to be an atom:link, therefore it should have all attributes specified here http://tools.ietf.org/html/rfc4287#section-4.2.7",
                        "properties": {
                            "Href": {
                                "description": "The \"href\" attribute contains the link's IRI. atom:link elements MUST\nhave an href attribute, whose value MUST be a IRI reference",
                                "type": "string"
                            },
                            "Rel": {
                                "description": "atom:link elements MAY have a \"rel\" attribute that indicates the link\nrelation type. If the \"rel\" attribute is not present, the link\nelement MUST be interpreted as if the link relation type is \"alternate\"",
                                "type": "string"
                            },
                            "Title": {
                                "description": "The \"title\" attribute conveys human-readable information about the\nlink. The content of the \"title\" attribute is Language-Sensitive",
                                "type": "string"
                            },
                            "Type": {
                                "description": "On the link element, the \"type\" attribute's value is an advisory\nmedia type: it is a hint about the type of the representation that is\nexpected to be returned when the value of the href attribute is\ndereferenced. Note that the type attribute does not override the\nactual media type returned with the representation",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "additionalProperties": false,
                        "description": "Provides information for the words api resource link",
                        "type": "object"
                    }
                ],
                "description": "Provides information for the words api resource link",
                "type": "object"
            }
        }
    ],
    "standardized_name": "groupdocs_annotation_cloud"
}