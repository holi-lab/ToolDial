{
    "product_id": "api_3541f2ec-6a21-4d7c-b3f8-fb528de240ca",
    "tool_description": "Contains collections of geometric algorithms such as Minkovski, Polygon operations, Polygon Collision with Circle, Delaunay Triangulation, Voronoi Diagram, Polyline Simplyfication,...",
    "home_url": "https://rapidapi.com/phinguyen/api/geometric-calculation/",
    "name": "Geometric Calculation",
    "title": "Geometric Calculation",
    "pricing": "FREEMIUM",
    "tool_name": "Geometric Calculation",
    "score": null,
    "host": "geometric-calculation.p.rapidapi.com",
    "api_list": [
        {
            "name": "Polygon Triangulation",
            "url": "https://geometric-calculation.p.rapidapi.com/geometric/polygontriangulation",
            "description": "Decompose a polygon into a set of triangles.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/polygontriangulation\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/polygontriangulation\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Rectangle Max Empty",
            "url": "https://geometric-calculation.p.rapidapi.com/geometric/rectanglemaxempty",
            "description": "Given a rectangle A and a set S of n points in A, find a largest-area rectangle which is contained in A, has its sides parallel to those of A, and does not contain any of the points in S.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/rectanglemaxempty\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/rectanglemaxempty\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Segment Intersect",
            "url": "https://geometric-calculation.p.rapidapi.com/geometric/intersect2segments",
            "description": "Detect where 2 line segments intersect.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/intersect2segments\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/intersect2segments\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Rectangle Packing",
            "url": "https://geometric-calculation.p.rapidapi.com/geometric/rectanglepacking",
            "description": "Given a bunch of rectangular objects which to pack into the smallest space possible.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/rectanglepacking\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/rectanglepacking\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Minkowski Diff",
            "url": "https://geometric-calculation.p.rapidapi.com/geometric/minkowskidiff",
            "description": "The Minkowski difference of two 2D shapes is the shape produced when subtracting every point on one shape from every point on the other shape.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/minkowskidiff\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/minkowskidiff\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Minkowski Sum",
            "url": "https://geometric-calculation.p.rapidapi.com/geometric/minkowskisum",
            "description": "The Minkowski sum of two 2D shapes is formed by adding each point on one shape to each point in the other shape.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/minkowskisum\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/minkowskisum\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Polygon Overlap",
            "url": "https://geometric-calculation.p.rapidapi.com/geometric/polygonoverlap",
            "description": "Find overlapping polygons.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/polygonoverlap\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/polygonoverlap\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Polygon Combine",
            "url": "https://geometric-calculation.p.rapidapi.com/geometric/polygoncombine",
            "description": "Find combining polygons.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/polygoncombine\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/polygoncombine\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Polygon Outer Offset",
            "url": "https://geometric-calculation.p.rapidapi.com/geometric/polygonouteroffset",
            "description": "Compute the offset region of a polygon by shifting the boundary outwards by a specified distance.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/polygonouteroffset\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/polygonouteroffset\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Polygon Inner Offset",
            "url": "https://geometric-calculation.p.rapidapi.com/geometric/polygoninneroffset",
            "description": "Compute the offset region of a polygon by shifting the boundary inwards by a specified distance.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/polygoninneroffset\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/polygoninneroffset\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Polygon Partition",
            "url": "https://geometric-calculation.p.rapidapi.com/geometric/polygonpartion",
            "description": "Decompose a polygon into a set of sub polygons such that the interiors of the sub polygons do not intersect and the union of the sub polygons is equal to the interior of the original polygon.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/polygonpartion\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/polygonpartion\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Polyline Simplyfication",
            "url": "https://geometric-calculation.p.rapidapi.com/geometric/polylinesimplyfication",
            "description": "Reduce the resolution of a polyline by removing vertices and edges, while maintaining a good approximation of the original curve.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/polylinesimplyfication\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/polylinesimplyfication\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Delaunay Triangulation",
            "url": "https://geometric-calculation.p.rapidapi.com/geometric/delaunaytriangulation",
            "description": "Given a point set, find the set of edges satisfying an property: for each edge we can find a circle containing the edge's endpoints but not containing any other points.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/delaunaytriangulation\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/delaunaytriangulation\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Voronoi Diagram",
            "url": "https://geometric-calculation.p.rapidapi.com/geometric/voronoidiagram",
            "description": "Given a collection of points, find a partition of space into cells, each of which consists of the points closer to one particular cell than to any others.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/voronoidiagram\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/voronoidiagram\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Largest Empty Circle",
            "url": "https://geometric-calculation.p.rapidapi.com/geometric/largestemptycircle",
            "description": "Find a circle of largest radius in the plane whose interior does not overlap with any given points.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/largestemptycircle\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/largestemptycircle\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Is Convex Polygon",
            "url": "https://geometric-calculation.p.rapidapi.com/geometric/isconvexpolygon",
            "description": "Check a polygon with all its interior angles less than 180\u00b0.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/isconvexpolygon\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://geometric-calculation.p.rapidapi.com/geometric/isconvexpolygon\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geometric-calculation.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}