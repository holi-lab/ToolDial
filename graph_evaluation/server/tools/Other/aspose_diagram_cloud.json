{
    "product_id": "api_b250be15-88aa-4480-adb3-381940830395",
    "tool_description": "Aspose.Diagram is a REST API for working with the Microsoft Visio Object Model. Aspose.Diagram provides better performance and is easier to use to manipulate diagrams and convert files than Microsoft Office Automation.",
    "home_url": "https://rapidapi.com/asposecloud/api/aspose-diagram-cloud/",
    "name": "Aspose.Diagram Cloud",
    "title": "Aspose.Diagram Cloud",
    "pricing": "FREEMIUM",
    "tool_name": "Aspose.Diagram Cloud",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 16968,
        "avgSuccessRate": 0,
        "popularityScore": 0.2,
        "__typename": "Score"
    },
    "host": "aspose-diagram-cloud.p.rapidapi.com",
    "api_list": [
        {
            "name": "DownloadFileWithFormat",
            "url": "https://aspose-diagram-cloud.p.rapidapi.com/diagram/{name}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "The destination format.",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "The document name.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Original document folder.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-diagram-cloud.p.rapidapi.com/diagram/{name}\"\nquerystring = {\"format\": \"\", \"folder\": \"\", \"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-diagram-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-diagram-cloud.p.rapidapi.com/diagram/{name}\"\nquerystring = {\"format\": \"\", \"folder\": \"\", \"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-diagram-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "RequestId": "476f96a7-2e13-4c7c-82ad-3dde2e575503",
                "Error": {
                    "Code": "error",
                    "Message": "ClientId is undefined. Please check authorization.",
                    "Description": "Operation Failed. General Error.",
                    "DateTime": "2023-06-16T16:04:31.6843122Z",
                    "InnerError": null
                }
            },
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "DownloadFile",
            "url": "https://aspose-diagram-cloud.p.rapidapi.com/diagram/storage/file/{path}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "File path e.g. '/folder/file.ext'",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                },
                {
                    "name": "versionId",
                    "type": "STRING",
                    "description": "File version ID to download",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-diagram-cloud.p.rapidapi.com/diagram/storage/file/{path}\"\nquerystring = {\"path\": \"\", \"storageName\": \"\", \"versionId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-diagram-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-diagram-cloud.p.rapidapi.com/diagram/storage/file/{path}\"\nquerystring = {\"path\": \"\", \"storageName\": \"\", \"versionId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-diagram-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "RequestId": "1eb0f7bc-6abc-41c1-ba92-5e96ffe7edfa",
                "Error": {
                    "Code": "error",
                    "Message": "ClientId is undefined. Please check authorization.",
                    "Description": "Operation Failed. General Error.",
                    "DateTime": "2023-06-16T16:04:53.8878128Z",
                    "InnerError": null
                }
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "ObjectExists",
            "url": "https://aspose-diagram-cloud.p.rapidapi.com/diagram/storage/exist/{path}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "File or folder path e.g. '/file.ext' or '/folder'",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "versionId",
                    "type": "STRING",
                    "description": "File version ID",
                    "default": ""
                },
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-diagram-cloud.p.rapidapi.com/diagram/storage/exist/{path}\"\nquerystring = {\"versionId\": \"\", \"storageName\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-diagram-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-diagram-cloud.p.rapidapi.com/diagram/storage/exist/{path}\"\nquerystring = {\"versionId\": \"\", \"storageName\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-diagram-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "RequestId": "f7114f94-b59a-4228-b12a-e1dda80225a7",
                "Error": {
                    "Code": "error",
                    "Message": "ClientId is undefined. Please check authorization.",
                    "Description": "Operation Failed. General Error.",
                    "DateTime": "2023-06-16T16:05:38.1125404Z",
                    "InnerError": null
                }
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "description": "Object exists",
                "additionalProperties": false,
                "required": [
                    "Exists",
                    "IsFolder"
                ],
                "properties": {
                    "Exists": {
                        "type": "boolean",
                        "description": "Indicates that the file or folder exists."
                    },
                    "IsFolder": {
                        "type": "boolean",
                        "description": "True if it is a folder, false if it is a file."
                    }
                }
            }
        },
        {
            "name": "GetFilesList",
            "url": "https://aspose-diagram-cloud.p.rapidapi.com/diagram/storage/folder/{path}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "Folder path e.g. '/folder'",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-diagram-cloud.p.rapidapi.com/diagram/storage/folder/{path}\"\nquerystring = {\"storageName\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-diagram-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-diagram-cloud.p.rapidapi.com/diagram/storage/folder/{path}\"\nquerystring = {\"storageName\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-diagram-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "RequestId": "1a4d11cb-8989-4e00-b63b-af351412516a",
                "Error": {
                    "Code": "error",
                    "Message": "ClientId is undefined. Please check authorization.",
                    "Description": "Operation Failed. General Error.",
                    "DateTime": "2023-06-16T16:05:59.8607382Z",
                    "InnerError": null
                }
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "description": "Files list",
                "additionalProperties": false,
                "properties": {
                    "Value": {
                        "type": "array",
                        "description": "Files and folders contained by folder StorageFile.",
                        "items": {
                            "type": "object",
                            "description": "File or folder information",
                            "additionalProperties": false,
                            "required": [
                                "IsFolder",
                                "Size"
                            ],
                            "properties": {
                                "Name": {
                                    "type": "string",
                                    "description": "File or folder name."
                                },
                                "IsFolder": {
                                    "type": "boolean",
                                    "description": "True if it is a folder."
                                },
                                "ModifiedDate": {
                                    "type": "string",
                                    "description": "File or folder last modified DateTime.",
                                    "format": "date-time"
                                },
                                "Size": {
                                    "type": "integer",
                                    "description": "File or folder size.",
                                    "format": "int64",
                                    "minimum": -9223372036854776000,
                                    "maximum": 9223372036854776000
                                },
                                "Path": {
                                    "type": "string",
                                    "description": "File or folder path."
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "GetPages",
            "url": "https://aspose-diagram-cloud.p.rapidapi.com/diagram/{name}/pages",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Document name.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Document folder.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-diagram-cloud.p.rapidapi.com/diagram/{name}/pages\"\nquerystring = {\"name\": \"\", \"folder\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-diagram-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-diagram-cloud.p.rapidapi.com/diagram/{name}/pages\"\nquerystring = {\"name\": \"\", \"folder\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-diagram-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "RequestId": "ab16a6b1-312a-4353-b96f-95ba1ad7517c",
                "Error": {
                    "Code": "error",
                    "Message": "ClientId is undefined. Please check authorization.",
                    "Description": "Operation Failed. General Error.",
                    "DateTime": "2023-06-16T16:08:17.9717446Z",
                    "InnerError": null
                }
            },
            "statuscode": 200,
            "schema": {
                "allOf": [
                    {
                        "type": "object",
                        "additionalProperties": false
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "Model": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "ID"
                                    ],
                                    "properties": {
                                        "ID": {
                                            "type": "integer",
                                            "description": "Page Id",
                                            "format": "int32",
                                            "minimum": -2147483648,
                                            "maximum": 2147483647
                                        },
                                        "PageSetting": {
                                            "type": "object",
                                            "description": "page setting info",
                                            "additionalProperties": false,
                                            "properties": {
                                                "Name": {
                                                    "type": "string",
                                                    "description": "Page Name"
                                                },
                                                "NameU": {
                                                    "type": "string",
                                                    "description": "Page Name"
                                                },
                                                "PageWidth": {
                                                    "type": "number",
                                                    "description": "Page Width",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                },
                                                "PageHeight": {
                                                    "type": "number",
                                                    "description": "Page Height",
                                                    "format": "double",
                                                    "minimum": -1.7976931348623157e+308,
                                                    "maximum": 1.7976931348623157e+308
                                                }
                                            }
                                        },
                                        "Shapes": {
                                            "type": "array",
                                            "description": "shape list",
                                            "items": {
                                                "type": "object",
                                                "description": "Shape element.\n            ",
                                                "additionalProperties": false,
                                                "required": [
                                                    "ID",
                                                    "PinX",
                                                    "PinY",
                                                    "Width",
                                                    "Height",
                                                    "Angle"
                                                ],
                                                "properties": {
                                                    "ID": {
                                                        "type": "integer",
                                                        "description": "The unique ID of the element within its parent element.\n            ",
                                                        "format": "int64",
                                                        "minimum": -9223372036854776000,
                                                        "maximum": 9223372036854776000
                                                    },
                                                    "Name": {
                                                        "type": "string",
                                                        "description": "The name of the element.\n            "
                                                    },
                                                    "PinX": {
                                                        "type": "number",
                                                        "description": "Specifies the x-coordinate of the shape's pin (center of rotation) in relation to the origin of its parent.\n            ",
                                                        "format": "double",
                                                        "minimum": -1.7976931348623157e+308,
                                                        "maximum": 1.7976931348623157e+308
                                                    },
                                                    "PinY": {
                                                        "type": "number",
                                                        "description": "Specifies the y-coordinate of the shape's pin (center of rotation) in relation to the origin of its parent.\n            ",
                                                        "format": "double",
                                                        "minimum": -1.7976931348623157e+308,
                                                        "maximum": 1.7976931348623157e+308
                                                    },
                                                    "Width": {
                                                        "type": "number",
                                                        "description": "Contains the width of the associated shape in drawing units.\n            ",
                                                        "format": "double",
                                                        "minimum": -1.7976931348623157e+308,
                                                        "maximum": 1.7976931348623157e+308
                                                    },
                                                    "Height": {
                                                        "type": "number",
                                                        "description": "Specifies the height of the shape in drawing units.\n            ",
                                                        "format": "double",
                                                        "minimum": -1.7976931348623157e+308,
                                                        "maximum": 1.7976931348623157e+308
                                                    },
                                                    "Angle": {
                                                        "type": "number",
                                                        "description": "Represents the shape's current angle of rotation in relation to its parent(deg,180~-180).\n            ",
                                                        "format": "double",
                                                        "minimum": -1.7976931348623157e+308,
                                                        "maximum": 1.7976931348623157e+308
                                                    },
                                                    "Text": {
                                                        "type": "string",
                                                        "description": "Contains the text of a shape.\n            "
                                                    },
                                                    "ShapeStyleData": {
                                                        "type": "object",
                                                        "description": "Shape style setting",
                                                        "additionalProperties": false,
                                                        "required": [
                                                            "FillPattern",
                                                            "LineWeight",
                                                            "LinePattern",
                                                            "Rounding"
                                                        ],
                                                        "properties": {
                                                            "FillBackGroundColor": {
                                                                "type": "string",
                                                                "description": "Specifies the color used for the background of the shape's fill pattern.like '#000000'\n            "
                                                            },
                                                            "FillPattern": {
                                                                "type": "integer",
                                                                "description": "Specifies the fill pattern for the shape.\n            ",
                                                                "format": "int32",
                                                                "minimum": -2147483648,
                                                                "maximum": 2147483647
                                                            },
                                                            "LineColor": {
                                                                "type": "string",
                                                                "description": "Specifies the line color of the shape."
                                                            },
                                                            "LineWeight": {
                                                                "type": "number",
                                                                "description": "Specifies the line weight of a shape. Line weight is independent of the scale of the drawing. If the drawing is scaled, the line weight remains the same.\n            ",
                                                                "format": "double",
                                                                "minimum": -1.7976931348623157e+308,
                                                                "maximum": 1.7976931348623157e+308
                                                            },
                                                            "LinePattern": {
                                                                "type": "integer",
                                                                "description": "Specifies the line pattern of the shape",
                                                                "format": "int32",
                                                                "minimum": -2147483648,
                                                                "maximum": 2147483647
                                                            },
                                                            "Rounding": {
                                                                "type": "number",
                                                                "description": "Specifies the radius of the rounding arc applied where two contiguous segments of a path meet. For example, rounding can be used to give a rectangle rounded corners.",
                                                                "format": "double",
                                                                "minimum": -1.7976931348623157e+308,
                                                                "maximum": 1.7976931348623157e+308
                                                            }
                                                        }
                                                    },
                                                    "TextStyleData": {
                                                        "type": "object",
                                                        "description": "Text style",
                                                        "additionalProperties": false,
                                                        "required": [
                                                            "Style"
                                                        ],
                                                        "properties": {
                                                            "Color": {
                                                                "type": "string",
                                                                "description": "Specifies the color of the text in the shape's text block.\n            "
                                                            },
                                                            "Style": {
                                                                "description": "Specifies the character formatting applied to a range of text in the shape's text block.\n            ",
                                                                "enum": [
                                                                    "Bold",
                                                                    "Italic",
                                                                    "Underline",
                                                                    "SmallCaps",
                                                                    "Undefined"
                                                                ],
                                                                "allOf": [
                                                                    {}
                                                                ]
                                                            },
                                                            "FontName": {
                                                                "type": "string",
                                                                "description": "It specified the font name of the font used to format the text\n            "
                                                            },
                                                            "FontSize": {
                                                                "type": "number",
                                                                "description": "Specifies the size of the text in the shape's text block.\n            ",
                                                                "format": "double",
                                                                "minimum": -1.7976931348623157e+308,
                                                                "maximum": 1.7976931348623157e+308
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "GetDiscUsage",
            "url": "https://aspose-diagram-cloud.p.rapidapi.com/diagram/storage/disc",
            "description": " ",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-diagram-cloud.p.rapidapi.com/diagram/storage/disc\"\nquerystring = {\"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-diagram-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-diagram-cloud.p.rapidapi.com/diagram/storage/disc\"\nquerystring = {\"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-diagram-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "RequestId": "cc7ad99a-db62-42b4-918e-8507894398c3",
                "Error": {
                    "Code": "error",
                    "Message": "ClientId is undefined. Please check authorization.",
                    "Description": "Operation Failed. General Error.",
                    "DateTime": "2023-06-16T16:08:40.2627756Z",
                    "InnerError": null
                }
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GetFileVersions",
            "url": "https://aspose-diagram-cloud.p.rapidapi.com/diagram/storage/version/{path}",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "File path e.g. '/file.ext'",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-diagram-cloud.p.rapidapi.com/diagram/storage/version/{path}\"\nquerystring = {\"storageName\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-diagram-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-diagram-cloud.p.rapidapi.com/diagram/storage/version/{path}\"\nquerystring = {\"storageName\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-diagram-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "RequestId": "8e41022d-b12b-47b8-b97a-9a962c2d6c60",
                "Error": {
                    "Code": "error",
                    "Message": "ClientId is undefined. Please check authorization.",
                    "Description": "Operation Failed. General Error.",
                    "DateTime": "2023-06-16T16:09:46.4328028Z",
                    "InnerError": null
                }
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "GetMasters",
            "url": "https://aspose-diagram-cloud.p.rapidapi.com/diagram/{name}/masters",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Document name.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Document folder.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-diagram-cloud.p.rapidapi.com/diagram/{name}/masters\"\nquerystring = {\"name\": \"\", \"folder\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-diagram-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-diagram-cloud.p.rapidapi.com/diagram/{name}/masters\"\nquerystring = {\"name\": \"\", \"folder\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-diagram-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "RequestId": "466e5641-b427-4da7-9cbd-a58d08dac9a5",
                "Error": {
                    "Code": "error",
                    "Message": "ClientId is undefined. Please check authorization.",
                    "Description": "Operation Failed. General Error.",
                    "DateTime": "2023-06-16T16:11:15.1909331Z",
                    "InnerError": null
                }
            },
            "statuscode": 200,
            "schema": {
                "type": "array",
                "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                        "ID"
                    ],
                    "properties": {
                        "ID": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": -2147483648,
                            "maximum": 2147483647
                        },
                        "Name": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        {
            "name": "GetShapes",
            "url": "https://aspose-diagram-cloud.p.rapidapi.com/diagram/{name}/pages/{pageName}/shapes",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Document name.",
                    "default": ""
                },
                {
                    "name": "pageName",
                    "type": "STRING",
                    "description": "Page name.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Document folder.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-diagram-cloud.p.rapidapi.com/diagram/{name}/pages/{pageName}/shapes\"\nquerystring = {\"folder\": \"\", \"name\": \"\", \"pageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-diagram-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-diagram-cloud.p.rapidapi.com/diagram/{name}/pages/{pageName}/shapes\"\nquerystring = {\"folder\": \"\", \"name\": \"\", \"pageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-diagram-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "RequestId": "cc5683e3-57c8-47a2-9819-cf9bd17704db",
                "Error": {
                    "Code": "error",
                    "Message": "ClientId is undefined. Please check authorization.",
                    "Description": "Operation Failed. General Error.",
                    "DateTime": "2023-06-16T16:13:06.8194637Z",
                    "InnerError": null
                }
            },
            "statuscode": 200,
            "schema": {
                "type": "array",
                "items": {
                    "type": "object",
                    "description": "Shape element.\n            ",
                    "additionalProperties": false,
                    "required": [
                        "ID",
                        "PinX",
                        "PinY",
                        "Width",
                        "Height",
                        "Angle"
                    ],
                    "properties": {
                        "ID": {
                            "type": "integer",
                            "description": "The unique ID of the element within its parent element.\n            ",
                            "format": "int64",
                            "minimum": -9223372036854776000,
                            "maximum": 9223372036854776000
                        },
                        "Name": {
                            "type": "string",
                            "description": "The name of the element.\n            "
                        },
                        "PinX": {
                            "type": "number",
                            "description": "Specifies the x-coordinate of the shape's pin (center of rotation) in relation to the origin of its parent.\n            ",
                            "format": "double",
                            "minimum": -1.7976931348623157e+308,
                            "maximum": 1.7976931348623157e+308
                        },
                        "PinY": {
                            "type": "number",
                            "description": "Specifies the y-coordinate of the shape's pin (center of rotation) in relation to the origin of its parent.\n            ",
                            "format": "double",
                            "minimum": -1.7976931348623157e+308,
                            "maximum": 1.7976931348623157e+308
                        },
                        "Width": {
                            "type": "number",
                            "description": "Contains the width of the associated shape in drawing units.\n            ",
                            "format": "double",
                            "minimum": -1.7976931348623157e+308,
                            "maximum": 1.7976931348623157e+308
                        },
                        "Height": {
                            "type": "number",
                            "description": "Specifies the height of the shape in drawing units.\n            ",
                            "format": "double",
                            "minimum": -1.7976931348623157e+308,
                            "maximum": 1.7976931348623157e+308
                        },
                        "Angle": {
                            "type": "number",
                            "description": "Represents the shape's current angle of rotation in relation to its parent(deg,180~-180).\n            ",
                            "format": "double",
                            "minimum": -1.7976931348623157e+308,
                            "maximum": 1.7976931348623157e+308
                        },
                        "Text": {
                            "type": "string",
                            "description": "Contains the text of a shape.\n            "
                        },
                        "ShapeStyleData": {
                            "type": "object",
                            "description": "Shape style setting",
                            "additionalProperties": false,
                            "required": [
                                "FillPattern",
                                "LineWeight",
                                "LinePattern",
                                "Rounding"
                            ],
                            "properties": {
                                "FillBackGroundColor": {
                                    "type": "string",
                                    "description": "Specifies the color used for the background of the shape's fill pattern.like '#000000'\n            "
                                },
                                "FillPattern": {
                                    "type": "integer",
                                    "description": "Specifies the fill pattern for the shape.\n            ",
                                    "format": "int32",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647
                                },
                                "LineColor": {
                                    "type": "string",
                                    "description": "Specifies the line color of the shape."
                                },
                                "LineWeight": {
                                    "type": "number",
                                    "description": "Specifies the line weight of a shape. Line weight is independent of the scale of the drawing. If the drawing is scaled, the line weight remains the same.\n            ",
                                    "format": "double",
                                    "minimum": -1.7976931348623157e+308,
                                    "maximum": 1.7976931348623157e+308
                                },
                                "LinePattern": {
                                    "type": "integer",
                                    "description": "Specifies the line pattern of the shape",
                                    "format": "int32",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647
                                },
                                "Rounding": {
                                    "type": "number",
                                    "description": "Specifies the radius of the rounding arc applied where two contiguous segments of a path meet. For example, rounding can be used to give a rectangle rounded corners.",
                                    "format": "double",
                                    "minimum": -1.7976931348623157e+308,
                                    "maximum": 1.7976931348623157e+308
                                }
                            }
                        },
                        "TextStyleData": {
                            "type": "object",
                            "description": "Text style",
                            "additionalProperties": false,
                            "required": [
                                "Style"
                            ],
                            "properties": {
                                "Color": {
                                    "type": "string",
                                    "description": "Specifies the color of the text in the shape's text block.\n            "
                                },
                                "Style": {
                                    "description": "Specifies the character formatting applied to a range of text in the shape's text block.\n            ",
                                    "enum": [
                                        "Bold",
                                        "Italic",
                                        "Underline",
                                        "SmallCaps",
                                        "Undefined"
                                    ],
                                    "allOf": [
                                        {}
                                    ]
                                },
                                "FontName": {
                                    "type": "string",
                                    "description": "It specified the font name of the font used to format the text\n            "
                                },
                                "FontSize": {
                                    "type": "number",
                                    "description": "Specifies the size of the text in the shape's text block.\n            ",
                                    "format": "double",
                                    "minimum": -1.7976931348623157e+308,
                                    "maximum": 1.7976931348623157e+308
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "StorageExists",
            "url": "https://aspose-diagram-cloud.p.rapidapi.com/diagram/storage/{storageName}/exist",
            "description": " ",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://aspose-diagram-cloud.p.rapidapi.com/diagram/storage/{storageName}/exist\"\nquerystring = {\"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-diagram-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-diagram-cloud.p.rapidapi.com/diagram/storage/{storageName}/exist\"\nquerystring = {\"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-diagram-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "RequestId": "2389ce94-d921-4b9f-aa25-09b99d1b709b",
                "Error": {
                    "Code": "error",
                    "Message": "ClientId is undefined. Please check authorization.",
                    "Description": "Operation Failed. General Error.",
                    "DateTime": "2023-06-16T16:13:50.9668033Z",
                    "InnerError": null
                }
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "description": "Storage exists",
                "additionalProperties": false,
                "required": [
                    "Exists"
                ],
                "properties": {
                    "Exists": {
                        "type": "boolean",
                        "description": "Shows that the storage exists.\n            "
                    }
                }
            }
        },
        {
            "name": "SaveAs",
            "url": "https://aspose-diagram-cloud.p.rapidapi.com/diagram/{name}/saveAs",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Original document name.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "IsOverwrite",
                    "type": "BOOLEAN",
                    "description": "If true overwrite the same name file.The default value is false ",
                    "default": false
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Original document folder.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-diagram-cloud.p.rapidapi.com/diagram/{name}/saveAs\"\nquerystring = {\"name\": \"\", \"IsOverwrite\": false, \"folder\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-diagram-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-diagram-cloud.p.rapidapi.com/diagram/{name}/saveAs\"\nquerystring = {\"name\": \"\", \"IsOverwrite\": false, \"folder\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-diagram-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "allOf": [
                    {
                        "type": "object",
                        "additionalProperties": false
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "SourceFile": {
                                "type": "string"
                            },
                            "SavedFile": {
                                "type": "string"
                            },
                            "Additionals": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "UpdateShape",
            "url": "https://aspose-diagram-cloud.p.rapidapi.com/diagram/{name}/pages/{pageName}/shapes",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Document name.",
                    "default": ""
                },
                {
                    "name": "pageName",
                    "type": "STRING",
                    "description": "Page name.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Document folder.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-diagram-cloud.p.rapidapi.com/diagram/{name}/pages/{pageName}/shapes\"\nquerystring = {\"folder\": \"\", \"name\": \"\", \"pageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-diagram-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-diagram-cloud.p.rapidapi.com/diagram/{name}/pages/{pageName}/shapes\"\nquerystring = {\"folder\": \"\", \"name\": \"\", \"pageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-diagram-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "allOf": [
                    {
                        "type": "object",
                        "additionalProperties": false
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "IsSuccess"
                        ],
                        "properties": {
                            "IsSuccess": {
                                "type": "boolean"
                            },
                            "Message": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "PostPageSetup",
            "url": "https://aspose-diagram-cloud.p.rapidapi.com/diagram/{name}/pages/PageSetup",
            "description": " ",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Document name.",
                    "default": ""
                },
                {
                    "name": "pageName",
                    "type": "STRING",
                    "description": "The page name for setting.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Document folder.",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://aspose-diagram-cloud.p.rapidapi.com/diagram/{name}/pages/PageSetup\"\nquerystring = {\"name\": \"\", \"pageName\": \"\", \"folder\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-diagram-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://aspose-diagram-cloud.p.rapidapi.com/diagram/{name}/pages/PageSetup\"\nquerystring = {\"name\": \"\", \"pageName\": \"\", \"folder\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-diagram-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "allOf": [
                    {
                        "type": "object",
                        "additionalProperties": false
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "IsSuccess"
                        ],
                        "properties": {
                            "IsSuccess": {
                                "type": "boolean"
                            },
                            "Message": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        }
    ],
    "standardized_name": "aspose_diagram_cloud"
}