{
    "product_id": "api_77f57cd5-4b24-46d1-9549-640171526a71",
    "tool_description": "Koios - Cardano's Decentralized API - Preview",
    "home_url": "https://rapidapi.com/koiosAPI/api/cardanos-decentralized-api-preview/",
    "name": "Cardano's Decentralized API - Preview",
    "title": "Cardano's Decentralized API - Preview",
    "pricing": "FREE",
    "tool_name": "Cardano's Decentralized API - Preview",
    "score": null,
    "host": "cardanos-decentralized-api-preview.p.rapidapi.com",
    "api_list": [
        {
            "name": "/tx_metadata",
            "url": "https://cardanos-decentralized-api-preview.p.rapidapi.com/tx_metadata",
            "description": "Get metadata information (if any) for given transaction(s)",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/tx_metadata\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/tx_metadata\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/tx_utxos",
            "url": "https://cardanos-decentralized-api-preview.p.rapidapi.com/tx_utxos",
            "description": "Get UTxO set (inputs/outputs) of transactions.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/tx_utxos\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/tx_utxos\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/account_history",
            "url": "https://cardanos-decentralized-api-preview.p.rapidapi.com/account_history",
            "description": "Get the staking history of given stake addresses (accounts)",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/account_history\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/account_history\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/credential_utxos",
            "url": "https://cardanos-decentralized-api-preview.p.rapidapi.com/credential_utxos",
            "description": "Get a list of UTxO against input payment credential array including their balances",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/credential_utxos\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/credential_utxos\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "tx_hash": {
                            "type": "string",
                            "description": "Hash of transaction for UTxO"
                        },
                        "tx_index": {
                            "type": "integer",
                            "description": "Index of UTxO in the transaction"
                        },
                        "value": {
                            "type": "string",
                            "description": "Total sum of ADA on the UTxO"
                        }
                    }
                }
            }
        },
        {
            "name": "/address_txs",
            "url": "https://cardanos-decentralized-api-preview.p.rapidapi.com/address_txs",
            "description": "Get the transaction hash list of input address array, optionally filtering after specified block height (inclusive)",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/address_txs\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/address_txs\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/tx_status",
            "url": "https://cardanos-decentralized-api-preview.p.rapidapi.com/tx_status",
            "description": "Get the number of block confirmations for a given transaction hash list",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/tx_status\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/tx_status\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/tx_info",
            "url": "https://cardanos-decentralized-api-preview.p.rapidapi.com/tx_info",
            "description": "Get detailed information about transaction(s)",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/tx_info\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/tx_info\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "tx_hash": {
                            "type": "string",
                            "description": "Hash identifier of the transaction"
                        },
                        "block_hash": {
                            "type": "string",
                            "description": "Hash of the block"
                        },
                        "block_height": {
                            "type": [
                                "integer",
                                "null"
                            ],
                            "description": "Block height"
                        },
                        "epoch_no": {
                            "type": "integer",
                            "description": "Epoch number of the block"
                        },
                        "epoch_slot": {
                            "type": "integer",
                            "description": "Slot number of the block in epoch"
                        },
                        "absolute_slot": {
                            "type": "integer",
                            "description": "Absolute slot number of the block"
                        },
                        "tx_timestamp": {
                            "type": "integer",
                            "description": "UNIX timestamp of the transaction"
                        },
                        "tx_block_index": {
                            "type": "integer",
                            "description": "Index of transaction within block"
                        },
                        "tx_size": {
                            "type": "integer",
                            "description": "Size in bytes of transaction"
                        },
                        "total_output": {
                            "type": "string",
                            "description": "Total sum of all transaction outputs (in lovelaces)"
                        },
                        "fee": {
                            "type": "string",
                            "description": "Total Transaction fee (in lovelaces)"
                        },
                        "deposit": {
                            "type": "string",
                            "description": "Total Deposits included in transaction (for example, if it is registering a pool/key)"
                        },
                        "invalid_before": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "description": "Slot before which transaction cannot be validated (if supplied, else null)"
                        },
                        "invalid_after": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "description": "Slot after which transaction cannot be validated"
                        },
                        "collateral_inputs": {
                            "type": "array",
                            "description": "An array of UTxO outputs created by the transaction",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "payment_addr": {
                                        "type": "object",
                                        "properties": {
                                            "bech32": {
                                                "type": "string",
                                                "description": "A Cardano payment/base address (bech32 encoded) where funds were sent or change to be returned"
                                            },
                                            "cred": {
                                                "type": "string",
                                                "description": "Payment credential"
                                            }
                                        }
                                    },
                                    "stake_addr": {
                                        "allOf": [
                                            {
                                                "type": "string",
                                                "description": "Cardano staking address (reward account) in bech32 format"
                                            }
                                        ]
                                    },
                                    "tx_hash": {
                                        "type": "string",
                                        "description": "Hash of transaction for UTxO"
                                    },
                                    "tx_index": {
                                        "type": "integer",
                                        "description": "Index of UTxO in the transaction"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "Total sum of ADA on the UTxO"
                                    },
                                    "datum_hash": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "Hash of datum (if any) connected to UTxO"
                                    },
                                    "inline_datum": {
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "description": "Allows datums to be attached to UTxO (CIP-32)",
                                        "properties": {
                                            "bytes": {
                                                "type": "string",
                                                "description": "Datum bytes (hex)"
                                            },
                                            "value": {
                                                "type": "object",
                                                "description": "Value (json)"
                                            }
                                        }
                                    },
                                    "reference_script": {
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "description": "Allow reference scripts to be used to satisfy script requirements during validation, rather than requiring the spending transaction to do so. (CIP-33)",
                                        "properties": {
                                            "hash": {
                                                "type": "string",
                                                "description": "Hash of referenced script"
                                            },
                                            "size": {
                                                "type": "integer",
                                                "description": "Size in bytes"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Type of script"
                                            },
                                            "bytes": {
                                                "type": "string",
                                                "description": "Script bytes (hex)"
                                            },
                                            "value": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ],
                                                "description": "Value (json)"
                                            }
                                        }
                                    },
                                    "asset_list": {
                                        "type": [
                                            "array",
                                            "null"
                                        ],
                                        "description": "An array of assets on the UTxO",
                                        "items": {
                                            "properties": {
                                                "policy_id": {
                                                    "type": "string",
                                                    "description": "Asset Policy ID (hex)"
                                                },
                                                "asset_name": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Asset Name (hex)"
                                                },
                                                "fingerprint": {
                                                    "type": "string",
                                                    "description": "The CIP14 fingerprint of the asset"
                                                },
                                                "decimals": {
                                                    "type": "integer",
                                                    "description": "Asset decimals"
                                                },
                                                "quantity": {
                                                    "type": "string",
                                                    "description": "Quantity of assets on the UTxO"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "collateral_output": {
                            "type": "object",
                            "properties": {
                                "payment_addr": {
                                    "type": "object",
                                    "properties": {
                                        "bech32": {
                                            "type": "string",
                                            "description": "A Cardano payment/base address (bech32 encoded) where funds were sent or change to be returned"
                                        },
                                        "cred": {
                                            "type": "string",
                                            "description": "Payment credential"
                                        }
                                    }
                                },
                                "stake_addr": {
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "description": "Cardano staking address (reward account) in bech32 format"
                                        }
                                    ]
                                },
                                "tx_hash": {
                                    "type": "string",
                                    "description": "Hash of transaction for UTxO"
                                },
                                "tx_index": {
                                    "type": "integer",
                                    "description": "Index of UTxO in the transaction"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "Total sum of ADA on the UTxO"
                                },
                                "datum_hash": {
                                    "type": [
                                        "string",
                                        "null"
                                    ],
                                    "description": "Hash of datum (if any) connected to UTxO"
                                },
                                "inline_datum": {
                                    "type": [
                                        "object",
                                        "null"
                                    ],
                                    "description": "Allows datums to be attached to UTxO (CIP-32)",
                                    "properties": {
                                        "bytes": {
                                            "type": "string",
                                            "description": "Datum bytes (hex)"
                                        },
                                        "value": {
                                            "type": "object",
                                            "description": "Value (json)"
                                        }
                                    }
                                },
                                "reference_script": {
                                    "type": [
                                        "object",
                                        "null"
                                    ],
                                    "description": "Allow reference scripts to be used to satisfy script requirements during validation, rather than requiring the spending transaction to do so. (CIP-33)",
                                    "properties": {
                                        "hash": {
                                            "type": "string",
                                            "description": "Hash of referenced script"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "Size in bytes"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "Type of script"
                                        },
                                        "bytes": {
                                            "type": "string",
                                            "description": "Script bytes (hex)"
                                        },
                                        "value": {
                                            "type": [
                                                "object",
                                                "null"
                                            ],
                                            "description": "Value (json)"
                                        }
                                    }
                                },
                                "asset_list": {
                                    "type": [
                                        "array",
                                        "null"
                                    ],
                                    "description": "An array of assets on the UTxO",
                                    "items": {
                                        "properties": {
                                            "policy_id": {
                                                "type": "string",
                                                "description": "Asset Policy ID (hex)"
                                            },
                                            "asset_name": {
                                                "type": [
                                                    "string",
                                                    "null"
                                                ],
                                                "description": "Asset Name (hex)"
                                            },
                                            "fingerprint": {
                                                "type": "string",
                                                "description": "The CIP14 fingerprint of the asset"
                                            },
                                            "decimals": {
                                                "type": "integer",
                                                "description": "Asset decimals"
                                            },
                                            "quantity": {
                                                "type": "string",
                                                "description": "Quantity of assets on the UTxO"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "reference_inputs": {
                            "type": "array",
                            "description": "An array of UTxO outputs created by the transaction",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "payment_addr": {
                                        "type": "object",
                                        "properties": {
                                            "bech32": {
                                                "type": "string",
                                                "description": "A Cardano payment/base address (bech32 encoded) where funds were sent or change to be returned"
                                            },
                                            "cred": {
                                                "type": "string",
                                                "description": "Payment credential"
                                            }
                                        }
                                    },
                                    "stake_addr": {
                                        "allOf": [
                                            {
                                                "type": "string",
                                                "description": "Cardano staking address (reward account) in bech32 format"
                                            }
                                        ]
                                    },
                                    "tx_hash": {
                                        "type": "string",
                                        "description": "Hash of transaction for UTxO"
                                    },
                                    "tx_index": {
                                        "type": "integer",
                                        "description": "Index of UTxO in the transaction"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "Total sum of ADA on the UTxO"
                                    },
                                    "datum_hash": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "Hash of datum (if any) connected to UTxO"
                                    },
                                    "inline_datum": {
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "description": "Allows datums to be attached to UTxO (CIP-32)",
                                        "properties": {
                                            "bytes": {
                                                "type": "string",
                                                "description": "Datum bytes (hex)"
                                            },
                                            "value": {
                                                "type": "object",
                                                "description": "Value (json)"
                                            }
                                        }
                                    },
                                    "reference_script": {
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "description": "Allow reference scripts to be used to satisfy script requirements during validation, rather than requiring the spending transaction to do so. (CIP-33)",
                                        "properties": {
                                            "hash": {
                                                "type": "string",
                                                "description": "Hash of referenced script"
                                            },
                                            "size": {
                                                "type": "integer",
                                                "description": "Size in bytes"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Type of script"
                                            },
                                            "bytes": {
                                                "type": "string",
                                                "description": "Script bytes (hex)"
                                            },
                                            "value": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ],
                                                "description": "Value (json)"
                                            }
                                        }
                                    },
                                    "asset_list": {
                                        "type": [
                                            "array",
                                            "null"
                                        ],
                                        "description": "An array of assets on the UTxO",
                                        "items": {
                                            "properties": {
                                                "policy_id": {
                                                    "type": "string",
                                                    "description": "Asset Policy ID (hex)"
                                                },
                                                "asset_name": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Asset Name (hex)"
                                                },
                                                "fingerprint": {
                                                    "type": "string",
                                                    "description": "The CIP14 fingerprint of the asset"
                                                },
                                                "decimals": {
                                                    "type": "integer",
                                                    "description": "Asset decimals"
                                                },
                                                "quantity": {
                                                    "type": "string",
                                                    "description": "Quantity of assets on the UTxO"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "inputs": {
                            "type": "array",
                            "description": "An array of UTxO outputs created by the transaction",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "payment_addr": {
                                        "type": "object",
                                        "properties": {
                                            "bech32": {
                                                "type": "string",
                                                "description": "A Cardano payment/base address (bech32 encoded) where funds were sent or change to be returned"
                                            },
                                            "cred": {
                                                "type": "string",
                                                "description": "Payment credential"
                                            }
                                        }
                                    },
                                    "stake_addr": {
                                        "allOf": [
                                            {
                                                "type": "string",
                                                "description": "Cardano staking address (reward account) in bech32 format"
                                            }
                                        ]
                                    },
                                    "tx_hash": {
                                        "type": "string",
                                        "description": "Hash of transaction for UTxO"
                                    },
                                    "tx_index": {
                                        "type": "integer",
                                        "description": "Index of UTxO in the transaction"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "Total sum of ADA on the UTxO"
                                    },
                                    "datum_hash": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "Hash of datum (if any) connected to UTxO"
                                    },
                                    "inline_datum": {
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "description": "Allows datums to be attached to UTxO (CIP-32)",
                                        "properties": {
                                            "bytes": {
                                                "type": "string",
                                                "description": "Datum bytes (hex)"
                                            },
                                            "value": {
                                                "type": "object",
                                                "description": "Value (json)"
                                            }
                                        }
                                    },
                                    "reference_script": {
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "description": "Allow reference scripts to be used to satisfy script requirements during validation, rather than requiring the spending transaction to do so. (CIP-33)",
                                        "properties": {
                                            "hash": {
                                                "type": "string",
                                                "description": "Hash of referenced script"
                                            },
                                            "size": {
                                                "type": "integer",
                                                "description": "Size in bytes"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Type of script"
                                            },
                                            "bytes": {
                                                "type": "string",
                                                "description": "Script bytes (hex)"
                                            },
                                            "value": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ],
                                                "description": "Value (json)"
                                            }
                                        }
                                    },
                                    "asset_list": {
                                        "type": [
                                            "array",
                                            "null"
                                        ],
                                        "description": "An array of assets on the UTxO",
                                        "items": {
                                            "properties": {
                                                "policy_id": {
                                                    "type": "string",
                                                    "description": "Asset Policy ID (hex)"
                                                },
                                                "asset_name": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Asset Name (hex)"
                                                },
                                                "fingerprint": {
                                                    "type": "string",
                                                    "description": "The CIP14 fingerprint of the asset"
                                                },
                                                "decimals": {
                                                    "type": "integer",
                                                    "description": "Asset decimals"
                                                },
                                                "quantity": {
                                                    "type": "string",
                                                    "description": "Quantity of assets on the UTxO"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "outputs": {
                            "type": "array",
                            "description": "An array of UTxO outputs created by the transaction",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "payment_addr": {
                                        "type": "object",
                                        "properties": {
                                            "bech32": {
                                                "type": "string",
                                                "description": "A Cardano payment/base address (bech32 encoded) where funds were sent or change to be returned"
                                            },
                                            "cred": {
                                                "type": "string",
                                                "description": "Payment credential"
                                            }
                                        }
                                    },
                                    "stake_addr": {
                                        "allOf": [
                                            {
                                                "type": "string",
                                                "description": "Cardano staking address (reward account) in bech32 format"
                                            }
                                        ]
                                    },
                                    "tx_hash": {
                                        "type": "string",
                                        "description": "Hash of transaction for UTxO"
                                    },
                                    "tx_index": {
                                        "type": "integer",
                                        "description": "Index of UTxO in the transaction"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "Total sum of ADA on the UTxO"
                                    },
                                    "datum_hash": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "Hash of datum (if any) connected to UTxO"
                                    },
                                    "inline_datum": {
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "description": "Allows datums to be attached to UTxO (CIP-32)",
                                        "properties": {
                                            "bytes": {
                                                "type": "string",
                                                "description": "Datum bytes (hex)"
                                            },
                                            "value": {
                                                "type": "object",
                                                "description": "Value (json)"
                                            }
                                        }
                                    },
                                    "reference_script": {
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "description": "Allow reference scripts to be used to satisfy script requirements during validation, rather than requiring the spending transaction to do so. (CIP-33)",
                                        "properties": {
                                            "hash": {
                                                "type": "string",
                                                "description": "Hash of referenced script"
                                            },
                                            "size": {
                                                "type": "integer",
                                                "description": "Size in bytes"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Type of script"
                                            },
                                            "bytes": {
                                                "type": "string",
                                                "description": "Script bytes (hex)"
                                            },
                                            "value": {
                                                "type": [
                                                    "object",
                                                    "null"
                                                ],
                                                "description": "Value (json)"
                                            }
                                        }
                                    },
                                    "asset_list": {
                                        "type": [
                                            "array",
                                            "null"
                                        ],
                                        "description": "An array of assets on the UTxO",
                                        "items": {
                                            "properties": {
                                                "policy_id": {
                                                    "type": "string",
                                                    "description": "Asset Policy ID (hex)"
                                                },
                                                "asset_name": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Asset Name (hex)"
                                                },
                                                "fingerprint": {
                                                    "type": "string",
                                                    "description": "The CIP14 fingerprint of the asset"
                                                },
                                                "decimals": {
                                                    "type": "integer",
                                                    "description": "Asset decimals"
                                                },
                                                "quantity": {
                                                    "type": "string",
                                                    "description": "Quantity of assets on the UTxO"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "withdrawals": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Array of withdrawals with-in a transaction",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "amount": {
                                        "type": "string",
                                        "description": "Withdrawal amount (in lovelaces)"
                                    },
                                    "stake_addr": {
                                        "type": "string",
                                        "description": "A Cardano staking address (reward account, bech32 encoded)"
                                    }
                                }
                            }
                        },
                        "assets_minted": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Array of minted assets with-in a transaction",
                            "items": {
                                "properties": {
                                    "policy_id": {
                                        "type": "string",
                                        "description": "Asset Policy ID (hex)"
                                    },
                                    "asset_name": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "Asset Name (hex)"
                                    },
                                    "fingerprint": {
                                        "type": "string",
                                        "description": "The CIP14 fingerprint of the asset"
                                    },
                                    "decimals": {
                                        "type": "integer",
                                        "description": "Asset decimals"
                                    },
                                    "quantity": {
                                        "type": "string",
                                        "description": "Quantity of minted assets (negative on burn)"
                                    }
                                }
                            }
                        },
                        "metadata": {
                            "type": [
                                "object",
                                "null"
                            ],
                            "description": "A JSON array containing details about metadata within transaction"
                        },
                        "certificates": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Certificates present with-in a transaction (if any)",
                            "items": {
                                "properties": {
                                    "index": {
                                        "type": [
                                            "integer",
                                            "null"
                                        ],
                                        "description": "Certificate index"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "Type of certificate (could be delegation, stake_registration, stake_deregistraion, pool_update, pool_retire, param_proposal, reserve_MIR, treasury_MIR)"
                                    },
                                    "info": {
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "description": "A JSON array containing information from the certificate"
                                    }
                                }
                            }
                        },
                        "native_scripts": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Native scripts present in a transaction (if any)",
                            "items": {
                                "properties": {
                                    "script_hash": {
                                        "type": "string",
                                        "description": "Hash of a script"
                                    },
                                    "script_json": {
                                        "type": "object",
                                        "description": "JSON representation of the timelock script (null for other script types)"
                                    }
                                }
                            }
                        },
                        "plutus_contracts": {
                            "type": "array",
                            "description": "Plutus contracts present in transaction (if any)",
                            "items": {
                                "properties": {
                                    "address": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "Plutus script address"
                                    },
                                    "script_hash": {
                                        "type": "string",
                                        "description": "Hash of a script"
                                    },
                                    "bytecode": {
                                        "type": "string",
                                        "description": "CBOR-encoded Plutus script data"
                                    },
                                    "size": {
                                        "type": "integer",
                                        "description": "The size of the CBOR serialised script (in bytes)"
                                    },
                                    "valid_contract": {
                                        "type": "boolean",
                                        "description": "True if the contract is valid or there is no contract"
                                    },
                                    "input": {
                                        "type": "object",
                                        "properties": {
                                            "redeemer": {
                                                "type": "object",
                                                "properties": {
                                                    "purpose": {
                                                        "type": "string",
                                                        "description": "What kind of validation this redeemer is used for",
                                                        "enum": [
                                                            "spend",
                                                            "mint",
                                                            "cert",
                                                            "reward"
                                                        ]
                                                    },
                                                    "fee": {
                                                        "type": "string",
                                                        "description": "The budget in fees to run a script - the fees depend on the ExUnits and the current prices"
                                                    },
                                                    "unit": {
                                                        "type": "object",
                                                        "properties": {
                                                            "steps": {
                                                                "description": "**Omitted**"
                                                            },
                                                            "mem": {
                                                                "description": "**Omitted**"
                                                            }
                                                        }
                                                    },
                                                    "datum": {
                                                        "type": "object",
                                                        "properties": {
                                                            "hash": {
                                                                "description": "**Omitted**"
                                                            },
                                                            "value": {
                                                                "description": "**Omitted**"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "datum": {
                                                "type": "object",
                                                "properties": {
                                                    "hash": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "The Hash of the Plutus Data"
                                                    },
                                                    "value": {
                                                        "type": "object",
                                                        "description": "The actual data in json format"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/pool_metadata",
            "url": "https://cardanos-decentralized-api-preview.p.rapidapi.com/pool_metadata",
            "description": "Metadata (on & off-chain) for all currently registered/retiring (not retired) pools",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/pool_metadata\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/pool_metadata\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/address_assets",
            "url": "https://cardanos-decentralized-api-preview.p.rapidapi.com/address_assets",
            "description": "Get the list of all the assets (policy, name and quantity) for given addresses",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/address_assets\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/address_assets\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/account_updates",
            "url": "https://cardanos-decentralized-api-preview.p.rapidapi.com/account_updates",
            "description": "Get the account updates (registration, deregistration, delegation and withdrawals) for given stake addresses",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/account_updates\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/account_updates\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/account_assets",
            "url": "https://cardanos-decentralized-api-preview.p.rapidapi.com/account_assets",
            "description": "Get the native asset balance for a given stake address",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/account_assets\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/account_assets\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/submittx",
            "url": "https://cardanos-decentralized-api-preview.p.rapidapi.com/submittx",
            "description": "Submit an already serialized transaction to the network.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/submittx\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/submittx\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/account_rewards",
            "url": "https://cardanos-decentralized-api-preview.p.rapidapi.com/account_rewards",
            "description": "Get the full rewards history (including MIR) for given stake addresses",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/account_rewards\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/account_rewards\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "stake_address": {
                            "type": "string",
                            "description": "Cardano staking address (reward account) in bech32 format"
                        },
                        "rewards": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "earned_epoch": {
                                        "type": "integer",
                                        "description": "Epoch number"
                                    },
                                    "spendable_epoch": {
                                        "type": "integer",
                                        "description": "Epoch number"
                                    },
                                    "amount": {
                                        "type": "string",
                                        "description": "Amount of rewards earned (in lovelace)"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "The source of the rewards",
                                        "enum": [
                                            "member",
                                            "leader",
                                            "treasury",
                                            "reserves"
                                        ]
                                    },
                                    "pool_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "Bech32 representation of pool ID"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/asset_info",
            "url": "https://cardanos-decentralized-api-preview.p.rapidapi.com/asset_info",
            "description": "Get the information of a list of assets including first minting & token registry metadata",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/asset_info\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/asset_info\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/datum_info",
            "url": "https://cardanos-decentralized-api-preview.p.rapidapi.com/datum_info",
            "description": "List of datum information for given datum hashes",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/datum_info\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/datum_info\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/account_addresses",
            "url": "https://cardanos-decentralized-api-preview.p.rapidapi.com/account_addresses",
            "description": "Get all addresses associated with given staking accounts",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/account_addresses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/account_addresses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/pool_info",
            "url": "https://cardanos-decentralized-api-preview.p.rapidapi.com/pool_info",
            "description": "Current pool statuses and details for a specified list of pool ids",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/pool_info\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/pool_info\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "pool_id_bech32": {
                            "type": "string",
                            "description": "Pool ID (bech32 format)"
                        },
                        "pool_id_hex": {
                            "type": "string",
                            "description": "Pool ID (Hex format)"
                        },
                        "active_epoch_no": {
                            "type": "integer",
                            "description": "Epoch number in which the update becomes active"
                        },
                        "vrf_key_hash": {
                            "type": "string",
                            "description": "Pool VRF key hash"
                        },
                        "margin": {
                            "type": "number",
                            "description": "Margin (decimal format)"
                        },
                        "fixed_cost": {
                            "type": "string",
                            "description": "Pool fixed cost per epoch"
                        },
                        "pledge": {
                            "type": "string",
                            "description": "Pool pledge in lovelace"
                        },
                        "reward_addr": {
                            "type": "string",
                            "description": "Pool reward address"
                        },
                        "owners": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Pool (co)owner address"
                            }
                        },
                        "relays": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "dns": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "DNS name of the relay (nullable)"
                                    },
                                    "srv": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "DNS service name of the relay (nullable)"
                                    },
                                    "ipv4": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "IPv4 address of the relay (nullable)"
                                    },
                                    "ipv6": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "IPv6 address of the relay (nullable)"
                                    },
                                    "port": {
                                        "type": [
                                            "number",
                                            "null"
                                        ],
                                        "description": "Port number of the relay (nullable)"
                                    }
                                }
                            }
                        },
                        "meta_url": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "description": "Pool metadata URL"
                        },
                        "meta_hash": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "description": "Pool metadata hash"
                        },
                        "meta_json": {
                            "type": [
                                "object",
                                "null"
                            ],
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Pool name"
                                },
                                "ticker": {
                                    "type": "string",
                                    "description": "Pool ticker"
                                },
                                "homepage": {
                                    "type": "string",
                                    "description": "Pool homepage URL"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Pool description"
                                }
                            }
                        },
                        "pool_status": {
                            "type": "string",
                            "description": "Pool status",
                            "enum": [
                                "registered",
                                "retiring",
                                "retired"
                            ]
                        },
                        "retiring_epoch": {
                            "type": [
                                "integer",
                                "null"
                            ],
                            "description": "Announced retiring epoch (nullable)"
                        },
                        "op_cert": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "description": "Pool latest operational certificate hash"
                        },
                        "op_cert_counter": {
                            "type": [
                                "integer",
                                "null"
                            ],
                            "description": "Pool latest operational certificate counter value"
                        },
                        "active_stake": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "description": "Pool active stake (will be null post epoch transition until dbsync calculation is complete)"
                        },
                        "sigma": {
                            "type": [
                                "number",
                                "null"
                            ],
                            "description": "Pool relative active stake share"
                        },
                        "block_count": {
                            "type": [
                                "integer",
                                "null"
                            ],
                            "description": "Total pool blocks on chain"
                        },
                        "live_pledge": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "description": "Summary of account balance for all pool owner's"
                        },
                        "live_stake": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "description": "Pool live stake"
                        },
                        "live_delegators": {
                            "type": "integer",
                            "description": "Pool live delegator count"
                        },
                        "live_saturation": {
                            "type": [
                                "number",
                                "null"
                            ],
                            "description": "Pool live saturation (decimal format)"
                        }
                    }
                }
            }
        },
        {
            "name": "/address_info",
            "url": "https://cardanos-decentralized-api-preview.p.rapidapi.com/address_info",
            "description": "Get address info - balance, associated stake address (if any) and UTxO set for given addresses",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/address_info\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/address_info\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/account_info",
            "url": "https://cardanos-decentralized-api-preview.p.rapidapi.com/account_info",
            "description": "Get the account information for given stake addresses",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/account_info\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/account_info\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/credential_txs",
            "url": "https://cardanos-decentralized-api-preview.p.rapidapi.com/credential_txs",
            "description": "Get the transaction hash list of input payment credential array, optionally filtering after specified block height (inclusive)",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/credential_txs\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/credential_txs\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "tx_hash": {
                            "type": "string",
                            "description": "Hash identifier of the transaction"
                        },
                        "epoch_no": {
                            "type": "integer",
                            "description": "Epoch number of the block"
                        },
                        "block_height": {
                            "type": [
                                "integer",
                                "null"
                            ],
                            "description": "Block height"
                        },
                        "block_time": {
                            "type": "integer",
                            "description": "UNIX timestamp of the block"
                        }
                    }
                }
            }
        },
        {
            "name": "/block_txs",
            "url": "https://cardanos-decentralized-api-preview.p.rapidapi.com/block_txs",
            "description": "Get a list of all transactions included in provided blocks",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/block_txs\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/block_txs\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "block_hash": {
                            "type": "string",
                            "description": "Hash of the block"
                        },
                        "tx_hashes": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Hash identifier of the transaction"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "/block_info",
            "url": "https://cardanos-decentralized-api-preview.p.rapidapi.com/block_info",
            "description": "Get detailed information about a specific block",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/block_info\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/block_info\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "/account_info_cached",
            "url": "https://cardanos-decentralized-api-preview.p.rapidapi.com/account_info_cached",
            "description": "Get the cached account information for given stake addresses, effective for registered accounts",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/account_info_cached\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://cardanos-decentralized-api-preview.p.rapidapi.com/account_info_cached\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cardanos-decentralized-api-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "stake_address": {
                            "type": "string",
                            "description": "Cardano staking address (reward account) in bech32 format"
                        },
                        "status": {
                            "type": "string",
                            "description": "Stake address status",
                            "enum": [
                                "registered",
                                "not registered"
                            ]
                        },
                        "delegated_pool": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "description": "Bech32 representation of pool ID"
                        },
                        "total_balance": {
                            "type": "string",
                            "description": "Total balance of the account including UTxO, rewards and MIRs (in lovelace)"
                        },
                        "utxo": {
                            "type": "string",
                            "description": "Total UTxO balance of the account"
                        },
                        "rewards": {
                            "type": "string",
                            "description": "Total rewards earned by the account"
                        },
                        "withdrawals": {
                            "type": "string",
                            "description": "Total rewards withdrawn by the account"
                        },
                        "rewards_available": {
                            "type": "string",
                            "description": "Total rewards available for withdawal"
                        },
                        "reserves": {
                            "type": "string",
                            "description": "Total reserves MIR value of the account"
                        },
                        "treasury": {
                            "type": "string",
                            "description": "Total treasury MIR value of the account"
                        }
                    }
                }
            }
        }
    ]
}