{
    "product_id": "5a83405be4b0a62b51d020dd",
    "tool_description": "Reverse NS API lets you see the list of domains using the same name server.",
    "home_url": "https://rapidapi.com/whoisapi/api/reverse-ns/",
    "name": "Reverse NS",
    "title": "Reverse NS",
    "pricing": "FREE",
    "tool_name": "Reverse NS",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 643,
        "avgSuccessRate": 0,
        "popularityScore": 0,
        "__typename": "Score"
    },
    "host": "whoisapi-reverse-ns-v1.p.rapidapi.com",
    "api_list": [
        {
            "name": "/api/v1",
            "url": "https://whoisapi-reverse-ns-v1.p.rapidapi.com/api/v1",
            "description": "",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "ns",
                    "type": "STRING",
                    "description": "The name server for which the information is required.",
                    "default": "ns2.google.com"
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Pagination position (default: 1).",
                    "default": "1"
                }
            ],
            "code": "import requests\n\nurl = \"https://whoisapi-reverse-ns-v1.p.rapidapi.com/api/v1\"\nquerystring = {\"ns\": \"ns2.google.com\", \"page\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"whoisapi-reverse-ns-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://whoisapi-reverse-ns-v1.p.rapidapi.com/api/v1\"\nquerystring = {\"ns\": \"ns2.google.com\", \"page\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"whoisapi-reverse-ns-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "code": 403,
                "messages": "Access restricted. Check credits balance or enter the correct API key."
            },
            "statuscode": 1,
            "schema": ""
        }
    ],
    "standardized_name": "reverse_ns"
}