{
    "tool_name":"Mocking Rock ",
    "tool_description":"An APIs collection for getting sample profiles and city Data for testings for frontend or mock testings.    ",
    "title":"Mocking Rock ",
    "pricing":"FREEMIUM",
    "score":{
        "avgServiceLevel":100,
        "avgLatency":1163,
        "avgSuccessRate":100,
        "popularityScore":8.9,
        "__typename":"Score"
    },
    "home_url":"https://rapidapi.com/pcprashant99/api/mocking-rock/",
    "host":"mocking-rock.p.rapidapi.com",
    "api_list":[
        {
            "name":"Get Geo location Of IP address",
            "url":"https://mocking-rock.p.rapidapi.com/country/getipgeodata",
            "description":"Pass IP address to get its geo location and other details",
            "method":"GET",
            "required_parameters":[
                {
                    "name":"ip",
                    "type":"STRING",
                    "description":"Send a proper IPV4 .If valid IP will return result.",
                    "default":"34.89.89.28"
                }
            ],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://mocking-rock.p.rapidapi.com/country/getipgeodata\"\nquerystring = {\"ip\": ip}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mocking-rock.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "request":"34.89.89.28",
                "status":200,
                "delay":"2ms",
                "areaCode":"",
                "city":"London",
                "continentCode":"EU",
                "continentName":"Europe",
                "countryCode":"GB",
                "countryName":"United Kingdom",
                "currencyCode":"GBP",
                "currencyConverter":0.8309,
                "currencySymbol":"£",
                "currencySymbol_UTF8":"£",
                "dmaCode":"",
                "euVATRate":false,
                "inEU":false,
                "locationAccuracyRadius":"20",
                "latLong":{
                    "latitude":"51.5095",
                    "longitude":"-0.0955"
                },
                "region":"England",
                "regionCode":"ENG",
                "regionName":"England",
                "timezone":"Europe/London"
            },
            "headers":{
                "access-control-allow-credentials":"true",
                "access-control-allow-headers":"Content-Type , Origin, deviceId, st, at, appversion, osname, apiKey, userId, latitude, longitude, lat, lon, cityId, content-type, checksum, age, apikey, appversion, content-type, createdat, curefituserid, dateofbirth, description, displayimage, emailid, emergencycontactemailid, emergencycontactname, emergencycontactrelation, emergencyphonenumber, familydoctorid, firstname, formattedage, gender, governmentidnumber, governmentidtype, guardianemailid, guardianname, guardianphonenumber, guardianrelation, id, lastname, middlename, name, osname, phonenumber, preferredtherapycentre, recordedage, recordedbirthdate, relationship, residentialaddress, tncsigned, uhid, updatedat, videocallnumber, ssotoken, clientversion, localeCountryCode, timezone, browsername, x-request-id",
                "access-control-allow-methods":"GET,PUT,POST,DELETE",
                "access-control-allow-origin":"*",
                "alt-svc":"h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400",
                "cf-cache-status":"DYNAMIC",
                "cf-ray":"7a2ccddf6c0491b9-SIN",
                "content-length":"492",
                "content-type":"application/json; charset=utf-8",
                "date":"Sat, 04 Mar 2023 20:17:43 GMT",
                "etag":"W/\"1ec-NPC0p4JQ1xh9Zc/BaJ3Tyn3pIMY\"",
                "nel":"{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}",
                "server":"RapidAPI-1.2.8",
                "x-powered-by":"Express",
                "x-rapidapi-region":"AWS - ap-southeast-1",
                "x-rapidapi-version":"1.2.8",
                "x-request-id":"338ab5e0-5056-4f97-b19c-e09ec2f1d34d"
            },
            "schema":{
                "type":"object",
                "properties":{
                    "request":{
                        "type":"string"
                    },
                    "status":{
                        "type":"integer"
                    },
                    "delay":{
                        "type":"string"
                    },
                    "areaCode":{
                        "type":"string"
                    },
                    "city":{
                        "type":"string"
                    },
                    "continentCode":{
                        "type":"string"
                    },
                    "continentName":{
                        "type":"string"
                    },
                    "countryCode":{
                        "type":"string"
                    },
                    "countryName":{
                        "type":"string"
                    },
                    "currencyCode":{
                        "type":"string"
                    },
                    "currencyConverter":{
                        "type":"number"
                    },
                    "currencySymbol":{
                        "type":"string"
                    },
                    "currencySymbol_UTF8":{
                        "type":"string"
                    },
                    "dmaCode":{
                        "type":"string"
                    },
                    "euVATRate":{
                        "type":"boolean"
                    },
                    "inEU":{
                        "type":"boolean"
                    },
                    "locationAccuracyRadius":{
                        "type":"string"
                    },
                    "latLong":{
                        "type":"object",
                        "properties":{
                            "latitude":{
                                "type":"string"
                            },
                            "longitude":{
                                "type":"string"
                            }
                        }
                    },
                    "region":{
                        "type":"string"
                    },
                    "regionCode":{
                        "type":"string"
                    },
                    "regionName":{
                        "type":"string"
                    },
                    "timezone":{
                        "type":"string"
                    }
                }
            }
        },
        {
            "name":"Get Locales List",
            "url":"https://mocking-rock.p.rapidapi.com/profile/known_locales",
            "description":"You can use this API to get the list of available locales \nWhich can be used to generate profile APIs response.",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://mocking-rock.p.rapidapi.com/profile/known_locales\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mocking-rock.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode":111,
            "body":"",
            "headers":"",
            "schema":""
        },
        {
            "name":"Get Sample BusinessProfile",
            "url":"https://mocking-rock.p.rapidapi.com/profile/business_profile",
            "description":"Use this API to get fake-generated Business Profile sample data.\nBy default, it will generate \"en\"  locale for a single count.\nIf count query is greater than 1 it will randomize the generated profiles \nto a different locale. \nTo set a default locale pass it as the query.List of the locale you can get from locale API.\nIn case of the wrong locale is given it will return the result based on default settings as mentioned above.",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[
                {
                    "name":"locale",
                    "type":"STRING",
                    "description":"Pass locale to set language and regional details of profile generated. For single count by default its \\\\\\\"en\\\\\\\" . ",
                    "default":"en"
                },
                {
                    "name":"count",
                    "type":"NUMBER",
                    "description":"Use to get number of profiles . Max count 1000 for now ",
                    "default":"1"
                }
            ],
            "code":"import requests\n\nurl = \"https://mocking-rock.p.rapidapi.com/profile/business_profile\"\nquerystring = {\"locale\": locale, \"count\": count}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mocking-rock.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":[
                {
                    "id":"eb61932d-2a58-4bd4-9f55-1f74ae8ba77c",
                    "locale":"en",
                    "name":"Feest Group",
                    "address":{
                        "street":"146 Green Land",
                        "city":"East Deja",
                        "state":"Washington",
                        "zipCode":"45477",
                        "country":"Latvia"
                    },
                    "phone":"(340) 615-9603 x782",
                    "email":"Krystal64@gmail.com",
                    "website":"http://absolute-alcove.net",
                    "industry":"Sports",
                    "openingHours":"12:00 AM - 6:00 PM",
                    "socialMedia":{
                        "facebook":"https://facebook.com/Hope_Rohan",
                        "twitter":"Marcel_Huels35",
                        "instagram":"Agnes_Kshlerin"
                    },
                    "creditCard":{
                        "cardNumber":"3475-273235-10663",
                        "issuer":"visa",
                        "expiryDate":"12/25",
                        "cvv":"863",
                        "cardHolderName":"Lucia Schneider"
                    }
                }
            ],
            "headers":{
                "access-control-allow-credentials":"true",
                "access-control-allow-headers":"Content-Type , Origin, deviceId, st, at, appversion, osname, apiKey, userId, latitude, longitude, lat, lon, cityId, content-type, checksum, age, apikey, appversion, content-type, createdat, curefituserid, dateofbirth, description, displayimage, emailid, emergencycontactemailid, emergencycontactname, emergencycontactrelation, emergencyphonenumber, familydoctorid, firstname, formattedage, gender, governmentidnumber, governmentidtype, guardianemailid, guardianname, guardianphonenumber, guardianrelation, id, lastname, middlename, name, osname, phonenumber, preferredtherapycentre, recordedage, recordedbirthdate, relationship, residentialaddress, tncsigned, uhid, updatedat, videocallnumber, ssotoken, clientversion, localeCountryCode, timezone, browsername, x-request-id",
                "access-control-allow-methods":"GET,PUT,POST,DELETE",
                "access-control-allow-origin":"*",
                "alt-svc":"h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400",
                "cf-cache-status":"DYNAMIC",
                "cf-ray":"7a29c4eeec5b4044-SIN",
                "content-length":"601",
                "content-type":"application/json; charset=utf-8",
                "date":"Sat, 04 Mar 2023 11:27:19 GMT",
                "etag":"W/\"259-ydIO2E73lanS4K5wBHpVBZYDTUE\"",
                "nel":"{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}",
                "server":"RapidAPI-1.2.8",
                "x-powered-by":"Express",
                "x-rapidapi-region":"AWS - ap-southeast-1",
                "x-rapidapi-version":"1.2.8",
                "x-request-id":"cff7d32b-5884-418f-a87d-3558b463cc1c"
            },
            "schema":{
                "type":"array",
                "items":{
                    "type":"object",
                    "properties":{
                        "id":{
                            "type":"string"
                        },
                        "locale":{
                            "type":"string"
                        },
                        "name":{
                            "type":"string"
                        },
                        "address":{
                            "type":"object",
                            "properties":{
                                "street":{
                                    "type":"string"
                                },
                                "city":{
                                    "type":"string"
                                },
                                "state":{
                                    "type":"string"
                                },
                                "zipCode":{
                                    "type":"string"
                                },
                                "country":{
                                    "type":"string"
                                }
                            }
                        },
                        "phone":{
                            "type":"string"
                        },
                        "email":{
                            "type":"string"
                        },
                        "website":{
                            "type":"string"
                        },
                        "industry":{
                            "type":"string"
                        },
                        "openingHours":{
                            "type":"string"
                        },
                        "socialMedia":{
                            "type":"object",
                            "properties":{
                                "facebook":{
                                    "type":"string"
                                },
                                "twitter":{
                                    "type":"string"
                                },
                                "instagram":{
                                    "type":"string"
                                }
                            }
                        },
                        "creditCard":{
                            "type":"object",
                            "properties":{
                                "cardNumber":{
                                    "type":"string"
                                },
                                "issuer":{
                                    "type":"string"
                                },
                                "expiryDate":{
                                    "type":"string"
                                },
                                "cvv":{
                                    "type":"string"
                                },
                                "cardHolderName":{
                                    "type":"string"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name":"Get Sample UserProfile",
            "url":"https://mocking-rock.p.rapidapi.com/profile/user_profile",
            "description":"Use this API to get fake-generated user Profile sample data.\nBy default, it will generate \"en\"  locale for a single count.\nIf count query is greater than 1 it will randomize the generated profiles \nto a different locale. \nTo set a default locale pass it as the query.List of the locale you can get from locale API.\nIn case of the wrong locale is given it will return the result based on default settings as mentioned above.",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[
                {
                    "name":"count",
                    "type":"NUMBER",
                    "description":"Use to get number of profiles . Max count 1000 for now ",
                    "default":"2"
                },
                {
                    "name":"locale",
                    "type":"STRING",
                    "description":"Pass locale to set language and regional details of profile generated. For single count by default its \\\"en\\\" . ",
                    "default":"en"
                }
            ],
            "code":"import requests\n\nurl = \"https://mocking-rock.p.rapidapi.com/profile/user_profile\"\nquerystring = {\"count\": count, \"locale\": locale}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mocking-rock.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":[
                {
                    "id":"16763029-9a33-4e48-a924-d286c0188bc1",
                    "locale":"en",
                    "name":{
                        "prefix":"Mr.",
                        "first":"Samuel",
                        "middle":"Reign",
                        "last":"Mayert",
                        "suffix":"III"
                    },
                    "email":"samuel.mayert84@gmail.com",
                    "address":{
                        "street":"1836 Emilio Forge",
                        "city":"Lincolnport",
                        "state":"Hawaii",
                        "zipCode":"32787",
                        "country":"Botswana"
                    },
                    "phone":"1-634-266-4033",
                    "dob":"1954-07-03T18:43:21.910Z",
                    "sex":"male",
                    "company":{
                        "name":"Huel - Ryan",
                        "catchPhrase":"Networked 6th generation approach",
                        "bs":"architect seamless e-services"
                    },
                    "jobTitle":"District Intranet Manager",
                    "avatar":"https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/719.jpg",
                    "bio":"Quasi deserunt voluptates aperiam pariatur excepturi. Enim ipsum eius accusamus nostrum iure. Molestiae quia sit recusandae minima saepe sit consectetur.",
                    "createdAt":"2023-03-03T20:23:30.803Z",
                    "paymentCard":{
                        "cardNumber":"6759-7882-8262-9776-80",
                        "issuer":"jcb",
                        "expiryDate":"07/24",
                        "cvv":"831",
                        "cardHolderName":"Samuel Mayert"
                    }
                },
                {
                    "id":"589832bf-f15d-44db-aac9-40345cde3e76",
                    "locale":"en",
                    "name":{
                        "prefix":"Miss",
                        "first":"Melinda",
                        "middle":"Dakota",
                        "last":"Kuphal",
                        "suffix":"Jr."
                    },
                    "email":"melinda66@gmail.com",
                    "address":{
                        "street":"5692 Skye Cape",
                        "city":"Pasadena",
                        "state":"Tennessee",
                        "zipCode":"16224-7946",
                        "country":"Uruguay"
                    },
                    "phone":"739-476-9471",
                    "dob":"1981-03-10T07:16:02.885Z",
                    "sex":"female",
                    "company":{
                        "name":"Franey LLC",
                        "catchPhrase":"User-centric disintermediate strategy",
                        "bs":"target front-end channels"
                    },
                    "jobTitle":"Central Directives Liaison",
                    "avatar":"https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/886.jpg",
                    "bio":"Ex sapiente minus ullam hic vero quas. Beatae placeat impedit inventore. Dolores perferendis quis quis adipisci veniam corrupti fugiat aperiam. Dolorum vitae eos dolor necessitatibus vero iusto corrupti.",
                    "createdAt":"2023-03-04T00:59:15.386Z",
                    "paymentCard":{
                        "cardNumber":"50209716427476978",
                        "issuer":"diners_club",
                        "expiryDate":"10/26",
                        "cvv":"810",
                        "cardHolderName":"Melinda Kuphal"
                    }
                }
            ],
            "headers":{
                "access-control-allow-credentials":"true",
                "access-control-allow-headers":"Content-Type , Origin, deviceId, st, at, appversion, osname, apiKey, userId, latitude, longitude, lat, lon, cityId, content-type, checksum, age, apikey, appversion, content-type, createdat, curefituserid, dateofbirth, description, displayimage, emailid, emergencycontactemailid, emergencycontactname, emergencycontactrelation, emergencyphonenumber, familydoctorid, firstname, formattedage, gender, governmentidnumber, governmentidtype, guardianemailid, guardianname, guardianphonenumber, guardianrelation, id, lastname, middlename, name, osname, phonenumber, preferredtherapycentre, recordedage, recordedbirthdate, relationship, residentialaddress, tncsigned, uhid, updatedat, videocallnumber, ssotoken, clientversion, localeCountryCode, timezone, browsername, x-request-id",
                "access-control-allow-methods":"GET,PUT,POST,DELETE",
                "access-control-allow-origin":"*",
                "alt-svc":"h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400",
                "cf-cache-status":"DYNAMIC",
                "cf-ray":"7a29b4f27bc84619-SIN",
                "content-length":"2003",
                "content-type":"application/json; charset=utf-8",
                "date":"Sat, 04 Mar 2023 11:16:24 GMT",
                "etag":"W/\"7d3-n1+6kCUJfJGsXIeSeP+G9537Ylk\"",
                "nel":"{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}",
                "server":"RapidAPI-1.2.8",
                "x-powered-by":"Express",
                "x-rapidapi-region":"AWS - ap-southeast-1",
                "x-rapidapi-version":"1.2.8",
                "x-request-id":"00d98b96-1eff-40b1-a639-7eff1a95d81b"
            },
            "schema":{
                "type":"array",
                "items":{
                    "type":"object",
                    "properties":{
                        "id":{
                            "type":"string"
                        },
                        "locale":{
                            "type":"string"
                        },
                        "name":{
                            "type":"object",
                            "properties":{
                                "prefix":{
                                    "type":"string"
                                },
                                "first":{
                                    "type":"string"
                                },
                                "middle":{
                                    "type":"string"
                                },
                                "last":{
                                    "type":"string"
                                },
                                "suffix":{
                                    "type":"string"
                                }
                            }
                        },
                        "email":{
                            "type":"string"
                        },
                        "address":{
                            "type":"object",
                            "properties":{
                                "street":{
                                    "type":"string"
                                },
                                "city":{
                                    "type":"string"
                                },
                                "state":{
                                    "type":"string"
                                },
                                "zipCode":{
                                    "type":"string"
                                },
                                "country":{
                                    "type":"string"
                                }
                            }
                        },
                        "phone":{
                            "type":"string"
                        },
                        "dob":{
                            "type":"string"
                        },
                        "sex":{
                            "type":"string"
                        },
                        "company":{
                            "type":"object",
                            "properties":{
                                "name":{
                                    "type":"string"
                                },
                                "catchPhrase":{
                                    "type":"string"
                                },
                                "bs":{
                                    "type":"string"
                                }
                            }
                        },
                        "jobTitle":{
                            "type":"string"
                        },
                        "avatar":{
                            "type":"string"
                        },
                        "bio":{
                            "type":"string"
                        },
                        "createdAt":{
                            "type":"string"
                        },
                        "paymentCard":{
                            "type":"object",
                            "properties":{
                                "cardNumber":{
                                    "type":"string"
                                },
                                "issuer":{
                                    "type":"string"
                                },
                                "expiryDate":{
                                    "type":"string"
                                },
                                "cvv":{
                                    "type":"string"
                                },
                                "cardHolderName":{
                                    "type":"string"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name":"Get Country Codes",
            "url":"https://mocking-rock.p.rapidapi.com/country/countrycode",
            "description":"Use this API to get list of countries, Their ISO3 & ISO2 codes.",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[],
            "code":"import requests\n\nurl = \"https://mocking-rock.p.rapidapi.com/country/countrycode\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mocking-rock.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":{
                "country":[
                    "Afghanistan",
                    "Albania",
                    "Algeria",
                    "American Samoa",
                    "Andorra",
                    "Angola",
                    "Anguilla",
                    "Antigua And Barbuda",
                    "Argentina",
                    "Armenia",
                    "Aruba",
                    "Australia",
                    "Austria",
                    "Azerbaijan",
                    "Bahrain",
                    "Bangladesh",
                    "Barbados",
                    "Belarus",
                    "Belgium",
                    "Belize",
                    "Benin",
                    "Bermuda",
                    "Bhutan",
                    "Bolivia",
                    "Bosnia And Herzegovina",
                    "Botswana",
                    "Brazil",
                    "British Virgin Islands",
                    "Brunei",
                    "Bulgaria",
                    "Burkina Faso",
                    "Burundi",
                    "Cabo Verde",
                    "Cambodia",
                    "Cameroon",
                    "Canada",
                    "Cayman Islands",
                    "Central African Republic",
                    "Chad",
                    "Chile",
                    "China",
                    "Christmas Island",
                    "Colombia",
                    "Comoros",
                    "Congo (Brazzaville)",
                    "Congo (Kinshasa)",
                    "Cook Islands",
                    "Costa Rica",
                    "Croatia",
                    "Cuba",
                    "Curaçao",
                    "Cyprus",
                    "Czechia",
                    "Côte d'Ivoire",
                    "Denmark",
                    "Djibouti",
                    "Dominica",
                    "Dominican Republic",
                    "Ecuador",
                    "Egypt",
                    "El Salvador",
                    "Equatorial Guinea",
                    "Eritrea",
                    "Estonia",
                    "Ethiopia",
                    "Falkland Islands (Islas Malvinas)",
                    "Faroe Islands",
                    "Federated States of Micronesia",
                    "Fiji",
                    "Finland",
                    "France",
                    "French Guiana",
                    "French Polynesia",
                    "Gabon",
                    "Gaza Strip",
                    "Georgia",
                    "Germany",
                    "Ghana",
                    "Gibraltar",
                    "Greece",
                    "Greenland",
                    "Grenada",
                    "Guadeloupe",
                    "Guam",
                    "Guatemala",
                    "Guinea",
                    "Guinea-Bissau",
                    "Guyana",
                    "Haiti",
                    "Honduras",
                    "Hong Kong",
                    "Hungary",
                    "Iceland",
                    "India",
                    "Indonesia",
                    "Iran",
                    "Iraq",
                    "Ireland",
                    "Isle Of Man",
                    "Israel",
                    "Italy",
                    "Jamaica",
                    "Japan",
                    "Jersey",
                    "Jordan",
                    "Kazakhstan",
                    "Kenya",
                    "Kiribati",
                    "Kosovo",
                    "Kuwait",
                    "Kyrgyzstan",
                    "Laos",
                    "Latvia",
                    "Lebanon",
                    "Lesotho",
                    "Liberia",
                    "Libya",
                    "Liechtenstein",
                    "Lithuania",
                    "Luxembourg",
                    "Macau",
                    "Macedonia",
                    "Madagascar",
                    "Malawi",
                    "Malaysia",
                    "Maldives",
                    "Mali",
                    "Malta",
                    "Marshall Islands",
                    "Martinique",
                    "Mauritania",
                    "Mauritius",
                    "Mayotte",
                    "Mexico",
                    "Moldova",
                    "Monaco",
                    "Mongolia",
                    "Montenegro",
                    "Montserrat",
                    "Morocco",
                    "Mozambique",
                    "Myanmar",
                    "Namibia",
                    "Nauru",
                    "Nepal",
                    "Netherlands",
                    "New Caledonia",
                    "New Zealand",
                    "Nicaragua",
                    "Niger",
                    "Nigeria",
                    "Niue",
                    "Norfolk Island",
                    "North Korea",
                    "Northern Mariana Islands",
                    "Norway",
                    "Oman",
                    "Pakistan",
                    "Palau",
                    "Panama",
                    "Papua New Guinea",
                    "Paraguay",
                    "Peru",
                    "Philippines",
                    "Pitcairn Islands",
                    "Poland",
                    "Portugal",
                    "Puerto Rico",
                    "Qatar",
                    "Reunion",
                    "Romania",
                    "Russia",
                    "Rwanda",
                    "Saint Barthelemy",
                    "Saint Helena, Ascension, And Tristan Da Cunha",
                    "Saint Kitts And Nevis",
                    "Saint Lucia",
                    "Saint Martin",
                    "Saint Pierre And Miquelon",
                    "Saint Vincent And The Grenadines",
                    "Samoa",
                    "San Marino",
                    "Sao Tome And Principe",
                    "Saudi Arabia",
                    "Senegal",
                    "Serbia",
                    "Seychelles",
                    "Sierra Leone",
                    "Singapore",
                    "Sint Maarten",
                    "Slovakia",
                    "Slovenia",
                    "Solomon Islands",
                    "Somalia",
                    "South Africa",
                    "South Georgia And South Sandwich Islands",
                    "South Korea",
                    "South Sudan",
                    "Spain",
                    "Sri Lanka",
                    "Sudan",
                    "Suriname",
                    "Svalbard",
                    "Swaziland",
                    "Sweden",
                    "Switzerland",
                    "Syria",
                    "Taiwan",
                    "Tajikistan",
                    "Tanzania",
                    "Thailand",
                    "The Bahamas",
                    "The Gambia",
                    "Timor-Leste",
                    "Togo",
                    "Tonga",
                    "Trinidad And Tobago",
                    "Tunisia",
                    "Turkey",
                    "Turkmenistan",
                    "Turks And Caicos Islands",
                    "Tuvalu",
                    "U.S. Virgin Islands",
                    "Uganda",
                    "Ukraine",
                    "United Arab Emirates",
                    "United Kingdom",
                    "United States",
                    "Uruguay",
                    "Uzbekistan",
                    "Vanuatu",
                    "Vatican City",
                    "Venezuela",
                    "Vietnam",
                    "Wallis And Futuna",
                    "West Bank",
                    "Yemen",
                    "Zambia",
                    "Zimbabwe"
                ],
                "iso2":[
                    "AD",
                    "AE",
                    "AF",
                    "AG",
                    "AI",
                    "AL",
                    "AM",
                    "AO",
                    "AR",
                    "AS",
                    "AT",
                    "AU",
                    "AW",
                    "AZ",
                    "BA",
                    "BB",
                    "BD",
                    "BE",
                    "BF",
                    "BG",
                    "BH",
                    "BI",
                    "BJ",
                    "BL",
                    "BM",
                    "BN",
                    "BO",
                    "BR",
                    "BS",
                    "BT",
                    "BW",
                    "BY",
                    "BZ",
                    "CA",
                    "CD",
                    "CF",
                    "CG",
                    "CH",
                    "CI",
                    "CK",
                    "CL",
                    "CM",
                    "CN",
                    "CO",
                    "CR",
                    "CU",
                    "CV",
                    "CW",
                    "CX",
                    "CY",
                    "CZ",
                    "DE",
                    "DJ",
                    "DK",
                    "DM",
                    "DO",
                    "DZ",
                    "EC",
                    "EE",
                    "EG",
                    "ER",
                    "ES",
                    "ET",
                    "FI",
                    "FJ",
                    "FK",
                    "FM",
                    "FO",
                    "FR",
                    "GA",
                    "GB",
                    "GD",
                    "GE",
                    "GF",
                    "GH",
                    "GI",
                    "GL",
                    "GM",
                    "GN",
                    "GP",
                    "GQ",
                    "GR",
                    "GS",
                    "GT",
                    "GU",
                    "GW",
                    "GY",
                    "HK",
                    "HN",
                    "HR",
                    "HT",
                    "HU",
                    "ID",
                    "IE",
                    "IL",
                    "IM",
                    "IN",
                    "IQ",
                    "IR",
                    "IS",
                    "IT",
                    "JE",
                    "JM",
                    "JO",
                    "JP",
                    "KE",
                    "KG",
                    "KH",
                    "KI",
                    "KM",
                    "KN",
                    "KP",
                    "KR",
                    "KW",
                    "KY",
                    "KZ",
                    "LA",
                    "LB",
                    "LC",
                    "LI",
                    "LK",
                    "LR",
                    "LS",
                    "LT",
                    "LU",
                    "LV",
                    "LY",
                    "MA",
                    "MC",
                    "MD",
                    "ME",
                    "MF",
                    "MG",
                    "MH",
                    "MK",
                    "ML",
                    "MM",
                    "MN",
                    "MO",
                    "MP",
                    "MQ",
                    "MR",
                    "MS",
                    "MT",
                    "MU",
                    "MV",
                    "MW",
                    "MX",
                    "MY",
                    "MZ",
                    "NA",
                    "NC",
                    "NE",
                    "NF",
                    "NG",
                    "NI",
                    "NL",
                    "NO",
                    "NP",
                    "NR",
                    "NU",
                    "NZ",
                    "OM",
                    "PA",
                    "PE",
                    "PF",
                    "PG",
                    "PH",
                    "PK",
                    "PL",
                    "PM",
                    "PN",
                    "PR",
                    "PT",
                    "PW",
                    "PY",
                    "QA",
                    "RE",
                    "RO",
                    "RS",
                    "RU",
                    "RW",
                    "SA",
                    "SB",
                    "SC",
                    "SD",
                    "SE",
                    "SG",
                    "SH",
                    "SI",
                    "SK",
                    "SL",
                    "SM",
                    "SN",
                    "SO",
                    "SR",
                    "SS",
                    "ST",
                    "SV",
                    "SX",
                    "SY",
                    "SZ",
                    "TC",
                    "TD",
                    "TG",
                    "TH",
                    "TJ",
                    "TL",
                    "TM",
                    "TN",
                    "TO",
                    "TR",
                    "TT",
                    "TV",
                    "TW",
                    "TZ",
                    "UA",
                    "UG",
                    "US",
                    "UY",
                    "UZ",
                    "VA",
                    "VC",
                    "VE",
                    "VG",
                    "VI",
                    "VN",
                    "VU",
                    "WF",
                    "WS",
                    "XG",
                    "XK",
                    "XR",
                    "XW",
                    "YE",
                    "YT",
                    "ZA",
                    "ZM",
                    "ZW"
                ],
                "iso3":[
                    "ABW",
                    "AFG",
                    "AGO",
                    "AIA",
                    "ALB",
                    "AND",
                    "ARE",
                    "ARG",
                    "ARM",
                    "ASM",
                    "ATG",
                    "AUS",
                    "AUT",
                    "AZE",
                    "BDI",
                    "BEL",
                    "BEN",
                    "BFA",
                    "BGD",
                    "BGR",
                    "BHR",
                    "BHS",
                    "BIH",
                    "BLM",
                    "BLR",
                    "BLZ",
                    "BMU",
                    "BOL",
                    "BRA",
                    "BRB",
                    "BRN",
                    "BTN",
                    "BWA",
                    "CAF",
                    "CAN",
                    "CHE",
                    "CHL",
                    "CHN",
                    "CIV",
                    "CMR",
                    "COD",
                    "COG",
                    "COK",
                    "COL",
                    "COM",
                    "CPV",
                    "CRI",
                    "CUB",
                    "CUW",
                    "CXR",
                    "CYM",
                    "CYP",
                    "CZE",
                    "DEU",
                    "DJI",
                    "DMA",
                    "DNK",
                    "DOM",
                    "DZA",
                    "ECU",
                    "EGY",
                    "ERI",
                    "ESP",
                    "EST",
                    "ETH",
                    "FIN",
                    "FJI",
                    "FLK",
                    "FRA",
                    "FRO",
                    "FSM",
                    "GAB",
                    "GBR",
                    "GEO",
                    "GHA",
                    "GIB",
                    "GIN",
                    "GLP",
                    "GMB",
                    "GNB",
                    "GNQ",
                    "GRC",
                    "GRD",
                    "GRL",
                    "GTM",
                    "GUF",
                    "GUM",
                    "GUY",
                    "HKG",
                    "HND",
                    "HRV",
                    "HTI",
                    "HUN",
                    "IDN",
                    "IMN",
                    "IND",
                    "IRL",
                    "IRN",
                    "IRQ",
                    "ISL",
                    "ISR",
                    "ITA",
                    "JAM",
                    "JEY",
                    "JOR",
                    "JPN",
                    "KAZ",
                    "KEN",
                    "KGZ",
                    "KHM",
                    "KIR",
                    "KNA",
                    "KOR",
                    "KWT",
                    "LAO",
                    "LBN",
                    "LBR",
                    "LBY",
                    "LCA",
                    "LIE",
                    "LKA",
                    "LSO",
                    "LTU",
                    "LUX",
                    "LVA",
                    "MAC",
                    "MAF",
                    "MAR",
                    "MCO",
                    "MDA",
                    "MDG",
                    "MDV",
                    "MEX",
                    "MHL",
                    "MKD",
                    "MLI",
                    "MLT",
                    "MMR",
                    "MNE",
                    "MNG",
                    "MNP",
                    "MOZ",
                    "MRT",
                    "MSR",
                    "MTQ",
                    "MUS",
                    "MWI",
                    "MYS",
                    "MYT",
                    "NAM",
                    "NCL",
                    "NER",
                    "NFK",
                    "NGA",
                    "NIC",
                    "NIU",
                    "NLD",
                    "NOR",
                    "NPL",
                    "NRU",
                    "NZL",
                    "OMN",
                    "PAK",
                    "PAN",
                    "PCN",
                    "PER",
                    "PHL",
                    "PLW",
                    "PNG",
                    "POL",
                    "PRI",
                    "PRK",
                    "PRT",
                    "PRY",
                    "PYF",
                    "QAT",
                    "REU",
                    "ROU",
                    "RUS",
                    "RWA",
                    "SAU",
                    "SDN",
                    "SEN",
                    "SGP",
                    "SGS",
                    "SHN",
                    "SLB",
                    "SLE",
                    "SLV",
                    "SMR",
                    "SOM",
                    "SPM",
                    "SRB",
                    "SSD",
                    "STP",
                    "SUR",
                    "SVK",
                    "SVN",
                    "SWE",
                    "SWZ",
                    "SXM",
                    "SYC",
                    "SYR",
                    "TCA",
                    "TCD",
                    "TGO",
                    "THA",
                    "TJK",
                    "TKM",
                    "TLS",
                    "TON",
                    "TTO",
                    "TUN",
                    "TUR",
                    "TUV",
                    "TWN",
                    "TZA",
                    "UGA",
                    "UKR",
                    "URY",
                    "USA",
                    "UZB",
                    "VAT",
                    "VCT",
                    "VEN",
                    "VGB",
                    "VIR",
                    "VNM",
                    "VUT",
                    "WLF",
                    "WSM",
                    "XGZ",
                    "XKS",
                    "XSV",
                    "XWB",
                    "YEM",
                    "ZAF",
                    "ZMB",
                    "ZWE"
                ]
            },
            "headers":{
                "access-control-allow-credentials":"true",
                "access-control-allow-headers":"Content-Type , Origin, deviceId, st, at, appversion, osname, apiKey, userId, latitude, longitude, lat, lon, cityId, content-type, checksum, age, apikey, appversion, content-type, createdat, curefituserid, dateofbirth, description, displayimage, emailid, emergencycontactemailid, emergencycontactname, emergencycontactrelation, emergencyphonenumber, familydoctorid, firstname, formattedage, gender, governmentidnumber, governmentidtype, guardianemailid, guardianname, guardianphonenumber, guardianrelation, id, lastname, middlename, name, osname, phonenumber, preferredtherapycentre, recordedage, recordedbirthdate, relationship, residentialaddress, tncsigned, uhid, updatedat, videocallnumber, ssotoken, clientversion, localeCountryCode, timezone, browsername, x-request-id",
                "access-control-allow-methods":"GET,PUT,POST,DELETE",
                "access-control-allow-origin":"*",
                "alt-svc":"h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400",
                "cf-cache-status":"DYNAMIC",
                "cf-ray":"7a29a185295144b9-SIN",
                "content-length":"5655",
                "content-type":"application/json; charset=utf-8",
                "date":"Sat, 04 Mar 2023 11:03:08 GMT",
                "etag":"W/\"1617-zbXiXh2RKyp/UNOHTsYvL48F3Ss\"",
                "nel":"{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}",
                "server":"RapidAPI-1.2.8",
                "x-powered-by":"Express",
                "x-rapidapi-region":"AWS - ap-southeast-1",
                "x-rapidapi-version":"1.2.8",
                "x-request-id":"376df6ae-1041-47f0-b1b0-74155f1709d0"
            },
            "schema":{}
        },
        {
            "name":"Get Countrywise city data",
            "url":"https://mocking-rock.p.rapidapi.com/country/countrywise",
            "description":"Use this API to get city list of country. You need to send country name or ISO3 or ISO2 code \nas query to get it. Which you can get it from other API \"Country Codes\"",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[
                {
                    "name":"iso3",
                    "type":"STRING",
                    "description":"PASS 3 character long ISO3 code. You  can get it from country Codes API ",
                    "default":"IND"
                },
                {
                    "name":"country",
                    "type":"STRING",
                    "description":"PASS  country name . You  can get it from country Codes API ",
                    "default":"IND"
                },
                {
                    "name":"count",
                    "type":"NUMBER",
                    "description":"Pass count value to get maximum number of results to be returned if available ",
                    "default":"2"
                },
                {
                    "name":"iso2",
                    "type":"STRING",
                    "description":"PASS 2 character long ISO2 code. You  can get it from country Codes API ",
                    "default":"IN"
                }
            ],
            "code":"import requests\n\nurl = \"https://mocking-rock.p.rapidapi.com/country/countrywise\"\nquerystring = {\"iso3\": iso3, \"country\": country, \"count\": count, \"iso2\": iso2}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mocking-rock.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":[
                {
                    "city":"Būndi",
                    "country":"India",
                    "iso2":"IN",
                    "iso3":"IND",
                    "capital":"",
                    "admin_name":"Rājasthān",
                    "population":103286,
                    "lat":25.4383,
                    "lng":75.6372,
                    "city_ascii":"Bundi"
                },
                {
                    "city":"Bhagabānpur",
                    "country":"India",
                    "iso2":"IN",
                    "iso3":"IND",
                    "capital":"",
                    "admin_name":"West Bengal",
                    "population":17397,
                    "lat":24.7765,
                    "lng":88.0217,
                    "city_ascii":"Bhagabanpur"
                }
            ],
            "headers":{
                "access-control-allow-credentials":"true",
                "access-control-allow-headers":"Content-Type , Origin, deviceId, st, at, appversion, osname, apiKey, userId, latitude, longitude, lat, lon, cityId, content-type, checksum, age, apikey, appversion, content-type, createdat, curefituserid, dateofbirth, description, displayimage, emailid, emergencycontactemailid, emergencycontactname, emergencycontactrelation, emergencyphonenumber, familydoctorid, firstname, formattedage, gender, governmentidnumber, governmentidtype, guardianemailid, guardianname, guardianphonenumber, guardianrelation, id, lastname, middlename, name, osname, phonenumber, preferredtherapycentre, recordedage, recordedbirthdate, relationship, residentialaddress, tncsigned, uhid, updatedat, videocallnumber, ssotoken, clientversion, localeCountryCode, timezone, browsername, x-request-id",
                "access-control-allow-methods":"GET,PUT,POST,DELETE",
                "access-control-allow-origin":"*",
                "alt-svc":"h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400",
                "cf-cache-status":"DYNAMIC",
                "cf-ray":"7a29ab5d7cc54d57-SIN",
                "content-length":"352",
                "content-type":"application/json; charset=utf-8",
                "date":"Sat, 04 Mar 2023 11:09:51 GMT",
                "etag":"W/\"160-ndM+Mk51lJI8ZKO5+FxSDe8PQ4U\"",
                "nel":"{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}",
                "server":"RapidAPI-1.2.8",
                "x-powered-by":"Express",
                "x-rapidapi-region":"AWS - ap-southeast-1",
                "x-rapidapi-version":"1.2.8",
                "x-request-id":"e1639aa7-b129-4cd2-8e67-90047d14425c"
            },
            "schema":{
                "type":"array",
                "items":{
                    "type":"object",
                    "properties":{
                        "city":{
                            "type":"string"
                        },
                        "country":{
                            "type":"string"
                        },
                        "iso2":{
                            "type":"string"
                        },
                        "iso3":{
                            "type":"string"
                        },
                        "capital":{
                            "type":"string"
                        },
                        "admin_name":{
                            "type":"string"
                        },
                        "population":{
                            "type":"integer"
                        },
                        "lat":{
                            "type":"number"
                        },
                        "lng":{
                            "type":"number"
                        },
                        "city_ascii":{
                            "type":"string"
                        }
                    }
                }
            }
        },
        {
            "name":"City Data",
            "url":"https://mocking-rock.p.rapidapi.com/country/city",
            "description":"Get list of citys.\nCount limit should be less the 1000",
            "method":"GET",
            "required_parameters":[],
            "optional_parameters":[
                {
                    "name":"count",
                    "type":"NUMBER",
                    "description":"If not passed by default 10 will be considered\nMaximum can be 1000 for now.  ",
                    "default":"10"
                }
            ],
            "code":"import requests\n\nurl = \"https://mocking-rock.p.rapidapi.com/country/city\"\nquerystring = {\"count\": count}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mocking-rock.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
            "statuscode":200,
            "body":[
                {
                    "city":"Marshfield",
                    "country":"United States",
                    "iso2":"US",
                    "iso3":"USA",
                    "capital":"",
                    "admin_name":"Wisconsin",
                    "population":18764,
                    "lat":44.6627,
                    "lng":-90.1728,
                    "city_ascii":"Marshfield"
                },
                {
                    "city":"Rosice",
                    "country":"Czechia",
                    "iso2":"CZ",
                    "iso3":"CZE",
                    "capital":"",
                    "admin_name":"Jihomoravský Kraj",
                    "population":6368,
                    "lat":49.1824,
                    "lng":16.3879,
                    "city_ascii":"Rosice"
                },
                {
                    "city":"Leola",
                    "country":"United States",
                    "iso2":"US",
                    "iso3":"USA",
                    "capital":"",
                    "admin_name":"Pennsylvania",
                    "population":7576,
                    "lat":40.0915,
                    "lng":-76.1891,
                    "city_ascii":"Leola"
                },
                {
                    "city":"Cremona",
                    "country":"Italy",
                    "iso2":"IT",
                    "iso3":"ITA",
                    "capital":"minor",
                    "admin_name":"Lombardy",
                    "population":72077,
                    "lat":45.1333,
                    "lng":10.0333,
                    "city_ascii":"Cremona"
                },
                {
                    "city":"Abunã",
                    "country":"Brazil",
                    "iso2":"BR",
                    "iso3":"BRA",
                    "capital":"",
                    "admin_name":"Rondônia",
                    "population":1929,
                    "lat":-9.6954,
                    "lng":-65.3597,
                    "city_ascii":"Abuna"
                },
                {
                    "city":"Lake Wales",
                    "country":"United States",
                    "iso2":"US",
                    "iso3":"USA",
                    "capital":"",
                    "admin_name":"Florida",
                    "population":16759,
                    "lat":27.9195,
                    "lng":-81.5961,
                    "city_ascii":"Lake Wales"
                },
                {
                    "city":"Flekkefjord",
                    "country":"Norway",
                    "iso2":"NO",
                    "iso3":"NOR",
                    "capital":"minor",
                    "admin_name":"Vest-Agder",
                    "population":9027,
                    "lat":58.3272,
                    "lng":6.6667,
                    "city_ascii":"Flekkefjord"
                },
                {
                    "city":"Jalajala",
                    "country":"Philippines",
                    "iso2":"PH",
                    "iso3":"PHL",
                    "capital":"",
                    "admin_name":"Rizal",
                    "population":34017,
                    "lat":14.3557,
                    "lng":121.3233,
                    "city_ascii":"Jalajala"
                },
                {
                    "city":"Yatou",
                    "country":"China",
                    "iso2":"CN",
                    "iso3":"CHN",
                    "capital":"minor",
                    "admin_name":"Shandong",
                    "population":714211,
                    "lat":37.1653,
                    "lng":122.4867,
                    "city_ascii":"Yatou"
                },
                {
                    "city":"IJmuiden",
                    "country":"Netherlands",
                    "iso2":"NL",
                    "iso3":"NLD",
                    "capital":"minor",
                    "admin_name":"Noord-Holland",
                    "population":48320,
                    "lat":52.4586,
                    "lng":4.6194,
                    "city_ascii":"IJmuiden"
                }
            ],
            "headers":{
                "access-control-allow-credentials":"true",
                "access-control-allow-headers":"Content-Type , Origin, deviceId, st, at, appversion, osname, apiKey, userId, latitude, longitude, lat, lon, cityId, content-type, checksum, age, apikey, appversion, content-type, createdat, curefituserid, dateofbirth, description, displayimage, emailid, emergencycontactemailid, emergencycontactname, emergencycontactrelation, emergencyphonenumber, familydoctorid, firstname, formattedage, gender, governmentidnumber, governmentidtype, guardianemailid, guardianname, guardianphonenumber, guardianrelation, id, lastname, middlename, name, osname, phonenumber, preferredtherapycentre, recordedage, recordedbirthdate, relationship, residentialaddress, tncsigned, uhid, updatedat, videocallnumber, ssotoken, clientversion, localeCountryCode, timezone, browsername, x-request-id",
                "access-control-allow-methods":"GET,PUT,POST,DELETE",
                "access-control-allow-origin":"*",
                "alt-svc":"h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400",
                "cf-cache-status":"DYNAMIC",
                "cf-ray":"7a29a8acfbdc40fc-SIN",
                "content-length":"1782",
                "content-type":"application/json; charset=utf-8",
                "date":"Sat, 04 Mar 2023 11:08:01 GMT",
                "etag":"W/\"6f6-ohWq+21NO55ItPEsdIWKtlsAP3I\"",
                "nel":"{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}",
                "server":"RapidAPI-1.2.8",
                "x-powered-by":"Express",
                "x-rapidapi-region":"AWS - ap-southeast-1",
                "x-rapidapi-version":"1.2.8",
                "x-request-id":"5e195da6-2a43-4e19-bfa0-26cb042d7af7"
            },
            "schema":{
                "type":"array",
                "items":{
                    "type":"object",
                    "properties":{
                        "city":{
                            "type":"string"
                        },
                        "country":{
                            "type":"string"
                        },
                        "iso2":{
                            "type":"string"
                        },
                        "iso3":{
                            "type":"string"
                        },
                        "capital":{
                            "type":"string"
                        },
                        "admin_name":{
                            "type":"string"
                        },
                        "population":{
                            "type":"integer"
                        },
                        "lat":{
                            "type":"number"
                        },
                        "lng":{
                            "type":"number"
                        },
                        "city_ascii":{
                            "type":"string"
                        }
                    }
                }
            }
        }
    ]
}