{
    "product_id": "api_f76b1783-5ea0-4b0f-a90f-2755f12a9a23",
    "tool_description": "mongodb object converter API from mongodb object to sql with no problems",
    "home_url": "https://rapidapi.com/tal99333-qUvbMsf8HFS/api/mongo-to-sql/",
    "name": "mongo-to-sql",
    "title": "mongo-to-sql",
    "pricing": "FREEMIUM",
    "tool_name": "mongo-to-sql",
    "score": null,
    "host": "mongo-to-sql.p.rapidapi.com",
    "api_list": [
        {
            "name": "SQL Scheme from mongo document",
            "url": "https://mongo-to-sql.p.rapidapi.com/createSQLScheme",
            "description": "The endpoint should receive mongo db document and will return JSON object of SQL tables and columns structure.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "tableName",
                    "type": "STRING",
                    "description": "",
                    "default": "TableName"
                }
            ],
            "code": "import requests\n\nurl = \"https://mongo-to-sql.p.rapidapi.com/createSQLScheme\"\nquerystring = {\"tableName\": \"TableName\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mongo-to-sql.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://mongo-to-sql.p.rapidapi.com/createSQLScheme\"\nquerystring = {\"tableName\": \"TableName\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mongo-to-sql.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Convet mongo document to SQL",
            "url": "https://mongo-to-sql.p.rapidapi.com/convertObject",
            "description": "The endpoint should receive mongo db document and will return JSON object of SQL tables and columns structure and also the data that should populate the tables.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "tableName",
                    "type": "STRING",
                    "description": "",
                    "default": "TableName"
                }
            ],
            "code": "import requests\n\nurl = \"https://mongo-to-sql.p.rapidapi.com/convertObject\"\nquerystring = {\"tableName\": \"TableName\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mongo-to-sql.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://mongo-to-sql.p.rapidapi.com/convertObject\"\nquerystring = {\"tableName\": \"TableName\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mongo-to-sql.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        }
    ]
}