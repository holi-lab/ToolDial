{
    "product_id": "117",
    "tool_description": "Create and manage device-agnostic content with this CMS API.",
    "home_url": "https://rapidapi.com/stefan.skliarov/api/Elemeno/",
    "name": "Elemeno",
    "title": "Elemeno",
    "pricing": "FREE",
    "tool_name": "Elemeno",
    "score": null,
    "host": "Elemenostefan-skliarovV1.p.rapidapi.com",
    "api_list": [
        {
            "name": "getAllCollectionItems",
            "url": "https://Elemenostefan-skliarovV1.p.rapidapi.com/getAllCollectionItems",
            "description": "Retrieve an array of Items within a specific Collection.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "collectionSlug",
                    "type": "STRING",
                    "description": "Slug of the collection",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Api key obtained from Elemeno",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "sortOrder",
                    "type": "SELECT",
                    "description": "Sort order. Possible values: DESC(default), ASC",
                    "default": ""
                },
                {
                    "name": "timestampUpdatedFilterContent",
                    "type": "NUMBER",
                    "description": "Content of the update timestamp filter",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the results page",
                    "default": ""
                },
                {
                    "name": "titleFilterContent",
                    "type": "STRING",
                    "description": "Content of the title filter",
                    "default": ""
                },
                {
                    "name": "editionFilterContent",
                    "type": "STRING",
                    "description": "Content of the edition filter",
                    "default": ""
                },
                {
                    "name": "timestampPublishedFilterContent",
                    "type": "NUMBER",
                    "description": "Content of the create timestamp filter",
                    "default": ""
                },
                {
                    "name": "hasHardcover",
                    "type": "BOOLEAN",
                    "description": "If item has hardcover",
                    "default": ""
                },
                {
                    "name": "priceFilterContent",
                    "type": "NUMBER",
                    "description": "Content of the price filter",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Sort option. Possible values: $dateUpdated(default), $dateCreated, $datePublished",
                    "default": ""
                },
                {
                    "name": "titleFilterOperation",
                    "type": "SELECT",
                    "description": "This keyword will allow you to filter by your title, regardless if it has been renamed. If was renamed, you can additionally use that name. Possible values: $equals, $not, $contains, $startsWith, $endsWith, $lessThan, $lessThanOrEqual, $greaterThan, $greaterThanOrEqual",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Number of the results at the page",
                    "default": ""
                },
                {
                    "name": "isAvailable",
                    "type": "BOOLEAN",
                    "description": "If item is available",
                    "default": ""
                },
                {
                    "name": "timestampUpdatedFilterOperation",
                    "type": "SELECT",
                    "description": "This keyword will allow you to filter by update timestamp. Possible values: $lessThan, $greaterThan",
                    "default": ""
                },
                {
                    "name": "editionFilterOperation",
                    "type": "SELECT",
                    "description": "This keyword will allow you to filter by edition. Possible values: $equals, $startsWith, $endsWith, $not",
                    "default": ""
                },
                {
                    "name": "timestampPublishedFilterOperation",
                    "type": "SELECT",
                    "description": "This keyword will allow you to filter by create timestamp. Possible values: $lessThan, $greaterThan",
                    "default": ""
                },
                {
                    "name": "priceFilterOperation",
                    "type": "SELECT",
                    "description": "This keyword will allow you to filter by your price. Possible values: $equals, $lessThan, $lessThanOrEqual, $greaterThan, $greaterThanOrEqual",
                    "default": ""
                },
                {
                    "name": "authorsIdList",
                    "type": "STRING",
                    "description": "Ids of authors (can accept string or array)",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Elemenostefan-skliarovV1.p.rapidapi.com/getAllCollectionItems\"\nquerystring = {\"collectionSlug\": \"\", \"sortOrder\": \"\", \"timestampUpdatedFilterContent\": \"\", \"pageNumber\": \"\", \"titleFilterContent\": \"\", \"editionFilterContent\": \"\", \"timestampPublishedFilterContent\": \"\", \"hasHardcover\": \"\", \"priceFilterContent\": \"\", \"sortBy\": \"\", \"titleFilterOperation\": \"\", \"pageSize\": \"\", \"isAvailable\": \"\", \"timestampUpdatedFilterOperation\": \"\", \"apiKey\": \"\", \"editionFilterOperation\": \"\", \"timestampPublishedFilterOperation\": \"\", \"priceFilterOperation\": \"\", \"authorsIdList\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Elemenostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Elemenostefan-skliarovV1.p.rapidapi.com/getAllCollectionItems\"\nquerystring = {\"collectionSlug\": \"\", \"sortOrder\": \"\", \"timestampUpdatedFilterContent\": \"\", \"pageNumber\": \"\", \"titleFilterContent\": \"\", \"editionFilterContent\": \"\", \"timestampPublishedFilterContent\": \"\", \"hasHardcover\": \"\", \"priceFilterContent\": \"\", \"sortBy\": \"\", \"titleFilterOperation\": \"\", \"pageSize\": \"\", \"isAvailable\": \"\", \"timestampUpdatedFilterOperation\": \"\", \"apiKey\": \"\", \"editionFilterOperation\": \"\", \"timestampPublishedFilterOperation\": \"\", \"priceFilterOperation\": \"\", \"authorsIdList\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Elemenostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getAllSingleItems",
            "url": "https://Elemenostefan-skliarovV1.p.rapidapi.com/getAllSingleItems",
            "description": "Retrieve an array of all Single Items.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Api key obtained from Elemeno",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "timestampUpdatedFilterOperation",
                    "type": "SELECT",
                    "description": "This keyword will allow you to filter by update timestamp. Possible values: $lessThan, $greaterThan",
                    "default": ""
                },
                {
                    "name": "editionFilterOperation",
                    "type": "SELECT",
                    "description": "This keyword will allow you to filter by edition. Possible values: $equals, $startsWith, $endsWith, $not",
                    "default": ""
                },
                {
                    "name": "isAvailable",
                    "type": "BOOLEAN",
                    "description": "If item is available",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Number of the results at the page",
                    "default": ""
                },
                {
                    "name": "priceFilterOperation",
                    "type": "SELECT",
                    "description": "This keyword will allow you to filter by your price. Possible values: $equals, $lessThan, $lessThanOrEqual, $greaterThan, $greaterThanOrEqual",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Sort option. Possible values: $dateUpdated(default), $dateCreated",
                    "default": ""
                },
                {
                    "name": "timestampPublishedFilterOperation",
                    "type": "SELECT",
                    "description": "This keyword will allow you to filter by create timestamp. Possible values: $lessThan, $greaterThan",
                    "default": ""
                },
                {
                    "name": "titleFilterOperation",
                    "type": "SELECT",
                    "description": "This keyword will allow you to filter by your title, regardless if it has been renamed. If was renamed, you can additionally use that name. Possible values: $equals, $not, $contains, $startsWith, $endsWith, $lessThan, $lessThanOrEqual, $greaterThan, $greaterThanOrEqual",
                    "default": ""
                },
                {
                    "name": "authorsIdList",
                    "type": "STRING",
                    "description": "Ids of authors (can accept string or array)",
                    "default": ""
                },
                {
                    "name": "timestampUpdatedFilterContent",
                    "type": "NUMBER",
                    "description": "Content of the update timestamp filter",
                    "default": ""
                },
                {
                    "name": "priceFilterContent",
                    "type": "NUMBER",
                    "description": "Content of the price filter",
                    "default": ""
                },
                {
                    "name": "sortOrder",
                    "type": "SELECT",
                    "description": "Sort order. Possible values: DESC(default), ASC",
                    "default": ""
                },
                {
                    "name": "editionFilterContent",
                    "type": "STRING",
                    "description": "Content of the edition filter",
                    "default": ""
                },
                {
                    "name": "hasHardcover",
                    "type": "BOOLEAN",
                    "description": "If item has hardcover",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the results page",
                    "default": ""
                },
                {
                    "name": "titleFilterContent",
                    "type": "STRING",
                    "description": "Content of the title filter",
                    "default": ""
                },
                {
                    "name": "timestampPublishedFilterContent",
                    "type": "NUMBER",
                    "description": "Content of the create timestamp filter",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Elemenostefan-skliarovV1.p.rapidapi.com/getAllSingleItems\"\nquerystring = {\"timestampUpdatedFilterOperation\": \"\", \"editionFilterOperation\": \"\", \"isAvailable\": \"\", \"pageSize\": \"\", \"priceFilterOperation\": \"\", \"sortBy\": \"\", \"timestampPublishedFilterOperation\": \"\", \"titleFilterOperation\": \"\", \"authorsIdList\": \"\", \"timestampUpdatedFilterContent\": \"\", \"priceFilterContent\": \"\", \"apiKey\": \"\", \"sortOrder\": \"\", \"editionFilterContent\": \"\", \"hasHardcover\": \"\", \"pageNumber\": \"\", \"titleFilterContent\": \"\", \"timestampPublishedFilterContent\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Elemenostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Elemenostefan-skliarovV1.p.rapidapi.com/getAllSingleItems\"\nquerystring = {\"timestampUpdatedFilterOperation\": \"\", \"editionFilterOperation\": \"\", \"isAvailable\": \"\", \"pageSize\": \"\", \"priceFilterOperation\": \"\", \"sortBy\": \"\", \"timestampPublishedFilterOperation\": \"\", \"titleFilterOperation\": \"\", \"authorsIdList\": \"\", \"timestampUpdatedFilterContent\": \"\", \"priceFilterContent\": \"\", \"apiKey\": \"\", \"sortOrder\": \"\", \"editionFilterContent\": \"\", \"hasHardcover\": \"\", \"pageNumber\": \"\", \"titleFilterContent\": \"\", \"timestampPublishedFilterContent\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Elemenostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCollectionItemById",
            "url": "https://Elemenostefan-skliarovV1.p.rapidapi.com/getCollectionItemById",
            "description": "Retrieve a Single Collection Item by id.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "collectionSlug",
                    "type": "STRING",
                    "description": "Slug of the collection",
                    "default": ""
                },
                {
                    "name": "itemId",
                    "type": "STRING",
                    "description": "Id of the item",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Api key obtained from Elemeno",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Elemenostefan-skliarovV1.p.rapidapi.com/getCollectionItemById\"\nquerystring = {\"collectionSlug\": \"\", \"itemId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Elemenostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Elemenostefan-skliarovV1.p.rapidapi.com/getCollectionItemById\"\nquerystring = {\"collectionSlug\": \"\", \"itemId\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Elemenostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCollectionItemBySlug",
            "url": "https://Elemenostefan-skliarovV1.p.rapidapi.com/getCollectionItemBySlug",
            "description": "Retrieve a Single Collection Item by slug.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "collectionSlug",
                    "type": "STRING",
                    "description": "Slug of the collection",
                    "default": ""
                },
                {
                    "name": "itemSlug",
                    "type": "STRING",
                    "description": "Slug of the item",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Api key obtained from Elemeno",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Elemenostefan-skliarovV1.p.rapidapi.com/getCollectionItemBySlug\"\nquerystring = {\"collectionSlug\": \"\", \"itemSlug\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Elemenostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Elemenostefan-skliarovV1.p.rapidapi.com/getCollectionItemBySlug\"\nquerystring = {\"collectionSlug\": \"\", \"itemSlug\": \"\", \"apiKey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Elemenostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getCollections",
            "url": "https://Elemenostefan-skliarovV1.p.rapidapi.com/getCollections",
            "description": "Retrieve an array of all Collections.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Api key obtained from Elemeno",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "titleFilterOperation",
                    "type": "SELECT",
                    "description": "This keyword will allow you to filter by your title, regardless if it has been renamed. If was renamed, you can additionally use that name. Possible values: $equals, $not, $contains, $startsWith, $endsWith, $lessThan, $lessThanOrEqual, $greaterThan, $greaterThanOrEqual",
                    "default": ""
                },
                {
                    "name": "timestampUpdatedFilterOperation",
                    "type": "SELECT",
                    "description": "This keyword will allow you to filter by update timestamp. Possible values: $lessThan, $greaterThan",
                    "default": ""
                },
                {
                    "name": "sortBy",
                    "type": "SELECT",
                    "description": "Sort option. Possible values: $dateUpdated(default), $dateCreated",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Number of the results at the page",
                    "default": ""
                },
                {
                    "name": "titleFilterContent",
                    "type": "STRING",
                    "description": "Content of the title filter",
                    "default": ""
                },
                {
                    "name": "timestampPublishedFilterOperation",
                    "type": "SELECT",
                    "description": "This keyword will allow you to filter by create timestamp. Possible values: $lessThan, $greaterThan",
                    "default": ""
                },
                {
                    "name": "sortOrder",
                    "type": "SELECT",
                    "description": "Sort order. Possible values: DESC(default), ASC",
                    "default": ""
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Number of the results page",
                    "default": ""
                },
                {
                    "name": "timestampUpdatedFilterContent",
                    "type": "NUMBER",
                    "description": "Content of the update timestamp filter",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://Elemenostefan-skliarovV1.p.rapidapi.com/getCollections\"\nquerystring = {\"titleFilterOperation\": \"\", \"timestampUpdatedFilterOperation\": \"\", \"sortBy\": \"\", \"pageSize\": \"\", \"apiKey\": \"\", \"titleFilterContent\": \"\", \"timestampPublishedFilterOperation\": \"\", \"sortOrder\": \"\", \"pageNumber\": \"\", \"timestampUpdatedFilterContent\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Elemenostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Elemenostefan-skliarovV1.p.rapidapi.com/getCollections\"\nquerystring = {\"titleFilterOperation\": \"\", \"timestampUpdatedFilterOperation\": \"\", \"sortBy\": \"\", \"pageSize\": \"\", \"apiKey\": \"\", \"titleFilterContent\": \"\", \"timestampPublishedFilterOperation\": \"\", \"sortOrder\": \"\", \"pageNumber\": \"\", \"timestampUpdatedFilterContent\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Elemenostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSingleCollection",
            "url": "https://Elemenostefan-skliarovV1.p.rapidapi.com/getSingleCollection",
            "description": "Retrieve a Single Collection by slug.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Api key obtained from Elemeno",
                    "default": ""
                },
                {
                    "name": "collectionSlug",
                    "type": "STRING",
                    "description": "Slug of the collection",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Elemenostefan-skliarovV1.p.rapidapi.com/getSingleCollection\"\nquerystring = {\"apiKey\": \"\", \"collectionSlug\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Elemenostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Elemenostefan-skliarovV1.p.rapidapi.com/getSingleCollection\"\nquerystring = {\"apiKey\": \"\", \"collectionSlug\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Elemenostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "getSpecificSingleItem",
            "url": "https://Elemenostefan-skliarovV1.p.rapidapi.com/getSpecificSingleItem",
            "description": "Retrieve a Single Item by slug.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "apiKey",
                    "type": "CREDENTIALS",
                    "description": "Api key obtained from Elemeno",
                    "default": ""
                },
                {
                    "name": "itemSlug",
                    "type": "STRING",
                    "description": "Slug of the item",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://Elemenostefan-skliarovV1.p.rapidapi.com/getSpecificSingleItem\"\nquerystring = {\"apiKey\": \"\", \"itemSlug\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Elemenostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://Elemenostefan-skliarovV1.p.rapidapi.com/getSpecificSingleItem\"\nquerystring = {\"apiKey\": \"\", \"itemSlug\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"Elemenostefan-skliarovV1.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}