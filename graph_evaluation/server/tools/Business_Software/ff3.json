{
    "product_id": "api_0f1ff2dd-bf4c-414b-821c-25212225c10e",
    "tool_description": "FF3 KEY",
    "home_url": "https://rapidapi.com/csysfxllc/api/ff31/",
    "name": "FF3",
    "title": "FF3",
    "pricing": "PAID",
    "tool_name": "FF3",
    "score": null,
    "host": "ff31.p.rapidapi.com",
    "api_list": [
        {
            "name": "storeTag",
            "url": "https://ff31.p.rapidapi.com/api/v1/tags",
            "description": "Creates a new tag. The data required can be submitted as a JSON body or as a list of parameters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "tag",
                    "type": "STRING",
                    "description": "The tag",
                    "default": "expensive"
                }
            ],
            "optional_parameters": [
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "The date to which the tag is applicable.",
                    "default": "2018-09-17"
                },
                {
                    "name": "longitude",
                    "type": "NUMBER",
                    "description": "Latitude of the tag's location, if applicable. Can be used to draw a map.",
                    "default": 5.916667
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "",
                    "default": "Tag for expensive stuff"
                },
                {
                    "name": "latitude",
                    "type": "NUMBER",
                    "description": "Latitude of the tag's location, if applicable. Can be used to draw a map.",
                    "default": 51.983333
                },
                {
                    "name": "zoom_level",
                    "type": "NUMBER",
                    "description": "Zoom level for the map, if drawn. This to set the box right. Unfortunately this is a proprietary value because each map provider has different zoom levels.",
                    "default": 6
                }
            ],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/tags\"\nquerystring = {\"date\": \"2018-09-17\", \"longitude\": 5.916667, \"tag\": \"expensive\", \"description\": \"Tag for expensive stuff\", \"latitude\": 51.983333, \"zoom_level\": 6}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/tags\"\nquerystring = {\"date\": \"2018-09-17\", \"longitude\": 5.916667, \"tag\": \"expensive\", \"description\": \"Tag for expensive stuff\", \"latitude\": 51.983333, \"zoom_level\": 6}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "storePiggyBank",
            "url": "https://ff31.p.rapidapi.com/api/v1/piggy_banks",
            "description": "Creates a new piggy bank. The data required can be submitted as a JSON body or as a list of parameters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "account_id",
                    "type": "STRING",
                    "description": "The ID of the asset account this piggy bank is connected to.",
                    "default": 13
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": "New digital camera"
                },
                {
                    "name": "target_amount",
                    "type": "STRING",
                    "description": "",
                    "default": "123.45"
                }
            ],
            "optional_parameters": [
                {
                    "name": "target_date",
                    "type": "STRING",
                    "description": "The date you intend to finish saving money.",
                    "default": "2020-09-17"
                },
                {
                    "name": "object_group_title",
                    "type": "STRING",
                    "description": "The name of the group. NULL if no group.",
                    "default": "Example Group"
                },
                {
                    "name": "current_amount",
                    "type": "STRING",
                    "description": "",
                    "default": "123.45"
                },
                {
                    "name": "object_group_id",
                    "type": "STRING",
                    "description": "The group ID of the group this object is part of. NULL if no group.",
                    "default": "5"
                },
                {
                    "name": "notes",
                    "type": "STRING",
                    "description": "",
                    "default": "Some notes"
                },
                {
                    "name": "order",
                    "type": "NUMBER",
                    "description": "",
                    "default": 5
                },
                {
                    "name": "start_date",
                    "type": "STRING",
                    "description": "The date you started with this piggy bank.",
                    "default": "2018-09-17"
                },
                {
                    "name": "active",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": true
                }
            ],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/piggy_banks\"\nquerystring = {\"target_date\": \"2020-09-17\", \"account_id\": 13, \"object_group_title\": \"Example Group\", \"current_amount\": \"123.45\", \"name\": \"New digital camera\", \"target_amount\": \"123.45\", \"object_group_id\": \"5\", \"notes\": \"Some notes\", \"order\": 5, \"start_date\": \"2018-09-17\", \"active\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/piggy_banks\"\nquerystring = {\"target_date\": \"2020-09-17\", \"account_id\": 13, \"object_group_title\": \"Example Group\", \"current_amount\": \"123.45\", \"name\": \"New digital camera\", \"target_amount\": \"123.45\", \"object_group_id\": \"5\", \"notes\": \"Some notes\", \"order\": 5, \"start_date\": \"2018-09-17\", \"active\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "storeBudgetLimit",
            "url": "https://ff31.p.rapidapi.com/api/v1/budgets/123/limits",
            "description": "Store a new budget limit under this budget.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "end",
                    "type": "STRING",
                    "description": "End date of the budget limit.",
                    "default": "2017-09-17"
                },
                {
                    "name": "budget_id",
                    "type": "STRING",
                    "description": "The budget ID of the associated budget.",
                    "default": "23"
                },
                {
                    "name": "start",
                    "type": "STRING",
                    "description": "Start date of the budget limit.",
                    "default": "2017-09-17"
                },
                {
                    "name": "amount",
                    "type": "STRING",
                    "description": "",
                    "default": "123.45"
                },
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The ID of the budget.",
                    "default": "123"
                }
            ],
            "optional_parameters": [
                {
                    "name": "currency_code",
                    "type": "STRING",
                    "description": "Use either currency_id or currency_code. Defaults to the user's default currency.",
                    "default": "EUR"
                },
                {
                    "name": "period",
                    "type": "STRING",
                    "description": "Period of the budget limit. Only used when auto-generated by auto-budget.",
                    "default": "monthly"
                },
                {
                    "name": "currency_id",
                    "type": "STRING",
                    "description": "Use either currency_id or currency_code. Defaults to the user's default currency.",
                    "default": "5"
                }
            ],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/budgets/123/limits\"\nquerystring = {\"end\": \"2017-09-17\", \"budget_id\": \"23\", \"currency_code\": \"EUR\", \"start\": \"2017-09-17\", \"period\": \"monthly\", \"amount\": \"123.45\", \"currency_id\": \"5\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/budgets/{id}/limits\"\nquerystring = {\"end\": \"2017-09-17\", \"budget_id\": \"23\", \"currency_code\": \"EUR\", \"start\": \"2017-09-17\", \"period\": \"monthly\", \"amount\": \"123.45\", \"currency_id\": \"5\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "storeBudget",
            "url": "https://ff31.p.rapidapi.com/api/v1/budgets",
            "description": "Creates a new budget. The data required can be submitted as a JSON body or as a list of parameters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": "Bills"
                }
            ],
            "optional_parameters": [
                {
                    "name": "auto_budget_currency_code",
                    "type": "STRING",
                    "description": "Use either currency_id or currency_code. Defaults to the user's default currency.",
                    "default": "EUR"
                },
                {
                    "name": "auto_budget_period",
                    "type": "STRING",
                    "description": "Period for the auto budget",
                    "default": "monthly"
                },
                {
                    "name": "auto_budget_amount",
                    "type": "STRING",
                    "description": "",
                    "default": "-1012.12"
                },
                {
                    "name": "auto_budget_currency_id",
                    "type": "STRING",
                    "description": "Use either currency_id or currency_code. Defaults to the user's default currency.",
                    "default": "12"
                },
                {
                    "name": "active",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": false
                },
                {
                    "name": "notes",
                    "type": "STRING",
                    "description": "",
                    "default": "Some notes"
                },
                {
                    "name": "order",
                    "type": "NUMBER",
                    "description": "",
                    "default": 5
                },
                {
                    "name": "auto_budget_type",
                    "type": "STRING",
                    "description": "The type of auto-budget that Firefly III must create.",
                    "default": "reset"
                }
            ],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/budgets\"\nquerystring = {\"auto_budget_currency_code\": \"EUR\", \"auto_budget_period\": \"monthly\", \"auto_budget_amount\": \"-1012.12\", \"auto_budget_currency_id\": \"12\", \"active\": false, \"notes\": \"Some notes\", \"order\": 5, \"auto_budget_type\": \"reset\", \"name\": \"Bills\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/budgets\"\nquerystring = {\"auto_budget_currency_code\": \"EUR\", \"auto_budget_period\": \"monthly\", \"auto_budget_amount\": \"-1012.12\", \"auto_budget_currency_id\": \"12\", \"active\": false, \"notes\": \"Some notes\", \"order\": 5, \"auto_budget_type\": \"reset\", \"name\": \"Bills\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "storeAttachment",
            "url": "https://ff31.p.rapidapi.com/api/v1/attachments",
            "description": "Creates a new attachment. The data required can be submitted as a JSON body or as a list of parameters. You cannot use this endpoint to upload the actual file data (see below). This endpoint only creates the attachment object.\n",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "filename",
                    "type": "STRING",
                    "description": "",
                    "default": "file.pdf"
                },
                {
                    "name": "attachable_id",
                    "type": "STRING",
                    "description": "ID of the model this attachment is linked to.",
                    "default": "134"
                },
                {
                    "name": "attachable_type",
                    "type": "STRING",
                    "description": "The object class to which the attachment must be linked.",
                    "default": "Bill"
                }
            ],
            "optional_parameters": [
                {
                    "name": "notes",
                    "type": "STRING",
                    "description": "",
                    "default": "Some notes"
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "",
                    "default": "Some PDF file"
                }
            ],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/attachments\"\nquerystring = {\"notes\": \"Some notes\", \"filename\": \"file.pdf\", \"attachable_id\": \"134\", \"title\": \"Some PDF file\", \"attachable_type\": \"Bill\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/attachments\"\nquerystring = {\"notes\": \"Some notes\", \"filename\": \"file.pdf\", \"attachable_id\": \"134\", \"title\": \"Some PDF file\", \"attachable_type\": \"Bill\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "storeLinkType",
            "url": "https://ff31.p.rapidapi.com/api/v1/link_types",
            "description": "Creates a new link type. The data required can be submitted as a JSON body or as a list of parameters (in key=value pairs, like a webform).",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "inward",
                    "type": "STRING",
                    "description": "",
                    "default": "is (partially) paid for by"
                },
                {
                    "name": "outward",
                    "type": "STRING",
                    "description": "",
                    "default": "(partially) pays for"
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": "Paid"
                }
            ],
            "optional_parameters": [
                {
                    "name": "editable",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": false
                }
            ],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/link_types\"\nquerystring = {\"inward\": \"is (partially) paid for by\", \"outward\": \"(partially) pays for\", \"name\": \"Paid\", \"editable\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/link_types\"\nquerystring = {\"inward\": \"is (partially) paid for by\", \"outward\": \"(partially) pays for\", \"name\": \"Paid\", \"editable\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "storeTransactionLink",
            "url": "https://ff31.p.rapidapi.com/api/v1/transaction_links",
            "description": "Store a new link between two transactions. For this end point you need the journal_id from a transaction.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "outward_id",
                    "type": "STRING",
                    "description": "The outward transaction transaction_journal_id for the link. This becomes the 'pays for' transaction of the set.",
                    "default": "131"
                },
                {
                    "name": "inward_id",
                    "type": "STRING",
                    "description": "The inward transaction transaction_journal_id for the link. This becomes the 'is paid by' transaction of the set.",
                    "default": "131"
                },
                {
                    "name": "link_type_id",
                    "type": "STRING",
                    "description": "The link type ID to use. You can also use the link_type_name field.",
                    "default": "5"
                }
            ],
            "optional_parameters": [
                {
                    "name": "link_type_name",
                    "type": "STRING",
                    "description": "The link type name to use. You can also use the link_type_id field.",
                    "default": "Is paid by"
                },
                {
                    "name": "notes",
                    "type": "STRING",
                    "description": "Optional. Some notes.",
                    "default": "Some example notes"
                }
            ],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/transaction_links\"\nquerystring = {\"outward_id\": \"131\", \"inward_id\": \"131\", \"link_type_id\": \"5\", \"link_type_name\": \"Is paid by\", \"notes\": \"Some example notes\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/transaction_links\"\nquerystring = {\"outward_id\": \"131\", \"inward_id\": \"131\", \"link_type_id\": \"5\", \"link_type_name\": \"Is paid by\", \"notes\": \"Some example notes\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "uploadAttachment",
            "url": "https://ff31.p.rapidapi.com/api/v1/attachments/123/upload",
            "description": "Use this endpoint to upload (and possible overwrite) the file contents of an attachment. Simply put the entire file in the body as binary data.\n",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The ID of the attachment.",
                    "default": "123"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/attachments/123/upload\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/attachments/{id}/upload\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "storeTransaction",
            "url": "https://ff31.p.rapidapi.com/api/v1/transactions",
            "description": "Creates a new transaction. The data required can be submitted as a JSON body or as a list of parameters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "transactions",
                    "type": "ARRAY",
                    "description": "",
                    "default": "[\n  {\n    \"type\": \"withdrawal\",\n    \"date\": \"2018-09-17T12:46:47+01:00\",\n    \"amount\": \"123.45\",\n    \"description\": \"Vegetables\",\n    \"order\": 0,\n    \"currency_id\": \"12\",\n    \"currency_code\": \"EUR\",\n    \"foreign_amount\": \"123.45\",\n    \"foreign_currency_id\": \"17\",\n    \"foreign_currency_code\": \"USD\",\n    \"budget_id\": \"4\",\n    \"budget_name\": \"Groceries\",\n    \"category_id\": \"43\",\n    \"category_name\": \"Groceries\",\n    \"source_id\": \"2\",\n    \"source_name\": \"Checking account\",\n    \"destination_id\": \"2\",\n    \"destination_name\": \"Buy and Large\",\n    \"reconciled\": true,\n    \"piggy_bank_id\": 0,\n    \"piggy_bank_name\": \"\",\n    \"bill_id\": \"112\",\n    \"bill_name\": \"Monthly rent\",\n    \"tags\": [\n      \"Barbecue preparation\"\n    ],\n    \"notes\": \"Some example notes\",\n    \"internal_reference\": \"\",\n    \"external_id\": \"\",\n    \"external_url\": \"\",\n    \"bunq_payment_id\": \"\",\n    \"sepa_cc\": \"\",\n    \"sepa_ct_op\": \"\",\n    \"sepa_ct_id\": \"\",\n    \"sepa_db\": \"\",\n    \"sepa_country\": \"\",\n    \"sepa_ep\": \"\",\n    \"sepa_ci\": \"\",\n    \"sepa_batch_id\": \"\",\n    \"interest_date\": \"\",\n    \"book_date\": \"\",\n    \"process_date\": \"\",\n    \"due_date\": \"\",\n    \"payment_date\": \"\",\n    \"invoice_date\": \"\"\n  }\n]"
                }
            ],
            "optional_parameters": [
                {
                    "name": "apply_rules",
                    "type": "BOOLEAN",
                    "description": "Whether or not to apply rules when submitting transaction.",
                    "default": false
                },
                {
                    "name": "fire_webhooks",
                    "type": "BOOLEAN",
                    "description": "Whether or not to fire the webhooks that are related to this event.",
                    "default": true
                },
                {
                    "name": "group_title",
                    "type": "STRING",
                    "description": "Title of the transaction if it has been split in more than one piece. Empty otherwise.",
                    "default": "Split transaction title."
                },
                {
                    "name": "error_if_duplicate_hash",
                    "type": "BOOLEAN",
                    "description": "Break if the submitted transaction exists already.",
                    "default": false
                }
            ],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/transactions\"\nquerystring = {\"apply_rules\": false, \"fire_webhooks\": true, \"group_title\": \"Split transaction title.\", \"transactions\": \"[\\n  {\\n    \\\"type\\\": \\\"withdrawal\\\",\\n    \\\"date\\\": \\\"2018-09-17T12:46:47+01:00\\\",\\n    \\\"amount\\\": \\\"123.45\\\",\\n    \\\"description\\\": \\\"Vegetables\\\",\\n    \\\"order\\\": 0,\\n    \\\"currency_id\\\": \\\"12\\\",\\n    \\\"currency_code\\\": \\\"EUR\\\",\\n    \\\"foreign_amount\\\": \\\"123.45\\\",\\n    \\\"foreign_currency_id\\\": \\\"17\\\",\\n    \\\"foreign_currency_code\\\": \\\"USD\\\",\\n    \\\"budget_id\\\": \\\"4\\\",\\n    \\\"budget_name\\\": \\\"Groceries\\\",\\n    \\\"category_id\\\": \\\"43\\\",\\n    \\\"category_name\\\": \\\"Groceries\\\",\\n    \\\"source_id\\\": \\\"2\\\",\\n    \\\"source_name\\\": \\\"Checking account\\\",\\n    \\\"destination_id\\\": \\\"2\\\",\\n    \\\"destination_name\\\": \\\"Buy and Large\\\",\\n    \\\"reconciled\\\": true,\\n    \\\"piggy_bank_id\\\": 0,\\n    \\\"piggy_bank_name\\\": \\\"\\\",\\n    \\\"bill_id\\\": \\\"112\\\",\\n    \\\"bill_name\\\": \\\"Monthly rent\\\",\\n    \\\"tags\\\": [\\n      \\\"Barbecue preparation\\\"\\n    ],\\n    \\\"notes\\\": \\\"Some example notes\\\",\\n    \\\"internal_reference\\\": \\\"\\\",\\n    \\\"external_id\\\": \\\"\\\",\\n    \\\"external_url\\\": \\\"\\\",\\n    \\\"bunq_payment_id\\\": \\\"\\\",\\n    \\\"sepa_cc\\\": \\\"\\\",\\n    \\\"sepa_ct_op\\\": \\\"\\\",\\n    \\\"sepa_ct_id\\\": \\\"\\\",\\n    \\\"sepa_db\\\": \\\"\\\",\\n    \\\"sepa_country\\\": \\\"\\\",\\n    \\\"sepa_ep\\\": \\\"\\\",\\n    \\\"sepa_ci\\\": \\\"\\\",\\n    \\\"sepa_batch_id\\\": \\\"\\\",\\n    \\\"interest_date\\\": \\\"\\\",\\n    \\\"book_date\\\": \\\"\\\",\\n    \\\"process_date\\\": \\\"\\\",\\n    \\\"due_date\\\": \\\"\\\",\\n    \\\"payment_date\\\": \\\"\\\",\\n    \\\"invoice_date\\\": \\\"\\\"\\n  }\\n]\", \"error_if_duplicate_hash\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/transactions\"\nquerystring = {\"apply_rules\": false, \"fire_webhooks\": true, \"group_title\": \"Split transaction title.\", \"transactions\": \"[\\n  {\\n    \\\"type\\\": \\\"withdrawal\\\",\\n    \\\"date\\\": \\\"2018-09-17T12:46:47+01:00\\\",\\n    \\\"amount\\\": \\\"123.45\\\",\\n    \\\"description\\\": \\\"Vegetables\\\",\\n    \\\"order\\\": 0,\\n    \\\"currency_id\\\": \\\"12\\\",\\n    \\\"currency_code\\\": \\\"EUR\\\",\\n    \\\"foreign_amount\\\": \\\"123.45\\\",\\n    \\\"foreign_currency_id\\\": \\\"17\\\",\\n    \\\"foreign_currency_code\\\": \\\"USD\\\",\\n    \\\"budget_id\\\": \\\"4\\\",\\n    \\\"budget_name\\\": \\\"Groceries\\\",\\n    \\\"category_id\\\": \\\"43\\\",\\n    \\\"category_name\\\": \\\"Groceries\\\",\\n    \\\"source_id\\\": \\\"2\\\",\\n    \\\"source_name\\\": \\\"Checking account\\\",\\n    \\\"destination_id\\\": \\\"2\\\",\\n    \\\"destination_name\\\": \\\"Buy and Large\\\",\\n    \\\"reconciled\\\": true,\\n    \\\"piggy_bank_id\\\": 0,\\n    \\\"piggy_bank_name\\\": \\\"\\\",\\n    \\\"bill_id\\\": \\\"112\\\",\\n    \\\"bill_name\\\": \\\"Monthly rent\\\",\\n    \\\"tags\\\": [\\n      \\\"Barbecue preparation\\\"\\n    ],\\n    \\\"notes\\\": \\\"Some example notes\\\",\\n    \\\"internal_reference\\\": \\\"\\\",\\n    \\\"external_id\\\": \\\"\\\",\\n    \\\"external_url\\\": \\\"\\\",\\n    \\\"bunq_payment_id\\\": \\\"\\\",\\n    \\\"sepa_cc\\\": \\\"\\\",\\n    \\\"sepa_ct_op\\\": \\\"\\\",\\n    \\\"sepa_ct_id\\\": \\\"\\\",\\n    \\\"sepa_db\\\": \\\"\\\",\\n    \\\"sepa_country\\\": \\\"\\\",\\n    \\\"sepa_ep\\\": \\\"\\\",\\n    \\\"sepa_ci\\\": \\\"\\\",\\n    \\\"sepa_batch_id\\\": \\\"\\\",\\n    \\\"interest_date\\\": \\\"\\\",\\n    \\\"book_date\\\": \\\"\\\",\\n    \\\"process_date\\\": \\\"\\\",\\n    \\\"due_date\\\": \\\"\\\",\\n    \\\"payment_date\\\": \\\"\\\",\\n    \\\"invoice_date\\\": \\\"\\\"\\n  }\\n]\", \"error_if_duplicate_hash\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "defaultCurrency",
            "url": "https://ff31.p.rapidapi.com/api/v1/currencies/USD/default",
            "description": "Make this currency the default currency for the user. If the currency is not enabled, it will be enabled as well.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "code",
                    "type": "STRING",
                    "description": "The currency code.",
                    "default": "USD"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/currencies/USD/default\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/currencies/{code}/default\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "storeCurrency",
            "url": "https://ff31.p.rapidapi.com/api/v1/currencies",
            "description": "Creates a new currency. The data required can be submitted as a JSON body or as a list of parameters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": "Ankh-Morpork dollar"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": "AM$"
                },
                {
                    "name": "code",
                    "type": "STRING",
                    "description": "",
                    "default": "AMS"
                }
            ],
            "optional_parameters": [
                {
                    "name": "decimal_places",
                    "type": "NUMBER",
                    "description": "Supports 0-16 decimals.",
                    "default": 2
                },
                {
                    "name": "enabled",
                    "type": "BOOLEAN",
                    "description": "Defaults to true",
                    "default": true
                },
                {
                    "name": "default",
                    "type": "BOOLEAN",
                    "description": "Make this currency the default currency.",
                    "default": false
                }
            ],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/currencies\"\nquerystring = {\"decimal_places\": 2, \"enabled\": true, \"name\": \"Ankh-Morpork dollar\", \"symbol\": \"AM$\", \"default\": false, \"code\": \"AMS\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/currencies\"\nquerystring = {\"decimal_places\": 2, \"enabled\": true, \"name\": \"Ankh-Morpork dollar\", \"symbol\": \"AM$\", \"default\": false, \"code\": \"AMS\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "storeRuleGroup",
            "url": "https://ff31.p.rapidapi.com/api/v1/rule_groups",
            "description": "Creates a new rule group. The data required can be submitted as a JSON body or as a list of parameters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "",
                    "default": "Default rule group"
                }
            ],
            "optional_parameters": [
                {
                    "name": "order",
                    "type": "NUMBER",
                    "description": "",
                    "default": 4
                },
                {
                    "name": "active",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": true
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "",
                    "default": "Description of this rule group"
                }
            ],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/rule_groups\"\nquerystring = {\"order\": 4, \"active\": true, \"title\": \"Default rule group\", \"description\": \"Description of this rule group\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/rule_groups\"\nquerystring = {\"order\": 4, \"active\": true, \"title\": \"Default rule group\", \"description\": \"Description of this rule group\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "storeWebhook",
            "url": "https://ff31.p.rapidapi.com/api/v1/webhooks",
            "description": "Creates a new webhook. The data required can be submitted as a JSON body or as a list of parameters. The webhook will be given a random secret.\n",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "trigger",
                    "type": "STRING",
                    "description": "The trigger for the webhook.",
                    "default": "TRIGGER_DESTROY_TRANSACTION"
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "The URL of the webhook. Has to start with `https`.",
                    "default": "https://example.com"
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "A title for the webhook for easy recognition.",
                    "default": "Update magic mirror on new transaction"
                },
                {
                    "name": "response",
                    "type": "STRING",
                    "description": "Indicator for what Firefly III will deliver to the webhook URL.",
                    "default": "RESPONSE_TRANSACTIONS"
                },
                {
                    "name": "delivery",
                    "type": "STRING",
                    "description": "Format of the delivered response.",
                    "default": "DELIVERY_JSON"
                }
            ],
            "optional_parameters": [
                {
                    "name": "active",
                    "type": "BOOLEAN",
                    "description": "Boolean to indicate if the webhook is active",
                    "default": false
                }
            ],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/webhooks\"\nquerystring = {\"trigger\": \"TRIGGER_DESTROY_TRANSACTION\", \"url\": \"https://example.com\", \"title\": \"Update magic mirror on new transaction\", \"response\": \"RESPONSE_TRANSACTIONS\", \"delivery\": \"DELIVERY_JSON\", \"active\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/webhooks\"\nquerystring = {\"trigger\": \"TRIGGER_DESTROY_TRANSACTION\", \"url\": \"https://example.com\", \"title\": \"Update magic mirror on new transaction\", \"response\": \"RESPONSE_TRANSACTIONS\", \"delivery\": \"DELIVERY_JSON\", \"active\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "submitWebook",
            "url": "https://ff31.p.rapidapi.com/api/v1/webhooks/123/submit",
            "description": "This endpoint will submit any open messages for this webhook. This is an asynchronous operation, so you can't see the result. Refresh the webhook message and/or the webhook message attempts to see the results. This may take some time if the webhook receiver is slow.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The webhook ID.",
                    "default": "123"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/webhooks/123/submit\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/webhooks/{id}/submit\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "disableCurrency",
            "url": "https://ff31.p.rapidapi.com/api/v1/currencies/GBP/disable",
            "description": "Disable a currency.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "code",
                    "type": "NUMBER",
                    "description": "The currency code.",
                    "default": "GBP"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/currencies/GBP/disable\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/currencies/{code}/disable\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "enableCurrency",
            "url": "https://ff31.p.rapidapi.com/api/v1/currencies/USD/enable",
            "description": "Enable a single currency.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "code",
                    "type": "STRING",
                    "description": "The currency code.",
                    "default": "USD"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/currencies/USD/enable\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/currencies/{code}/enable\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "storeBill",
            "url": "https://ff31.p.rapidapi.com/api/v1/bills",
            "description": "Creates a new bill. The data required can be submitted as a JSON body or as a list of parameters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "amount_max",
                    "type": "STRING",
                    "description": "",
                    "default": "123.45"
                },
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "",
                    "default": "2018-09-17T12:46:47+01:00"
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": "Rent"
                },
                {
                    "name": "amount_min",
                    "type": "STRING",
                    "description": "",
                    "default": "123.45"
                },
                {
                    "name": "repeat_freq",
                    "type": "STRING",
                    "description": "How often the bill must be paid.",
                    "default": "monthly"
                }
            ],
            "optional_parameters": [
                {
                    "name": "notes",
                    "type": "STRING",
                    "description": "",
                    "default": "Some example notes"
                },
                {
                    "name": "object_group_title",
                    "type": "STRING",
                    "description": "The name of the group. NULL if no group.",
                    "default": "Example Group"
                },
                {
                    "name": "object_group_id",
                    "type": "STRING",
                    "description": "The group ID of the group this object is part of. NULL if no group.",
                    "default": "5"
                },
                {
                    "name": "skip",
                    "type": "NUMBER",
                    "description": "How often the bill must be skipped. 1 means a bi-monthly bill.",
                    "default": 0
                },
                {
                    "name": "end_date",
                    "type": "STRING",
                    "description": "The date after which this bill is no longer valid or applicable",
                    "default": "2018-09-17T12:46:47+01:00"
                },
                {
                    "name": "currency_code",
                    "type": "STRING",
                    "description": "Use either currency_id or currency_code",
                    "default": "EUR"
                },
                {
                    "name": "currency_id",
                    "type": "STRING",
                    "description": "Use either currency_id or currency_code",
                    "default": "5"
                },
                {
                    "name": "extension_date",
                    "type": "STRING",
                    "description": "The date before which the bill must be renewed (or cancelled)",
                    "default": "2018-09-17T12:46:47+01:00"
                },
                {
                    "name": "active",
                    "type": "BOOLEAN",
                    "description": "If the bill is active.",
                    "default": true
                }
            ],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/bills\"\nquerystring = {\"amount_max\": \"123.45\", \"notes\": \"Some example notes\", \"object_group_title\": \"Example Group\", \"object_group_id\": \"5\", \"date\": \"2018-09-17T12:46:47+01:00\", \"skip\": 0, \"end_date\": \"2018-09-17T12:46:47+01:00\", \"currency_code\": \"EUR\", \"name\": \"Rent\", \"currency_id\": \"5\", \"extension_date\": \"2018-09-17T12:46:47+01:00\", \"amount_min\": \"123.45\", \"active\": true, \"repeat_freq\": \"monthly\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/bills\"\nquerystring = {\"amount_max\": \"123.45\", \"notes\": \"Some example notes\", \"object_group_title\": \"Example Group\", \"object_group_id\": \"5\", \"date\": \"2018-09-17T12:46:47+01:00\", \"skip\": 0, \"end_date\": \"2018-09-17T12:46:47+01:00\", \"currency_code\": \"EUR\", \"name\": \"Rent\", \"currency_id\": \"5\", \"extension_date\": \"2018-09-17T12:46:47+01:00\", \"amount_min\": \"123.45\", \"active\": true, \"repeat_freq\": \"monthly\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "bulkUpdateTransactions",
            "url": "https://ff31.p.rapidapi.com/api/v1/data/bulk/transactions",
            "description": "Allows you to update transactions in bulk.\n",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "The JSON query.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/data/bulk/transactions\"\nquerystring = {\"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/data/bulk/transactions\"\nquerystring = {\"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "fireRuleGroup",
            "url": "https://ff31.p.rapidapi.com/api/v1/rule_groups/123/trigger",
            "description": "Fire the rule group on your transactions. Changes will be made by the rules in the rule group! Limit the result if you want to.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The ID of the rule group.",
                    "default": "123"
                }
            ],
            "optional_parameters": [
                {
                    "name": "end",
                    "type": "STRING",
                    "description": "A date formatted YYYY-MM-DD, to limit the transactions the actions will be applied to. Both the start date and the end date must be present.\n",
                    "default": "2018-09-17"
                },
                {
                    "name": "start",
                    "type": "STRING",
                    "description": "A date formatted YYYY-MM-DD, to limit the transactions the actions will be applied to. Both the start date and the end date must be present.\n",
                    "default": "2018-09-17"
                },
                {
                    "name": "accounts[]",
                    "type": "ARRAY",
                    "description": "Limit the triggering of the rule group to these asset accounts or liabilities. Only asset accounts and liabilities will be accepted. Other types will be silently dropped.\n",
                    "default": "[\n  1,\n  2,\n  3\n]"
                }
            ],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/rule_groups/123/trigger\"\nquerystring = {\"end\": \"2018-09-17\", \"start\": \"2018-09-17\", \"accounts[]\": \"[\\n  1,\\n  2,\\n  3\\n]\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/rule_groups/{id}/trigger\"\nquerystring = {\"end\": \"2018-09-17\", \"start\": \"2018-09-17\", \"accounts[]\": \"[\\n  1,\\n  2,\\n  3\\n]\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "storeAccount",
            "url": "https://ff31.p.rapidapi.com/api/v1/accounts",
            "description": "Creates a new account. The data required can be submitted as a JSON body or as a list of parameters (in key=value pairs, like a webform).",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": "My checking account"
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "Can only be one one these account types. import, initial-balance and reconciliation cannot be set manually.",
                    "default": "asset"
                }
            ],
            "optional_parameters": [
                {
                    "name": "notes",
                    "type": "STRING",
                    "description": "",
                    "default": "Some example notes"
                },
                {
                    "name": "currency_id",
                    "type": "STRING",
                    "description": "Use either currency_id or currency_code. Defaults to the user's default currency.",
                    "default": "12"
                },
                {
                    "name": "opening_balance_date",
                    "type": "STRING",
                    "description": "Represents the date of the opening balance.",
                    "default": "2018-09-17"
                },
                {
                    "name": "interest",
                    "type": "STRING",
                    "description": "Mandatory when type is liability. Interest percentage.",
                    "default": "5.3"
                },
                {
                    "name": "account_role",
                    "type": "STRING",
                    "description": "Is only mandatory when the type is asset.",
                    "default": "defaultAsset"
                },
                {
                    "name": "iban",
                    "type": "STRING",
                    "description": "",
                    "default": "GB98MIDL07009312345678"
                },
                {
                    "name": "opening_balance",
                    "type": "STRING",
                    "description": "Represents the opening balance, the initial amount this account holds.",
                    "default": "-1012.12"
                },
                {
                    "name": "interest_period",
                    "type": "STRING",
                    "description": "Mandatory when type is liability. Period over which the interest is calculated.",
                    "default": "monthly"
                },
                {
                    "name": "liability_direction",
                    "type": "STRING",
                    "description": "'credit' indicates somebody owes you the liability. 'debit' Indicates you owe this debt yourself. Works only for liabiltiies.",
                    "default": "credit"
                },
                {
                    "name": "liability_type",
                    "type": "STRING",
                    "description": "Mandatory when type is liability. Specifies the exact type.",
                    "default": "loan"
                },
                {
                    "name": "include_net_worth",
                    "type": "BOOLEAN",
                    "description": "If omitted, defaults to true.",
                    "default": true
                },
                {
                    "name": "account_number",
                    "type": "STRING",
                    "description": "",
                    "default": "7009312345678"
                },
                {
                    "name": "bic",
                    "type": "STRING",
                    "description": "",
                    "default": "BOFAUS3N"
                },
                {
                    "name": "latitude",
                    "type": "NUMBER",
                    "description": "Latitude of the accounts's location, if applicable. Can be used to draw a map.",
                    "default": 51.983333
                },
                {
                    "name": "order",
                    "type": "NUMBER",
                    "description": "Order of the account",
                    "default": 1
                },
                {
                    "name": "credit_card_type",
                    "type": "STRING",
                    "description": "Mandatory when the account_role is ccAsset. Can only be monthlyFull or null.",
                    "default": "monthlyFull"
                },
                {
                    "name": "monthly_payment_date",
                    "type": "STRING",
                    "description": "Mandatory when the account_role is ccAsset. Moment at which CC payment installments are asked for by the bank.",
                    "default": "2018-09-17"
                },
                {
                    "name": "zoom_level",
                    "type": "NUMBER",
                    "description": "Zoom level for the map, if drawn. This to set the box right. Unfortunately this is a proprietary value because each map provider has different zoom levels.",
                    "default": 6
                },
                {
                    "name": "currency_code",
                    "type": "STRING",
                    "description": "Use either currency_id or currency_code. Defaults to the user's default currency.",
                    "default": "EUR"
                },
                {
                    "name": "virtual_balance",
                    "type": "STRING",
                    "description": "",
                    "default": "123.45"
                },
                {
                    "name": "longitude",
                    "type": "NUMBER",
                    "description": "Latitude of the accounts's location, if applicable. Can be used to draw a map.",
                    "default": 5.916667
                },
                {
                    "name": "active",
                    "type": "BOOLEAN",
                    "description": "If omitted, defaults to true.",
                    "default": false
                }
            ],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/accounts\"\nquerystring = {\"notes\": \"Some example notes\", \"currency_id\": \"12\", \"opening_balance_date\": \"2018-09-17\", \"interest\": \"5.3\", \"account_role\": \"defaultAsset\", \"name\": \"My checking account\", \"iban\": \"GB98MIDL07009312345678\", \"opening_balance\": \"-1012.12\", \"interest_period\": \"monthly\", \"liability_direction\": \"credit\", \"liability_type\": \"loan\", \"include_net_worth\": true, \"account_number\": \"7009312345678\", \"bic\": \"BOFAUS3N\", \"latitude\": 51.983333, \"order\": 1, \"credit_card_type\": \"monthlyFull\", \"monthly_payment_date\": \"2018-09-17\", \"zoom_level\": 6, \"currency_code\": \"EUR\", \"virtual_balance\": \"123.45\", \"type\": \"asset\", \"longitude\": 5.916667, \"active\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/accounts\"\nquerystring = {\"notes\": \"Some example notes\", \"currency_id\": \"12\", \"opening_balance_date\": \"2018-09-17\", \"interest\": \"5.3\", \"account_role\": \"defaultAsset\", \"name\": \"My checking account\", \"iban\": \"GB98MIDL07009312345678\", \"opening_balance\": \"-1012.12\", \"interest_period\": \"monthly\", \"liability_direction\": \"credit\", \"liability_type\": \"loan\", \"include_net_worth\": true, \"account_number\": \"7009312345678\", \"bic\": \"BOFAUS3N\", \"latitude\": 51.983333, \"order\": 1, \"credit_card_type\": \"monthlyFull\", \"monthly_payment_date\": \"2018-09-17\", \"zoom_level\": 6, \"currency_code\": \"EUR\", \"virtual_balance\": \"123.45\", \"type\": \"asset\", \"longitude\": 5.916667, \"active\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "storeAvailableBudget",
            "url": "https://ff31.p.rapidapi.com/api/v1/available_budgets",
            "description": "Creates a new available budget for a specified period. The data required can be submitted as a JSON body or as a list of parameters.\n",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "amount",
                    "type": "STRING",
                    "description": "",
                    "default": "123.45"
                },
                {
                    "name": "start",
                    "type": "STRING",
                    "description": "Start date of the available budget.",
                    "default": "2017-09-17"
                },
                {
                    "name": "end",
                    "type": "STRING",
                    "description": "End date of the available budget.",
                    "default": "2017-09-17"
                }
            ],
            "optional_parameters": [
                {
                    "name": "currency_id",
                    "type": "STRING",
                    "description": "Use either currency_id or currency_code.",
                    "default": "5"
                },
                {
                    "name": "currency_code",
                    "type": "STRING",
                    "description": "Use either currency_id or currency_code.",
                    "default": "EUR"
                }
            ],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/available_budgets\"\nquerystring = {\"currency_id\": \"5\", \"amount\": \"123.45\", \"start\": \"2017-09-17\", \"currency_code\": \"EUR\", \"end\": \"2017-09-17\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/available_budgets\"\nquerystring = {\"currency_id\": \"5\", \"amount\": \"123.45\", \"start\": \"2017-09-17\", \"currency_code\": \"EUR\", \"end\": \"2017-09-17\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "storeUser",
            "url": "https://ff31.p.rapidapi.com/api/v1/users",
            "description": "Creates a new user. The data required can be submitted as a JSON body or as a list of parameters. The user will be given a random password, which they can reset using the \"forgot password\" function.\n",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "The new users email address.",
                    "default": "james@firefly-iii.org"
                }
            ],
            "optional_parameters": [
                {
                    "name": "blocked",
                    "type": "BOOLEAN",
                    "description": "Boolean to indicate if the user is blocked.",
                    "default": false
                },
                {
                    "name": "role",
                    "type": "STRING",
                    "description": "Role for the user. Can be empty or omitted.",
                    "default": "owner"
                },
                {
                    "name": "created_at",
                    "type": "STRING",
                    "description": "",
                    "default": "2018-09-17T12:46:47+01:00"
                },
                {
                    "name": "blocked_code",
                    "type": "STRING",
                    "description": "If you say the user must be blocked, this will be the reason code.",
                    "default": "email_changed"
                },
                {
                    "name": "updated_at",
                    "type": "STRING",
                    "description": "",
                    "default": "2018-09-17T12:46:47+01:00"
                }
            ],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/users\"\nquerystring = {\"blocked\": false, \"role\": \"owner\", \"email\": \"james@firefly-iii.org\", \"created_at\": \"2018-09-17T12:46:47+01:00\", \"blocked_code\": \"email_changed\", \"updated_at\": \"2018-09-17T12:46:47+01:00\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/users\"\nquerystring = {\"blocked\": false, \"role\": \"owner\", \"email\": \"james@firefly-iii.org\", \"created_at\": \"2018-09-17T12:46:47+01:00\", \"blocked_code\": \"email_changed\", \"updated_at\": \"2018-09-17T12:46:47+01:00\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "storePreference",
            "url": "https://ff31.p.rapidapi.com/api/v1/preferences",
            "description": "This endpoint creates a new preference. The name and data are free-format, and entirely up to you. If the preference is not used in Firefly III itself it may not be configurable through the user interface, but you can use this endpoint to persist custom data for your own app.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "data",
                    "type": "OBJECT",
                    "description": "",
                    "default": "true"
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": "currencyPreference"
                }
            ],
            "optional_parameters": [
                {
                    "name": "created_at",
                    "type": "STRING",
                    "description": "",
                    "default": "2018-09-17T12:46:47+01:00"
                },
                {
                    "name": "updated_at",
                    "type": "STRING",
                    "description": "",
                    "default": "2018-09-17T12:46:47+01:00"
                }
            ],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/preferences\"\nquerystring = {\"created_at\": \"2018-09-17T12:46:47+01:00\", \"data\": \"true\", \"updated_at\": \"2018-09-17T12:46:47+01:00\", \"name\": \"currencyPreference\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/preferences\"\nquerystring = {\"created_at\": \"2018-09-17T12:46:47+01:00\", \"data\": \"true\", \"updated_at\": \"2018-09-17T12:46:47+01:00\", \"name\": \"currencyPreference\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "storeRecurrence",
            "url": "https://ff31.p.rapidapi.com/api/v1/recurrences",
            "description": "Creates a new recurring transaction. The data required can be submitted as a JSON body or as a list of parameters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "first_date",
                    "type": "STRING",
                    "description": "First time the recurring transaction will fire. Must be after today.",
                    "default": "2017-09-17"
                },
                {
                    "name": "repetitions",
                    "type": "ARRAY",
                    "description": "",
                    "default": "[\n  {\n    \"type\": \"weekly\",\n    \"moment\": \"3\",\n    \"skip\": 0,\n    \"weekend\": 1\n  }\n]"
                },
                {
                    "name": "transactions",
                    "type": "ARRAY",
                    "description": "",
                    "default": "[\n  {\n    \"description\": \"Rent for the current month\",\n    \"amount\": \"123.45\",\n    \"foreign_amount\": \"123.45\",\n    \"currency_id\": \"3\",\n    \"currency_code\": \"EUR\",\n    \"foreign_currency_id\": \"17\",\n    \"foreign_currency_code\": \"GBP\",\n    \"budget_id\": \"4\",\n    \"category_id\": \"211\",\n    \"source_id\": \"913\",\n    \"destination_id\": \"258\",\n    \"tags\": [\n      \"Barbecue preparation\"\n    ],\n    \"piggy_bank_id\": \"123\"\n  }\n]"
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "",
                    "default": "Rent"
                },
                {
                    "name": "repeat_until",
                    "type": "STRING",
                    "description": "Date until the recurring transaction can fire. Use either this field or repetitions.",
                    "default": "2018-09-17"
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "",
                    "default": "withdrawal"
                }
            ],
            "optional_parameters": [
                {
                    "name": "nr_of_repetitions",
                    "type": "NUMBER",
                    "description": "Max number of created transactions. Use either this field or repeat_until.",
                    "default": 5
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "Not to be confused with the description of the actual transaction(s) being created.",
                    "default": "Recurring transaction for the monthly rent"
                },
                {
                    "name": "notes",
                    "type": "STRING",
                    "description": "",
                    "default": "Some notes"
                },
                {
                    "name": "active",
                    "type": "BOOLEAN",
                    "description": "If the recurrence is even active.",
                    "default": true
                },
                {
                    "name": "apply_rules",
                    "type": "BOOLEAN",
                    "description": "Whether or not to fire the rules after the creation of a transaction.",
                    "default": true
                }
            ],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/recurrences\"\nquerystring = {\"first_date\": \"2017-09-17\", \"repetitions\": \"[\\n  {\\n    \\\"type\\\": \\\"weekly\\\",\\n    \\\"moment\\\": \\\"3\\\",\\n    \\\"skip\\\": 0,\\n    \\\"weekend\\\": 1\\n  }\\n]\", \"nr_of_repetitions\": 5, \"transactions\": \"[\\n  {\\n    \\\"description\\\": \\\"Rent for the current month\\\",\\n    \\\"amount\\\": \\\"123.45\\\",\\n    \\\"foreign_amount\\\": \\\"123.45\\\",\\n    \\\"currency_id\\\": \\\"3\\\",\\n    \\\"currency_code\\\": \\\"EUR\\\",\\n    \\\"foreign_currency_id\\\": \\\"17\\\",\\n    \\\"foreign_currency_code\\\": \\\"GBP\\\",\\n    \\\"budget_id\\\": \\\"4\\\",\\n    \\\"category_id\\\": \\\"211\\\",\\n    \\\"source_id\\\": \\\"913\\\",\\n    \\\"destination_id\\\": \\\"258\\\",\\n    \\\"tags\\\": [\\n      \\\"Barbecue preparation\\\"\\n    ],\\n    \\\"piggy_bank_id\\\": \\\"123\\\"\\n  }\\n]\", \"description\": \"Recurring transaction for the monthly rent\", \"title\": \"Rent\", \"notes\": \"Some notes\", \"repeat_until\": \"2018-09-17\", \"active\": true, \"apply_rules\": true, \"type\": \"withdrawal\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/recurrences\"\nquerystring = {\"first_date\": \"2017-09-17\", \"repetitions\": \"[\\n  {\\n    \\\"type\\\": \\\"weekly\\\",\\n    \\\"moment\\\": \\\"3\\\",\\n    \\\"skip\\\": 0,\\n    \\\"weekend\\\": 1\\n  }\\n]\", \"nr_of_repetitions\": 5, \"transactions\": \"[\\n  {\\n    \\\"description\\\": \\\"Rent for the current month\\\",\\n    \\\"amount\\\": \\\"123.45\\\",\\n    \\\"foreign_amount\\\": \\\"123.45\\\",\\n    \\\"currency_id\\\": \\\"3\\\",\\n    \\\"currency_code\\\": \\\"EUR\\\",\\n    \\\"foreign_currency_id\\\": \\\"17\\\",\\n    \\\"foreign_currency_code\\\": \\\"GBP\\\",\\n    \\\"budget_id\\\": \\\"4\\\",\\n    \\\"category_id\\\": \\\"211\\\",\\n    \\\"source_id\\\": \\\"913\\\",\\n    \\\"destination_id\\\": \\\"258\\\",\\n    \\\"tags\\\": [\\n      \\\"Barbecue preparation\\\"\\n    ],\\n    \\\"piggy_bank_id\\\": \\\"123\\\"\\n  }\\n]\", \"description\": \"Recurring transaction for the monthly rent\", \"title\": \"Rent\", \"notes\": \"Some notes\", \"repeat_until\": \"2018-09-17\", \"active\": true, \"apply_rules\": true, \"type\": \"withdrawal\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "storeCategory",
            "url": "https://ff31.p.rapidapi.com/api/v1/categories",
            "description": "Creates a new category. The data required can be submitted as a JSON body or as a list of parameters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": "Lunch"
                }
            ],
            "optional_parameters": [
                {
                    "name": "earned",
                    "type": "ARRAY",
                    "description": "",
                    "default": "[\n  {\n    \"currency_id\": \"5\",\n    \"currency_code\": \"USD\",\n    \"currency_symbol\": \"$\",\n    \"currency_decimal_places\": 2,\n    \"sum\": \"123.45\"\n  }\n]"
                },
                {
                    "name": "created_at",
                    "type": "STRING",
                    "description": "",
                    "default": "2018-09-17T12:46:47+01:00"
                },
                {
                    "name": "notes",
                    "type": "STRING",
                    "description": "",
                    "default": "Some example notes"
                },
                {
                    "name": "spent",
                    "type": "ARRAY",
                    "description": "",
                    "default": "[\n  {\n    \"currency_id\": \"5\",\n    \"currency_code\": \"USD\",\n    \"currency_symbol\": \"$\",\n    \"currency_decimal_places\": 2,\n    \"sum\": \"-12423.45\"\n  }\n]"
                },
                {
                    "name": "updated_at",
                    "type": "STRING",
                    "description": "",
                    "default": "2018-09-17T12:46:47+01:00"
                }
            ],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/categories\"\nquerystring = {\"earned\": \"[\\n  {\\n    \\\"currency_id\\\": \\\"5\\\",\\n    \\\"currency_code\\\": \\\"USD\\\",\\n    \\\"currency_symbol\\\": \\\"$\\\",\\n    \\\"currency_decimal_places\\\": 2,\\n    \\\"sum\\\": \\\"123.45\\\"\\n  }\\n]\", \"created_at\": \"2018-09-17T12:46:47+01:00\", \"notes\": \"Some example notes\", \"name\": \"Lunch\", \"spent\": \"[\\n  {\\n    \\\"currency_id\\\": \\\"5\\\",\\n    \\\"currency_code\\\": \\\"USD\\\",\\n    \\\"currency_symbol\\\": \\\"$\\\",\\n    \\\"currency_decimal_places\\\": 2,\\n    \\\"sum\\\": \\\"-12423.45\\\"\\n  }\\n]\", \"updated_at\": \"2018-09-17T12:46:47+01:00\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/categories\"\nquerystring = {\"earned\": \"[\\n  {\\n    \\\"currency_id\\\": \\\"5\\\",\\n    \\\"currency_code\\\": \\\"USD\\\",\\n    \\\"currency_symbol\\\": \\\"$\\\",\\n    \\\"currency_decimal_places\\\": 2,\\n    \\\"sum\\\": \\\"123.45\\\"\\n  }\\n]\", \"created_at\": \"2018-09-17T12:46:47+01:00\", \"notes\": \"Some example notes\", \"name\": \"Lunch\", \"spent\": \"[\\n  {\\n    \\\"currency_id\\\": \\\"5\\\",\\n    \\\"currency_code\\\": \\\"USD\\\",\\n    \\\"currency_symbol\\\": \\\"$\\\",\\n    \\\"currency_decimal_places\\\": 2,\\n    \\\"sum\\\": \\\"-12423.45\\\"\\n  }\\n]\", \"updated_at\": \"2018-09-17T12:46:47+01:00\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "storeRule",
            "url": "https://ff31.p.rapidapi.com/api/v1/rules",
            "description": "Creates a new rule. The data required can be submitted as a JSON body or as a list of parameters.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "trigger",
                    "type": "STRING",
                    "description": "Which action is necessary for the rule to fire? Use either store-journal or update-journal.",
                    "default": "store-journal"
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "",
                    "default": "First rule title."
                },
                {
                    "name": "rule_group_id",
                    "type": "STRING",
                    "description": "ID of the rule group under which the rule must be stored. Either this field or rule_group_title is mandatory.",
                    "default": "81"
                },
                {
                    "name": "actions",
                    "type": "ARRAY",
                    "description": "",
                    "default": "[\n  {\n    \"type\": \"set_category\",\n    \"value\": \"Daily groceries\",\n    \"order\": 5,\n    \"active\": true,\n    \"stop_processing\": false\n  }\n]"
                },
                {
                    "name": "triggers",
                    "type": "ARRAY",
                    "description": "",
                    "default": "[\n  {\n    \"type\": \"user_action\",\n    \"value\": \"tag1\",\n    \"order\": 5,\n    \"active\": true,\n    \"stop_processing\": false\n  }\n]"
                }
            ],
            "optional_parameters": [
                {
                    "name": "active",
                    "type": "BOOLEAN",
                    "description": "Whether or not the rule is even active. Default is true.",
                    "default": true
                },
                {
                    "name": "stop_processing",
                    "type": "BOOLEAN",
                    "description": "If this value is true and the rule is triggered, other rules  after this one in the group will be skipped. Default value is false.",
                    "default": false
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "",
                    "default": "First rule description"
                },
                {
                    "name": "strict",
                    "type": "BOOLEAN",
                    "description": "If the rule is set to be strict, ALL triggers must hit in order for the rule to fire. Otherwise, just one is enough. Default value is true.",
                    "default": true
                },
                {
                    "name": "rule_group_title",
                    "type": "STRING",
                    "description": "Title of the rule group under which the rule must be stored. Either this field or rule_group_id is mandatory.",
                    "default": "New rule group"
                },
                {
                    "name": "order",
                    "type": "NUMBER",
                    "description": "",
                    "default": 5
                }
            ],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/rules\"\nquerystring = {\"active\": true, \"stop_processing\": false, \"description\": \"First rule description\", \"trigger\": \"store-journal\", \"strict\": true, \"title\": \"First rule title.\", \"rule_group_id\": \"81\", \"actions\": \"[\\n  {\\n    \\\"type\\\": \\\"set_category\\\",\\n    \\\"value\\\": \\\"Daily groceries\\\",\\n    \\\"order\\\": 5,\\n    \\\"active\\\": true,\\n    \\\"stop_processing\\\": false\\n  }\\n]\", \"rule_group_title\": \"New rule group\", \"order\": 5, \"triggers\": \"[\\n  {\\n    \\\"type\\\": \\\"user_action\\\",\\n    \\\"value\\\": \\\"tag1\\\",\\n    \\\"order\\\": 5,\\n    \\\"active\\\": true,\\n    \\\"stop_processing\\\": false\\n  }\\n]\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/rules\"\nquerystring = {\"active\": true, \"stop_processing\": false, \"description\": \"First rule description\", \"trigger\": \"store-journal\", \"strict\": true, \"title\": \"First rule title.\", \"rule_group_id\": \"81\", \"actions\": \"[\\n  {\\n    \\\"type\\\": \\\"set_category\\\",\\n    \\\"value\\\": \\\"Daily groceries\\\",\\n    \\\"order\\\": 5,\\n    \\\"active\\\": true,\\n    \\\"stop_processing\\\": false\\n  }\\n]\", \"rule_group_title\": \"New rule group\", \"order\": 5, \"triggers\": \"[\\n  {\\n    \\\"type\\\": \\\"user_action\\\",\\n    \\\"value\\\": \\\"tag1\\\",\\n    \\\"order\\\": 5,\\n    \\\"active\\\": true,\\n    \\\"stop_processing\\\": false\\n  }\\n]\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "fireRule",
            "url": "https://ff31.p.rapidapi.com/api/v1/rules/123/trigger",
            "description": "Fire the rule group on your transactions. Changes will be made by the rules in the group! Limit the result if you want to.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The ID of the rule.",
                    "default": "123"
                }
            ],
            "optional_parameters": [
                {
                    "name": "start",
                    "type": "STRING",
                    "description": "A date formatted YYYY-MM-DD, to limit the transactions the actions will be applied to. If the start date is not present, it will be set to one year ago. If you use this field, both the start date and the end date must be present.\n",
                    "default": "2018-09-17"
                },
                {
                    "name": "end",
                    "type": "STRING",
                    "description": "A date formatted YYYY-MM-DD, to limit the transactions the actions will be applied to. If the end date is not present, it will be set to today. If you use this field, both the start date and the end date must be present.\n",
                    "default": "2018-09-17"
                },
                {
                    "name": "accounts[]",
                    "type": "ARRAY",
                    "description": "Limit the triggering of the rule to these asset accounts or liabilities. Only asset accounts and liabilities will be accepted. Other types will be silently dropped.\n",
                    "default": "[\n  1,\n  2,\n  3\n]"
                }
            ],
            "code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/rules/123/trigger\"\nquerystring = {\"start\": \"2018-09-17\", \"end\": \"2018-09-17\", \"accounts[]\": \"[\\n  1,\\n  2,\\n  3\\n]\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://ff31.p.rapidapi.com/api/v1/rules/{id}/trigger\"\nquerystring = {\"start\": \"2018-09-17\", \"end\": \"2018-09-17\", \"accounts[]\": \"[\\n  1,\\n  2,\\n  3\\n]\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ff31.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        }
    ]
}