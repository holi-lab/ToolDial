{
    "product_id": "api_59ac33e2-3f19-4ebf-8213-97eeb8e6dc48",
    "tool_description": "Our free BIN checker can help you spot fraudulent credit card transactions. Start verifying, validating, and checking all information of credit/debit cards just using BIN numbers. Our database has +365,460 unique BINs.",
    "home_url": "https://rapidapi.com/trade-expanding-llc-trade-expanding-llc-default/api/bin-ip-checker/",
    "name": "BIN/IP Checker",
    "title": null,
    "pricing": "FREEMIUM",
    "tool_name": "BIN/IP Checker",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 209,
        "avgSuccessRate": 100,
        "popularityScore": 9.9,
        "__typename": "Score"
    },
    "host": "bin-ip-checker.p.rapidapi.com",
    "api_list": [
        {
            "name": "BIN Checker",
            "url": "https://bin-ip-checker.p.rapidapi.com/",
            "description": "This API is designed primarily for online store owners who want to perform a deep checking of their credit/debit card transactions, it gives a clear vision of how risky the transactions are.\nHowever, anyone can use this API on any platform as he wants and according to his plan limits\n\nHow this API works?\nThe user will send the credit/debit card (Bank Identification Number) or IIN (Issuer Identification Number) to get the full details as possible.\n\n**How to use this API?**\nYou have to provide a BIN (Bank Identification Number) - the first 6 digits of a credit/debit card, to receive the full details of this BIN/IIN in JSON format.\n\n**Can I use it for free or test it?**\nThere are different plans that suit everyone including a free plan for a small number of requests per day, but its rate is limited to prevent abuse of the service.\n\n**Can I use it as \"Pay per Request\"?**\nSure, you can use it and pay only when you use it. The credit can't be expired.\n\n**How can I integrate it with my project?**\nRapidAPI provides a wide range of integration methods for almost all programming languages. You can use these codes to integrate with your project as you need.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "bin",
                    "type": "NUMBER",
                    "description": "",
                    "default": "448590"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://bin-ip-checker.p.rapidapi.com/\"\nquerystring = {\"bin\": \"448590\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bin-ip-checker.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://bin-ip-checker.p.rapidapi.com/\"\nquerystring = {\"bin\": \"448590\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bin-ip-checker.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "BIN/IP Checker",
            "url": "https://bin-ip-checker.p.rapidapi.com/",
            "description": "This API is designed primarily for online store owners who want to perform a deep checking of their credit/debit card transactions, it gives a clear vision on how risky the transactions are.\nHowever, any one can use this API on any platform as he wants and according to his plan limits\n\nHow this API works?\nThe user will send the credit/debit card (Bank Identification Number) or IIN (Issuer Identification Number) to get the full details as possible. Also, if the IP address is given with the request, it will returns the IP address details and checks the BIN information against the IP information and gives a risk score for the transaction.\nIt's very useful for online merchants to help them take best decision.\n\n**How to use this API?**\nIf the user sends the BIN number only, it will return the full details of the BIN.\nIf the user sends the BIN and the IP address of his client, it will return the full details of the BIN and the details if the IP address as well with a risk score.\n\n**Can I use it for free or test it?**\nThere are different plans suits everyone including a free plan for small amount of requests per day, but it's rate is limit to prevent abuse of the service.\n\n**Can I use it as \"Pay per Request\"?**\nSure, you can use it and pay only when you use it. The credit can't be expired.\n\n**How can I integrate it with my project?**\nRapidAPI provides a wide range of integration methods for almost all programming languages. You can use these codes to integrate with your project as you need.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "bin",
                    "type": "NUMBER",
                    "description": "",
                    "default": "448590"
                }
            ],
            "optional_parameters": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "",
                    "default": "8.8.8.8"
                }
            ],
            "code": "import requests\n\nurl = \"https://bin-ip-checker.p.rapidapi.com/\"\nquerystring = {\"ip\": \"8.8.8.8\", \"bin\": \"448590\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bin-ip-checker.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://bin-ip-checker.p.rapidapi.com/\"\nquerystring = {\"ip\": \"8.8.8.8\", \"bin\": \"448590\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bin-ip-checker.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        }
    ]
}