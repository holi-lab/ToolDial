{
    "product_id": "api_05ae1d72-9ca8-40c5-ba64-9707e80f3215",
    "tool_description": "This Api provides you direct access to all the powers of the popular LibPostal library for an affordable price. Send up to 1,000 addresses per request to each endpoint.",
    "home_url": "https://rapidapi.com/AffordabelApiSolutions/api/libpostal-address-parser-and-expander/",
    "name": "LibPostal Address Parser and Expander",
    "title": "LibPostal Address Parser and Expander",
    "pricing": "FREEMIUM",
    "tool_name": "LibPostal Address Parser and Expander",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 23545,
        "avgSuccessRate": 100,
        "popularityScore": 8.3,
        "__typename": "Score"
    },
    "host": "libpostal-address-parser-and-expander.p.rapidapi.com",
    "api_list": [
        {
            "name": "ParseAddresses",
            "url": "https://libpostal-address-parser-and-expander.p.rapidapi.com/ParseAddresses",
            "description": "ParseAddresses breaks an address down into it's components.\n\nhouse: venue name e.g. \"Brooklyn Academy of Music\", and building names e.g. \"Empire State Building\"\ncategory: for category queries like \"restaurants\", etc.\nnear: phrases like \"in\", \"near\", etc. used after a category phrase to help with parsing queries like \"restaurants in Brooklyn\"\nhouse_number: usually refers to the external (street-facing) building number. In some countries this may be a compount, hyphenated number which also includes an apartment number, or a block number (a la Japan), but libpostal will just call it the house_number for simplicity.\nroad: street name(s)\nunit: an apartment, unit, office, lot, or other secondary unit designator\nlevel: expressions indicating a floor number e.g. \"3rd Floor\", \"Ground Floor\", etc.\nstaircase: numbered/lettered staircase\nentrance: numbered/lettered entrance\npo_box: post office box: typically found in non-physical (mail-only) addresses\npostcode: postal codes used for mail sorting\nsuburb: usually an unofficial neighborhood name like \"Harlem\", \"South Bronx\", or \"Crown Heights\"\ncity_district: these are usually boroughs or districts within a city that serve some official purpose e.g. \"Brooklyn\" or \"Hackney\" or \"Bratislava IV\"\ncity: any human settlement including cities, towns, villages, hamlets, localities, etc.\nisland: named islands e.g. \"Maui\"\nstate_district: usually a second-level administrative division or county.\nstate: a first-level administrative division. Scotland, Northern Ireland, Wales, and England in the UK are mapped to \"state\" as well (convention used in OSM, GeoPlanet, etc.)\ncountry_region: informal subdivision of a country without any political status\ncountry: sovereign nations and their dependent territories, anything with an ISO-3166 code.\nworld_region: currently only used for appending \u201cWest Indies\u201d after the country name, a pattern frequently used in the English-speaking Caribbean e.g. \u201cJamaica, West Indies\u201d",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://libpostal-address-parser-and-expander.p.rapidapi.com/ParseAddresses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"libpostal-address-parser-and-expander.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://libpostal-address-parser-and-expander.p.rapidapi.com/ParseAddresses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"libpostal-address-parser-and-expander.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "ExpandAddresses",
            "url": "https://libpostal-address-parser-and-expander.p.rapidapi.com/ExpandAddresses",
            "description": "The ExpandAddresses endpoint converts messy real-world addresses into normalized equivalents suitable for search indexing, hashing, etc.",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://libpostal-address-parser-and-expander.p.rapidapi.com/ExpandAddresses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"libpostal-address-parser-and-expander.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://libpostal-address-parser-and-expander.p.rapidapi.com/ExpandAddresses\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"libpostal-address-parser-and-expander.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 1,
            "schema": ""
        }
    ]
}