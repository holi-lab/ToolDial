{
    "product_id": "api_87868806-7343-4ad2-a5ce-2afe45b7a065",
    "tool_description": "https://xlsx-template.kurukona.net/\nTemplate + JSON \u279e XLSX or PDF.\nTemplate base excel file and pdf generator.\nYou can create xlsx document or pdf file with template and json data.\n\n![img1](https://xlsx-template.kurukona.net/rapidapi/img/xlsx-tempate-engine-generate-img.png)",
    "home_url": "https://rapidapi.com/kurukona/api/xlsx-template/",
    "name": "XLSX Template",
    "title": "XLSX Template",
    "pricing": "FREEMIUM",
    "tool_name": "XLSX Template",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 2095,
        "avgSuccessRate": 99,
        "popularityScore": 8.6,
        "__typename": "Score"
    },
    "host": "xlsx-template.p.rapidapi.com",
    "api_list": [
        {
            "name": "Mail config List",
            "url": "https://xlsx-template.p.rapidapi.com/mail/config/list",
            "description": "Get mail config list from cloud database",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "orderBy",
                    "type": "STRING",
                    "description": "[generatedAt]|[asc, desc]\nOnly 'generatedAt' is allowed\n",
                    "default": "generatedAt|asc"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Data get size limit\n",
                    "default": 1000
                },
                {
                    "name": "filter",
                    "type": "STRING",
                    "description": "{field}{operator}{value}\n[generatedAt][<=, >=, ==, !=, <, >]{value}\nOnly 'generatedAt' is allowed\n",
                    "default": "generatedAt>=2022-11-16T00:00:00.000Z"
                }
            ],
            "code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/mail/config/list\"\nquerystring = {\"orderBy\": \"generatedAt|asc\", \"limit\": 1000, \"filter\": \"generatedAt>=2022-11-16T00:00:00.000Z\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/mail/config/list\"\nquerystring = {\"orderBy\": \"generatedAt|asc\", \"limit\": 1000, \"filter\": \"generatedAt>=2022-11-16T00:00:00.000Z\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "This endpoint is disabled for your subscription"
            },
            "statuscode": 200,
            "schema": {
                "type": "array",
                "items": {
                    "allOf": [
                        {
                            "type": "object",
                            "properties": {
                                "host": {
                                    "type": "string"
                                },
                                "port": {
                                    "type": "integer"
                                },
                                "secure": {
                                    "type": "boolean"
                                },
                                "auth": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "string"
                                        },
                                        "pass": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "description": "https://nodemailer.com/smtp/#examples"
                        },
                        {
                            "properties": {
                                "generatedAt": {
                                    "type": "string"
                                },
                                "mailConfigId": {
                                    "type": "string",
                                    "description": "Cloud stored mail config id"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "Generate historys",
            "url": "https://xlsx-template.p.rapidapi.com/generate/historys",
            "description": "Generated files history",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "orderBy",
                    "type": "STRING",
                    "description": "[serverTimingSec,serverTimingMs,generatedAt]|[asc, desc]\nOnly 'serverTimingSec', 'serverTimingMs', 'generatedAt' is allowed\n",
                    "default": "serverTimingSec|asc"
                },
                {
                    "name": "filter",
                    "type": "STRING",
                    "description": "{field}{operator}{value}\n[serverTimingSec,serverTimingMs,generatedAt][<=, >=, ==, !=, <, >]{value}\nOnly 'serverTimingSec', 'serverTimingMs', 'generatedAt' is allowed\n",
                    "default": "serverTimingSec>=2"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Data get size limit\n",
                    "default": "10"
                }
            ],
            "code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/generate/historys\"\nquerystring = {\"orderBy\": \"serverTimingSec|asc\", \"filter\": \"serverTimingSec>=2\", \"limit\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/generate/historys\"\nquerystring = {\"orderBy\": \"serverTimingSec|asc\", \"filter\": \"serverTimingSec>=2\", \"limit\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": [],
            "statuscode": 200,
            "schema": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "generatedFiles": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "filename": {
                                        "type": "string"
                                    },
                                    "pdf": {
                                        "type": "object",
                                        "properties": {
                                            "size": {
                                                "type": "integer",
                                                "description": "byte"
                                            },
                                            "serverTimingMs": {
                                                "type": "integer",
                                                "description": "milliseconds"
                                            }
                                        }
                                    },
                                    "xlsx": {
                                        "type": "object",
                                        "properties": {
                                            "size": {
                                                "type": "integer",
                                                "description": "byte"
                                            },
                                            "serverTimingMs": {
                                                "type": "integer",
                                                "description": "milliseconds"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "remoteIp": {
                            "type": "string",
                            "description": "Api call remote ip"
                        },
                        "serverTimingMs": {
                            "type": "integer",
                            "description": "milliseconds"
                        },
                        "serverTimingSec": {
                            "type": "integer",
                            "description": "seconds"
                        },
                        "generatedAt": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        {
            "name": "Mail config get",
            "url": "https://xlsx-template.p.rapidapi.com/mail/config/slB2bozM2fVk5KirxyMq",
            "description": "Get a mail confing from cloud database",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "mailConfigId",
                    "type": "STRING",
                    "description": "",
                    "default": "slB2bozM2fVk5KirxyMq"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/mail/config/slB2bozM2fVk5KirxyMq\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/mail/config/{mailconfigid}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "host": {
                                "type": "string"
                            },
                            "port": {
                                "type": "integer"
                            },
                            "secure": {
                                "type": "boolean"
                            },
                            "auth": {
                                "type": "object",
                                "properties": {
                                    "user": {
                                        "type": "string"
                                    },
                                    "pass": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "description": "https://nodemailer.com/smtp/#examples"
                    },
                    {
                        "properties": {
                            "generatedAt": {
                                "type": "string"
                            },
                            "mailConfigId": {
                                "type": "string",
                                "description": "Cloud stored mail config id"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "Template list",
            "url": "https://xlsx-template.p.rapidapi.com/template/list",
            "description": "Cloud storage templates file list",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "orderBy",
                    "type": "STRING",
                    "description": "Only 'serverTimingSec', 'serverTimingMs', 'generatedAt' is allowed\n[serverTimingSec,serverTimingMs,generatedAt]|[asc, desc]\n",
                    "default": "updated|asc"
                }
            ],
            "code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/template/list\"\nquerystring = {\"orderBy\": \"updated|asc\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/template/list\"\nquerystring = {\"orderBy\": \"updated|asc\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "totalSize": {
                        "type": "integer"
                    },
                    "templateFiles": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "filename": {
                                    "type": "string"
                                },
                                "size": {
                                    "type": "string"
                                },
                                "updated": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Template download",
            "url": "https://xlsx-template.p.rapidapi.com/template/template.xlsx",
            "description": "Download template file from Cloud storage",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "templateFilename",
                    "type": "STRING",
                    "description": "",
                    "default": "template.xlsx"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/template/template.xlsx\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/template/{templatefilename}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "message": "You have exceeded the rate limit per minute for your plan, BASIC, by the API provider"
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Send mail (mailConfig and base64)",
            "url": "https://xlsx-template.p.rapidapi.com/mail/send",
            "description": "Send mail with generated XLSX or PDF files by mailConfigId and base64 template file\nmailConfigId with base64",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/mail/send\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/mail/send\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "accepted": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rejected": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "envelopeTime": {
                        "type": "integer"
                    },
                    "messageTime": {
                        "type": "integer"
                    },
                    "messageSize": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "string"
                    },
                    "envelope": {
                        "type": "object",
                        "properties": {
                            "from": {
                                "type": "string"
                            },
                            "to": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "messageId": {
                        "type": "string"
                    }
                },
                "description": "https://nodemailer.com/usage/#sending-mail"
            }
        },
        {
            "name": "Generate from json body (base64)",
            "url": "https://xlsx-template.p.rapidapi.com/generate",
            "description": "Generate XLSX or PDF from base64 encoded template file",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/generate\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/generate\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Send mail (mailConfigId with base64)",
            "url": "https://xlsx-template.p.rapidapi.com/mail/send",
            "description": "Send mail with generated XLSX or PDF files by mailConfigId and base64 template file\nmailConfigId with base64",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/mail/send\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/mail/send\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "accepted": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rejected": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "envelopeTime": {
                        "type": "integer"
                    },
                    "messageTime": {
                        "type": "integer"
                    },
                    "messageSize": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "string"
                    },
                    "envelope": {
                        "type": "object",
                        "properties": {
                            "from": {
                                "type": "string"
                            },
                            "to": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "messageId": {
                        "type": "string"
                    }
                },
                "description": "https://nodemailer.com/usage/#sending-mail"
            }
        },
        {
            "name": "Send  mail (mailConfigId)",
            "url": "https://xlsx-template.p.rapidapi.com/mail/send",
            "description": "Send mail with generated XLSX or PDF files by mailConfigId",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/mail/send\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/mail/send\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "accepted": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rejected": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "envelopeTime": {
                        "type": "integer"
                    },
                    "messageTime": {
                        "type": "integer"
                    },
                    "messageSize": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "string"
                    },
                    "envelope": {
                        "type": "object",
                        "properties": {
                            "from": {
                                "type": "string"
                            },
                            "to": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "messageId": {
                        "type": "string"
                    }
                },
                "description": "https://nodemailer.com/usage/#sending-mail"
            }
        },
        {
            "name": "Generate from form body (base64)",
            "url": "https://xlsx-template.p.rapidapi.com/generate",
            "description": "Generate XLSX or PDF from base64 string template file\ntemplateFileBase64",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "templateFileBase64",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "downloadFilename",
                    "type": "STRING",
                    "description": "",
                    "default": "downloadThisName"
                },
                {
                    "name": "jsonData",
                    "type": "OBJECT",
                    "description": "",
                    "default": "{\"tel\":\"+81-045-XXXX-XXXX\",\"fax\":\"+81-054-XXXX-XXXX\",\"orderList\":[{\"id\":1,\"firstName\":\"Gil\",\"lastName\":\"Willows\",\"email\":\"gwillows0@cbc.ca\",\"gender\":\"Male\",\"orderNumber\":\"KK812251\",\"receiptNo\":\"1a41725\",\"receiptDate\":\"2022-10-12\",\"itemList\":[{\"goodsName\":\"Cheese - Shred Cheddar / Mozza\",\"price\":\"$31.82\",\"qty\":3},{\"goodsName\":\"Cheese - Bakers Cream Cheese\",\"price\":\"$26.49\",\"qty\":3}]},{\"id\":2,\"firstName\":\"Sisile\",\"lastName\":\"Canedo\",\"email\":\"scanedo1@cyberchimps.com\",\"gender\":\"Genderfluid\",\"orderNumber\":\"KK812252\",\"receiptNo\":\"1a65213\",\"receiptDate\":\"2022-10-12\",\"itemList\":[{\"goodsName\":\"Calypso - Pineapple Passion\",\"price\":\"$85.22\",\"qty\":2},{\"goodsName\":\"Scampi Tail\",\"price\":\"$46.15\",\"qty\":1},{\"goodsName\":\"Rosemary - Dry\",\"price\":\"$52.21\",\"qty\":2}]},{\"id\":3,\"firstName\":\"Ferd\",\"lastName\":\"Lillford\",\"email\":\"flillford2@icq.com\",\"gender\":\"Male\",\"orderNumber\":\"KK812253\",\"receiptNo\":\"1a054212\",\"receiptDate\":\"2022-10-12\",\"itemList\":[{\"goodsName\":\"Pepper - Chili Powder\",\"price\":\"$41.91\",\"qty\":2},{\"goodsName\":\"Sugar Thermometer\",\"price\":\"$76.75\",\"qty\":3}]}]}"
                }
            ],
            "optional_parameters": [
                {
                    "name": "downloadFiletype",
                    "type": "STRING",
                    "description": "",
                    "default": "pdf"
                },
                {
                    "name": "replaceFonts",
                    "type": "STRING",
                    "description": "If only the font name is specified, all fonts are converted. \nex: `{replaceFonts: \"Noto Sans CJK JP\"} `\n\nA specific target font can be specified in json format. \nex:  `{replaceFonts: {\"Yu Gothic\": \"Noto Sans CJK JP\"} }`",
                    "default": "Noto Sans"
                }
            ],
            "code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/generate\"\nquerystring = {\"downloadFiletype\": \"pdf\", \"templateFileBase64\": \"\", \"replaceFonts\": \"Noto Sans\", \"downloadFilename\": \"downloadThisName\", \"jsonData\": \"{\\\"tel\\\":\\\"+81-045-XXXX-XXXX\\\",\\\"fax\\\":\\\"+81-054-XXXX-XXXX\\\",\\\"orderList\\\":[{\\\"id\\\":1,\\\"firstName\\\":\\\"Gil\\\",\\\"lastName\\\":\\\"Willows\\\",\\\"email\\\":\\\"gwillows0@cbc.ca\\\",\\\"gender\\\":\\\"Male\\\",\\\"orderNumber\\\":\\\"KK812251\\\",\\\"receiptNo\\\":\\\"1a41725\\\",\\\"receiptDate\\\":\\\"2022-10-12\\\",\\\"itemList\\\":[{\\\"goodsName\\\":\\\"Cheese - Shred Cheddar / Mozza\\\",\\\"price\\\":\\\"$31.82\\\",\\\"qty\\\":3},{\\\"goodsName\\\":\\\"Cheese - Bakers Cream Cheese\\\",\\\"price\\\":\\\"$26.49\\\",\\\"qty\\\":3}]},{\\\"id\\\":2,\\\"firstName\\\":\\\"Sisile\\\",\\\"lastName\\\":\\\"Canedo\\\",\\\"email\\\":\\\"scanedo1@cyberchimps.com\\\",\\\"gender\\\":\\\"Genderfluid\\\",\\\"orderNumber\\\":\\\"KK812252\\\",\\\"receiptNo\\\":\\\"1a65213\\\",\\\"receiptDate\\\":\\\"2022-10-12\\\",\\\"itemList\\\":[{\\\"goodsName\\\":\\\"Calypso - Pineapple Passion\\\",\\\"price\\\":\\\"$85.22\\\",\\\"qty\\\":2},{\\\"goodsName\\\":\\\"Scampi Tail\\\",\\\"price\\\":\\\"$46.15\\\",\\\"qty\\\":1},{\\\"goodsName\\\":\\\"Rosemary - Dry\\\",\\\"price\\\":\\\"$52.21\\\",\\\"qty\\\":2}]},{\\\"id\\\":3,\\\"firstName\\\":\\\"Ferd\\\",\\\"lastName\\\":\\\"Lillford\\\",\\\"email\\\":\\\"flillford2@icq.com\\\",\\\"gender\\\":\\\"Male\\\",\\\"orderNumber\\\":\\\"KK812253\\\",\\\"receiptNo\\\":\\\"1a054212\\\",\\\"receiptDate\\\":\\\"2022-10-12\\\",\\\"itemList\\\":[{\\\"goodsName\\\":\\\"Pepper - Chili Powder\\\",\\\"price\\\":\\\"$41.91\\\",\\\"qty\\\":2},{\\\"goodsName\\\":\\\"Sugar Thermometer\\\",\\\"price\\\":\\\"$76.75\\\",\\\"qty\\\":3}]}]}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/generate\"\nquerystring = {\"downloadFiletype\": \"pdf\", \"templateFileBase64\": \"\", \"replaceFonts\": \"Noto Sans\", \"downloadFilename\": \"downloadThisName\", \"jsonData\": \"{\\\"tel\\\":\\\"+81-045-XXXX-XXXX\\\",\\\"fax\\\":\\\"+81-054-XXXX-XXXX\\\",\\\"orderList\\\":[{\\\"id\\\":1,\\\"firstName\\\":\\\"Gil\\\",\\\"lastName\\\":\\\"Willows\\\",\\\"email\\\":\\\"gwillows0@cbc.ca\\\",\\\"gender\\\":\\\"Male\\\",\\\"orderNumber\\\":\\\"KK812251\\\",\\\"receiptNo\\\":\\\"1a41725\\\",\\\"receiptDate\\\":\\\"2022-10-12\\\",\\\"itemList\\\":[{\\\"goodsName\\\":\\\"Cheese - Shred Cheddar / Mozza\\\",\\\"price\\\":\\\"$31.82\\\",\\\"qty\\\":3},{\\\"goodsName\\\":\\\"Cheese - Bakers Cream Cheese\\\",\\\"price\\\":\\\"$26.49\\\",\\\"qty\\\":3}]},{\\\"id\\\":2,\\\"firstName\\\":\\\"Sisile\\\",\\\"lastName\\\":\\\"Canedo\\\",\\\"email\\\":\\\"scanedo1@cyberchimps.com\\\",\\\"gender\\\":\\\"Genderfluid\\\",\\\"orderNumber\\\":\\\"KK812252\\\",\\\"receiptNo\\\":\\\"1a65213\\\",\\\"receiptDate\\\":\\\"2022-10-12\\\",\\\"itemList\\\":[{\\\"goodsName\\\":\\\"Calypso - Pineapple Passion\\\",\\\"price\\\":\\\"$85.22\\\",\\\"qty\\\":2},{\\\"goodsName\\\":\\\"Scampi Tail\\\",\\\"price\\\":\\\"$46.15\\\",\\\"qty\\\":1},{\\\"goodsName\\\":\\\"Rosemary - Dry\\\",\\\"price\\\":\\\"$52.21\\\",\\\"qty\\\":2}]},{\\\"id\\\":3,\\\"firstName\\\":\\\"Ferd\\\",\\\"lastName\\\":\\\"Lillford\\\",\\\"email\\\":\\\"flillford2@icq.com\\\",\\\"gender\\\":\\\"Male\\\",\\\"orderNumber\\\":\\\"KK812253\\\",\\\"receiptNo\\\":\\\"1a054212\\\",\\\"receiptDate\\\":\\\"2022-10-12\\\",\\\"itemList\\\":[{\\\"goodsName\\\":\\\"Pepper - Chili Powder\\\",\\\"price\\\":\\\"$41.91\\\",\\\"qty\\\":2},{\\\"goodsName\\\":\\\"Sugar Thermometer\\\",\\\"price\\\":\\\"$76.75\\\",\\\"qty\\\":3}]}]}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Generate from form body (file)",
            "url": "https://xlsx-template.p.rapidapi.com/generate",
            "description": "Generate XLSX or PDF document from attached template file\ntemplateFile",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "jsonData",
                    "type": "OBJECT",
                    "description": "",
                    "default": "{\"tel\":\"+81-045-XXXX-XXXX\",\"fax\":\"+81-054-XXXX-XXXX\",\"orderList\":[{\"id\":1,\"firstName\":\"Gil\",\"lastName\":\"Willows\",\"email\":\"gwillows0@cbc.ca\",\"gender\":\"Male\",\"orderNumber\":\"KK812251\",\"receiptNo\":\"1a41725\",\"receiptDate\":\"2022-10-12\",\"itemList\":[{\"goodsName\":\"Cheese - Shred Cheddar / Mozza\",\"price\":\"$31.82\",\"qty\":3},{\"goodsName\":\"Cheese - Bakers Cream Cheese\",\"price\":\"$26.49\",\"qty\":3}]},{\"id\":2,\"firstName\":\"Sisile\",\"lastName\":\"Canedo\",\"email\":\"scanedo1@cyberchimps.com\",\"gender\":\"Genderfluid\",\"orderNumber\":\"KK812252\",\"receiptNo\":\"1a65213\",\"receiptDate\":\"2022-10-12\",\"itemList\":[{\"goodsName\":\"Calypso - Pineapple Passion\",\"price\":\"$85.22\",\"qty\":2},{\"goodsName\":\"Scampi Tail\",\"price\":\"$46.15\",\"qty\":1},{\"goodsName\":\"Rosemary - Dry\",\"price\":\"$52.21\",\"qty\":2}]},{\"id\":3,\"firstName\":\"Ferd\",\"lastName\":\"Lillford\",\"email\":\"flillford2@icq.com\",\"gender\":\"Male\",\"orderNumber\":\"KK812253\",\"receiptNo\":\"1a054212\",\"receiptDate\":\"2022-10-12\",\"itemList\":[{\"goodsName\":\"Pepper - Chili Powder\",\"price\":\"$41.91\",\"qty\":2},{\"goodsName\":\"Sugar Thermometer\",\"price\":\"$76.75\",\"qty\":3}]}]}"
                },
                {
                    "name": "templateFile",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "downloadFiletype",
                    "type": "STRING",
                    "description": "",
                    "default": "pdf"
                },
                {
                    "name": "replaceFonts",
                    "type": "STRING",
                    "description": "If only the font name is specified, all fonts are converted. \nex: `{replaceFonts: \"Noto Sans CJK JP\"} `\n\nA specific target font can be specified in json format. \nex:  `{replaceFonts: {\"Yu Gothic\": \"Noto Sans CJK JP\"} }`",
                    "default": "Noto Sans"
                },
                {
                    "name": "downloadFilename",
                    "type": "STRING",
                    "description": "",
                    "default": "downloadThisName"
                }
            ],
            "code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/generate\"\nquerystring = {\"jsonData\": \"{\\\"tel\\\":\\\"+81-045-XXXX-XXXX\\\",\\\"fax\\\":\\\"+81-054-XXXX-XXXX\\\",\\\"orderList\\\":[{\\\"id\\\":1,\\\"firstName\\\":\\\"Gil\\\",\\\"lastName\\\":\\\"Willows\\\",\\\"email\\\":\\\"gwillows0@cbc.ca\\\",\\\"gender\\\":\\\"Male\\\",\\\"orderNumber\\\":\\\"KK812251\\\",\\\"receiptNo\\\":\\\"1a41725\\\",\\\"receiptDate\\\":\\\"2022-10-12\\\",\\\"itemList\\\":[{\\\"goodsName\\\":\\\"Cheese - Shred Cheddar / Mozza\\\",\\\"price\\\":\\\"$31.82\\\",\\\"qty\\\":3},{\\\"goodsName\\\":\\\"Cheese - Bakers Cream Cheese\\\",\\\"price\\\":\\\"$26.49\\\",\\\"qty\\\":3}]},{\\\"id\\\":2,\\\"firstName\\\":\\\"Sisile\\\",\\\"lastName\\\":\\\"Canedo\\\",\\\"email\\\":\\\"scanedo1@cyberchimps.com\\\",\\\"gender\\\":\\\"Genderfluid\\\",\\\"orderNumber\\\":\\\"KK812252\\\",\\\"receiptNo\\\":\\\"1a65213\\\",\\\"receiptDate\\\":\\\"2022-10-12\\\",\\\"itemList\\\":[{\\\"goodsName\\\":\\\"Calypso - Pineapple Passion\\\",\\\"price\\\":\\\"$85.22\\\",\\\"qty\\\":2},{\\\"goodsName\\\":\\\"Scampi Tail\\\",\\\"price\\\":\\\"$46.15\\\",\\\"qty\\\":1},{\\\"goodsName\\\":\\\"Rosemary - Dry\\\",\\\"price\\\":\\\"$52.21\\\",\\\"qty\\\":2}]},{\\\"id\\\":3,\\\"firstName\\\":\\\"Ferd\\\",\\\"lastName\\\":\\\"Lillford\\\",\\\"email\\\":\\\"flillford2@icq.com\\\",\\\"gender\\\":\\\"Male\\\",\\\"orderNumber\\\":\\\"KK812253\\\",\\\"receiptNo\\\":\\\"1a054212\\\",\\\"receiptDate\\\":\\\"2022-10-12\\\",\\\"itemList\\\":[{\\\"goodsName\\\":\\\"Pepper - Chili Powder\\\",\\\"price\\\":\\\"$41.91\\\",\\\"qty\\\":2},{\\\"goodsName\\\":\\\"Sugar Thermometer\\\",\\\"price\\\":\\\"$76.75\\\",\\\"qty\\\":3}]}]}\", \"templateFile\": \"\", \"downloadFiletype\": \"pdf\", \"replaceFonts\": \"Noto Sans\", \"downloadFilename\": \"downloadThisName\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/generate\"\nquerystring = {\"jsonData\": \"{\\\"tel\\\":\\\"+81-045-XXXX-XXXX\\\",\\\"fax\\\":\\\"+81-054-XXXX-XXXX\\\",\\\"orderList\\\":[{\\\"id\\\":1,\\\"firstName\\\":\\\"Gil\\\",\\\"lastName\\\":\\\"Willows\\\",\\\"email\\\":\\\"gwillows0@cbc.ca\\\",\\\"gender\\\":\\\"Male\\\",\\\"orderNumber\\\":\\\"KK812251\\\",\\\"receiptNo\\\":\\\"1a41725\\\",\\\"receiptDate\\\":\\\"2022-10-12\\\",\\\"itemList\\\":[{\\\"goodsName\\\":\\\"Cheese - Shred Cheddar / Mozza\\\",\\\"price\\\":\\\"$31.82\\\",\\\"qty\\\":3},{\\\"goodsName\\\":\\\"Cheese - Bakers Cream Cheese\\\",\\\"price\\\":\\\"$26.49\\\",\\\"qty\\\":3}]},{\\\"id\\\":2,\\\"firstName\\\":\\\"Sisile\\\",\\\"lastName\\\":\\\"Canedo\\\",\\\"email\\\":\\\"scanedo1@cyberchimps.com\\\",\\\"gender\\\":\\\"Genderfluid\\\",\\\"orderNumber\\\":\\\"KK812252\\\",\\\"receiptNo\\\":\\\"1a65213\\\",\\\"receiptDate\\\":\\\"2022-10-12\\\",\\\"itemList\\\":[{\\\"goodsName\\\":\\\"Calypso - Pineapple Passion\\\",\\\"price\\\":\\\"$85.22\\\",\\\"qty\\\":2},{\\\"goodsName\\\":\\\"Scampi Tail\\\",\\\"price\\\":\\\"$46.15\\\",\\\"qty\\\":1},{\\\"goodsName\\\":\\\"Rosemary - Dry\\\",\\\"price\\\":\\\"$52.21\\\",\\\"qty\\\":2}]},{\\\"id\\\":3,\\\"firstName\\\":\\\"Ferd\\\",\\\"lastName\\\":\\\"Lillford\\\",\\\"email\\\":\\\"flillford2@icq.com\\\",\\\"gender\\\":\\\"Male\\\",\\\"orderNumber\\\":\\\"KK812253\\\",\\\"receiptNo\\\":\\\"1a054212\\\",\\\"receiptDate\\\":\\\"2022-10-12\\\",\\\"itemList\\\":[{\\\"goodsName\\\":\\\"Pepper - Chili Powder\\\",\\\"price\\\":\\\"$41.91\\\",\\\"qty\\\":2},{\\\"goodsName\\\":\\\"Sugar Thermometer\\\",\\\"price\\\":\\\"$76.75\\\",\\\"qty\\\":3}]}]}\", \"templateFile\": \"\", \"downloadFiletype\": \"pdf\", \"replaceFonts\": \"Noto Sans\", \"downloadFilename\": \"downloadThisName\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Generate from form body (filename)",
            "url": "https://xlsx-template.p.rapidapi.com/generate",
            "description": "Generate XLSX or PDF document from cloud stored template file\ntemplateFileBase64",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "templateFilename",
                    "type": "STRING",
                    "description": "",
                    "default": "sample-template01.xlsx"
                },
                {
                    "name": "jsonData",
                    "type": "OBJECT",
                    "description": "",
                    "default": "{\"tel\":\"+81-045-XXXX-XXXX\",\"fax\":\"+81-054-XXXX-XXXX\",\"orderList\":[{\"id\":1,\"firstName\":\"Gil\",\"lastName\":\"Willows\",\"email\":\"gwillows0@cbc.ca\",\"gender\":\"Male\",\"orderNumber\":\"KK812251\",\"receiptNo\":\"1a41725\",\"receiptDate\":\"2022-10-12\",\"itemList\":[{\"goodsName\":\"Cheese - Shred Cheddar / Mozza\",\"price\":\"$31.82\",\"qty\":3},{\"goodsName\":\"Cheese - Bakers Cream Cheese\",\"price\":\"$26.49\",\"qty\":3}]},{\"id\":2,\"firstName\":\"Sisile\",\"lastName\":\"Canedo\",\"email\":\"scanedo1@cyberchimps.com\",\"gender\":\"Genderfluid\",\"orderNumber\":\"KK812252\",\"receiptNo\":\"1a65213\",\"receiptDate\":\"2022-10-12\",\"itemList\":[{\"goodsName\":\"Calypso - Pineapple Passion\",\"price\":\"$85.22\",\"qty\":2},{\"goodsName\":\"Scampi Tail\",\"price\":\"$46.15\",\"qty\":1},{\"goodsName\":\"Rosemary - Dry\",\"price\":\"$52.21\",\"qty\":2}]},{\"id\":3,\"firstName\":\"Ferd\",\"lastName\":\"Lillford\",\"email\":\"flillford2@icq.com\",\"gender\":\"Male\",\"orderNumber\":\"KK812253\",\"receiptNo\":\"1a054212\",\"receiptDate\":\"2022-10-12\",\"itemList\":[{\"goodsName\":\"Pepper - Chili Powder\",\"price\":\"$41.91\",\"qty\":2},{\"goodsName\":\"Sugar Thermometer\",\"price\":\"$76.75\",\"qty\":3}]}]}"
                }
            ],
            "optional_parameters": [
                {
                    "name": "downloadFilename",
                    "type": "STRING",
                    "description": "",
                    "default": "downloadThisName"
                },
                {
                    "name": "downloadFiletype",
                    "type": "STRING",
                    "description": "",
                    "default": "pdf"
                },
                {
                    "name": "replaceFonts",
                    "type": "STRING",
                    "description": "If only the font name is specified, all fonts are converted. \nex: `{replaceFonts: \"Noto Sans CJK JP\"} `\n\nA specific target font can be specified in json format. \nex:  `{replaceFonts: {\"Yu Gothic\": \"Noto Sans CJK JP\"} }`",
                    "default": "Noto Sans"
                }
            ],
            "code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/generate\"\nquerystring = {\"templateFilename\": \"sample-template01.xlsx\", \"downloadFilename\": \"downloadThisName\", \"downloadFiletype\": \"pdf\", \"replaceFonts\": \"Noto Sans\", \"jsonData\": \"{\\\"tel\\\":\\\"+81-045-XXXX-XXXX\\\",\\\"fax\\\":\\\"+81-054-XXXX-XXXX\\\",\\\"orderList\\\":[{\\\"id\\\":1,\\\"firstName\\\":\\\"Gil\\\",\\\"lastName\\\":\\\"Willows\\\",\\\"email\\\":\\\"gwillows0@cbc.ca\\\",\\\"gender\\\":\\\"Male\\\",\\\"orderNumber\\\":\\\"KK812251\\\",\\\"receiptNo\\\":\\\"1a41725\\\",\\\"receiptDate\\\":\\\"2022-10-12\\\",\\\"itemList\\\":[{\\\"goodsName\\\":\\\"Cheese - Shred Cheddar / Mozza\\\",\\\"price\\\":\\\"$31.82\\\",\\\"qty\\\":3},{\\\"goodsName\\\":\\\"Cheese - Bakers Cream Cheese\\\",\\\"price\\\":\\\"$26.49\\\",\\\"qty\\\":3}]},{\\\"id\\\":2,\\\"firstName\\\":\\\"Sisile\\\",\\\"lastName\\\":\\\"Canedo\\\",\\\"email\\\":\\\"scanedo1@cyberchimps.com\\\",\\\"gender\\\":\\\"Genderfluid\\\",\\\"orderNumber\\\":\\\"KK812252\\\",\\\"receiptNo\\\":\\\"1a65213\\\",\\\"receiptDate\\\":\\\"2022-10-12\\\",\\\"itemList\\\":[{\\\"goodsName\\\":\\\"Calypso - Pineapple Passion\\\",\\\"price\\\":\\\"$85.22\\\",\\\"qty\\\":2},{\\\"goodsName\\\":\\\"Scampi Tail\\\",\\\"price\\\":\\\"$46.15\\\",\\\"qty\\\":1},{\\\"goodsName\\\":\\\"Rosemary - Dry\\\",\\\"price\\\":\\\"$52.21\\\",\\\"qty\\\":2}]},{\\\"id\\\":3,\\\"firstName\\\":\\\"Ferd\\\",\\\"lastName\\\":\\\"Lillford\\\",\\\"email\\\":\\\"flillford2@icq.com\\\",\\\"gender\\\":\\\"Male\\\",\\\"orderNumber\\\":\\\"KK812253\\\",\\\"receiptNo\\\":\\\"1a054212\\\",\\\"receiptDate\\\":\\\"2022-10-12\\\",\\\"itemList\\\":[{\\\"goodsName\\\":\\\"Pepper - Chili Powder\\\",\\\"price\\\":\\\"$41.91\\\",\\\"qty\\\":2},{\\\"goodsName\\\":\\\"Sugar Thermometer\\\",\\\"price\\\":\\\"$76.75\\\",\\\"qty\\\":3}]}]}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/generate\"\nquerystring = {\"templateFilename\": \"sample-template01.xlsx\", \"downloadFilename\": \"downloadThisName\", \"downloadFiletype\": \"pdf\", \"replaceFonts\": \"Noto Sans\", \"jsonData\": \"{\\\"tel\\\":\\\"+81-045-XXXX-XXXX\\\",\\\"fax\\\":\\\"+81-054-XXXX-XXXX\\\",\\\"orderList\\\":[{\\\"id\\\":1,\\\"firstName\\\":\\\"Gil\\\",\\\"lastName\\\":\\\"Willows\\\",\\\"email\\\":\\\"gwillows0@cbc.ca\\\",\\\"gender\\\":\\\"Male\\\",\\\"orderNumber\\\":\\\"KK812251\\\",\\\"receiptNo\\\":\\\"1a41725\\\",\\\"receiptDate\\\":\\\"2022-10-12\\\",\\\"itemList\\\":[{\\\"goodsName\\\":\\\"Cheese - Shred Cheddar / Mozza\\\",\\\"price\\\":\\\"$31.82\\\",\\\"qty\\\":3},{\\\"goodsName\\\":\\\"Cheese - Bakers Cream Cheese\\\",\\\"price\\\":\\\"$26.49\\\",\\\"qty\\\":3}]},{\\\"id\\\":2,\\\"firstName\\\":\\\"Sisile\\\",\\\"lastName\\\":\\\"Canedo\\\",\\\"email\\\":\\\"scanedo1@cyberchimps.com\\\",\\\"gender\\\":\\\"Genderfluid\\\",\\\"orderNumber\\\":\\\"KK812252\\\",\\\"receiptNo\\\":\\\"1a65213\\\",\\\"receiptDate\\\":\\\"2022-10-12\\\",\\\"itemList\\\":[{\\\"goodsName\\\":\\\"Calypso - Pineapple Passion\\\",\\\"price\\\":\\\"$85.22\\\",\\\"qty\\\":2},{\\\"goodsName\\\":\\\"Scampi Tail\\\",\\\"price\\\":\\\"$46.15\\\",\\\"qty\\\":1},{\\\"goodsName\\\":\\\"Rosemary - Dry\\\",\\\"price\\\":\\\"$52.21\\\",\\\"qty\\\":2}]},{\\\"id\\\":3,\\\"firstName\\\":\\\"Ferd\\\",\\\"lastName\\\":\\\"Lillford\\\",\\\"email\\\":\\\"flillford2@icq.com\\\",\\\"gender\\\":\\\"Male\\\",\\\"orderNumber\\\":\\\"KK812253\\\",\\\"receiptNo\\\":\\\"1a054212\\\",\\\"receiptDate\\\":\\\"2022-10-12\\\",\\\"itemList\\\":[{\\\"goodsName\\\":\\\"Pepper - Chili Powder\\\",\\\"price\\\":\\\"$41.91\\\",\\\"qty\\\":2},{\\\"goodsName\\\":\\\"Sugar Thermometer\\\",\\\"price\\\":\\\"$76.75\\\",\\\"qty\\\":3}]}]}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Send mail (mailConfig)",
            "url": "https://xlsx-template.p.rapidapi.com/mail/send",
            "description": "Send mail with generated XLSX or PDF files by mailConfig\nmailConfig",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/mail/send\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/mail/send\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "accepted": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rejected": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "envelopeTime": {
                        "type": "integer"
                    },
                    "messageTime": {
                        "type": "integer"
                    },
                    "messageSize": {
                        "type": "integer"
                    },
                    "response": {
                        "type": "string"
                    },
                    "envelope": {
                        "type": "object",
                        "properties": {
                            "from": {
                                "type": "string"
                            },
                            "to": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "messageId": {
                        "type": "string"
                    }
                },
                "description": "https://nodemailer.com/usage/#sending-mail"
            }
        },
        {
            "name": "Generate from json body (filename)",
            "url": "https://xlsx-template.p.rapidapi.com/generate",
            "description": "Generate XLSX or PDF document from cloud stored template file\ntemplateFilename",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/generate\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/generate\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {}
        },
        {
            "name": "Template upload",
            "url": "https://xlsx-template.p.rapidapi.com/template",
            "description": "Upload a xlsx template file to cloud stroage.\nIf upload a file with the same name, It will be overwrite",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "templateFiles",
                    "type": "ARRAY",
                    "description": "",
                    "default": "[]"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/template\"\nquerystring = {\"templateFiles\": \"[]\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/template\"\nquerystring = {\"templateFiles\": \"[]\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "totalSize": {
                        "type": "integer"
                    },
                    "uploaded": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "filename": {
                                    "type": "string"
                                },
                                "size": {
                                    "type": "string"
                                },
                                "updated": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "filename": {
                                    "type": "string"
                                },
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "Mail config add",
            "url": "https://xlsx-template.p.rapidapi.com/mail/config",
            "description": "Add new mail config to cloud database",
            "method": "POST",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/mail/config\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://xlsx-template.p.rapidapi.com/mail/config\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xlsx-template.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": "",
            "statuscode": 200,
            "schema": {
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "host": {
                                "type": "string"
                            },
                            "port": {
                                "type": "integer"
                            },
                            "secure": {
                                "type": "boolean"
                            },
                            "auth": {
                                "type": "object",
                                "properties": {
                                    "user": {
                                        "type": "string"
                                    },
                                    "pass": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "description": "https://nodemailer.com/smtp/#examples"
                    },
                    {
                        "properties": {
                            "generatedAt": {
                                "type": "string"
                            },
                            "mailConfigId": {
                                "type": "string",
                                "description": "Cloud stored mail config id"
                            }
                        }
                    }
                ]
            }
        }
    ],
    "standardized_name": "xlsx_template"
}