{
    "product_id": "api_fce33be1-2c38-4b93-ad1e-d5c471ccfc37",
    "tool_description": "Search vehicles sold in the United States by year, make, model, trim, engine, body, mileage, VIN decoder and more.",
    "home_url": "https://rapidapi.com/carapi/api/car-api2/",
    "name": "Car API",
    "title": "Car API",
    "pricing": "FREEMIUM",
    "tool_name": "Car API",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 240,
        "avgSuccessRate": 100,
        "popularityScore": 9.8,
        "__typename": "Score"
    },
    "host": "car-api2.p.rapidapi.com",
    "api_list": [
        {
            "name": "Engines",
            "url": "https://car-api2.p.rapidapi.com/api/engines",
            "description": "To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"horsepower_hp\", \"op\": \">=\", \"val\": 100}, {\"field\": \"horsepower_hp\", \"op\": \"<=\", \"val\": 300}]`\n\nSee /api/vehicle-attributes for a complete list of vehicle attributes.\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, fuel_type, engine_type, transmission, drive_type, cam_type, valve_timing, valves, horsepower_hp, size, cylinders, make_id, make_model_id, and make_model_trim_id.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "year",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "STRING",
                    "description": "",
                    "default": "asc"
                },
                {
                    "name": "valves",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "valve_timing",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "fuel_type",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "json",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "model",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "make",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "make_model_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "trim",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "cam_type",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "engine_type",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "make_model_trim_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "drive_type",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "verbose",
                    "type": "STRING",
                    "description": "Includes make, model and trim",
                    "default": "yes"
                },
                {
                    "name": "make_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "cylinders",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "",
                    "default": "id"
                },
                {
                    "name": "size",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "horsepower_hp",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "transmission",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://car-api2.p.rapidapi.com/api/engines\"\nquerystring = {\"year\": \"\", \"direction\": \"asc\", \"valves\": \"\", \"valve_timing\": \"\", \"fuel_type\": \"\", \"json\": \"\", \"model\": \"\", \"make\": \"\", \"make_model_id\": \"\", \"trim\": \"\", \"cam_type\": \"\", \"engine_type\": \"\", \"make_model_trim_id\": \"\", \"limit\": \"\", \"drive_type\": \"\", \"verbose\": \"yes\", \"make_id\": \"\", \"cylinders\": \"\", \"page\": \"\", \"sort\": \"id\", \"size\": \"\", \"horsepower_hp\": \"\", \"transmission\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://car-api2.p.rapidapi.com/api/engines\"\nquerystring = {\"year\": \"\", \"direction\": \"asc\", \"valves\": \"\", \"valve_timing\": \"\", \"fuel_type\": \"\", \"json\": \"\", \"model\": \"\", \"make\": \"\", \"make_model_id\": \"\", \"trim\": \"\", \"cam_type\": \"\", \"engine_type\": \"\", \"make_model_trim_id\": \"\", \"limit\": \"\", \"drive_type\": \"\", \"verbose\": \"yes\", \"make_id\": \"\", \"cylinders\": \"\", \"page\": \"\", \"sort\": \"id\", \"size\": \"\", \"horsepower_hp\": \"\", \"transmission\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "exception": "InvalidSearchValueException",
                "message": "Search parameter value for `year` is invalid. Must be a positive number.",
                "url": "/api/engines?engine_type=&amp;page=&amp;make_id=&amp;direction=asc&amp;json=&amp;horsepower_hp=&amp;size=&amp;verbose=yes&amp;cylinders=&amp;valve_timing=&amp;cam_type=&amp;sort=id&amp;drive_type=&amp;make_model_id=&amp;limit=&amp;valves=&amp;make_model_trim_id=&amp;year=&amp;transmission=&amp;fuel_type=&amp;trim=&amp;make=&amp;model=",
                "code": 400
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Bodies",
            "url": "https://car-api2.p.rapidapi.com/api/bodies",
            "description": "To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"doors\", \"op\": \">=\", \"val\": 4}, {\"field\": \"type\", \"op\": \"in\", \"val\": [\"SUV\",\"Van\"]}]`\n\nSee /api/vehicle-attributes for a complete list of vehicle attributes.\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, type, doors, make_id, make_model_id, and make_model_trim_id.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "make_model_trim_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "STRING",
                    "description": "",
                    "default": "asc"
                },
                {
                    "name": "year",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "verbose",
                    "type": "STRING",
                    "description": "Includes make, model and trim",
                    "default": "yes"
                },
                {
                    "name": "json",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "make_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "trim",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "",
                    "default": "id"
                },
                {
                    "name": "make_model_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "model",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "make",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "doors",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://car-api2.p.rapidapi.com/api/bodies\"\nquerystring = {\"make_model_trim_id\": \"\", \"direction\": \"asc\", \"year\": \"\", \"page\": \"\", \"verbose\": \"yes\", \"json\": \"\", \"make_id\": \"\", \"trim\": \"\", \"sort\": \"id\", \"make_model_id\": \"\", \"model\": \"\", \"make\": \"\", \"type\": \"\", \"limit\": \"\", \"doors\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://car-api2.p.rapidapi.com/api/bodies\"\nquerystring = {\"make_model_trim_id\": \"\", \"direction\": \"asc\", \"year\": \"\", \"page\": \"\", \"verbose\": \"yes\", \"json\": \"\", \"make_id\": \"\", \"trim\": \"\", \"sort\": \"id\", \"make_model_id\": \"\", \"model\": \"\", \"make\": \"\", \"type\": \"\", \"limit\": \"\", \"doors\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "exception": "InvalidSearchValueException",
                "message": "Search parameter value for `year` is invalid. Must be a positive number.",
                "url": "/api/bodies?verbose=yes&amp;model=&amp;sort=id&amp;page=&amp;make_id=&amp;make_model_id=&amp;trim=&amp;doors=&amp;make_model_trim_id=&amp;year=&amp;direction=asc&amp;json=&amp;limit=&amp;make=&amp;type=",
                "code": 400
            },
            "statuscode": 200,
            "schema": {
                "properties": {
                    "_embedded": {
                        "items": {
                            "type": "object",
                            "allOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "self": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "format": "url"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "id": {
                                            "minLength": 1,
                                            "type": "integer",
                                            "format": "int64",
                                            "minimum": -9223372036854776000,
                                            "maximum": 9223372036854776000
                                        },
                                        "make_model_trim_id": {
                                            "minLength": 1,
                                            "type": "integer",
                                            "format": "int64",
                                            "minimum": -9223372036854776000,
                                            "maximum": 9223372036854776000
                                        },
                                        "type": {
                                            "minLength": 1,
                                            "maxLength": 32,
                                            "type": "string",
                                            "enum": [
                                                "Cargo Van",
                                                "Convertible",
                                                "Coupe",
                                                "Ext Van",
                                                "Hatchback",
                                                "Minivan",
                                                "Passenger Van",
                                                "Sedan",
                                                "SUV",
                                                "Truck (Access Cab)",
                                                "Truck (Cab Plus)",
                                                "Truck (Club Cab)",
                                                "Truck (Crew Cab)",
                                                "Truck (CrewMax)",
                                                "Truck (Double Cab)",
                                                "Truck (Extended Cab)",
                                                "Truck (King Cab)",
                                                "Truck (Mega Cab)",
                                                "Truck (Quad Cab)",
                                                "Truck (Regular Cab)",
                                                "Truck (SuperCab)",
                                                "Truck (SuperCrew)",
                                                "Truck (Xtracab)",
                                                "Van",
                                                "Wagon"
                                            ]
                                        },
                                        "doors": {
                                            "type": "integer",
                                            "format": "int32",
                                            "minimum": -2147483648,
                                            "maximum": 2147483647
                                        },
                                        "length": {
                                            "type": "number",
                                            "format": "float",
                                            "minimum": -3.402823669209385e+38,
                                            "maximum": 3.402823669209385e+38
                                        },
                                        "width": {
                                            "type": "number",
                                            "format": "float",
                                            "minimum": -3.402823669209385e+38,
                                            "maximum": 3.402823669209385e+38
                                        },
                                        "seats": {
                                            "type": "integer",
                                            "format": "int32",
                                            "minimum": -2147483648,
                                            "maximum": 2147483647
                                        },
                                        "height": {
                                            "type": "number",
                                            "format": "float",
                                            "minimum": -3.402823669209385e+38,
                                            "maximum": 3.402823669209385e+38
                                        },
                                        "wheel_base": {
                                            "type": "number",
                                            "format": "float",
                                            "minimum": -3.402823669209385e+38,
                                            "maximum": 3.402823669209385e+38
                                        },
                                        "front_track": {
                                            "type": "number",
                                            "format": "float",
                                            "minimum": -3.402823669209385e+38,
                                            "maximum": 3.402823669209385e+38
                                        },
                                        "rear_track": {
                                            "type": "number",
                                            "format": "float",
                                            "minimum": -3.402823669209385e+38,
                                            "maximum": 3.402823669209385e+38
                                        },
                                        "ground_clearance": {
                                            "type": "number",
                                            "format": "float",
                                            "minimum": -3.402823669209385e+38,
                                            "maximum": 3.402823669209385e+38
                                        },
                                        "cargo_capacity": {
                                            "type": "number",
                                            "format": "float",
                                            "minimum": -3.402823669209385e+38,
                                            "maximum": 3.402823669209385e+38
                                        },
                                        "max_cargo_capacity": {
                                            "type": "number",
                                            "format": "float",
                                            "minimum": -3.402823669209385e+38,
                                            "maximum": 3.402823669209385e+38
                                        },
                                        "curb_weight": {
                                            "type": "integer",
                                            "format": "int64",
                                            "minimum": -9223372036854776000,
                                            "maximum": 9223372036854776000
                                        },
                                        "gross_weight": {
                                            "type": "integer",
                                            "format": "int64",
                                            "minimum": -9223372036854776000,
                                            "maximum": 9223372036854776000
                                        },
                                        "max_payload": {
                                            "type": "integer",
                                            "format": "int64",
                                            "minimum": -9223372036854776000,
                                            "maximum": 9223372036854776000
                                        },
                                        "max_towing_capacity": {
                                            "type": "integer",
                                            "format": "int64",
                                            "minimum": -9223372036854776000,
                                            "maximum": 9223372036854776000
                                        }
                                    },
                                    "type": "object",
                                    "description": ""
                                }
                            ]
                        },
                        "type": "array"
                    }
                },
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "links": {
                                "type": "object",
                                "properties": {
                                    "self": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        }
                                    },
                                    "next": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        }
                                    },
                                    "prev": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        }
                                    },
                                    "first": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        }
                                    },
                                    "properties": {
                                        "href": {
                                            "type": "string",
                                            "format": "url",
                                            "example": "/collection?page=:number"
                                        }
                                    }
                                },
                                "last": {
                                    "type": "object",
                                    "properties": {
                                        "href": {
                                            "type": "string",
                                            "format": "url",
                                            "example": "/collection?page=:number"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "Years",
            "url": "https://car-api2.p.rapidapi.com/api/years",
            "description": "For complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"make\", \"op\": \"in\", \"val\": [\"Scion\", \"Tesla\"]}]`\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed search fields are: `year`, `make`, `model`, `trim`, `make_id`, and `make_model_id`.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "make_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "make",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "year",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "json",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "make_model_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "model",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "trim",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://car-api2.p.rapidapi.com/api/years\"\nquerystring = {\"make_id\": \"\", \"make\": \"\", \"year\": \"\", \"json\": \"\", \"make_model_id\": \"\", \"model\": \"\", \"trim\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://car-api2.p.rapidapi.com/api/years\"\nquerystring = {\"make_id\": \"\", \"make\": \"\", \"year\": \"\", \"json\": \"\", \"make_model_id\": \"\", \"model\": \"\", \"trim\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "exception": "InvalidSearchValueException",
                "message": "Search parameter value for `year` is invalid. Must be a positive number.",
                "url": "/api/years?json=&amp;year=&amp;make=&amp;make_id=&amp;trim=&amp;make_model_id=&amp;model=",
                "code": 400
            },
            "statuscode": 200,
            "schema": {
                "allOf": [
                    {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    }
                ]
            }
        },
        {
            "name": "Trims",
            "url": "https://car-api2.p.rapidapi.com/api/trims",
            "description": "To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"year\", \"op\": \">=\", \"val\": 2010}, {\"field\": \"year\", \"op\": \"<=\", \"val\": 2020}]`\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, bodies.type, engines.cam_type, engines.cylinders, engines.drive_type, engines.engine_type, engines.fuel_type, engines.transmission, engines.valve_timing, engines.valves, make_id, make_model_id, make_model_trim_id, created, and modified.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "make_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "STRING",
                    "description": "",
                    "default": "asc"
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "",
                    "default": "id"
                },
                {
                    "name": "year",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "model",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "trim",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "make_model_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "verbose",
                    "type": "STRING",
                    "description": "Includes make, model and trim",
                    "default": "yes"
                },
                {
                    "name": "make",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "json",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://car-api2.p.rapidapi.com/api/trims\"\nquerystring = {\"make_id\": \"\", \"limit\": \"\", \"direction\": \"asc\", \"sort\": \"id\", \"year\": \"\", \"model\": \"\", \"page\": \"\", \"trim\": \"\", \"make_model_id\": \"\", \"verbose\": \"yes\", \"make\": \"\", \"json\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://car-api2.p.rapidapi.com/api/trims\"\nquerystring = {\"make_id\": \"\", \"limit\": \"\", \"direction\": \"asc\", \"sort\": \"id\", \"year\": \"\", \"model\": \"\", \"page\": \"\", \"trim\": \"\", \"make_model_id\": \"\", \"verbose\": \"yes\", \"make\": \"\", \"json\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "exception": "InvalidSearchValueException",
                "message": "Search parameter value for `year` is invalid. Must be a positive number.",
                "url": "/api/trims?verbose=yes&amp;sort=id&amp;page=&amp;make_id=&amp;make_model_id=&amp;trim=&amp;year=&amp;direction=asc&amp;limit=&amp;json=&amp;make=&amp;model=",
                "code": 400
            },
            "statuscode": 1,
            "schema": ""
        },
        {
            "name": "Interior Colors",
            "url": "https://car-api2.p.rapidapi.com/api/interior-colors",
            "description": "To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n[{\"field\": \"name\", \"op\": \"in\", \"val\": [\"red\", \"blue\"]}]\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, name, rgb, make_id, make_model_id, and make_model_trim_i",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "model",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "trim",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "STRING",
                    "description": "",
                    "default": "asc"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "make_model_trim_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "year",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "rgb",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "",
                    "default": "id"
                },
                {
                    "name": "verbose",
                    "type": "STRING",
                    "description": "Includes make, model and trim",
                    "default": "yes"
                },
                {
                    "name": "json",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "make_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "make",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "make_model_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://car-api2.p.rapidapi.com/api/interior-colors\"\nquerystring = {\"model\": \"\", \"name\": \"\", \"trim\": \"\", \"page\": \"\", \"direction\": \"asc\", \"limit\": \"\", \"make_model_trim_id\": \"\", \"year\": \"\", \"rgb\": \"\", \"sort\": \"id\", \"verbose\": \"yes\", \"json\": \"\", \"make_id\": \"\", \"make\": \"\", \"make_model_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://car-api2.p.rapidapi.com/api/interior-colors\"\nquerystring = {\"model\": \"\", \"name\": \"\", \"trim\": \"\", \"page\": \"\", \"direction\": \"asc\", \"limit\": \"\", \"make_model_trim_id\": \"\", \"year\": \"\", \"rgb\": \"\", \"sort\": \"id\", \"verbose\": \"yes\", \"json\": \"\", \"make_id\": \"\", \"make\": \"\", \"make_model_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "exception": "InvalidSearchValueException",
                "message": "Search parameter value for `year` is invalid. Must be a positive number.",
                "url": "/api/interior-colors?verbose=yes&amp;make_id=&amp;sort=id&amp;page=&amp;name=&amp;make_model_id=&amp;json=&amp;trim=&amp;make_model_trim_id=&amp;rgb=&amp;direction=asc&amp;year=&amp;limit=&amp;make=&amp;model=",
                "code": 400
            },
            "statuscode": 200,
            "schema": {
                "properties": {
                    "_embedded": {
                        "items": {
                            "type": "object",
                            "allOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "self": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "format": "url"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "id": {
                                            "minLength": 1,
                                            "type": "integer",
                                            "format": "int64",
                                            "minimum": -9223372036854776000,
                                            "maximum": 9223372036854776000
                                        },
                                        "make_model_trim_id": {
                                            "minLength": 1,
                                            "type": "integer",
                                            "format": "int64",
                                            "minimum": -9223372036854776000,
                                            "maximum": 9223372036854776000
                                        },
                                        "name": {
                                            "minLength": 1,
                                            "maxLength": 128,
                                            "type": "string"
                                        },
                                        "rgb": {
                                            "maxLength": 16,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "description": ""
                                }
                            ]
                        },
                        "type": "array"
                    }
                },
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "links": {
                                "type": "object",
                                "properties": {
                                    "self": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        }
                                    },
                                    "next": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        }
                                    },
                                    "prev": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        }
                                    },
                                    "first": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        }
                                    },
                                    "properties": {
                                        "href": {
                                            "type": "string",
                                            "format": "url",
                                            "example": "/collection?page=:number"
                                        }
                                    }
                                },
                                "last": {
                                    "type": "object",
                                    "properties": {
                                        "href": {
                                            "type": "string",
                                            "format": "url",
                                            "example": "/collection?page=:number"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "Exterior Colors",
            "url": "https://car-api2.p.rapidapi.com/api/exterior-colors",
            "description": "To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n[{\"field\": \"name\", \"op\": \"in\", \"val\": [\"red\", \"blue\"]}]\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, name, rgb, make_id, make_model_id, and make_model_trim_i",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "trim",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "make_model_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "",
                    "default": "id"
                },
                {
                    "name": "verbose",
                    "type": "STRING",
                    "description": "Includes make, model and trim",
                    "default": "yes"
                },
                {
                    "name": "rgb",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "STRING",
                    "description": "",
                    "default": "asc"
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "make_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "make",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "year",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "model",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "make_model_trim_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "json",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://car-api2.p.rapidapi.com/api/exterior-colors\"\nquerystring = {\"trim\": \"\", \"make_model_id\": \"\", \"sort\": \"id\", \"verbose\": \"yes\", \"rgb\": \"\", \"limit\": \"\", \"direction\": \"asc\", \"name\": \"\", \"make_id\": \"\", \"make\": \"\", \"year\": \"\", \"model\": \"\", \"make_model_trim_id\": \"\", \"page\": \"\", \"json\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://car-api2.p.rapidapi.com/api/exterior-colors\"\nquerystring = {\"trim\": \"\", \"make_model_id\": \"\", \"sort\": \"id\", \"verbose\": \"yes\", \"rgb\": \"\", \"limit\": \"\", \"direction\": \"asc\", \"name\": \"\", \"make_id\": \"\", \"make\": \"\", \"year\": \"\", \"model\": \"\", \"make_model_trim_id\": \"\", \"page\": \"\", \"json\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "exception": "InvalidSearchValueException",
                "message": "Search parameter value for `year` is invalid. Must be a positive number.",
                "url": "/api/exterior-colors?verbose=yes&amp;make_model_trim_id=&amp;sort=id&amp;page=&amp;name=&amp;make_model_id=&amp;limit=&amp;trim=&amp;make_id=&amp;year=&amp;direction=asc&amp;rgb=&amp;json=&amp;make=&amp;model=",
                "code": 400
            },
            "statuscode": 200,
            "schema": {
                "properties": {
                    "_embedded": {
                        "items": {
                            "type": "object",
                            "allOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "self": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "format": "url"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "id": {
                                            "minLength": 1,
                                            "type": "integer",
                                            "format": "int64",
                                            "minimum": -9223372036854776000,
                                            "maximum": 9223372036854776000
                                        },
                                        "make_model_trim_id": {
                                            "minLength": 1,
                                            "type": "integer",
                                            "format": "int64",
                                            "minimum": -9223372036854776000,
                                            "maximum": 9223372036854776000
                                        },
                                        "name": {
                                            "minLength": 1,
                                            "maxLength": 128,
                                            "type": "string"
                                        },
                                        "rgb": {
                                            "maxLength": 16,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "description": ""
                                }
                            ]
                        },
                        "type": "array"
                    }
                },
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "links": {
                                "type": "object",
                                "properties": {
                                    "self": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        }
                                    },
                                    "next": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        }
                                    },
                                    "prev": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        }
                                    },
                                    "first": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        }
                                    },
                                    "properties": {
                                        "href": {
                                            "type": "string",
                                            "format": "url",
                                            "example": "/collection?page=:number"
                                        }
                                    }
                                },
                                "last": {
                                    "type": "object",
                                    "properties": {
                                        "href": {
                                            "type": "string",
                                            "format": "url",
                                            "example": "/collection?page=:number"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "Makes",
            "url": "https://car-api2.p.rapidapi.com/api/makes",
            "description": "Search makes by name and year.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "STRING",
                    "description": "",
                    "default": "asc"
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "",
                    "default": "id"
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "make",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "year",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://car-api2.p.rapidapi.com/api/makes\"\nquerystring = {\"limit\": \"\", \"direction\": \"asc\", \"sort\": \"id\", \"page\": \"\", \"make\": \"\", \"year\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://car-api2.p.rapidapi.com/api/makes\"\nquerystring = {\"limit\": \"\", \"direction\": \"asc\", \"sort\": \"id\", \"page\": \"\", \"make\": \"\", \"year\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "exception": "InvalidSearchValueException",
                "message": "Search parameter value for `year` is invalid. Must be a positive number.",
                "url": "/api/makes?year=&amp;direction=asc&amp;page=&amp;limit=&amp;make=&amp;sort=id",
                "code": 400
            },
            "statuscode": 200,
            "schema": {
                "properties": {
                    "_embedded": {
                        "items": {
                            "type": "object",
                            "allOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "self": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "format": "url"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "id": {
                                            "minLength": 1,
                                            "type": "integer",
                                            "format": "int64",
                                            "minimum": -9223372036854776000,
                                            "maximum": 9223372036854776000
                                        },
                                        "name": {
                                            "minLength": 1,
                                            "maxLength": 32,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "description": ""
                                }
                            ]
                        },
                        "type": "array"
                    }
                },
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "links": {
                                "type": "object",
                                "properties": {
                                    "self": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        }
                                    },
                                    "next": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        }
                                    },
                                    "prev": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        }
                                    },
                                    "first": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        }
                                    },
                                    "properties": {
                                        "href": {
                                            "type": "string",
                                            "format": "url",
                                            "example": "/collection?page=:number"
                                        }
                                    }
                                },
                                "last": {
                                    "type": "object",
                                    "properties": {
                                        "href": {
                                            "type": "string",
                                            "format": "url",
                                            "example": "/collection?page=:number"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "VIN Decoder",
            "url": "https://car-api2.p.rapidapi.com/api/vin/KNDJ23AU4N7154467",
            "description": "Decodes Vehicle Identification Numbers. The result will include a list of specifications in the specs property and a list of all possible trims matching the VIN in the trims property.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "vin",
                    "type": "string",
                    "description": "",
                    "default": "KNDJ23AU4N7154467"
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://car-api2.p.rapidapi.com/api/vin/KNDJ23AU4N7154467\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://car-api2.p.rapidapi.com/api/vin/{vin}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "test_endpoint": {
                "year": 2022,
                "make": "KIA",
                "model": "Soul",
                "trim": "LX, S, X Line",
                "specs": {
                    "suggested_vin": "",
                    "possible_values": "",
                    "vehicle_descriptor": "KNDJ23AU*N7",
                    "destination_market": null,
                    "manufacturer_name": "KIA CORPORATION",
                    "plant_city": "GWANG-JU",
                    "series": null,
                    "vehicle_type": "MULTIPURPOSE PASSENGER VEHICLE (MPV)",
                    "plant_country": "SOUTH KOREA",
                    "plant_company_name": null,
                    "plant_state": null,
                    "trim2": null,
                    "series2": "Wagon Body Style",
                    "note": null,
                    "base_price": null,
                    "non_land_use": null,
                    "body_class": "Sport Utility Vehicle (SUV)/Multi-Purpose Vehicle (MPV)",
                    "doors": null,
                    "windows": null,
                    "wheel_base_type": null,
                    "track_width_inches": null,
                    "gross_vehicle_weight_rating_from": "Class 1C: 4,001 - 5,000 lb (1,814 - 2,268 kg)",
                    "bed_length_inches": null,
                    "curb_weight_pounds": null,
                    "wheel_base_inches_from": null,
                    "wheel_base_inches_to": null,
                    "gross_combination_weight_rating_from": null,
                    "gross_combination_weight_rating_to": null,
                    "gross_vehicle_weight_rating_to": null,
                    "bed_type": null,
                    "cab_type": null,
                    "trailer_type_connection": "Not Applicable",
                    "trailer_body_type": "Not Applicable",
                    "trailer_length_feet": null,
                    "other_trailer_info": null,
                    "number_of_wheels": null,
                    "wheel_size_front_inches": null,
                    "wheel_size_rear_inches": null,
                    "entertainment_system": null,
                    "steering_location": null,
                    "number_of_seats": "5",
                    "number_of_seat_rows": "2",
                    "transmission_style": null,
                    "transmission_speeds": null,
                    "drive_type": "4x2",
                    "axles": null,
                    "axle_configuration": null,
                    "brake_system_type": null,
                    "brake_system_description": null,
                    "other_battery_info": null,
                    "battery_type": null,
                    "number_of_battery_cells_per_module": null,
                    "battery_current_amps_from": null,
                    "battery_voltage_volts_from": null,
                    "battery_energy_kwh_from": null,
                    "ev_drive_unit": null,
                    "battery_current_amps_to": null,
                    "battery_voltage_volts_to": null,
                    "battery_energy_kwh_to": null,
                    "number_of_battery_modules_per_pack": null,
                    "number_of_battery_packs_per_vehicle": null,
                    "charger_level": null,
                    "charger_power_kw": null,
                    "engine_number_of_cylinders": "4",
                    "displacement_cc": "2000.0",
                    "displacement_ci": "122.04748818946",
                    "displacement_l": "2.0",
                    "engine_stroke_cycles": null,
                    "engine_model": "MPI NU",
                    "engine_power_kw": "109.6179",
                    "fuel_type_primary": "Gasoline",
                    "valve_train_design": "Dual Overhead Cam (DOHC)",
                    "engine_configuration": null,
                    "fuel_type_secondary": null,
                    "fuel_delivery_fuel_injection_type": "Multipoint Fuel Injection (MPFI)",
                    "engine_brake_hp_from": "147",
                    "cooling_type": null,
                    "engine_brake_hp_to": null,
                    "electrification_level": null,
                    "other_engine_info": null,
                    "turbo": null,
                    "top_speed_mph": null,
                    "engine_manufacturer": "KMC",
                    "pretensioner": null,
                    "seat_belt_type": "Manual",
                    "other_restraint_system_info": "Seat Belt: All Positions",
                    "curtain_air_bag_locations": "1st and 2nd Rows",
                    "seat_cushion_air_bag_locations": null,
                    "front_air_bag_locations": "1st Row (Driver and Passenger)",
                    "knee_air_bag_locations": null,
                    "side_air_bag_locations": "1st Row (Driver and Passenger)",
                    "anti_lock_braking_system_abs": "Standard",
                    "electronic_stability_control_esc": "Standard",
                    "traction_control": "Standard",
                    "tire_pressure_monitoring_system_tpms_type": "Direct",
                    "active_safety_system_note": null,
                    "auto_reverse_system_for_windows_and_sunroofs": "Standard",
                    "automatic_pedestrian_alerting_sound_for_hybrid_and_ev_only": null,
                    "event_data_recorder_edr": null,
                    "keyless_ignition": null,
                    "sae_automation_level_from": null,
                    "sae_automation_level_to": null,
                    "ncsa_body_type": "Station Wagon (excluding van and truck based)",
                    "ncsa_make": "KIA",
                    "ncsa_model": "Soul",
                    "ncsa_note": null,
                    "adaptive_cruise_control_acc": null,
                    "crash_imminent_braking_cib": null,
                    "blind_spot_warning_bsw": null,
                    "forward_collision_warning_fcw": null,
                    "lane_departure_warning_ldw": null,
                    "lane_keeping_assistance_lka": null,
                    "backup_camera": "Standard",
                    "parking_assist": null,
                    "bus_length_feet": null,
                    "bus_floor_configuration_type": "Not Applicable",
                    "bus_type": "Not Applicable",
                    "other_bus_info": null,
                    "custom_motorcycle_type": "Not Applicable",
                    "motorcycle_suspension_type": "Not Applicable",
                    "motorcycle_chassis_type": "Not Applicable",
                    "other_motorcycle_info": null,
                    "dynamic_brake_support_dbs": null,
                    "pedestrian_automatic_emergency_braking_paeb": null,
                    "automatic_crash_notification_acn_advanced_automatic_crash_notification_aacn": null,
                    "daytime_running_light_drl": "Standard",
                    "headlamp_light_source": "Halogen",
                    "semiautomatic_headlamp_beam_switching": null,
                    "adaptive_driving_beam_adb": null,
                    "rear_cross_traffic_alert": null,
                    "rear_automatic_emergency_braking": null,
                    "blind_spot_intervention_bsi": null,
                    "lane_centering_assistance": null
                },
                "trims": [
                    {
                        "id": 2236,
                        "make_model_id": 56,
                        "year": 2022,
                        "name": "LX",
                        "description": "LX 4dr Wagon (2.0L 4cyl CVT)",
                        "msrp": 19290,
                        "invoice": 18614,
                        "created": "2022-08-30T22:20:20-04:00",
                        "modified": "2022-08-30T22:20:20-04:00"
                    },
                    {
                        "id": 2241,
                        "make_model_id": 56,
                        "year": 2022,
                        "name": "GT-Line",
                        "description": "GT-Line 4dr Wagon (2.0L 4cyl CVT)",
                        "msrp": 22690,
                        "invoice": 21668,
                        "created": "2022-08-30T22:20:20-04:00",
                        "modified": "2022-08-30T22:20:20-04:00"
                    },
                    {
                        "id": 2240,
                        "make_model_id": 56,
                        "year": 2022,
                        "name": "EX",
                        "description": "EX 4dr Wagon (2.0L 4cyl CVT)",
                        "msrp": 23590,
                        "invoice": 22529,
                        "created": "2022-08-30T22:20:20-04:00",
                        "modified": "2022-08-30T22:20:20-04:00"
                    },
                    {
                        "id": 2239,
                        "make_model_id": 56,
                        "year": 2022,
                        "name": "Turbo",
                        "description": "Turbo 4dr Wagon (1.6L 4cyl Turbo 7AM)",
                        "msrp": 27890,
                        "invoice": 26634,
                        "created": "2022-08-30T22:20:20-04:00",
                        "modified": "2022-08-30T22:20:20-04:00"
                    },
                    {
                        "id": 2237,
                        "make_model_id": 56,
                        "year": 2022,
                        "name": "X-Line",
                        "description": "X-Line 4dr Wagon (2.0L 4cyl CVT)",
                        "msrp": 22690,
                        "invoice": 21895,
                        "created": "2022-08-30T22:20:20-04:00",
                        "modified": "2022-08-30T22:20:20-04:00"
                    },
                    {
                        "id": 2238,
                        "make_model_id": 56,
                        "year": 2022,
                        "name": "S",
                        "description": "S 4dr Wagon (2.0L 4cyl CVT)",
                        "msrp": 21590,
                        "invoice": 20835,
                        "created": "2022-08-30T22:20:20-04:00",
                        "modified": "2022-08-30T22:20:20-04:00"
                    }
                ]
            }
        },
        {
            "name": "Models",
            "url": "https://car-api2.p.rapidapi.com/api/models",
            "description": "Search models by year, make, model, trim or make_id.\n\nTo include the models make in the description request with the query parameter as `verbose=yes`.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"make\", \"op\": \"in\", \"val\": [\"Ford\", \"Acura\"]}, {\"field\": \"year\", \"op\": \">=\", \"val\": 2010}]\n\nAllowed json operators are: =, !=, >, <, >=, <=, in, not in, like, not like, not null, and is null.\n\nAllowed json search fields are: year, make, model, make_id, created, and modified.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "make_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "year",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "",
                    "default": "id"
                },
                {
                    "name": "make",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "model",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "direction",
                    "type": "STRING",
                    "description": "",
                    "default": "asc"
                },
                {
                    "name": "verbose",
                    "type": "STRING",
                    "description": "Includes make, model and trim",
                    "default": "yes"
                }
            ],
            "code": "import requests\n\nurl = \"https://car-api2.p.rapidapi.com/api/models\"\nquerystring = {\"limit\": \"\", \"make_id\": \"\", \"year\": \"\", \"page\": \"\", \"sort\": \"id\", \"make\": \"\", \"model\": \"\", \"direction\": \"asc\", \"verbose\": \"yes\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://car-api2.p.rapidapi.com/api/models\"\nquerystring = {\"limit\": \"\", \"make_id\": \"\", \"year\": \"\", \"page\": \"\", \"sort\": \"id\", \"make\": \"\", \"model\": \"\", \"direction\": \"asc\", \"verbose\": \"yes\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "exception": "InvalidSearchValueException",
                "message": "Search parameter value for `year` is invalid. Must be a positive number.",
                "url": "/api/models?verbose=yes&amp;sort=id&amp;page=&amp;make_id=&amp;year=&amp;direction=asc&amp;limit=&amp;make=&amp;model=",
                "code": 400
            },
            "statuscode": 200,
            "schema": {
                "properties": {
                    "_embedded": {
                        "items": {
                            "type": "object",
                            "allOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "self": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "format": "url"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "id": {
                                            "minLength": 1,
                                            "type": "integer",
                                            "format": "int64",
                                            "minimum": -9223372036854776000,
                                            "maximum": 9223372036854776000
                                        },
                                        "make_id": {
                                            "minLength": 1,
                                            "type": "integer",
                                            "format": "int64",
                                            "minimum": -9223372036854776000,
                                            "maximum": 9223372036854776000
                                        },
                                        "name": {
                                            "minLength": 1,
                                            "maxLength": 64,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "description": ""
                                }
                            ]
                        },
                        "type": "array"
                    }
                },
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "links": {
                                "type": "object",
                                "properties": {
                                    "self": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        }
                                    },
                                    "next": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        }
                                    },
                                    "prev": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        }
                                    },
                                    "first": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        }
                                    },
                                    "properties": {
                                        "href": {
                                            "type": "string",
                                            "format": "url",
                                            "example": "/collection?page=:number"
                                        }
                                    }
                                },
                                "last": {
                                    "type": "object",
                                    "properties": {
                                        "href": {
                                            "type": "string",
                                            "format": "url",
                                            "example": "/collection?page=:number"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "Vehicle Attributes",
            "url": "https://car-api2.p.rapidapi.com/api/vehicle-attributes",
            "description": "Returns all options for given attribute.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "attribute",
                    "type": "STRING",
                    "description": "The attribute options to be returned",
                    "default": "bodies.type"
                }
            ],
            "code": "import requests\n\nurl = \"https://car-api2.p.rapidapi.com/api/vehicle-attributes\"\nquerystring = {\"attribute\": \"bodies.type\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://car-api2.p.rapidapi.com/api/vehicle-attributes\"\nquerystring = {\"attribute\": \"bodies.type\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": [
                "Cargo Van",
                "Convertible",
                "Coupe",
                "Ext Van",
                "Hatchback",
                "Minivan",
                "Passenger Van",
                "Sedan",
                "SUV",
                "Truck (Access Cab)",
                "Truck (Cab Plus)",
                "Truck (Club Cab)",
                "Truck (Crew Cab)",
                "Truck (CrewMax)",
                "Truck (Double Cab)",
                "Truck (Extended Cab)",
                "Truck (King Cab)",
                "Truck (Mega Cab)",
                "Truck (Quad Cab)",
                "Truck (Regular Cab)",
                "Truck (SuperCab)",
                "Truck (SuperCrew)",
                "Truck (Xtracab)",
                "Van",
                "Wagon"
            ],
            "statuscode": 200,
            "schema": {
                "allOf": [
                    {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                ]
            }
        },
        {
            "name": "Mileages",
            "url": "https://car-api2.p.rapidapi.com/api/mileages",
            "description": "To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n[{\"field\": \"combined_mpg\", \"op\": \">=\", \"val\": 20}, {\"field\": \"combined_mpg\", \"op\": \"<=\", \"val\": 30}]\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, combined_mpg, epa_city_mpg, epa_highway_mpg, range_city, range_highway, make_id, make_model_id, and make_model_trim_id.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "make_model_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "make_model_trim_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "trim",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "json",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "range_highway",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "",
                    "default": "id"
                },
                {
                    "name": "direction",
                    "type": "STRING",
                    "description": "",
                    "default": "asc"
                },
                {
                    "name": "range_city",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "combined_mpg",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "verbose",
                    "type": "STRING",
                    "description": "Includes make, model and trim",
                    "default": "yes"
                },
                {
                    "name": "epa_highway_mpg",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "epa_city_mpg",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "model",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "year",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "make_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "make",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "code": "import requests\n\nurl = \"https://car-api2.p.rapidapi.com/api/mileages\"\nquerystring = {\"make_model_id\": \"\", \"limit\": \"\", \"make_model_trim_id\": \"\", \"trim\": \"\", \"json\": \"\", \"range_highway\": \"\", \"sort\": \"id\", \"direction\": \"asc\", \"range_city\": \"\", \"page\": \"\", \"combined_mpg\": \"\", \"verbose\": \"yes\", \"epa_highway_mpg\": \"\", \"epa_city_mpg\": \"\", \"model\": \"\", \"year\": \"\", \"make_id\": \"\", \"make\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://car-api2.p.rapidapi.com/api/mileages\"\nquerystring = {\"make_model_id\": \"\", \"limit\": \"\", \"make_model_trim_id\": \"\", \"trim\": \"\", \"json\": \"\", \"range_highway\": \"\", \"sort\": \"id\", \"direction\": \"asc\", \"range_city\": \"\", \"page\": \"\", \"combined_mpg\": \"\", \"verbose\": \"yes\", \"epa_highway_mpg\": \"\", \"epa_city_mpg\": \"\", \"model\": \"\", \"year\": \"\", \"make_id\": \"\", \"make\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "exception": "InvalidSearchValueException",
                "message": "Search parameter value for `year` is invalid. Must be a positive number.",
                "url": "/api/mileages?page=&amp;make_id=&amp;direction=asc&amp;range_city=&amp;make_model_trim_id=&amp;range_highway=&amp;verbose=yes&amp;sort=id&amp;make_model_id=&amp;json=&amp;epa_highway_mpg=&amp;combined_mpg=&amp;year=&amp;limit=&amp;epa_city_mpg=&amp;trim=&amp;make=&amp;model=",
                "code": 400
            },
            "statuscode": 200,
            "schema": {
                "properties": {
                    "_embedded": {
                        "items": {
                            "type": "object",
                            "allOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "self": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string",
                                                            "format": "url"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "properties": {
                                        "id": {
                                            "minLength": 1,
                                            "type": "integer",
                                            "format": "int64",
                                            "minimum": -9223372036854776000,
                                            "maximum": 9223372036854776000
                                        },
                                        "make_model_trim_id": {
                                            "minLength": 1,
                                            "type": "integer",
                                            "format": "int64",
                                            "minimum": -9223372036854776000,
                                            "maximum": 9223372036854776000
                                        },
                                        "fuel_tank_capacity": {
                                            "type": "number",
                                            "format": "float",
                                            "minimum": -3.402823669209385e+38,
                                            "maximum": 3.402823669209385e+38
                                        },
                                        "combined_mpg": {
                                            "type": "integer",
                                            "format": "int32",
                                            "minimum": -2147483648,
                                            "maximum": 2147483647
                                        },
                                        "epa_city_mpg": {
                                            "type": "integer",
                                            "format": "int32",
                                            "minimum": -2147483648,
                                            "maximum": 2147483647
                                        },
                                        "epa_highway_mpg": {
                                            "type": "integer",
                                            "format": "int32",
                                            "minimum": -2147483648,
                                            "maximum": 2147483647
                                        },
                                        "range_city": {
                                            "type": "integer",
                                            "format": "int32",
                                            "minimum": -2147483648,
                                            "maximum": 2147483647
                                        },
                                        "range_highway": {
                                            "type": "integer",
                                            "format": "int32",
                                            "minimum": -2147483648,
                                            "maximum": 2147483647
                                        }
                                    },
                                    "type": "object",
                                    "description": "EPA miles per gallon, ranges etc."
                                }
                            ]
                        },
                        "type": "array"
                    }
                },
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "links": {
                                "type": "object",
                                "properties": {
                                    "self": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        }
                                    },
                                    "next": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        }
                                    },
                                    "prev": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        }
                                    },
                                    "first": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        }
                                    },
                                    "properties": {
                                        "href": {
                                            "type": "string",
                                            "format": "url",
                                            "example": "/collection?page=:number"
                                        }
                                    }
                                },
                                "last": {
                                    "type": "object",
                                    "properties": {
                                        "href": {
                                            "type": "string",
                                            "format": "url",
                                            "example": "/collection?page=:number"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "Trim View",
            "url": "https://car-api2.p.rapidapi.com/api/trims/{id}",
            "description": "Returns all data associated with the vehicle trim.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://car-api2.p.rapidapi.com/api/trims/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://car-api2.p.rapidapi.com/api/trims/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": {
                "exception": "MissingRouteException",
                "message": "Not Found",
                "url": "/api/trims/%7Bid%7D?id=",
                "code": 404
            },
            "statuscode": 1,
            "schema": ""
        }
    ],
    "standardized_name": "car_api"
}