{
    "product_id": "api_c06fca6a-6853-43f9-b5e3-3bba47be4966",
    "tool_description": "API for ALPR/ACCR and Vehicle detection",
    "home_url": "https://rapidapi.com/phenikaa-maas-phenikaa-maas-default/api/alpr-api/",
    "name": "ALPR API",
    "title": "ALPR API",
    "pricing": "FREEMIUM",
    "tool_name": "ALPR API",
    "score": {
        "avgServiceLevel": 100,
        "avgLatency": 1145,
        "avgSuccessRate": 100,
        "popularityScore": 8.1,
        "__typename": "Score"
    },
    "host": "alpr-api.p.rapidapi.com",
    "api_list": [
        {
            "name": "Face multiple embedding from url v3",
            "url": "https://alpr-api.p.rapidapi.com/v3/face/recognition/predict_multiple_from_url",
            "description": "Return vector embeddings satisfy that height and width of face object are greater than 90. Input is URL",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image_url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v3/face/recognition/predict_multiple_from_url\"\nquerystring = {\"image_url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v3/face/recognition/predict_multiple_from_url\"\nquerystring = {\"image_url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Face multiple embedding v3",
            "url": "https://alpr-api.p.rapidapi.com/v3/face/recognition/predict_multiple",
            "description": "Return vector embeddings satisfy that height and width of face object are greater than 90",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v3/face/recognition/predict_multiple\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v3/face/recognition/predict_multiple\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Face multiple embedding from url v2",
            "url": "https://alpr-api.p.rapidapi.com/v2/face/recognition/predict_multiple_from_url",
            "description": "Return vector embeddings satisfy that height and width of face object are greater than 90. Input is URL",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image_url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v2/face/recognition/predict_multiple_from_url\"\nquerystring = {\"image_url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v2/face/recognition/predict_multiple_from_url\"\nquerystring = {\"image_url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Face multiple embedding v2",
            "url": "https://alpr-api.p.rapidapi.com/v2/face/recognition/predict_multiple",
            "description": "Return vector embeddings satisfy that height and width of face object are greater than 90",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v2/face/recognition/predict_multiple\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v2/face/recognition/predict_multiple\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Face multiple embedding from url",
            "url": "https://alpr-api.p.rapidapi.com/v1/face/recognition/predict_multiple_from_url",
            "description": "Return vector embeddings satisfy that height and width of face object are greater than 90. Input is URL",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image_url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v1/face/recognition/predict_multiple_from_url\"\nquerystring = {\"image_url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v1/face/recognition/predict_multiple_from_url\"\nquerystring = {\"image_url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Face multiple embedding",
            "url": "https://alpr-api.p.rapidapi.com/v1/face/recognition/predict_multiple",
            "description": "Return vector embeddings satisfy that height and width of face object are greater than 90",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v1/face/recognition/predict_multiple\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v1/face/recognition/predict_multiple\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Face embedding from url",
            "url": "https://alpr-api.p.rapidapi.com/v1/face/recognition/predict_from_url",
            "description": "Return vector embedding of largest face in the image with Input is URL",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image_url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v1/face/recognition/predict_from_url\"\nquerystring = {\"image_url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v1/face/recognition/predict_from_url\"\nquerystring = {\"image_url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Face comparison from url v3",
            "url": "https://alpr-api.p.rapidapi.com/v3/face/recognition/compare_from_url",
            "description": "Compare between images of two people to see if they are the same person or not, with Input is URL",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image_url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "image_url_2",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v3/face/recognition/compare_from_url\"\nquerystring = {\"image_url\": \"\", \"image_url_2\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v3/face/recognition/compare_from_url\"\nquerystring = {\"image_url\": \"\", \"image_url_2\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Face embedding from url v3",
            "url": "https://alpr-api.p.rapidapi.com/v3/face/recognition/predict_from_url",
            "description": "Return vector embedding of largest face in the image with Input is URL",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image_url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v3/face/recognition/predict_from_url\"\nquerystring = {\"image_url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v3/face/recognition/predict_from_url\"\nquerystring = {\"image_url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Face comparison from url v2",
            "url": "https://alpr-api.p.rapidapi.com/v2/face/recognition/compare_from_url",
            "description": "Compare between images of two people to see if they are the same person or not, with Input is URL",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image_url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "image_url_2",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v2/face/recognition/compare_from_url\"\nquerystring = {\"image_url\": \"\", \"image_url_2\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v2/face/recognition/compare_from_url\"\nquerystring = {\"image_url\": \"\", \"image_url_2\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Face embedding from url v2",
            "url": "https://alpr-api.p.rapidapi.com/v2/face/recognition/predict_from_url",
            "description": "Return vector embedding of largest face in the image with Input is URL",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image_url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v2/face/recognition/predict_from_url\"\nquerystring = {\"image_url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v2/face/recognition/predict_from_url\"\nquerystring = {\"image_url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Face comparison from url",
            "url": "https://alpr-api.p.rapidapi.com/v1/face/recognition/compare_from_url",
            "description": "Compare between images of two people to see if they are the same person or not, with Input is URL",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image_url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "image_url_2",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v1/face/recognition/compare_from_url\"\nquerystring = {\"image_url\": \"\", \"image_url_2\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v1/face/recognition/compare_from_url\"\nquerystring = {\"image_url\": \"\", \"image_url_2\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "License Plate OCR China",
            "url": "https://alpr-api.p.rapidapi.com/v1/alpr/predict_alpr_china",
            "description": "only predict and ocr for China LP on images",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v1/alpr/predict_alpr_china\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v1/alpr/predict_alpr_china\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Student Card Extraction",
            "url": "https://alpr-api.p.rapidapi.com/v1/student_hub/{schoolID}/verify_card",
            "description": "To extract the StudentID and Name corresponding to the school's name.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "schoolID",
                    "type": "string",
                    "description": "only support [HCMUS, VLU]",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v1/student_hub/{schoolID}/verify_card\"\nquerystring = {\"image\": \"\", \"schoolID\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v1/student_hub/{schoolID}/verify_card\"\nquerystring = {\"image\": \"\", \"schoolID\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Face comparison v3",
            "url": "https://alpr-api.p.rapidapi.com/v3/face/recognition/compare",
            "description": "Compare between images of two people to see if they are the same person or not",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image_2",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "image",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v3/face/recognition/compare\"\nquerystring = {\"image_2\": \"\", \"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v3/face/recognition/compare\"\nquerystring = {\"image_2\": \"\", \"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Face embedding v3",
            "url": "https://alpr-api.p.rapidapi.com/v3/face/recognition/predict",
            "description": "Return vector embedding of largest face in the image",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v3/face/recognition/predict\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v3/face/recognition/predict\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Face embedding",
            "url": "https://alpr-api.p.rapidapi.com/v1/face/recognition/predict",
            "description": "Return vector embedding of largest face in the image",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v1/face/recognition/predict\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v1/face/recognition/predict\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Face comparison v2",
            "url": "https://alpr-api.p.rapidapi.com/v2/face/recognition/compare",
            "description": "Compare between images of two people to see if they are the same person or not",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image_2",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "image",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v2/face/recognition/compare\"\nquerystring = {\"image_2\": \"\", \"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v2/face/recognition/compare\"\nquerystring = {\"image_2\": \"\", \"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Face embedding v2",
            "url": "https://alpr-api.p.rapidapi.com/v2/face/recognition/predict",
            "description": "Return vector embedding of largest face in the image",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v2/face/recognition/predict\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v2/face/recognition/predict\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Face comparison",
            "url": "https://alpr-api.p.rapidapi.com/v1/face/recognition/compare",
            "description": "Compare between images of two people to see if they are the same person or not",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "image_2",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v1/face/recognition/compare\"\nquerystring = {\"image\": \"\", \"image_2\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v1/face/recognition/compare\"\nquerystring = {\"image\": \"\", \"image_2\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "OCR Container Code",
            "url": "https://alpr-api.p.rapidapi.com/v1/port/predict_container_code",
            "description": "Detect Code and OCR them whether horizontally or vertically placed",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v1/port/predict_container_code\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v1/port/predict_container_code\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "Vehicle Type and License Plate OCR",
            "url": "https://alpr-api.p.rapidapi.com/v1/alpr/predict_vehicle",
            "description": "Return Bboxes, LP Texts and Vehicles' types",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v1/alpr/predict_vehicle\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v1/alpr/predict_vehicle\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        },
        {
            "name": "License Plate OCR",
            "url": "https://alpr-api.p.rapidapi.com/v1/alpr/predict_alpr",
            "description": "only predict and ocr for LP on images",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "image",
                    "type": "BINARY",
                    "description": "",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v1/alpr/predict_alpr\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "convert_code": "import requests\n\nurl = \"https://alpr-api.p.rapidapi.com/v1/alpr/predict_alpr\"\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpr-api.p.rapidapi.com\"\n        }\n\nresponse = requests.post(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "test_endpoint": ""
        }
    ]
}